Search.setIndex({"docnames": ["index", "reference/collectors", "reference/data", "reference/envs", "reference/generated/knowledge_base/DEBUGGING_RL", "reference/generated/knowledge_base/GYM", "reference/generated/knowledge_base/HABITAT", "reference/generated/knowledge_base/MUJOCO_INSTALLATION", "reference/generated/knowledge_base/PRO-TIPS", "reference/generated/knowledge_base/RESOURCES", "reference/generated/knowledge_base/VERSIONING_ISSUES", "reference/generated/knowledge_base/VIDEO_CUSTOMISATION", "reference/generated/torchrl.auto_unwrap_transformed_env", "reference/generated/torchrl.collectors.DataCollectorBase", "reference/generated/torchrl.collectors.MultiSyncDataCollector", "reference/generated/torchrl.collectors.MultiaSyncDataCollector", "reference/generated/torchrl.collectors.SyncDataCollector", "reference/generated/torchrl.collectors.aSyncDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector", "reference/generated/torchrl.collectors.distributed.RPCDataCollector", "reference/generated/torchrl.collectors.distributed.RayCollector", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher", "reference/generated/torchrl.collectors.utils.split_trajectories", "reference/generated/torchrl.data.AdaptiveKLController", "reference/generated/torchrl.data.Binary", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec", "reference/generated/torchrl.data.BinaryToDecimal", "reference/generated/torchrl.data.Bounded", "reference/generated/torchrl.data.BoundedTensorSpec", "reference/generated/torchrl.data.Categorical", "reference/generated/torchrl.data.Composite", "reference/generated/torchrl.data.CompositeSpec", "reference/generated/torchrl.data.ConstantKLController", "reference/generated/torchrl.data.DensifyReward", "reference/generated/torchrl.data.DiscreteTensorSpec", "reference/generated/torchrl.data.Flat2TED", "reference/generated/torchrl.data.H5Combine", "reference/generated/torchrl.data.H5Split", "reference/generated/torchrl.data.HashToInt", "reference/generated/torchrl.data.LLMData", "reference/generated/torchrl.data.LLMInput", "reference/generated/torchrl.data.LLMOutput", "reference/generated/torchrl.data.LazyStackedCompositeSpec", "reference/generated/torchrl.data.LazyStackedTensorSpec", "reference/generated/torchrl.data.MCTSForest", "reference/generated/torchrl.data.MultiCategorical", "reference/generated/torchrl.data.MultiDiscreteTensorSpec", "reference/generated/torchrl.data.MultiOneHot", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec", "reference/generated/torchrl.data.MultiStep", "reference/generated/torchrl.data.Nested2TED", "reference/generated/torchrl.data.NonTensor", "reference/generated/torchrl.data.NonTensorSpec", "reference/generated/torchrl.data.OneHot", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec", "reference/generated/torchrl.data.PairwiseDataset", "reference/generated/torchrl.data.PrioritizedReplayBuffer", "reference/generated/torchrl.data.PromptData", "reference/generated/torchrl.data.PromptTensorDictTokenizer", "reference/generated/torchrl.data.QueryModule", "reference/generated/torchrl.data.RandomProjectionHash", "reference/generated/torchrl.data.RayReplayBuffer", "reference/generated/torchrl.data.RemoteTensorDictReplayBuffer", "reference/generated/torchrl.data.ReplayBuffer", "reference/generated/torchrl.data.RewardData", "reference/generated/torchrl.data.RolloutFromModel", "reference/generated/torchrl.data.SipHash", "reference/generated/torchrl.data.Stacked", "reference/generated/torchrl.data.StackedComposite", "reference/generated/torchrl.data.TED2Flat", "reference/generated/torchrl.data.TED2Nested", "reference/generated/torchrl.data.TensorDictMap", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer", "reference/generated/torchrl.data.TensorDictReplayBuffer", "reference/generated/torchrl.data.TensorDictTokenizer", "reference/generated/torchrl.data.TensorMap", "reference/generated/torchrl.data.TensorSpec", "reference/generated/torchrl.data.TokenizedDatasetLoader", "reference/generated/torchrl.data.Tree", "reference/generated/torchrl.data.Unbounded", "reference/generated/torchrl.data.UnboundedContinuous", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec", "reference/generated/torchrl.data.UnboundedDiscrete", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec", "reference/generated/torchrl.data.check_no_exclusive_keys", "reference/generated/torchrl.data.consolidate_spec", "reference/generated/torchrl.data.contains_lazy_spec", "reference/generated/torchrl.data.create_infinite_iterator", "reference/generated/torchrl.data.get_dataloader", "reference/generated/torchrl.data.replay_buffers.FlatStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.H5StorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.ImmutableDatasetWriter", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage", "reference/generated/torchrl.data.replay_buffers.LazyStackStorage", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage", "reference/generated/torchrl.data.replay_buffers.ListStorage", "reference/generated/torchrl.data.replay_buffers.ListStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.NestedStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler", "reference/generated/torchrl.data.replay_buffers.PrioritizedSliceSampler", "reference/generated/torchrl.data.replay_buffers.RandomSampler", "reference/generated/torchrl.data.replay_buffers.ReplayBufferEnsemble", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.Sampler", "reference/generated/torchrl.data.replay_buffers.SamplerEnsemble", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.SliceSampler", "reference/generated/torchrl.data.replay_buffers.SliceSamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.Storage", "reference/generated/torchrl.data.replay_buffers.StorageCheckpointerBase", "reference/generated/torchrl.data.replay_buffers.StorageEnsemble", "reference/generated/torchrl.data.replay_buffers.StorageEnsembleCheckpointer", "reference/generated/torchrl.data.replay_buffers.TensorDictMaxValueWriter", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.TensorStorage", "reference/generated/torchrl.data.replay_buffers.TensorStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.Writer", "reference/generated/torchrl.data.replay_buffers.WriterEnsemble", "reference/generated/torchrl.envs.BraxEnv", "reference/generated/torchrl.envs.BraxWrapper", "reference/generated/torchrl.envs.ChessEnv", "reference/generated/torchrl.envs.DMControlEnv", "reference/generated/torchrl.envs.DMControlWrapper", "reference/generated/torchrl.envs.EnvBase", "reference/generated/torchrl.envs.EnvCreator", "reference/generated/torchrl.envs.EnvMetaData", "reference/generated/torchrl.envs.GymEnv", "reference/generated/torchrl.envs.GymLikeEnv", "reference/generated/torchrl.envs.GymWrapper", "reference/generated/torchrl.envs.HabitatEnv", "reference/generated/torchrl.envs.IsaacGymEnv", "reference/generated/torchrl.envs.IsaacGymWrapper", "reference/generated/torchrl.envs.JumanjiEnv", "reference/generated/torchrl.envs.JumanjiWrapper", "reference/generated/torchrl.envs.LLMEnv", "reference/generated/torchrl.envs.LLMHashingEnv", "reference/generated/torchrl.envs.MOGymEnv", "reference/generated/torchrl.envs.MOGymWrapper", "reference/generated/torchrl.envs.MarlGroupMapType", "reference/generated/torchrl.envs.MeltingpotEnv", "reference/generated/torchrl.envs.MeltingpotWrapper", "reference/generated/torchrl.envs.ModelBasedEnvBase", "reference/generated/torchrl.envs.MultiThreadedEnv", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper", "reference/generated/torchrl.envs.OpenMLEnv", "reference/generated/torchrl.envs.OpenSpielEnv", "reference/generated/torchrl.envs.OpenSpielWrapper", "reference/generated/torchrl.envs.ParallelEnv", "reference/generated/torchrl.envs.PendulumEnv", "reference/generated/torchrl.envs.PettingZooEnv", "reference/generated/torchrl.envs.PettingZooWrapper", "reference/generated/torchrl.envs.RandomPolicy", "reference/generated/torchrl.envs.RoboHiveEnv", "reference/generated/torchrl.envs.SMACv2Env", "reference/generated/torchrl.envs.SMACv2Wrapper", "reference/generated/torchrl.envs.SerialEnv", "reference/generated/torchrl.envs.TicTacToeEnv", "reference/generated/torchrl.envs.UnityMLAgentsEnv", "reference/generated/torchrl.envs.UnityMLAgentsWrapper", "reference/generated/torchrl.envs.VmasEnv", "reference/generated/torchrl.envs.VmasWrapper", "reference/generated/torchrl.envs.check_env_specs", "reference/generated/torchrl.envs.check_marl_grouping", "reference/generated/torchrl.envs.exploration_type", "reference/generated/torchrl.envs.get_available_libraries", "reference/generated/torchrl.envs.gym_backend", "reference/generated/torchrl.envs.make_composite_from_td", "reference/generated/torchrl.envs.model_based.dreamer.DreamerDecoder", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv", "reference/generated/torchrl.envs.register_gym_spec_conversion", "reference/generated/torchrl.envs.set_exploration_type", "reference/generated/torchrl.envs.set_gym_backend", "reference/generated/torchrl.envs.step_mdp", "reference/generated/torchrl.envs.terminated_or_truncated", "reference/generated/torchrl.envs.transforms.ActionDiscretizer", "reference/generated/torchrl.envs.transforms.ActionMask", "reference/generated/torchrl.envs.transforms.AutoResetEnv", "reference/generated/torchrl.envs.transforms.AutoResetTransform", "reference/generated/torchrl.envs.transforms.BatchSizeTransform", "reference/generated/torchrl.envs.transforms.BinarizeReward", "reference/generated/torchrl.envs.transforms.BurnInTransform", "reference/generated/torchrl.envs.transforms.CatFrames", "reference/generated/torchrl.envs.transforms.CatTensors", "reference/generated/torchrl.envs.transforms.CenterCrop", "reference/generated/torchrl.envs.transforms.ClipTransform", "reference/generated/torchrl.envs.transforms.Compose", "reference/generated/torchrl.envs.transforms.ConditionalSkip", "reference/generated/torchrl.envs.transforms.Crop", "reference/generated/torchrl.envs.transforms.DTypeCastTransform", "reference/generated/torchrl.envs.transforms.DataLoadingPrimer", "reference/generated/torchrl.envs.transforms.DeviceCastTransform", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection", "reference/generated/torchrl.envs.transforms.DoubleToFloat", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform", "reference/generated/torchrl.envs.transforms.ExcludeTransform", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck", "reference/generated/torchrl.envs.transforms.FlattenObservation", "reference/generated/torchrl.envs.transforms.FrameSkipTransform", "reference/generated/torchrl.envs.transforms.GrayScale", "reference/generated/torchrl.envs.transforms.Hash", "reference/generated/torchrl.envs.transforms.InitTracker", "reference/generated/torchrl.envs.transforms.KLRewardTransform", "reference/generated/torchrl.envs.transforms.LineariseRewards", "reference/generated/torchrl.envs.transforms.MultiAction", "reference/generated/torchrl.envs.transforms.NoopResetEnv", "reference/generated/torchrl.envs.transforms.ObservationNorm", "reference/generated/torchrl.envs.transforms.ObservationTransform", "reference/generated/torchrl.envs.transforms.PermuteTransform", "reference/generated/torchrl.envs.transforms.PinMemoryTransform", "reference/generated/torchrl.envs.transforms.R3MTransform", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict", "reference/generated/torchrl.envs.transforms.RemoveEmptySpecs", "reference/generated/torchrl.envs.transforms.RenameTransform", "reference/generated/torchrl.envs.transforms.Resize", "reference/generated/torchrl.envs.transforms.Reward2GoTransform", "reference/generated/torchrl.envs.transforms.RewardClipping", "reference/generated/torchrl.envs.transforms.RewardScaling", "reference/generated/torchrl.envs.transforms.RewardSum", "reference/generated/torchrl.envs.transforms.SelectTransform", "reference/generated/torchrl.envs.transforms.SignTransform", "reference/generated/torchrl.envs.transforms.SqueezeTransform", "reference/generated/torchrl.envs.transforms.Stack", "reference/generated/torchrl.envs.transforms.StepCounter", "reference/generated/torchrl.envs.transforms.TargetReturn", "reference/generated/torchrl.envs.transforms.TensorDictPrimer", "reference/generated/torchrl.envs.transforms.TimeMaxPool", "reference/generated/torchrl.envs.transforms.Timer", "reference/generated/torchrl.envs.transforms.ToTensorImage", "reference/generated/torchrl.envs.transforms.Tokenizer", "reference/generated/torchrl.envs.transforms.TrajCounter", "reference/generated/torchrl.envs.transforms.Transform", "reference/generated/torchrl.envs.transforms.TransformedEnv", "reference/generated/torchrl.envs.transforms.UnaryTransform", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform", "reference/generated/torchrl.envs.transforms.VC1Transform", "reference/generated/torchrl.envs.transforms.VIPRewardTransform", "reference/generated/torchrl.envs.transforms.VIPTransform", "reference/generated/torchrl.envs.transforms.VecGymEnvTransform", "reference/generated/torchrl.envs.transforms.VecNorm", "reference/generated/torchrl.envs.transforms.gSDENoise", "reference/generated/torchrl.envs.transforms.rb_transforms.MultiStepTransform", "reference/generated/torchrl.implement_for", "reference/generated/torchrl.modules.AdditiveGaussianModule", "reference/generated/torchrl.modules.BatchRenorm1d", "reference/generated/torchrl.modules.CEMPlanner", "reference/generated/torchrl.modules.ConsistentDropout", "reference/generated/torchrl.modules.ConsistentDropoutModule", "reference/generated/torchrl.modules.Conv3dNet", "reference/generated/torchrl.modules.ConvNet", "reference/generated/torchrl.modules.DTActor", "reference/generated/torchrl.modules.DdpgCnnActor", "reference/generated/torchrl.modules.DdpgCnnQNet", "reference/generated/torchrl.modules.DdpgMlpActor", "reference/generated/torchrl.modules.DdpgMlpQNet", "reference/generated/torchrl.modules.DecisionTransformer", "reference/generated/torchrl.modules.Delta", "reference/generated/torchrl.modules.DistributionalDQNnet", "reference/generated/torchrl.modules.DistributionalQValueHook", "reference/generated/torchrl.modules.DreamerActor", "reference/generated/torchrl.modules.DuelingCnnDQNet", "reference/generated/torchrl.modules.EGreedyModule", "reference/generated/torchrl.modules.GRU", "reference/generated/torchrl.modules.GRUCell", "reference/generated/torchrl.modules.GRUModule", "reference/generated/torchrl.modules.IndependentNormal", "reference/generated/torchrl.modules.LSTM", "reference/generated/torchrl.modules.LSTMCell", "reference/generated/torchrl.modules.LSTMModule", "reference/generated/torchrl.modules.MLP", "reference/generated/torchrl.modules.MPCPlannerBase", "reference/generated/torchrl.modules.MPPIPlanner", "reference/generated/torchrl.modules.MaskedCategorical", "reference/generated/torchrl.modules.MaskedOneHotCategorical", "reference/generated/torchrl.modules.MultiAgentConvNet", "reference/generated/torchrl.modules.MultiAgentMLP", "reference/generated/torchrl.modules.MultiAgentNetBase", "reference/generated/torchrl.modules.NoisyLazyLinear", "reference/generated/torchrl.modules.NoisyLinear", "reference/generated/torchrl.modules.ObsDecoder", "reference/generated/torchrl.modules.ObsEncoder", "reference/generated/torchrl.modules.OneHotCategorical", "reference/generated/torchrl.modules.OneHotOrdinal", "reference/generated/torchrl.modules.OnlineDTActor", "reference/generated/torchrl.modules.Ordinal", "reference/generated/torchrl.modules.OrnsteinUhlenbeckProcessModule", "reference/generated/torchrl.modules.QMixer", "reference/generated/torchrl.modules.QValueHook", "reference/generated/torchrl.modules.RSSMPosterior", "reference/generated/torchrl.modules.RSSMPrior", "reference/generated/torchrl.modules.Squeeze2dLayer", "reference/generated/torchrl.modules.SqueezeLayer", "reference/generated/torchrl.modules.TanhDelta", "reference/generated/torchrl.modules.TanhNormal", "reference/generated/torchrl.modules.TruncatedNormal", "reference/generated/torchrl.modules.VDNMixer", "reference/generated/torchrl.modules.VmapModule", "reference/generated/torchrl.modules.recurrent_mode", "reference/generated/torchrl.modules.reset_noise", "reference/generated/torchrl.modules.set_recurrent_mode", "reference/generated/torchrl.modules.tensordict_module.Actor", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.MultiStepActorWrapper", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor", "reference/generated/torchrl.modules.tensordict_module.QValueActor", "reference/generated/torchrl.modules.tensordict_module.QValueModule", "reference/generated/torchrl.modules.tensordict_module.SafeModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential", "reference/generated/torchrl.modules.tensordict_module.SafeSequential", "reference/generated/torchrl.modules.tensordict_module.TanhModule", "reference/generated/torchrl.modules.tensordict_module.ValueOperator", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper", "reference/generated/torchrl.modules.utils.biased_softplus", "reference/generated/torchrl.modules.utils.get_primers_from_module", "reference/generated/torchrl.modules.utils.inv_softplus", "reference/generated/torchrl.modules.utils.mappings", "reference/generated/torchrl.objectives.A2CLoss", "reference/generated/torchrl.objectives.CQLLoss", "reference/generated/torchrl.objectives.ClipPPOLoss", "reference/generated/torchrl.objectives.CrossQLoss", "reference/generated/torchrl.objectives.DDPGLoss", "reference/generated/torchrl.objectives.DQNLoss", "reference/generated/torchrl.objectives.DTLoss", "reference/generated/torchrl.objectives.DiscreteCQLLoss", "reference/generated/torchrl.objectives.DiscreteIQLLoss", "reference/generated/torchrl.objectives.DiscreteSACLoss", "reference/generated/torchrl.objectives.DistributionalDQNLoss", "reference/generated/torchrl.objectives.DreamerActorLoss", "reference/generated/torchrl.objectives.DreamerModelLoss", "reference/generated/torchrl.objectives.DreamerValueLoss", "reference/generated/torchrl.objectives.GAILLoss", "reference/generated/torchrl.objectives.HardUpdate", "reference/generated/torchrl.objectives.IQLLoss", "reference/generated/torchrl.objectives.KLPENPPOLoss", "reference/generated/torchrl.objectives.LossModule", "reference/generated/torchrl.objectives.OnlineDTLoss", "reference/generated/torchrl.objectives.PPOLoss", "reference/generated/torchrl.objectives.REDQLoss", "reference/generated/torchrl.objectives.ReinforceLoss", "reference/generated/torchrl.objectives.SACLoss", "reference/generated/torchrl.objectives.SoftUpdate", "reference/generated/torchrl.objectives.TD3BCLoss", "reference/generated/torchrl.objectives.TD3Loss", "reference/generated/torchrl.objectives.ValueEstimators", "reference/generated/torchrl.objectives.default_value_kwargs", "reference/generated/torchrl.objectives.distance_loss", "reference/generated/torchrl.objectives.group_optimizers", "reference/generated/torchrl.objectives.hold_out_net", "reference/generated/torchrl.objectives.hold_out_params", "reference/generated/torchrl.objectives.multiagent.QMixerLoss", "reference/generated/torchrl.objectives.next_state_value", "reference/generated/torchrl.objectives.value.GAE", "reference/generated/torchrl.objectives.value.TD0Estimator", "reference/generated/torchrl.objectives.value.TD1Estimator", "reference/generated/torchrl.objectives.value.TDLambdaEstimator", "reference/generated/torchrl.objectives.value.ValueEstimatorBase", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.reward2go", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate", "reference/generated/torchrl.record.PixelRenderTransform", "reference/generated/torchrl.record.TensorDictRecorder", "reference/generated/torchrl.record.VideoRecorder", "reference/generated/torchrl.record.loggers.Logger", "reference/generated/torchrl.record.loggers.csv.CSVLogger", "reference/generated/torchrl.record.loggers.generate_exp_name", "reference/generated/torchrl.record.loggers.get_logger", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger", "reference/generated/torchrl.record.loggers.wandb.WandbLogger", "reference/generated/torchrl.set_auto_unwrap_transformed_env", "reference/generated/torchrl.trainers.BatchSubSampler", "reference/generated/torchrl.trainers.ClearCudaCache", "reference/generated/torchrl.trainers.CountFramesLog", "reference/generated/torchrl.trainers.LogScalar", "reference/generated/torchrl.trainers.LogValidationReward", "reference/generated/torchrl.trainers.OptimizerHook", "reference/generated/torchrl.trainers.ReplayBufferTrainer", "reference/generated/torchrl.trainers.RewardNormalizer", "reference/generated/torchrl.trainers.SelectKeys", "reference/generated/torchrl.trainers.Trainer", "reference/generated/torchrl.trainers.TrainerHookBase", "reference/generated/torchrl.trainers.UpdateWeights", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy", "reference/generated/torchrl.trainers.helpers.make_dqn_loss", "reference/generated/torchrl.trainers.helpers.make_replay_buffer", "reference/generated/torchrl.trainers.helpers.make_target_updater", "reference/generated/torchrl.trainers.helpers.make_trainer", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor", "reference/generated/torchrl.trainers.helpers.sync_async_collector", "reference/generated/torchrl.trainers.helpers.sync_sync_collector", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor", "reference/generated/tutorials/README", "reference/index", "reference/knowledge_base", "reference/modules", "reference/objectives", "reference/trainers", "reference/utils", "sg_execution_times", "tutorials/coding_ddpg", "tutorials/coding_dqn", "tutorials/coding_ppo", "tutorials/dqn_with_rnn", "tutorials/export", "tutorials/getting-started-0", "tutorials/getting-started-1", "tutorials/getting-started-2", "tutorials/getting-started-3", "tutorials/getting-started-4", "tutorials/getting-started-5", "tutorials/index", "tutorials/multi_task", "tutorials/multiagent_competitive_ddpg", "tutorials/multiagent_ppo", "tutorials/pendulum", "tutorials/pretrained_models", "tutorials/rb_tutorial", "tutorials/sg_execution_times", "tutorials/torchrl_demo", "tutorials/torchrl_envs"], "filenames": ["index.rst", "reference/collectors.rst", "reference/data.rst", "reference/envs.rst", "reference/generated/knowledge_base/DEBUGGING_RL.rst", "reference/generated/knowledge_base/GYM.rst", "reference/generated/knowledge_base/HABITAT.rst", "reference/generated/knowledge_base/MUJOCO_INSTALLATION.rst", "reference/generated/knowledge_base/PRO-TIPS.rst", "reference/generated/knowledge_base/RESOURCES.rst", "reference/generated/knowledge_base/VERSIONING_ISSUES.rst", "reference/generated/knowledge_base/VIDEO_CUSTOMISATION.rst", "reference/generated/torchrl.auto_unwrap_transformed_env.rst", "reference/generated/torchrl.collectors.DataCollectorBase.rst", "reference/generated/torchrl.collectors.MultiSyncDataCollector.rst", "reference/generated/torchrl.collectors.MultiaSyncDataCollector.rst", "reference/generated/torchrl.collectors.SyncDataCollector.rst", "reference/generated/torchrl.collectors.aSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RPCDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RayCollector.rst", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher.rst", "reference/generated/torchrl.collectors.utils.split_trajectories.rst", "reference/generated/torchrl.data.AdaptiveKLController.rst", "reference/generated/torchrl.data.Binary.rst", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec.rst", "reference/generated/torchrl.data.BinaryToDecimal.rst", "reference/generated/torchrl.data.Bounded.rst", "reference/generated/torchrl.data.BoundedTensorSpec.rst", "reference/generated/torchrl.data.Categorical.rst", "reference/generated/torchrl.data.Composite.rst", "reference/generated/torchrl.data.CompositeSpec.rst", "reference/generated/torchrl.data.ConstantKLController.rst", "reference/generated/torchrl.data.DensifyReward.rst", "reference/generated/torchrl.data.DiscreteTensorSpec.rst", "reference/generated/torchrl.data.Flat2TED.rst", "reference/generated/torchrl.data.H5Combine.rst", "reference/generated/torchrl.data.H5Split.rst", "reference/generated/torchrl.data.HashToInt.rst", "reference/generated/torchrl.data.LLMData.rst", "reference/generated/torchrl.data.LLMInput.rst", "reference/generated/torchrl.data.LLMOutput.rst", "reference/generated/torchrl.data.LazyStackedCompositeSpec.rst", "reference/generated/torchrl.data.LazyStackedTensorSpec.rst", "reference/generated/torchrl.data.MCTSForest.rst", "reference/generated/torchrl.data.MultiCategorical.rst", "reference/generated/torchrl.data.MultiDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiOneHot.rst", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiStep.rst", "reference/generated/torchrl.data.Nested2TED.rst", "reference/generated/torchrl.data.NonTensor.rst", "reference/generated/torchrl.data.NonTensorSpec.rst", "reference/generated/torchrl.data.OneHot.rst", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.PairwiseDataset.rst", "reference/generated/torchrl.data.PrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.PromptData.rst", "reference/generated/torchrl.data.PromptTensorDictTokenizer.rst", "reference/generated/torchrl.data.QueryModule.rst", "reference/generated/torchrl.data.RandomProjectionHash.rst", "reference/generated/torchrl.data.RayReplayBuffer.rst", "reference/generated/torchrl.data.RemoteTensorDictReplayBuffer.rst", "reference/generated/torchrl.data.ReplayBuffer.rst", "reference/generated/torchrl.data.RewardData.rst", "reference/generated/torchrl.data.RolloutFromModel.rst", "reference/generated/torchrl.data.SipHash.rst", "reference/generated/torchrl.data.Stacked.rst", "reference/generated/torchrl.data.StackedComposite.rst", "reference/generated/torchrl.data.TED2Flat.rst", "reference/generated/torchrl.data.TED2Nested.rst", "reference/generated/torchrl.data.TensorDictMap.rst", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictTokenizer.rst", "reference/generated/torchrl.data.TensorMap.rst", "reference/generated/torchrl.data.TensorSpec.rst", "reference/generated/torchrl.data.TokenizedDatasetLoader.rst", "reference/generated/torchrl.data.Tree.rst", "reference/generated/torchrl.data.Unbounded.rst", "reference/generated/torchrl.data.UnboundedContinuous.rst", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec.rst", "reference/generated/torchrl.data.UnboundedDiscrete.rst", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec.rst", "reference/generated/torchrl.data.check_no_exclusive_keys.rst", "reference/generated/torchrl.data.consolidate_spec.rst", "reference/generated/torchrl.data.contains_lazy_spec.rst", "reference/generated/torchrl.data.create_infinite_iterator.rst", "reference/generated/torchrl.data.get_dataloader.rst", "reference/generated/torchrl.data.replay_buffers.FlatStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.H5StorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.ImmutableDatasetWriter.rst", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage.rst", "reference/generated/torchrl.data.replay_buffers.LazyStackStorage.rst", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.ListStorage.rst", "reference/generated/torchrl.data.replay_buffers.ListStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.NestedStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSliceSampler.rst", "reference/generated/torchrl.data.replay_buffers.RandomSampler.rst", "reference/generated/torchrl.data.replay_buffers.ReplayBufferEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.Sampler.rst", "reference/generated/torchrl.data.replay_buffers.SamplerEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.SliceSampler.rst", "reference/generated/torchrl.data.replay_buffers.SliceSamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.Storage.rst", "reference/generated/torchrl.data.replay_buffers.StorageCheckpointerBase.rst", "reference/generated/torchrl.data.replay_buffers.StorageEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.StorageEnsembleCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictMaxValueWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.TensorStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.Writer.rst", "reference/generated/torchrl.data.replay_buffers.WriterEnsemble.rst", "reference/generated/torchrl.envs.BraxEnv.rst", "reference/generated/torchrl.envs.BraxWrapper.rst", "reference/generated/torchrl.envs.ChessEnv.rst", "reference/generated/torchrl.envs.DMControlEnv.rst", "reference/generated/torchrl.envs.DMControlWrapper.rst", "reference/generated/torchrl.envs.EnvBase.rst", "reference/generated/torchrl.envs.EnvCreator.rst", "reference/generated/torchrl.envs.EnvMetaData.rst", "reference/generated/torchrl.envs.GymEnv.rst", "reference/generated/torchrl.envs.GymLikeEnv.rst", "reference/generated/torchrl.envs.GymWrapper.rst", "reference/generated/torchrl.envs.HabitatEnv.rst", "reference/generated/torchrl.envs.IsaacGymEnv.rst", "reference/generated/torchrl.envs.IsaacGymWrapper.rst", "reference/generated/torchrl.envs.JumanjiEnv.rst", "reference/generated/torchrl.envs.JumanjiWrapper.rst", "reference/generated/torchrl.envs.LLMEnv.rst", "reference/generated/torchrl.envs.LLMHashingEnv.rst", "reference/generated/torchrl.envs.MOGymEnv.rst", "reference/generated/torchrl.envs.MOGymWrapper.rst", "reference/generated/torchrl.envs.MarlGroupMapType.rst", "reference/generated/torchrl.envs.MeltingpotEnv.rst", "reference/generated/torchrl.envs.MeltingpotWrapper.rst", "reference/generated/torchrl.envs.ModelBasedEnvBase.rst", "reference/generated/torchrl.envs.MultiThreadedEnv.rst", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper.rst", "reference/generated/torchrl.envs.OpenMLEnv.rst", "reference/generated/torchrl.envs.OpenSpielEnv.rst", "reference/generated/torchrl.envs.OpenSpielWrapper.rst", "reference/generated/torchrl.envs.ParallelEnv.rst", "reference/generated/torchrl.envs.PendulumEnv.rst", "reference/generated/torchrl.envs.PettingZooEnv.rst", "reference/generated/torchrl.envs.PettingZooWrapper.rst", "reference/generated/torchrl.envs.RandomPolicy.rst", "reference/generated/torchrl.envs.RoboHiveEnv.rst", "reference/generated/torchrl.envs.SMACv2Env.rst", "reference/generated/torchrl.envs.SMACv2Wrapper.rst", "reference/generated/torchrl.envs.SerialEnv.rst", "reference/generated/torchrl.envs.TicTacToeEnv.rst", "reference/generated/torchrl.envs.UnityMLAgentsEnv.rst", "reference/generated/torchrl.envs.UnityMLAgentsWrapper.rst", "reference/generated/torchrl.envs.VmasEnv.rst", "reference/generated/torchrl.envs.VmasWrapper.rst", "reference/generated/torchrl.envs.check_env_specs.rst", "reference/generated/torchrl.envs.check_marl_grouping.rst", "reference/generated/torchrl.envs.exploration_type.rst", "reference/generated/torchrl.envs.get_available_libraries.rst", "reference/generated/torchrl.envs.gym_backend.rst", "reference/generated/torchrl.envs.make_composite_from_td.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerDecoder.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv.rst", "reference/generated/torchrl.envs.register_gym_spec_conversion.rst", "reference/generated/torchrl.envs.set_exploration_type.rst", "reference/generated/torchrl.envs.set_gym_backend.rst", "reference/generated/torchrl.envs.step_mdp.rst", "reference/generated/torchrl.envs.terminated_or_truncated.rst", "reference/generated/torchrl.envs.transforms.ActionDiscretizer.rst", "reference/generated/torchrl.envs.transforms.ActionMask.rst", "reference/generated/torchrl.envs.transforms.AutoResetEnv.rst", "reference/generated/torchrl.envs.transforms.AutoResetTransform.rst", "reference/generated/torchrl.envs.transforms.BatchSizeTransform.rst", "reference/generated/torchrl.envs.transforms.BinarizeReward.rst", "reference/generated/torchrl.envs.transforms.BurnInTransform.rst", "reference/generated/torchrl.envs.transforms.CatFrames.rst", "reference/generated/torchrl.envs.transforms.CatTensors.rst", "reference/generated/torchrl.envs.transforms.CenterCrop.rst", "reference/generated/torchrl.envs.transforms.ClipTransform.rst", "reference/generated/torchrl.envs.transforms.Compose.rst", "reference/generated/torchrl.envs.transforms.ConditionalSkip.rst", "reference/generated/torchrl.envs.transforms.Crop.rst", "reference/generated/torchrl.envs.transforms.DTypeCastTransform.rst", "reference/generated/torchrl.envs.transforms.DataLoadingPrimer.rst", "reference/generated/torchrl.envs.transforms.DeviceCastTransform.rst", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection.rst", "reference/generated/torchrl.envs.transforms.DoubleToFloat.rst", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform.rst", "reference/generated/torchrl.envs.transforms.ExcludeTransform.rst", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck.rst", "reference/generated/torchrl.envs.transforms.FlattenObservation.rst", "reference/generated/torchrl.envs.transforms.FrameSkipTransform.rst", "reference/generated/torchrl.envs.transforms.GrayScale.rst", "reference/generated/torchrl.envs.transforms.Hash.rst", "reference/generated/torchrl.envs.transforms.InitTracker.rst", "reference/generated/torchrl.envs.transforms.KLRewardTransform.rst", "reference/generated/torchrl.envs.transforms.LineariseRewards.rst", "reference/generated/torchrl.envs.transforms.MultiAction.rst", "reference/generated/torchrl.envs.transforms.NoopResetEnv.rst", "reference/generated/torchrl.envs.transforms.ObservationNorm.rst", "reference/generated/torchrl.envs.transforms.ObservationTransform.rst", "reference/generated/torchrl.envs.transforms.PermuteTransform.rst", "reference/generated/torchrl.envs.transforms.PinMemoryTransform.rst", "reference/generated/torchrl.envs.transforms.R3MTransform.rst", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict.rst", "reference/generated/torchrl.envs.transforms.RemoveEmptySpecs.rst", "reference/generated/torchrl.envs.transforms.RenameTransform.rst", "reference/generated/torchrl.envs.transforms.Resize.rst", "reference/generated/torchrl.envs.transforms.Reward2GoTransform.rst", "reference/generated/torchrl.envs.transforms.RewardClipping.rst", "reference/generated/torchrl.envs.transforms.RewardScaling.rst", "reference/generated/torchrl.envs.transforms.RewardSum.rst", "reference/generated/torchrl.envs.transforms.SelectTransform.rst", "reference/generated/torchrl.envs.transforms.SignTransform.rst", "reference/generated/torchrl.envs.transforms.SqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.Stack.rst", "reference/generated/torchrl.envs.transforms.StepCounter.rst", "reference/generated/torchrl.envs.transforms.TargetReturn.rst", "reference/generated/torchrl.envs.transforms.TensorDictPrimer.rst", "reference/generated/torchrl.envs.transforms.TimeMaxPool.rst", "reference/generated/torchrl.envs.transforms.Timer.rst", "reference/generated/torchrl.envs.transforms.ToTensorImage.rst", "reference/generated/torchrl.envs.transforms.Tokenizer.rst", "reference/generated/torchrl.envs.transforms.TrajCounter.rst", "reference/generated/torchrl.envs.transforms.Transform.rst", "reference/generated/torchrl.envs.transforms.TransformedEnv.rst", "reference/generated/torchrl.envs.transforms.UnaryTransform.rst", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.VC1Transform.rst", "reference/generated/torchrl.envs.transforms.VIPRewardTransform.rst", "reference/generated/torchrl.envs.transforms.VIPTransform.rst", "reference/generated/torchrl.envs.transforms.VecGymEnvTransform.rst", "reference/generated/torchrl.envs.transforms.VecNorm.rst", "reference/generated/torchrl.envs.transforms.gSDENoise.rst", "reference/generated/torchrl.envs.transforms.rb_transforms.MultiStepTransform.rst", "reference/generated/torchrl.implement_for.rst", "reference/generated/torchrl.modules.AdditiveGaussianModule.rst", "reference/generated/torchrl.modules.BatchRenorm1d.rst", "reference/generated/torchrl.modules.CEMPlanner.rst", "reference/generated/torchrl.modules.ConsistentDropout.rst", "reference/generated/torchrl.modules.ConsistentDropoutModule.rst", "reference/generated/torchrl.modules.Conv3dNet.rst", "reference/generated/torchrl.modules.ConvNet.rst", "reference/generated/torchrl.modules.DTActor.rst", "reference/generated/torchrl.modules.DdpgCnnActor.rst", "reference/generated/torchrl.modules.DdpgCnnQNet.rst", "reference/generated/torchrl.modules.DdpgMlpActor.rst", "reference/generated/torchrl.modules.DdpgMlpQNet.rst", "reference/generated/torchrl.modules.DecisionTransformer.rst", "reference/generated/torchrl.modules.Delta.rst", "reference/generated/torchrl.modules.DistributionalDQNnet.rst", "reference/generated/torchrl.modules.DistributionalQValueHook.rst", "reference/generated/torchrl.modules.DreamerActor.rst", "reference/generated/torchrl.modules.DuelingCnnDQNet.rst", "reference/generated/torchrl.modules.EGreedyModule.rst", "reference/generated/torchrl.modules.GRU.rst", "reference/generated/torchrl.modules.GRUCell.rst", "reference/generated/torchrl.modules.GRUModule.rst", "reference/generated/torchrl.modules.IndependentNormal.rst", "reference/generated/torchrl.modules.LSTM.rst", "reference/generated/torchrl.modules.LSTMCell.rst", "reference/generated/torchrl.modules.LSTMModule.rst", "reference/generated/torchrl.modules.MLP.rst", "reference/generated/torchrl.modules.MPCPlannerBase.rst", "reference/generated/torchrl.modules.MPPIPlanner.rst", "reference/generated/torchrl.modules.MaskedCategorical.rst", "reference/generated/torchrl.modules.MaskedOneHotCategorical.rst", "reference/generated/torchrl.modules.MultiAgentConvNet.rst", "reference/generated/torchrl.modules.MultiAgentMLP.rst", "reference/generated/torchrl.modules.MultiAgentNetBase.rst", "reference/generated/torchrl.modules.NoisyLazyLinear.rst", "reference/generated/torchrl.modules.NoisyLinear.rst", "reference/generated/torchrl.modules.ObsDecoder.rst", "reference/generated/torchrl.modules.ObsEncoder.rst", "reference/generated/torchrl.modules.OneHotCategorical.rst", "reference/generated/torchrl.modules.OneHotOrdinal.rst", "reference/generated/torchrl.modules.OnlineDTActor.rst", "reference/generated/torchrl.modules.Ordinal.rst", "reference/generated/torchrl.modules.OrnsteinUhlenbeckProcessModule.rst", "reference/generated/torchrl.modules.QMixer.rst", "reference/generated/torchrl.modules.QValueHook.rst", "reference/generated/torchrl.modules.RSSMPosterior.rst", "reference/generated/torchrl.modules.RSSMPrior.rst", "reference/generated/torchrl.modules.Squeeze2dLayer.rst", "reference/generated/torchrl.modules.SqueezeLayer.rst", "reference/generated/torchrl.modules.TanhDelta.rst", "reference/generated/torchrl.modules.TanhNormal.rst", "reference/generated/torchrl.modules.TruncatedNormal.rst", "reference/generated/torchrl.modules.VDNMixer.rst", "reference/generated/torchrl.modules.VmapModule.rst", "reference/generated/torchrl.modules.recurrent_mode.rst", "reference/generated/torchrl.modules.reset_noise.rst", "reference/generated/torchrl.modules.set_recurrent_mode.rst", "reference/generated/torchrl.modules.tensordict_module.Actor.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.MultiStepActorWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential.rst", "reference/generated/torchrl.modules.tensordict_module.SafeSequential.rst", "reference/generated/torchrl.modules.tensordict_module.TanhModule.rst", "reference/generated/torchrl.modules.tensordict_module.ValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper.rst", "reference/generated/torchrl.modules.utils.biased_softplus.rst", "reference/generated/torchrl.modules.utils.get_primers_from_module.rst", "reference/generated/torchrl.modules.utils.inv_softplus.rst", "reference/generated/torchrl.modules.utils.mappings.rst", "reference/generated/torchrl.objectives.A2CLoss.rst", "reference/generated/torchrl.objectives.CQLLoss.rst", "reference/generated/torchrl.objectives.ClipPPOLoss.rst", "reference/generated/torchrl.objectives.CrossQLoss.rst", "reference/generated/torchrl.objectives.DDPGLoss.rst", "reference/generated/torchrl.objectives.DQNLoss.rst", "reference/generated/torchrl.objectives.DTLoss.rst", "reference/generated/torchrl.objectives.DiscreteCQLLoss.rst", "reference/generated/torchrl.objectives.DiscreteIQLLoss.rst", "reference/generated/torchrl.objectives.DiscreteSACLoss.rst", "reference/generated/torchrl.objectives.DistributionalDQNLoss.rst", "reference/generated/torchrl.objectives.DreamerActorLoss.rst", "reference/generated/torchrl.objectives.DreamerModelLoss.rst", "reference/generated/torchrl.objectives.DreamerValueLoss.rst", "reference/generated/torchrl.objectives.GAILLoss.rst", "reference/generated/torchrl.objectives.HardUpdate.rst", "reference/generated/torchrl.objectives.IQLLoss.rst", "reference/generated/torchrl.objectives.KLPENPPOLoss.rst", "reference/generated/torchrl.objectives.LossModule.rst", "reference/generated/torchrl.objectives.OnlineDTLoss.rst", "reference/generated/torchrl.objectives.PPOLoss.rst", "reference/generated/torchrl.objectives.REDQLoss.rst", "reference/generated/torchrl.objectives.ReinforceLoss.rst", "reference/generated/torchrl.objectives.SACLoss.rst", "reference/generated/torchrl.objectives.SoftUpdate.rst", "reference/generated/torchrl.objectives.TD3BCLoss.rst", "reference/generated/torchrl.objectives.TD3Loss.rst", "reference/generated/torchrl.objectives.ValueEstimators.rst", "reference/generated/torchrl.objectives.default_value_kwargs.rst", "reference/generated/torchrl.objectives.distance_loss.rst", "reference/generated/torchrl.objectives.group_optimizers.rst", "reference/generated/torchrl.objectives.hold_out_net.rst", "reference/generated/torchrl.objectives.hold_out_params.rst", "reference/generated/torchrl.objectives.multiagent.QMixerLoss.rst", "reference/generated/torchrl.objectives.next_state_value.rst", "reference/generated/torchrl.objectives.value.GAE.rst", "reference/generated/torchrl.objectives.value.TD0Estimator.rst", "reference/generated/torchrl.objectives.value.TD1Estimator.rst", "reference/generated/torchrl.objectives.value.TDLambdaEstimator.rst", "reference/generated/torchrl.objectives.value.ValueEstimatorBase.rst", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.reward2go.rst", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate.rst", "reference/generated/torchrl.record.PixelRenderTransform.rst", "reference/generated/torchrl.record.TensorDictRecorder.rst", "reference/generated/torchrl.record.VideoRecorder.rst", "reference/generated/torchrl.record.loggers.Logger.rst", "reference/generated/torchrl.record.loggers.csv.CSVLogger.rst", "reference/generated/torchrl.record.loggers.generate_exp_name.rst", "reference/generated/torchrl.record.loggers.get_logger.rst", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger.rst", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger.rst", "reference/generated/torchrl.record.loggers.wandb.WandbLogger.rst", "reference/generated/torchrl.set_auto_unwrap_transformed_env.rst", "reference/generated/torchrl.trainers.BatchSubSampler.rst", "reference/generated/torchrl.trainers.ClearCudaCache.rst", "reference/generated/torchrl.trainers.CountFramesLog.rst", "reference/generated/torchrl.trainers.LogScalar.rst", "reference/generated/torchrl.trainers.LogValidationReward.rst", "reference/generated/torchrl.trainers.OptimizerHook.rst", "reference/generated/torchrl.trainers.ReplayBufferTrainer.rst", "reference/generated/torchrl.trainers.RewardNormalizer.rst", "reference/generated/torchrl.trainers.SelectKeys.rst", "reference/generated/torchrl.trainers.Trainer.rst", "reference/generated/torchrl.trainers.TrainerHookBase.rst", "reference/generated/torchrl.trainers.UpdateWeights.rst", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip.rst", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout.rst", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_loss.rst", "reference/generated/torchrl.trainers.helpers.make_replay_buffer.rst", "reference/generated/torchrl.trainers.helpers.make_target_updater.rst", "reference/generated/torchrl.trainers.helpers.make_trainer.rst", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor.rst", "reference/generated/torchrl.trainers.helpers.sync_async_collector.rst", "reference/generated/torchrl.trainers.helpers.sync_sync_collector.rst", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor.rst", "reference/generated/tutorials/README.rst", "reference/index.rst", "reference/knowledge_base.rst", "reference/modules.rst", "reference/objectives.rst", "reference/trainers.rst", "reference/utils.rst", "sg_execution_times.rst", "tutorials/coding_ddpg.rst", "tutorials/coding_dqn.rst", "tutorials/coding_ppo.rst", "tutorials/dqn_with_rnn.rst", "tutorials/export.rst", "tutorials/getting-started-0.rst", "tutorials/getting-started-1.rst", "tutorials/getting-started-2.rst", "tutorials/getting-started-3.rst", "tutorials/getting-started-4.rst", "tutorials/getting-started-5.rst", "tutorials/index.rst", "tutorials/multi_task.rst", "tutorials/multiagent_competitive_ddpg.rst", "tutorials/multiagent_ppo.rst", "tutorials/pendulum.rst", "tutorials/pretrained_models.rst", "tutorials/rb_tutorial.rst", "tutorials/sg_execution_times.rst", "tutorials/torchrl_demo.rst", "tutorials/torchrl_envs.rst"], "titles": ["TorchRL", "torchrl.collectors package", "torchrl.data package", "torchrl.envs package", "Things to consider when debugging RL", "Working with gym", "Working with <code class=\"docutils literal notranslate\"><span class=\"pre\">habitat-lab</span></code>", "Working with MuJoCo-based environments", "Common PyTorch errors and solutions", "Useful resources", "Versioning Issues", "Customising Video Renders", "auto_unwrap_transformed_env", "DataCollectorBase", "MultiSyncDataCollector", "MultiaSyncDataCollector", "SyncDataCollector", "aSyncDataCollector", "DistributedDataCollector", "DistributedSyncDataCollector", "RPCDataCollector", "RayCollector", "submitit_delayed_launcher", "split_trajectories", "AdaptiveKLController", "Binary", "BinaryDiscreteTensorSpec", "BinaryToDecimal", "Bounded", "BoundedTensorSpec", "Categorical", "Composite", "CompositeSpec", "ConstantKLController", "DensifyReward", "DiscreteTensorSpec", "Flat2TED", "H5Combine", "H5Split", "HashToInt", "LLMData", "LLMInput", "LLMOutput", "LazyStackedCompositeSpec", "LazyStackedTensorSpec", "MCTSForest", "MultiCategorical", "MultiDiscreteTensorSpec", "MultiOneHot", "MultiOneHotDiscreteTensorSpec", "MultiStep", "Nested2TED", "NonTensor", "NonTensorSpec", "OneHot", "OneHotDiscreteTensorSpec", "PairwiseDataset", "PrioritizedReplayBuffer", "PromptData", "PromptTensorDictTokenizer", "QueryModule", "RandomProjectionHash", "RayReplayBuffer", "RemoteTensorDictReplayBuffer", "ReplayBuffer", "RewardData", "RolloutFromModel", "SipHash", "Stacked", "StackedComposite", "TED2Flat", "TED2Nested", "TensorDictMap", "TensorDictPrioritizedReplayBuffer", "TensorDictReplayBuffer", "TensorDictTokenizer", "TensorMap", "TensorSpec", "TokenizedDatasetLoader", "Tree", "Unbounded", "UnboundedContinuous", "UnboundedContinuousTensorSpec", "UnboundedDiscrete", "UnboundedDiscreteTensorSpec", "check_no_exclusive_keys", "consolidate_spec", "contains_lazy_spec", "create_infinite_iterator", "get_dataloader", "FlatStorageCheckpointer", "H5StorageCheckpointer", "ImmutableDatasetWriter", "LazyMemmapStorage", "LazyStackStorage", "LazyTensorStorage", "ListStorage", "ListStorageCheckpointer", "NestedStorageCheckpointer", "PrioritizedSampler", "PrioritizedSliceSampler", "RandomSampler", "ReplayBufferEnsemble", "RoundRobinWriter", "Sampler", "SamplerEnsemble", "SamplerWithoutReplacement", "SliceSampler", "SliceSamplerWithoutReplacement", "Storage", "StorageCheckpointerBase", "StorageEnsemble", "StorageEnsembleCheckpointer", "TensorDictMaxValueWriter", "TensorDictRoundRobinWriter", "TensorStorage", "TensorStorageCheckpointer", "Writer", "WriterEnsemble", "BraxEnv", "BraxWrapper", "ChessEnv", "DMControlEnv", "DMControlWrapper", "EnvBase", "EnvCreator", "EnvMetaData", "GymEnv", "GymLikeEnv", "GymWrapper", "HabitatEnv", "IsaacGymEnv", "IsaacGymWrapper", "JumanjiEnv", "JumanjiWrapper", "LLMEnv", "LLMHashingEnv", "MOGymEnv", "MOGymWrapper", "MarlGroupMapType", "MeltingpotEnv", "MeltingpotWrapper", "ModelBasedEnvBase", "MultiThreadedEnv", "MultiThreadedEnvWrapper", "OpenMLEnv", "OpenSpielEnv", "OpenSpielWrapper", "ParallelEnv", "PendulumEnv", "PettingZooEnv", "PettingZooWrapper", "RandomPolicy", "RoboHiveEnv", "SMACv2Env", "SMACv2Wrapper", "SerialEnv", "TicTacToeEnv", "UnityMLAgentsEnv", "UnityMLAgentsWrapper", "VmasEnv", "VmasWrapper", "check_env_specs", "check_marl_grouping", "exploration_type", "get_available_libraries", "gym_backend", "make_composite_from_td", "DreamerDecoder", "DreamerEnv", "register_gym_spec_conversion", "set_exploration_type", "set_gym_backend", "step_mdp", "terminated_or_truncated", "ActionDiscretizer", "ActionMask", "AutoResetEnv", "AutoResetTransform", "BatchSizeTransform", "BinarizeReward", "BurnInTransform", "CatFrames", "CatTensors", "CenterCrop", "ClipTransform", "Compose", "ConditionalSkip", "Crop", "DTypeCastTransform", "DataLoadingPrimer", "DeviceCastTransform", "DiscreteActionProjection", "DoubleToFloat", "EndOfLifeTransform", "ExcludeTransform", "FiniteTensorDictCheck", "FlattenObservation", "FrameSkipTransform", "GrayScale", "Hash", "InitTracker", "KLRewardTransform", "LineariseRewards", "MultiAction", "NoopResetEnv", "ObservationNorm", "ObservationTransform", "PermuteTransform", "PinMemoryTransform", "R3MTransform", "RandomCropTensorDict", "RemoveEmptySpecs", "RenameTransform", "Resize", "Reward2GoTransform", "RewardClipping", "RewardScaling", "RewardSum", "SelectTransform", "SignTransform", "SqueezeTransform", "Stack", "StepCounter", "TargetReturn", "TensorDictPrimer", "TimeMaxPool", "Timer", "ToTensorImage", "Tokenizer", "TrajCounter", "Transform", "TransformedEnv", "UnaryTransform", "UnsqueezeTransform", "VC1Transform", "VIPRewardTransform", "VIPTransform", "VecGymEnvTransform", "VecNorm", "gSDENoise", "MultiStepTransform", "implement_for", "AdditiveGaussianModule", "BatchRenorm1d", "CEMPlanner", "ConsistentDropout", "ConsistentDropoutModule", "Conv3dNet", "ConvNet", "DTActor", "DdpgCnnActor", "DdpgCnnQNet", "DdpgMlpActor", "DdpgMlpQNet", "DecisionTransformer", "Delta", "DistributionalDQNnet", "DistributionalQValueHook", "DreamerActor", "DuelingCnnDQNet", "EGreedyModule", "GRU", "GRUCell", "GRUModule", "IndependentNormal", "LSTM", "LSTMCell", "LSTMModule", "MLP", "MPCPlannerBase", "MPPIPlanner", "MaskedCategorical", "MaskedOneHotCategorical", "MultiAgentConvNet", "MultiAgentMLP", "MultiAgentNetBase", "NoisyLazyLinear", "NoisyLinear", "ObsDecoder", "ObsEncoder", "OneHotCategorical", "OneHotOrdinal", "OnlineDTActor", "Ordinal", "OrnsteinUhlenbeckProcessModule", "QMixer", "QValueHook", "RSSMPosterior", "RSSMPrior", "Squeeze2dLayer", "SqueezeLayer", "TanhDelta", "TanhNormal", "TruncatedNormal", "VDNMixer", "VmapModule", "recurrent_mode", "reset_noise", "set_recurrent_mode", "Actor", "ActorCriticOperator", "ActorCriticWrapper", "ActorValueOperator", "DecisionTransformerInferenceWrapper", "DistributionalQValueActor", "DistributionalQValueModule", "LMHeadActorValueOperator", "MultiStepActorWrapper", "ProbabilisticActor", "QValueActor", "QValueModule", "SafeModule", "SafeProbabilisticModule", "SafeProbabilisticTensorDictSequential", "SafeSequential", "TanhModule", "ValueOperator", "WorldModelWrapper", "biased_softplus", "get_primers_from_module", "inv_softplus", "mappings", "A2CLoss", "CQLLoss", "ClipPPOLoss", "CrossQLoss", "DDPGLoss", "DQNLoss", "DTLoss", "DiscreteCQLLoss", "DiscreteIQLLoss", "DiscreteSACLoss", "DistributionalDQNLoss", "DreamerActorLoss", "DreamerModelLoss", "DreamerValueLoss", "GAILLoss", "HardUpdate", "IQLLoss", "KLPENPPOLoss", "LossModule", "OnlineDTLoss", "PPOLoss", "REDQLoss", "ReinforceLoss", "SACLoss", "SoftUpdate", "TD3BCLoss", "TD3Loss", "ValueEstimators", "default_value_kwargs", "distance_loss", "group_optimizers", "hold_out_net", "hold_out_params", "QMixerLoss", "next_state_value", "GAE", "TD0Estimator", "TD1Estimator", "TDLambdaEstimator", "ValueEstimatorBase", "generalized_advantage_estimate", "reward2go", "td0_advantage_estimate", "td0_return_estimate", "td1_advantage_estimate", "td1_return_estimate", "td_lambda_advantage_estimate", "td_lambda_return_estimate", "vec_generalized_advantage_estimate", "vec_td1_advantage_estimate", "vec_td1_return_estimate", "vec_td_lambda_advantage_estimate", "vec_td_lambda_return_estimate", "PixelRenderTransform", "TensorDictRecorder", "VideoRecorder", "Logger", "CSVLogger", "generate_exp_name", "get_logger", "MLFlowLogger", "TensorboardLogger", "WandbLogger", "set_auto_unwrap_transformed_env", "BatchSubSampler", "ClearCudaCache", "CountFramesLog", "LogScalar", "LogValidationReward", "OptimizerHook", "ReplayBufferTrainer", "RewardNormalizer", "SelectKeys", "Trainer", "TrainerHookBase", "UpdateWeights", "correct_for_frame_skip", "get_stats_random_rollout", "make_collector_offpolicy", "make_collector_onpolicy", "make_dqn_loss", "make_replay_buffer", "make_target_updater", "make_trainer", "parallel_env_constructor", "sync_async_collector", "sync_sync_collector", "transformed_env_constructor", "README Tutos", "API Reference", "Knowledge Base", "torchrl.modules package", "torchrl.objectives package", "torchrl.trainers package", "torchrl._utils package", "Computation times", "TorchRL objectives: Coding a DDPG loss", "TorchRL trainer: A DQN example", "Reinforcement Learning (PPO) with TorchRL Tutorial", "Recurrent DQN: Training recurrent policies", "Exporting TorchRL modules", "Get started with Environments, TED and transforms", "Get started with TorchRL\u2019s modules", "Getting started with model optimization", "Get started with data collection and storage", "Get started with logging", "Get started with your own first training loop", "README Tutos", "Task-specific policy in multi-task environments", "Competitive Multi-Agent Reinforcement Learning (DDPG) with TorchRL Tutorial", "Multi-Agent Reinforcement Learning (PPO) with TorchRL Tutorial", "Pendulum: Writing your environment and transforms with TorchRL", "Using pretrained models", "Using Replay Buffers", "Computation times", "Introduction to TorchRL", "TorchRL envs"], "terms": {"an": [0, 1, 2, 3, 5, 8, 9, 10, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 72, 73, 74, 76, 77, 79, 80, 81, 82, 83, 84, 88, 92, 93, 94, 95, 96, 100, 102, 103, 105, 107, 108, 109, 111, 113, 114, 115, 117, 118, 121, 122, 123, 124, 125, 127, 128, 129, 130, 134, 135, 136, 142, 143, 145, 148, 149, 150, 151, 153, 156, 157, 158, 162, 163, 175, 176, 178, 179, 181, 182, 184, 189, 190, 192, 193, 196, 200, 205, 206, 210, 211, 212, 213, 215, 224, 225, 226, 227, 228, 230, 231, 232, 235, 238, 239, 241, 244, 248, 249, 251, 252, 253, 254, 256, 261, 262, 264, 266, 268, 269, 270, 274, 275, 277, 285, 290, 291, 293, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 313, 314, 318, 322, 323, 324, 325, 326, 328, 331, 332, 333, 334, 335, 336, 339, 340, 341, 343, 344, 345, 346, 349, 356, 358, 359, 360, 361, 362, 376, 378, 381, 385, 391, 392, 396, 397, 400, 407, 408, 409, 410, 413, 414, 415, 419, 420, 423, 425, 426, 427, 428, 429, 431, 432, 433, 435, 436, 438, 439], "open": [0, 5, 7, 40, 41, 42, 56, 58, 65, 79, 93, 242, 420, 432, 433, 438], "sourc": [0, 1, 4, 7, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439], "reinforc": [0, 3, 9, 140, 141, 182, 246, 251, 252, 253, 254, 258, 285, 306, 323, 324, 326, 329, 330, 331, 333, 338, 339, 345, 346, 347, 348, 412, 418, 420, 424, 425, 430, 434, 437, 438], "learn": [0, 3, 7, 8, 9, 18, 50, 124, 140, 141, 145, 148, 156, 182, 246, 251, 252, 253, 254, 258, 271, 278, 284, 285, 306, 323, 324, 326, 329, 330, 331, 333, 337, 338, 339, 344, 345, 346, 347, 348, 412, 415, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 434, 436, 437, 438, 439], "rl": [0, 1, 2, 3, 5, 8, 10, 14, 15, 16, 17, 142, 182, 224, 278, 300, 309, 317, 323, 325, 340, 341, 343, 345, 387, 411, 413, 414, 415, 416, 419, 420, 421, 427, 430, 432, 433, 435, 436, 439], "librari": [0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 14, 15, 18, 19, 20, 59, 75, 121, 122, 123, 132, 143, 165, 412, 413, 414, 415, 417, 419, 420, 421, 423, 424, 425, 427, 432, 433, 434, 439], "pytorch": [0, 1, 2, 3, 23, 121, 124, 128, 135, 136, 148, 149, 156, 157, 160, 161, 162, 182, 227, 228, 246, 262, 266, 277, 278, 396, 411, 413, 414, 416, 419, 421, 422, 426, 430, 432, 433, 434, 438, 439], "you": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 27, 34, 39, 50, 60, 61, 67, 72, 75, 121, 124, 128, 132, 135, 136, 139, 140, 141, 148, 149, 150, 151, 154, 155, 156, 157, 160, 161, 172, 182, 203, 231, 239, 241, 246, 266, 284, 313, 385, 386, 413, 414, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 438, 439], "can": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 93, 94, 99, 100, 102, 106, 107, 108, 113, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 132, 133, 134, 135, 136, 139, 140, 141, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 160, 161, 162, 170, 172, 174, 175, 176, 178, 179, 181, 182, 185, 186, 187, 189, 190, 192, 193, 194, 197, 200, 204, 205, 206, 210, 211, 215, 218, 222, 223, 224, 225, 229, 230, 231, 232, 233, 235, 237, 239, 241, 242, 245, 247, 248, 249, 251, 261, 262, 264, 265, 266, 268, 270, 271, 274, 275, 276, 278, 285, 294, 296, 300, 305, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316, 322, 323, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 339, 340, 341, 343, 344, 345, 346, 348, 349, 356, 357, 358, 359, 360, 361, 362, 376, 378, 385, 386, 391, 408, 409, 410, 413, 414, 415, 416, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 438, 439], "directli": [0, 4, 8, 14, 15, 16, 17, 18, 19, 20, 21, 23, 102, 119, 120, 121, 124, 127, 128, 135, 136, 142, 148, 149, 156, 157, 175, 176, 178, 179, 181, 182, 183, 186, 187, 191, 194, 195, 196, 198, 200, 201, 202, 206, 209, 211, 212, 213, 215, 218, 219, 222, 223, 224, 225, 226, 227, 229, 230, 231, 233, 235, 236, 238, 239, 241, 313, 341, 348, 410, 420, 421, 423, 424, 432, 433, 434, 436], "from": [0, 1, 3, 4, 5, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 89, 93, 94, 95, 96, 99, 100, 102, 105, 106, 107, 108, 109, 111, 113, 115, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 133, 134, 135, 136, 139, 140, 141, 142, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 167, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 185, 187, 189, 190, 191, 192, 193, 194, 195, 200, 201, 202, 203, 206, 208, 210, 211, 212, 213, 214, 215, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 237, 238, 239, 241, 242, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 281, 283, 284, 285, 286, 287, 293, 294, 295, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 320, 323, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 339, 340, 341, 343, 344, 345, 346, 348, 349, 351, 356, 357, 358, 359, 360, 361, 364, 376, 377, 378, 387, 393, 396, 399, 400, 404, 406, 407, 410, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439], "pypi": [0, 2, 438], "see": [0, 1, 2, 3, 6, 7, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 60, 61, 62, 63, 64, 67, 68, 69, 72, 73, 74, 75, 77, 79, 80, 81, 82, 83, 84, 89, 94, 100, 102, 107, 108, 121, 124, 128, 131, 134, 135, 136, 140, 141, 143, 146, 147, 148, 149, 150, 151, 153, 156, 157, 158, 159, 160, 161, 182, 186, 187, 204, 210, 225, 228, 230, 231, 232, 235, 237, 239, 240, 241, 246, 247, 248, 249, 262, 264, 265, 266, 268, 269, 275, 276, 277, 284, 286, 294, 295, 299, 301, 303, 309, 312, 313, 326, 337, 341, 348, 378, 385, 393, 414, 415, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 432, 433, 434, 436, 438, 439], "more": [0, 1, 2, 3, 4, 6, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 60, 61, 62, 63, 64, 67, 68, 69, 72, 73, 74, 75, 77, 79, 80, 81, 82, 83, 84, 100, 102, 113, 121, 124, 127, 128, 129, 131, 132, 134, 135, 136, 140, 141, 146, 147, 148, 149, 150, 151, 153, 156, 157, 158, 159, 160, 161, 182, 228, 231, 235, 240, 241, 242, 243, 244, 247, 258, 266, 269, 277, 300, 305, 306, 312, 313, 317, 323, 333, 341, 343, 358, 363, 371, 385, 392, 413, 414, 415, 416, 419, 420, 421, 422, 423, 424, 425, 426, 427, 431, 432, 433, 434, 435, 438, 439], "about": [0, 3, 5, 7, 9, 18, 19, 20, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 75, 77, 80, 81, 82, 83, 84, 121, 124, 128, 135, 136, 148, 149, 156, 157, 414, 415, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 432, 433, 434, 436, 438, 439], "instruct": [0, 6, 7, 10, 22, 192, 194, 415, 419, 420, 421, 422, 432, 433, 436], "dedic": [0, 1, 2, 3, 18, 19, 20, 21, 45, 64, 73, 74, 102, 148, 156, 301, 302, 303, 414, 419, 424, 426, 427, 429, 431, 433], "section": [0, 2, 3, 4, 24, 124, 262, 266, 420, 423, 424, 429, 432, 433], "below": [0, 2, 3, 7, 14, 15, 16, 17, 18, 19, 20, 21, 27, 34, 39, 50, 60, 61, 64, 67, 72, 73, 74, 80, 89, 108, 121, 124, 128, 135, 136, 148, 149, 156, 157, 186, 187, 204, 210, 225, 230, 231, 232, 235, 237, 241, 248, 249, 262, 265, 266, 269, 275, 294, 309, 312, 393, 419, 420, 421, 422, 423, 424, 432, 434], "pip": [0, 10, 423, 424, 425, 426, 427, 428, 429, 433, 438, 439], "provid": [0, 1, 2, 3, 5, 8, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 31, 32, 33, 34, 39, 40, 41, 42, 43, 45, 46, 48, 50, 54, 56, 57, 58, 60, 61, 62, 63, 64, 65, 67, 69, 72, 73, 74, 78, 79, 86, 89, 93, 94, 96, 100, 101, 102, 105, 107, 108, 116, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 133, 134, 135, 136, 142, 143, 144, 146, 147, 148, 149, 150, 151, 153, 156, 157, 158, 159, 173, 174, 175, 179, 181, 182, 183, 184, 185, 188, 189, 193, 197, 200, 205, 206, 208, 210, 211, 214, 215, 218, 219, 224, 225, 226, 229, 230, 232, 234, 235, 237, 238, 239, 241, 242, 248, 249, 255, 256, 258, 261, 262, 263, 264, 266, 267, 268, 269, 270, 272, 273, 274, 275, 296, 300, 304, 306, 308, 309, 310, 311, 313, 316, 323, 324, 325, 326, 327, 328, 330, 332, 333, 334, 339, 340, 341, 343, 344, 345, 346, 348, 349, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 382, 387, 393, 400, 406, 413, 414, 415, 416, 419, 420, 421, 422, 423, 424, 425, 427, 428, 431, 432, 433, 434, 435, 436, 438, 439], "python": [0, 3, 5, 6, 7, 10, 14, 15, 21, 57, 62, 63, 64, 67, 72, 73, 74, 79, 102, 144, 158, 159, 172, 262, 263, 264, 266, 267, 268, 272, 273, 416, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439], "first": [0, 1, 2, 3, 4, 5, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 60, 68, 69, 77, 79, 80, 81, 82, 83, 84, 93, 95, 100, 107, 108, 113, 115, 121, 124, 127, 128, 129, 134, 135, 136, 148, 149, 156, 157, 178, 179, 182, 183, 187, 197, 204, 206, 210, 211, 227, 228, 232, 235, 242, 249, 256, 262, 264, 266, 268, 269, 273, 275, 277, 280, 300, 304, 305, 306, 309, 310, 312, 313, 325, 335, 340, 341, 343, 377, 378, 395, 414, 418, 419, 420, 421, 422, 423, 424, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439], "low": [0, 3, 28, 31, 61, 72, 77, 80, 100, 121, 124, 128, 135, 136, 148, 149, 156, 157, 167, 175, 185, 192, 200, 203, 225, 233, 292, 293, 294, 304, 306, 309, 313, 316, 419, 420, 421, 423, 432, 433, 434, 438], "high": [0, 3, 9, 28, 31, 40, 41, 42, 56, 58, 65, 73, 79, 80, 100, 121, 124, 128, 135, 136, 148, 149, 156, 157, 167, 175, 185, 192, 200, 203, 205, 225, 233, 292, 293, 294, 304, 306, 309, 313, 316, 358, 363, 371, 419, 420, 421, 432, 433, 434, 436, 438], "level": [0, 2, 3, 4, 22, 31, 32, 43, 57, 62, 63, 64, 69, 73, 74, 102, 127, 129, 182, 223, 231, 264, 268, 340, 419, 420, 423, 427, 438], "abstract": [0, 3, 8, 76, 77, 117, 124, 207, 270, 362, 388, 397, 416, 421, 423, 434, 438], "ar": [0, 1, 2, 3, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 85, 89, 90, 91, 93, 94, 95, 96, 98, 102, 105, 106, 107, 108, 109, 111, 113, 115, 121, 124, 125, 127, 128, 129, 134, 135, 136, 139, 140, 141, 142, 145, 148, 149, 150, 151, 153, 156, 157, 158, 159, 160, 161, 167, 173, 174, 175, 177, 178, 179, 181, 182, 185, 186, 187, 189, 190, 191, 192, 193, 194, 196, 197, 200, 202, 203, 204, 205, 208, 210, 215, 218, 222, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 241, 243, 245, 246, 254, 256, 261, 262, 263, 264, 266, 267, 268, 270, 272, 273, 274, 275, 276, 278, 281, 286, 289, 299, 304, 305, 308, 309, 310, 312, 313, 314, 315, 316, 320, 322, 323, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 343, 344, 345, 346, 348, 349, 352, 353, 356, 357, 358, 359, 360, 361, 362, 376, 385, 386, 393, 396, 406, 410, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 438, 439], "intend": [0, 7, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 78, 80, 81, 82, 83, 84, 181, 192, 296, 341, 414, 438], "effici": [0, 1, 2, 4, 8, 121, 124, 128, 135, 136, 148, 149, 156, 157, 262, 278, 326, 414, 419, 420, 421, 422, 423, 426, 427, 429, 431, 432, 433, 435, 436, 438], "modular": [0, 315, 423, 436, 438], "document": [0, 2, 5, 7, 11, 18, 19, 21, 27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 146, 147, 148, 149, 156, 157, 158, 159, 232, 241, 411, 420, 422, 423, 424, 427, 430, 438], "properli": [0, 1, 3, 80, 121, 124, 128, 135, 136, 148, 149, 156, 157, 173, 187, 264, 268, 421, 428, 432, 433, 434, 438], "test": [0, 3, 5, 119, 120, 121, 124, 128, 133, 134, 135, 136, 140, 141, 148, 149, 156, 157, 162, 190, 230, 235, 264, 268, 391, 406, 421, 422, 423, 435, 438], "The": [0, 1, 3, 4, 5, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 89, 91, 99, 100, 102, 105, 107, 108, 109, 113, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 132, 133, 134, 135, 136, 143, 144, 146, 147, 148, 149, 150, 151, 153, 156, 157, 158, 160, 161, 162, 170, 173, 174, 175, 178, 179, 181, 182, 186, 187, 189, 190, 193, 194, 195, 200, 203, 204, 206, 208, 210, 215, 217, 218, 219, 222, 223, 224, 225, 227, 230, 231, 232, 235, 237, 238, 239, 241, 243, 244, 245, 246, 251, 252, 253, 254, 255, 258, 262, 263, 264, 266, 267, 268, 270, 271, 272, 273, 274, 278, 282, 284, 285, 287, 288, 289, 299, 300, 301, 304, 305, 306, 308, 309, 310, 311, 312, 313, 315, 317, 318, 319, 320, 323, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 343, 344, 345, 346, 348, 349, 356, 357, 358, 359, 360, 361, 362, 364, 376, 378, 380, 383, 384, 385, 386, 387, 392, 406, 408, 409, 412, 414, 415, 416, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 432, 433, 434, 435, 436, 438, 439], "code": [0, 3, 5, 7, 8, 14, 15, 61, 67, 121, 124, 128, 134, 135, 136, 148, 149, 156, 157, 210, 232, 235, 244, 262, 263, 264, 266, 267, 268, 309, 313, 315, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439], "aim": [0, 2, 3, 7, 45, 68, 69, 210, 235, 237, 269, 399, 413, 414, 415, 419, 420, 438], "support": [0, 1, 3, 14, 15, 16, 17, 18, 19, 20, 21, 34, 40, 41, 42, 56, 58, 60, 65, 72, 79, 89, 93, 95, 109, 111, 115, 116, 118, 119, 120, 121, 127, 129, 133, 143, 145, 148, 150, 153, 165, 179, 182, 194, 200, 206, 225, 226, 229, 233, 258, 282, 284, 293, 296, 305, 306, 309, 312, 315, 333, 341, 358, 359, 360, 361, 383, 412, 414, 416, 421, 422, 424, 425, 433, 434, 436, 438], "research": [0, 7, 9, 140, 141, 244, 438], "most": [0, 1, 2, 3, 7, 8, 14, 15, 50, 52, 107, 108, 121, 124, 128, 135, 136, 148, 149, 156, 157, 162, 192, 238, 419, 421, 423, 424, 425, 426, 427, 428, 429, 434, 438, 439], "written": [0, 1, 2, 3, 36, 40, 41, 42, 56, 57, 58, 60, 62, 63, 64, 65, 70, 73, 74, 78, 79, 91, 93, 100, 102, 107, 108, 121, 122, 123, 124, 127, 128, 129, 130, 135, 136, 148, 149, 153, 156, 157, 173, 174, 175, 182, 194, 197, 202, 203, 218, 223, 226, 227, 232, 238, 241, 242, 247, 285, 300, 309, 312, 313, 317, 323, 325, 340, 343, 345, 357, 376, 377, 378, 414, 415, 416, 419, 422, 423, 425, 431, 434, 438], "highli": [0, 2, 424, 438, 439], "wai": [0, 1, 2, 3, 4, 102, 113, 132, 182, 210, 213, 230, 231, 237, 238, 264, 266, 268, 343, 358, 359, 360, 361, 414, 419, 420, 421, 423, 424, 426, 427, 431, 432, 433, 434, 435, 436, 438, 439], "easili": [0, 1, 2, 3, 7, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 121, 124, 128, 135, 136, 148, 149, 156, 157, 415, 419, 420, 421, 424, 425, 426, 429, 432, 433, 438, 439], "swap": [0, 1, 3, 127, 238, 421, 423, 435, 438], "compon": [0, 1, 2, 3, 57, 61, 62, 63, 64, 73, 74, 93, 94, 95, 96, 102, 109, 111, 115, 258, 287, 305, 306, 311, 323, 324, 325, 331, 332, 333, 334, 335, 336, 339, 340, 341, 343, 344, 345, 346, 349, 356, 392, 396, 419, 420, 421, 422, 423, 425, 426, 429, 431, 432, 433, 434, 435, 438], "transform": [0, 1, 4, 8, 14, 15, 16, 17, 18, 19, 20, 21, 34, 45, 50, 57, 59, 62, 63, 64, 66, 73, 74, 75, 90, 91, 98, 102, 111, 116, 121, 124, 125, 128, 135, 136, 140, 141, 148, 149, 150, 151, 156, 157, 160, 161, 168, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 247, 250, 251, 255, 258, 259, 264, 268, 283, 286, 287, 293, 295, 304, 307, 308, 316, 319, 320, 322, 329, 342, 376, 378, 393, 410, 412, 418, 420, 422, 423, 425, 427, 428, 429, 430, 435, 437], "them": [0, 2, 3, 7, 9, 11, 14, 15, 16, 17, 18, 19, 20, 21, 27, 31, 32, 34, 39, 43, 57, 59, 60, 61, 62, 63, 64, 67, 69, 72, 73, 74, 102, 113, 118, 121, 124, 125, 128, 132, 135, 136, 139, 140, 141, 148, 149, 150, 151, 156, 157, 160, 161, 189, 193, 200, 203, 225, 229, 232, 233, 239, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 276, 279, 280, 283, 285, 288, 289, 291, 295, 296, 304, 306, 308, 311, 316, 319, 340, 378, 419, 420, 422, 423, 424, 425, 427, 428, 431, 432, 433, 434, 435, 436, 438, 439], "write": [0, 2, 3, 8, 23, 40, 41, 42, 45, 50, 56, 57, 58, 59, 62, 63, 64, 65, 73, 74, 78, 79, 100, 102, 107, 111, 118, 121, 124, 128, 135, 136, 148, 149, 156, 157, 174, 176, 178, 179, 181, 182, 183, 185, 186, 187, 191, 194, 195, 196, 198, 201, 202, 208, 209, 211, 212, 213, 215, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 230, 231, 234, 235, 236, 238, 239, 241, 300, 312, 313, 315, 317, 326, 327, 328, 330, 331, 332, 339, 344, 346, 348, 349, 357, 362, 378, 414, 416, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439], "new": [0, 1, 2, 3, 4, 8, 14, 15, 16, 17, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 67, 68, 69, 72, 73, 74, 77, 79, 80, 81, 82, 83, 84, 99, 100, 102, 106, 121, 124, 128, 135, 136, 143, 148, 149, 154, 155, 156, 157, 173, 174, 179, 218, 222, 231, 232, 239, 241, 256, 262, 264, 268, 285, 312, 313, 318, 323, 324, 325, 328, 331, 332, 333, 334, 335, 336, 339, 340, 341, 343, 344, 345, 346, 349, 356, 385, 415, 419, 421, 424, 426, 432, 433, 434, 438, 439], "ones": [0, 2, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 60, 61, 64, 67, 68, 69, 72, 73, 74, 77, 80, 81, 82, 83, 84, 107, 108, 121, 124, 128, 135, 136, 148, 149, 150, 151, 152, 156, 157, 183, 186, 189, 191, 193, 206, 210, 215, 222, 225, 231, 232, 235, 237, 241, 246, 272, 273, 284, 296, 312, 323, 324, 326, 327, 339, 343, 344, 346, 348, 349, 364, 419, 421, 423, 432, 433, 434, 436, 438, 439], "littl": [0, 1, 3, 75, 121, 124, 128, 135, 136, 148, 149, 156, 157, 232, 246, 323, 325, 340, 343, 345, 421, 422, 423, 427, 436, 438, 439], "effort": [0, 3, 434, 436, 438], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 90, 91, 93, 94, 95, 96, 98, 99, 100, 102, 105, 106, 107, 108, 109, 111, 113, 115, 116, 118, 119, 120, 121, 124, 125, 127, 128, 129, 130, 133, 134, 135, 136, 139, 140, 141, 142, 145, 148, 149, 150, 151, 152, 156, 157, 158, 160, 161, 162, 170, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 198, 200, 201, 202, 204, 206, 209, 210, 211, 212, 213, 215, 218, 219, 220, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 287, 288, 289, 291, 293, 294, 296, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 316, 318, 319, 320, 323, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 356, 358, 359, 360, 361, 362, 376, 377, 385, 386, 387, 389, 391, 393, 396, 398, 399, 400, 406, 410, 413, 414, 415, 416, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 438, 439], "repo": [0, 6, 182, 226, 235, 413, 433, 438], "attempt": [0, 14, 15, 16, 17, 18, 19, 20, 21, 27, 34, 39, 50, 60, 61, 67, 72, 107, 108, 121, 122, 123, 124, 127, 128, 129, 130, 135, 136, 148, 149, 153, 156, 157, 173, 241, 246, 313, 328, 331, 339, 356, 415, 426, 438], "align": [0, 262, 266, 438], "exist": [0, 2, 3, 4, 18, 21, 27, 34, 39, 40, 41, 42, 45, 50, 56, 58, 60, 61, 65, 67, 72, 78, 79, 93, 121, 124, 128, 135, 136, 148, 149, 156, 157, 183, 191, 230, 232, 241, 242, 256, 313, 326, 346, 400, 410, 432, 433, 438, 439], "ecosystem": [0, 423, 427, 438], "ha": [0, 1, 2, 3, 4, 5, 7, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 72, 73, 74, 77, 79, 80, 81, 82, 83, 84, 93, 95, 102, 105, 107, 113, 115, 121, 124, 125, 128, 132, 135, 136, 140, 141, 148, 149, 156, 157, 160, 161, 179, 182, 190, 204, 223, 224, 225, 226, 227, 229, 230, 231, 232, 241, 243, 262, 264, 266, 268, 274, 276, 293, 306, 308, 313, 323, 326, 340, 341, 343, 345, 378, 415, 419, 420, 421, 422, 423, 424, 427, 428, 431, 432, 433, 434, 435, 436, 438, 439], "dataset": [0, 38, 40, 41, 42, 45, 56, 57, 58, 59, 64, 65, 66, 71, 73, 74, 78, 79, 89, 92, 100, 102, 105, 107, 108, 145, 190, 239, 378, 412, 419, 420, 424, 435, 436, 438, 439], "pillar": [0, 438], "environ": [0, 1, 2, 5, 8, 10, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 61, 62, 67, 68, 69, 77, 79, 80, 81, 82, 83, 84, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 169, 175, 176, 178, 179, 181, 182, 183, 187, 189, 190, 191, 192, 193, 198, 204, 205, 206, 210, 211, 212, 215, 218, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 235, 238, 239, 242, 245, 247, 264, 268, 270, 271, 308, 330, 334, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 386, 387, 389, 391, 399, 400, 401, 402, 406, 407, 408, 409, 410, 412, 413, 414, 415, 418, 423, 425, 426, 427, 428, 430, 435, 436, 437], "model": [0, 1, 3, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 33, 34, 39, 40, 41, 42, 50, 56, 58, 60, 61, 65, 66, 67, 72, 78, 79, 121, 124, 128, 135, 136, 142, 148, 149, 156, 157, 182, 189, 210, 225, 235, 237, 240, 241, 248, 249, 250, 255, 257, 264, 268, 269, 270, 271, 275, 276, 283, 286, 295, 301, 302, 303, 307, 312, 318, 320, 323, 324, 325, 326, 328, 329, 330, 331, 334, 335, 336, 339, 340, 341, 343, 344, 345, 346, 356, 396, 401, 402, 403, 412, 413, 415, 416, 418, 421, 424, 427, 430, 432, 433, 434, 436, 437, 439], "data": [0, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 133, 134, 135, 136, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 158, 159, 162, 167, 174, 176, 179, 181, 182, 189, 190, 191, 193, 195, 197, 200, 202, 206, 212, 215, 222, 223, 229, 231, 232, 233, 238, 241, 245, 246, 258, 261, 264, 268, 271, 274, 275, 285, 287, 296, 299, 300, 305, 308, 309, 310, 312, 313, 315, 316, 317, 323, 324, 326, 327, 328, 330, 331, 332, 339, 343, 344, 345, 346, 348, 349, 356, 358, 359, 360, 361, 362, 376, 378, 385, 387, 393, 396, 398, 401, 406, 408, 409, 410, 412, 414, 415, 416, 418, 422, 423, 424, 425, 426, 430, 434, 435, 436, 437, 439], "util": [0, 3, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 27, 34, 39, 50, 60, 61, 64, 66, 67, 72, 107, 108, 119, 120, 121, 124, 128, 133, 134, 135, 136, 141, 148, 149, 150, 151, 156, 157, 163, 182, 210, 215, 225, 237, 241, 244, 247, 248, 249, 255, 262, 264, 266, 268, 319, 320, 321, 322, 341, 406, 412, 417, 419, 421, 423, 425, 426, 427, 433, 434, 436, 438, 439], "e": [0, 1, 2, 3, 7, 8, 10, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 60, 61, 65, 67, 68, 69, 72, 77, 79, 80, 81, 82, 83, 84, 93, 95, 99, 100, 113, 115, 121, 124, 125, 128, 135, 136, 148, 149, 156, 157, 160, 162, 179, 181, 183, 186, 187, 188, 197, 200, 203, 204, 206, 210, 218, 225, 227, 230, 231, 232, 235, 237, 241, 242, 262, 264, 265, 266, 268, 271, 275, 287, 293, 294, 299, 304, 306, 308, 309, 311, 312, 313, 323, 325, 326, 327, 331, 332, 339, 340, 343, 344, 345, 346, 348, 349, 357, 358, 359, 360, 361, 376, 387, 399, 409, 414, 415, 420, 421, 423, 425, 426, 428, 432, 433, 435, 436, 438, 439], "g": [0, 1, 2, 3, 7, 8, 10, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 60, 61, 65, 67, 68, 69, 72, 77, 79, 80, 81, 82, 83, 84, 113, 121, 124, 125, 128, 135, 136, 148, 149, 156, 157, 160, 162, 179, 181, 183, 186, 197, 200, 203, 206, 210, 218, 225, 227, 230, 231, 232, 235, 237, 241, 242, 262, 264, 265, 266, 267, 268, 271, 275, 293, 294, 304, 309, 312, 313, 326, 346, 357, 367, 368, 369, 370, 372, 373, 374, 375, 376, 409, 414, 415, 420, 421, 423, 425, 428, 432, 433, 434, 435, 436, 438, 439], "collector": [0, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 36, 50, 57, 62, 63, 64, 66, 70, 73, 74, 102, 107, 108, 121, 124, 128, 135, 136, 148, 149, 152, 156, 157, 179, 182, 215, 223, 241, 246, 264, 268, 285, 393, 396, 398, 401, 402, 406, 408, 409, 412, 415, 416, 423, 436, 439], "contain": [0, 2, 3, 7, 13, 14, 15, 16, 17, 19, 20, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 87, 92, 99, 100, 102, 103, 105, 107, 108, 109, 114, 117, 118, 121, 124, 128, 135, 136, 142, 148, 149, 156, 157, 173, 174, 175, 182, 186, 189, 193, 200, 210, 222, 225, 230, 231, 232, 235, 237, 238, 239, 241, 245, 248, 249, 262, 263, 266, 267, 269, 271, 274, 275, 300, 305, 306, 309, 311, 312, 313, 317, 320, 323, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 339, 340, 341, 343, 344, 345, 346, 348, 349, 356, 357, 358, 359, 360, 361, 362, 364, 382, 387, 399, 406, 407, 408, 409, 410, 414, 415, 416, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 432, 433, 434, 435, 436, 438, 439], "etc": [0, 2, 3, 7, 8, 27, 34, 39, 45, 50, 60, 61, 67, 72, 77, 121, 124, 128, 135, 136, 148, 149, 156, 157, 202, 222, 232, 241, 242, 269, 275, 293, 415, 420, 421, 427, 436, 438, 439], "have": [0, 1, 2, 3, 5, 6, 7, 8, 9, 14, 15, 17, 18, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 39, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 60, 61, 62, 63, 64, 66, 67, 68, 69, 72, 73, 74, 77, 78, 80, 81, 82, 83, 84, 102, 106, 109, 121, 124, 128, 135, 136, 148, 149, 150, 151, 156, 157, 162, 167, 170, 174, 175, 178, 182, 189, 193, 194, 202, 205, 206, 222, 223, 225, 229, 230, 231, 232, 239, 241, 243, 246, 248, 249, 269, 274, 275, 276, 285, 296, 308, 314, 315, 323, 325, 340, 343, 345, 348, 352, 353, 356, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 378, 387, 396, 414, 415, 416, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 438, 439], "few": [0, 2, 8, 108, 128, 378, 387, 421, 422, 425, 432, 433, 436, 438, 439], "depend": [0, 1, 2, 3, 4, 7, 8, 28, 56, 58, 80, 121, 124, 127, 128, 129, 130, 135, 136, 148, 149, 153, 156, 157, 160, 161, 189, 193, 313, 317, 343, 380, 414, 419, 421, 422, 432, 433, 434, 438, 439], "possibl": [0, 2, 3, 4, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 60, 61, 67, 68, 69, 72, 77, 80, 81, 82, 83, 84, 94, 100, 107, 113, 121, 124, 128, 135, 136, 148, 149, 156, 157, 175, 186, 210, 225, 230, 231, 232, 235, 237, 241, 248, 249, 262, 263, 266, 267, 312, 376, 391, 396, 414, 419, 421, 422, 423, 425, 427, 428, 432, 433, 434, 436, 438, 439], "standard": [0, 2, 3, 52, 121, 206, 217, 239, 243, 244, 245, 259, 271, 277, 278, 283, 304, 325, 340, 343, 348, 349, 358, 359, 360, 361, 419, 420, 424, 425, 433, 436, 438], "numpi": [0, 3, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 121, 124, 128, 129, 135, 136, 148, 149, 156, 157, 200, 228, 233, 242, 396, 423, 434, 436, 438, 439], "common": [0, 2, 3, 4, 77, 128, 133, 176, 194, 301, 302, 303, 307, 323, 324, 325, 326, 331, 332, 339, 340, 343, 344, 345, 346, 348, 349, 406, 413, 414, 415, 416, 419, 421, 425, 428, 431, 432, 433, 434, 435, 438, 439], "openai": [0, 7, 24, 127, 129, 136, 153, 421, 434, 438, 439], "gym": [0, 1, 3, 4, 8, 14, 15, 16, 17, 21, 22, 62, 121, 124, 125, 127, 128, 129, 130, 132, 135, 136, 140, 141, 143, 144, 148, 149, 153, 156, 157, 160, 161, 166, 170, 172, 178, 182, 185, 194, 201, 202, 206, 208, 213, 215, 218, 225, 231, 238, 239, 241, 242, 406, 413, 419, 420, 421, 422, 424, 428, 429, 434, 435, 436], "onli": [0, 1, 2, 3, 4, 7, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 60, 61, 62, 63, 64, 67, 68, 69, 72, 73, 74, 77, 79, 80, 81, 82, 83, 84, 93, 95, 99, 100, 102, 107, 108, 115, 121, 122, 123, 124, 127, 128, 129, 130, 132, 134, 135, 136, 143, 144, 148, 149, 150, 151, 153, 156, 157, 175, 178, 182, 183, 185, 186, 187, 189, 190, 192, 193, 197, 200, 204, 206, 210, 211, 215, 222, 223, 224, 225, 226, 230, 231, 232, 235, 237, 239, 241, 242, 246, 266, 268, 274, 275, 300, 304, 305, 309, 310, 312, 313, 314, 315, 323, 325, 326, 327, 331, 332, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 358, 359, 360, 361, 362, 378, 385, 400, 415, 416, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 431, 432, 433, 434, 436, 438, 439], "option": [0, 1, 2, 3, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 89, 93, 94, 95, 96, 99, 100, 101, 102, 103, 105, 106, 107, 108, 111, 115, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 133, 134, 135, 136, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 156, 157, 158, 159, 160, 161, 162, 167, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 190, 192, 193, 194, 195, 197, 198, 200, 201, 202, 203, 204, 205, 206, 210, 211, 213, 214, 217, 218, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 264, 265, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 285, 287, 288, 289, 292, 293, 294, 296, 300, 304, 305, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 356, 357, 358, 359, 360, 361, 362, 364, 367, 368, 369, 370, 372, 373, 374, 375, 376, 378, 380, 383, 385, 387, 389, 390, 391, 392, 393, 394, 396, 400, 406, 408, 409, 410, 414, 422, 424, 427, 432, 433, 434, 436, 438], "On": [0, 3, 7, 18, 19, 20, 21, 31, 263, 267, 414, 420, 432, 433], "end": [0, 2, 3, 14, 15, 17, 27, 34, 39, 45, 50, 57, 60, 61, 62, 63, 64, 67, 72, 73, 74, 79, 91, 100, 102, 106, 107, 108, 121, 124, 128, 135, 136, 148, 149, 156, 157, 194, 200, 208, 223, 224, 230, 232, 241, 248, 249, 262, 263, 266, 267, 270, 308, 326, 346, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 438, 439], "come": [0, 1, 2, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 45, 50, 113, 121, 124, 128, 134, 135, 136, 139, 148, 149, 156, 157, 189, 193, 299, 300, 301, 302, 303, 309, 317, 323, 325, 340, 343, 345, 378, 419, 420, 421, 422, 426, 427, 428, 429, 432, 433, 436, 438, 439], "set": [0, 1, 2, 3, 7, 9, 12, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 67, 68, 69, 72, 73, 74, 79, 93, 94, 95, 102, 106, 109, 115, 121, 124, 126, 128, 129, 134, 135, 136, 140, 141, 142, 148, 149, 150, 151, 156, 157, 160, 161, 162, 171, 172, 174, 176, 178, 179, 182, 183, 186, 189, 190, 193, 200, 201, 202, 203, 210, 215, 223, 224, 225, 226, 230, 231, 232, 235, 237, 239, 241, 242, 262, 264, 266, 268, 270, 274, 275, 282, 284, 285, 293, 299, 304, 312, 313, 325, 326, 332, 337, 340, 341, 343, 346, 362, 378, 386, 387, 391, 393, 402, 410, 413, 414, 415, 417, 419, 420, 421, 422, 423, 425, 426, 427, 431, 432, 433, 434, 435, 436, 438, 439], "re": [0, 2, 3, 8, 27, 34, 39, 45, 50, 57, 60, 61, 62, 63, 64, 67, 72, 73, 74, 79, 102, 106, 121, 124, 128, 135, 136, 148, 149, 156, 157, 197, 241, 268, 272, 273, 276, 309, 313, 385, 416, 419, 421, 422, 424, 426, 431, 432, 434, 438, 439], "usabl": [0, 416, 422, 438], "function": [0, 2, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 86, 93, 94, 95, 96, 102, 109, 111, 115, 121, 124, 125, 128, 129, 135, 136, 148, 149, 156, 157, 162, 170, 172, 173, 174, 178, 179, 189, 193, 200, 229, 230, 232, 233, 239, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 272, 273, 274, 275, 276, 279, 280, 281, 283, 285, 288, 289, 291, 294, 296, 301, 302, 303, 304, 306, 308, 309, 311, 312, 313, 315, 316, 317, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 339, 340, 341, 343, 344, 345, 346, 348, 349, 350, 351, 352, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 396, 406, 412, 414, 419, 422, 423, 424, 425, 428, 431, 434, 436, 439], "cost": [0, 2, 30, 94, 323, 325, 340, 343, 345, 415, 419, 420, 423, 432, 433, 434, 436], "return": [0, 2, 3, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 89, 92, 94, 100, 102, 103, 105, 107, 108, 111, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 133, 134, 135, 136, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 153, 156, 157, 160, 161, 164, 165, 166, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 245, 246, 249, 250, 251, 252, 253, 254, 256, 258, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 281, 283, 286, 288, 289, 292, 293, 294, 295, 297, 300, 301, 302, 303, 304, 308, 309, 311, 312, 313, 317, 318, 319, 320, 322, 323, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 343, 344, 345, 346, 348, 349, 352, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 378, 382, 386, 396, 399, 401, 406, 407, 408, 409, 410, 412, 414, 416, 419, 420, 421, 423, 425, 426, 428, 431, 432, 433, 434, 435, 436, 438, 439], "process": [0, 1, 3, 4, 5, 8, 14, 15, 16, 17, 18, 19, 20, 21, 27, 34, 39, 40, 41, 42, 50, 56, 57, 58, 60, 61, 64, 65, 67, 72, 73, 74, 75, 78, 79, 95, 99, 100, 103, 107, 115, 121, 124, 125, 128, 132, 135, 136, 139, 143, 148, 149, 150, 151, 156, 157, 181, 182, 189, 193, 200, 225, 228, 230, 239, 241, 264, 268, 274, 275, 285, 306, 311, 412, 416, 419, 420, 422, 423, 424, 432, 433, 434, 435, 436, 438, 439], "good": [0, 1, 4, 9, 148, 419, 421, 422, 423, 425, 433, 438, 439], "runtim": [0, 2, 3, 23, 27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241, 434], "perform": [0, 2, 3, 4, 8, 14, 15, 17, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 60, 61, 66, 67, 68, 69, 72, 77, 78, 80, 81, 82, 83, 84, 121, 122, 123, 124, 127, 128, 129, 130, 134, 135, 136, 148, 149, 153, 156, 157, 160, 161, 163, 189, 193, 200, 205, 227, 230, 232, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 276, 279, 280, 283, 284, 285, 288, 289, 291, 296, 304, 306, 308, 311, 316, 319, 325, 326, 335, 343, 346, 391, 396, 415, 419, 420, 421, 422, 423, 424, 427, 429, 431, 432, 433, 434, 439], "To": [0, 2, 3, 4, 6, 7, 8, 9, 18, 19, 20, 27, 34, 39, 50, 57, 60, 61, 62, 63, 64, 66, 67, 72, 73, 74, 91, 100, 102, 107, 108, 111, 118, 119, 120, 121, 124, 127, 128, 129, 133, 134, 135, 136, 139, 148, 149, 150, 151, 153, 154, 155, 156, 157, 160, 182, 187, 223, 225, 239, 241, 247, 264, 268, 285, 301, 302, 303, 313, 326, 332, 337, 341, 348, 378, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 414, 415, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 432, 433, 434, 435, 436, 438, 439], "read": [0, 2, 3, 7, 23, 31, 32, 36, 43, 57, 59, 62, 63, 64, 66, 69, 70, 73, 74, 93, 94, 95, 96, 99, 102, 109, 111, 115, 121, 124, 127, 128, 129, 135, 136, 148, 149, 156, 157, 174, 175, 176, 178, 179, 181, 182, 183, 185, 186, 187, 189, 191, 192, 194, 195, 196, 197, 198, 201, 202, 208, 209, 211, 212, 213, 215, 218, 219, 220, 222, 223, 224, 225, 226, 227, 230, 231, 234, 235, 236, 238, 239, 241, 247, 281, 300, 301, 302, 303, 305, 308, 309, 312, 313, 315, 317, 318, 323, 324, 325, 331, 332, 333, 334, 335, 336, 339, 340, 341, 343, 344, 345, 346, 349, 356, 358, 359, 360, 361, 362, 378, 391, 396, 414, 419, 420, 421, 423, 424, 425, 431, 432, 433, 434, 435, 438, 439], "philosophi": [0, 9], "capabl": [0, 1, 3, 7, 9, 11, 23, 416, 419, 424, 427, 431, 435, 439], "beyond": [0, 45, 121, 124, 128, 135, 136, 148, 149, 156, 157, 423], "api": [0, 2, 3, 5, 23, 31, 32, 34, 43, 45, 60, 69, 72, 77, 121, 124, 150, 151, 153, 210, 237, 239, 246, 414, 415, 416, 423, 424, 425, 426, 427, 428, 432, 433, 434, 436, 438, 439], "check": [0, 2, 3, 4, 5, 6, 7, 9, 18, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 60, 61, 64, 67, 68, 69, 72, 77, 80, 81, 82, 83, 84, 85, 87, 90, 91, 98, 107, 121, 124, 125, 127, 128, 129, 135, 136, 142, 148, 149, 156, 157, 162, 163, 182, 183, 187, 196, 202, 211, 225, 228, 232, 241, 242, 256, 264, 268, 300, 305, 306, 309, 310, 311, 312, 313, 326, 337, 348, 378, 411, 414, 415, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439], "paper": [0, 119, 120, 122, 123, 130, 133, 134, 140, 141, 143, 144, 153, 160, 161, 210, 235, 237, 249, 262, 286, 295, 330, 338, 348, 419, 421, 432, 433], "releas": [0, 4, 7, 10, 27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 200, 230, 232, 241, 326, 346], "sync": [0, 14, 15, 17, 18, 19, 20, 21, 398, 406, 416, 419], "so": [0, 2, 3, 4, 6, 7, 10, 11, 27, 34, 39, 40, 41, 42, 45, 50, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 72, 73, 74, 79, 102, 121, 124, 128, 135, 136, 140, 141, 148, 149, 156, 157, 200, 225, 230, 239, 241, 246, 314, 315, 378, 419, 421, 422, 426, 429, 432, 433, 434, 439], "make": [0, 2, 3, 4, 7, 11, 27, 34, 39, 40, 41, 42, 45, 50, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 72, 73, 74, 77, 79, 102, 105, 109, 111, 118, 121, 124, 128, 129, 132, 134, 135, 136, 138, 144, 148, 149, 156, 157, 162, 173, 175, 187, 195, 203, 206, 210, 211, 215, 219, 223, 227, 231, 235, 241, 244, 247, 262, 263, 264, 266, 267, 268, 274, 275, 277, 305, 313, 323, 325, 340, 343, 345, 358, 359, 360, 361, 376, 393, 402, 410, 414, 415, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 431, 432, 433, 434, 435, 436, 438, 439], "sure": [0, 3, 4, 7, 34, 109, 121, 128, 132, 187, 215, 305, 410, 414, 419, 421, 422, 423, 426, 432, 433, 434, 436, 438, 439], "alwai": [0, 2, 3, 14, 15, 20, 27, 28, 34, 39, 50, 60, 61, 67, 72, 77, 80, 89, 90, 91, 98, 121, 124, 128, 135, 136, 148, 149, 156, 157, 202, 205, 227, 239, 241, 333, 341, 414, 415, 420, 421, 422, 423, 432, 433, 434, 436], "enjoi": [0, 2, 3, 427], "latest": [0, 2, 3, 10, 143, 146, 147, 150, 151, 393, 421, 432, 433, 434, 438], "featur": [0, 2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 23, 27, 34, 54, 60, 72, 77, 78, 100, 107, 108, 121, 124, 128, 135, 136, 139, 148, 149, 150, 151, 154, 155, 156, 157, 162, 179, 182, 197, 200, 202, 208, 225, 226, 234, 239, 244, 248, 249, 259, 260, 262, 263, 264, 266, 267, 268, 269, 274, 277, 278, 313, 320, 323, 325, 340, 343, 345, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 410, 414, 415, 419, 420, 421, 422, 423, 425, 426, 427, 429, 434, 436, 438, 439], "recent": [0, 7, 238, 242, 439], "version": [0, 1, 2, 3, 6, 26, 27, 29, 32, 34, 35, 39, 43, 44, 47, 49, 50, 53, 55, 56, 58, 60, 61, 66, 67, 72, 81, 82, 83, 84, 107, 121, 124, 127, 128, 129, 130, 135, 136, 143, 144, 148, 149, 150, 153, 156, 157, 160, 161, 173, 182, 229, 238, 239, 241, 242, 244, 264, 268, 276, 282, 303, 323, 325, 340, 341, 343, 345, 346, 358, 361, 413, 414, 415, 419, 421, 422, 423, 424, 426, 429, 432, 433, 434, 435, 439], "although": [0, 1, 3, 8, 21, 27, 34, 39, 60, 61, 67, 72, 80, 121, 124, 128, 135, 136, 148, 149, 156, 157, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 276, 279, 280, 283, 285, 288, 289, 291, 296, 304, 306, 308, 311, 316, 319, 415, 416, 419, 420, 427, 436], "core": [0, 2, 3, 8, 57, 62, 63, 64, 73, 74, 102, 416, 422, 425, 438], "guarante": [0, 2, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 60, 61, 65, 67, 68, 69, 72, 77, 79, 80, 81, 82, 83, 84, 93, 94, 95, 96, 109, 111, 115, 121, 124, 128, 135, 136, 148, 149, 156, 157, 230, 239, 241, 313, 427], "backward": [0, 8, 27, 34, 39, 50, 60, 61, 67, 72, 119, 120, 121, 124, 128, 135, 136, 148, 149, 156, 157, 239, 241, 262, 263, 266, 267, 284, 313, 323, 324, 326, 327, 331, 332, 339, 343, 344, 345, 346, 348, 349, 419, 421, 422, 423, 426, 427, 429, 432, 433, 434], "compat": [0, 2, 3, 7, 14, 15, 16, 23, 27, 34, 39, 50, 60, 61, 67, 72, 94, 102, 105, 107, 108, 109, 113, 121, 124, 128, 130, 135, 136, 145, 148, 149, 156, 157, 182, 223, 235, 239, 241, 242, 262, 263, 264, 266, 267, 268, 310, 323, 324, 326, 327, 328, 330, 331, 332, 339, 341, 343, 344, 345, 346, 348, 349, 352, 419, 422, 436], "2": [0, 1, 2, 3, 8, 9, 10, 14, 15, 16, 21, 22, 23, 24, 25, 26, 27, 30, 31, 32, 34, 35, 36, 39, 43, 45, 46, 47, 48, 49, 50, 54, 55, 57, 58, 59, 60, 61, 62, 64, 67, 69, 70, 72, 73, 74, 75, 78, 79, 89, 93, 95, 99, 100, 102, 107, 108, 113, 115, 119, 120, 121, 124, 125, 128, 133, 134, 135, 136, 139, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 160, 161, 167, 174, 178, 179, 181, 183, 186, 187, 189, 191, 192, 193, 202, 203, 206, 208, 210, 212, 215, 218, 222, 223, 224, 225, 230, 231, 232, 235, 237, 239, 241, 242, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 260, 261, 262, 263, 264, 266, 267, 268, 269, 272, 273, 274, 275, 276, 283, 284, 285, 293, 296, 304, 305, 306, 308, 312, 316, 317, 323, 324, 325, 326, 327, 331, 332, 339, 340, 343, 344, 345, 346, 348, 349, 357, 358, 359, 360, 361, 363, 364, 367, 368, 369, 370, 371, 372, 373, 374, 375, 378, 387, 414, 415, 418, 419, 420, 421, 422, 423, 425, 426, 431, 432, 433, 434, 436, 437, 438, 439], "0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 15, 17, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 77, 79, 80, 81, 82, 83, 84, 86, 89, 93, 94, 95, 99, 100, 102, 107, 108, 115, 119, 120, 121, 124, 127, 128, 130, 131, 133, 134, 135, 136, 142, 143, 144, 146, 147, 148, 149, 153, 154, 155, 156, 157, 175, 176, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 190, 191, 192, 194, 195, 196, 198, 201, 202, 203, 204, 205, 206, 209, 210, 211, 212, 213, 215, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 271, 273, 274, 275, 277, 278, 281, 284, 285, 288, 289, 292, 293, 294, 296, 300, 304, 306, 311, 312, 313, 315, 316, 319, 320, 323, 324, 325, 326, 327, 328, 330, 332, 333, 334, 335, 336, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 356, 357, 358, 359, 360, 361, 364, 365, 366, 387, 394, 406, 410, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439], "nightli": [0, 6], "via": [0, 1, 3, 4, 7, 8, 34, 57, 60, 64, 72, 73, 74, 94, 128, 135, 148, 156, 203, 210, 213, 237, 326, 329, 341, 415, 416, 419, 420, 421, 422, 425, 427, 436, 438, 439], "tensordict": [0, 1, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 90, 91, 93, 94, 95, 96, 98, 99, 100, 102, 105, 107, 108, 113, 114, 115, 116, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 133, 134, 135, 136, 139, 140, 141, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 167, 173, 174, 175, 176, 178, 179, 181, 182, 183, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 204, 206, 208, 209, 210, 211, 212, 213, 215, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 243, 245, 246, 247, 257, 258, 261, 264, 268, 270, 271, 274, 275, 285, 286, 287, 295, 296, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 356, 357, 358, 359, 360, 361, 362, 376, 377, 387, 391, 392, 393, 395, 396, 412, 415, 416, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 439], "git": [0, 6, 7, 10], "clone": [0, 2, 4, 8, 25, 26, 28, 29, 30, 31, 32, 34, 35, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 60, 67, 68, 69, 72, 77, 79, 80, 81, 82, 83, 84, 93, 202, 212, 230, 231, 301, 302, 303, 312, 331, 339, 348, 412, 419, 432, 434, 438], "willing": 0, "contribut": [0, 2], "cd": [0, 7], "path": [0, 3, 6, 7, 27, 34, 39, 40, 41, 42, 45, 50, 56, 57, 58, 60, 61, 62, 63, 64, 65, 67, 72, 73, 74, 78, 79, 89, 91, 93, 102, 110, 116, 121, 124, 128, 135, 136, 148, 149, 156, 157, 158, 172, 210, 237, 241, 271, 380, 385, 396, 416, 420, 423, 429, 432], "root": [0, 2, 3, 31, 32, 43, 45, 57, 62, 63, 64, 69, 73, 74, 79, 90, 91, 98, 102, 121, 124, 128, 135, 136, 148, 149, 156, 157, 173, 182, 204, 226, 227, 264, 265, 268, 293, 294, 415, 422, 424, 432, 433, 434, 436, 439], "http": [0, 2, 5, 6, 7, 10, 14, 15, 18, 19, 20, 24, 57, 75, 99, 100, 119, 120, 122, 123, 130, 132, 133, 134, 140, 141, 143, 144, 145, 146, 147, 150, 151, 153, 158, 159, 160, 161, 182, 210, 235, 244, 250, 251, 252, 253, 254, 255, 258, 259, 260, 266, 271, 272, 273, 278, 279, 280, 284, 285, 286, 288, 289, 295, 306, 323, 324, 326, 328, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 342, 343, 344, 345, 346, 347, 348, 358, 363, 371, 411, 430, 435, 438], "github": [0, 2, 5, 6, 7, 10, 18, 19, 20, 24, 119, 120, 122, 123, 127, 130, 133, 134, 140, 141, 143, 144, 146, 147, 150, 151, 153, 158, 159, 160, 161, 179, 182, 235, 244, 425, 429, 432, 433, 438], "com": [0, 2, 5, 6, 7, 10, 18, 19, 20, 24, 119, 120, 122, 123, 130, 132, 133, 134, 140, 141, 143, 144, 146, 147, 150, 151, 153, 158, 159, 160, 161, 182, 244, 438], "setup": [0, 7, 119, 120, 132, 133, 134, 158], "py": [0, 3, 24, 127, 129, 172, 182, 256, 286, 295, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439], "develop": [0, 3, 4, 7, 45, 132, 419, 438], "A": [0, 1, 3, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 106, 107, 109, 113, 114, 115, 116, 117, 121, 124, 126, 128, 130, 131, 135, 136, 148, 149, 152, 153, 156, 157, 162, 168, 173, 175, 177, 178, 179, 181, 182, 185, 187, 190, 192, 198, 202, 204, 210, 211, 213, 220, 225, 227, 230, 231, 232, 235, 236, 238, 239, 240, 241, 242, 243, 245, 247, 248, 249, 258, 261, 262, 263, 264, 266, 267, 268, 269, 271, 272, 273, 275, 276, 278, 284, 296, 304, 305, 306, 308, 309, 310, 313, 315, 316, 319, 320, 323, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 352, 356, 358, 359, 360, 361, 362, 364, 376, 379, 380, 383, 385, 386, 389, 396, 398, 406, 412, 415, 418, 419, 421, 423, 425, 426, 427, 430, 434, 437, 439], "seri": [0, 2, 3, 7, 8, 54, 92, 103, 113, 114, 117, 118, 156, 205, 231, 378, 414, 415, 419, 420, 421, 428, 429, 432, 433, 436, 439], "quick": [0, 423], "ramp": 0, "up": [0, 1, 2, 3, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 30, 45, 66, 121, 124, 128, 135, 136, 148, 149, 156, 157, 178, 181, 200, 203, 226, 231, 241, 244, 343, 413, 414, 415, 419, 420, 421, 422, 425, 429, 432, 433, 434, 436, 438, 439], "If": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 67, 68, 69, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 89, 93, 94, 95, 96, 100, 102, 103, 105, 106, 107, 108, 113, 115, 121, 122, 123, 124, 125, 127, 128, 129, 130, 132, 134, 135, 136, 140, 141, 142, 143, 144, 148, 149, 150, 151, 153, 156, 157, 158, 159, 160, 161, 162, 166, 170, 173, 174, 175, 178, 179, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 195, 197, 200, 202, 203, 204, 205, 206, 210, 211, 214, 215, 218, 219, 224, 225, 226, 227, 228, 229, 230, 232, 233, 235, 237, 239, 241, 242, 247, 248, 249, 261, 262, 263, 264, 266, 267, 268, 269, 272, 273, 274, 275, 276, 285, 296, 300, 304, 305, 306, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 322, 323, 324, 325, 326, 327, 328, 330, 332, 333, 334, 335, 337, 339, 340, 341, 343, 344, 345, 346, 348, 349, 356, 357, 358, 359, 360, 361, 362, 372, 373, 374, 375, 376, 382, 385, 386, 392, 393, 396, 398, 400, 406, 410, 413, 415, 419, 420, 421, 422, 423, 424, 426, 428, 429, 431, 432, 433, 434, 436, 438, 439], "hurri": [0, 424], "last": [0, 1, 2, 3, 4, 14, 15, 16, 17, 23, 25, 26, 27, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 59, 60, 68, 69, 77, 79, 80, 81, 82, 83, 84, 106, 107, 108, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 133, 134, 135, 136, 143, 144, 148, 149, 153, 156, 157, 167, 175, 178, 181, 197, 204, 206, 211, 224, 226, 228, 242, 243, 248, 249, 261, 262, 264, 266, 268, 269, 272, 273, 279, 290, 293, 296, 304, 308, 313, 326, 358, 360, 361, 420, 421, 422, 423, 424, 425, 432, 433, 434, 435, 436, 438, 439], "item": [0, 2, 3, 8, 14, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 57, 62, 63, 64, 68, 69, 72, 73, 74, 77, 78, 80, 81, 82, 83, 84, 89, 94, 100, 102, 106, 113, 135, 175, 190, 196, 231, 272, 273, 327, 328, 330, 387, 415, 416, 419, 421, 422, 426, 427, 432, 433, 434, 436], "navig": [0, 433], "previou": [0, 3, 4, 10, 50, 57, 62, 63, 64, 66, 73, 74, 102, 121, 124, 128, 135, 136, 148, 149, 156, 157, 174, 197, 225, 241, 262, 266, 289, 304, 421, 422, 423, 424, 425, 429, 434, 439], "whenev": [0, 1, 2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 23, 34, 50, 57, 60, 64, 72, 73, 74, 79, 99, 100, 107, 108, 122, 123, 127, 129, 130, 140, 141, 153, 160, 161, 172, 190, 197, 201, 232, 238, 341, 358, 359, 360, 361, 376, 398, 414, 428, 436], "want": [0, 2, 3, 6, 7, 8, 34, 60, 72, 108, 182, 206, 284, 323, 324, 326, 327, 328, 330, 332, 333, 334, 339, 341, 343, 344, 345, 346, 348, 349, 356, 414, 419, 420, 421, 422, 423, 424, 426, 427, 428, 432, 433, 434, 435, 436, 438, 439], "ted": [0, 36, 51, 70, 71, 90, 91, 98, 412, 418, 430, 437], "s": [0, 1, 2, 3, 6, 7, 8, 11, 27, 31, 34, 39, 40, 41, 42, 45, 50, 56, 57, 58, 60, 61, 62, 63, 64, 65, 67, 72, 73, 74, 77, 79, 102, 107, 108, 113, 119, 120, 121, 124, 128, 132, 133, 134, 135, 136, 140, 141, 143, 148, 149, 150, 151, 156, 157, 160, 161, 162, 182, 186, 190, 200, 204, 210, 223, 225, 228, 229, 230, 231, 232, 235, 237, 239, 241, 243, 246, 248, 249, 256, 261, 264, 268, 273, 274, 275, 278, 284, 286, 293, 295, 301, 303, 306, 308, 309, 312, 313, 316, 324, 326, 331, 337, 339, 341, 346, 348, 358, 359, 360, 361, 362, 376, 414, 415, 418, 419, 420, 421, 422, 423, 424, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439], "modul": [0, 2, 3, 4, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 33, 34, 39, 50, 60, 61, 66, 67, 72, 113, 119, 120, 121, 124, 128, 135, 136, 139, 142, 145, 148, 149, 156, 157, 172, 181, 186, 190, 192, 194, 200, 202, 210, 211, 224, 225, 230, 231, 232, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 331, 332, 333, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 354, 356, 358, 359, 360, 361, 362, 376, 396, 403, 406, 412, 415, 416, 418, 420, 421, 424, 426, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437], "optim": [0, 1, 2, 8, 27, 34, 39, 50, 60, 61, 66, 67, 72, 119, 120, 121, 124, 128, 135, 136, 148, 149, 156, 157, 230, 232, 241, 245, 271, 277, 278, 284, 293, 324, 326, 341, 342, 343, 346, 353, 391, 392, 396, 406, 415, 416, 418, 421, 422, 423, 424, 425, 427, 430, 432, 433, 434, 437], "collect": [0, 1, 2, 3, 4, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 45, 50, 57, 62, 63, 64, 73, 74, 102, 106, 121, 124, 128, 135, 136, 148, 149, 153, 156, 157, 162, 179, 182, 197, 206, 210, 237, 285, 308, 324, 327, 330, 332, 344, 346, 348, 349, 378, 387, 393, 396, 398, 399, 400, 406, 416, 418, 419, 422, 423, 424, 425, 426, 429, 430, 432, 433, 434, 435, 436, 437, 438, 439], "storag": [0, 1, 8, 27, 34, 36, 39, 40, 41, 42, 45, 50, 56, 57, 58, 60, 61, 62, 63, 64, 65, 67, 70, 72, 73, 74, 76, 79, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 106, 107, 108, 110, 111, 112, 113, 115, 116, 121, 124, 126, 128, 135, 136, 148, 149, 156, 157, 181, 182, 189, 193, 215, 241, 412, 416, 418, 420, 421, 422, 423, 424, 426, 429, 430, 432, 433, 435, 437], "log": [0, 3, 4, 8, 11, 66, 256, 257, 258, 272, 273, 281, 293, 294, 305, 306, 309, 313, 323, 324, 325, 326, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 343, 344, 345, 346, 349, 356, 385, 389, 390, 391, 396, 406, 414, 415, 416, 418, 419, 420, 421, 424, 425, 429, 430, 432, 433, 434, 437, 438], "your": [0, 2, 7, 8, 10, 11, 14, 15, 18, 27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 132, 135, 136, 139, 148, 149, 150, 151, 156, 157, 239, 241, 313, 386, 410, 412, 413, 414, 415, 418, 420, 421, 422, 424, 425, 426, 427, 428, 430, 432, 433, 436, 437, 438], "own": [0, 1, 14, 15, 17, 21, 22, 27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 150, 151, 156, 157, 241, 378, 412, 415, 418, 420, 421, 424, 430, 432, 433, 434, 437], "train": [0, 1, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 27, 30, 34, 39, 40, 41, 42, 50, 56, 58, 60, 61, 65, 66, 67, 72, 78, 79, 89, 121, 124, 128, 135, 136, 140, 141, 148, 149, 150, 151, 156, 157, 162, 189, 198, 210, 224, 229, 232, 235, 237, 241, 243, 244, 246, 251, 253, 261, 264, 268, 285, 323, 324, 325, 326, 327, 331, 332, 333, 334, 335, 336, 339, 340, 341, 343, 344, 345, 346, 348, 349, 356, 358, 396, 398, 406, 412, 414, 416, 418, 420, 424, 427, 428, 430, 435, 436, 437, 438, 439], "loop": [0, 8, 40, 41, 42, 56, 58, 65, 79, 121, 124, 128, 135, 136, 148, 149, 156, 157, 243, 261, 284, 285, 343, 396, 415, 416, 418, 419, 420, 424, 426, 427, 428, 430, 431, 436, 437, 438], "ppo": [0, 4, 8, 309, 313, 325, 340, 343, 412, 414, 418, 419, 420, 423, 425, 426, 430, 432, 437], "pendulum": [0, 3, 14, 15, 16, 17, 21, 22, 62, 113, 121, 122, 123, 124, 125, 127, 128, 129, 135, 136, 143, 148, 149, 156, 157, 182, 185, 186, 187, 195, 201, 202, 206, 213, 215, 219, 220, 223, 225, 226, 227, 230, 231, 232, 233, 239, 241, 247, 264, 268, 406, 414, 418, 420, 421, 424, 425, 426, 430, 437, 438, 439], "introduct": [0, 415, 418, 424, 430, 432, 433, 437, 439], "multi": [0, 1, 7, 9, 27, 34, 39, 50, 57, 60, 61, 64, 67, 68, 69, 72, 73, 74, 90, 91, 98, 121, 124, 128, 135, 136, 140, 141, 148, 149, 154, 155, 156, 157, 203, 232, 241, 262, 264, 266, 268, 269, 274, 275, 276, 308, 313, 356, 358, 359, 360, 361, 412, 418, 419, 420, 421, 422, 424, 425, 430, 434, 437, 438], "agent": [0, 9, 63, 68, 69, 139, 140, 141, 146, 147, 150, 151, 154, 155, 158, 159, 160, 161, 163, 203, 222, 223, 224, 272, 273, 274, 275, 276, 278, 286, 295, 325, 340, 343, 356, 412, 418, 424, 430, 434, 437], "env": [0, 1, 2, 5, 6, 7, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 27, 31, 34, 36, 39, 45, 50, 60, 61, 62, 66, 67, 70, 72, 79, 102, 113, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 245, 247, 264, 268, 270, 271, 308, 312, 341, 376, 377, 378, 386, 400, 401, 402, 406, 408, 409, 410, 412, 414, 415, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437], "us": [0, 1, 2, 5, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 89, 90, 91, 93, 94, 98, 99, 100, 101, 102, 107, 108, 113, 115, 119, 120, 121, 124, 125, 127, 128, 129, 130, 133, 134, 135, 136, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 171, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 200, 201, 202, 203, 204, 206, 209, 210, 211, 212, 213, 215, 218, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 255, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 278, 281, 283, 284, 285, 286, 287, 293, 294, 295, 296, 299, 300, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 316, 317, 318, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 343, 344, 345, 346, 348, 349, 352, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 371, 376, 378, 381, 382, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 402, 404, 406, 410, 412, 413, 414, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 437, 439], "pretrain": [0, 418, 430, 437], "recurr": [0, 2, 181, 262, 263, 264, 266, 268, 289, 299, 418, 420, 425, 430, 436, 437], "dqn": [0, 2, 175, 194, 249, 258, 305, 306, 323, 324, 326, 327, 328, 330, 332, 333, 334, 338, 339, 341, 343, 344, 345, 346, 347, 348, 349, 356, 403, 412, 414, 418, 423, 425, 426, 429, 430, 437], "polici": [0, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 36, 50, 62, 70, 119, 120, 121, 124, 128, 135, 136, 142, 148, 149, 152, 156, 157, 171, 192, 202, 204, 224, 227, 243, 246, 247, 258, 261, 264, 268, 274, 275, 278, 285, 287, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 313, 316, 323, 324, 325, 326, 327, 331, 332, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 391, 398, 401, 402, 406, 408, 409, 412, 414, 416, 418, 420, 424, 426, 427, 430, 435, 436, 437, 438, 439], "replai": [0, 8, 16, 21, 50, 57, 62, 63, 64, 73, 74, 99, 100, 101, 102, 103, 104, 106, 108, 109, 111, 113, 114, 118, 181, 182, 192, 211, 215, 225, 231, 241, 326, 327, 328, 330, 331, 332, 339, 344, 346, 348, 349, 393, 396, 404, 406, 412, 415, 416, 418, 423, 430, 434, 435, 437], "buffer": [0, 4, 8, 14, 15, 16, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 67, 68, 69, 72, 73, 74, 77, 79, 80, 81, 82, 83, 84, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 113, 114, 115, 118, 121, 124, 128, 135, 136, 142, 148, 149, 156, 157, 181, 182, 186, 190, 192, 200, 210, 211, 215, 225, 230, 231, 232, 235, 237, 241, 243, 285, 304, 312, 315, 326, 327, 328, 330, 331, 332, 339, 344, 346, 348, 349, 358, 359, 360, 361, 362, 393, 396, 404, 406, 412, 415, 416, 418, 423, 428, 430, 434, 435, 437, 439], "export": [0, 6, 7, 418, 430, 437], "competit": [0, 3, 140, 141, 418, 430, 433, 437], "ddpg": [0, 251, 252, 253, 254, 327, 338, 347, 412, 414, 418, 420, 426, 430, 433, 437], "task": [0, 2, 3, 9, 66, 68, 69, 78, 121, 122, 123, 124, 128, 131, 135, 136, 140, 141, 148, 149, 150, 151, 153, 156, 157, 160, 161, 210, 223, 232, 235, 237, 331, 339, 418, 419, 420, 421, 422, 424, 425, 430, 432, 433, 434, 437, 439], "specif": [0, 1, 2, 5, 8, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 73, 74, 77, 80, 81, 82, 83, 84, 121, 124, 128, 135, 136, 146, 147, 148, 149, 156, 157, 160, 170, 190, 204, 225, 255, 264, 268, 304, 323, 341, 343, 345, 378, 396, 412, 415, 416, 418, 421, 422, 424, 425, 426, 427, 428, 429, 430, 432, 433, 436, 437, 438], "object": [0, 2, 3, 4, 6, 7, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 31, 34, 39, 40, 41, 42, 50, 52, 56, 58, 60, 61, 65, 67, 72, 77, 78, 79, 93, 94, 95, 96, 102, 105, 109, 111, 115, 118, 121, 124, 128, 133, 135, 136, 148, 149, 152, 156, 157, 175, 189, 193, 194, 200, 203, 206, 210, 230, 231, 232, 235, 239, 241, 264, 268, 271, 274, 275, 286, 293, 295, 300, 301, 309, 312, 313, 314, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 378, 400, 401, 402, 405, 406, 410, 412, 414, 416, 418, 420, 421, 422, 423, 427, 429, 430, 432, 433, 434, 436, 437, 439], "loss": [0, 3, 8, 58, 194, 284, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 356, 357, 358, 392, 396, 403, 406, 415, 416, 418, 423, 424, 426, 427, 428, 430, 434, 436, 437], "trainer": [0, 323, 324, 325, 331, 332, 333, 334, 335, 336, 339, 340, 341, 343, 344, 345, 346, 349, 356, 387, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 418, 419, 430, 437], "exampl": [0, 1, 2, 3, 4, 9, 10, 14, 15, 16, 17, 18, 21, 22, 23, 25, 26, 27, 28, 30, 31, 32, 34, 35, 36, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 72, 73, 74, 75, 78, 79, 80, 89, 93, 94, 95, 99, 100, 102, 107, 108, 113, 115, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 166, 167, 168, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 198, 200, 201, 202, 203, 206, 208, 209, 210, 211, 212, 213, 214, 215, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 235, 236, 237, 238, 239, 241, 242, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 260, 261, 262, 263, 264, 266, 267, 268, 269, 271, 273, 274, 275, 276, 281, 283, 284, 285, 286, 287, 295, 296, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 313, 315, 316, 317, 320, 323, 324, 326, 327, 328, 330, 331, 332, 333, 334, 339, 341, 343, 344, 345, 346, 348, 349, 350, 351, 356, 358, 359, 360, 361, 364, 376, 378, 386, 387, 388, 389, 390, 392, 393, 394, 395, 398, 406, 414, 415, 416, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 439], "packag": [0, 6, 7, 10, 172, 412, 413, 439], "batch": [0, 2, 14, 15, 16, 17, 18, 19, 20, 21, 23, 31, 50, 52, 54, 57, 59, 62, 63, 64, 66, 73, 74, 75, 77, 89, 93, 94, 95, 96, 100, 101, 102, 106, 107, 108, 113, 115, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 133, 134, 135, 136, 142, 143, 145, 146, 147, 148, 149, 156, 157, 158, 159, 160, 161, 174, 179, 182, 186, 187, 190, 197, 204, 206, 208, 211, 215, 222, 225, 227, 231, 232, 234, 238, 239, 241, 244, 256, 262, 263, 264, 266, 267, 268, 272, 273, 274, 275, 276, 277, 281, 285, 286, 292, 296, 299, 308, 312, 323, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 339, 340, 341, 343, 344, 345, 346, 348, 349, 356, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 387, 390, 393, 394, 395, 396, 398, 408, 409, 410, 412, 414, 415, 416, 420, 421, 422, 423, 424, 427, 429, 431, 432, 433, 435, 438, 439], "size": [0, 2, 14, 15, 16, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 89, 93, 94, 95, 96, 99, 100, 101, 102, 106, 107, 108, 109, 115, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 133, 134, 135, 136, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 167, 173, 175, 179, 181, 182, 183, 186, 188, 189, 190, 193, 194, 195, 197, 200, 203, 204, 208, 210, 212, 213, 215, 219, 221, 222, 223, 225, 227, 228, 231, 232, 233, 234, 237, 239, 241, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 266, 267, 268, 269, 271, 272, 273, 274, 275, 281, 282, 283, 284, 285, 286, 287, 288, 289, 292, 295, 296, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 315, 317, 320, 323, 324, 326, 327, 328, 330, 331, 332, 339, 341, 343, 344, 345, 346, 348, 349, 356, 357, 358, 359, 360, 361, 362, 378, 387, 393, 412, 414, 415, 420, 421, 422, 423, 424, 425, 427, 432, 433, 434, 439], "copi": [0, 2, 3, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 34, 35, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 60, 61, 65, 66, 67, 68, 72, 77, 78, 79, 80, 81, 82, 83, 84, 93, 121, 124, 128, 135, 136, 148, 149, 156, 157, 173, 178, 182, 200, 213, 224, 230, 231, 232, 239, 241, 242, 264, 268, 276, 304, 326, 341, 346, 376, 412, 415, 419, 420, 422, 424, 432, 436, 438], "interoper": [0, 14, 15, 412], "singl": [0, 2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 27, 31, 32, 34, 37, 39, 40, 41, 42, 43, 45, 48, 50, 56, 57, 58, 60, 61, 62, 63, 64, 65, 67, 69, 72, 73, 74, 75, 79, 94, 102, 108, 113, 121, 124, 127, 128, 135, 136, 140, 141, 148, 149, 156, 157, 160, 161, 175, 182, 183, 190, 203, 210, 215, 225, 230, 232, 237, 241, 248, 249, 262, 263, 264, 266, 267, 268, 269, 275, 311, 315, 324, 325, 326, 328, 330, 332, 333, 339, 340, 343, 344, 346, 348, 349, 353, 358, 359, 360, 361, 367, 368, 369, 370, 372, 373, 374, 375, 376, 410, 412, 414, 415, 419, 420, 421, 422, 423, 424, 425, 426, 427, 431, 432, 433, 434, 435, 436, 438], "node": [0, 2, 18, 19, 20, 21, 22, 31, 32, 40, 41, 42, 43, 45, 56, 58, 65, 69, 79, 136, 230, 412, 427, 438], "distribut": [0, 2, 3, 4, 9, 10, 18, 19, 20, 21, 22, 57, 62, 63, 64, 73, 74, 102, 121, 150, 151, 202, 206, 243, 245, 256, 257, 258, 259, 265, 271, 272, 273, 281, 282, 283, 284, 288, 289, 292, 293, 294, 304, 305, 306, 309, 313, 314, 323, 324, 325, 326, 331, 332, 333, 339, 340, 343, 344, 345, 346, 348, 349, 412, 415, 416, 420, 421, 423, 425, 427, 432, 433, 434, 438, 439], "helper": [0, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 419, 420, 422, 432, 434], "compos": [0, 3, 27, 34, 39, 50, 57, 60, 61, 64, 67, 72, 73, 74, 101, 102, 103, 104, 113, 114, 121, 124, 128, 135, 136, 148, 149, 156, 157, 182, 187, 200, 214, 230, 231, 232, 239, 241, 307, 308, 326, 335, 346, 378, 412, 419, 420, 421, 422, 423, 427, 431, 433, 435, 436, 438, 439], "episod": [0, 3, 45, 100, 107, 108, 121, 124, 128, 135, 136, 148, 149, 156, 157, 173, 178, 215, 218, 224, 245, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 412, 420, 424, 429, 432, 433, 436], "format": [0, 3, 27, 34, 36, 39, 48, 49, 50, 51, 54, 55, 60, 61, 67, 70, 71, 72, 79, 90, 91, 98, 105, 113, 121, 124, 128, 135, 136, 148, 149, 150, 156, 157, 182, 186, 210, 225, 231, 232, 235, 237, 241, 312, 378, 412, 419, 420, 423, 424, 426, 428, 438, 439], "tensorspec": [0, 3, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 80, 81, 82, 83, 84, 85, 86, 87, 121, 124, 128, 135, 136, 142, 148, 149, 152, 156, 157, 160, 161, 174, 175, 179, 180, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 194, 195, 197, 199, 201, 202, 203, 204, 206, 208, 212, 213, 214, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 241, 243, 261, 285, 289, 300, 304, 305, 306, 309, 310, 311, 312, 313, 314, 316, 324, 326, 328, 331, 332, 344, 346, 348, 349, 356, 412, 434], "tree": [0, 1, 40, 41, 42, 45, 56, 58, 65, 121, 124, 128, 135, 136, 148, 149, 156, 157, 182, 412, 432, 436], "forest": [0, 45, 79, 412], "human": [0, 24, 412, 434], "feedback": [0, 412, 429, 438], "rlhf": [0, 202, 412, 414], "spec": [0, 1, 2, 14, 15, 16, 21, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 119, 120, 121, 124, 126, 127, 128, 129, 130, 133, 134, 135, 136, 142, 143, 144, 146, 147, 148, 149, 152, 153, 156, 157, 158, 159, 160, 161, 162, 167, 170, 173, 174, 175, 176, 179, 180, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 197, 199, 201, 202, 203, 204, 206, 208, 210, 212, 213, 214, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 241, 243, 258, 261, 264, 268, 285, 287, 289, 300, 304, 305, 306, 309, 310, 311, 312, 313, 315, 316, 323, 324, 326, 327, 328, 330, 331, 332, 339, 343, 344, 345, 346, 348, 349, 356, 412, 414, 415, 419, 420, 421, 422, 423, 424, 425, 429, 431, 432, 433, 438], "lock": [0, 31, 32, 40, 41, 42, 43, 56, 58, 65, 69, 79, 121, 124, 128, 134, 135, 136, 148, 149, 156, 157, 179, 187, 225, 239, 412, 415, 434], "method": [0, 1, 2, 4, 16, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 89, 93, 94, 95, 96, 99, 100, 102, 107, 108, 109, 110, 111, 113, 115, 121, 124, 127, 128, 129, 130, 134, 135, 136, 148, 149, 152, 153, 156, 157, 170, 175, 176, 178, 179, 181, 182, 183, 186, 187, 189, 190, 191, 194, 195, 196, 197, 198, 201, 202, 204, 206, 209, 210, 211, 212, 213, 214, 215, 218, 219, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 241, 242, 243, 245, 246, 247, 256, 261, 264, 268, 274, 275, 276, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 311, 312, 313, 314, 320, 323, 324, 326, 327, 328, 330, 331, 332, 333, 334, 337, 339, 341, 343, 344, 345, 346, 348, 349, 356, 362, 376, 377, 407, 412, 415, 416, 417, 420, 421, 422, 423, 424, 425, 426, 427, 428, 432, 434, 436, 439], "partial": [0, 2, 121, 124, 128, 135, 136, 148, 149, 156, 157, 181, 182, 190, 224, 225, 226, 309, 396, 412, 422], "step": [0, 1, 4, 8, 14, 15, 16, 17, 18, 19, 20, 21, 34, 45, 50, 66, 79, 90, 91, 98, 100, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 133, 134, 135, 136, 142, 143, 144, 146, 147, 148, 149, 150, 151, 153, 156, 157, 158, 159, 173, 174, 176, 178, 179, 181, 182, 183, 186, 187, 191, 194, 195, 196, 197, 198, 201, 202, 204, 206, 209, 211, 212, 213, 215, 218, 219, 222, 223, 224, 225, 226, 227, 230, 231, 232, 235, 236, 238, 239, 241, 243, 244, 245, 259, 261, 262, 264, 266, 268, 270, 271, 284, 285, 308, 309, 313, 323, 334, 343, 357, 358, 359, 360, 361, 364, 365, 366, 377, 380, 387, 391, 396, 412, 416, 420, 422, 423, 425, 426, 428, 429, 431, 434, 435, 438], "reset": [0, 1, 2, 8, 14, 15, 16, 17, 18, 19, 20, 21, 27, 34, 39, 45, 50, 57, 60, 61, 62, 63, 64, 67, 72, 73, 74, 102, 108, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 133, 134, 135, 136, 139, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 156, 157, 158, 159, 162, 174, 177, 178, 179, 182, 190, 194, 197, 201, 205, 210, 218, 223, 224, 225, 226, 227, 230, 231, 232, 235, 238, 239, 241, 242, 247, 262, 264, 268, 276, 285, 298, 308, 341, 377, 412, 415, 419, 420, 421, 422, 424, 427, 431, 432, 433, 438], "vector": [0, 1, 8, 25, 54, 119, 120, 129, 133, 134, 139, 150, 151, 153, 160, 161, 192, 238, 251, 253, 262, 263, 266, 267, 269, 358, 361, 371, 372, 373, 374, 375, 412, 414, 415, 419, 420, 422, 431, 432, 433, 434, 435, 439], "custom": [0, 2, 5, 27, 34, 39, 50, 60, 61, 67, 72, 79, 121, 124, 128, 135, 136, 148, 149, 156, 157, 235, 241, 274, 275, 316, 322, 333, 343, 350, 410, 412, 414, 419, 420, 421, 422, 425, 426, 428, 432, 433], "nativ": [0, 1, 7, 9, 121, 124, 128, 135, 136, 148, 149, 156, 157, 182, 378, 412, 422, 436], "auto": [0, 95, 115, 124, 177, 178, 232, 238, 285, 324, 326, 332, 342, 344, 346, 348, 349, 412, 415, 432, 433], "dynam": [0, 2, 7, 14, 15, 16, 121, 124, 128, 135, 136, 148, 149, 156, 157, 162, 167, 241, 331, 339, 412, 421, 424, 434], "mask": [0, 1, 4, 23, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 121, 124, 128, 135, 136, 148, 149, 150, 151, 156, 157, 176, 211, 241, 246, 247, 258, 261, 272, 273, 287, 304, 305, 306, 310, 311, 332, 346, 393, 412, 420, 422, 423, 439], "action": [0, 2, 8, 9, 14, 15, 16, 17, 21, 36, 45, 54, 62, 66, 70, 72, 79, 99, 100, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 160, 161, 167, 173, 175, 176, 179, 185, 186, 189, 190, 191, 192, 193, 194, 195, 197, 198, 200, 202, 204, 205, 206, 208, 212, 213, 215, 219, 223, 225, 229, 231, 232, 233, 234, 238, 241, 243, 245, 247, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 261, 264, 268, 269, 270, 271, 272, 273, 274, 283, 285, 286, 287, 289, 292, 293, 295, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 313, 316, 317, 323, 324, 326, 327, 328, 330, 331, 332, 339, 341, 343, 344, 345, 346, 348, 349, 356, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 406, 410, 412, 414, 416, 419, 420, 421, 423, 424, 425, 426, 431, 432, 433, 435, 438, 439], "record": [0, 2, 11, 27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 168, 175, 202, 241, 343, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 391, 406, 412, 420, 421, 425, 429, 432], "domain": [0, 2, 8, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 121, 124, 128, 135, 136, 148, 149, 156, 157, 167, 192, 200, 225, 233, 300, 305, 306, 309, 310, 311, 312, 313, 314, 315, 320, 412, 421, 426, 432, 433, 434, 438, 439], "actor": [0, 3, 4, 21, 152, 202, 245, 250, 251, 253, 258, 259, 261, 271, 283, 285, 287, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 337, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 356, 412, 415, 420, 422, 424, 426, 429, 432, 435, 438], "explor": [0, 1, 240, 243, 246, 261, 278, 285, 300, 305, 306, 309, 310, 311, 312, 313, 323, 341, 391, 401, 402, 406, 412, 421, 422, 423, 424, 426, 427, 429, 432, 433, 434], "valu": [0, 1, 2, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 67, 68, 69, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 89, 99, 100, 102, 107, 108, 113, 121, 124, 128, 135, 136, 139, 148, 149, 156, 157, 162, 167, 172, 173, 174, 175, 178, 180, 182, 183, 185, 187, 189, 190, 191, 192, 193, 194, 200, 205, 206, 210, 211, 214, 215, 216, 218, 220, 222, 225, 226, 231, 232, 237, 239, 241, 242, 243, 244, 247, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 264, 265, 268, 269, 271, 272, 273, 274, 275, 277, 278, 281, 285, 286, 287, 292, 293, 294, 295, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 311, 312, 313, 316, 317, 319, 321, 322, 323, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 378, 386, 387, 389, 390, 391, 392, 393, 396, 406, 412, 416, 420, 423, 426, 427, 428, 431, 432, 433, 434, 436, 438, 439], "gener": [0, 1, 2, 3, 7, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 57, 60, 64, 66, 68, 69, 73, 74, 77, 79, 80, 81, 82, 83, 84, 102, 104, 106, 121, 124, 125, 128, 135, 136, 140, 141, 142, 145, 148, 149, 150, 151, 154, 155, 156, 157, 174, 179, 186, 187, 189, 190, 191, 195, 200, 202, 204, 206, 212, 213, 218, 219, 223, 225, 229, 231, 233, 238, 241, 246, 247, 256, 264, 268, 272, 273, 281, 300, 309, 313, 317, 318, 337, 344, 351, 358, 363, 371, 381, 396, 412, 415, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439], "hook": [0, 2, 27, 34, 36, 39, 50, 57, 60, 61, 62, 63, 64, 67, 70, 72, 73, 74, 102, 116, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 276, 279, 280, 283, 285, 287, 288, 289, 291, 296, 304, 306, 308, 311, 316, 319, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 412], "planner": [0, 245, 271, 412], "torch": [0, 1, 2, 3, 8, 9, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 89, 93, 94, 95, 99, 100, 102, 103, 106, 107, 108, 113, 114, 115, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 167, 173, 174, 175, 176, 178, 179, 180, 181, 183, 186, 187, 189, 190, 191, 192, 193, 194, 195, 200, 202, 203, 206, 208, 210, 212, 213, 215, 217, 218, 219, 220, 222, 223, 224, 225, 226, 228, 231, 232, 233, 235, 237, 239, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 281, 282, 283, 284, 285, 286, 287, 292, 293, 294, 295, 296, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 320, 321, 323, 324, 326, 327, 328, 330, 331, 332, 333, 334, 339, 341, 343, 344, 345, 346, 348, 349, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 380, 387, 394, 395, 406, 412, 414, 416, 419, 420, 421, 422, 423, 425, 426, 427, 429, 431, 432, 433, 434, 435, 436, 438, 439], "vmap": [0, 262, 263, 266, 267, 276, 296, 312, 315, 341, 412, 414], "random": [0, 1, 3, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 61, 66, 68, 69, 77, 80, 81, 82, 83, 84, 101, 113, 121, 124, 128, 135, 136, 142, 148, 149, 152, 156, 157, 162, 175, 190, 192, 205, 206, 225, 232, 247, 261, 262, 264, 266, 268, 309, 312, 313, 320, 324, 341, 344, 391, 400, 412, 414, 419, 420, 421, 423, 424, 425, 427, 434, 435, 436, 438, 439], "sac": [0, 332, 344, 346, 412], "redq": [0, 344, 412], "crossq": [0, 326, 412], "iql": [0, 331, 339, 412, 419, 432, 433], "cql": [0, 324, 330, 412], "gail": [0, 337, 412], "dt": [0, 149, 285, 412, 434], "td3": [0, 348, 349, 412], "bc": [0, 5, 348, 412], "a2c": [0, 323, 412], "dreamer": [0, 168, 169, 259, 334, 335, 336, 412, 414], "checkpoint": [0, 64, 91, 93, 97, 109, 110, 112, 116, 412, 436], "builder": [0, 412, 420, 439], "logger": [0, 3, 11, 376, 378, 380, 381, 382, 383, 384, 385, 390, 396, 406, 410, 412, 420, 432], "_util": [0, 3, 148, 242, 412, 423, 429], "implement_for": [0, 3, 412], "set_auto_unwrap_transformed_env": [0, 12, 232, 412], "auto_unwrap_transformed_env": [0, 386, 412], "thing": [0, 3, 7, 8, 121, 124, 128, 135, 136, 148, 149, 156, 157, 231, 274, 275, 332, 346, 413, 421, 422, 423, 424, 425, 426, 427, 428, 432, 433, 436, 439], "consid": [0, 1, 2, 3, 8, 20, 27, 31, 32, 34, 39, 43, 50, 57, 60, 61, 64, 67, 69, 72, 73, 74, 93, 95, 107, 108, 115, 121, 124, 128, 135, 136, 148, 149, 156, 157, 182, 192, 239, 241, 256, 274, 275, 292, 324, 326, 339, 344, 346, 348, 349, 358, 360, 361, 413, 415, 419, 424, 425, 426, 434, 436], "when": [0, 1, 2, 3, 5, 8, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 39, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 60, 61, 62, 63, 64, 67, 68, 69, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 90, 91, 93, 94, 95, 96, 98, 99, 100, 101, 102, 106, 107, 108, 109, 111, 115, 121, 124, 125, 127, 128, 129, 134, 135, 136, 139, 140, 141, 143, 145, 148, 149, 150, 151, 156, 157, 160, 161, 171, 173, 176, 178, 181, 182, 186, 189, 190, 192, 193, 202, 203, 205, 206, 210, 211, 218, 225, 227, 230, 231, 232, 235, 237, 238, 239, 241, 242, 244, 245, 256, 258, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 284, 287, 293, 308, 309, 312, 313, 315, 319, 324, 325, 326, 328, 332, 333, 339, 340, 341, 343, 344, 346, 348, 349, 350, 356, 357, 358, 359, 360, 361, 376, 377, 378, 380, 383, 385, 393, 410, 413, 414, 415, 416, 419, 420, 421, 422, 423, 425, 427, 428, 432, 433, 434, 435, 436, 438, 439], "debug": [0, 6, 8, 45, 66, 79, 227, 413, 439], "work": [0, 1, 2, 3, 4, 8, 27, 34, 39, 50, 60, 61, 64, 67, 72, 93, 100, 105, 107, 108, 111, 118, 121, 124, 127, 128, 129, 132, 135, 136, 148, 149, 153, 156, 157, 170, 173, 175, 176, 178, 179, 181, 182, 183, 186, 187, 191, 194, 195, 196, 198, 201, 202, 209, 210, 211, 212, 213, 215, 218, 219, 222, 223, 224, 225, 226, 227, 230, 231, 235, 236, 238, 239, 241, 242, 248, 249, 269, 306, 311, 316, 325, 340, 343, 396, 413, 414, 419, 420, 421, 422, 424, 427, 431, 432, 433, 434, 435, 436, 438, 439], "habitat": [0, 3, 130, 413, 435], "lab": [0, 3, 122, 123, 130, 413], "mujoco": [0, 6, 8, 153, 413, 419, 421, 422], "error": [0, 1, 3, 7, 10, 25, 26, 27, 30, 34, 35, 39, 40, 41, 42, 46, 47, 48, 49, 50, 54, 55, 56, 58, 60, 61, 65, 67, 68, 72, 79, 93, 121, 124, 128, 135, 136, 148, 149, 156, 157, 158, 162, 163, 211, 230, 241, 242, 341, 413, 415, 419, 421, 432, 433, 439], "solut": [0, 2, 3, 6, 7, 9, 21, 107, 413, 414, 416, 423, 438], "resourc": [0, 1, 21, 130, 413, 419, 421, 423, 432, 433], "issu": [0, 2, 3, 4, 5, 8, 62, 91, 93, 95, 107, 115, 121, 124, 127, 128, 132, 135, 136, 148, 149, 156, 157, 173, 182, 211, 226, 300, 305, 306, 309, 310, 311, 312, 313, 413, 438], "customis": [0, 413, 420, 428], "video": [0, 4, 9, 378, 380, 383, 385, 391, 410, 412, 413, 429, 432, 433], "render": [0, 3, 8, 134, 160, 376, 378, 391, 413, 419, 420, 421, 423, 424, 428], "index": [0, 3, 7, 8, 10, 16, 25, 26, 28, 29, 30, 31, 32, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 68, 69, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 92, 93, 94, 95, 99, 100, 102, 103, 105, 107, 111, 113, 114, 115, 117, 118, 121, 124, 128, 135, 136, 140, 141, 146, 147, 148, 149, 156, 157, 160, 161, 173, 177, 182, 186, 192, 232, 272, 273, 308, 412, 424, 431, 432, 433, 436, 438], "search": [0, 2, 31, 32, 43, 69, 79, 145, 174, 420], "page": [0, 7, 24, 385, 426], "somewhat": [1, 2, 415, 425, 439], "equival": [1, 3, 25, 26, 27, 30, 31, 34, 35, 39, 40, 41, 42, 46, 47, 48, 49, 50, 54, 55, 56, 57, 58, 60, 61, 64, 65, 67, 72, 73, 74, 78, 79, 89, 119, 120, 121, 124, 127, 128, 129, 130, 133, 134, 135, 136, 143, 144, 146, 147, 148, 149, 153, 156, 157, 158, 159, 179, 191, 194, 225, 227, 232, 241, 258, 266, 269, 287, 305, 306, 310, 311, 343, 393, 427, 438, 439], "dataload": [1, 89, 106, 108, 135, 190, 420, 427, 436], "except": [1, 2, 3, 14, 15, 16, 17, 18, 19, 20, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 60, 61, 65, 67, 68, 69, 72, 77, 79, 80, 81, 82, 83, 84, 121, 124, 128, 135, 136, 148, 149, 156, 157, 182, 196, 215, 224, 225, 226, 230, 232, 241, 243, 261, 262, 264, 266, 268, 281, 285, 323, 326, 341, 343, 346, 378, 414, 419, 420, 424, 432, 436, 438, 439], "1": [1, 2, 3, 4, 8, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 89, 90, 93, 94, 95, 99, 100, 102, 107, 108, 113, 115, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 133, 134, 135, 136, 139, 140, 141, 142, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 160, 161, 167, 173, 175, 176, 178, 179, 180, 181, 182, 183, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 198, 200, 202, 203, 204, 206, 208, 210, 211, 212, 213, 215, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 235, 237, 239, 241, 242, 243, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 277, 278, 281, 283, 284, 285, 286, 288, 289, 291, 292, 293, 294, 295, 300, 301, 302, 303, 304, 306, 308, 309, 310, 311, 312, 313, 315, 316, 317, 319, 320, 323, 324, 325, 326, 327, 328, 330, 331, 332, 335, 339, 340, 342, 343, 344, 345, 346, 347, 348, 349, 356, 357, 358, 359, 360, 361, 364, 366, 367, 368, 372, 373, 375, 376, 378, 387, 391, 393, 394, 406, 410, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 425, 426, 427, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439], "thei": [1, 2, 3, 4, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 67, 68, 69, 72, 73, 74, 77, 79, 80, 81, 82, 83, 84, 100, 102, 121, 124, 127, 128, 129, 135, 136, 139, 140, 141, 148, 149, 150, 151, 156, 157, 160, 161, 178, 181, 196, 202, 210, 219, 227, 231, 232, 237, 241, 268, 323, 324, 325, 326, 331, 332, 333, 334, 335, 336, 339, 340, 341, 343, 344, 345, 346, 348, 349, 356, 393, 396, 414, 415, 416, 419, 420, 421, 422, 423, 426, 431, 432, 433, 434, 435, 436, 438, 439], "over": [1, 2, 3, 4, 8, 14, 15, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 60, 61, 64, 67, 68, 69, 72, 73, 74, 75, 77, 78, 80, 81, 82, 83, 84, 88, 100, 102, 106, 107, 108, 121, 124, 128, 135, 136, 140, 141, 148, 149, 156, 157, 173, 175, 190, 192, 206, 218, 226, 241, 281, 284, 293, 296, 315, 333, 335, 341, 364, 376, 399, 414, 416, 419, 420, 421, 423, 424, 425, 426, 427, 432, 433, 434, 439], "non": [1, 2, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 25, 27, 28, 29, 31, 32, 34, 39, 40, 41, 42, 43, 44, 50, 52, 53, 56, 57, 58, 60, 61, 65, 67, 68, 69, 72, 77, 79, 80, 81, 82, 83, 84, 94, 96, 121, 124, 128, 135, 136, 148, 149, 150, 151, 156, 157, 173, 179, 180, 182, 186, 190, 197, 210, 222, 225, 231, 232, 233, 234, 235, 237, 241, 247, 262, 264, 266, 268, 274, 312, 313, 323, 324, 326, 327, 328, 330, 331, 332, 333, 334, 335, 339, 341, 343, 344, 345, 346, 348, 349, 356, 358, 359, 360, 361, 414, 419, 422, 423, 432, 433, 434, 436, 439], "static": [1, 34, 60, 66, 72, 78, 100, 107, 108, 130, 149, 239, 242, 339, 424, 434, 436], "like": [1, 2, 3, 4, 7, 11, 21, 27, 31, 32, 34, 39, 43, 45, 50, 52, 57, 60, 61, 64, 67, 69, 72, 73, 74, 78, 96, 102, 108, 121, 124, 125, 128, 130, 135, 136, 139, 148, 149, 150, 151, 156, 157, 162, 182, 190, 194, 225, 228, 241, 262, 266, 275, 307, 313, 323, 325, 340, 343, 344, 345, 414, 415, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 432, 433, 434, 435, 436, 438, 439], "being": [1, 2, 3, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 27, 34, 39, 50, 60, 61, 67, 68, 72, 89, 94, 113, 116, 121, 124, 127, 128, 129, 130, 134, 135, 136, 148, 149, 153, 156, 157, 171, 181, 189, 192, 193, 200, 205, 213, 225, 230, 231, 232, 241, 261, 264, 268, 285, 325, 326, 340, 341, 343, 346, 378, 393, 398, 408, 409, 410, 414, 415, 419, 420, 421, 422, 427, 432, 433, 434, 436], "accept": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 27, 34, 39, 40, 41, 42, 50, 56, 58, 60, 61, 64, 65, 67, 72, 79, 80, 89, 121, 124, 128, 135, 136, 142, 148, 149, 156, 157, 177, 182, 186, 197, 200, 210, 218, 222, 225, 230, 231, 232, 233, 234, 235, 237, 241, 269, 296, 312, 313, 314, 326, 346, 378, 416, 421, 423, 424, 428, 436, 438, 439], "two": [1, 2, 3, 4, 8, 10, 27, 34, 39, 45, 46, 47, 48, 49, 50, 57, 60, 61, 64, 66, 67, 72, 73, 74, 79, 102, 106, 107, 108, 121, 124, 128, 135, 136, 148, 149, 156, 157, 179, 206, 210, 230, 237, 241, 254, 262, 264, 266, 268, 274, 275, 290, 293, 313, 340, 348, 352, 391, 396, 415, 419, 420, 421, 422, 423, 424, 425, 427, 428, 431, 432, 433, 434, 436, 438, 439], "main": [1, 2, 3, 5, 14, 15, 20, 22, 23, 62, 125, 182, 313, 396, 414, 415, 419, 420, 431, 438, 439], "argument": [1, 2, 3, 11, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 67, 68, 69, 72, 73, 74, 77, 79, 80, 81, 82, 83, 84, 89, 91, 93, 94, 95, 99, 100, 102, 105, 106, 107, 108, 111, 113, 115, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 133, 134, 135, 136, 140, 141, 143, 144, 146, 147, 148, 149, 150, 153, 156, 157, 158, 159, 160, 161, 167, 173, 175, 176, 178, 179, 181, 182, 183, 185, 186, 187, 190, 191, 194, 195, 196, 198, 200, 201, 202, 204, 209, 210, 211, 212, 213, 215, 218, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 247, 248, 249, 261, 262, 264, 266, 268, 269, 272, 273, 274, 275, 277, 285, 296, 300, 304, 305, 306, 308, 309, 310, 311, 312, 313, 314, 316, 317, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 337, 338, 339, 340, 342, 343, 344, 345, 346, 348, 349, 351, 356, 358, 359, 360, 361, 362, 366, 376, 377, 378, 383, 385, 389, 396, 399, 406, 407, 410, 419, 420, 421, 422, 423, 424, 425, 427, 432, 433, 434, 436, 438, 439], "list": [1, 2, 3, 6, 7, 8, 9, 14, 15, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 60, 61, 62, 63, 64, 67, 68, 69, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 86, 94, 96, 102, 105, 106, 107, 108, 109, 111, 121, 122, 123, 124, 127, 128, 129, 130, 135, 136, 140, 141, 142, 145, 146, 147, 148, 149, 150, 151, 153, 156, 157, 158, 159, 160, 161, 163, 173, 180, 181, 185, 189, 190, 191, 193, 202, 203, 206, 208, 210, 218, 220, 228, 229, 230, 231, 232, 234, 235, 237, 239, 241, 247, 248, 249, 251, 257, 260, 264, 268, 269, 272, 273, 279, 287, 306, 308, 310, 311, 313, 315, 316, 317, 324, 326, 339, 341, 344, 346, 348, 349, 355, 358, 361, 376, 377, 391, 393, 408, 409, 415, 419, 421, 424, 425, 426, 427, 431, 432, 434, 435, 436, 438, 439], "constructor": [1, 2, 3, 16, 18, 19, 20, 21, 62, 64, 73, 74, 78, 99, 113, 121, 124, 128, 135, 136, 143, 148, 149, 156, 157, 160, 178, 182, 230, 248, 249, 269, 299, 309, 313, 323, 324, 326, 327, 328, 330, 332, 333, 334, 339, 341, 343, 344, 345, 346, 348, 349, 356, 358, 359, 360, 361, 362, 407, 410, 414, 419, 420, 421, 424, 427, 432, 433, 436, 438], "iter": [1, 2, 3, 15, 16, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 60, 61, 62, 63, 64, 67, 68, 69, 72, 73, 74, 77, 80, 81, 82, 83, 84, 88, 89, 96, 102, 106, 119, 120, 121, 124, 128, 133, 134, 135, 136, 148, 149, 156, 157, 190, 195, 206, 219, 241, 242, 244, 246, 247, 248, 249, 269, 274, 275, 291, 300, 305, 309, 310, 312, 314, 315, 317, 341, 355, 391, 395, 396, 415, 416, 419, 421, 422, 427, 429, 432, 433, 434], "execut": [1, 2, 3, 6, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 27, 34, 39, 50, 57, 59, 60, 61, 62, 63, 64, 67, 72, 73, 74, 77, 93, 94, 102, 107, 108, 119, 120, 121, 124, 125, 128, 129, 130, 132, 133, 134, 135, 136, 142, 143, 148, 149, 153, 156, 157, 158, 176, 187, 204, 227, 232, 241, 261, 262, 264, 266, 268, 276, 299, 308, 314, 315, 341, 348, 400, 410, 414, 415, 416, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 432, 433, 436, 437, 438, 439], "queri": [1, 2, 3, 14, 27, 34, 39, 40, 41, 42, 45, 50, 56, 58, 60, 61, 65, 67, 72, 79, 94, 121, 124, 128, 135, 136, 148, 149, 156, 157, 210, 235, 239, 241, 315, 415, 419, 426, 434, 438], "defin": [1, 2, 3, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 60, 61, 62, 67, 68, 69, 72, 77, 79, 80, 81, 82, 83, 84, 121, 124, 128, 135, 136, 148, 149, 156, 157, 211, 224, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 274, 276, 279, 280, 283, 284, 285, 288, 289, 291, 296, 304, 306, 308, 311, 316, 319, 320, 328, 330, 341, 358, 359, 360, 361, 362, 377, 407, 414, 419, 420, 422, 426, 429, 434, 436, 439], "number": [1, 2, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 89, 93, 94, 95, 96, 99, 100, 102, 105, 107, 108, 115, 119, 120, 121, 124, 127, 128, 129, 133, 134, 135, 136, 142, 143, 144, 145, 148, 149, 150, 151, 156, 157, 160, 161, 175, 176, 178, 179, 181, 182, 183, 186, 187, 191, 192, 194, 195, 196, 198, 201, 202, 205, 206, 209, 211, 212, 213, 215, 217, 218, 219, 222, 223, 224, 225, 226, 227, 230, 231, 232, 235, 236, 238, 239, 241, 243, 244, 245, 248, 249, 256, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 274, 275, 279, 280, 285, 286, 288, 289, 292, 293, 294, 295, 300, 304, 308, 309, 312, 313, 317, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 337, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 383, 385, 387, 389, 391, 396, 398, 399, 400, 408, 409, 410, 414, 415, 419, 420, 421, 422, 424, 425, 427, 429, 432, 433, 434, 435, 436, 439], "befor": [1, 2, 3, 4, 6, 7, 10, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 30, 34, 35, 39, 45, 46, 47, 50, 60, 61, 67, 72, 78, 79, 106, 108, 113, 121, 124, 128, 129, 135, 136, 148, 149, 156, 157, 162, 175, 179, 180, 182, 183, 184, 185, 186, 188, 189, 191, 192, 193, 194, 195, 197, 199, 200, 201, 202, 203, 204, 205, 206, 208, 212, 213, 214, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 238, 239, 241, 246, 262, 264, 268, 269, 277, 278, 323, 324, 325, 326, 331, 332, 333, 334, 335, 336, 339, 340, 341, 343, 344, 345, 346, 348, 349, 356, 359, 360, 361, 393, 419, 421, 422, 423, 427, 428, 432, 433, 434, 436, 439], "deliv": [1, 2, 3, 16, 419, 420, 424, 427, 438], "stack": [1, 2, 3, 7, 8, 14, 15, 16, 18, 20, 21, 25, 26, 28, 29, 30, 31, 32, 35, 40, 41, 42, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 62, 63, 64, 65, 69, 72, 73, 74, 77, 79, 80, 81, 82, 83, 84, 87, 94, 99, 102, 121, 124, 127, 128, 129, 135, 136, 139, 148, 149, 150, 151, 156, 157, 182, 190, 204, 239, 262, 264, 266, 267, 268, 308, 314, 315, 324, 326, 339, 344, 346, 348, 349, 377, 387, 412, 420, 423, 424, 431, 432, 434, 438], "user": [1, 2, 3, 5, 8, 21, 23, 27, 34, 39, 45, 50, 60, 61, 67, 72, 79, 100, 108, 121, 124, 128, 135, 136, 148, 149, 156, 157, 158, 162, 183, 200, 224, 230, 232, 241, 255, 326, 343, 346, 348, 378, 407, 415, 416, 419, 420, 424, 426, 427, 434, 438, 439], "reach": [1, 3, 14, 15, 16, 17, 18, 19, 20, 21, 22, 66, 106, 121, 124, 128, 134, 135, 136, 140, 141, 148, 149, 156, 157, 160, 161, 204, 223, 243, 261, 285, 419, 421, 429, 432, 433, 438, 439], "done": [1, 2, 3, 4, 7, 8, 14, 15, 16, 17, 22, 23, 25, 26, 28, 29, 30, 31, 32, 34, 35, 36, 38, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 66, 68, 69, 70, 72, 77, 79, 80, 81, 82, 83, 84, 90, 91, 98, 100, 102, 107, 108, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 173, 174, 175, 176, 178, 179, 182, 189, 190, 191, 193, 194, 195, 200, 204, 205, 206, 208, 212, 213, 215, 217, 219, 222, 223, 225, 226, 230, 231, 232, 233, 239, 241, 245, 262, 264, 268, 271, 293, 308, 323, 324, 325, 326, 327, 328, 330, 331, 332, 339, 340, 343, 344, 345, 346, 348, 349, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 414, 415, 419, 421, 422, 423, 424, 426, 427, 429, 431, 432, 433, 434, 436, 438, 439], "state": [1, 2, 3, 4, 14, 15, 16, 17, 27, 34, 36, 39, 45, 50, 57, 60, 61, 62, 63, 64, 66, 67, 70, 72, 73, 74, 79, 90, 91, 98, 102, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 133, 134, 135, 136, 142, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 162, 173, 174, 178, 181, 182, 183, 185, 186, 187, 190, 191, 194, 197, 200, 204, 206, 213, 223, 224, 229, 230, 231, 232, 233, 234, 239, 241, 245, 250, 255, 259, 262, 263, 264, 266, 267, 268, 269, 271, 276, 279, 283, 286, 288, 289, 295, 301, 308, 312, 318, 323, 325, 326, 330, 332, 340, 341, 343, 344, 345, 346, 356, 357, 358, 359, 360, 361, 362, 396, 410, 414, 415, 419, 420, 421, 422, 423, 424, 425, 426, 427, 432, 433, 434, 439], "after": [1, 2, 3, 8, 14, 15, 17, 18, 20, 21, 27, 34, 36, 39, 40, 41, 42, 50, 56, 58, 60, 61, 65, 66, 67, 72, 79, 95, 102, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 132, 133, 134, 135, 136, 143, 144, 146, 147, 148, 149, 153, 156, 157, 158, 159, 173, 175, 176, 178, 179, 180, 182, 183, 184, 185, 186, 188, 189, 191, 192, 194, 195, 197, 199, 200, 201, 202, 203, 204, 205, 206, 208, 212, 213, 214, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 241, 243, 244, 261, 262, 264, 268, 277, 305, 310, 326, 335, 346, 348, 420, 421, 422, 423, 424, 425, 427, 429, 432, 433, 434, 435, 436, 439], "predefin": [1, 378, 420, 422, 427, 436, 438], "becaus": [1, 2, 3, 4, 7, 27, 34, 39, 40, 41, 42, 50, 56, 58, 60, 61, 65, 66, 67, 72, 79, 94, 121, 124, 128, 135, 136, 148, 149, 156, 157, 194, 202, 223, 238, 241, 254, 275, 300, 305, 306, 308, 309, 310, 311, 312, 313, 323, 343, 414, 419, 420, 422, 423, 425, 426, 427, 431, 432, 433, 434, 436, 439], "potenti": [1, 2, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 121, 124, 128, 135, 136, 148, 149, 156, 157, 434, 436], "comput": [1, 3, 4, 8, 14, 16, 21, 27, 30, 34, 39, 50, 60, 61, 66, 67, 72, 119, 120, 121, 124, 128, 133, 134, 135, 136, 148, 149, 156, 157, 174, 206, 220, 232, 236, 241, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 273, 274, 275, 276, 279, 280, 281, 283, 285, 288, 289, 291, 293, 294, 296, 301, 304, 306, 308, 309, 311, 313, 316, 319, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 400, 415, 419, 421, 422, 423, 424, 425, 431, 432, 433, 435, 436], "heavi": [1, 8, 436], "crucial": [1, 2, 3, 243, 261, 285, 331, 339, 341, 419, 420, 421, 422, 424, 426, 428, 432, 433, 434, 438, 439], "configur": [1, 8, 21, 22, 66, 121, 202, 250, 255, 283, 341, 343, 414, 419, 420, 421, 426, 432, 433, 434], "hyperparamet": [1, 105, 241, 323, 324, 326, 327, 328, 330, 331, 332, 333, 334, 339, 341, 343, 344, 345, 346, 348, 349, 356, 419, 428, 434, 436], "appropri": [1, 3, 4, 7, 92, 103, 113, 114, 117, 118, 136, 148, 156, 194, 407, 410, 419, 428, 436], "paramet": [1, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 93, 94, 95, 96, 99, 100, 101, 102, 103, 105, 106, 109, 111, 113, 115, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 133, 134, 135, 136, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167, 171, 172, 173, 174, 175, 176, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 406, 407, 408, 409, 410, 414, 415, 419, 422, 423, 425, 429, 432, 433, 434, 435, 438], "take": [1, 2, 3, 8, 23, 27, 34, 39, 45, 60, 61, 66, 67, 72, 110, 116, 119, 120, 121, 124, 128, 133, 134, 135, 136, 148, 149, 156, 157, 185, 223, 226, 227, 231, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 274, 276, 279, 280, 283, 285, 288, 289, 291, 296, 304, 306, 307, 308, 309, 311, 313, 316, 319, 322, 343, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 378, 387, 398, 414, 416, 419, 420, 421, 423, 424, 425, 426, 432, 433, 434, 436, 439], "consider": [1, 2, 3, 8, 127, 129, 231, 420, 432, 433, 436], "whether": [1, 2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 72, 73, 74, 75, 77, 79, 80, 81, 82, 83, 84, 93, 95, 102, 103, 115, 121, 124, 128, 134, 135, 136, 140, 141, 142, 148, 149, 150, 151, 156, 157, 160, 161, 174, 178, 187, 189, 190, 193, 224, 230, 232, 239, 241, 248, 249, 264, 268, 269, 308, 313, 317, 323, 324, 325, 326, 327, 328, 330, 332, 333, 337, 340, 341, 343, 344, 345, 346, 348, 349, 356, 358, 361, 386, 410, 419, 420, 421, 423, 424, 432, 433, 434, 438, 439], "should": [1, 2, 3, 4, 5, 7, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 89, 90, 93, 96, 100, 102, 107, 108, 109, 113, 116, 121, 122, 123, 124, 127, 128, 129, 130, 134, 135, 136, 139, 142, 148, 149, 150, 151, 156, 157, 160, 161, 162, 173, 174, 175, 178, 179, 182, 185, 186, 189, 191, 194, 195, 197, 202, 203, 204, 206, 211, 212, 213, 215, 218, 219, 223, 224, 226, 229, 231, 232, 233, 238, 239, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 274, 275, 276, 279, 280, 283, 285, 288, 289, 291, 296, 304, 306, 308, 309, 311, 312, 313, 316, 319, 323, 325, 326, 332, 338, 340, 341, 343, 344, 345, 346, 347, 348, 357, 358, 359, 360, 361, 362, 378, 380, 386, 391, 392, 393, 396, 406, 408, 409, 410, 414, 415, 416, 419, 420, 421, 422, 423, 425, 427, 428, 431, 432, 433, 434, 435, 436, 438, 439], "occur": [1, 8, 15, 34, 60, 68, 69, 72, 79, 121, 124, 128, 130, 135, 136, 148, 149, 156, 157, 174, 183, 195, 206, 211, 238, 244, 300, 305, 306, 309, 310, 311, 312, 313, 335, 423, 436, 439], "serial": [1, 2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 27, 34, 39, 50, 57, 60, 61, 62, 63, 64, 67, 70, 72, 73, 74, 102, 121, 124, 128, 135, 136, 148, 149, 156, 157, 230, 239, 241], "parallel": [1, 3, 8, 121, 124, 127, 128, 129, 135, 136, 148, 149, 150, 151, 156, 157, 162, 232, 238, 264, 268, 323, 407, 408, 409, 410, 420, 421, 432, 433, 438], "syncdatacollector": [1, 2, 3, 14, 15, 17, 18, 19, 20, 21, 36, 50, 70, 179, 182, 215, 246, 264, 268, 406, 409, 412, 419, 420, 421, 422, 423, 427, 429, 432, 433, 436], "class": [1, 2, 3, 5, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 124, 125, 126, 127, 128, 129, 130, 134, 135, 136, 139, 142, 145, 148, 149, 150, 151, 153, 156, 157, 158, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 408, 409, 410, 414, 415, 416, 419, 420, 421, 422, 424, 425, 426, 427, 428, 432, 433, 436, 439], "worker": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 22, 40, 41, 42, 56, 58, 65, 77, 78, 79, 89, 125, 143, 148, 156, 230, 239, 408, 409, 410, 419, 420, 421, 438, 439], "multisyncdatacollector": [1, 15, 18, 19, 20, 21, 246, 409, 412, 421, 427, 438], "split": [1, 14, 15, 16, 17, 18, 19, 20, 21, 31, 32, 38, 43, 56, 58, 69, 78, 89, 100, 107, 108, 139, 150, 151, 262, 266, 323, 324, 325, 331, 332, 333, 334, 335, 336, 339, 340, 341, 343, 344, 345, 346, 349, 356, 414, 416, 421, 425, 436, 438], "workload": 1, "across": [1, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 52, 57, 61, 64, 67, 73, 74, 100, 107, 108, 119, 120, 122, 123, 127, 129, 130, 132, 133, 134, 143, 144, 148, 153, 157, 230, 239, 241, 264, 268, 274, 284, 285, 341, 398, 412, 414, 415, 419, 424, 428, 432, 433, 434], "aggreg": [1, 3, 27, 60, 100, 113, 150, 151, 174, 203, 248, 249, 251, 252, 315, 415, 433], "result": [1, 2, 3, 7, 14, 15, 16, 17, 18, 19, 20, 21, 23, 27, 28, 34, 39, 40, 41, 42, 50, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 72, 73, 74, 79, 80, 100, 102, 106, 107, 108, 121, 124, 125, 128, 135, 136, 148, 149, 156, 157, 162, 173, 174, 175, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 194, 195, 197, 199, 200, 201, 202, 203, 204, 205, 206, 208, 212, 213, 214, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 241, 243, 246, 261, 262, 264, 266, 268, 269, 274, 287, 293, 304, 306, 311, 323, 324, 326, 327, 328, 330, 332, 333, 334, 339, 341, 343, 344, 345, 346, 348, 349, 356, 358, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 398, 415, 420, 422, 424, 425, 428, 429, 434, 435, 438, 439], "final": [1, 2, 3, 4, 21, 40, 41, 42, 45, 56, 58, 65, 66, 79, 225, 238, 243, 261, 262, 264, 266, 268, 274, 285, 307, 314, 358, 391, 414, 419, 420, 421, 423, 428, 429, 432, 433, 434, 439], "multiasyncdatacollector": [1, 17, 18, 19, 20, 21, 246, 408, 412, 419, 420, 421, 427, 438], "sever": [1, 2, 3, 8, 27, 34, 39, 46, 50, 60, 61, 67, 72, 78, 121, 124, 128, 135, 136, 148, 149, 156, 157, 183, 185, 203, 232, 241, 343, 419, 421, 423, 428, 429, 436, 439], "gather": [1, 3, 18, 20, 21, 45, 78, 89, 93, 95, 100, 107, 115, 204, 211, 273, 276, 281, 341, 357, 400, 413, 420, 421, 422, 427, 432, 433, 434, 436, 438, 439], "continu": [1, 2, 3, 9, 28, 31, 45, 80, 81, 82, 108, 121, 124, 128, 135, 136, 148, 149, 150, 151, 156, 157, 160, 161, 167, 175, 200, 225, 233, 251, 252, 253, 254, 284, 285, 315, 320, 324, 347, 358, 363, 371, 414, 419, 421, 425, 432, 433, 436], "concomitantli": [1, 121, 124, 128, 135, 136, 148, 149, 156, 157], "network": [1, 4, 8, 27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 139, 148, 149, 150, 151, 156, 157, 241, 248, 249, 251, 252, 253, 254, 257, 259, 260, 266, 269, 274, 275, 276, 278, 279, 280, 282, 284, 286, 288, 289, 290, 295, 301, 302, 303, 304, 312, 316, 323, 324, 325, 326, 327, 328, 330, 331, 332, 333, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 354, 356, 358, 359, 360, 361, 362, 405, 406, 414, 415, 416, 423, 426, 429, 431, 434, 439], "impli": [1, 79, 439], "weight": [1, 4, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 27, 34, 39, 50, 57, 60, 61, 66, 67, 72, 100, 102, 105, 119, 120, 121, 124, 128, 135, 136, 148, 149, 154, 155, 156, 157, 186, 200, 203, 210, 225, 230, 231, 232, 235, 237, 241, 262, 263, 264, 266, 267, 268, 274, 276, 278, 312, 323, 324, 325, 326, 332, 335, 346, 348, 398, 405, 414, 416, 419, 420, 421, 431, 434, 436, 438], "mai": [1, 2, 3, 4, 5, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 23, 27, 34, 39, 40, 41, 42, 50, 56, 58, 60, 61, 65, 67, 68, 69, 72, 77, 79, 91, 94, 100, 107, 121, 124, 127, 128, 129, 130, 135, 136, 148, 149, 153, 156, 157, 162, 202, 206, 219, 230, 232, 234, 239, 241, 244, 264, 268, 269, 274, 313, 325, 332, 340, 343, 346, 414, 415, 416, 419, 420, 421, 422, 423, 424, 425, 426, 427, 432, 433, 434, 435, 436, 439], "slightli": [1, 23, 415, 422, 423, 432, 434, 435, 436, 439], "lag": [1, 419, 420, 421], "therefor": [1, 2, 3, 7, 57, 64, 73, 74, 121, 124, 128, 135, 136, 148, 149, 156, 157, 215, 343, 356, 423, 426, 432, 439], "fastest": 1, "price": [1, 2], "suitabl": [1, 2, 182], "where": [1, 2, 3, 4, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 25, 27, 34, 36, 38, 39, 40, 41, 42, 45, 50, 51, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 89, 91, 93, 95, 100, 102, 107, 108, 113, 115, 116, 121, 124, 128, 135, 136, 139, 142, 145, 148, 149, 150, 151, 156, 157, 170, 173, 174, 175, 176, 179, 182, 190, 194, 202, 210, 215, 218, 223, 224, 225, 226, 227, 231, 232, 234, 237, 238, 241, 243, 261, 262, 263, 264, 266, 267, 268, 272, 273, 274, 282, 284, 285, 304, 309, 312, 313, 322, 323, 324, 325, 326, 331, 332, 333, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 357, 358, 359, 360, 361, 362, 363, 364, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 415, 416, 419, 420, 421, 423, 424, 431, 432, 433, 434, 436, 439], "asynchron": [1, 9, 15, 21, 27, 34, 39, 40, 41, 42, 50, 56, 58, 60, 61, 65, 67, 72, 79, 121, 124, 128, 135, 136, 148, 149, 156, 157, 186, 210, 225, 231, 232, 235, 237, 241, 312, 323, 408, 419, 420, 421], "off": [1, 2, 4, 265, 294, 305, 346, 376, 391, 401, 414, 416, 419, 420, 421, 425, 426, 432, 433, 435, 438, 439], "curriculum": [1, 4], "For": [1, 2, 3, 4, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 34, 35, 39, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 60, 61, 62, 63, 64, 67, 72, 73, 74, 77, 79, 80, 81, 82, 83, 84, 93, 95, 100, 102, 107, 115, 121, 124, 127, 128, 129, 134, 135, 136, 148, 149, 150, 151, 156, 157, 158, 160, 162, 182, 189, 193, 197, 206, 224, 231, 232, 238, 241, 258, 262, 264, 266, 268, 275, 277, 301, 303, 304, 306, 310, 323, 331, 333, 339, 343, 391, 414, 415, 416, 419, 420, 421, 422, 424, 425, 427, 428, 432, 433, 434, 435, 436, 439], "remot": [1, 2, 18, 19, 20, 21, 57, 62, 63, 64, 73, 74, 102, 148, 156, 439], "rollout": [1, 2, 3, 11, 14, 15, 16, 17, 21, 23, 45, 66, 72, 79, 113, 119, 120, 121, 124, 128, 130, 131, 133, 134, 135, 136, 140, 141, 142, 143, 148, 149, 150, 151, 153, 154, 155, 156, 157, 160, 161, 162, 175, 176, 178, 179, 182, 185, 187, 189, 190, 193, 194, 195, 200, 202, 203, 208, 212, 213, 218, 219, 220, 223, 224, 226, 227, 230, 233, 239, 241, 245, 246, 247, 264, 268, 271, 285, 308, 323, 376, 378, 400, 414, 419, 421, 422, 425, 426, 427, 428, 429, 435, 436, 438], "necessari": [1, 4, 6, 8, 14, 15, 16, 17, 18, 19, 20, 21, 121, 124, 128, 135, 136, 140, 141, 148, 149, 156, 157, 160, 161, 190, 219, 344, 358, 359, 360, 361, 362, 415, 419, 421, 425, 426, 427], "synchronis": [1, 125, 432, 433], "either": [1, 2, 5, 22, 25, 27, 34, 39, 50, 57, 60, 61, 62, 63, 64, 66, 67, 72, 73, 74, 79, 89, 102, 121, 124, 128, 135, 136, 148, 149, 156, 157, 200, 204, 223, 224, 241, 318, 341, 348, 349, 382, 416, 419, 420, 422, 432, 435, 436, 438, 439], "update_policy_weights_": [1, 13, 14, 15, 16, 17, 18, 19, 20, 21, 419, 433, 438], "update_at_each_batch": [1, 14, 15, 17], "true": [1, 2, 3, 4, 8, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 93, 94, 95, 99, 100, 102, 103, 105, 106, 107, 108, 115, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 133, 134, 135, 136, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 167, 173, 174, 175, 176, 178, 179, 181, 182, 183, 186, 187, 190, 192, 195, 197, 200, 201, 202, 203, 204, 205, 206, 210, 211, 213, 214, 217, 218, 219, 222, 223, 225, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 241, 242, 243, 244, 245, 248, 249, 251, 252, 253, 254, 260, 262, 263, 264, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 284, 285, 292, 293, 294, 299, 300, 301, 302, 303, 305, 306, 309, 310, 311, 312, 313, 314, 315, 316, 323, 324, 325, 326, 327, 328, 330, 331, 332, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 352, 358, 359, 360, 361, 364, 367, 368, 369, 370, 372, 373, 374, 375, 376, 377, 378, 385, 386, 389, 390, 391, 393, 396, 410, 414, 415, 416, 419, 420, 421, 422, 423, 425, 428, 429, 431, 432, 433, 434, 435, 436, 438, 439], "second": [1, 2, 3, 8, 23, 45, 46, 47, 48, 49, 113, 148, 179, 227, 262, 264, 266, 268, 306, 325, 340, 343, 346, 378, 380, 383, 385, 395, 419, 421, 427, 432, 433, 434, 436, 438, 439], "devic": [1, 2, 3, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 89, 93, 94, 95, 99, 107, 108, 115, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 167, 170, 173, 175, 179, 186, 189, 190, 191, 193, 194, 195, 200, 202, 203, 208, 209, 210, 212, 213, 215, 219, 222, 223, 225, 228, 231, 232, 233, 235, 237, 239, 241, 243, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 260, 261, 262, 263, 264, 266, 267, 268, 269, 271, 274, 275, 277, 278, 283, 285, 286, 287, 295, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 313, 315, 317, 320, 323, 324, 326, 327, 328, 330, 331, 332, 339, 343, 344, 345, 346, 348, 349, 356, 358, 359, 360, 361, 362, 376, 393, 398, 404, 414, 419, 420, 421, 422, 423, 432, 433, 434, 435, 438], "oper": [1, 2, 3, 4, 7, 8, 14, 15, 17, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 65, 67, 68, 69, 72, 77, 78, 79, 80, 81, 82, 83, 84, 94, 100, 107, 121, 124, 128, 135, 136, 148, 149, 156, 157, 179, 197, 202, 227, 229, 233, 241, 257, 258, 263, 267, 301, 302, 303, 305, 306, 307, 312, 318, 323, 325, 327, 328, 333, 340, 343, 345, 356, 357, 358, 359, 360, 361, 396, 412, 415, 416, 419, 420, 421, 422, 423, 424, 425, 431, 432, 433, 434, 439], "instanc": [1, 2, 3, 4, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 27, 28, 34, 39, 40, 41, 42, 50, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 72, 73, 74, 75, 77, 78, 79, 80, 90, 91, 93, 94, 95, 98, 100, 102, 107, 108, 115, 121, 123, 124, 125, 127, 128, 129, 135, 136, 142, 148, 149, 156, 157, 162, 167, 174, 206, 225, 232, 239, 241, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 274, 275, 276, 279, 280, 283, 285, 288, 289, 291, 296, 304, 305, 306, 308, 309, 310, 311, 313, 314, 315, 316, 319, 324, 326, 328, 331, 332, 339, 341, 344, 346, 348, 349, 356, 358, 359, 360, 361, 376, 378, 382, 386, 391, 400, 401, 402, 406, 408, 409, 414, 415, 416, 419, 421, 422, 423, 424, 425, 434, 436, 439], "cpu": [1, 2, 3, 8, 10, 14, 15, 16, 17, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 89, 93, 94, 95, 99, 102, 107, 115, 119, 120, 121, 122, 123, 124, 127, 128, 129, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 160, 161, 167, 173, 175, 179, 186, 189, 190, 191, 193, 194, 195, 200, 203, 208, 210, 212, 213, 215, 219, 222, 223, 225, 231, 232, 233, 235, 237, 241, 245, 247, 257, 262, 263, 264, 266, 267, 268, 271, 277, 278, 285, 286, 287, 295, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 315, 317, 320, 323, 324, 326, 327, 328, 330, 331, 332, 339, 343, 344, 345, 346, 348, 349, 356, 376, 414, 419, 420, 421, 422, 432, 433, 434, 435, 438], "slower": [1, 432], "than": [1, 2, 3, 4, 8, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 27, 60, 79, 100, 107, 108, 111, 113, 121, 124, 128, 132, 135, 136, 146, 147, 148, 149, 153, 156, 157, 190, 203, 204, 213, 243, 254, 264, 266, 268, 269, 296, 300, 305, 312, 313, 317, 341, 387, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 413, 414, 415, 419, 420, 421, 423, 424, 426, 432, 433, 434, 436, 438, 439], "one": [1, 2, 3, 4, 5, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 77, 79, 80, 81, 82, 83, 84, 90, 91, 92, 93, 98, 99, 100, 102, 103, 107, 108, 109, 111, 113, 114, 117, 118, 119, 120, 121, 124, 125, 127, 128, 129, 130, 132, 133, 134, 135, 136, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 156, 157, 158, 159, 160, 161, 175, 176, 179, 182, 185, 187, 189, 191, 192, 193, 200, 203, 205, 206, 210, 215, 218, 221, 222, 224, 225, 226, 231, 232, 234, 237, 239, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 275, 276, 279, 280, 281, 282, 283, 285, 287, 288, 289, 291, 296, 300, 304, 305, 306, 308, 309, 310, 311, 312, 313, 316, 317, 319, 322, 323, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 353, 356, 358, 359, 360, 361, 365, 366, 378, 380, 389, 391, 392, 396, 400, 410, 413, 415, 416, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 431, 432, 433, 434, 435, 436, 439], "cuda": [1, 2, 3, 7, 14, 15, 16, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 60, 61, 67, 68, 69, 72, 77, 80, 81, 82, 83, 84, 119, 120, 121, 124, 128, 130, 131, 132, 135, 136, 148, 149, 156, 157, 186, 202, 209, 210, 225, 231, 232, 235, 237, 241, 262, 263, 266, 267, 312, 388, 419, 420, 421, 422, 432, 433, 435, 439], "multipl": [1, 2, 3, 5, 8, 14, 15, 16, 17, 18, 19, 20, 21, 48, 60, 64, 73, 74, 75, 79, 95, 102, 103, 115, 119, 120, 133, 134, 135, 148, 156, 157, 183, 185, 190, 192, 201, 204, 205, 215, 218, 222, 223, 230, 239, 262, 266, 268, 274, 277, 278, 300, 305, 309, 310, 312, 313, 316, 325, 332, 340, 343, 353, 364, 410, 414, 415, 416, 419, 420, 421, 424, 426, 427, 432, 433, 434, 436, 438], "infer": [1, 3, 121, 124, 128, 135, 136, 148, 149, 156, 157, 182, 239, 264, 268, 277, 304, 309, 313, 330, 376, 419, 421, 423, 427, 429, 436, 438], "run": [1, 2, 3, 4, 5, 6, 7, 8, 10, 14, 15, 16, 17, 21, 27, 34, 39, 50, 60, 61, 62, 67, 72, 100, 107, 108, 119, 120, 121, 122, 123, 124, 127, 128, 133, 134, 135, 136, 142, 143, 144, 148, 149, 156, 157, 162, 186, 200, 205, 206, 222, 230, 231, 232, 239, 241, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 276, 279, 280, 283, 285, 288, 289, 291, 296, 304, 306, 308, 311, 313, 314, 315, 316, 319, 326, 332, 346, 378, 385, 391, 408, 409, 410, 413, 414, 415, 416, 419, 420, 421, 422, 425, 426, 427, 428, 429, 432, 433, 434, 438], "dispatch": [1, 3, 18, 19, 20, 21, 34, 60, 72, 175, 176, 178, 179, 181, 182, 183, 186, 187, 191, 194, 195, 196, 198, 201, 202, 209, 211, 212, 213, 215, 218, 219, 222, 223, 224, 225, 226, 227, 230, 231, 235, 236, 238, 239, 241, 296, 308, 378, 419, 439], "avail": [1, 2, 3, 4, 6, 21, 57, 64, 73, 74, 100, 106, 107, 108, 119, 120, 122, 123, 132, 133, 134, 140, 141, 146, 147, 148, 150, 151, 153, 158, 159, 160, 161, 175, 178, 181, 200, 202, 258, 287, 309, 313, 341, 378, 408, 409, 419, 420, 421, 422, 423, 424, 425, 432, 433, 434, 436, 439], "speed": [1, 2, 4, 8, 30, 121, 124, 128, 135, 136, 148, 149, 156, 157, 415, 419, 420, 421, 422, 432, 433, 434, 436, 438], "avoid": [1, 2, 3, 27, 34, 39, 50, 60, 61, 67, 72, 93, 95, 107, 115, 121, 124, 128, 135, 136, 148, 149, 156, 157, 172, 182, 200, 230, 232, 239, 241, 244, 293, 300, 312, 317, 325, 326, 340, 343, 346, 399, 421, 423, 433], "oom": [1, 3, 40, 41, 42, 56, 58, 65, 79, 93, 95, 115], "choic": [1, 2, 52, 148, 190, 414, 415, 419, 420, 426, 432, 433], "pass": [1, 2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 27, 31, 32, 34, 39, 43, 50, 52, 57, 60, 61, 62, 64, 66, 67, 69, 72, 73, 74, 77, 78, 91, 93, 95, 100, 102, 107, 108, 113, 115, 121, 124, 125, 126, 128, 129, 135, 136, 139, 143, 148, 149, 150, 151, 156, 157, 160, 178, 179, 182, 187, 189, 193, 203, 204, 213, 230, 234, 239, 241, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 274, 275, 276, 277, 279, 280, 283, 285, 286, 288, 289, 291, 295, 296, 300, 304, 305, 306, 308, 309, 310, 311, 312, 313, 315, 316, 317, 319, 324, 325, 326, 339, 340, 341, 343, 344, 346, 348, 349, 358, 359, 360, 361, 362, 376, 393, 396, 408, 409, 410, 414, 419, 420, 421, 422, 423, 424, 425, 426, 427, 431, 432, 433, 434, 436, 438, 439], "ie": [1, 2, 3, 18, 20, 22, 25, 26, 28, 29, 30, 31, 32, 34, 35, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 60, 68, 69, 72, 73, 77, 78, 80, 81, 82, 83, 84, 99, 108, 121, 124, 128, 132, 135, 136, 145, 148, 149, 156, 157, 174, 175, 182, 197, 222, 225, 234, 239, 264, 268, 304, 414, 415, 420, 433], "store": [1, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 27, 31, 34, 37, 38, 39, 40, 41, 42, 45, 50, 52, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 72, 73, 74, 75, 78, 79, 89, 91, 93, 94, 95, 96, 99, 100, 102, 107, 113, 115, 121, 124, 128, 135, 136, 148, 149, 156, 157, 182, 190, 200, 227, 238, 239, 241, 243, 245, 246, 271, 285, 323, 324, 326, 327, 328, 330, 332, 333, 334, 339, 341, 343, 344, 345, 346, 348, 349, 356, 385, 412, 416, 419, 421, 422, 425, 427, 429, 432, 433, 435, 439], "while": [1, 2, 3, 7, 8, 23, 27, 34, 39, 50, 60, 61, 62, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 215, 241, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 276, 279, 280, 283, 285, 288, 289, 291, 296, 304, 306, 308, 311, 316, 319, 331, 339, 340, 343, 414, 415, 419, 421, 422, 425, 427, 428, 432, 433, 434, 435, 436, 438], "wait": [1, 20, 21, 22, 62, 158, 422, 434], "also": [1, 2, 3, 8, 9, 11, 14, 15, 23, 25, 26, 27, 30, 34, 35, 39, 40, 41, 42, 46, 47, 48, 49, 50, 54, 55, 56, 58, 60, 61, 64, 65, 67, 72, 73, 74, 77, 79, 89, 93, 94, 95, 100, 102, 107, 108, 113, 115, 121, 124, 128, 134, 135, 136, 140, 141, 148, 149, 150, 151, 156, 157, 160, 161, 170, 172, 173, 175, 176, 178, 179, 181, 182, 183, 186, 187, 191, 192, 194, 195, 196, 198, 200, 201, 202, 206, 209, 211, 212, 213, 215, 218, 219, 222, 223, 224, 225, 226, 227, 230, 231, 232, 233, 235, 236, 238, 239, 241, 242, 248, 249, 262, 266, 269, 289, 308, 309, 314, 315, 316, 323, 324, 326, 327, 328, 330, 331, 332, 337, 339, 343, 346, 348, 358, 365, 366, 376, 378, 414, 415, 416, 419, 420, 421, 422, 423, 424, 425, 426, 427, 431, 432, 433, 434, 436, 438, 439], "impact": [1, 2, 3, 134, 189, 193, 244, 323, 325, 340, 343, 345, 420, 422, 432, 433], "memori": [1, 3, 8, 21, 27, 30, 34, 39, 40, 41, 42, 50, 56, 58, 60, 61, 62, 65, 67, 72, 78, 79, 91, 93, 94, 98, 121, 124, 125, 128, 132, 135, 136, 148, 149, 156, 157, 182, 186, 210, 225, 231, 232, 235, 237, 239, 241, 256, 266, 267, 312, 410, 412, 416, 419, 420, 422, 432, 436, 438], "manag": [1, 8, 121, 124, 128, 135, 136, 148, 149, 156, 157, 246, 264, 268, 299, 354, 355, 358, 359, 360, 361, 386, 391, 414, 422, 423, 426, 438], "kei": [1, 2, 7, 14, 15, 16, 17, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 90, 99, 100, 102, 105, 107, 108, 113, 121, 124, 128, 133, 134, 135, 136, 148, 149, 150, 151, 156, 157, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 206, 209, 210, 211, 212, 213, 215, 218, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 241, 243, 245, 247, 257, 258, 261, 264, 268, 270, 271, 285, 287, 300, 304, 305, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 322, 323, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 343, 344, 345, 346, 348, 349, 356, 357, 358, 359, 360, 361, 362, 376, 378, 390, 391, 392, 394, 395, 396, 400, 415, 416, 419, 421, 422, 423, 424, 426, 431, 432, 433, 434, 436, 438, 439], "control": [1, 3, 5, 8, 16, 23, 24, 31, 32, 33, 43, 64, 69, 73, 74, 100, 102, 107, 121, 122, 123, 124, 128, 134, 135, 136, 139, 148, 149, 150, 151, 156, 157, 173, 192, 251, 252, 253, 254, 264, 268, 270, 271, 285, 289, 296, 312, 313, 314, 323, 325, 326, 340, 341, 343, 347, 358, 363, 371, 376, 386, 414, 416, 419, 420, 421, 422, 423, 424, 425, 426, 432, 433, 434, 436, 438], "which": [1, 2, 3, 4, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 89, 90, 94, 102, 105, 106, 113, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 132, 133, 134, 135, 136, 140, 141, 143, 144, 146, 147, 148, 149, 153, 156, 157, 158, 159, 160, 161, 162, 182, 183, 189, 193, 198, 200, 202, 203, 205, 206, 210, 211, 213, 223, 225, 226, 229, 231, 232, 233, 235, 239, 241, 242, 257, 262, 263, 264, 265, 266, 267, 268, 272, 273, 274, 275, 276, 282, 284, 294, 301, 302, 303, 304, 308, 309, 312, 313, 314, 315, 323, 324, 325, 326, 328, 331, 332, 333, 334, 335, 336, 339, 340, 341, 343, 344, 345, 346, 348, 349, 352, 356, 358, 359, 360, 361, 376, 378, 387, 392, 414, 415, 416, 419, 420, 421, 422, 423, 424, 425, 426, 427, 431, 432, 433, 434, 435, 436, 439], "storing_devic": [1, 14, 15, 16, 17, 18, 19, 20, 21, 420, 433], "dure": [1, 2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 30, 35, 46, 47, 48, 49, 54, 55, 57, 58, 61, 62, 63, 64, 66, 67, 73, 74, 78, 89, 91, 96, 100, 102, 105, 107, 121, 124, 125, 128, 134, 135, 136, 148, 149, 150, 151, 156, 157, 178, 179, 182, 185, 189, 193, 195, 197, 198, 200, 204, 208, 220, 222, 225, 227, 229, 230, 232, 233, 234, 239, 241, 244, 246, 247, 264, 268, 275, 308, 358, 360, 361, 391, 396, 415, 419, 420, 421, 422, 425, 426, 427, 429, 432, 433, 434, 436, 439], "heurist": [1, 4, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 243, 308, 313, 419, 423, 427, 439], "usual": [1, 2, 3, 4, 6, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 105, 113, 119, 120, 121, 124, 128, 133, 134, 135, 136, 148, 149, 156, 157, 230, 278, 343, 348, 357, 358, 359, 360, 361, 362, 377, 413, 414, 415, 416, 419, 420, 421, 422, 425, 427, 428, 433, 436, 439], "same": [1, 2, 3, 4, 16, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 60, 61, 65, 67, 68, 69, 72, 75, 77, 78, 79, 80, 81, 82, 83, 84, 106, 107, 108, 111, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 133, 134, 135, 136, 139, 143, 144, 148, 149, 150, 151, 153, 156, 157, 175, 182, 189, 190, 192, 193, 198, 200, 203, 204, 205, 206, 222, 230, 231, 232, 239, 241, 242, 248, 249, 263, 264, 267, 268, 269, 272, 273, 274, 275, 285, 293, 304, 316, 324, 326, 339, 341, 344, 346, 348, 349, 353, 415, 419, 420, 421, 424, 425, 427, 431, 432, 433, 435, 436, 439], "default": [1, 2, 3, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 89, 91, 93, 94, 95, 99, 100, 102, 103, 105, 106, 107, 108, 113, 115, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 133, 134, 135, 136, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 156, 157, 158, 159, 160, 161, 162, 167, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 215, 217, 218, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 283, 285, 287, 288, 289, 291, 292, 293, 294, 299, 300, 304, 305, 306, 308, 309, 310, 311, 312, 313, 316, 317, 319, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 351, 352, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 406, 410, 415, 416, 419, 420, 421, 422, 425, 432, 435, 436, 438, 439], "behavior": [1, 2, 3, 4, 14, 15, 21, 27, 34, 39, 50, 60, 61, 67, 72, 77, 79, 121, 124, 128, 135, 136, 148, 149, 156, 157, 173, 183, 189, 193, 206, 211, 224, 232, 241, 244, 264, 265, 268, 294, 331, 339, 348, 376, 386, 391, 414, 420, 422, 432, 433, 434, 436], "besid": 1, "those": [1, 2, 3, 5, 7, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 121, 124, 128, 135, 136, 148, 149, 156, 157, 182, 189, 193, 200, 206, 225, 226, 229, 233, 268, 284, 309, 313, 314, 315, 398, 408, 409, 414, 419, 420, 424, 425, 433, 434, 439], "choos": [1, 11, 52, 121, 139, 264, 268, 343, 412, 415, 419, 420, 421, 423, 432, 433, 436, 438], "follow": [1, 2, 3, 6, 7, 8, 11, 27, 34, 39, 40, 41, 42, 45, 50, 56, 58, 59, 60, 61, 65, 66, 67, 72, 77, 79, 100, 107, 108, 119, 120, 121, 124, 127, 128, 129, 133, 134, 135, 136, 142, 145, 148, 149, 150, 151, 154, 155, 156, 157, 160, 161, 170, 178, 182, 202, 210, 235, 239, 241, 248, 249, 262, 264, 266, 268, 269, 306, 309, 310, 311, 322, 323, 324, 325, 326, 327, 331, 332, 339, 340, 343, 344, 345, 346, 348, 349, 378, 396, 414, 415, 416, 419, 420, 421, 422, 423, 426, 427, 431, 432, 433, 434, 436, 438, 439], "max_frames_per_traj": [1, 14, 15, 16, 17, 18, 19, 20, 21, 399, 419, 421, 438], "frame": [1, 2, 11, 14, 15, 16, 17, 18, 19, 20, 21, 50, 182, 198, 241, 243, 261, 285, 308, 377, 378, 380, 383, 385, 389, 391, 396, 399, 400, 419, 420, 421, 422, 425, 432, 433, 436, 438, 439], "call": [1, 2, 3, 7, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 86, 89, 93, 94, 95, 96, 100, 101, 102, 106, 107, 109, 111, 115, 116, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 133, 134, 135, 136, 143, 144, 145, 146, 147, 148, 149, 153, 156, 157, 158, 159, 162, 171, 174, 175, 176, 178, 179, 181, 182, 183, 185, 186, 187, 190, 191, 192, 194, 195, 196, 197, 198, 200, 201, 202, 204, 206, 208, 209, 210, 211, 212, 213, 215, 218, 219, 220, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 271, 275, 276, 277, 279, 280, 283, 285, 288, 289, 291, 296, 304, 306, 308, 311, 312, 313, 315, 316, 319, 325, 326, 340, 341, 343, 346, 348, 357, 358, 359, 360, 361, 376, 377, 380, 391, 415, 416, 420, 421, 422, 423, 424, 425, 427, 428, 432, 433, 434, 436, 438, 439], "frames_per_batch": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 36, 50, 62, 70, 179, 182, 215, 264, 268, 399, 419, 420, 421, 422, 423, 427, 429, 432, 433, 436, 438], "each": [1, 2, 3, 4, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 23, 27, 31, 32, 34, 38, 39, 43, 45, 46, 48, 50, 51, 60, 61, 64, 66, 67, 69, 71, 72, 73, 79, 100, 102, 105, 107, 108, 110, 113, 121, 124, 125, 128, 135, 136, 140, 141, 148, 149, 150, 151, 156, 157, 160, 161, 175, 190, 201, 203, 204, 210, 215, 218, 223, 224, 225, 226, 230, 231, 237, 239, 241, 242, 243, 258, 261, 262, 263, 264, 266, 268, 274, 275, 279, 286, 287, 295, 299, 305, 306, 311, 313, 315, 364, 367, 368, 369, 370, 372, 373, 374, 375, 378, 391, 393, 408, 409, 415, 419, 420, 421, 422, 425, 426, 427, 429, 432, 433, 434, 435, 436, 438, 439], "init_random_fram": [1, 14, 15, 16, 17, 18, 19, 20, 21, 399, 419, 420, 423, 429], "rand_step": [1, 2, 3, 36, 70, 121, 122, 123, 124, 125, 127, 128, 129, 135, 136, 137, 138, 142, 143, 144, 148, 149, 156, 157, 201, 225, 239, 434, 438, 439], "reset_at_each_it": [1, 14, 15, 16, 17, 18, 19, 20, 21, 419], "split_traj": [1, 14, 15, 16, 17, 18, 19, 20, 21, 419, 420, 421], "trajectori": [1, 3, 14, 15, 16, 17, 18, 19, 20, 21, 23, 34, 37, 38, 50, 51, 71, 73, 79, 99, 100, 107, 108, 113, 119, 120, 121, 124, 128, 133, 134, 135, 136, 148, 149, 156, 157, 182, 211, 223, 230, 241, 245, 268, 271, 285, 343, 358, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 387, 412, 415, 419, 420, 421, 422, 424, 427, 429, 434, 438, 439], "pad": [1, 2, 3, 23, 59, 75, 182, 190, 229, 248, 249, 251, 252, 268, 272, 273, 274, 393], "along": [1, 2, 3, 14, 15, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 60, 61, 65, 66, 67, 68, 69, 72, 77, 78, 79, 80, 81, 82, 83, 84, 95, 100, 102, 107, 108, 113, 115, 121, 124, 127, 128, 129, 135, 136, 148, 149, 156, 157, 167, 181, 182, 183, 204, 206, 208, 211, 218, 222, 228, 241, 268, 269, 272, 273, 278, 305, 309, 312, 313, 326, 341, 348, 419, 420, 422, 424, 426, 432, 433, 434, 436, 438], "point": [1, 2, 3, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 60, 61, 62, 67, 68, 69, 72, 77, 79, 80, 81, 82, 83, 84, 92, 99, 100, 103, 113, 114, 117, 118, 121, 124, 125, 128, 135, 136, 148, 149, 156, 157, 175, 176, 178, 179, 181, 182, 183, 186, 187, 191, 194, 195, 196, 198, 201, 202, 209, 210, 211, 212, 213, 215, 218, 219, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 235, 236, 237, 238, 239, 241, 270, 312, 322, 333, 396, 413, 420, 421, 431, 432, 433, 434, 436, 438, 439], "boolean": [1, 3, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 66, 68, 69, 77, 80, 81, 82, 83, 84, 100, 107, 108, 128, 174, 178, 211, 223, 272, 273, 285, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 416, 422], "repres": [1, 2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 31, 32, 36, 43, 45, 52, 69, 70, 72, 73, 79, 94, 121, 122, 123, 124, 127, 128, 129, 135, 136, 148, 149, 156, 157, 160, 161, 198, 211, 227, 239, 241, 258, 272, 273, 287, 293, 305, 306, 310, 311, 352, 358, 393, 414, 419, 421, 422, 423, 424, 425, 426, 432, 433], "valid": [1, 2, 3, 23, 56, 58, 59, 78, 79, 89, 113, 121, 124, 128, 135, 136, 148, 149, 156, 157, 163, 178, 211, 230, 232, 241, 243, 248, 249, 269, 272, 273, 285, 325, 332, 340, 343, 346, 358, 359, 360, 361, 393, 416, 423, 439], "exploration_typ": [1, 14, 15, 16, 17, 18, 19, 20, 21, 391, 412, 414, 419, 420], "strategi": [1, 2, 3, 16, 105, 139, 175, 261, 273, 281, 414, 416, 419, 420, 423, 425, 432, 433, 436, 438], "reset_when_don": [1, 14, 15, 16, 17], "its": [1, 2, 3, 4, 5, 7, 9, 11, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 60, 61, 64, 65, 67, 68, 69, 72, 73, 77, 79, 80, 81, 82, 83, 84, 86, 95, 102, 107, 108, 121, 124, 128, 134, 135, 136, 142, 148, 149, 150, 151, 156, 157, 160, 163, 179, 181, 182, 187, 194, 202, 223, 224, 225, 230, 232, 238, 239, 241, 242, 243, 248, 249, 264, 268, 272, 273, 274, 275, 284, 305, 309, 310, 313, 316, 323, 324, 325, 326, 331, 332, 333, 334, 335, 336, 339, 340, 341, 342, 343, 344, 345, 346, 349, 356, 378, 396, 406, 414, 415, 416, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 432, 433, 434, 435, 436, 438, 439], "organ": [1, 2, 434, 436], "within": [1, 2, 3, 14, 15, 17, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 60, 61, 65, 67, 68, 69, 72, 73, 74, 77, 79, 80, 81, 82, 83, 84, 94, 99, 100, 108, 121, 124, 127, 128, 129, 135, 136, 148, 149, 153, 156, 157, 174, 176, 178, 179, 181, 182, 183, 186, 187, 189, 191, 193, 194, 195, 196, 198, 201, 202, 209, 211, 212, 213, 215, 218, 219, 222, 223, 224, 225, 226, 227, 230, 231, 235, 236, 238, 239, 241, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 276, 279, 280, 283, 285, 288, 289, 291, 296, 299, 304, 306, 308, 311, 313, 316, 319, 320, 328, 333, 348, 356, 376, 378, 414, 415, 420, 423, 424, 425, 426, 427, 428, 429, 432, 434, 438], "differ": [1, 2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 60, 61, 64, 66, 67, 68, 69, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 102, 105, 119, 120, 121, 124, 125, 128, 133, 134, 135, 136, 139, 148, 149, 150, 151, 156, 157, 178, 182, 190, 191, 192, 203, 206, 213, 222, 230, 232, 234, 241, 242, 258, 262, 263, 264, 266, 267, 268, 269, 271, 274, 275, 276, 287, 313, 339, 341, 343, 352, 358, 359, 360, 364, 365, 366, 391, 396, 398, 408, 409, 414, 415, 416, 419, 420, 421, 423, 424, 426, 428, 431, 432, 433, 434, 435, 436, 438, 439], "how": [1, 2, 3, 11, 18, 19, 20, 24, 27, 34, 39, 50, 57, 60, 61, 67, 72, 73, 99, 100, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 133, 134, 135, 136, 140, 141, 143, 144, 146, 147, 148, 149, 150, 151, 153, 156, 157, 158, 159, 160, 161, 175, 190, 203, 241, 276, 309, 323, 325, 338, 340, 341, 343, 378, 380, 396, 413, 414, 419, 420, 421, 422, 423, 424, 425, 427, 428, 431, 432, 433, 434, 435, 436, 438, 439], "tabl": [1, 27, 414, 420, 425], "summar": [1, 3, 434], "what": [1, 3, 8, 11, 33, 34, 57, 77, 100, 107, 121, 124, 128, 135, 136, 148, 149, 156, 157, 162, 173, 194, 225, 230, 310, 326, 337, 341, 348, 413, 414, 415, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 432, 433, 434, 435, 436, 438, 439], "expect": [1, 2, 3, 4, 7, 27, 31, 34, 39, 45, 50, 60, 61, 64, 67, 72, 77, 78, 100, 106, 107, 121, 124, 128, 135, 136, 142, 145, 148, 149, 156, 157, 162, 175, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 194, 195, 197, 199, 201, 202, 203, 204, 206, 208, 210, 212, 213, 214, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 241, 262, 263, 264, 266, 267, 268, 274, 275, 285, 306, 312, 315, 323, 324, 325, 326, 327, 328, 330, 331, 332, 337, 339, 340, 341, 343, 344, 345, 346, 348, 349, 353, 356, 400, 413, 414, 415, 416, 419, 421, 422, 424, 425, 426, 427, 432, 433, 434, 436, 439], "n": [1, 2, 3, 6, 7, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 60, 61, 66, 67, 68, 69, 72, 77, 80, 81, 82, 83, 84, 121, 124, 128, 135, 136, 148, 149, 156, 157, 182, 192, 197, 234, 241, 262, 263, 266, 271, 282, 284, 285, 308, 313, 323, 324, 332, 341, 357, 393, 416, 420, 422, 423, 436, 438, 439], "b": [1, 2, 3, 7, 8, 23, 31, 32, 34, 40, 41, 42, 43, 56, 58, 60, 64, 65, 66, 67, 69, 72, 73, 74, 79, 93, 94, 113, 121, 200, 233, 262, 263, 266, 267, 274, 275, 277, 278, 286, 295, 316, 358, 359, 360, 361, 362, 364, 378, 420, 436], "cat_result": [1, 14, 15], "na": 1, "t": [1, 2, 3, 4, 6, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 67, 68, 69, 72, 73, 74, 77, 79, 80, 81, 82, 83, 84, 90, 99, 100, 102, 106, 107, 108, 113, 121, 124, 125, 127, 128, 135, 136, 143, 144, 148, 149, 156, 157, 162, 173, 175, 176, 178, 179, 181, 182, 183, 186, 187, 189, 191, 193, 194, 195, 196, 198, 200, 201, 202, 209, 210, 211, 212, 213, 214, 215, 218, 219, 222, 223, 224, 225, 226, 227, 230, 231, 235, 236, 237, 238, 239, 241, 242, 262, 264, 266, 268, 285, 305, 312, 323, 347, 358, 359, 360, 361, 362, 364, 378, 385, 396, 398, 410, 413, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 431, 432, 433, 434, 435, 436, 438, 439], "p": [1, 2, 4, 102, 105, 125, 154, 155, 246, 247], "In": [1, 2, 3, 4, 5, 7, 8, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 27, 34, 39, 50, 60, 61, 67, 72, 108, 119, 120, 121, 124, 128, 133, 134, 135, 136, 148, 149, 150, 151, 156, 157, 186, 189, 191, 193, 201, 210, 215, 219, 224, 225, 228, 230, 231, 232, 235, 237, 238, 241, 242, 262, 265, 266, 269, 274, 289, 293, 294, 312, 313, 315, 322, 323, 324, 326, 327, 328, 330, 331, 332, 339, 341, 343, 344, 345, 346, 348, 349, 398, 408, 409, 410, 414, 415, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 432, 433, 434, 435, 436, 439], "case": [1, 3, 4, 5, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 28, 29, 30, 31, 32, 35, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 62, 63, 64, 65, 68, 69, 73, 74, 77, 79, 80, 81, 82, 83, 84, 90, 91, 98, 99, 100, 102, 113, 121, 124, 127, 128, 135, 136, 148, 149, 156, 157, 162, 189, 191, 193, 201, 206, 225, 228, 232, 233, 242, 268, 269, 275, 276, 309, 312, 313, 315, 316, 322, 323, 324, 326, 327, 328, 330, 331, 332, 339, 341, 343, 344, 345, 346, 348, 349, 358, 359, 360, 361, 378, 387, 398, 408, 409, 410, 412, 414, 415, 416, 419, 420, 421, 422, 423, 424, 425, 427, 428, 432, 433, 434, 436, 438, 439], "dimens": [1, 3, 14, 15, 16, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 64, 65, 66, 68, 69, 77, 78, 79, 80, 81, 82, 83, 84, 93, 94, 95, 100, 107, 108, 113, 115, 121, 122, 123, 124, 127, 128, 129, 130, 135, 136, 148, 149, 156, 157, 160, 161, 167, 175, 181, 182, 183, 190, 197, 204, 206, 208, 211, 218, 221, 222, 225, 228, 234, 239, 248, 249, 250, 255, 256, 264, 266, 268, 269, 272, 273, 274, 277, 278, 283, 286, 290, 291, 292, 293, 296, 305, 308, 323, 324, 325, 331, 332, 333, 334, 335, 336, 339, 340, 341, 343, 344, 345, 346, 349, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 410, 412, 415, 419, 420, 421, 422, 424, 432, 433, 434, 436], "time": [1, 2, 3, 4, 7, 8, 14, 15, 16, 18, 19, 20, 21, 23, 27, 34, 39, 50, 57, 60, 61, 62, 63, 64, 66, 67, 72, 73, 74, 79, 90, 93, 102, 113, 119, 120, 121, 124, 125, 128, 133, 134, 135, 136, 139, 145, 148, 149, 150, 151, 153, 156, 157, 172, 173, 181, 182, 183, 190, 204, 211, 218, 225, 226, 227, 230, 232, 239, 241, 247, 259, 262, 266, 268, 285, 299, 308, 313, 324, 325, 326, 332, 335, 339, 340, 341, 343, 344, 346, 348, 349, 358, 359, 360, 361, 362, 363, 364, 367, 368, 369, 370, 371, 372, 373, 374, 375, 396, 415, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 432, 433, 434, 436, 438, 439], "adapt": [1, 24, 176, 204, 223, 244, 340, 419, 423, 434], "equal": [1, 14, 15, 17, 27, 79, 100, 107, 108, 121, 135, 143, 146, 147, 148, 156, 205, 206, 248, 249, 262, 264, 266, 268, 269, 273, 275, 347, 352, 387, 408, 409, 419, 421, 435], "introduc": [1, 2, 148, 156, 262, 264, 266, 268, 285, 419, 432], "some": [1, 2, 3, 4, 7, 8, 9, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 60, 61, 62, 64, 67, 68, 69, 72, 77, 78, 79, 80, 81, 82, 83, 84, 93, 95, 102, 113, 115, 119, 120, 121, 124, 127, 128, 129, 133, 134, 135, 136, 140, 141, 148, 149, 150, 151, 156, 157, 160, 161, 162, 178, 210, 225, 232, 235, 241, 251, 264, 268, 291, 313, 314, 315, 378, 387, 399, 414, 415, 416, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 432, 433, 434, 436, 438, 439], "confus": [1, 25, 27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 232, 241], "other": [1, 2, 3, 4, 7, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 65, 67, 68, 69, 72, 77, 78, 79, 80, 81, 82, 83, 84, 93, 94, 95, 96, 102, 105, 106, 107, 108, 109, 111, 115, 121, 124, 127, 128, 129, 135, 136, 142, 148, 149, 156, 157, 185, 191, 192, 212, 219, 225, 228, 235, 239, 241, 246, 261, 262, 264, 268, 278, 299, 304, 306, 311, 313, 323, 324, 325, 331, 332, 333, 334, 335, 336, 339, 340, 341, 343, 344, 345, 346, 349, 356, 358, 376, 393, 408, 409, 414, 415, 416, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 432, 433, 434, 435, 438, 439], "better": [1, 3, 8, 9, 14, 15, 23, 134, 264, 268, 415, 421, 424, 434, 438], "consist": [1, 2, 3, 27, 31, 32, 34, 39, 43, 50, 57, 60, 61, 64, 67, 69, 72, 73, 74, 79, 121, 124, 128, 135, 136, 148, 149, 156, 157, 202, 238, 241, 246, 249, 269, 419, 420, 421, 434, 435, 439], "interact": [1, 2, 3, 4, 5, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 121, 124, 128, 135, 136, 140, 141, 148, 149, 156, 157, 232, 309, 313, 419, 421, 423, 424, 425, 427, 432, 433, 434, 439], "keep": [1, 2, 3, 4, 7, 8, 15, 57, 64, 73, 74, 102, 106, 113, 121, 148, 156, 173, 206, 210, 237, 239, 241, 285, 308, 378, 389, 396, 419, 420, 421, 422, 427, 428, 429, 433, 434, 436, 439], "separ": [1, 2, 4, 8, 14, 15, 17, 18, 20, 21, 23, 31, 32, 43, 64, 69, 73, 74, 182, 210, 237, 324, 327, 330, 332, 344, 346, 348, 349, 415, 419, 420, 425, 426, 432, 433, 436, 439], "interchang": [1, 274, 275, 421, 424, 428, 435, 436], "between": [1, 2, 3, 4, 5, 14, 15, 17, 21, 24, 27, 34, 39, 40, 41, 42, 50, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 72, 73, 74, 79, 95, 100, 102, 103, 106, 107, 108, 115, 121, 124, 128, 135, 136, 140, 141, 148, 149, 156, 157, 160, 161, 162, 192, 205, 216, 227, 230, 232, 239, 241, 248, 249, 257, 262, 264, 268, 269, 274, 275, 306, 309, 313, 323, 325, 326, 327, 330, 331, 332, 335, 336, 339, 340, 341, 343, 344, 345, 346, 348, 349, 352, 358, 391, 396, 415, 419, 420, 422, 423, 427, 432, 433, 434, 436, 439], "wherea": [1, 2, 22, 27, 34, 39, 50, 60, 61, 67, 72, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 133, 134, 135, 136, 143, 144, 148, 149, 153, 156, 157, 192, 230, 232, 241, 326, 341, 346, 416, 428], "correspond": [1, 2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 65, 67, 68, 69, 72, 73, 77, 79, 80, 81, 82, 83, 84, 99, 100, 121, 124, 128, 135, 136, 142, 148, 149, 156, 157, 182, 200, 210, 225, 230, 232, 237, 239, 241, 246, 261, 264, 266, 268, 272, 273, 285, 309, 313, 326, 328, 331, 332, 346, 356, 358, 359, 360, 361, 362, 414, 419, 420, 421, 423, 424, 426, 427, 428, 432, 433, 434, 435], "sub": [1, 2, 3, 14, 15, 17, 18, 19, 20, 21, 27, 31, 32, 34, 39, 43, 50, 60, 61, 67, 69, 72, 100, 107, 113, 121, 124, 128, 135, 136, 148, 149, 156, 157, 211, 230, 241, 314, 315, 387, 396, 414, 415, 419, 420, 421, 427, 431, 438, 439], "doesn": [1, 4, 27, 34, 39, 50, 60, 61, 67, 72, 113, 121, 124, 128, 135, 136, 143, 148, 149, 156, 157, 189, 193, 241, 242, 423, 424], "understood": [1, 419], "serv": [1, 18, 20, 21, 130, 436, 438, 439], "basi": [1, 113, 274, 436, 438], "we": [1, 2, 3, 5, 7, 9, 11, 23, 24, 27, 31, 34, 39, 45, 50, 57, 60, 61, 64, 66, 67, 72, 73, 74, 93, 106, 108, 113, 119, 120, 121, 124, 125, 128, 132, 133, 134, 135, 136, 148, 149, 156, 157, 162, 182, 202, 210, 213, 219, 230, 235, 238, 239, 241, 242, 245, 268, 274, 275, 276, 323, 324, 326, 327, 328, 330, 332, 333, 334, 339, 341, 343, 344, 345, 346, 348, 349, 356, 378, 413, 414, 415, 416, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 438, 439], "anoth": [1, 2, 3, 8, 45, 72, 77, 94, 100, 107, 121, 124, 127, 128, 129, 132, 135, 136, 148, 149, 156, 157, 179, 187, 189, 191, 193, 225, 231, 269, 309, 323, 324, 325, 331, 332, 333, 334, 335, 336, 339, 340, 341, 343, 344, 345, 346, 349, 356, 387, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 415, 419, 421, 422, 423, 425, 426, 431, 432, 433, 434, 439], "wise": [1, 204], "requir": [1, 3, 4, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 64, 67, 68, 69, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 94, 99, 100, 107, 108, 121, 124, 128, 132, 135, 136, 143, 148, 149, 153, 156, 157, 179, 182, 186, 200, 210, 222, 225, 230, 231, 232, 235, 237, 241, 246, 264, 268, 269, 276, 296, 312, 313, 314, 315, 323, 324, 325, 326, 331, 332, 333, 334, 335, 336, 339, 340, 341, 343, 344, 345, 346, 348, 349, 356, 376, 378, 380, 414, 416, 419, 420, 421, 422, 424, 425, 426, 428, 432, 433, 434, 436, 438, 439], "op": [1, 25, 26, 28, 29, 30, 35, 46, 47, 48, 49, 52, 53, 54, 55, 77, 80, 81, 82, 83, 84, 205, 238, 243, 246, 261, 378, 398], "sinc": [1, 2, 3, 4, 5, 7, 11, 23, 27, 34, 39, 45, 50, 57, 60, 61, 64, 67, 72, 73, 74, 99, 100, 108, 113, 121, 124, 128, 135, 136, 148, 149, 150, 151, 153, 156, 157, 162, 173, 187, 241, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 274, 276, 279, 280, 283, 285, 288, 289, 291, 296, 304, 305, 306, 308, 310, 311, 316, 319, 376, 378, 415, 419, 420, 421, 422, 424, 425, 426, 432, 434, 435, 436, 438, 439], "goal": [1, 3, 4, 136, 224, 419, 420, 421, 422, 433, 434], "policy_devic": [1, 14, 15, 16, 17, 18, 19, 20, 21, 420], "explicitli": [1, 2, 3, 4, 30, 78, 90, 91, 98, 102, 178, 284, 309, 386, 415, 420, 422, 427, 432, 433, 436], "do": [1, 2, 3, 4, 7, 52, 121, 124, 128, 135, 136, 148, 149, 156, 157, 160, 161, 173, 175, 211, 225, 230, 238, 239, 264, 268, 275, 277, 302, 313, 341, 358, 378, 414, 415, 416, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 436, 438, 439], "deepcopi": [1, 276, 341, 432], "structur": [1, 3, 7, 40, 41, 42, 45, 52, 56, 57, 58, 64, 65, 66, 73, 74, 77, 78, 79, 94, 113, 121, 124, 128, 135, 136, 148, 149, 156, 157, 174, 189, 193, 225, 274, 285, 323, 332, 343, 346, 358, 359, 360, 361, 362, 412, 415, 419, 421, 422, 424, 427, 432, 433, 434, 435], "place": [1, 2, 3, 24, 27, 33, 34, 39, 40, 41, 42, 50, 56, 58, 60, 61, 65, 67, 72, 79, 93, 95, 102, 105, 107, 115, 121, 124, 125, 128, 135, 136, 148, 149, 156, 157, 160, 161, 174, 178, 186, 194, 210, 225, 231, 232, 235, 237, 238, 239, 241, 276, 304, 308, 312, 393, 398, 399, 415, 420, 421, 425, 428, 432, 433, 434, 436], "instanti": [1, 2, 3, 14, 15, 21, 40, 41, 42, 56, 57, 58, 62, 63, 64, 65, 73, 74, 77, 79, 99, 100, 102, 132, 134, 178, 200, 225, 275, 358, 359, 360, 361, 362, 376, 419, 420, 425, 426, 428, 432, 433, 434, 436, 439], "all": [1, 2, 3, 4, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 67, 68, 69, 72, 73, 74, 77, 79, 80, 81, 82, 83, 84, 86, 102, 121, 122, 123, 124, 125, 127, 128, 129, 130, 134, 135, 136, 140, 141, 142, 146, 147, 148, 149, 150, 151, 156, 157, 160, 161, 163, 165, 167, 171, 173, 175, 181, 182, 185, 186, 189, 191, 193, 196, 202, 205, 206, 210, 218, 220, 222, 225, 226, 231, 232, 235, 237, 239, 241, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 274, 275, 276, 279, 280, 283, 285, 288, 289, 291, 296, 299, 304, 306, 308, 311, 312, 313, 315, 316, 319, 320, 323, 324, 326, 335, 339, 341, 343, 344, 345, 346, 348, 349, 353, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 378, 392, 396, 399, 408, 409, 410, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 436, 438, 439], "graph": [1, 3, 4, 8, 34, 60, 72, 119, 120, 133, 134, 354, 355, 419, 423, 434], "reli": [1, 2, 3, 11, 23, 61, 67, 225, 262, 263, 264, 266, 267, 268, 323, 343, 415, 419, 421, 423, 425, 427, 434, 439], "third": [1, 206, 227, 306, 432, 433], "parti": 1, "try": [1, 2, 4, 7, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 31, 32, 40, 41, 42, 43, 56, 58, 65, 69, 79, 419, 420, 421, 422, 423, 426, 427, 432, 433, 434, 438, 439], "limit": [1, 2, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 66, 68, 69, 77, 80, 81, 82, 83, 84, 121, 124, 128, 135, 136, 142, 148, 149, 156, 157, 182, 202, 323, 325, 340, 341, 343, 345, 415, 419, 420, 422, 432, 433, 434], "chart": 1, "show": [1, 2, 11, 27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241, 275, 378, 419, 421, 422, 423, 432, 433, 434, 436, 438], "decis": [1, 2, 3, 250, 255, 283, 304, 329, 342, 414, 422, 424, 425, 432, 433, 436, 439], "simplest": [1, 34, 60, 72, 113, 316, 419, 421, 422, 425, 432, 433, 436, 439], "scenario": [1, 2, 140, 141, 148, 160, 161, 230, 376, 419, 425, 432, 433, 434], "transit": [1, 27, 34, 39, 50, 60, 61, 67, 72, 100, 108, 113, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241, 244, 246, 318, 419, 422, 424, 425, 427, 432, 434, 436], "sampl": [1, 4, 8, 9, 25, 26, 28, 29, 30, 31, 32, 34, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 60, 62, 63, 64, 66, 68, 69, 72, 73, 74, 77, 80, 81, 82, 83, 84, 89, 93, 94, 95, 99, 100, 101, 102, 105, 106, 107, 108, 111, 113, 115, 121, 124, 128, 135, 136, 142, 145, 148, 149, 156, 157, 164, 171, 175, 176, 178, 179, 181, 182, 183, 186, 187, 190, 191, 194, 195, 196, 198, 201, 202, 209, 211, 212, 213, 215, 218, 219, 222, 223, 224, 225, 226, 227, 230, 231, 232, 235, 236, 238, 239, 241, 243, 245, 256, 261, 265, 271, 272, 273, 281, 283, 284, 285, 288, 293, 294, 297, 300, 305, 306, 307, 309, 310, 311, 312, 313, 323, 324, 325, 326, 327, 328, 330, 340, 342, 343, 348, 349, 387, 393, 396, 399, 412, 414, 415, 419, 420, 421, 422, 423, 424, 425, 427, 429, 432, 433, 435, 438, 439], "attent": [1, 2, 8, 135, 182, 419, 422, 439], "given": [1, 2, 3, 14, 15, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 60, 61, 62, 63, 64, 66, 67, 68, 69, 72, 73, 74, 77, 79, 80, 81, 82, 83, 84, 85, 86, 100, 102, 107, 108, 121, 124, 128, 135, 136, 142, 146, 147, 148, 149, 156, 157, 158, 159, 173, 186, 190, 192, 200, 206, 210, 225, 229, 231, 232, 233, 235, 237, 239, 241, 243, 245, 247, 258, 259, 261, 262, 264, 266, 268, 271, 276, 287, 291, 300, 305, 306, 308, 311, 312, 313, 314, 315, 317, 322, 327, 328, 330, 341, 357, 358, 359, 360, 361, 362, 364, 388, 391, 406, 414, 415, 416, 419, 420, 421, 424, 425, 426, 427, 428, 433, 434, 439], "built": [1, 2, 3, 5, 7, 102, 119, 120, 127, 133, 134, 145, 146, 323, 324, 326, 327, 328, 330, 332, 333, 334, 339, 341, 343, 344, 345, 346, 348, 349, 350, 356, 404, 406, 407, 410, 419, 420, 421, 422, 423, 426, 428, 434, 436, 439], "flatten": [1, 25, 26, 28, 29, 30, 31, 32, 35, 36, 40, 41, 42, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 56, 58, 65, 68, 69, 77, 79, 80, 81, 82, 83, 84, 113, 179, 197, 393, 412, 422, 433], "suffici": [1, 3, 4, 419], "preprocess": [1, 2, 78, 231, 420, 423], "popul": [1, 2, 3, 14, 15, 16, 21, 57, 62, 63, 64, 71, 73, 74, 102, 135, 201, 225, 256, 276, 341, 419, 421, 422, 425, 427, 434, 436], "replaybuff": [1, 2, 3, 14, 15, 16, 21, 36, 57, 62, 63, 70, 73, 74, 93, 94, 99, 100, 101, 102, 107, 108, 117, 182, 211, 215, 241, 328, 333, 356, 404, 406, 412, 421, 423, 427, 429, 432, 433, 435, 436, 438], "lazytensorstorag": [1, 2, 57, 64, 72, 73, 74, 99, 107, 108, 113, 215, 241, 421, 423, 429, 432, 433, 436], "lambda": [1, 2, 14, 15, 16, 17, 21, 22, 34, 45, 60, 64, 72, 79, 113, 121, 124, 125, 128, 135, 136, 148, 149, 156, 157, 172, 179, 187, 200, 202, 225, 233, 241, 242, 247, 296, 305, 308, 309, 310, 334, 336, 337, 348, 358, 361, 369, 370, 374, 375, 376, 406, 415, 419, 420, 423, 432, 433, 435, 436, 438, 439], "reshap": [1, 2, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 107, 113, 179, 264, 268, 269, 284, 376, 421, 432, 433], "extend": [1, 2, 8, 36, 45, 57, 60, 62, 63, 64, 70, 73, 74, 79, 92, 93, 96, 99, 100, 102, 103, 107, 108, 111, 113, 114, 117, 118, 175, 181, 215, 231, 241, 244, 341, 393, 415, 416, 419, 420, 421, 422, 423, 427, 429, 432, 433, 435, 436, 438], "slice": [1, 2, 3, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 57, 62, 63, 64, 68, 69, 73, 74, 77, 80, 81, 82, 83, 84, 100, 102, 107, 108, 175, 181, 182, 436], "recommend": [1, 2, 4, 7, 14, 15, 16, 17, 18, 19, 20, 21, 40, 41, 42, 56, 57, 58, 64, 65, 73, 74, 79, 107, 113, 132, 182, 276, 415, 427, 432, 433], "achiev": [1, 2, 3, 4, 27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 132, 135, 136, 148, 149, 156, 157, 174, 224, 241, 247, 309, 393, 416, 419, 420, 421, 422, 423, 432, 433, 434, 436, 438, 439], "creat": [1, 2, 3, 4, 5, 6, 7, 10, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 67, 68, 69, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 89, 94, 96, 102, 113, 121, 124, 125, 128, 132, 135, 136, 148, 149, 150, 156, 157, 160, 161, 167, 173, 179, 182, 190, 200, 210, 230, 231, 232, 235, 238, 239, 241, 248, 249, 251, 252, 253, 254, 255, 256, 260, 264, 268, 269, 270, 274, 275, 304, 313, 320, 326, 328, 333, 344, 346, 356, 378, 393, 400, 401, 402, 406, 408, 409, 414, 419, 420, 421, 422, 423, 425, 428, 432, 433, 434, 435, 436, 438, 439], "multidimension": [1, 2, 73, 99, 100, 436], "slicesampl": [1, 2, 100, 108, 182, 436], "sampler": [1, 2, 57, 62, 63, 64, 73, 74, 93, 94, 95, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 111, 113, 115, 182, 211, 284, 328, 333, 356, 419, 421, 432, 433, 436], "One": [1, 2, 4, 8, 25, 26, 30, 31, 32, 35, 43, 48, 49, 54, 55, 69, 78, 113, 119, 120, 148, 156, 182, 215, 235, 243, 281, 312, 316, 347, 352, 382, 419, 420, 436, 439], "must": [1, 2, 3, 7, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 39, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 60, 61, 62, 63, 64, 66, 67, 68, 69, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 89, 93, 94, 95, 96, 100, 102, 107, 108, 109, 110, 111, 113, 115, 119, 121, 124, 125, 128, 133, 135, 136, 146, 148, 149, 150, 151, 153, 156, 157, 158, 160, 170, 175, 178, 179, 182, 185, 187, 194, 198, 200, 202, 204, 206, 208, 219, 222, 224, 225, 226, 229, 230, 232, 233, 234, 239, 241, 248, 249, 258, 264, 268, 269, 272, 273, 274, 275, 287, 300, 305, 306, 308, 309, 310, 311, 312, 313, 316, 317, 323, 324, 326, 327, 328, 330, 331, 332, 333, 334, 339, 341, 343, 344, 345, 346, 347, 348, 349, 356, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 380, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 415, 419, 420, 421, 422, 425, 431, 434, 436], "ensur": [1, 2, 3, 27, 34, 39, 50, 57, 60, 61, 67, 72, 73, 79, 99, 100, 106, 121, 124, 128, 135, 136, 148, 149, 156, 157, 175, 182, 190, 210, 223, 232, 235, 239, 241, 264, 268, 305, 414, 420, 421, 434, 436], "shape": [1, 2, 3, 14, 15, 16, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 86, 89, 93, 94, 95, 99, 102, 107, 113, 115, 121, 122, 123, 124, 127, 128, 129, 133, 134, 135, 136, 139, 140, 141, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 160, 161, 162, 167, 173, 175, 179, 181, 183, 189, 190, 193, 194, 195, 200, 202, 203, 206, 208, 212, 213, 215, 219, 222, 223, 225, 228, 233, 239, 240, 241, 245, 247, 250, 251, 252, 253, 254, 255, 256, 257, 260, 262, 263, 264, 266, 267, 268, 269, 271, 272, 273, 274, 275, 277, 281, 282, 283, 284, 285, 286, 287, 292, 293, 295, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 313, 315, 316, 317, 320, 323, 324, 326, 327, 328, 330, 331, 332, 339, 343, 344, 345, 346, 348, 349, 352, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 387, 393, 396, 406, 414, 415, 419, 420, 421, 422, 423, 425, 426, 429, 431, 432, 433, 435, 436, 438, 439], "clearli": [1, 2], "practic": [1, 2, 3, 4, 5, 8, 52, 231, 265, 293, 294, 322, 413, 419, 420, 421, 422, 423, 426, 432, 433, 435, 439], "need": [1, 2, 3, 4, 7, 8, 10, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 33, 34, 39, 50, 56, 58, 60, 61, 67, 72, 77, 109, 113, 121, 124, 128, 132, 135, 136, 139, 148, 149, 150, 151, 156, 157, 182, 185, 187, 190, 197, 203, 210, 213, 226, 230, 231, 232, 237, 239, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 276, 277, 279, 280, 283, 285, 288, 289, 291, 296, 304, 306, 308, 309, 310, 311, 312, 316, 319, 322, 332, 345, 346, 357, 362, 378, 396, 410, 414, 415, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 432, 433, 434, 436, 438, 439], "dimension": [1, 57, 61, 64, 72, 73, 74, 192, 264, 268, 358, 363, 371, 415, 433], "num_slic": [1, 2, 100, 107, 108, 436], "4": [1, 2, 3, 7, 25, 27, 31, 32, 36, 43, 45, 48, 49, 50, 54, 57, 60, 62, 63, 64, 66, 67, 69, 70, 72, 73, 74, 93, 94, 95, 102, 107, 108, 115, 119, 120, 121, 122, 123, 124, 128, 133, 134, 135, 136, 137, 138, 139, 142, 144, 148, 149, 154, 155, 156, 157, 175, 176, 178, 179, 182, 187, 194, 215, 222, 223, 224, 230, 239, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 259, 260, 261, 262, 263, 266, 267, 269, 271, 273, 274, 275, 279, 280, 281, 283, 284, 285, 286, 287, 295, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 315, 317, 323, 324, 326, 327, 328, 330, 331, 332, 333, 334, 339, 341, 343, 344, 345, 346, 348, 349, 356, 376, 377, 414, 418, 419, 420, 421, 422, 428, 432, 433, 434, 436, 437, 438, 439], "trajectory_kei": [1, 23, 107, 108], "traj_id": [1, 2, 3, 14, 15, 16, 23, 36, 70, 179, 215, 427, 436], "total_fram": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 36, 50, 62, 70, 179, 182, 215, 396, 399, 406, 416, 419, 420, 421, 422, 423, 427, 429, 432, 433, 436, 438], "dim": [1, 2, 25, 26, 28, 29, 30, 31, 32, 35, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 64, 65, 68, 69, 73, 74, 77, 79, 80, 81, 82, 83, 84, 107, 182, 183, 204, 208, 221, 222, 225, 234, 239, 267, 291, 296, 308, 410, 415, 420, 421, 423, 432, 434, 436], "ndim": [1, 2, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 57, 64, 68, 69, 73, 74, 77, 80, 81, 82, 83, 84, 93, 95, 99, 100, 113, 115, 121, 124, 128, 135, 136, 148, 149, 156, 157, 204, 241, 308], "parallelenv": [1, 2, 3, 14, 15, 16, 17, 20, 113, 121, 124, 128, 135, 136, 143, 149, 150, 151, 153, 156, 157, 230, 264, 268, 376, 407, 412, 419, 420, 421, 424, 431, 438, 439], "make_env": [1, 3, 148, 156, 161, 230, 239, 376, 401, 402, 419, 420, 438, 439], "regular": [1, 2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 40, 41, 42, 56, 58, 65, 79, 99, 105, 121, 124, 128, 135, 136, 148, 149, 156, 157, 175, 176, 178, 179, 181, 182, 183, 186, 187, 191, 194, 195, 196, 198, 201, 202, 209, 211, 212, 213, 215, 218, 219, 222, 223, 224, 225, 226, 227, 230, 231, 232, 235, 236, 238, 239, 241, 244, 246, 257, 264, 268, 287, 306, 310, 311, 312, 313, 333, 343, 398, 412, 416, 419, 420, 423, 424, 425, 429, 436, 439], "behav": [1, 3, 130, 142, 262, 266, 281, 331, 339, 341, 423, 435], "accordingli": [1, 2, 3, 100, 187, 204, 223, 224, 266, 310, 422], "3": [1, 2, 3, 6, 7, 10, 11, 14, 15, 16, 17, 21, 25, 26, 27, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 67, 69, 72, 73, 74, 79, 93, 95, 100, 102, 107, 108, 113, 115, 121, 122, 123, 124, 127, 128, 129, 130, 131, 135, 136, 139, 140, 141, 143, 145, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 167, 176, 178, 179, 182, 186, 187, 190, 192, 194, 195, 200, 202, 206, 208, 210, 212, 213, 215, 218, 219, 222, 223, 224, 225, 228, 230, 231, 232, 233, 235, 237, 241, 242, 244, 245, 247, 248, 249, 251, 252, 253, 255, 258, 260, 262, 263, 264, 266, 267, 268, 269, 271, 274, 275, 276, 281, 284, 286, 296, 300, 301, 302, 303, 305, 306, 309, 311, 312, 315, 316, 317, 323, 324, 326, 327, 328, 330, 331, 332, 333, 334, 335, 339, 341, 343, 344, 345, 346, 348, 349, 356, 358, 359, 360, 361, 364, 367, 368, 369, 370, 372, 373, 374, 375, 376, 378, 395, 414, 416, 418, 419, 420, 421, 422, 424, 425, 427, 428, 432, 433, 434, 436, 437, 438, 439], "isn": [1, 2, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 40, 41, 42, 56, 58, 65, 79, 99, 113, 121, 124, 128, 135, 136, 148, 149, 156, 157, 162, 178, 194, 200, 305, 312, 425, 426, 428, 432, 433], "current": [1, 2, 3, 12, 14, 15, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 77, 79, 80, 81, 82, 83, 84, 97, 100, 102, 108, 121, 124, 128, 130, 135, 136, 143, 146, 147, 148, 149, 156, 157, 164, 173, 178, 179, 182, 200, 211, 224, 225, 226, 230, 231, 232, 241, 259, 285, 289, 293, 297, 308, 323, 325, 326, 333, 340, 343, 345, 346, 381, 416, 419, 420, 421, 422, 426, 432, 433, 434, 436, 439], "fulli": [1, 8, 27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241, 263, 267, 420, 423, 426, 434, 436], "ani": [1, 2, 3, 5, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 67, 68, 69, 72, 73, 74, 77, 79, 80, 81, 82, 83, 84, 91, 92, 93, 94, 95, 96, 102, 103, 106, 108, 109, 111, 113, 114, 115, 117, 118, 121, 124, 125, 128, 135, 136, 143, 148, 149, 150, 151, 156, 157, 158, 160, 161, 162, 174, 176, 178, 179, 181, 182, 183, 186, 187, 190, 191, 194, 195, 196, 197, 198, 200, 201, 202, 209, 210, 211, 212, 213, 215, 218, 219, 222, 223, 224, 225, 226, 227, 230, 231, 232, 233, 235, 236, 238, 239, 241, 247, 248, 249, 255, 256, 269, 278, 284, 304, 308, 312, 313, 314, 315, 323, 324, 326, 327, 328, 330, 331, 332, 339, 341, 343, 344, 345, 346, 348, 349, 358, 360, 361, 376, 378, 383, 396, 413, 415, 419, 420, 421, 422, 423, 425, 426, 432, 433, 434, 436, 438, 439], "consecut": [1, 3, 106, 132, 268, 285, 378, 422, 424, 427, 433, 436, 439], "won": [1, 4, 14, 15, 16, 17, 18, 19, 20, 21, 27, 34, 39, 40, 41, 42, 50, 56, 58, 60, 61, 65, 67, 72, 79, 121, 124, 125, 127, 128, 135, 136, 143, 144, 148, 149, 156, 157, 210, 237, 241, 323, 396, 410, 420, 421, 424, 425], "therebi": [1, 24, 376, 415, 419, 420], "interrupt": [1, 2, 128, 308, 364], "These": [1, 2, 7, 45, 66, 116, 160, 210, 237, 414, 415, 419, 421, 432, 433, 434, 436, 439], "tool": [1, 2, 3, 5, 414, 415, 422, 424, 432, 434, 436, 439], "backend": [1, 3, 7, 18, 19, 21, 22, 79, 121, 124, 127, 128, 135, 136, 148, 149, 156, 157, 166, 172, 242, 416, 419, 421, 422, 423, 424, 427, 428, 434], "gloo": [1, 18, 19, 22], "nccl": [1, 18, 19], "mpi": [1, 18, 19], "distributeddatacollector": [1, 22, 412], "rpc": [1, 20, 22, 63], "rpcdatacollector": [1, 22, 412], "launcher": [1, 18, 19, 20, 22], "rai": [1, 21, 57, 62, 63, 64, 73, 74, 102], "submitit": [1, 18, 19, 20, 22], "multiprocess": [1, 2, 3, 14, 15, 18, 19, 20, 64, 73, 74, 94, 102, 125, 126, 148, 156, 239, 419, 420, 421, 422, 427, 432, 433, 434, 435, 439], "synchron": [1, 14, 15, 16, 19, 21, 40, 41, 42, 56, 58, 65, 79, 143, 408, 409, 420, 421, 432], "mode": [1, 3, 6, 14, 15, 16, 17, 18, 19, 20, 21, 27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 143, 148, 149, 156, 157, 189, 193, 224, 232, 239, 241, 246, 256, 264, 265, 268, 273, 281, 292, 293, 294, 299, 309, 313, 341, 376, 386, 391, 414, 415, 419, 420, 432, 433, 438, 439], "find": [1, 4, 6, 7, 18, 19, 20, 57, 59, 75, 107, 108, 243, 266, 285, 390, 394, 419, 420, 423, 425, 426, 432, 433], "folder": [1, 2, 40, 41, 42, 56, 58, 65, 79, 160, 182, 420], "variou": [1, 2, 3, 121, 231, 264, 268, 323, 324, 325, 331, 332, 333, 334, 335, 336, 339, 340, 341, 343, 344, 345, 346, 349, 350, 356, 378, 408, 409, 419, 420, 421, 423, 424, 425, 426, 428, 432, 433, 436, 439], "machin": [1, 2, 7, 18, 19, 20, 50, 132, 432, 433, 438], "wonder": 1, "why": [1, 2, 3, 173, 415, 432, 434, 439], "instead": [1, 2, 3, 4, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 25, 27, 30, 34, 39, 50, 60, 61, 62, 67, 72, 76, 79, 121, 124, 128, 134, 135, 136, 148, 149, 156, 157, 182, 197, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 276, 279, 280, 283, 285, 288, 289, 291, 296, 304, 306, 308, 311, 316, 319, 323, 325, 326, 328, 331, 332, 333, 339, 340, 343, 344, 345, 346, 356, 358, 362, 366, 410, 415, 423, 424, 425, 429, 434, 436, 439], "lower": [1, 2, 3, 21, 27, 28, 185, 239, 288, 289, 316, 421, 432, 434], "io": [1, 11, 133, 134, 143, 146, 147, 158, 159, 266, 267, 423], "footprint": [1, 2, 436], "commun": [1, 2, 3, 136, 148, 156, 413, 421, 439], "yet": [1, 119, 120, 133, 435], "plai": [1, 3, 150, 151, 157, 182, 420, 421, 426, 436, 439], "role": [1, 3, 141, 420, 426, 439], "opposit": [1, 432], "direct": [1, 2, 27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241, 262, 266, 341, 420, 426], "faster": [1, 2, 4, 23, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 143, 358, 359, 360, 361, 422, 423, 432, 433], "share": [1, 3, 6, 8, 23, 40, 41, 42, 56, 58, 64, 65, 73, 74, 77, 79, 91, 93, 94, 95, 96, 100, 102, 103, 107, 109, 111, 115, 125, 148, 156, 222, 230, 239, 264, 268, 274, 275, 301, 302, 303, 323, 324, 325, 326, 327, 331, 332, 339, 340, 343, 344, 345, 346, 348, 349, 410, 412, 414, 415, 421, 423, 429, 431, 432, 433, 438, 439], "among": [1, 3, 52, 150, 151, 230, 332, 346, 415, 432, 433], "prohibit": [1, 3, 113], "slow": [1, 3, 4, 11, 40, 41, 42, 56, 58, 65, 79, 94, 107, 108], "compar": [1, 3, 113, 324, 326, 339, 344, 346, 348, 349, 391, 415, 419, 421, 423, 425, 426, 432, 433, 436, 439], "gpu": [1, 7, 8, 27, 34, 39, 50, 60, 61, 67, 72, 93, 95, 115, 121, 124, 128, 129, 132, 135, 136, 148, 149, 156, 157, 241, 419, 421, 422, 432, 433, 439], "driver": [1, 7], "mean": [1, 2, 3, 4, 7, 14, 15, 16, 17, 18, 19, 20, 21, 40, 41, 42, 56, 58, 65, 73, 77, 79, 94, 99, 100, 107, 108, 113, 119, 120, 121, 124, 128, 135, 136, 148, 149, 156, 157, 178, 206, 230, 239, 243, 244, 245, 256, 259, 262, 264, 266, 268, 271, 283, 284, 292, 293, 309, 313, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 337, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 358, 359, 360, 361, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 414, 415, 419, 420, 421, 423, 425, 432, 433, 434, 436, 439], "keyword": [1, 2, 3, 11, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 67, 68, 69, 72, 73, 74, 77, 79, 80, 81, 82, 83, 84, 89, 91, 93, 94, 95, 99, 100, 102, 105, 107, 108, 111, 115, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 133, 134, 135, 136, 140, 141, 143, 144, 146, 147, 148, 149, 153, 156, 157, 158, 159, 160, 161, 167, 175, 176, 178, 179, 181, 182, 183, 185, 186, 187, 190, 191, 194, 195, 196, 198, 200, 201, 202, 204, 209, 210, 211, 212, 213, 215, 218, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 247, 261, 264, 268, 272, 273, 274, 275, 285, 300, 304, 305, 308, 309, 310, 312, 313, 316, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 337, 338, 339, 340, 342, 343, 344, 345, 346, 348, 349, 351, 356, 358, 359, 360, 361, 362, 366, 376, 378, 383, 385, 396, 407, 419, 420, 421, 423, 425, 428, 432, 433, 436, 438, 439], "build": [1, 2, 3, 7, 23, 27, 31, 34, 39, 50, 57, 60, 61, 62, 63, 64, 67, 72, 73, 74, 77, 102, 119, 120, 121, 124, 128, 129, 130, 133, 134, 135, 136, 140, 141, 143, 146, 147, 148, 149, 153, 156, 157, 158, 159, 160, 161, 215, 239, 241, 245, 264, 268, 271, 307, 309, 313, 396, 403, 404, 405, 414, 415, 416, 421, 422, 423, 425, 426, 427, 428, 432, 433, 434, 435, 438, 439], "mani": [1, 2, 3, 4, 64, 119, 120, 122, 123, 124, 127, 129, 130, 133, 134, 135, 143, 144, 153, 190, 225, 323, 325, 332, 340, 343, 414, 419, 420, 421, 423, 424, 425, 427, 429, 432, 433, 434, 436, 438, 439], "eg": [1, 2, 3, 25, 26, 28, 29, 30, 31, 32, 35, 40, 41, 42, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 56, 58, 65, 68, 69, 77, 79, 80, 81, 82, 83, 84, 93, 94, 95, 96, 109, 111, 115, 121, 122, 123, 124, 127, 128, 129, 130, 132, 135, 136, 148, 149, 153, 156, 157, 192, 223, 232, 242, 274, 304, 378], "gymnasium": [1, 2, 3, 5, 72, 121, 124, 127, 128, 129, 135, 136, 137, 138, 148, 149, 156, 157, 166, 172, 195, 219, 223, 238, 242, 420, 421, 423, 434, 438], "warn": [1, 3, 61, 67, 121, 124, 128, 135, 136, 148, 149, 156, 157, 243, 261, 285, 386, 420], "quickli": [1, 3, 420, 432, 433, 439], "becom": [1, 2, 3, 4, 21, 262, 266, 432, 433, 439], "quit": [1, 3, 11, 121, 124, 128, 135, 136, 148, 149, 156, 157, 419, 420, 421, 423, 425, 432, 433, 439], "annoi": [1, 3], "By": [1, 2, 3, 31, 32, 43, 54, 69, 121, 122, 123, 124, 127, 128, 129, 130, 135, 136, 140, 141, 148, 149, 150, 151, 153, 156, 157, 160, 161, 175, 176, 178, 179, 181, 182, 183, 186, 187, 191, 194, 195, 196, 198, 201, 202, 204, 209, 211, 212, 213, 215, 218, 219, 222, 223, 224, 225, 226, 227, 230, 231, 235, 236, 238, 239, 241, 296, 313, 341, 386, 391, 410, 415, 419, 422, 432, 435, 436, 439], "filter": [1, 2, 3, 4, 78, 100, 107, 108, 323, 324, 326, 327, 331, 332, 339, 343, 344, 346, 424], "out": [1, 2, 3, 4, 5, 9, 21, 27, 34, 39, 40, 41, 42, 45, 50, 56, 58, 60, 61, 65, 67, 72, 78, 79, 91, 100, 107, 108, 121, 124, 128, 135, 136, 148, 149, 150, 151, 156, 157, 162, 190, 222, 225, 241, 243, 262, 263, 266, 272, 273, 276, 277, 278, 300, 304, 305, 306, 309, 310, 311, 312, 313, 341, 354, 355, 415, 416, 419, 420, 421, 422, 423, 424, 425, 427, 432, 433, 434, 436, 438, 439], "still": [1, 2, 3, 9, 34, 60, 72, 79, 80, 119, 120, 121, 124, 128, 133, 134, 135, 136, 148, 149, 156, 157, 230, 285, 340, 341, 415, 419, 420, 422, 431, 434, 436, 439], "wish": [1, 3, 11, 14, 15, 17, 172, 426, 436], "displai": [1, 3, 7, 121, 124, 128, 135, 136, 148, 149, 156, 157, 396, 416, 419, 420, 433, 434], "filter_warnings_subprocess": [1, 3], "fals": [1, 2, 3, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 105, 106, 107, 108, 109, 114, 115, 117, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 167, 173, 174, 175, 176, 178, 179, 182, 183, 186, 187, 189, 190, 193, 194, 195, 197, 200, 201, 202, 204, 205, 206, 208, 210, 211, 212, 213, 215, 217, 218, 219, 222, 223, 225, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 241, 242, 243, 244, 245, 247, 248, 249, 251, 257, 258, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 285, 286, 287, 293, 294, 295, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 313, 315, 316, 317, 323, 324, 325, 326, 327, 328, 330, 331, 332, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 352, 356, 358, 359, 360, 361, 367, 368, 369, 370, 372, 373, 374, 375, 376, 378, 385, 386, 389, 390, 391, 393, 394, 396, 410, 414, 415, 416, 419, 420, 421, 423, 428, 429, 431, 432, 433, 434, 435, 438, 439], "central": [2, 274, 275, 276, 419, 420, 424, 432, 433, 436], "part": [2, 3, 4, 8, 27, 34, 39, 50, 60, 61, 66, 67, 72, 79, 119, 121, 124, 128, 133, 135, 136, 146, 148, 149, 156, 157, 173, 181, 206, 215, 218, 241, 264, 268, 317, 387, 410, 415, 419, 421, 422, 423, 429, 432, 434, 439], "algorithm": [2, 3, 8, 9, 142, 175, 222, 323, 343, 344, 346, 412, 415, 416, 419, 420, 421, 422, 423, 425, 426, 427, 428, 432, 433, 435, 436, 438], "implement": [2, 3, 9, 14, 15, 16, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 60, 61, 62, 67, 68, 69, 72, 76, 77, 80, 81, 82, 83, 84, 97, 109, 110, 121, 124, 128, 135, 136, 142, 143, 148, 149, 156, 157, 179, 186, 189, 191, 195, 198, 202, 204, 212, 213, 219, 223, 229, 231, 232, 233, 239, 241, 242, 246, 248, 262, 263, 264, 265, 266, 267, 268, 292, 293, 294, 323, 324, 326, 329, 330, 331, 337, 339, 341, 342, 343, 345, 346, 348, 376, 387, 401, 414, 416, 419, 420, 421, 422, 423, 432, 433, 434, 438], "wide": [2, 3, 5, 438], "give": [2, 3, 7, 73, 121, 124, 128, 135, 136, 142, 148, 149, 156, 157, 182, 413, 415, 419, 420, 423, 432, 433, 434, 435, 438], "abil": [2, 341, 434, 436], "panel": [2, 421], "usag": [2, 3, 5, 7, 14, 15, 16, 17, 18, 19, 20, 21, 34, 60, 72, 91, 113, 179, 182, 194, 246, 264, 268, 326, 331, 339, 346, 350, 414, 419, 421, 422, 425, 426, 428, 432, 433, 436], "includ": [2, 3, 4, 7, 9, 21, 27, 34, 39, 50, 60, 61, 67, 72, 77, 79, 90, 91, 93, 94, 95, 96, 98, 109, 111, 115, 121, 124, 128, 135, 136, 142, 146, 147, 148, 149, 156, 157, 197, 200, 224, 230, 232, 239, 241, 264, 268, 323, 326, 341, 346, 399, 414, 416, 419, 420, 421, 422, 423, 432, 433, 434, 436, 439], "almost": [2, 273, 422], "physic": [2, 6, 7, 91, 148, 149, 153, 416, 419, 432, 433, 434], "theori": 2, "crude": 2, "made": [2, 3, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 60, 61, 64, 67, 68, 69, 72, 77, 80, 81, 82, 83, 84, 93, 94, 95, 96, 109, 111, 115, 121, 124, 127, 128, 129, 135, 136, 148, 149, 156, 157, 225, 241, 276, 285, 328, 341, 356, 419, 420, 422, 432, 433, 435, 436, 438], "liststorag": [2, 45, 57, 62, 63, 64, 72, 73, 74, 94, 102, 436], "veri": [2, 3, 133, 134, 420, 424, 427, 432, 434, 436, 438, 439], "ineffici": [2, 4], "allow": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 31, 32, 34, 39, 40, 41, 42, 43, 50, 52, 54, 56, 58, 60, 61, 64, 65, 67, 68, 69, 72, 73, 74, 79, 94, 100, 102, 105, 107, 108, 119, 120, 121, 124, 128, 133, 134, 135, 136, 148, 149, 156, 157, 173, 178, 179, 213, 241, 242, 269, 323, 324, 326, 327, 328, 330, 332, 333, 334, 339, 341, 343, 344, 345, 346, 348, 349, 350, 352, 356, 414, 416, 419, 421, 422, 423, 424, 425, 426, 432, 433, 434, 436, 438, 439], "complex": [2, 27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 186, 210, 225, 231, 232, 235, 237, 241, 312, 419, 420, 424, 425], "tensor": [2, 8, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 105, 107, 108, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 133, 134, 135, 136, 139, 140, 141, 142, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 160, 161, 167, 173, 174, 175, 176, 178, 179, 181, 182, 183, 186, 187, 189, 190, 192, 193, 194, 195, 197, 200, 201, 203, 206, 208, 210, 211, 212, 213, 215, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 237, 239, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 281, 282, 283, 284, 285, 286, 287, 290, 291, 292, 293, 294, 295, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 313, 315, 316, 317, 319, 321, 323, 324, 326, 327, 328, 330, 331, 332, 335, 336, 339, 341, 343, 344, 345, 346, 348, 349, 352, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 414, 415, 416, 419, 420, 421, 422, 423, 424, 425, 432, 433, 434, 438, 439], "contigu": [2, 3, 8, 28, 31, 39, 80, 94, 121, 124, 128, 135, 136, 148, 149, 156, 157, 167, 200, 203, 225, 233, 434, 436, 438], "tensorstorag": [2, 64, 72, 93, 99, 100, 113, 116, 427, 436], "lazymemmapstorag": [2, 36, 57, 62, 63, 64, 70, 73, 74, 100, 102, 107, 108, 181, 182, 419, 420, 422, 427, 432, 435, 436], "citizen": 2, "pytre": [2, 57, 62, 63, 64, 73, 74, 96, 102, 116], "tupl": [2, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 72, 73, 74, 77, 79, 80, 81, 82, 83, 84, 91, 96, 100, 102, 107, 111, 113, 121, 122, 123, 124, 127, 128, 129, 135, 136, 148, 149, 156, 157, 182, 200, 202, 206, 241, 247, 251, 257, 258, 264, 267, 268, 269, 276, 283, 286, 287, 305, 306, 310, 311, 316, 323, 324, 325, 326, 327, 331, 332, 334, 339, 340, 341, 343, 344, 345, 346, 348, 349, 358, 359, 360, 361, 390, 391, 394, 403, 436, 438], "dictionari": [2, 14, 15, 16, 17, 18, 19, 20, 21, 27, 31, 34, 39, 40, 41, 42, 50, 56, 58, 60, 61, 65, 67, 72, 78, 79, 100, 105, 107, 108, 121, 124, 127, 128, 129, 135, 136, 140, 141, 148, 149, 156, 157, 160, 161, 200, 225, 230, 232, 241, 309, 313, 326, 346, 348, 391, 408, 409, 410, 416, 420, 421, 424, 426, 432, 434, 439], "nest": [2, 3, 23, 27, 31, 32, 34, 36, 38, 39, 40, 41, 42, 43, 50, 51, 56, 58, 60, 61, 64, 65, 67, 69, 70, 71, 72, 79, 85, 93, 94, 95, 98, 102, 115, 121, 124, 127, 128, 129, 135, 136, 148, 149, 156, 157, 174, 182, 223, 226, 230, 241, 308, 358, 359, 360, 361, 362, 376, 386, 416, 420, 421, 423, 433, 434, 436, 438], "construct": [2, 3, 5, 23, 27, 34, 39, 50, 57, 60, 61, 64, 67, 72, 73, 74, 77, 102, 121, 124, 125, 127, 128, 135, 136, 148, 149, 150, 156, 157, 162, 189, 193, 241, 264, 268, 289, 313, 396, 414, 420, 421, 422, 425, 432, 434, 436, 439], "ram": [2, 127, 129, 428, 436], "prealloc": [2, 3, 148, 156, 434], "ve": [2, 66, 419, 422, 429], "been": [2, 3, 5, 7, 8, 12, 18, 20, 21, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 66, 68, 69, 77, 80, 81, 82, 83, 84, 102, 106, 121, 124, 128, 132, 135, 136, 140, 141, 148, 149, 156, 157, 202, 223, 224, 231, 232, 262, 264, 266, 268, 276, 308, 323, 341, 343, 345, 419, 420, 421, 422, 431, 432, 433, 434, 436, 438, 439], "here": [2, 3, 4, 7, 8, 9, 10, 14, 15, 21, 113, 121, 122, 123, 124, 128, 132, 135, 136, 148, 149, 150, 151, 156, 157, 182, 230, 276, 385, 414, 415, 416, 419, 420, 421, 422, 423, 424, 425, 427, 429, 432, 433, 434, 436, 438, 439], "start": [2, 3, 4, 5, 14, 21, 24, 45, 62, 77, 78, 79, 100, 107, 108, 121, 124, 125, 128, 135, 136, 139, 148, 149, 156, 157, 173, 188, 392, 418, 419, 420, 423, 430, 433, 434, 436, 437, 439], "replay_buff": [2, 8, 14, 15, 16, 21, 57, 62, 63, 64, 73, 74, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 182, 393, 406, 419, 420, 421, 427, 432, 433, 436], "import": [2, 3, 4, 6, 10, 11, 14, 15, 16, 17, 21, 22, 23, 25, 26, 28, 29, 30, 31, 32, 34, 35, 36, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 68, 69, 70, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 89, 93, 94, 95, 99, 100, 102, 107, 108, 113, 115, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 133, 134, 135, 136, 138, 140, 141, 142, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 163, 166, 167, 172, 173, 174, 175, 176, 178, 179, 181, 182, 185, 187, 190, 194, 195, 200, 201, 202, 203, 206, 208, 210, 212, 213, 214, 215, 218, 219, 220, 222, 223, 224, 225, 226, 227, 230, 231, 233, 237, 239, 241, 242, 245, 247, 251, 252, 253, 254, 257, 258, 260, 261, 262, 263, 264, 266, 267, 268, 269, 271, 274, 275, 276, 285, 286, 287, 295, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 313, 315, 316, 317, 320, 323, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 339, 341, 343, 344, 345, 346, 348, 349, 356, 358, 359, 360, 361, 376, 378, 389, 391, 406, 414, 415, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 438, 439], "rb": [2, 36, 57, 62, 63, 64, 70, 73, 74, 94, 99, 100, 102, 107, 108, 113, 182, 215, 241, 420, 422, 423, 427, 429, 433, 435, 436, 438], "10": [2, 3, 7, 22, 23, 25, 26, 27, 30, 34, 35, 45, 46, 50, 57, 62, 63, 64, 66, 72, 73, 74, 75, 78, 79, 93, 94, 95, 99, 102, 107, 108, 113, 115, 119, 120, 121, 124, 125, 128, 133, 134, 135, 136, 142, 148, 149, 150, 151, 154, 155, 156, 157, 160, 161, 175, 176, 179, 181, 182, 187, 190, 224, 226, 227, 228, 241, 245, 247, 250, 251, 253, 255, 257, 261, 262, 263, 264, 266, 267, 268, 271, 273, 283, 285, 296, 309, 313, 316, 320, 324, 328, 330, 337, 343, 344, 345, 349, 356, 358, 359, 360, 361, 364, 378, 387, 416, 419, 420, 421, 422, 423, 424, 425, 429, 432, 434, 436, 438, 439], "add": [2, 3, 4, 6, 21, 27, 31, 32, 34, 39, 43, 45, 50, 57, 60, 61, 62, 63, 64, 67, 69, 72, 73, 74, 92, 94, 99, 102, 103, 113, 114, 117, 118, 121, 124, 128, 135, 136, 148, 149, 156, 157, 182, 200, 202, 229, 232, 241, 264, 268, 277, 307, 323, 392, 421, 422, 423, 424, 425, 426, 427, 428, 429, 432, 433, 434, 436, 438], "string": [2, 18, 19, 20, 27, 34, 39, 45, 50, 52, 59, 60, 61, 67, 72, 78, 79, 89, 94, 121, 124, 128, 135, 136, 140, 146, 148, 149, 156, 157, 172, 190, 200, 210, 223, 229, 237, 241, 264, 268, 305, 308, 309, 310, 322, 377, 395, 415, 419, 421, 422, 436], "element": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 40, 41, 42, 45, 46, 48, 54, 56, 57, 58, 62, 63, 64, 65, 72, 73, 74, 77, 79, 93, 94, 95, 96, 99, 100, 102, 107, 108, 113, 115, 121, 124, 128, 135, 136, 145, 148, 149, 156, 157, 175, 182, 187, 190, 211, 220, 224, 225, 243, 248, 249, 262, 263, 266, 299, 300, 305, 308, 312, 313, 317, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 337, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 387, 415, 419, 421, 425, 427, 436, 439], "30": [2, 3, 64, 72, 107, 108, 178, 205, 288, 289, 376, 380, 383, 385, 427, 433, 434, 436], "none": [2, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 89, 90, 91, 93, 94, 95, 96, 98, 99, 100, 102, 105, 107, 108, 109, 111, 113, 115, 121, 124, 125, 127, 128, 135, 136, 139, 140, 141, 142, 146, 147, 148, 149, 150, 151, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 168, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 193, 197, 199, 200, 202, 203, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 237, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 285, 286, 287, 293, 295, 296, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 313, 315, 316, 317, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 390, 391, 392, 393, 394, 395, 396, 400, 401, 402, 403, 405, 406, 408, 409, 410, 414, 416, 419, 420, 422, 423, 434, 436, 438], "int": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 89, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 105, 107, 108, 109, 113, 114, 115, 117, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 133, 134, 135, 136, 140, 141, 142, 143, 144, 148, 149, 150, 151, 153, 156, 157, 160, 161, 162, 167, 175, 177, 178, 179, 181, 182, 183, 184, 186, 188, 190, 192, 197, 198, 200, 204, 205, 206, 208, 210, 211, 214, 221, 222, 223, 226, 229, 230, 232, 234, 237, 241, 243, 244, 245, 248, 249, 250, 251, 253, 255, 256, 258, 259, 260, 261, 262, 263, 265, 266, 267, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 283, 285, 286, 287, 288, 289, 291, 292, 293, 295, 296, 304, 305, 306, 308, 309, 311, 313, 323, 324, 325, 332, 334, 335, 340, 341, 342, 343, 344, 348, 349, 358, 360, 361, 363, 364, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 380, 383, 385, 387, 388, 389, 391, 393, 396, 398, 408, 409, 410, 423, 434, 436], "entri": [2, 3, 14, 15, 17, 23, 27, 31, 32, 34, 36, 39, 40, 41, 42, 43, 45, 50, 56, 58, 59, 60, 61, 65, 67, 69, 70, 72, 78, 79, 86, 107, 108, 121, 122, 123, 124, 127, 128, 129, 130, 135, 136, 140, 141, 148, 149, 153, 156, 157, 160, 161, 173, 174, 178, 182, 184, 185, 187, 188, 189, 191, 193, 194, 197, 201, 203, 204, 206, 208, 210, 213, 215, 218, 220, 222, 223, 224, 225, 227, 230, 232, 234, 237, 239, 241, 264, 272, 273, 304, 305, 308, 310, 311, 324, 326, 346, 358, 359, 360, 361, 414, 419, 421, 422, 424, 425, 426, 428, 432, 433, 434, 435, 436, 438, 439], "onto": [2, 8, 40, 41, 42, 54, 56, 58, 65, 79, 167, 191, 243, 285, 300, 305, 306, 309, 310, 311, 312, 313, 422, 434], "__setitem__": 2, "indic": [2, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 28, 29, 30, 31, 32, 35, 36, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 62, 63, 64, 65, 66, 68, 69, 70, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 89, 92, 99, 100, 102, 103, 105, 106, 107, 108, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 133, 134, 135, 136, 143, 144, 148, 149, 153, 156, 157, 160, 161, 174, 175, 182, 183, 223, 224, 225, 226, 232, 241, 242, 248, 249, 269, 272, 273, 275, 285, 308, 310, 311, 319, 323, 324, 326, 327, 328, 330, 332, 333, 334, 339, 341, 343, 344, 345, 346, 348, 349, 356, 400, 410, 413, 416, 421, 422, 423, 427, 428, 429, 434, 436, 439], "without": [2, 3, 7, 9, 14, 15, 16, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 60, 61, 65, 66, 67, 68, 69, 72, 77, 79, 80, 81, 82, 83, 84, 107, 108, 121, 124, 128, 135, 136, 148, 149, 156, 157, 160, 161, 176, 178, 189, 193, 228, 231, 241, 262, 263, 266, 267, 302, 303, 323, 324, 326, 327, 328, 330, 331, 332, 339, 343, 344, 345, 346, 348, 349, 357, 358, 359, 360, 361, 362, 406, 413, 414, 419, 420, 421, 423, 424, 425, 426, 427, 432, 433, 434, 436, 439], "updat": [2, 3, 4, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 33, 34, 39, 40, 41, 42, 45, 50, 56, 57, 58, 60, 61, 65, 66, 67, 72, 73, 79, 99, 100, 121, 124, 128, 135, 136, 142, 148, 149, 150, 151, 156, 157, 158, 159, 174, 176, 178, 179, 189, 192, 193, 200, 212, 223, 224, 230, 232, 236, 239, 241, 243, 245, 246, 261, 262, 264, 268, 271, 276, 285, 309, 310, 311, 312, 313, 323, 324, 325, 326, 327, 328, 330, 332, 333, 334, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 356, 358, 359, 360, 361, 362, 391, 396, 398, 401, 402, 405, 406, 416, 420, 421, 422, 423, 426, 429, 432, 433, 434, 436, 439], "length": [2, 20, 25, 26, 27, 28, 29, 30, 31, 32, 35, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 58, 59, 60, 66, 68, 69, 75, 77, 78, 79, 80, 81, 82, 83, 84, 89, 100, 107, 108, 111, 121, 124, 128, 133, 134, 135, 136, 148, 149, 156, 157, 175, 182, 190, 203, 211, 239, 245, 248, 249, 251, 253, 255, 262, 266, 269, 271, 274, 275, 300, 312, 317, 387, 393, 419, 421, 422, 427, 429, 434, 436, 439], "cursor": [2, 57, 62, 63, 64, 73, 74, 102], "afterward": [2, 27, 34, 39, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 276, 279, 280, 283, 285, 288, 289, 291, 296, 304, 306, 308, 311, 316, 319, 432, 439], "tell": [2, 3, 4, 7, 150, 151, 230, 419, 422, 427, 432, 433], "our": [2, 3, 7, 8, 11, 18, 45, 64, 182, 378, 415, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 435, 436, 438], "far": [2, 57, 62, 63, 64, 66, 73, 74, 102, 265, 293, 294, 429, 434, 439], "restrict": [2, 3, 415, 420, 435, 436, 439], "empti": [2, 3, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 67, 68, 69, 72, 73, 74, 77, 79, 80, 81, 82, 83, 84, 96, 102, 121, 124, 128, 134, 135, 136, 145, 148, 149, 156, 157, 167, 189, 193, 210, 212, 226, 232, 235, 237, 241, 382, 419, 434], "64": [2, 3, 40, 41, 42, 56, 58, 65, 79, 102, 182, 214, 251, 252, 260, 264, 268, 275, 276, 286, 356, 419, 420, 421, 422, 423, 425, 429, 431, 434, 436, 438, 439], "dtype": [2, 3, 14, 15, 16, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 89, 93, 94, 95, 99, 100, 107, 108, 115, 119, 120, 121, 122, 123, 124, 127, 128, 129, 133, 134, 135, 136, 139, 140, 141, 142, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 160, 161, 162, 167, 170, 173, 174, 175, 176, 179, 180, 186, 189, 190, 191, 192, 193, 194, 195, 200, 202, 203, 206, 208, 210, 212, 213, 215, 219, 222, 223, 225, 227, 228, 231, 232, 233, 235, 237, 241, 245, 247, 257, 258, 262, 263, 264, 266, 267, 268, 271, 277, 278, 285, 286, 287, 295, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 313, 315, 317, 320, 323, 324, 326, 327, 328, 330, 331, 332, 339, 343, 344, 345, 346, 348, 349, 356, 358, 359, 360, 361, 364, 414, 423, 431, 434, 436, 438, 439], "unit8": 2, "img": 2, "randint": [2, 78, 102, 190, 228, 436], "255": [2, 102, 228, 436], "uint8": [2, 3, 31, 40, 41, 42, 56, 58, 65, 79, 122, 123, 140, 141, 194, 200, 208, 228, 420, 436], "next": [2, 3, 4, 8, 14, 15, 16, 23, 31, 32, 34, 36, 38, 43, 45, 50, 57, 62, 63, 64, 66, 69, 70, 72, 73, 74, 79, 89, 90, 91, 98, 100, 102, 107, 108, 113, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 133, 134, 135, 136, 140, 141, 142, 146, 147, 148, 149, 154, 155, 156, 157, 158, 160, 161, 167, 173, 175, 178, 179, 181, 182, 187, 189, 190, 193, 194, 195, 200, 201, 202, 203, 204, 208, 212, 213, 215, 218, 219, 223, 225, 227, 230, 233, 238, 239, 241, 245, 263, 264, 267, 268, 271, 289, 308, 318, 320, 323, 324, 326, 327, 328, 330, 331, 332, 333, 339, 343, 344, 345, 346, 348, 349, 356, 357, 358, 359, 360, 361, 362, 378, 390, 391, 394, 420, 422, 423, 425, 429, 434, 435, 438, 439], "ask": [2, 3, 8, 100, 107, 108, 378, 421, 422, 424, 425, 432, 433, 435, 439], "automat": [2, 3, 5, 12, 28, 45, 77, 80, 93, 95, 102, 108, 115, 121, 124, 127, 128, 129, 135, 136, 148, 149, 150, 151, 156, 157, 178, 189, 190, 193, 206, 225, 238, 248, 264, 268, 300, 308, 309, 313, 376, 386, 414, 419, 421, 424, 425, 432, 433, 434, 436, 438], "hand": [2, 3, 7, 21, 31, 432, 433, 434], "look": [2, 3, 5, 7, 8, 27, 34, 39, 50, 60, 61, 67, 72, 100, 121, 124, 128, 135, 136, 139, 148, 149, 150, 151, 156, 157, 200, 210, 211, 235, 241, 246, 309, 313, 314, 315, 415, 421, 422, 423, 424, 425, 426, 427, 428, 429, 432, 433, 434, 435, 436, 438, 439], "assum": [2, 3, 6, 14, 15, 16, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 66, 67, 68, 69, 73, 74, 77, 80, 81, 82, 83, 84, 90, 91, 98, 107, 121, 124, 128, 135, 136, 148, 149, 156, 157, 167, 181, 184, 188, 190, 197, 210, 211, 218, 225, 232, 235, 237, 247, 264, 268, 296, 299, 316, 328, 332, 333, 346, 356, 367, 368, 369, 370, 372, 373, 374, 375, 378, 419, 421, 431, 434], "lead": [2, 3, 4, 8, 10, 23, 31, 32, 43, 50, 57, 64, 69, 79, 106, 121, 122, 123, 124, 127, 128, 129, 130, 135, 136, 148, 149, 156, 157, 225, 242, 265, 286, 293, 294, 299, 419, 422, 423, 432, 433, 434, 436, 438], "leav": [2, 25, 26, 28, 29, 30, 31, 32, 35, 40, 41, 42, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 56, 58, 64, 65, 68, 69, 77, 79, 80, 81, 82, 83, 84, 121, 124, 128, 135, 136, 148, 149, 156, 157, 162, 174, 219, 415, 419, 427, 436], "match": [2, 3, 6, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 59, 60, 61, 62, 63, 64, 67, 68, 69, 72, 73, 74, 77, 79, 80, 81, 82, 83, 84, 90, 102, 111, 121, 122, 123, 124, 125, 127, 128, 129, 130, 135, 136, 148, 149, 156, 157, 175, 179, 180, 182, 183, 184, 185, 186, 188, 189, 191, 192, 194, 195, 197, 199, 201, 202, 203, 204, 206, 208, 212, 213, 214, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 241, 248, 249, 256, 264, 268, 269, 274, 275, 292, 300, 304, 305, 309, 310, 312, 313, 316, 317, 324, 326, 332, 340, 342, 344, 346, 393, 398, 414, 415, 419, 421, 423, 431, 433, 434, 436, 439], "don": [2, 3, 4, 6, 7, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 182, 231, 420, 421, 423, 427, 436, 438, 439], "throw": [2, 27, 34, 39, 40, 41, 42, 50, 56, 58, 60, 61, 65, 67, 72, 79, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241, 439], "rb_td": 2, "batch_siz": [2, 3, 8, 14, 15, 16, 23, 31, 34, 36, 40, 41, 42, 45, 52, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 70, 72, 73, 74, 75, 78, 79, 89, 93, 94, 95, 99, 100, 101, 102, 107, 108, 113, 115, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 170, 173, 174, 175, 179, 181, 182, 186, 189, 190, 193, 194, 195, 200, 208, 212, 213, 215, 219, 222, 223, 225, 231, 232, 233, 241, 245, 247, 255, 256, 257, 258, 261, 264, 268, 271, 285, 286, 287, 295, 296, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 313, 315, 316, 317, 323, 324, 326, 327, 328, 330, 331, 332, 339, 343, 344, 345, 346, 348, 349, 356, 378, 387, 393, 414, 415, 419, 420, 421, 422, 427, 432, 433, 434, 436, 438, 439], "max": [2, 23, 54, 58, 73, 78, 89, 99, 100, 113, 134, 192, 226, 285, 324, 325, 326, 332, 342, 344, 346, 419, 421, 422, 423, 429], "label": [2, 58, 59, 66, 78, 79, 419, 432, 436], "100": [2, 14, 15, 16, 17, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 60, 61, 62, 63, 64, 67, 68, 69, 72, 73, 74, 75, 77, 80, 81, 82, 83, 84, 93, 95, 102, 107, 108, 113, 119, 120, 121, 124, 128, 133, 134, 135, 136, 148, 149, 156, 157, 185, 190, 194, 206, 215, 220, 223, 241, 273, 274, 306, 308, 378, 388, 406, 420, 421, 423, 424, 426, 429, 431, 432, 433, 434, 436, 438, 439], "rb_pytre": 2, "randn": [2, 57, 60, 62, 63, 64, 73, 74, 93, 94, 95, 100, 102, 107, 108, 115, 167, 181, 206, 247, 250, 251, 255, 257, 258, 262, 263, 266, 267, 272, 273, 274, 281, 283, 287, 300, 301, 302, 303, 304, 305, 309, 310, 312, 315, 316, 317, 323, 324, 326, 327, 328, 330, 331, 332, 339, 341, 343, 344, 345, 346, 348, 349, 358, 359, 360, 361, 395, 414, 423, 436, 438, 439], "c": [2, 3, 6, 7, 31, 34, 40, 41, 42, 56, 58, 60, 64, 65, 72, 73, 74, 79, 94, 206, 228, 233, 266, 267, 420, 436], "zero": [2, 3, 4, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 67, 68, 69, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 93, 95, 102, 107, 108, 113, 115, 121, 124, 128, 135, 136, 148, 149, 156, 157, 167, 173, 179, 181, 183, 189, 190, 192, 193, 206, 212, 215, 222, 241, 244, 245, 252, 253, 254, 260, 261, 262, 263, 264, 266, 267, 268, 272, 273, 275, 276, 285, 286, 295, 311, 313, 319, 323, 324, 326, 327, 328, 330, 331, 332, 339, 343, 344, 345, 346, 348, 349, 356, 358, 359, 360, 361, 364, 422, 423, 436, 438, 439], "assert": [2, 3, 6, 16, 23, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 60, 62, 63, 64, 65, 67, 68, 69, 72, 73, 74, 77, 79, 80, 81, 82, 83, 84, 102, 113, 121, 124, 128, 131, 135, 136, 148, 149, 156, 157, 162, 167, 172, 175, 179, 182, 185, 189, 193, 202, 213, 220, 232, 239, 247, 275, 296, 358, 359, 360, 361, 386, 387, 395, 427, 431, 436, 439], "len": [2, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 57, 62, 63, 64, 68, 69, 73, 74, 77, 80, 81, 82, 83, 84, 93, 95, 102, 115, 190, 208, 248, 249, 269, 275, 419, 423, 427, 429, 432, 434, 435, 436, 438], "ambigu": [2, 57, 62, 63, 64, 73, 74, 102], "signatur": [2, 14, 15, 16, 17, 18, 19, 20, 21, 27, 34, 39, 45, 50, 57, 60, 61, 62, 63, 64, 67, 72, 73, 74, 79, 102, 111, 121, 124, 128, 135, 136, 148, 149, 156, 157, 170, 179, 186, 200, 210, 225, 231, 232, 235, 237, 241, 312, 415, 419, 423, 424, 434], "deal": [2, 3, 57, 62, 63, 64, 73, 74, 102, 341, 415, 419, 421, 433, 436], "interpret": [2, 3, 57, 62, 63, 64, 73, 74, 102, 420], "put": [2, 57, 62, 63, 64, 73, 74, 102, 128, 140, 141, 157, 160, 161, 239, 385, 410, 414, 420, 421, 422, 424, 432, 434], "solv": [2, 4, 7, 9, 10, 57, 62, 63, 64, 73, 74, 102, 413, 419, 420, 421, 427, 429, 432, 433, 434, 436], "clear": [2, 3, 11, 27, 31, 32, 34, 39, 43, 44, 50, 57, 60, 61, 62, 63, 64, 67, 68, 69, 72, 73, 74, 102, 121, 124, 128, 132, 135, 136, 148, 149, 156, 157, 241, 388, 424, 427], "cut": [2, 57, 62, 63, 64, 73, 74, 102], "distinct": [2, 3, 57, 62, 63, 64, 73, 74, 102, 179, 182, 426, 431], "view": [2, 3, 8, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 60, 61, 62, 63, 64, 67, 68, 69, 72, 73, 74, 77, 80, 81, 82, 83, 84, 102, 121, 124, 128, 135, 136, 148, 149, 156, 157, 176, 241, 258, 262, 266, 269, 424, 434, 436, 438, 439], "through": [2, 3, 4, 5, 8, 14, 15, 16, 17, 18, 20, 21, 31, 32, 43, 57, 61, 62, 63, 64, 67, 69, 73, 74, 79, 102, 119, 120, 121, 124, 127, 128, 129, 132, 133, 134, 135, 136, 139, 148, 149, 150, 151, 156, 157, 178, 187, 189, 193, 211, 242, 247, 269, 286, 308, 309, 313, 314, 315, 319, 322, 341, 358, 359, 360, 361, 386, 414, 415, 419, 420, 421, 424, 426, 431, 432, 433, 434, 435, 436, 439], "collate_fn": [2, 57, 62, 63, 64, 72, 73, 74, 102, 436, 438], "__init__": [2, 3, 7, 124, 142, 158, 172, 176, 178, 179, 181, 182, 183, 186, 187, 189, 190, 191, 193, 194, 195, 196, 198, 201, 202, 209, 211, 212, 213, 215, 218, 219, 222, 223, 224, 225, 226, 227, 230, 231, 235, 236, 238, 239, 241, 245, 256, 258, 262, 266, 271, 317, 324, 326, 327, 332, 339, 344, 346, 348, 349, 416, 434, 439], "major": 2, "worri": [2, 75, 439], "even": [2, 3, 4, 8, 11, 15, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 72, 77, 80, 81, 82, 83, 84, 93, 94, 95, 96, 100, 107, 109, 111, 115, 121, 124, 125, 128, 132, 135, 136, 148, 149, 156, 157, 174, 178, 419, 421, 424, 432, 433, 434, 439], "though": [2, 4, 11, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 121, 124, 128, 135, 136, 148, 149, 156, 157, 269, 421, 432, 433], "too": [2, 7, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 59, 60, 66, 68, 69, 72, 77, 80, 81, 82, 83, 84, 121, 124, 128, 135, 136, 148, 149, 156, 157, 176, 178, 179, 181, 182, 183, 186, 187, 191, 194, 195, 196, 198, 201, 202, 205, 209, 211, 212, 213, 215, 218, 219, 222, 223, 224, 225, 226, 227, 230, 231, 235, 236, 238, 239, 241, 265, 293, 294, 323, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 339, 340, 341, 343, 344, 345, 346, 348, 349, 356, 358, 359, 360, 361, 420, 425, 428, 434, 436, 439], "latter": [2, 18, 19, 20, 27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 276, 279, 280, 283, 285, 288, 289, 291, 296, 304, 306, 308, 311, 316, 319, 343, 408, 409], "inv": [2, 3, 175, 185, 192, 195, 200, 208, 215, 220, 222, 227, 231, 234, 241, 434], "obvious": [2, 423], "ignor": [2, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 59, 60, 61, 67, 68, 69, 72, 75, 77, 80, 81, 82, 83, 84, 91, 121, 124, 128, 135, 136, 148, 149, 156, 157, 192, 195, 219, 228, 241, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 272, 273, 276, 279, 280, 283, 285, 288, 289, 291, 296, 304, 306, 308, 311, 316, 319, 358, 436], "multithread": [2, 3, 57, 64, 73, 74, 89, 143, 144, 427, 436], "thread": [2, 14, 15, 17, 40, 41, 42, 56, 58, 65, 79, 119, 120, 133, 134, 148, 156], "prefetch": [2, 57, 64, 73, 74, 89, 419, 420, 422, 436], "advis": [2, 11, 428, 439], "benchmark": [2, 3, 9, 119, 120, 133, 134], "techniqu": [2, 8, 148, 156, 420, 423, 427, 436], "real": [2, 5, 313, 415, 422, 423, 434, 435], "life": [2, 194, 435], "adopt": [2, 3, 5, 419, 439], "throughput": [2, 9, 134, 419], "constant": [2, 11, 33, 182, 206, 224, 416, 419, 421, 422, 439], "throughout": [2, 3, 323, 324, 325, 331, 332, 333, 334, 335, 336, 339, 340, 341, 343, 344, 345, 346, 349, 356, 421, 432, 439], "further": [2, 3, 5, 24, 419, 421, 423, 424], "refin": [2, 323, 324, 326, 327, 328, 330, 332, 333, 334, 339, 341, 343, 344, 345, 346, 348, 349, 356], "coupl": [2, 422, 425, 426, 434, 436], "get": [2, 3, 4, 6, 7, 8, 9, 12, 31, 32, 34, 40, 41, 42, 43, 45, 56, 57, 58, 60, 61, 64, 65, 67, 69, 72, 79, 93, 95, 100, 107, 108, 109, 111, 113, 115, 121, 124, 125, 128, 135, 136, 148, 149, 156, 157, 176, 181, 183, 189, 192, 193, 202, 206, 211, 224, 225, 228, 232, 239, 261, 300, 309, 310, 313, 320, 358, 359, 360, 361, 362, 378, 382, 414, 415, 418, 419, 420, 421, 422, 423, 430, 432, 433, 434, 436, 437, 438, 439], "first_elt": 2, "128": [2, 108, 119, 120, 133, 134, 252, 255, 420, 422, 423, 429, 432, 435, 436], "wa": [2, 3, 5, 7, 31, 32, 34, 43, 45, 57, 60, 62, 63, 64, 69, 72, 73, 74, 79, 100, 102, 106, 107, 121, 124, 128, 135, 136, 148, 149, 156, 157, 162, 174, 182, 200, 232, 266, 323, 325, 338, 340, 343, 345, 347, 364, 415, 420, 421, 424, 425, 431, 432, 436, 438], "print": [2, 3, 6, 7, 14, 15, 16, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 89, 99, 100, 102, 107, 108, 113, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 160, 161, 166, 167, 172, 173, 174, 175, 178, 179, 182, 183, 187, 189, 190, 191, 192, 193, 201, 206, 212, 213, 215, 218, 223, 225, 226, 227, 228, 239, 241, 248, 249, 251, 252, 253, 254, 255, 258, 260, 261, 264, 268, 269, 272, 273, 274, 275, 281, 284, 285, 287, 300, 301, 302, 303, 304, 305, 308, 309, 310, 312, 313, 315, 317, 320, 341, 376, 406, 414, 416, 420, 421, 422, 423, 424, 425, 426, 427, 428, 431, 432, 433, 434, 435, 436, 438, 439], "influenti": 2, "latenc": 2, "especi": [2, 3, 7, 8, 183], "larger": [2, 4, 72, 264, 268, 331, 339, 438], "volum": 2, "due": [2, 3, 5, 23, 426, 435, 436, 439], "memorymappedtensor": [2, 36, 56, 58, 70, 78, 93, 380, 427], "well": [2, 3, 8, 21, 23, 27, 34, 39, 50, 57, 59, 60, 61, 64, 67, 72, 73, 74, 77, 100, 105, 109, 116, 121, 124, 128, 135, 136, 148, 149, 156, 157, 231, 232, 241, 242, 246, 251, 266, 288, 289, 313, 341, 343, 348, 362, 414, 419, 420, 422, 423, 424, 425, 426, 428, 435, 436, 438, 439], "specifi": [2, 12, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 60, 61, 62, 63, 64, 67, 68, 69, 72, 73, 74, 77, 79, 80, 81, 82, 83, 84, 102, 121, 124, 128, 135, 136, 140, 141, 148, 149, 150, 151, 156, 157, 158, 159, 160, 161, 188, 189, 191, 193, 218, 221, 224, 229, 233, 234, 241, 242, 245, 266, 312, 313, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 385, 414, 419, 421, 422, 423, 427, 432], "file": [2, 6, 7, 8, 40, 41, 42, 56, 58, 65, 79, 91, 160, 377, 378, 380, 396, 416, 418, 420, 432, 436, 437], "locat": [2, 7, 40, 41, 42, 56, 58, 65, 78, 79, 121, 124, 128, 135, 136, 148, 149, 156, 157, 170, 188, 194, 206, 217, 265, 293, 294, 387, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 419, 420, 421, 428, 432, 433, 436], "improv": [2, 4, 11, 198, 323, 415, 423, 432, 433, 436], "failur": [2, 4], "recoveri": 2, "were": [2, 7, 14, 15, 16, 17, 18, 19, 20, 21, 148, 156, 200, 421, 432, 436], "found": [2, 3, 6, 7, 10, 14, 15, 16, 17, 21, 23, 27, 31, 32, 34, 39, 40, 41, 42, 43, 45, 50, 56, 58, 60, 61, 65, 67, 69, 72, 78, 79, 107, 108, 121, 122, 123, 124, 127, 128, 129, 132, 135, 136, 148, 149, 156, 157, 174, 176, 182, 203, 215, 218, 226, 239, 241, 261, 274, 275, 309, 313, 340, 341, 343, 415, 419, 420, 422, 423, 424, 426, 428, 434, 436, 438], "rough": 2, "1x": 2, "83x": 2, "44x": 2, "long": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 59, 68, 69, 77, 80, 81, 82, 83, 84, 93, 100, 146, 147, 192, 230, 244, 266, 267, 331, 422, 423, 427, 436], "sharabl": [2, 148, 156], "collabor": 2, "rather": [2, 4, 111, 135, 146, 147, 190, 213, 414, 415, 419, 420, 421, 424, 426, 432, 433, 436], "incur": [2, 119, 120, 133, 134], "transmiss": 2, "overhead": [2, 119, 120, 121, 124, 128, 133, 134, 135, 136, 148, 149, 156, 157, 173, 313], "content": [2, 3, 8, 16, 31, 32, 40, 41, 42, 43, 56, 57, 58, 64, 65, 69, 73, 74, 79, 106, 107, 108, 121, 124, 127, 128, 129, 135, 136, 143, 148, 149, 156, 157, 212, 248, 249, 269, 274, 275, 309, 341, 421, 434, 438], "map": [2, 3, 8, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 64, 65, 67, 68, 69, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 89, 91, 93, 98, 99, 100, 121, 124, 128, 135, 136, 139, 140, 141, 148, 149, 150, 151, 154, 155, 156, 157, 160, 161, 163, 167, 175, 179, 180, 182, 183, 184, 185, 186, 188, 189, 191, 192, 193, 194, 195, 197, 199, 200, 201, 202, 203, 204, 206, 208, 212, 213, 214, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 238, 239, 241, 258, 300, 301, 302, 303, 305, 309, 310, 312, 313, 315, 316, 317, 318, 326, 346, 356, 391, 412, 414, 415, 419, 420, 421, 422, 425, 426, 435], "writer": [2, 57, 62, 63, 64, 73, 74, 92, 95, 100, 102, 103, 107, 113, 114, 115, 118, 421, 436], "tensordictroundrobinwrit": [2, 74, 102], "goe": [2, 4, 79, 150, 151, 419, 421, 432, 433, 439], "prioritizedsampl": [2, 57, 62, 63, 64, 73, 74, 100, 102, 328, 333, 356, 419, 436], "access": [2, 3, 7, 8, 11, 27, 34, 39, 50, 57, 60, 61, 67, 72, 94, 121, 124, 128, 135, 136, 148, 149, 156, 157, 170, 182, 210, 231, 235, 241, 410, 413, 419, 424, 432, 433, 434, 436, 438], "tensordictreplaybuff": [2, 57, 62, 63, 64, 73, 99, 100, 102, 107, 108, 113, 181, 182, 393, 406, 412, 419, 420, 422, 436], "mp": [2, 18, 19, 20, 125, 239], "def": [2, 3, 22, 27, 34, 39, 50, 57, 60, 61, 62, 63, 64, 67, 72, 73, 74, 102, 121, 124, 125, 128, 135, 136, 142, 148, 149, 156, 157, 170, 172, 176, 178, 179, 181, 182, 183, 186, 187, 189, 190, 191, 193, 194, 195, 196, 198, 201, 202, 209, 211, 212, 213, 215, 218, 219, 222, 223, 224, 225, 226, 227, 230, 231, 232, 235, 236, 238, 239, 241, 242, 245, 258, 262, 263, 266, 267, 271, 276, 308, 309, 317, 324, 326, 327, 332, 339, 341, 344, 346, 348, 349, 376, 386, 415, 416, 419, 420, 423, 431, 432, 433, 434, 436, 438, 439], "td": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 31, 34, 36, 40, 41, 42, 45, 56, 57, 58, 60, 62, 63, 64, 65, 70, 72, 73, 74, 79, 93, 102, 113, 119, 120, 121, 122, 123, 124, 127, 128, 129, 133, 134, 135, 136, 137, 138, 146, 147, 148, 149, 152, 156, 157, 158, 159, 173, 176, 179, 181, 183, 187, 189, 190, 191, 192, 193, 201, 202, 203, 204, 206, 215, 218, 222, 225, 228, 232, 239, 245, 247, 257, 258, 261, 264, 268, 270, 271, 285, 286, 287, 295, 300, 301, 302, 303, 304, 305, 309, 310, 312, 315, 317, 356, 359, 360, 361, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 377, 387, 395, 414, 415, 419, 420, 422, 433, 434, 435, 438], "__name__": [2, 3, 14, 15, 22, 62, 125, 376, 420, 438], "__main__": [2, 3, 14, 15, 22, 62, 125, 376, 438], "21": [2, 45, 79, 107, 108, 148, 150, 151, 156], "proc": 2, "target": [2, 4, 8, 21, 24, 27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 125, 128, 135, 136, 148, 149, 156, 157, 224, 241, 284, 312, 313, 323, 324, 325, 326, 327, 328, 330, 332, 333, 336, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 356, 357, 358, 359, 360, 361, 362, 399, 405, 406, 415, 416, 422, 423, 429, 432, 434], "arg": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 26, 27, 28, 29, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 45, 47, 49, 50, 53, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 79, 80, 81, 82, 83, 84, 93, 94, 95, 96, 100, 102, 107, 108, 109, 111, 115, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 169, 175, 176, 177, 178, 179, 181, 182, 183, 186, 187, 190, 191, 194, 195, 196, 198, 200, 201, 202, 204, 209, 210, 211, 212, 213, 215, 218, 219, 221, 222, 223, 224, 225, 226, 227, 230, 231, 232, 234, 235, 236, 237, 238, 239, 241, 243, 245, 247, 248, 249, 256, 257, 261, 264, 268, 269, 270, 271, 285, 296, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 356, 358, 359, 360, 361, 362, 385, 389, 393, 396, 410, 420, 423], "join": [2, 125, 190, 412, 420, 421, 423, 432], "now": [2, 3, 7, 57, 64, 73, 74, 102, 146, 147, 148, 182, 219, 275, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 431, 432, 433, 435, 436, 439], "20": [2, 45, 72, 78, 79, 107, 108, 113, 121, 124, 128, 132, 135, 136, 146, 147, 148, 149, 156, 157, 224, 241, 260, 262, 263, 266, 267, 284, 304, 387, 422, 436, 439], "_data": [2, 434], "It": [2, 3, 4, 7, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 59, 60, 61, 66, 67, 68, 69, 72, 73, 75, 77, 78, 80, 81, 82, 83, 84, 94, 102, 105, 113, 118, 121, 124, 128, 130, 135, 136, 142, 143, 148, 149, 150, 151, 156, 157, 160, 161, 162, 173, 179, 181, 182, 194, 200, 202, 206, 211, 224, 230, 232, 238, 241, 243, 251, 253, 259, 261, 274, 275, 284, 285, 286, 288, 289, 295, 296, 306, 308, 311, 313, 323, 324, 325, 326, 331, 332, 333, 334, 335, 336, 339, 340, 341, 343, 344, 345, 346, 347, 349, 356, 357, 358, 376, 385, 391, 413, 414, 415, 419, 420, 422, 423, 424, 432, 433, 434, 435, 436, 438, 439], "difficult": [2, 4, 148, 428], "pai": [2, 8, 182, 419], "word": [2, 3, 11, 66, 341, 419, 427, 434, 439], "1m": [2, 399, 419, 421, 422], "doe": [2, 3, 18, 27, 34, 39, 40, 41, 42, 50, 56, 57, 58, 60, 61, 65, 67, 72, 73, 78, 79, 90, 91, 98, 99, 100, 107, 109, 111, 118, 121, 124, 128, 135, 136, 140, 141, 148, 149, 156, 157, 160, 161, 175, 176, 178, 179, 181, 182, 183, 186, 187, 191, 194, 195, 196, 198, 201, 202, 209, 211, 212, 213, 215, 218, 219, 222, 223, 224, 225, 226, 227, 230, 231, 235, 236, 238, 239, 241, 246, 255, 256, 262, 263, 264, 266, 267, 268, 277, 284, 296, 304, 314, 315, 323, 325, 333, 340, 341, 343, 357, 396, 415, 416, 419, 420, 421, 422, 424, 427, 432, 434, 436, 439], "howev": [2, 3, 5, 7, 27, 34, 39, 50, 60, 61, 67, 72, 107, 108, 121, 124, 128, 135, 136, 148, 149, 156, 157, 176, 178, 179, 181, 182, 183, 186, 187, 191, 194, 195, 196, 198, 200, 201, 202, 209, 211, 212, 213, 215, 218, 219, 222, 223, 224, 225, 226, 227, 230, 231, 232, 235, 236, 238, 239, 241, 323, 325, 326, 340, 343, 345, 346, 414, 419, 420, 422, 423, 426, 434, 436, 439], "capac": [2, 57, 64, 73, 74, 93, 95, 99, 107, 115, 421, 427], "There": [2, 3, 10, 102, 231, 246, 264, 268, 323, 343, 414, 415, 416, 421, 422, 423, 425, 427, 432, 433, 434, 436, 438, 439], "circumv": 2, "account": [2, 93, 95, 115, 121, 124, 127, 128, 129, 135, 136, 148, 149, 156, 157, 178, 187, 272, 273, 414, 420, 422, 436, 439], "save": [2, 3, 8, 27, 34, 39, 40, 41, 42, 50, 56, 57, 58, 60, 61, 62, 63, 64, 65, 67, 70, 72, 73, 74, 79, 90, 91, 93, 94, 95, 96, 98, 102, 109, 110, 111, 115, 116, 121, 124, 128, 135, 136, 148, 149, 156, 157, 238, 241, 377, 378, 380, 385, 396, 416, 423, 427, 428, 429, 432, 433], "convent": [2, 3, 121, 124, 128, 135, 136, 148, 149, 156, 157, 160, 161, 415, 419, 422, 432, 433, 434], "overridden": [2, 3, 27, 34, 39, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 276, 279, 280, 283, 285, 288, 289, 291, 296, 304, 306, 308, 311, 316, 319, 358, 360, 361, 422, 432], "dim_extend": [2, 57, 64, 73, 74], "obtain": [2, 3, 7, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 66, 68, 69, 77, 80, 81, 82, 83, 84, 121, 124, 128, 135, 136, 148, 149, 156, 157, 181, 210, 224, 237, 245, 247, 284, 286, 393, 419, 421, 424, 425, 426, 432, 433], "counterpart": [2, 3, 182], "desir": [2, 3, 11, 27, 30, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 171, 177, 179, 186, 187, 206, 208, 210, 211, 225, 231, 232, 235, 237, 241, 248, 249, 256, 269, 275, 300, 305, 306, 309, 310, 311, 312, 313, 414, 419, 423, 432, 433, 434, 436], "diversifi": 2, "offer": [2, 3, 7, 119, 120, 121, 124, 128, 133, 134, 135, 136, 140, 141, 148, 149, 156, 157, 230, 376, 414, 419, 420, 423, 424, 426, 427, 432, 434, 436, 439], "accomplish": [2, 121, 124, 128, 135, 136, 148, 149, 156, 157, 162, 424], "__especially__": 2, "offlin": [2, 8, 14, 15, 16, 17, 18, 19, 20, 21, 121, 124, 128, 135, 136, 148, 149, 156, 157, 162, 176, 178, 179, 181, 182, 183, 186, 187, 191, 194, 195, 196, 198, 201, 202, 209, 211, 212, 213, 215, 218, 219, 222, 223, 224, 225, 226, 227, 230, 231, 235, 236, 238, 239, 241, 324, 330, 331, 339, 348, 385, 416, 424, 435, 436], "docstr": [2, 27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241, 424, 425], "extens": [2, 57, 64, 73, 74, 108, 246, 416, 436], "detail": [2, 3, 5, 6, 7, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 60, 61, 67, 68, 69, 72, 77, 80, 81, 82, 83, 84, 121, 124, 128, 135, 136, 148, 149, 150, 151, 156, 157, 228, 232, 241, 246, 258, 262, 266, 276, 284, 306, 323, 333, 341, 343, 413, 416, 420, 423, 427, 431, 436], "happi": [2, 423], "concaten": [2, 8, 14, 15, 21, 45, 46, 48, 79, 135, 182, 183, 206, 222, 266, 269, 315, 419, 420, 425, 432, 433, 434, 436, 439], "schedul": [2, 4, 7, 66, 391, 421, 434], "transformedenv": [2, 3, 11, 12, 50, 121, 124, 125, 128, 135, 136, 148, 149, 156, 157, 175, 176, 179, 182, 185, 186, 187, 189, 193, 194, 195, 201, 202, 203, 205, 206, 208, 212, 213, 214, 215, 218, 219, 220, 223, 224, 225, 226, 230, 231, 239, 241, 264, 268, 308, 378, 386, 419, 420, 421, 422, 423, 424, 428, 429, 431, 432, 433, 434, 435, 436, 438, 439], "stepcount": [2, 45, 50, 121, 124, 128, 135, 136, 140, 141, 148, 149, 156, 157, 160, 161, 187, 230, 231, 232, 241, 247, 419, 420, 421, 422, 423, 424, 429, 432, 433, 438], "gymenv": [2, 3, 5, 11, 14, 15, 16, 17, 21, 22, 36, 45, 50, 62, 70, 72, 113, 121, 124, 125, 128, 130, 135, 136, 148, 149, 156, 157, 175, 178, 179, 182, 185, 186, 187, 194, 200, 201, 202, 206, 208, 213, 214, 215, 218, 220, 224, 225, 226, 227, 230, 231, 232, 233, 239, 241, 247, 264, 268, 308, 376, 378, 406, 412, 414, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 435, 436, 438, 439], "randompolici": [2, 14, 15, 16, 17, 18, 19, 20, 21, 22, 50, 182, 215, 412, 427, 436], "cartpol": [2, 3, 11, 36, 50, 70, 72, 121, 122, 123, 124, 125, 128, 135, 136, 148, 149, 156, 157, 178, 179, 182, 218, 224, 239, 241, 308, 376, 420, 422, 425, 427, 428, 429, 436, 439], "v1": [2, 3, 11, 14, 15, 16, 17, 21, 22, 36, 50, 62, 70, 72, 113, 121, 124, 125, 127, 128, 129, 133, 134, 135, 136, 143, 148, 149, 156, 157, 178, 179, 182, 185, 187, 195, 201, 202, 206, 213, 215, 218, 219, 220, 223, 224, 225, 226, 227, 230, 231, 233, 239, 241, 247, 264, 268, 308, 352, 367, 368, 369, 370, 372, 373, 374, 375, 376, 414, 420, 422, 424, 425, 426, 427, 428, 429, 434, 436, 438, 439], "action_spec": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 50, 119, 120, 121, 124, 128, 133, 134, 135, 136, 142, 148, 149, 150, 151, 152, 156, 157, 175, 176, 179, 182, 186, 189, 191, 193, 202, 206, 212, 215, 231, 232, 233, 234, 241, 245, 258, 271, 287, 289, 300, 305, 309, 310, 324, 326, 328, 330, 344, 346, 348, 349, 406, 414, 419, 420, 421, 422, 423, 425, 426, 427, 429, 431, 432, 433, 434, 435, 436, 438, 439], "8": [2, 3, 6, 7, 31, 32, 40, 41, 42, 43, 50, 56, 58, 64, 65, 69, 72, 79, 99, 100, 107, 108, 119, 120, 121, 122, 123, 124, 128, 135, 136, 146, 147, 148, 149, 156, 157, 158, 175, 178, 187, 224, 227, 233, 248, 249, 251, 252, 260, 269, 301, 302, 303, 309, 312, 315, 339, 419, 420, 434, 436, 438], "traj_kei": [2, 100, 107, 108, 436], "truncated_kei": [2, 100, 107, 108, 215, 223], "strict_length": [2, 100, 107, 108, 378], "i": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 27, 31, 32, 34, 36, 39, 43, 50, 57, 60, 61, 64, 67, 69, 70, 72, 74, 75, 79, 93, 95, 99, 100, 107, 108, 115, 121, 124, 128, 135, 136, 148, 149, 156, 157, 187, 188, 204, 210, 215, 218, 230, 232, 237, 241, 263, 264, 267, 268, 287, 299, 306, 308, 309, 311, 312, 313, 323, 325, 326, 327, 331, 332, 339, 340, 343, 344, 345, 346, 348, 349, 358, 359, 360, 361, 387, 399, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 432, 433, 434, 436, 438, 439], "enumer": [2, 14, 15, 16, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 39, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 60, 61, 64, 67, 68, 69, 70, 72, 74, 77, 80, 81, 82, 83, 84, 108, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241, 350, 415, 419, 420, 421, 422, 429, 432, 436, 438], "break": [2, 5, 14, 15, 16, 21, 27, 34, 39, 50, 60, 61, 62, 64, 67, 72, 74, 89, 100, 107, 108, 113, 121, 124, 128, 135, 136, 148, 149, 156, 157, 179, 182, 215, 239, 241, 264, 268, 293, 378, 420, 423, 427, 429, 436, 438], "step_count": [2, 14, 15, 16, 50, 121, 124, 128, 133, 134, 135, 136, 148, 149, 156, 157, 187, 223, 241, 421, 422, 423, 424, 429], "32": [2, 22, 31, 57, 62, 63, 64, 73, 74, 102, 108, 134, 154, 155, 160, 161, 182, 200, 248, 249, 250, 251, 252, 254, 255, 260, 269, 274, 275, 279, 280, 283, 286, 295, 356, 376, 420, 422, 423, 425, 426, 434, 435, 436, 438, 439], "33": [2, 27, 31, 34, 39, 50, 60, 61, 67, 72, 102, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241, 248, 249, 269], "34": [2, 248, 249, 269], "35": [2, 248, 249, 269], "36": 2, "37": [2, 181], "38": [2, 7, 45], "39": [2, 133, 134], "40": [2, 72, 133, 134], "41": [2, 107], "11": [2, 10, 23, 45, 54, 72, 78, 79, 93, 94, 95, 99, 108, 115, 125, 175, 228, 241, 245, 271], "12": [2, 7, 10, 45, 72, 93, 95, 108, 115, 133, 134, 148, 154, 155, 156, 241, 378, 436], "13": [2, 5, 72, 107, 108, 153, 238, 241, 242], "14": [2, 6, 72, 107, 108, 121, 124, 128, 135, 136, 148, 149, 156, 157, 206, 241, 242], "15": [2, 23, 108, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241, 285, 304, 334, 436], "16": [2, 3, 27, 34, 39, 50, 60, 61, 67, 72, 100, 108, 119, 120, 121, 124, 128, 133, 134, 135, 136, 148, 149, 156, 157, 182, 241, 422, 436], "17": [2, 11, 107, 108, 128, 148, 175, 241], "could": [2, 3, 4, 6, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 60, 61, 67, 68, 69, 72, 77, 80, 81, 82, 83, 84, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241, 313, 420, 421, 428, 432, 433, 435, 439], "sai": [2, 27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241, 274, 432, 435, 439], "interleav": 2, "cannot": [2, 3, 4, 7, 14, 15, 16, 17, 18, 19, 20, 21, 22, 31, 48, 54, 64, 73, 74, 95, 96, 100, 103, 107, 108, 115, 121, 124, 127, 128, 129, 132, 135, 136, 148, 149, 156, 157, 189, 193, 211, 218, 230, 274, 275, 310, 323, 326, 343, 420, 421, 422, 423, 432, 433, 434], "handl": [2, 3, 21, 27, 34, 39, 50, 52, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 238, 239, 241, 268, 269, 323, 341, 343, 396, 408, 409, 419, 420, 421, 422, 424, 426, 433, 436], "suggest": [2, 356, 419, 433], "serialenv": [2, 3, 121, 124, 128, 135, 136, 148, 149, 157, 225, 241, 247, 308, 412, 438, 439], "squeez": [2, 3, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 178, 179, 182, 221, 224, 248, 249, 290, 291, 419, 423, 434, 436], "6": [2, 3, 7, 14, 15, 16, 17, 23, 45, 50, 64, 67, 72, 79, 100, 108, 122, 123, 128, 148, 154, 155, 175, 178, 187, 206, 208, 224, 230, 247, 248, 249, 251, 252, 253, 256, 260, 263, 269, 274, 275, 276, 279, 292, 308, 309, 317, 420, 423, 438], "5": [2, 3, 14, 15, 23, 30, 31, 32, 43, 45, 46, 47, 48, 49, 50, 54, 57, 62, 64, 67, 69, 72, 73, 74, 102, 107, 108, 113, 121, 124, 125, 128, 133, 134, 135, 136, 140, 141, 143, 148, 149, 154, 155, 156, 157, 160, 161, 175, 178, 179, 181, 187, 203, 215, 222, 223, 224, 230, 241, 244, 245, 246, 247, 248, 249, 251, 252, 257, 258, 259, 260, 262, 265, 266, 269, 271, 274, 275, 279, 284, 287, 293, 294, 304, 305, 308, 310, 316, 340, 343, 345, 348, 349, 376, 414, 418, 419, 420, 423, 425, 429, 432, 433, 434, 436, 437, 438, 439], "7": [2, 3, 6, 10, 34, 45, 50, 54, 57, 64, 72, 73, 100, 108, 121, 124, 128, 135, 136, 140, 141, 148, 149, 156, 157, 175, 178, 187, 224, 227, 245, 247, 248, 249, 252, 269, 271, 274, 364, 419, 436, 438], "9": [2, 3, 7, 23, 27, 45, 50, 57, 64, 72, 73, 79, 100, 108, 113, 122, 123, 139, 150, 151, 157, 175, 178, 187, 224, 227, 232, 239, 241, 273, 323, 324, 326, 327, 328, 330, 332, 333, 334, 339, 341, 343, 344, 345, 346, 348, 349, 350, 356, 386, 415, 419, 420, 432, 433], "18": [2, 45, 107, 108, 154, 155, 160, 161, 230, 241, 275], "19": [2, 107, 108, 113, 241, 418, 437], "independ": [2, 14, 15, 16, 17, 18, 19, 20, 21, 148, 156, 197, 204, 225, 234, 246, 275, 299, 323, 343, 415, 416, 419, 420, 433, 436, 438], "congruent": 2, "name": [2, 3, 6, 7, 16, 27, 31, 32, 34, 39, 40, 41, 42, 43, 50, 56, 58, 60, 61, 65, 67, 69, 72, 78, 79, 89, 119, 121, 122, 124, 128, 133, 135, 136, 139, 140, 141, 143, 146, 148, 149, 150, 151, 153, 156, 157, 160, 161, 163, 170, 174, 175, 176, 178, 179, 181, 182, 183, 186, 187, 191, 192, 194, 195, 196, 198, 200, 201, 202, 209, 211, 212, 213, 215, 218, 219, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 235, 236, 238, 239, 241, 242, 264, 268, 305, 310, 323, 324, 325, 326, 331, 332, 333, 334, 335, 336, 339, 340, 341, 343, 344, 345, 346, 349, 356, 358, 360, 361, 362, 376, 380, 382, 383, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 416, 419, 420, 421, 422, 423, 426, 427, 428, 432, 433, 434, 435, 439], "randomcroptensordict": [2, 419], "unlik": [2, 25, 64, 73, 74, 106, 128, 140, 141, 160, 161, 244, 246, 308, 333, 343, 378, 414, 420, 423, 425, 427, 438], "stop": [2, 3, 16, 21, 66, 100, 107, 108, 121, 124, 128, 135, 136, 148, 149, 156, 157, 421, 427, 432, 433, 438, 439], "signal": [2, 3, 14, 15, 16, 17, 23, 45, 100, 107, 108, 113, 121, 124, 128, 135, 136, 140, 141, 148, 149, 156, 157, 160, 161, 174, 182, 187, 194, 203, 223, 226, 415, 419, 421, 432, 433, 436, 439], "disk": [2, 3, 40, 41, 42, 45, 56, 57, 58, 62, 63, 64, 65, 73, 74, 79, 93, 102, 396, 416, 419, 420, 422, 423, 427, 428, 432, 436], "dump": [2, 3, 11, 36, 40, 41, 42, 56, 57, 58, 62, 63, 64, 65, 70, 73, 74, 79, 91, 93, 94, 95, 96, 102, 109, 111, 115, 376, 377, 378, 428, 429, 432], "load": [2, 6, 7, 14, 15, 16, 17, 27, 34, 36, 39, 40, 41, 42, 50, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 70, 72, 73, 74, 78, 79, 91, 93, 94, 95, 96, 102, 109, 110, 111, 115, 116, 121, 123, 124, 128, 135, 136, 148, 149, 156, 157, 158, 172, 190, 239, 241, 396, 410, 416, 419, 421, 423, 436], "json": 2, "metadata": [2, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 121, 124, 125, 128, 135, 136, 148, 149, 156, 157, 326, 348, 421, 424, 426, 427, 432, 433, 439], "anticip": [2, 189, 193], "compli": [2, 246, 414], "back": [2, 24, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 57, 68, 69, 77, 80, 81, 82, 83, 84, 121, 124, 128, 135, 136, 148, 149, 156, 157, 162, 229, 238, 276, 300, 305, 306, 309, 310, 311, 312, 313, 421, 423, 432, 433, 434, 436], "exact": [2, 3, 23, 148, 266], "statu": [2, 3, 124], "prioriti": [2, 4, 57, 73, 74, 93, 94, 95, 96, 99, 100, 109, 111, 115, 326, 327, 328, 330, 331, 332, 333, 339, 344, 346, 348, 349, 356, 416, 419, 420, 436], "heap": 2, "under": [2, 3, 4, 21, 27, 34, 39, 45, 50, 60, 61, 66, 67, 72, 121, 122, 123, 124, 127, 128, 129, 130, 135, 136, 148, 149, 153, 156, 157, 176, 178, 179, 181, 182, 183, 186, 187, 191, 194, 195, 196, 198, 201, 202, 203, 209, 211, 212, 213, 215, 218, 219, 222, 223, 224, 225, 226, 227, 230, 231, 235, 236, 238, 239, 241, 246, 300, 305, 306, 309, 310, 311, 312, 313, 341, 358, 359, 360, 361, 362, 378, 415, 419, 420, 425, 432, 434, 439], "hood": [2, 3, 21, 121, 124, 128, 135, 136, 148, 149, 156, 157, 246, 434], "naiv": [2, 235, 424], "just": [2, 3, 4, 79, 111, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 133, 134, 135, 136, 139, 143, 144, 146, 147, 148, 149, 150, 151, 153, 156, 157, 158, 159, 174, 178, 185, 225, 242, 275, 387, 416, 419, 420, 421, 422, 423, 424, 425, 427, 432, 433, 434, 436, 438, 439], "public": [2, 63, 110, 210, 237], "serializ": 2, "consum": [2, 106, 108, 308, 420, 421, 427, 433, 436], "much": [2, 3, 8, 14, 15, 17, 57, 73, 99, 100, 148, 156, 340, 343, 421, 423, 424, 428, 432, 433, 434, 436, 439], "duplic": [2, 27, 34, 39, 50, 60, 61, 67, 72, 106, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241, 324, 326, 328, 333, 339, 341, 344, 346, 348, 349, 356], "observ": [2, 3, 8, 14, 15, 16, 17, 21, 24, 36, 45, 50, 62, 70, 72, 79, 90, 91, 98, 100, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 160, 161, 168, 173, 175, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 194, 195, 197, 199, 200, 201, 202, 204, 206, 207, 208, 212, 213, 214, 215, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 238, 239, 241, 247, 250, 251, 252, 253, 254, 255, 258, 261, 264, 268, 274, 279, 280, 283, 284, 285, 287, 288, 300, 301, 302, 303, 304, 305, 308, 309, 310, 317, 318, 323, 324, 325, 326, 327, 328, 330, 331, 332, 335, 339, 340, 343, 344, 345, 346, 348, 349, 356, 358, 359, 360, 361, 362, 376, 378, 406, 414, 415, 416, 420, 421, 422, 423, 424, 425, 426, 428, 429, 431, 432, 433, 434, 436, 438, 439], "plu": [2, 14, 15, 17, 66, 148, 156, 434], "enabl": [2, 7, 8, 93, 95, 106, 115, 179, 264, 268, 285, 308, 376, 378, 391, 421, 424, 432, 433, 434, 436], "three": [2, 25, 26, 30, 35, 46, 47, 48, 49, 54, 55, 60, 89, 326, 414, 416, 421, 423, 424, 425, 432, 433, 434, 436, 439], "flatstoragecheckpoint": 2, "discard": [2, 3, 78, 128, 173, 235, 377, 436, 439], "compress": 2, "At": [2, 227, 261, 270, 420, 421, 422, 427, 431, 434, 435], "correct": [2, 4, 40, 41, 42, 56, 58, 65, 79, 121, 124, 128, 135, 136, 148, 149, 156, 157, 182, 202, 399, 421, 422], "addit": [2, 3, 4, 27, 34, 39, 50, 52, 60, 61, 67, 72, 79, 121, 124, 125, 128, 135, 136, 148, 149, 156, 157, 160, 182, 186, 210, 225, 229, 231, 232, 235, 237, 241, 243, 262, 304, 308, 312, 322, 341, 358, 376, 378, 415, 419, 420, 423, 424, 432, 433, 436], "nestedstoragecheckpoint": 2, "represent": [2, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 60, 61, 67, 68, 69, 72, 77, 79, 80, 81, 82, 83, 84, 94, 121, 124, 128, 135, 136, 148, 149, 156, 157, 210, 235, 237, 241, 323, 343, 419, 434, 435, 439], "appar": [2, 3, 389], "h5storagecheckpoint": 2, "h5db": 2, "space": [2, 9, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 90, 91, 98, 121, 124, 127, 128, 129, 135, 136, 148, 149, 156, 157, 167, 170, 175, 185, 192, 200, 203, 225, 233, 243, 249, 255, 258, 274, 280, 285, 287, 300, 305, 306, 309, 310, 311, 312, 313, 315, 316, 317, 320, 323, 328, 330, 331, 332, 343, 348, 349, 356, 414, 415, 420, 421, 422, 423, 424, 425, 426, 432, 433, 434, 439], "assumpt": [2, 3, 77, 434, 436], "accur": [2, 7, 420, 434, 436], "truncat": [2, 3, 14, 15, 16, 17, 36, 38, 45, 50, 51, 59, 70, 72, 75, 78, 90, 91, 98, 100, 107, 108, 121, 122, 123, 124, 127, 128, 129, 135, 136, 140, 141, 148, 149, 150, 151, 156, 157, 158, 160, 161, 174, 175, 190, 194, 195, 200, 205, 212, 215, 219, 223, 225, 232, 233, 241, 264, 268, 294, 308, 364, 419, 421, 424, 432, 439], "marl": [2, 139, 163, 182, 222, 226, 274, 275, 276, 332, 346, 415, 424, 432, 433], "extra": [2, 10, 27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 173, 182, 239, 241, 385, 414, 421, 422, 436], "fail": [2, 7, 22, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 121, 124, 128, 135, 136, 148, 149, 156, 157, 162, 176], "concret": [2, 419, 421], "set_se": [2, 3, 14, 15, 16, 17, 21, 36, 45, 50, 70, 72, 119, 120, 121, 124, 128, 133, 134, 135, 136, 142, 148, 149, 156, 157, 178, 187, 206, 213, 218, 224, 226, 232, 241, 423, 427, 429, 434, 438, 439], "manual_se": [2, 3, 25, 36, 46, 47, 57, 64, 70, 72, 73, 74, 94, 107, 108, 119, 120, 121, 124, 128, 135, 136, 148, 149, 156, 157, 176, 178, 187, 192, 206, 215, 218, 224, 226, 241, 261, 272, 273, 281, 284, 285, 300, 306, 313, 316, 323, 324, 326, 327, 331, 339, 346, 423, 427, 429, 432, 433, 434, 438, 439], "200": [2, 14, 15, 16, 21, 27, 34, 36, 39, 50, 60, 61, 62, 67, 70, 72, 121, 124, 127, 128, 129, 135, 136, 148, 149, 156, 157, 160, 161, 215, 241, 251, 252, 259, 288, 289, 376, 378, 419, 422, 423, 427, 429, 436], "22": [2, 107, 108, 238], "rb_test": 2, "_storag": [2, 435, 436], "max_siz": [2, 45, 57, 64, 72, 73, 74, 93, 94, 95, 96, 107, 108, 109, 113, 115, 421, 427], "102": 2, "path_to_save_dir": 2, "assert_allclose_td": 2, "altern": [2, 4, 30, 40, 41, 42, 56, 58, 65, 79, 143, 230, 255, 272, 273, 274, 322, 326, 376, 419, 421, 423, 432, 433], "state_dict": [2, 14, 15, 16, 17, 21, 27, 34, 39, 40, 41, 42, 50, 56, 58, 60, 61, 65, 67, 72, 79, 121, 124, 128, 135, 136, 148, 149, 156, 157, 200, 230, 232, 239, 241, 274, 275, 326, 346, 410, 416, 419, 420, 439], "load_state_dict": [2, 14, 15, 16, 17, 21, 27, 34, 39, 40, 41, 42, 50, 56, 58, 60, 61, 65, 67, 72, 79, 121, 124, 128, 135, 136, 148, 149, 156, 157, 230, 232, 239, 241, 326, 346, 416, 419], "drawback": 2, "struggl": 2, "big": [2, 421, 427, 436, 439], "sequenti": [2, 9, 27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 181, 202, 241, 299, 301, 302, 303, 309, 314, 315, 320, 323, 324, 326, 332, 339, 343, 344, 345, 346, 348, 414, 421, 422, 425, 433, 434, 435, 438, 439], "known": [2, 3, 5, 7, 8, 72, 128, 225, 365, 366, 419, 420, 424], "seamless": [2, 269], "integr": [2, 27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 186, 210, 225, 231, 232, 235, 237, 241, 254, 264, 268, 271, 312, 414, 424, 425, 427, 432, 433, 434, 435], "indiffer": 2, "particularli": [2, 423, 438, 439], "heavili": [2, 11], "smooth": [2, 244, 419, 420, 426], "essenti": [2, 3, 323, 324, 325, 331, 332, 333, 334, 335, 336, 339, 340, 341, 343, 344, 345, 346, 349, 356, 420, 424, 432, 434, 436], "understand": [2, 8, 34, 419, 420, 423, 424, 425, 432, 433], "purpos": [2, 3, 7, 11, 121, 124, 128, 135, 136, 148, 149, 156, 157, 182, 262, 323, 325, 337, 340, 343, 345, 406, 419, 421, 422, 423, 426, 428, 432, 433, 435, 439], "guid": [2, 11, 150, 151, 154, 155, 224, 413, 419, 433, 438], "explan": [2, 27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241, 246], "effect": [2, 3, 27, 31, 34, 39, 50, 57, 60, 61, 64, 67, 72, 73, 74, 100, 102, 105, 107, 108, 121, 124, 128, 135, 136, 148, 149, 156, 157, 178, 182, 187, 232, 241, 246, 396, 414, 419, 425, 432, 436, 439], "realm": [2, 425], "As": [2, 3, 4, 50, 64, 73, 74, 77, 102, 121, 124, 128, 135, 136, 139, 148, 149, 150, 151, 156, 157, 215, 256, 313, 358, 414, 419, 420, 421, 422, 423, 424, 426, 427, 432, 433, 434, 435, 436, 438, 439], "practition": 2, "often": [2, 3, 8, 276, 338, 341, 396, 419, 420, 424, 426, 434, 436, 439], "encount": [2, 4, 204, 308, 413, 420, 425, 434], "situat": [2, 135, 140, 141, 190], "sometim": [2, 3, 77, 422, 439], "variabl": [2, 3, 4, 7, 8, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 61, 67, 68, 69, 77, 80, 81, 82, 83, 84, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 133, 134, 135, 136, 140, 141, 144, 145, 146, 147, 148, 149, 153, 156, 157, 158, 159, 160, 161, 190, 227, 231, 262, 263, 264, 266, 267, 268, 271, 301, 302, 303, 341, 344, 386, 416, 420], "immedi": [2, 27, 31, 32, 34, 39, 43, 50, 60, 61, 67, 69, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241, 357, 432, 433], "199": 2, "info": [2, 3, 14, 15, 57, 62, 63, 64, 73, 74, 79, 99, 100, 102, 105, 107, 108, 121, 122, 123, 124, 127, 128, 129, 130, 135, 136, 140, 141, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 200, 233, 235, 238, 240, 385, 424, 429, 432, 433, 436, 438], "glanc": [2, 424], "seem": [2, 419, 422, 424], "togeth": [2, 3, 11, 14, 15, 16, 17, 18, 19, 20, 21, 45, 60, 66, 68, 69, 94, 121, 124, 128, 135, 136, 139, 148, 149, 150, 151, 156, 157, 182, 211, 222, 231, 262, 264, 266, 268, 295, 301, 302, 303, 318, 414, 420, 422, 424, 432], "less": [2, 143, 296, 408, 409, 415, 421, 422, 436, 438], "omit": [2, 136, 243, 261, 285, 392, 421, 426, 434, 436], "proper": [2, 3, 4, 6, 7, 358, 359, 360, 361, 420, 421, 432, 433, 434, 436], "imposs": [2, 3, 64, 73, 74, 113, 121, 124, 128, 135, 136, 148, 149, 156, 157, 162, 323, 325, 340, 343, 345], "determin": [2, 45, 57, 73, 79, 99, 100, 121, 124, 128, 135, 136, 148, 149, 156, 157, 160, 161, 162, 190, 210, 237, 274, 285, 326, 420, 425, 432, 433], "complic": [2, 34, 60, 72, 434, 436, 439], "matter": [2, 33, 427], "inconsist": [2, 439], "miss": [2, 3, 4, 6, 7, 27, 31, 34, 39, 45, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 173, 200, 230, 232, 241, 242, 314, 315, 323, 326, 346, 413, 419, 422], "primari": [2, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 136, 427], "elimin": [2, 3, 424], "upon": [2, 3, 8, 432, 434], "canon": 2, "definit": [2, 54, 109, 274], "markov": [2, 3, 424, 439], "mdp": [2, 173, 424, 434], "context": [2, 3, 5, 8, 27, 34, 39, 50, 60, 61, 67, 72, 108, 121, 124, 125, 128, 135, 136, 145, 148, 149, 156, 157, 225, 234, 241, 246, 264, 268, 275, 277, 299, 304, 354, 355, 358, 359, 360, 361, 363, 371, 378, 386, 391, 414, 415, 419, 420, 421, 422, 423, 432, 433, 434, 435, 436, 438], "condit": [2, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 78, 80, 81, 82, 83, 84, 135, 187, 224, 239, 305, 306, 308, 310, 311, 322, 415, 419, 432, 434, 436], "complet": [2, 7, 9, 106, 121, 124, 127, 128, 129, 135, 136, 148, 149, 156, 157, 182, 223, 413, 415, 419, 421, 424, 431], "termin": [2, 3, 7, 14, 15, 16, 17, 36, 38, 45, 50, 51, 66, 70, 72, 90, 91, 98, 107, 121, 122, 123, 124, 127, 128, 129, 133, 134, 135, 136, 140, 141, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 160, 161, 174, 175, 178, 179, 190, 194, 200, 212, 225, 233, 241, 245, 264, 268, 271, 308, 314, 323, 324, 326, 327, 328, 330, 331, 332, 339, 343, 344, 345, 346, 348, 349, 356, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 419, 420, 421, 432, 433, 434, 438, 439], "reward": [2, 3, 14, 15, 16, 33, 34, 36, 38, 45, 50, 51, 56, 65, 66, 70, 72, 78, 79, 89, 99, 100, 113, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 133, 134, 135, 136, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 153, 154, 155, 156, 157, 158, 160, 161, 167, 173, 175, 176, 179, 180, 185, 186, 189, 191, 193, 194, 195, 200, 202, 203, 204, 208, 212, 213, 215, 216, 217, 218, 219, 220, 222, 223, 224, 231, 232, 233, 234, 236, 237, 239, 241, 245, 264, 271, 304, 308, 318, 323, 324, 326, 327, 328, 330, 331, 332, 335, 339, 341, 343, 344, 345, 346, 348, 349, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 389, 390, 391, 394, 410, 415, 416, 419, 420, 421, 422, 423, 424, 428, 432, 433, 434, 438, 439], "imit": [2, 3, 337], "inform": [2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 60, 61, 65, 67, 68, 69, 72, 75, 77, 79, 80, 81, 82, 83, 84, 121, 124, 125, 128, 131, 134, 135, 136, 148, 149, 156, 157, 241, 247, 248, 249, 269, 275, 414, 415, 416, 419, 420, 421, 422, 423, 424, 432, 433, 434, 436, 438], "stateless": [2, 3, 45, 121, 124, 128, 135, 136, 148, 149, 156, 157, 179, 187, 341, 376, 419, 424, 434, 439], "simul": [2, 3, 5, 7, 8, 77, 119, 120, 121, 130, 133, 134, 153, 160, 161, 169, 245, 271, 414, 419, 421, 423, 424, 428, 432, 433], "furthermor": [2, 432, 433], "certain": [2, 4, 18, 19, 20, 21, 27, 34, 39, 50, 60, 61, 67, 72, 78, 121, 124, 128, 135, 136, 148, 149, 156, 157, 172, 187, 198, 223, 232, 241, 261, 263, 267, 340, 419, 420, 421, 423, 429, 432, 433, 439], "composit": [2, 3, 25, 26, 28, 29, 30, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 79, 80, 81, 82, 83, 84, 86, 105, 111, 118, 121, 124, 126, 128, 135, 136, 142, 148, 149, 156, 157, 167, 174, 176, 179, 189, 190, 191, 192, 193, 195, 200, 202, 204, 212, 213, 219, 223, 225, 229, 230, 231, 233, 241, 243, 245, 271, 300, 309, 313, 315, 316, 320, 323, 343, 412, 419, 421, 425, 434], "accommod": [2, 3, 424, 425], "uniform": [2, 57, 73, 99, 100, 432], "unambigu": 2, "distinguish": [2, 3, 64, 73, 74, 140, 141, 160, 161], "happen": [2, 3, 121, 124, 128, 135, 136, 148, 149, 156, 157, 242, 285, 420, 423, 426, 427, 428, 435, 439], "everyth": [2, 420, 421, 422, 428, 429], "belong": [2, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 238, 239, 313, 419, 427, 433], "rule": [2, 72, 148, 189, 193, 313, 414, 421], "field": [2, 3, 14, 15, 16, 17, 23, 27, 31, 34, 36, 39, 40, 41, 42, 45, 50, 56, 58, 59, 60, 61, 65, 66, 67, 70, 72, 73, 74, 75, 77, 78, 79, 93, 94, 95, 99, 107, 115, 119, 120, 121, 122, 123, 124, 127, 128, 129, 133, 134, 135, 136, 139, 140, 141, 142, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 160, 161, 173, 175, 179, 189, 190, 193, 194, 195, 200, 208, 212, 213, 215, 219, 222, 223, 225, 230, 232, 233, 241, 245, 247, 257, 258, 264, 268, 271, 285, 286, 287, 295, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 315, 317, 323, 324, 326, 327, 328, 330, 331, 332, 339, 343, 344, 345, 346, 348, 349, 356, 400, 413, 414, 420, 434], "taken": [2, 3, 25, 26, 30, 35, 46, 47, 48, 49, 54, 55, 121, 124, 128, 135, 136, 148, 149, 156, 157, 175, 214, 272, 273, 415, 419, 421, 422, 425, 432, 433, 434], "is_shar": [2, 3, 14, 15, 16, 23, 31, 34, 36, 40, 41, 42, 45, 56, 58, 59, 60, 65, 66, 70, 72, 73, 74, 75, 78, 79, 89, 93, 94, 95, 99, 107, 115, 119, 120, 121, 122, 123, 124, 127, 128, 129, 133, 134, 135, 136, 139, 140, 141, 142, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 160, 161, 173, 175, 179, 189, 190, 193, 194, 195, 200, 208, 212, 213, 215, 219, 222, 223, 225, 233, 239, 245, 247, 257, 258, 264, 268, 271, 285, 286, 287, 295, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 315, 317, 323, 324, 326, 327, 328, 330, 331, 332, 339, 343, 344, 345, 346, 348, 349, 356, 414, 434], "envbas": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 45, 79, 121, 125, 128, 135, 136, 148, 149, 156, 157, 162, 173, 176, 179, 189, 193, 205, 212, 213, 231, 232, 239, 241, 245, 264, 268, 270, 271, 308, 391, 400, 401, 402, 406, 408, 409, 410, 412, 424], "brought": [2, 421, 422, 425], "step_mdp": [2, 3, 121, 124, 128, 135, 136, 148, 149, 156, 157, 264, 268, 412, 422, 424, 434, 438, 439], "count": [2, 3, 45, 50, 79, 124, 125, 223, 230, 285, 391, 396, 399, 419, 420, 421, 422, 436, 439], "trigger": [2, 7, 34, 60, 72, 135], "turn": [2, 18, 19, 20, 21, 31, 32, 40, 41, 42, 43, 56, 58, 61, 65, 67, 69, 79, 121, 134, 148, 157, 199, 231, 234, 238, 305, 376, 391, 415, 419, 420, 422, 425, 434, 435], "retain": [2, 121, 124, 128, 135, 136, 148, 149, 156, 157], "regard": [2, 258, 306, 323, 333, 343, 419, 421, 434], "expand": [2, 8, 25, 26, 28, 29, 30, 31, 32, 35, 40, 41, 42, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 56, 58, 65, 68, 69, 77, 79, 80, 81, 82, 83, 84, 93, 107, 108, 179, 225, 256, 312, 315, 324, 326, 339, 341, 344, 346, 348, 349, 432, 433, 434, 436, 438], "recur": [2, 323, 324, 326, 327, 328, 330, 331, 332, 339, 343, 344, 345, 346, 348, 349, 358, 359, 360, 361, 362, 425], "anyth": [2, 4, 14, 15, 16, 17, 18, 19, 20, 21, 415], "els": [2, 119, 120, 179, 190, 262, 263, 266, 267, 279, 414, 416, 419, 420, 421, 422, 432, 433, 434, 435], "repetit": [2, 421, 424, 427], "embed": [2, 210, 235, 236, 237, 251, 286, 300, 301, 302, 303, 312, 313, 317, 435], "strictli": [2, 3, 8, 27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 203, 230, 232, 241, 326, 346, 419, 421], "enforc": [2, 27, 31, 34, 39, 50, 60, 61, 67, 72, 106, 121, 124, 128, 135, 136, 148, 149, 156, 157, 200, 230, 232, 241, 314, 326, 346, 434], "n_action": [2, 308, 324, 326, 328, 330, 342, 346], "rightmost": [2, 415], "n_ob": [2, 121, 124, 128, 135, 136, 148, 149, 156, 157, 202, 308, 323, 324, 326, 327, 328, 330, 331, 332, 339, 343, 344, 345, 346, 348, 349, 426], "estim": [2, 4, 100, 107, 108, 135, 190, 194, 202, 251, 293, 301, 302, 303, 323, 324, 325, 326, 327, 328, 330, 332, 333, 334, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 356, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 415, 420, 421, 425, 426, 432, 433], "subsequ": [2, 27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 178, 241, 422, 432], "proce": [2, 432], "state_valu": [2, 302, 303, 317, 325, 331, 339, 340, 343, 344, 346, 358, 359, 360, 361, 363, 365, 367, 369, 371, 372, 374, 414, 419, 433], "f": [2, 119, 120, 128, 133, 134, 227, 242, 267, 322, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 419, 420, 421, 422, 429, 432, 433, 434, 436, 439], "next_state_valu": [2, 348, 349, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 412], "broadcast": [2, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 256, 332, 346], "left": [2, 52, 100, 107, 135, 179, 186, 188, 189, 191, 195, 202, 204, 210, 212, 213, 219, 223, 226, 229, 231, 233, 235, 237, 241, 261, 274, 420, 421, 423, 427, 428], "would": [2, 3, 27, 34, 39, 50, 60, 61, 66, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241, 262, 264, 266, 268, 269, 274, 313, 415, 416, 420, 421, 422, 424, 426, 427, 434, 436, 438, 439], "best": [2, 5, 9, 132, 264, 268, 432, 433, 436, 438], "bug": [2, 4], "worst": [2, 420], "twice": [2, 8, 108], "feasibl": 2, "mostli": [2, 3, 17, 284, 378, 415, 428, 436, 439], "eas": [2, 3, 432, 433], "flat": [2, 113], "manner": [2, 128, 210, 235, 414, 419, 420, 421, 427, 431, 434, 436], "ted2flat": [2, 36, 412], "flat2t": [2, 412], "unflatten": [2, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 179, 308], "deseri": [2, 3, 36], "posit": [2, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 60, 61, 62, 63, 64, 67, 68, 69, 72, 73, 74, 77, 80, 81, 82, 83, 84, 102, 121, 122, 123, 124, 128, 135, 136, 148, 149, 156, 157, 197, 198, 200, 221, 222, 223, 226, 230, 232, 234, 241, 326, 346, 415, 421, 432, 433, 434, 436], "both": [2, 3, 7, 27, 34, 39, 50, 57, 60, 61, 64, 67, 72, 73, 74, 121, 124, 125, 127, 128, 135, 136, 140, 141, 148, 149, 150, 151, 156, 157, 158, 162, 174, 175, 182, 200, 213, 229, 230, 232, 241, 248, 249, 264, 267, 268, 269, 274, 275, 301, 302, 303, 306, 311, 323, 325, 326, 327, 331, 332, 339, 340, 341, 343, 344, 345, 346, 348, 349, 391, 414, 419, 421, 423, 424, 426, 432, 433, 434, 435, 436, 439], "mark": [2, 3, 16, 121, 124, 128, 135, 136, 148, 149, 156, 157, 227, 264, 268, 358, 360, 361, 427, 436], "identifi": [2, 59, 121, 124, 128, 135, 136, 148, 149, 156, 157], "abov": [2, 3, 7, 27, 34, 39, 50, 60, 61, 67, 72, 80, 121, 124, 128, 135, 136, 148, 149, 156, 157, 231, 241, 265, 293, 294, 322, 415, 416, 419, 421, 423, 424, 425, 432, 433, 434, 439], "output": [2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 27, 34, 39, 45, 50, 57, 60, 61, 64, 67, 72, 73, 74, 77, 79, 100, 107, 108, 121, 122, 123, 124, 127, 128, 129, 130, 134, 135, 136, 140, 141, 142, 145, 146, 147, 148, 149, 150, 151, 153, 156, 157, 158, 159, 160, 161, 162, 174, 179, 180, 182, 185, 186, 187, 188, 189, 190, 191, 193, 195, 197, 200, 202, 204, 206, 210, 212, 213, 218, 219, 222, 223, 226, 227, 229, 231, 232, 233, 235, 237, 238, 241, 243, 248, 249, 250, 251, 252, 255, 257, 258, 259, 262, 263, 264, 266, 267, 268, 269, 274, 275, 282, 284, 285, 287, 296, 300, 301, 304, 305, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 320, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 356, 358, 359, 360, 361, 362, 376, 378, 387, 414, 415, 419, 420, 421, 422, 423, 424, 425, 428, 431, 432, 433, 434, 435, 438, 439], "typic": [2, 3, 4, 8, 27, 34, 39, 50, 60, 61, 67, 72, 79, 121, 124, 128, 135, 136, 148, 149, 156, 157, 194, 224, 241, 282, 284, 309, 324, 326, 341, 343, 346, 414, 415, 416, 421, 423, 424, 426, 427, 432, 433, 434], "adjust": [2, 11, 225, 419, 432, 433, 434], "grumodul": [2, 181, 225, 299, 320, 422], "lstmmodul": [2, 264, 299, 422, 423], "skip": [2, 3, 27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 162, 187, 198, 200, 204, 230, 232, 241, 309, 313, 326, 341, 346, 358, 359, 360, 361, 377, 378, 389, 391, 419, 420, 434], "accumul": [2, 8, 241], "upcom": [2, 341, 367, 368, 369, 370, 372, 373, 374, 375, 419], "popular": [2, 3, 414, 422, 426, 433], "rainbow": 2, "multistep": [2, 14, 15, 16, 17, 18, 19, 20, 21, 241, 412, 420], "shift": [2, 36, 38, 50, 51, 70, 90, 91, 98, 319, 358, 359, 360, 361, 421], "approxim": [2, 433, 439], "intens": [2, 3, 8], "ataridqnexperiencereplai": 2, "onlin": [2, 8, 14, 17, 182, 255, 283, 323, 329, 342, 343, 387, 410, 421, 422, 433, 436], "2x": 2, "small": [2, 108, 235, 244, 419, 421, 423, 432, 433, 439], "clearer": [2, 423, 425], "lazi": [2, 68, 69, 86, 87, 121, 124, 128, 135, 136, 148, 149, 156, 157, 160, 161, 210, 235, 248, 274, 277, 314, 315, 419, 420, 425, 427, 431, 436, 439], "certainli": 2, "benefici": 2, "welcom": [2, 424], "wrapper": [2, 3, 17, 40, 41, 42, 56, 58, 65, 66, 73, 74, 79, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 166, 238, 242, 246, 247, 296, 304, 308, 313, 318, 358, 383, 384, 385, 410, 412, 421, 422, 424, 432, 433, 435, 438, 439], "around": [2, 5, 7, 17, 73, 74, 121, 124, 128, 135, 136, 142, 148, 149, 152, 156, 157, 246, 284, 308, 313, 358, 419, 420, 433, 439], "selecttransform": [2, 121, 124, 128, 135, 136, 148, 149, 156, 157], "excludetransform": [2, 219, 436], "promptli": 2, "virtual": [2, 3, 127], "instal": [2, 3, 5, 10, 18, 19, 20, 61, 72, 121, 124, 128, 135, 136, 148, 149, 150, 151, 154, 155, 156, 157, 380, 396, 413, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 432, 433, 439], "respons": [2, 3, 8, 100, 107, 121, 124, 128, 135, 136, 148, 149, 156, 157, 396, 426, 427, 439], "d4rl": 2, "repositori": [2, 7, 160, 161, 432, 433], "wheel": [2, 421], "publish": 2, "openml": [2, 145], "scikit": [2, 145], "panda": 2, "raw": [2, 3, 4, 66, 200, 229, 233, 265, 293, 294, 420, 423, 427, 434], "go": [2, 3, 7, 94, 139, 148, 187, 211, 215, 304, 364, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 438, 439], "natur": [2, 3, 419, 425, 426, 427, 436], "modifi": [2, 3, 7, 8, 27, 34, 39, 50, 60, 61, 67, 72, 78, 121, 124, 128, 135, 136, 148, 149, 156, 157, 179, 182, 186, 187, 197, 200, 202, 210, 225, 231, 232, 235, 237, 241, 276, 285, 304, 312, 313, 399, 415, 419, 420, 421, 423, 424, 432, 433, 434], "fly": [2, 182, 239, 340, 415, 421, 434, 436, 439], "least": [2, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 60, 68, 69, 77, 80, 81, 82, 83, 84, 100, 107, 121, 124, 128, 135, 136, 148, 149, 156, 157, 185, 428, 439], "pre": [2, 7, 22, 27, 34, 39, 50, 60, 61, 67, 72, 78, 95, 121, 124, 128, 135, 136, 148, 149, 156, 157, 210, 229, 235, 237, 241, 439], "appli": [2, 3, 4, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 60, 61, 62, 63, 64, 67, 68, 69, 72, 73, 74, 75, 77, 80, 81, 82, 83, 84, 102, 121, 124, 128, 135, 136, 148, 149, 156, 157, 175, 176, 178, 179, 181, 182, 183, 186, 187, 189, 191, 192, 194, 195, 196, 197, 198, 201, 202, 203, 205, 209, 211, 212, 213, 215, 218, 219, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 235, 236, 238, 239, 241, 246, 262, 266, 276, 293, 305, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 337, 339, 340, 342, 343, 344, 345, 346, 348, 349, 358, 376, 392, 416, 419, 420, 421, 427, 432, 434, 438, 439], "conisder": 2, "per": [2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 100, 107, 113, 132, 133, 134, 148, 150, 151, 185, 204, 218, 248, 249, 259, 261, 274, 275, 308, 378, 380, 383, 385, 396, 408, 409, 419, 420, 421, 422, 423, 425, 426, 429, 432, 433, 436, 438], "pipelin": [2, 3, 7, 414, 415, 421], "replac": [2, 3, 6, 7, 27, 34, 39, 50, 60, 61, 67, 72, 100, 107, 108, 121, 124, 128, 135, 136, 148, 149, 156, 157, 173, 178, 192, 194, 201, 241, 261, 414, 432, 436, 438], "onc": [2, 3, 7, 14, 15, 16, 17, 18, 19, 20, 21, 27, 34, 39, 40, 41, 42, 50, 56, 58, 60, 61, 65, 67, 72, 79, 102, 121, 124, 128, 135, 136, 148, 149, 156, 157, 178, 204, 215, 225, 232, 241, 243, 285, 308, 394, 414, 416, 420, 421, 422, 425, 428, 434, 436, 439], "produc": [2, 3, 31, 32, 43, 45, 69, 107, 175, 178, 179, 248, 249, 269, 275, 281, 301, 303, 304, 313, 378, 421, 422, 423, 424, 425, 427, 436, 439], "unless": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 60, 61, 67, 68, 69, 72, 77, 80, 81, 82, 83, 84, 90, 106, 121, 124, 128, 135, 136, 148, 149, 150, 151, 156, 157, 230, 232, 241, 246, 323, 324, 326, 339, 341, 343, 344, 345, 346, 348, 349, 421], "download": [2, 7, 10, 132, 210, 237, 378, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439], "forc": [2, 3, 6, 7, 14, 15, 17, 18, 19, 20, 21, 149, 420, 432, 433, 434], "robosetexperiencereplai": [2, 107, 108], "fk1": 2, "v4": [2, 128, 148, 175, 214, 367, 368, 369, 370, 372, 373, 374, 375, 419, 421, 435, 438], "expert": 2, "fk1_microopenrandom_v2d": 2, "func": [2, 240], "obs_norm": 2, "norm": [2, 4, 8, 119, 120, 244, 396, 419, 420, 421, 432, 433, 434], "num_work": [2, 56, 58, 78, 89, 143, 148, 156, 419, 420], "os": [2, 58, 78, 89, 420], "cpu_count": [2, 58, 78, 89], "num_chunk": 2, "1000": [2, 4, 45, 64, 72, 93, 94, 99, 107, 108, 121, 124, 128, 135, 136, 148, 149, 156, 157, 182, 239, 243, 261, 284, 285, 309, 313, 338, 419, 420, 421, 422, 423, 425, 427, 429, 434, 435, 436], "mp_start_method": [2, 148, 156, 230, 420, 438], "fork": [2, 5, 419, 420, 421, 422, 432, 433, 435, 438], "recreat": [2, 434], "customari": 2, "moreov": [2, 3], "fine": [2, 3, 24, 64, 73, 74, 100, 102, 107, 121, 124, 128, 135, 136, 148, 149, 156, 157, 179, 202, 423, 427, 435], "grain": [2, 3, 64, 73, 74, 100, 102, 107, 121, 124, 128, 135, 136, 148, 149, 156, 157, 179], "nomenclatur": 2, "compact": [2, 45, 70, 90, 91, 98], "propos": [2, 182, 194, 246, 270, 338, 347, 414, 422, 436], "replaybufferensembl": [2, 105, 111, 118], "primit": [2, 3, 4, 323, 324, 326, 327, 328, 330, 331, 332, 339, 343, 344, 345, 346, 348, 349], "individu": [2, 4, 18, 19, 20, 21, 27, 34, 39, 50, 60, 61, 67, 72, 78, 100, 102, 113, 121, 124, 128, 135, 136, 140, 141, 148, 149, 156, 157, 241, 419, 433], "dummi": [2, 3, 157, 190, 376, 419, 423, 427, 439], "semant": [2, 68, 69, 127, 129, 435], "ident": [2, 3, 14, 15, 16, 40, 41, 42, 50, 56, 58, 64, 65, 72, 73, 74, 79, 93, 102, 107, 121, 124, 127, 128, 129, 135, 136, 143, 148, 149, 156, 157, 194, 222, 231, 244, 274, 275, 324, 326, 339, 344, 346, 348, 349, 358, 359, 360, 361, 408, 409, 420, 424, 432, 433], "another_kei": [2, 102], "renam": [2, 3, 40, 41, 42, 56, 58, 65, 79, 102, 173, 213, 215, 419], "resiz": [2, 3, 102, 182, 420, 422, 423, 424, 436, 439], "imag": [2, 3, 4, 7, 11, 182, 184, 188, 210, 228, 237, 269, 376, 378, 419, 420, 423, 424, 428, 433, 435, 439], "comops": 2, "totensorimag": [2, 3, 102, 182, 214, 420, 422, 423, 436, 438, 439], "renametransform": [2, 3, 102, 121, 124, 128, 135, 136, 148, 149, 156, 157, 182], "rb0": [2, 102], "in_kei": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 34, 45, 60, 62, 72, 102, 119, 120, 121, 124, 128, 135, 136, 142, 148, 149, 156, 157, 168, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 245, 247, 257, 264, 268, 271, 286, 295, 296, 300, 301, 302, 303, 304, 305, 308, 309, 310, 312, 313, 315, 316, 317, 320, 323, 324, 325, 326, 327, 328, 330, 331, 332, 337, 339, 340, 343, 344, 345, 346, 348, 349, 356, 358, 359, 360, 361, 377, 378, 406, 414, 419, 420, 421, 422, 423, 425, 426, 429, 431, 432, 433, 434, 435, 436, 438, 439], "pixel": [2, 3, 7, 31, 102, 121, 122, 123, 127, 129, 130, 153, 182, 184, 188, 194, 197, 199, 206, 208, 210, 214, 228, 235, 237, 251, 279, 280, 376, 378, 419, 420, 422, 423, 428, 432, 435, 436, 438, 439], "rb1": [2, 102], "out_kei": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 34, 45, 60, 62, 72, 102, 119, 120, 121, 124, 128, 135, 136, 142, 148, 149, 156, 157, 168, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 241, 245, 247, 257, 258, 264, 268, 271, 286, 287, 295, 296, 300, 301, 302, 303, 304, 306, 308, 309, 310, 311, 312, 313, 315, 316, 317, 320, 323, 324, 325, 326, 331, 332, 337, 339, 340, 343, 344, 345, 346, 348, 356, 358, 359, 360, 361, 376, 378, 391, 406, 414, 419, 420, 421, 422, 423, 425, 429, 431, 432, 433, 434, 435, 436, 438, 439], "pixels33": [2, 102], "data0": [2, 94, 102], "244": [2, 102, 210, 237], "data1": [2, 94, 102, 438], "_": [2, 8, 57, 62, 63, 64, 73, 74, 94, 102, 121, 125, 132, 160, 161, 183, 189, 190, 192, 193, 202, 206, 213, 228, 239, 241, 284, 300, 312, 313, 317, 322, 323, 324, 326, 327, 331, 332, 339, 343, 344, 346, 348, 349, 358, 359, 360, 361, 380, 419, 420, 421, 422, 423, 429, 432, 433, 434, 436, 438], "rang": [2, 3, 4, 8, 57, 62, 63, 64, 66, 73, 74, 93, 95, 102, 113, 121, 124, 125, 128, 135, 136, 140, 141, 148, 149, 156, 157, 190, 215, 228, 239, 241, 242, 263, 267, 284, 340, 348, 349, 415, 416, 419, 421, 422, 423, 426, 427, 429, 432, 433, 434, 436, 438], "parent": [2, 3, 21, 27, 34, 38, 39, 50, 52, 60, 61, 67, 72, 77, 79, 102, 111, 118, 121, 124, 128, 135, 136, 148, 149, 156, 157, 175, 179, 182, 183, 186, 187, 191, 194, 197, 198, 204, 206, 210, 218, 223, 224, 225, 226, 230, 231, 234, 235, 241, 264, 268, 301, 320, 341, 343, 362, 376, 378, 419, 427, 434, 438, 439], "basic": [2, 3, 142, 414, 421, 426, 427, 429, 432, 438, 439], "properti": [2, 3, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 67, 68, 69, 72, 73, 74, 77, 79, 80, 81, 82, 83, 84, 102, 121, 124, 128, 135, 136, 142, 148, 149, 156, 157, 178, 230, 231, 232, 239, 241, 256, 265, 273, 277, 281, 292, 293, 294, 308, 323, 326, 341, 343, 345, 346, 425, 427, 434, 436], "input": [2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 65, 66, 67, 68, 69, 72, 75, 77, 79, 80, 81, 82, 83, 84, 110, 116, 121, 124, 128, 135, 136, 140, 141, 142, 145, 146, 147, 148, 149, 150, 151, 156, 157, 158, 159, 160, 161, 162, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 204, 208, 209, 210, 211, 212, 213, 215, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 244, 246, 247, 248, 249, 251, 252, 253, 254, 257, 258, 261, 262, 263, 264, 266, 267, 268, 269, 274, 275, 276, 277, 278, 285, 287, 288, 289, 290, 291, 293, 296, 300, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 320, 322, 323, 324, 325, 326, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 343, 344, 345, 346, 348, 349, 356, 357, 358, 359, 360, 361, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 390, 394, 399, 406, 414, 415, 416, 419, 420, 421, 422, 423, 424, 432, 433, 434, 438, 439], "send": [2, 3, 8, 385, 438], "receiv": [2, 3, 27, 34, 39, 50, 60, 61, 66, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 231, 232, 241, 269, 364, 415, 419, 421, 426, 431, 434], "spawn": [2, 3, 4, 18, 22, 132, 143, 148, 156, 230, 420, 432, 433], "check_env_spec": [2, 3, 121, 124, 128, 135, 136, 148, 149, 156, 157, 175, 200, 212, 233, 376, 412, 421, 432, 433, 434], "saniti": [2, 3, 7, 121, 124, 128, 135, 136, 148, 149, 156, 157, 162, 421], "make_composite_from_td": [2, 77, 412, 434], "fall": [2, 4], "categori": [2, 31, 414, 416], "bound": [2, 3, 4, 21, 27, 29, 31, 34, 39, 50, 60, 61, 67, 72, 80, 121, 124, 128, 135, 136, 148, 149, 152, 156, 157, 185, 205, 239, 241, 243, 261, 285, 288, 289, 300, 305, 306, 309, 310, 311, 312, 313, 316, 323, 324, 326, 327, 339, 343, 344, 346, 348, 349, 412, 414, 419, 420, 421, 423, 432, 434, 438, 439], "unbound": [2, 3, 25, 26, 28, 29, 30, 31, 32, 35, 40, 41, 42, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 62, 63, 64, 65, 68, 69, 73, 74, 77, 79, 81, 82, 83, 84, 102, 121, 124, 128, 135, 136, 142, 148, 149, 156, 157, 167, 176, 179, 189, 190, 193, 212, 225, 245, 271, 300, 312, 315, 317, 345, 412, 434, 436], "boundeddiscret": [2, 28, 31], "boundedcontinu": [2, 22, 28, 31, 121, 124, 128, 135, 136, 148, 149, 156, 157, 200, 203, 233], "unboundeddiscret": [2, 80, 149, 200, 412], "unboundedcontinu": [2, 80, 121, 124, 128, 135, 136, 148, 149, 156, 157, 167, 212, 225, 315, 320, 412], "implicitli": 2, "onehot": [2, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 55, 68, 69, 77, 80, 81, 82, 83, 84, 119, 120, 127, 129, 130, 133, 134, 143, 144, 146, 147, 153, 158, 159, 258, 287, 305, 310, 328, 330, 331, 332, 356, 412, 414], "multionehot": [2, 46, 47, 49, 328, 331, 332, 356, 412], "multicategor": [2, 47, 48, 49, 412], "binari": [2, 3, 7, 26, 27, 54, 158, 176, 180, 258, 287, 305, 306, 310, 311, 328, 331, 332, 356, 412], "concept": [2, 3, 121, 124, 128, 135, 136, 148, 149, 156, 157, 284, 420, 436], "arbitrari": [2, 3, 25, 54, 64, 121, 124, 128, 134, 135, 136, 148, 149, 156, 157, 178, 415, 419, 420, 434, 436], "combin": [2, 4, 37, 61, 348, 420, 423, 428, 436, 438], "relat": [2, 3, 4, 10, 57, 148, 197, 323, 324, 326, 327, 328, 330, 331, 332, 339, 343, 344, 345, 346, 348, 349, 420, 429, 434], "nevertheless": [2, 3, 421, 424, 436], "otherwis": [2, 3, 12, 14, 15, 16, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 89, 100, 102, 107, 108, 119, 120, 121, 124, 127, 128, 129, 130, 133, 134, 135, 136, 139, 140, 141, 143, 144, 146, 147, 148, 149, 150, 151, 153, 156, 157, 158, 159, 160, 161, 182, 183, 187, 192, 200, 206, 224, 225, 226, 230, 231, 232, 239, 241, 242, 244, 246, 262, 265, 266, 274, 275, 293, 294, 299, 305, 310, 313, 316, 324, 326, 335, 341, 342, 346, 358, 360, 361, 391, 393, 415, 416, 419, 420, 421, 422, 434, 439], "similarli": [2, 3, 21, 27, 34, 39, 50, 60, 61, 67, 72, 106, 111, 121, 124, 128, 135, 136, 148, 149, 156, 157, 204, 241, 274, 314, 315, 331, 339, 439], "possess": [2, 77], "unsqueez": [2, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 79, 80, 81, 82, 83, 84, 100, 167, 176, 179, 182, 183, 228, 234, 419, 422, 423, 432, 433, 434], "move": [2, 4, 27, 34, 39, 50, 60, 61, 67, 72, 77, 121, 124, 128, 129, 135, 136, 148, 149, 156, 157, 173, 175, 186, 191, 210, 225, 231, 232, 235, 237, 239, 241, 269, 312, 394, 419, 420, 422, 424, 439], "unbind": [2, 40, 41, 42, 56, 57, 58, 64, 65, 73, 74, 79, 204, 264, 268, 308], "said": [2, 421], "neg": [2, 8, 14, 15, 16, 17, 18, 19, 20, 21, 57, 60, 73, 77, 99, 100, 182, 197, 211, 222, 234, 325, 334, 340, 343, 358, 360, 361, 415, 421, 432, 433, 434], "seen": [2, 3, 18, 19, 20, 21, 31, 32, 43, 69, 121, 124, 128, 135, 136, 148, 149, 156, 157, 191, 415, 419, 420, 422, 426, 432, 433, 436], "predict": [2, 3, 50, 66, 257, 259, 270, 271, 304, 318, 323, 325, 330, 333, 335, 336, 340, 343, 345, 357, 419, 420, 426], "deprec": [2, 23, 26, 27, 29, 32, 34, 35, 39, 43, 44, 47, 49, 50, 53, 55, 60, 61, 67, 72, 82, 84, 121, 124, 128, 135, 136, 148, 149, 156, 157, 200, 230, 232, 241, 264, 268, 323, 325, 326, 328, 331, 332, 333, 339, 340, 343, 344, 345, 346, 356, 358, 359, 360, 361, 366, 439], "mont": [2, 135, 190, 323, 325, 340, 343, 419], "carlo": [2, 135, 190, 323, 325, 340, 343, 419], "mct": [2, 45], "act": [2, 3, 4, 107, 108, 150, 151, 232, 257, 275, 324, 326, 327, 339, 344, 346, 348, 349, 422, 423, 432, 433, 436, 438], "tradit": [2, 426, 432], "integ": [2, 14, 15, 16, 17, 23, 39, 46, 48, 50, 54, 60, 61, 66, 67, 79, 100, 107, 108, 109, 121, 124, 128, 135, 136, 148, 149, 156, 157, 175, 178, 194, 198, 206, 223, 248, 249, 269, 274, 275, 326, 331, 339, 346, 415, 423, 436], "advanc": [2, 3, 21, 57, 64, 73, 74, 121, 124, 128, 135, 136, 148, 149, 156, 157, 424, 427, 436], "rebuild": [2, 45], "initi": [2, 4, 7, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 30, 34, 35, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 72, 73, 74, 79, 102, 113, 121, 124, 128, 135, 136, 146, 147, 148, 149, 156, 157, 158, 181, 190, 200, 206, 210, 225, 232, 235, 240, 241, 242, 243, 244, 245, 261, 262, 263, 266, 267, 271, 274, 275, 276, 277, 278, 285, 308, 323, 324, 326, 327, 328, 330, 332, 333, 334, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 356, 410, 414, 415, 419, 420, 422, 424, 425, 427, 432, 434, 439], "pair": [2, 3, 40, 41, 42, 50, 56, 58, 60, 65, 72, 79, 121, 122, 123, 124, 128, 135, 136, 148, 149, 156, 157, 215, 225, 230, 264, 301, 309, 313, 341, 358, 359, 360, 361, 362, 414, 415, 419, 420, 421, 425, 426, 431, 434, 439], "term": [2, 66, 94, 202, 266, 267, 277, 278, 322, 323, 332, 398, 420, 421, 424, 425, 433], "pseudocod": [2, 3], "next_stat": [2, 415], "associ": [2, 3, 27, 31, 32, 34, 39, 40, 41, 42, 43, 45, 50, 56, 58, 60, 61, 65, 67, 69, 72, 79, 121, 124, 128, 135, 136, 148, 149, 156, 157, 230, 241, 288, 410, 419, 436], "sens": [2, 4, 40, 41, 42, 56, 58, 65, 79, 182, 427, 434], "hard": [2, 3, 7, 113, 122, 123, 148, 338, 420, 439], "let": [2, 3, 6, 7, 11, 23, 27, 34, 39, 45, 50, 57, 60, 61, 64, 67, 72, 73, 74, 75, 121, 124, 128, 135, 136, 148, 149, 150, 151, 156, 157, 182, 241, 264, 268, 274, 275, 305, 391, 415, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 431, 432, 433, 434, 435, 436, 438, 439], "know": [2, 3, 4, 9, 57, 64, 73, 74, 127, 129, 243, 341, 344, 391, 419, 420, 421, 422, 423, 424, 425, 426, 427, 432, 433, 436], "next_td": 2, "Of": [2, 3, 7, 413, 434, 439], "cours": [2, 3, 4, 413, 434, 439], "handi": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 121, 124, 128, 135, 136, 148, 149, 156, 157, 428], "undertaken": [2, 79, 415, 434], "link": [2, 6, 7, 124, 420, 429], "hash": [2, 39, 45, 60, 61, 67, 72, 79, 121, 136], "past": [2, 4, 135, 182, 308, 420, 436], "node_map": [2, 45], "_index": [2, 60, 72], "Then": [2, 7, 14, 15, 16, 17, 18, 19, 20, 21, 238, 421, 431], "track": [2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 74, 99, 100, 106, 121, 135, 218, 227, 239, 241, 285, 308, 383, 389, 420, 422, 424, 427, 433, 434, 436], "next_data": [2, 121, 124, 128, 135, 136, 148, 149, 156, 157], "data_map": [2, 45], "form": [2, 14, 15, 17, 27, 34, 39, 50, 57, 60, 61, 64, 67, 72, 73, 74, 90, 91, 98, 121, 124, 128, 135, 136, 148, 149, 156, 157, 239, 241, 262, 264, 266, 268, 313, 322, 323, 325, 340, 343, 396, 414, 425, 433], "figur": [2, 3, 79, 136, 419, 421, 422, 433, 434, 439], "flowchart": 2, "o": [2, 27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241, 267], "get_tre": [2, 45, 79], "vertex": [2, 79], "longer": [2, 79, 242, 420, 429, 432, 433, 436], "vertic": [2, 79], "branch": [2, 45, 79], "repeat": [2, 79, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 133, 134, 135, 136, 143, 144, 148, 149, 153, 156, 157, 190, 230, 245, 256, 421, 432, 433, 434], "depth": [2, 64, 77, 121, 124, 128, 135, 136, 142, 148, 149, 153, 156, 157, 245, 248, 249, 251, 252, 253, 254, 259, 260, 269, 271, 274, 275, 276, 279, 280, 305, 414, 420, 424, 426, 427, 431, 432, 433, 436], "until": [2, 3, 7, 21, 134, 226, 231, 241, 386, 421, 422, 429, 432, 433], "anymor": [2, 40, 41, 42, 56, 58, 65, 79, 232, 312], "utmost": 2, "commonli": [2, 100, 107, 108, 439], "emploi": [2, 278], "languag": [2, 24, 66, 135], "scarc": 2, "address": [2, 436], "subdomain": 2, "facilit": [2, 3, 7, 209, 210, 225, 235, 237, 301, 302, 303, 414, 419, 422, 425, 434], "extern": [2, 3, 189, 193, 432, 439], "token": [2, 40, 41, 42, 58, 59, 66, 75, 78, 89, 135, 136], "dm": [3, 419, 439], "base": [3, 4, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 27, 45, 57, 64, 67, 73, 74, 78, 104, 110, 113, 114, 116, 117, 119, 120, 121, 124, 128, 132, 133, 134, 135, 136, 142, 143, 144, 148, 149, 156, 157, 160, 173, 191, 215, 229, 231, 235, 236, 264, 268, 274, 276, 301, 307, 323, 324, 326, 327, 328, 330, 331, 332, 334, 339, 343, 344, 345, 346, 348, 349, 385, 396, 414, 415, 416, 419, 420, 422, 424, 425, 426, 428, 432, 433, 434, 436, 439], "abl": [3, 45, 139, 150, 151, 264, 268, 419, 421, 422, 425, 431, 432, 433, 434, 436], "experi": [3, 57, 64, 73, 74, 99, 100, 121, 124, 128, 135, 136, 148, 149, 156, 157, 162, 380, 381, 382, 383, 384, 385, 413, 420, 421, 423, 427, 428, 432, 433, 436], "box": [3, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 79, 80, 81, 82, 83, 84, 127, 129, 276, 341], "lib": [3, 5, 6, 7, 9, 10, 14, 15, 16, 17, 21, 22, 62, 121, 124, 125, 128, 135, 136, 140, 141, 148, 149, 150, 151, 154, 155, 156, 157, 182, 185, 194, 201, 202, 206, 208, 213, 215, 218, 225, 231, 238, 239, 241, 376, 406, 419, 420, 421, 422, 431, 433, 435, 436, 438, 439], "hope": [3, 11], "nn": [3, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 33, 34, 39, 50, 60, 61, 62, 66, 67, 72, 119, 120, 121, 124, 128, 135, 136, 142, 148, 149, 156, 157, 186, 192, 194, 202, 210, 225, 231, 232, 235, 237, 241, 245, 247, 248, 249, 251, 252, 253, 254, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 271, 273, 274, 275, 276, 285, 286, 287, 295, 300, 301, 302, 303, 304, 305, 308, 309, 310, 312, 313, 314, 315, 317, 320, 322, 323, 324, 326, 327, 328, 330, 331, 332, 333, 334, 339, 341, 343, 344, 345, 346, 348, 349, 356, 358, 359, 360, 361, 406, 414, 415, 419, 420, 421, 422, 423, 425, 426, 429, 431, 432, 433, 434, 435, 438], "organis": [3, 121, 124, 128, 135, 136, 148, 149, 156, 157, 232, 420], "attribut": [3, 4, 7, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 60, 61, 65, 67, 68, 69, 70, 72, 77, 78, 79, 80, 81, 82, 83, 84, 121, 124, 127, 128, 129, 134, 135, 136, 148, 149, 156, 157, 175, 194, 204, 210, 232, 235, 239, 241, 264, 268, 313, 323, 324, 326, 327, 328, 330, 332, 333, 334, 337, 339, 341, 343, 344, 345, 346, 348, 349, 356, 419, 422, 434], "live": [3, 13, 14, 15, 16, 17, 19, 20, 27, 34, 39, 50, 57, 60, 61, 62, 63, 64, 67, 72, 73, 74, 102, 121, 124, 128, 135, 136, 142, 148, 149, 156, 157, 194, 241], "actual": [3, 4, 7, 25, 26, 28, 29, 30, 31, 32, 35, 40, 41, 42, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 56, 58, 65, 68, 69, 77, 79, 80, 81, 82, 83, 84, 121, 124, 128, 135, 136, 148, 149, 156, 157, 238, 399, 415, 419, 421, 423, 432, 433, 434], "retriev": [3, 40, 41, 42, 45, 56, 57, 58, 60, 62, 63, 64, 65, 73, 74, 79, 102, 105, 107, 108, 121, 124, 127, 128, 129, 135, 136, 148, 149, 156, 157, 173, 183, 191, 194, 206, 245, 248, 271, 308, 309, 313, 316, 320, 323, 324, 325, 326, 328, 340, 343, 344, 346, 348, 349, 356, 358, 359, 360, 361, 410, 416, 420, 421, 425, 434, 439], "care": [3, 8, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 60, 61, 67, 68, 69, 72, 77, 80, 81, 82, 83, 84, 121, 124, 128, 135, 136, 148, 149, 156, 157, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 276, 279, 280, 283, 285, 288, 289, 291, 296, 304, 306, 308, 311, 316, 319, 378, 419, 421, 423, 432, 433, 434, 436], "parametr": [3, 278, 313, 324, 326, 331, 339, 346, 419, 421], "hardwar": [3, 423], "observation_spec": [3, 45, 121, 124, 128, 135, 136, 142, 148, 149, 156, 157, 176, 179, 182, 183, 184, 185, 186, 188, 189, 191, 193, 194, 197, 199, 200, 201, 202, 206, 208, 210, 212, 214, 218, 220, 222, 223, 224, 225, 226, 227, 228, 230, 231, 233, 234, 235, 238, 239, 241, 245, 264, 268, 271, 400, 406, 419, 421, 426, 431, 432, 433, 434, 439], "state_spec": [3, 121, 124, 128, 135, 136, 142, 148, 149, 156, 157, 176, 186, 191, 206, 231, 233, 234, 241, 245, 271, 434, 439], "reward_spec": [3, 121, 124, 128, 135, 136, 142, 148, 149, 156, 157, 176, 179, 180, 185, 186, 189, 191, 193, 203, 212, 216, 217, 218, 220, 222, 231, 233, 234, 241, 245, 271, 421, 432, 433, 434, 439], "done_spec": [3, 121, 124, 128, 135, 136, 148, 149, 156, 157, 174, 189, 191, 193, 194, 212, 222, 231, 233, 241, 432, 433, 434, 439], "flag": [3, 8, 34, 57, 62, 63, 64, 73, 74, 102, 121, 124, 128, 135, 136, 140, 141, 148, 149, 156, 157, 160, 161, 201, 285, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 414, 432, 433, 434, 435], "input_spec": [3, 79, 121, 124, 128, 135, 136, 142, 148, 149, 156, 157, 175, 179, 186, 189, 191, 192, 204, 208, 212, 213, 218, 219, 222, 223, 224, 225, 229, 231, 232, 233, 236, 241, 421, 434], "full_action_spec": [3, 79, 121, 124, 128, 135, 136, 146, 147, 148, 149, 156, 157, 158, 159, 175, 191, 245, 271, 432, 433], "full_state_spec": [3, 45, 79, 121, 124, 128, 135, 136, 148, 149, 156, 157, 175, 191, 245, 271], "output_spec": [3, 79, 121, 124, 128, 135, 136, 148, 149, 156, 157, 179, 186, 189, 191, 195, 202, 204, 212, 213, 219, 223, 229, 231, 232, 233, 241, 434], "full_observation_spec": [3, 79, 121, 124, 128, 135, 136, 148, 149, 156, 157, 245, 271], "full_reward_spec": [3, 79, 121, 124, 128, 135, 136, 148, 149, 156, 157, 179, 191, 212, 432, 433], "full_done_spec": [3, 79, 121, 124, 128, 135, 136, 148, 149, 156, 157, 174, 179, 191, 212, 432, 433], "carri": [3, 21, 48, 78, 121, 124, 128, 135, 136, 148, 149, 156, 157, 225, 341, 420, 422, 432, 433, 434, 436], "nontensor": [3, 53, 200, 233, 412], "spec_lock": [3, 124], "modif": [3, 5, 27, 31, 32, 34, 39, 43, 50, 60, 61, 67, 69, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 174, 197, 200, 241, 341, 415, 421, 434], "children": [3, 27, 31, 32, 34, 39, 43, 50, 60, 61, 67, 69, 72, 79, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241], "unlock": [3, 31, 32, 40, 41, 42, 43, 56, 58, 65, 69, 79, 121, 124, 128, 135, 136, 148, 149, 156, 157], "set_spec_lock_": [3, 121, 124, 128, 135, 136, 148, 149, 156, 157], "reason": [3, 4, 8, 27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 150, 151, 156, 157, 210, 235, 241, 268, 415, 419, 420, 421, 426, 427, 432, 434, 436], "easi": [3, 5, 11, 121, 122, 123, 124, 128, 133, 134, 135, 136, 148, 149, 156, 157, 243, 261, 285, 414, 415, 419, 420, 421, 433, 435, 436, 438, 439], "cach": [3, 56, 58, 78, 89, 100, 107, 121, 124, 128, 135, 136, 148, 149, 156, 157, 173, 178, 189, 193, 210, 231, 232, 237, 246, 388], "principl": 3, "new_spec": 3, "eras": [3, 25, 26, 28, 29, 30, 35, 46, 47, 48, 49, 52, 53, 54, 55, 77, 80, 81, 82, 83, 84, 100, 107, 121, 124, 128, 135, 136, 148, 149, 156, 157, 232], "relock": 3, "previous": [3, 4, 45, 421, 439], "importantli": [3, 309, 313], "action_s": 3, "help": [3, 4, 27, 34, 39, 50, 60, 61, 67, 72, 77, 121, 124, 128, 135, 136, 148, 149, 156, 157, 182, 194, 241, 323, 325, 340, 343, 345, 413, 415, 419, 420, 421, 422, 432, 433], "With": [3, 133, 134, 139, 224, 416, 420, 431, 432, 433, 436, 439], "necessarili": [3, 121, 124, 128, 135, 136, 148, 149, 156, 157, 439], "present": [3, 27, 34, 39, 40, 41, 42, 50, 56, 57, 58, 60, 61, 62, 63, 64, 65, 67, 72, 73, 74, 77, 79, 99, 100, 102, 106, 121, 124, 127, 128, 135, 136, 148, 149, 156, 157, 173, 174, 195, 215, 219, 225, 230, 232, 241, 249, 250, 251, 252, 253, 254, 260, 264, 266, 268, 278, 283, 285, 308, 312, 313, 314, 315, 323, 324, 325, 326, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 356, 358, 359, 360, 361, 362, 410, 416, 419, 429, 431, 432, 433, 436, 438], "0s": [3, 225, 422], "step_and_maybe_reset": [3, 121, 124, 128, 135, 136, 148, 149, 156, 157, 424], "done_kei": [3, 23, 34, 36, 38, 45, 51, 70, 90, 91, 98, 107, 121, 124, 128, 135, 136, 148, 149, 156, 157, 173, 178, 182, 194, 215, 223, 241, 432, 433], "assign": [3, 4, 14, 15, 17, 27, 28, 34, 39, 40, 41, 42, 50, 56, 58, 60, 61, 65, 67, 72, 79, 80, 121, 124, 128, 135, 136, 148, 149, 156, 157, 230, 232, 241, 326, 327, 328, 330, 346, 421, 425, 432, 433, 436], "_reset": [3, 121, 124, 128, 135, 136, 142, 148, 149, 156, 157, 174, 176, 178, 179, 182, 189, 193, 201, 212, 227, 245, 271, 432], "data_": [3, 121, 124, 128, 135, 136, 148, 149, 156, 157], "append": [3, 8, 11, 45, 57, 62, 63, 64, 73, 74, 102, 121, 124, 125, 128, 135, 136, 148, 149, 156, 157, 178, 185, 186, 190, 204, 215, 225, 232, 238, 263, 264, 267, 268, 305, 310, 419, 420, 421, 422, 423, 432, 433, 434, 435, 436, 438], "seed": [3, 14, 15, 16, 17, 21, 64, 73, 74, 102, 121, 124, 128, 135, 136, 142, 148, 149, 150, 151, 156, 157, 160, 161, 162, 176, 179, 189, 193, 200, 212, 232, 376, 396, 432], "determinist": [3, 14, 15, 16, 17, 18, 19, 20, 21, 27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 171, 186, 210, 225, 231, 232, 235, 237, 241, 250, 259, 279, 289, 300, 309, 312, 313, 316, 324, 341, 391, 414, 419, 420, 421, 422, 423, 425, 426, 429, 432, 434, 438, 439], "preced": [3, 50, 121, 182, 422], "risk": [3, 211], "overlap": [3, 73, 113], "reproduc": [3, 61, 67, 121, 124, 128, 135, 136, 148, 149, 156, 157, 162, 182, 200, 419, 421, 423, 433], "maximum": [3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 25, 50, 56, 58, 59, 66, 72, 75, 78, 79, 80, 89, 93, 94, 95, 96, 99, 100, 115, 121, 124, 128, 135, 136, 148, 149, 156, 157, 190, 192, 216, 223, 224, 226, 244, 292, 293, 294, 316, 324, 326, 331, 332, 339, 341, 342, 346, 378, 393, 414, 419, 420, 421, 422, 425, 432, 433, 436], "max_step": [3, 11, 113, 121, 124, 128, 135, 136, 140, 141, 142, 148, 149, 156, 157, 160, 161, 223, 230, 241, 376, 424, 425, 426, 428, 429, 432, 433, 438, 439], "tensordictmodul": [3, 14, 15, 16, 17, 18, 19, 20, 21, 34, 60, 62, 66, 72, 119, 120, 121, 124, 128, 135, 136, 142, 148, 149, 156, 157, 181, 202, 247, 258, 264, 268, 271, 286, 287, 295, 296, 301, 302, 303, 304, 305, 308, 309, 310, 311, 312, 314, 315, 316, 318, 320, 324, 326, 327, 331, 332, 334, 335, 336, 337, 339, 341, 344, 346, 348, 349, 356, 357, 358, 359, 360, 361, 391, 406, 412, 419, 421, 422, 426, 429, 431, 432, 433, 434, 435, 439], "trail": [3, 239], "treat": [3, 50, 415, 425, 426], "brief": [3, 421, 424, 426, 436], "deliveri": 3, "metaclass": [3, 124], "everi": [3, 8, 27, 31, 32, 34, 39, 43, 50, 54, 57, 60, 61, 62, 63, 64, 67, 69, 72, 73, 74, 79, 102, 109, 121, 124, 128, 135, 136, 148, 149, 156, 157, 167, 223, 224, 239, 241, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 274, 275, 276, 279, 280, 283, 285, 288, 289, 291, 296, 304, 306, 308, 311, 316, 319, 341, 396, 416, 419, 420, 421, 422, 424, 425, 432, 433, 434], "flank": [3, 415, 422], "dual": 3, "refer": [3, 7, 8, 9, 11, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 60, 61, 66, 67, 68, 69, 72, 77, 80, 81, 82, 83, 84, 121, 124, 127, 128, 129, 135, 136, 148, 149, 156, 157, 182, 200, 230, 232, 239, 241, 245, 258, 259, 271, 272, 273, 274, 275, 276, 279, 280, 288, 289, 303, 306, 323, 326, 333, 334, 335, 336, 343, 346, 358, 363, 371, 418, 419, 421, 423, 425, 426, 427, 428, 432, 433, 436], "union": [3, 20, 27, 31, 32, 34, 39, 43, 44, 48, 49, 50, 52, 54, 55, 60, 61, 67, 68, 69, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241, 274, 295, 330, 332, 344, 407, 410], "assess": [3, 14, 15, 16, 17, 18, 19, 20, 21, 31, 32, 43, 69, 140, 141, 163, 419], "split_trajectori": [3, 14, 15, 16, 17, 18, 19, 20, 21, 100, 107, 108, 412], "adjac": [3, 23, 197, 308], "junction": 3, "inittrack": [3, 264, 268, 308, 419, 422], "tutori": [3, 149, 411, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 434, 435, 436, 437, 439], "scratch": [3, 8, 420, 434], "mere": [3, 17, 423], "batch_lock": [3, 121, 124, 126, 128, 135, 136, 148, 156, 179, 225, 232, 434], "contrast": [3, 262, 284, 338, 436], "notabl": 3, "braxenv": [3, 121, 124, 128, 135, 136, 148, 149, 156, 157, 213, 412, 424], "jumanjienv": [3, 412], "straightforward": [3, 419, 420, 424, 425, 426, 427, 436], "merg": [3, 57, 64, 73, 74, 434], "correctli": [3, 7, 27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241], "silent": [3, 27, 34, 39, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 276, 279, 280, 283, 285, 288, 289, 291, 296, 304, 306, 308, 311, 316, 319], "_step": [3, 121, 124, 128, 135, 136, 148, 149, 156, 157, 176, 178, 179, 181, 182, 183, 186, 187, 189, 191, 193, 194, 195, 196, 197, 198, 201, 202, 209, 211, 212, 213, 215, 218, 219, 222, 223, 224, 225, 226, 227, 230, 231, 235, 236, 238, 239, 241], "temporari": [3, 419], "hold": [3, 231, 354, 355, 434, 436], "arm": 3, "unbatch": [3, 262, 266], "captur": [3, 243, 261, 285, 423], "base_env": [3, 120, 121, 124, 128, 129, 134, 135, 136, 147, 148, 149, 156, 157, 159, 175, 176, 179, 185, 187, 189, 192, 193, 202, 208, 212, 214, 220, 223, 225, 226, 230, 232, 241, 378, 386, 419, 420, 421, 423, 432, 435, 438, 439], "break_when_all_don": [3, 121, 124, 128, 134, 135, 136, 148, 149, 156, 157], "conditionalskip": 3, "programmat": 3, "pretti": [3, 419, 424, 428, 436], "likewis": 3, "break_when_any_don": [3, 121, 124, 128, 135, 136, 148, 149, 156, 157, 162, 178, 230, 241, 247, 308, 433], "te": 3, "paragraph": 3, "deep": [3, 9, 182, 203, 251, 252, 253, 254, 257, 285, 323, 326, 338, 346, 347, 419, 432], "dive": 3, "gym3": 3, "envpool": [3, 143, 144], "interfac": [3, 131, 145, 269, 277, 414, 415, 419, 421, 423, 428, 434, 436], "simultan": [3, 20, 134, 143, 144, 148, 156, 434], "advantag": [3, 8, 135, 190, 260, 323, 325, 340, 343, 345, 358, 359, 360, 361, 362, 363, 365, 367, 369, 371, 372, 374, 415, 416, 419, 420, 421, 422, 433, 434, 439], "scale": [3, 4, 24, 121, 124, 128, 135, 136, 148, 149, 156, 157, 182, 202, 206, 217, 224, 228, 239, 244, 259, 265, 288, 289, 293, 294, 301, 302, 303, 309, 313, 315, 323, 324, 326, 339, 343, 344, 345, 346, 394, 400, 410, 414, 419, 420, 421, 422, 425, 433, 438], "varieti": [3, 11], "inherit": [3, 121, 124, 128, 135, 136, 148, 149, 156, 157, 270, 274, 275, 341, 416, 421, 432, 433], "from_pixel": [3, 11, 119, 120, 122, 123, 127, 129, 130, 133, 134, 153, 182, 214, 376, 378, 419, 420, 422, 424, 428, 429, 435, 436, 438, 439], "81": [3, 107], "simpli": [3, 6, 40, 41, 42, 56, 58, 65, 78, 79, 111, 113, 118, 195, 219, 238, 341, 358, 414, 415, 419, 421, 426, 432, 433, 439], "d": [3, 34, 57, 60, 64, 72, 73, 74, 89, 99, 100, 244, 262, 266, 309, 313, 438], "privat": [3, 121, 124, 128, 135, 136, 148, 149, 156, 157, 238, 434, 439], "absenc": 3, "total": [3, 14, 15, 16, 17, 18, 19, 20, 21, 25, 40, 41, 42, 46, 48, 54, 56, 57, 58, 62, 63, 64, 65, 73, 74, 79, 102, 108, 113, 325, 340, 343, 387, 389, 391, 396, 399, 400, 418, 419, 420, 421, 422, 426, 432, 433, 435, 436, 437, 438], "accord": [3, 14, 15, 16, 17, 18, 19, 20, 21, 40, 41, 42, 45, 56, 58, 65, 66, 79, 102, 105, 121, 124, 128, 135, 136, 148, 149, 156, 157, 158, 159, 206, 217, 265, 277, 288, 293, 294, 356, 414, 415, 425, 426, 432, 434, 436], "inner": [3, 121, 124, 128, 135, 136, 148, 149, 156, 157, 192, 232, 416, 420, 421, 433, 439], "logic": [3, 432], "kept": [3, 23, 106, 108, 121, 124, 128, 135, 136, 148, 149, 156, 157, 162, 173, 192, 219, 265, 293, 294, 426, 432], "mind": [3, 100, 107, 108, 121, 124, 128, 135, 136, 148, 149, 156, 157, 432, 433], "wherev": 3, "lost": [3, 8, 238], "intern": [3, 45, 76, 121, 124, 128, 135, 136, 148, 149, 156, 157, 417], "face": [3, 5, 8, 9, 424, 439], "NOT": [3, 90, 91, 98, 108, 211], "right": [3, 6, 7, 23, 66, 100, 107, 420, 421, 423, 433, 434, 439], "preliminari": 3, "warranti": 3, "affect": [3, 8, 27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 162, 187, 232, 241, 358, 359, 360, 361, 432], "preclud": 3, "presenc": [3, 34, 60, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 162, 426], "annihil": 3, "supersed": [3, 23], "pettingzoowrapp": [3, 412], "group": [3, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 60, 68, 69, 77, 80, 81, 82, 83, 84, 121, 124, 128, 135, 136, 139, 140, 141, 146, 147, 148, 149, 150, 151, 156, 157, 158, 159, 160, 161, 163, 203, 222, 353, 414, 420, 425, 427, 433, 436], "__not__": [3, 309, 324, 326, 339, 344, 346, 348, 349], "constrain": [3, 202, 264, 268, 343, 439], "li": 3, "fact": [3, 7, 8, 419, 421, 424, 432, 433, 434, 435, 436, 439], "meaning": [3, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84], "perfectli": [3, 416, 419, 423, 434], "meaningless": 3, "val": [3, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 386, 426, 438], "agent0": [3, 423], "agent1": 3, "overrid": [3, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 60, 61, 64, 67, 68, 69, 72, 77, 80, 81, 82, 83, 84, 121, 124, 128, 135, 136, 148, 149, 156, 157, 178, 241, 256, 378, 410, 414], "bool": [3, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 89, 92, 93, 94, 95, 96, 99, 100, 102, 103, 105, 106, 107, 108, 109, 114, 115, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 167, 173, 174, 175, 176, 178, 179, 182, 183, 187, 189, 190, 192, 193, 194, 195, 197, 200, 202, 204, 205, 206, 208, 210, 212, 213, 215, 217, 218, 219, 222, 223, 225, 228, 229, 230, 232, 233, 234, 235, 237, 239, 241, 242, 243, 244, 245, 247, 248, 249, 251, 252, 262, 263, 264, 265, 266, 267, 268, 269, 271, 274, 275, 276, 277, 278, 292, 293, 294, 299, 300, 305, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316, 323, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 352, 356, 358, 359, 360, 361, 364, 367, 368, 369, 370, 372, 373, 374, 375, 376, 377, 378, 385, 386, 389, 390, 391, 393, 394, 396, 410, 420, 421, 423, 434, 438, 439], "500": [3, 419, 420], "note": [3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 170, 174, 189, 193, 230, 239, 241, 246, 262, 264, 266, 268, 285, 309, 313, 333, 412, 415, 420, 423, 425, 431, 432, 433, 439], "launch": [3, 14, 15, 17, 18, 19, 20, 22, 148, 156], "bottleneck": [3, 8, 100, 107, 108], "great": [3, 7, 8, 423, 432, 438], "speedup": [3, 8, 432, 439], "precis": [3, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 173, 189, 193, 263, 267, 419, 421], "misspecifi": 3, "caus": [3, 7, 8, 14, 15, 16, 93, 95, 115, 121, 124, 128, 132, 135, 136, 148, 149, 156, 157, 211, 439], "breakag": 3, "rais": [3, 14, 15, 16, 17, 18, 19, 20, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 60, 61, 65, 67, 68, 69, 72, 77, 79, 80, 81, 82, 83, 84, 93, 121, 124, 128, 135, 136, 148, 149, 156, 157, 158, 162, 163, 182, 196, 205, 215, 224, 225, 226, 230, 232, 241, 243, 261, 285, 326, 341, 346, 386, 419, 421, 432, 433, 436], "mismatch": [3, 60, 420], "subprocess": [3, 14, 15, 17, 125, 148, 156], "multithreadedenv": [3, 412], "underneath": 3, "higher": [3, 4, 100, 185, 316, 419, 420, 421, 432, 436, 439], "flexibl": [3, 9, 143, 350, 415, 416, 419, 423, 436, 439], "cover": [3, 127, 129, 413, 421, 424, 427, 428, 434, 438], "type": [3, 12, 14, 15, 16, 17, 18, 19, 20, 21, 27, 28, 31, 32, 34, 39, 40, 41, 42, 43, 45, 50, 52, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 69, 72, 73, 74, 75, 78, 79, 80, 89, 102, 121, 124, 128, 135, 136, 139, 142, 145, 148, 149, 150, 151, 156, 157, 164, 170, 171, 173, 179, 182, 186, 189, 191, 194, 195, 200, 202, 204, 210, 212, 213, 219, 223, 225, 229, 230, 231, 232, 233, 235, 237, 239, 241, 243, 248, 249, 269, 274, 275, 278, 286, 295, 297, 305, 309, 312, 313, 320, 323, 324, 326, 327, 328, 330, 332, 333, 334, 339, 341, 343, 344, 345, 346, 348, 349, 351, 353, 356, 364, 376, 408, 412, 414, 419, 420, 421, 423, 427, 432, 433, 434, 436, 439], "atari": [3, 4, 182, 249, 378, 423, 428, 439], "classic": [3, 142, 151, 420], "benchmark_batched_env": 3, "seamlessli": [3, 434], "infrastructur": [3, 432, 433], "paradigm": [3, 17, 433], "decpodp": 3, "game": [3, 4, 5, 121, 140, 141, 146, 147, 249, 378, 423, 428], "thank": [3, 419, 423, 424, 438], "carrier": [3, 421, 422, 424, 436], "particular": [3, 27, 34, 39, 50, 60, 61, 67, 72, 78, 79, 121, 124, 128, 135, 136, 148, 149, 156, 157, 200, 232, 241, 415, 416, 420, 422, 424, 431, 433, 436], "thu": [3, 340, 433], "vma": [3, 160, 161, 376, 432, 433], "robot": [3, 5, 7, 210, 235, 237, 423, 433], "vmasenv": [3, 376, 412, 432, 433], "balanc": [3, 122, 123, 419, 420], "num_env": [3, 21, 127, 131, 144, 160, 161, 376, 432, 433], "n_agent": [3, 160, 161, 274, 275, 276, 286, 295, 356, 376, 415, 432, 433], "ground_rew": 3, "pos_rew": 3, "style": [3, 57, 64, 73, 74], "vari": [3, 127, 129, 130, 150, 151, 153, 160, 211, 415, 423, 433], "creation": [3, 148, 156, 439], "info_spec": [3, 148], "agent_i_action_spec": 3, "agent_i_reward_spec": 3, "agent_i_observation_spec": 3, "categor": [3, 25, 26, 28, 29, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 119, 120, 121, 124, 127, 128, 129, 130, 133, 134, 135, 136, 140, 141, 143, 144, 146, 147, 148, 149, 150, 151, 153, 156, 157, 158, 159, 160, 161, 174, 175, 176, 194, 212, 258, 281, 284, 287, 305, 306, 309, 310, 311, 328, 331, 332, 356, 412, 422], "simpl": [3, 9, 27, 34, 39, 50, 54, 60, 61, 67, 72, 77, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241, 251, 308, 313, 328, 330, 341, 345, 415, 419, 420, 421, 424, 425, 426, 432, 433, 436, 439], "prefix": [3, 23, 27, 34, 39, 40, 41, 42, 50, 56, 58, 60, 61, 65, 67, 72, 78, 79, 121, 124, 128, 135, 136, 148, 149, 156, 157, 200, 227, 230, 232, 241, 309, 326, 341, 346, 377, 422, 426, 439], "exactli": [3, 27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 130, 135, 136, 148, 149, 156, 157, 230, 232, 241, 262, 266, 281, 326, 346, 419, 422, 427, 432, 433], "action_kei": [3, 14, 15, 16, 17, 18, 19, 20, 21, 45, 121, 124, 128, 135, 136, 148, 149, 152, 156, 157, 173, 175, 176, 192, 204, 243, 245, 261, 270, 271, 285, 308, 415, 432, 433], "reward_kei": [3, 34, 36, 38, 45, 51, 70, 90, 91, 98, 121, 124, 128, 135, 136, 148, 149, 156, 157, 173, 241, 245, 271, 390, 394, 432, 433], "set_kei": [3, 194, 323, 325, 326, 328, 331, 332, 333, 339, 340, 341, 343, 344, 345, 346, 356, 362, 419, 432, 433], "awai": [3, 421, 424, 432, 433, 438], "leaf": [3, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 35, 43, 45, 46, 47, 48, 49, 52, 53, 54, 55, 69, 77, 79, 80, 81, 82, 83, 84, 121, 124, 128, 135, 136, 148, 149, 156, 157, 201, 223, 225, 231, 313], "full": [3, 121, 124, 128, 135, 136, 148, 149, 156, 157, 246, 264, 268, 306, 313, 387, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 438, 439], "autoresettransform": 3, "invalid": [3, 27, 34, 39, 50, 60, 61, 67, 72, 113, 121, 124, 128, 135, 136, 148, 149, 156, 157, 163, 241, 272, 273], "nan": [3, 178, 238], "auto_reset": [3, 45, 121, 124, 128, 134, 135, 136, 148, 149, 156, 157, 178, 190, 241, 434], "auto_reset_replac": [3, 178], "placehold": [3, 130, 194, 232], "set_gym_backend": [3, 121, 124, 127, 128, 135, 136, 148, 149, 156, 157, 166, 178, 412, 424, 438], "autoresettinggymenv": [3, 178], "self": [3, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 31, 32, 34, 39, 40, 41, 42, 43, 50, 56, 58, 60, 61, 65, 67, 69, 72, 79, 121, 124, 128, 135, 136, 142, 148, 149, 156, 157, 176, 178, 179, 181, 182, 183, 186, 187, 189, 190, 191, 193, 194, 195, 196, 198, 201, 202, 209, 210, 211, 212, 213, 215, 218, 219, 222, 223, 224, 225, 226, 227, 230, 231, 232, 235, 236, 237, 238, 239, 241, 242, 243, 245, 258, 261, 264, 268, 271, 274, 275, 286, 295, 309, 312, 317, 323, 324, 326, 327, 328, 330, 332, 333, 334, 339, 341, 343, 344, 345, 346, 348, 349, 356, 358, 359, 360, 361, 362, 416, 419, 434, 438], "super": [3, 142, 176, 178, 179, 181, 182, 183, 186, 187, 189, 191, 193, 194, 195, 196, 198, 201, 202, 209, 211, 212, 213, 215, 218, 219, 222, 223, 224, 225, 226, 227, 230, 231, 235, 236, 238, 239, 241, 245, 258, 271, 317, 324, 326, 327, 332, 339, 344, 346, 348, 349, 419, 434, 438], "td_reset": [3, 178], "exclud": [3, 8, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 72, 77, 80, 81, 82, 83, 84, 121, 124, 128, 135, 136, 148, 149, 156, 157, 173, 178, 182, 195, 286, 325, 340, 343, 432, 433, 436], "r": [3, 4, 45, 50, 121, 175, 176, 178, 185, 187, 206, 220, 227, 230, 239, 244, 247, 263, 313, 322, 357, 376, 420, 434, 439], "3633e": [3, 178], "02": [3, 121, 124, 128, 135, 136, 148, 149, 156, 157, 178, 420, 429], "4877e": [3, 178], "01": [3, 178, 206, 244, 285, 319, 323, 325, 340, 343], "2849e": [3, 178], "7584e": [3, 178], "6609e": [3, 178], "6166e": [3, 178], "8366e": [3, 178], "2761e": [3, 178], "5685e": [3, 178], "4102e": [3, 178], "8111e": [3, 178], "9959e": [3, 178], "0865e": [3, 178], "5644e": [3, 178], "2119e": [3, 178], "2542e": [3, 178], "03": [3, 121, 124, 128, 135, 136, 148, 149, 156, 157, 178, 206, 227], "9952e": [3, 178], "4059e": [3, 178], "2094e": [3, 178], "9009e": [3, 178], "5140e": [3, 178], "3554e": [3, 178], "2920e": [3, 178], "7893e": [3, 178], "6429e": [3, 178], "3057e": [3, 178], "2867e": [3, 178], "6963e": [3, 178], "3818e": [3, 178], "2576e": [3, 178], "2679e": [3, 178], "1640e": [3, 178], "00": [3, 119, 120, 178, 418, 437], "6972e": [3, 178], "0212e": [3, 178], "5959e": [3, 178], "4637e": [3, 178], "3121e": [3, 178], "2168e": [3, 178], "5232e": [3, 178], "7704e": [3, 178], "7457e": [3, 178], "4127e": [3, 178], "1064e": [3, 178], "0854e": [3, 178], "5712e": [3, 178], "2189e": [3, 178], "5235e": [3, 178], "8289e": [3, 178], "0009e": [3, 178], "0257e": [3, 178], "8893e": [3, 178], "5872e": [3, 178], "9405e": [3, 178], "7766e": [3, 178], "0403e": [3, 178], "0626e": [3, 178], "2959e": [3, 178], "7263e": [3, 178], "2775e": [3, 178], "9564e": [3, 178], "0411e": [3, 178], "6769e": [3, 178], "6354e": [3, 178], "8698e": [3, 178], "1765e": [3, 178], "6292e": [3, 178], "5375e": [3, 178], "1820e": [3, 178], "7023e": [3, 178], "5836e": [3, 178], "9016e": [3, 178], "4826e": [3, 178], "6191e": [3, 178], "6387e": [3, 178], "8667e": [3, 178], "2056e": [3, 178], "1147e": [3, 178], "5991e": [3, 178], "0278e": [3, 178], "5219e": [3, 178], "3067e": [3, 178], "6617e": [3, 178], "3322e": [3, 178], "2629e": [3, 178], "4599e": [3, 178], "7298e": [3, 178], "5848e": [3, 178], "0148e": [3, 178], "5745e": [3, 178], "6982e": [3, 178], "7877e": [3, 178], "3527e": [3, 178], "7285e": [3, 178], "6668e": [3, 178], "0583e": [3, 178], "6956e": [3, 178], "3962e": [3, 178], "9845e": [3, 178], "5015e": [3, 178], "5903e": [3, 178], "9993e": [3, 178], "9418e": [3, 178], "0196e": [3, 178], "6557e": [3, 178], "2109e": [3, 178], "8997e": [3, 178], "1507e": [3, 178], "7363e": [3, 178], "0310e": [3, 178], "9574e": [3, 178], "8980e": [3, 178], "0090e": [3, 178], "forecast": 3, "awar": [3, 7, 93, 94, 95, 96, 109, 111, 115, 264, 268, 420, 422], "detect": [3, 341, 415], "return_contigu": [3, 121, 124, 128, 135, 136, 148, 149, 156, 157, 162, 431], "tensordictbas": [3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 28, 29, 30, 31, 32, 34, 35, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 60, 63, 65, 68, 69, 72, 73, 74, 77, 79, 80, 81, 82, 83, 84, 113, 121, 124, 126, 128, 135, 136, 148, 149, 156, 157, 162, 173, 174, 176, 178, 179, 181, 182, 183, 186, 187, 189, 191, 194, 195, 196, 197, 198, 201, 202, 209, 211, 212, 213, 215, 218, 219, 222, 223, 224, 225, 226, 227, 230, 231, 232, 233, 235, 236, 238, 239, 241, 243, 245, 261, 264, 268, 270, 271, 285, 304, 306, 308, 311, 312, 313, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 337, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 356, 357, 358, 359, 360, 361, 362, 396, 419, 432, 434], "envwithdynamicspec": 3, "max_count": 3, "float": [3, 14, 15, 17, 24, 27, 28, 31, 33, 34, 39, 50, 54, 57, 60, 61, 66, 67, 72, 73, 80, 99, 100, 102, 121, 124, 128, 135, 136, 148, 149, 156, 157, 175, 178, 182, 186, 189, 193, 202, 203, 206, 210, 215, 216, 217, 224, 225, 228, 231, 232, 235, 237, 239, 241, 243, 244, 246, 247, 256, 259, 262, 265, 266, 269, 272, 273, 277, 278, 284, 288, 289, 292, 294, 312, 316, 319, 321, 322, 323, 324, 325, 326, 330, 331, 332, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 346, 347, 348, 349, 357, 363, 364, 365, 366, 367, 368, 369, 370, 371, 394, 419, 420, 436, 439], "_set_se": [3, 176, 179, 189, 193, 212, 434], "lazystackedtensordict": [3, 45, 69, 94, 121, 124, 128, 135, 136, 142, 148, 149, 156, 157, 190, 431], "float32": [3, 14, 15, 16, 28, 31, 34, 36, 40, 41, 42, 45, 56, 57, 58, 60, 65, 66, 70, 72, 73, 74, 77, 78, 79, 80, 93, 94, 95, 99, 100, 107, 115, 119, 120, 121, 124, 127, 128, 129, 133, 134, 135, 136, 142, 145, 146, 147, 148, 149, 154, 155, 156, 157, 158, 160, 161, 167, 173, 175, 179, 189, 193, 194, 195, 200, 203, 206, 208, 212, 213, 215, 219, 222, 223, 225, 228, 233, 245, 247, 257, 258, 264, 268, 271, 285, 286, 287, 295, 300, 301, 302, 303, 304, 305, 308, 309, 310, 311, 312, 315, 317, 320, 323, 324, 326, 327, 328, 330, 331, 332, 339, 343, 344, 345, 346, 348, 349, 356, 414, 434], "exclusive_field": [3, 45, 94, 190], "stack_dim": [3, 45, 94, 190], "dramat": 3, "carefulli": [3, 432, 433, 439], "against": [3, 5, 7, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 60, 61, 67, 68, 69, 72, 77, 80, 81, 82, 83, 84, 121, 124, 128, 135, 136, 148, 149, 156, 157, 162, 241, 300, 305, 306, 309, 310, 311, 312, 313, 324, 326, 339, 344, 346, 348, 349, 421, 432, 433], "plain": [3, 8, 135, 424], "larg": [3, 4, 30, 40, 41, 42, 56, 58, 65, 79, 107, 108, 189, 193, 235, 323, 325, 340, 343, 345, 420, 421, 432, 433, 436], "expens": [3, 100, 107, 108, 376, 436], "absent": [3, 31, 32, 43, 69, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 219, 232], "torchvis": [3, 11, 210, 237, 380, 432, 438, 439], "callabl": [3, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 60, 61, 62, 63, 64, 67, 68, 69, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 102, 121, 124, 125, 128, 135, 136, 142, 148, 149, 156, 157, 172, 177, 179, 186, 187, 190, 194, 200, 225, 232, 233, 241, 242, 248, 249, 269, 276, 313, 322, 341, 376, 401, 402, 408, 409, 410, 420, 436], "bring": [3, 421, 424, 439], "signific": [3, 5, 8, 421, 438, 439], "kind": [3, 64, 77, 426, 432, 436], "consult": 3, "interest": [3, 309, 313, 414, 420, 421, 424, 433, 434, 439], "resize_par": 3, "revers": [3, 266], "order": [3, 11, 16, 27, 34, 39, 50, 54, 57, 60, 61, 62, 63, 64, 67, 72, 73, 74, 102, 106, 108, 121, 124, 128, 135, 136, 148, 149, 156, 157, 183, 189, 190, 193, 200, 208, 222, 230, 232, 241, 284, 300, 305, 312, 314, 315, 317, 323, 324, 326, 327, 331, 332, 339, 343, 344, 345, 346, 348, 349, 420, 432, 433], "chain": [3, 40, 41, 42, 56, 57, 58, 64, 65, 73, 74, 79, 135, 136, 186, 192, 248, 249, 315, 439], "in_keys_inv": [3, 168, 185, 189, 191, 193, 200, 206, 207, 208, 212, 213, 215, 220, 229, 231, 233, 234, 419, 431, 434, 439], "append_transform": [3, 45, 57, 62, 63, 64, 73, 74, 102, 121, 124, 128, 135, 136, 148, 149, 156, 157, 168, 175, 176, 178, 179, 181, 182, 183, 186, 187, 190, 191, 194, 195, 196, 198, 200, 201, 202, 209, 210, 211, 212, 213, 215, 218, 219, 222, 223, 224, 225, 226, 227, 230, 231, 232, 233, 235, 236, 238, 239, 241, 247, 264, 268, 376, 419, 422, 432, 434, 436, 438, 439], "doubletofloat": [3, 419, 421, 431], "float64": [3, 27, 34, 39, 50, 60, 61, 67, 72, 121, 122, 123, 124, 128, 135, 136, 140, 141, 148, 149, 156, 157, 175, 186, 189, 193, 210, 225, 231, 232, 235, 237, 241, 312], "think": [3, 413, 421, 432, 433, 439], "in_": 3, "out_": 3, "perspect": [3, 258, 306, 333, 421, 423], "outer": [3, 121, 124, 128, 135, 136, 148, 149, 156, 157, 232, 416, 419, 420, 439], "ob": [3, 4, 8, 23, 31, 32, 43, 45, 57, 62, 63, 64, 69, 72, 73, 74, 79, 99, 102, 107, 108, 113, 121, 124, 128, 135, 136, 148, 149, 156, 157, 167, 173, 176, 178, 189, 191, 193, 206, 220, 222, 228, 251, 252, 253, 254, 274, 275, 276, 310, 317, 324, 326, 327, 332, 339, 344, 346, 348, 349, 358, 359, 360, 361, 420, 423, 431, 432, 434, 436, 438, 439], "obs_standard": 3, "out_keys_inv": [3, 168, 185, 189, 191, 193, 200, 206, 207, 208, 212, 213, 220, 222, 229, 231, 233, 234, 434], "illustr": [3, 419, 420, 425, 436], "chang": [3, 5, 7, 11, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 60, 61, 64, 67, 68, 69, 72, 73, 74, 77, 80, 81, 82, 83, 84, 93, 94, 95, 96, 100, 106, 107, 109, 111, 115, 121, 124, 128, 135, 136, 148, 149, 156, 157, 179, 186, 189, 191, 193, 195, 202, 204, 212, 213, 219, 223, 229, 231, 232, 233, 239, 241, 266, 323, 324, 326, 327, 328, 330, 332, 333, 334, 339, 341, 343, 344, 345, 346, 348, 349, 356, 415, 419, 422, 432, 433, 434, 435, 436, 439], "schemat": [3, 415], "outermost": 3, "innermost": 3, "similar": [3, 27, 34, 39, 40, 41, 42, 50, 52, 56, 58, 60, 61, 64, 65, 67, 72, 79, 121, 124, 128, 135, 136, 148, 149, 150, 151, 156, 157, 186, 210, 225, 231, 232, 235, 236, 237, 239, 241, 301, 303, 309, 312, 313, 415, 419, 420, 421, 422, 423, 425, 426, 427, 428, 434, 436, 438, 439], "transform_action_spec": [3, 186, 191, 206, 231, 233, 234, 241], "spec_from_random_valu": 3, "_apply_transform": [3, 176, 178, 179, 181, 182, 183, 186, 187, 191, 194, 195, 196, 198, 201, 202, 209, 211, 212, 213, 215, 218, 219, 222, 223, 224, 225, 226, 227, 230, 231, 235, 236, 238, 239, 241, 434, 439], "rand": [3, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 57, 62, 63, 64, 68, 69, 73, 74, 77, 80, 81, 82, 83, 84, 94, 102, 119, 120, 133, 134, 142, 146, 147, 152, 158, 159, 176, 179, 189, 193, 212, 222, 245, 271, 309, 323, 324, 326, 327, 328, 330, 331, 332, 339, 341, 343, 344, 346, 348, 349, 434, 438, 439], "approach": [3, 57, 64, 73, 74, 182, 206, 244, 274, 275, 348, 419, 421, 426, 427, 432, 439], "insid": [3, 40, 41, 42, 56, 58, 65, 79, 148, 439], "did": [3, 64, 238, 364, 420, 421, 427, 436, 439], "_inv_apply_transform": [3, 175, 231, 241, 434, 439], "actiondiscret": 3, "rand_act": [3, 121, 124, 128, 135, 136, 139, 148, 149, 150, 151, 156, 157, 179, 190, 232, 424], "action_discret": 3, "addonetoob": 3, "Is": [3, 231], "rewrit": [3, 231], "_call": [3, 176, 178, 179, 181, 182, 183, 186, 187, 191, 192, 194, 195, 196, 197, 198, 201, 202, 209, 211, 212, 213, 215, 218, 219, 222, 223, 224, 225, 226, 227, 230, 231, 235, 236, 238, 239, 241, 434], "_inv_cal": [3, 175, 231, 241], "overwrit": [3, 231], "till": [3, 231, 238], "encapsul": [3, 231, 424, 425, 426], "forget": [3, 231, 266], "edit": [3, 231, 241, 427], "top": [3, 4, 113, 119, 120, 133, 134, 188, 231, 245, 271, 425], "transform_output_spec": [3, 179, 186, 189, 191, 195, 202, 204, 212, 213, 219, 223, 229, 231, 233, 241], "transform_input_spec": [3, 175, 179, 186, 189, 191, 192, 204, 208, 212, 213, 218, 222, 223, 224, 225, 229, 231, 233, 236, 241], "transform_observation_spec": [3, 179, 182, 183, 184, 185, 186, 188, 189, 191, 194, 195, 197, 199, 201, 202, 204, 206, 208, 212, 213, 214, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 238, 239, 241, 434], "transform_state_spec": [3, 186, 191, 206, 231, 233, 234, 241], "transform_reward_spec": [3, 179, 180, 185, 186, 189, 191, 195, 202, 203, 204, 212, 213, 216, 217, 218, 219, 220, 222, 223, 229, 231, 233, 234, 241], "rewardsum": [3, 173, 231, 241, 432, 433], "undo": 3, "addonetoact": 3, "subtract": [3, 224], "regist": [3, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 60, 61, 62, 63, 64, 67, 68, 69, 72, 73, 74, 77, 80, 81, 82, 83, 84, 102, 121, 124, 127, 128, 129, 135, 136, 148, 149, 156, 157, 158, 159, 170, 173, 189, 193, 194, 218, 230, 232, 241, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 276, 279, 280, 283, 285, 288, 289, 291, 296, 304, 306, 308, 311, 316, 319, 323, 324, 326, 327, 328, 330, 332, 333, 334, 339, 341, 343, 344, 345, 346, 348, 349, 356, 376, 378, 387, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 416, 419, 421, 424, 436], "manipul": [3, 4, 8, 122, 123, 210, 231, 235], "third_transform": 3, "unexpect": [3, 14, 15, 16, 27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241, 439], "behviour": 3, "fortun": [3, 422, 423, 424, 425, 428], "alreadi": [3, 8, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 60, 61, 65, 67, 68, 69, 72, 77, 78, 79, 80, 81, 82, 83, 84, 93, 121, 124, 128, 135, 136, 148, 149, 156, 157, 174, 225, 241, 242, 313, 358, 359, 360, 361, 419, 421, 428, 432, 433], "catfram": [3, 308, 420], "notic": [3, 113, 182, 415, 421, 429, 434], "parenthood": 3, "henc": [3, 57, 174, 211, 274, 419, 421, 432, 433, 434], "transform1": 3, "transform2": 3, "transform3": 3, "last_two": 3, "isinst": [3, 148, 156, 232, 376, 386, 434], "discret": [3, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 121, 124, 127, 128, 129, 135, 136, 140, 141, 148, 149, 150, 151, 156, 157, 160, 161, 175, 192, 200, 281, 284, 287, 330, 331, 332, 333, 414, 420, 425, 433], "might": [3, 40, 41, 42, 56, 58, 59, 65, 79, 382, 413, 419, 424, 439], "action_mask": [3, 121, 133, 134, 150, 151, 154, 155, 176], "unavail": [3, 150, 151], "probabl": [3, 4, 8, 66, 102, 105, 246, 247, 256, 258, 261, 262, 264, 266, 268, 269, 272, 273, 281, 293, 294, 309, 313, 326, 343, 414, 415, 420, 423, 425, 438], "probabilistictensordictmodul": [3, 202, 313, 314, 415, 438], "tensordictsequenti": [3, 34, 60, 72, 247, 261, 264, 268, 285, 305, 308, 314, 315, 320, 414, 419, 420, 422, 423, 425, 429, 431, 432, 435, 438], "maskedcategor": [3, 273, 412], "linear": [3, 14, 15, 16, 17, 21, 27, 34, 39, 50, 60, 61, 62, 67, 72, 119, 120, 121, 124, 128, 135, 136, 142, 148, 149, 156, 157, 186, 202, 210, 225, 231, 232, 235, 237, 241, 245, 247, 248, 249, 251, 252, 253, 254, 258, 260, 261, 269, 271, 274, 275, 277, 278, 285, 287, 288, 289, 300, 301, 302, 303, 307, 308, 309, 310, 312, 315, 317, 323, 324, 326, 327, 328, 330, 331, 332, 333, 334, 339, 341, 343, 344, 345, 346, 348, 349, 356, 358, 359, 360, 361, 406, 414, 420, 431, 435, 438], "in_feat": 3, "out_feat": 3, "logit": [3, 40, 42, 58, 66, 257, 272, 273, 281, 284, 306, 309, 331, 332, 414], "dist": [3, 10, 272, 273, 281, 313, 415, 425], "distribution_class": [3, 202, 301, 302, 303, 304, 309, 313, 315, 323, 324, 326, 331, 332, 339, 343, 344, 345, 346, 414, 419, 421, 425, 432, 433, 438], "wrap": [3, 5, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 33, 34, 39, 50, 60, 61, 66, 67, 72, 119, 120, 121, 124, 128, 129, 133, 134, 135, 136, 141, 144, 146, 147, 148, 149, 150, 151, 156, 157, 159, 161, 162, 170, 187, 230, 232, 241, 242, 264, 268, 296, 301, 302, 303, 308, 310, 313, 318, 341, 356, 414, 419, 420, 421, 422, 426, 429, 432, 433, 439], "actionmask": [3, 121], "your_base_env": 3, "mask_kei": [3, 23, 176, 211, 241], "itself": [3, 27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 166, 178, 241, 341, 348, 421, 424], "ey": 3, "report": [3, 119, 120, 133, 134, 428], "foremost": 3, "callback": [3, 121, 124, 128, 135, 136, 148, 149, 156, 157, 433], "ad": [3, 4, 16, 23, 27, 34, 39, 45, 50, 57, 60, 61, 62, 63, 64, 67, 72, 73, 74, 86, 99, 100, 102, 121, 124, 128, 135, 136, 148, 149, 156, 157, 182, 200, 218, 230, 232, 241, 244, 277, 278, 285, 322, 323, 325, 326, 328, 333, 340, 343, 346, 356, 420, 422, 423, 425, 432, 436, 438, 439], "tensordictrecord": [3, 412], "videorecord": [3, 11, 376, 412, 421, 428, 429, 432], "csvlogger": [3, 11, 376, 378, 412, 420, 428, 429, 432], "wandblogg": [3, 412, 428], "tensorboardlogg": [3, 406, 412, 428], "tag": [3, 7, 11, 376, 378, 380, 383, 410, 428, 429, 432], "mp4": [3, 376, 378, 380, 429, 432], "video_format": [3, 376, 378, 380, 429, 432], "whc": 3, "cwh": 3, "exp": [3, 322, 415], "al": [3, 24, 127, 129, 194, 208, 245, 423, 439], "pong": [3, 144, 208, 423, 439], "v5": [3, 127, 129, 144, 194, 208, 423, 439], "grow": [3, 94], "tediou": [3, 424], "workspac": [3, 79, 121, 124, 128, 135, 136, 148, 149, 156, 157, 200], "pixelrendertransform": [3, 412, 432], "stream": 3, "alik": [3, 376], "envcreat": [3, 16, 22, 148, 156, 230, 376, 406, 407, 410, 412, 419, 420, 438, 439], "render_mod": [3, 376, 434], "rgb_arrai": [3, 376, 432, 433, 434], "uncom": [3, 428], "line": [3, 7, 27, 34, 39, 45, 50, 60, 61, 67, 72, 79, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241, 420, 428, 432, 433], "comment": [3, 416, 420, 438], "pixels_record": [3, 376], "close": [3, 16, 128, 143, 202, 323, 325, 340, 343, 376, 419, 420, 424, 431, 432, 434, 438], "mission": 3, "irrespect": [3, 312, 313], "dmcontrol": [3, 121, 124, 128, 135, 136, 148, 149, 156, 157], "jumanji": [3, 121, 124, 128, 133, 134, 135, 136, 148, 149, 156, 157], "special": [3, 81, 83, 412, 419, 422, 423, 439], "framework": [3, 4, 9, 22, 119, 120, 121, 124, 128, 133, 134, 135, 136, 142, 148, 149, 156, 157, 262, 438, 439], "Its": [3, 27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 186, 210, 225, 231, 232, 235, 237, 239, 241, 312, 362], "success": [3, 135, 182, 190, 227, 261, 326, 348, 420, 427, 429, 434, 436, 438], "foundat": [3, 5, 150, 151, 421, 433], "inspir": [3, 423, 434], "gone": [3, 4, 5, 308], "prefer": [3, 14, 15, 17, 20, 23, 24, 57, 64, 73, 74, 107, 108, 211, 219, 343, 348, 393, 414, 421, 432, 433, 436, 438], "maintain": [3, 5, 9, 33, 52, 182, 434], "concomittantli": 3, "problem": [3, 7, 8, 9, 16, 420, 421, 422, 427, 432, 433, 434, 436, 439], "decor": [3, 8, 170, 172, 242, 264, 268, 299, 341, 358, 359, 360, 361, 386, 422, 438], "relev": [3, 66, 121, 124, 128, 135, 136, 148, 149, 156, 157, 358, 359, 360, 361, 362, 385, 423, 434], "gym_backend": [3, 172, 412], "env1": [3, 247, 431], "venv": 3, "python3": [3, 6, 7, 10], "site": [3, 6, 7, 121, 172], "env2": [3, 431], "_env": [3, 6, 127, 439], "classic_control": 3, "pendulumenv": [3, 45, 412, 434], "0x15147e190": 3, "0x1629916a0": 3, "mo_gymnasium": [3, 138, 166, 203], "side": [3, 4, 439], "v0": [3, 14, 15, 31, 32, 40, 41, 42, 43, 56, 58, 65, 69, 79, 121, 124, 128, 130, 133, 134, 135, 136, 137, 138, 148, 149, 156, 157, 186, 203, 232, 239, 386, 406], "26": [3, 108, 121, 124, 128, 135, 136, 148, 149, 156, 157], "fun": [3, 172, 242, 421, 432, 433], "reveal": 4, "curv": 4, "exploit": [4, 425], "cv": 4, "flip": [4, 134], "correspondingli": 4, "invers": [4, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 57, 62, 63, 64, 68, 69, 73, 74, 77, 80, 81, 82, 83, 84, 102, 175, 182, 189, 193, 195, 200, 206, 213, 215, 227, 229, 231, 233, 241, 321, 331, 339, 412, 434], "prescript": 4, "tune": [4, 24, 202, 432, 433, 435], "coeffici": [4, 24, 33, 66, 202, 433], "bonu": [4, 323, 325, 340, 343], "beta": [4, 57, 73, 99, 100, 331, 339, 340, 419, 420, 436, 438], "reduc": [4, 6, 30, 113, 121, 124, 128, 135, 136, 148, 149, 156, 157, 173, 182, 187, 224, 244, 246, 293, 412, 420, 432], "downstream": [4, 415, 419], "formul": [4, 432, 433], "rate": [4, 11, 239, 357, 420, 421, 432, 433], "gradient": [4, 27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 232, 241, 246, 265, 273, 278, 281, 293, 294, 313, 323, 325, 326, 327, 331, 332, 337, 339, 340, 341, 343, 344, 345, 346, 348, 349, 357, 358, 359, 360, 361, 396, 419, 421, 432, 433, 434], "easier": [4, 61, 414, 419, 438], "local": [4, 7, 10, 16, 21, 27, 34, 39, 50, 60, 61, 63, 67, 72, 100, 107, 121, 124, 128, 135, 136, 148, 149, 156, 157, 232, 241, 274, 275, 286, 295, 356, 383, 385, 423, 428, 429, 432, 433], "optima": 4, "product": [4, 9, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 262, 263, 266, 267, 408, 409], "sum": [4, 21, 27, 34, 48, 54, 72, 113, 119, 120, 122, 123, 127, 129, 130, 133, 134, 143, 144, 153, 181, 203, 218, 272, 273, 293, 295, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 337, 339, 340, 342, 343, 344, 345, 346, 348, 349, 357, 364, 415, 419, 420, 421, 422, 423, 426, 429, 432, 433, 434, 439], "stat": [4, 206, 239, 400, 410, 420, 421], "w": [4, 102, 121, 146, 147, 182, 184, 188, 214, 228, 262, 285, 378, 420, 436], "yield": [4, 14, 15, 16, 21, 27, 34, 39, 50, 60, 61, 67, 72, 79, 121, 124, 128, 135, 136, 148, 149, 156, 157, 190, 241, 341, 419, 426], "insight": [4, 423], "auxiliari": [4, 426], "credit": 4, "futur": [4, 23, 27, 34, 39, 40, 41, 42, 50, 56, 58, 60, 61, 65, 67, 72, 79, 90, 91, 98, 121, 124, 128, 135, 136, 148, 149, 156, 157, 200, 210, 230, 232, 237, 241, 269, 323, 324, 326, 327, 328, 330, 332, 333, 334, 339, 341, 343, 344, 345, 346, 348, 349, 356, 413], "spars": [4, 34, 422], "intermedi": [4, 14, 15, 34, 45, 60, 72, 181, 247, 264, 268, 306, 419, 423, 435], "instrument": 4, "greatli": 4, "soccer": 4, "kick": 4, "ball": 4, "likelihood": [4, 419], "discov": 4, "score": [4, 66, 282, 284], "undesir": 4, "unintention": 4, "valuabl": 4, "idiosyncrat": 4, "subtask": 4, "hierarch": 4, "select": [4, 34, 57, 60, 62, 63, 64, 72, 73, 74, 79, 102, 121, 140, 141, 150, 151, 152, 160, 161, 175, 176, 178, 179, 181, 182, 183, 186, 187, 189, 191, 193, 194, 195, 196, 197, 198, 201, 202, 204, 205, 209, 211, 212, 213, 215, 218, 219, 222, 223, 224, 225, 226, 227, 230, 231, 235, 236, 238, 239, 241, 245, 264, 268, 305, 310, 395, 414, 415, 419, 423, 424, 432, 436], "explicit": [4, 14, 15, 16, 242, 436], "mechan": [4, 27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 232, 241, 420, 426, 434], "curios": 4, "magnitudin": 4, "domin": 4, "smaller": [4, 24, 121, 124, 128, 135, 136, 148, 149, 156, 157, 266, 331, 339, 421, 433], "addition": [4, 256], "timestep": [4, 66, 215, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 432, 433], "realli": 4, "huge": [4, 275, 422], "std": [4, 206, 239, 243, 283, 419, 439], "torchrlunseen": [4, 135], "extrins": 4, "wrong": [4, 100, 107], "bonus": 4, "denser": 4, "prior": [4, 67, 289, 335, 433], "freshli": 4, "drop": [4, 106, 108, 173], "meant": [4, 50, 135, 142], "encourag": [4, 148, 284, 419, 420, 436], "measur": [4, 93, 95, 115, 119, 120, 133, 134, 176, 178, 179, 181, 182, 183, 186, 187, 191, 194, 195, 196, 198, 201, 202, 209, 211, 212, 213, 215, 218, 219, 222, 223, 224, 225, 226, 227, 230, 231, 235, 236, 238, 239, 241, 421, 427], "novelti": 4, "revisit": 4, "diminish": 4, "decreas": [4, 24, 425], "ideal": [4, 206, 434], "down": [4, 14, 15, 16, 17, 415, 422, 424], "distil": 4, "nois": [4, 240, 278, 285, 298, 344, 348, 349, 391, 410, 419, 432], "exploratori": [4, 323, 325, 340, 343], "misalign": 4, "trade": [4, 425], "unavoid": 4, "divers": [4, 148, 156], "bootstrap": [4, 333, 359, 365, 366, 419, 422], "noisi": [4, 277, 278, 298, 414], "unstabl": [4, 265, 293, 294], "inher": [4, 323, 343], "stochast": [4, 202, 259, 278, 279, 289, 324, 326, 329, 331, 332, 337, 339, 342, 344, 346, 414, 421, 425, 433], "enemi": 4, "pomdp": [4, 436], "loos": [4, 313, 414, 420, 421], "nonexist": 4, "architectur": [4, 255, 426, 432, 433, 438], "sequenc": [4, 14, 15, 16, 17, 24, 31, 32, 34, 43, 46, 48, 56, 57, 58, 59, 60, 64, 66, 69, 72, 75, 78, 79, 89, 92, 102, 103, 105, 111, 114, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 133, 134, 135, 136, 143, 144, 148, 149, 153, 156, 157, 168, 180, 181, 182, 183, 184, 188, 189, 192, 193, 197, 199, 200, 203, 206, 207, 211, 212, 213, 214, 215, 216, 217, 218, 222, 224, 226, 227, 228, 229, 231, 233, 239, 248, 249, 256, 258, 262, 266, 269, 272, 273, 274, 275, 281, 287, 291, 304, 314, 315, 329, 377, 378, 391, 392, 393, 395, 396, 414, 419, 421, 422, 423, 431, 432, 433, 439], "lstm": [4, 225, 267, 268, 423], "rel": [4, 102, 225, 256, 292, 419, 420, 432, 433, 436], "tend": 4, "stabl": [4, 9, 10, 145], "compens": 4, "descent": [4, 278], "minimum": [4, 80, 148, 156, 216, 259, 292, 293, 294, 316, 319, 322, 324, 326, 332, 341, 342, 346, 387, 415, 419, 421, 429, 432, 433], "manual": [4, 11, 18, 20, 21, 45, 57, 62, 63, 64, 73, 74, 102, 128, 129, 419, 422, 436], "deviat": [4, 206, 239, 243, 245, 259, 271, 277, 278, 283, 284, 343, 348, 349, 419, 425, 433], "radic": 4, "begin": [4, 14, 15, 16, 17, 18, 19, 20, 21, 100, 107, 178, 262, 263, 266, 267, 322, 386, 415, 423, 424, 425, 426, 427, 428, 429], "stabil": [4, 198, 246, 323, 325, 340, 343, 345], "stage": [4, 419, 434], "never": [4, 14, 15, 17, 28, 80, 100, 227, 427, 438], "prevent": [4, 25, 26, 30, 31, 32, 35, 43, 46, 47, 48, 49, 54, 55, 62, 69, 91, 239, 265, 293, 294, 323, 325, 340, 343, 345, 394, 428, 436], "entir": [4, 121, 124, 128, 135, 136, 148, 149, 156, 157, 182, 274, 421, 424, 434, 436], "submit": [4, 127, 179, 413, 438], "system": [4, 5, 91, 421, 432, 433, 434], "adequ": [4, 121, 124, 128, 135, 136, 148, 149, 156, 157, 162, 421, 432, 433], "infeas": 4, "allevi": [4, 414], "prune": [4, 136], "fire": [4, 27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241], "illeg": 4, "chess": [4, 121, 146, 147], "grasp": 4, "wherein": 4, "cumul": [4, 34, 218, 224, 245, 364, 421], "q": [4, 9, 121, 124, 128, 135, 136, 148, 149, 156, 157, 251, 252, 253, 254, 257, 258, 260, 286, 287, 295, 303, 306, 310, 311, 324, 326, 327, 328, 330, 331, 332, 333, 338, 339, 344, 346, 348, 349, 356, 412, 419, 426], "flow": [4, 419, 421, 432, 433, 434, 436], "reparameter": [4, 256, 273, 281], "soft": [4, 338, 346, 347, 432], "critic": [4, 8, 301, 307, 323, 325, 326, 327, 331, 332, 339, 340, 343, 344, 345, 346, 348, 349, 419, 426], "clip": [4, 66, 185, 216, 323, 325, 340, 343, 345, 348, 349, 396, 421, 433, 434], "oppos": [4, 78], "incorrect": [4, 107], "thought": [4, 121, 124, 128, 135, 136, 148, 149, 156, 157], "region": 4, "squash": [4, 422, 438], "tanh": [4, 248, 249, 262, 263, 265, 266, 267, 269, 275, 292, 293, 294, 316, 421, 425, 432, 433, 434, 435], "prob": [4, 272, 273, 281, 284, 421, 433], "rememb": [4, 432], "remap": 4, "origin": [4, 8, 34, 40, 41, 42, 56, 58, 59, 60, 65, 66, 72, 75, 79, 132, 191, 192, 202, 210, 232, 237, 241, 262, 309, 312, 313, 324, 326, 338, 339, 341, 343, 344, 346, 348, 349, 419, 423, 431, 434, 439], "world": [5, 142, 318, 335, 423, 428, 432, 433, 434, 439], "histor": 5, "ceas": 5, "farama": [5, 137, 138, 150, 151, 421, 434], "gymwrapp": [5, 121, 124, 128, 135, 136, 148, 149, 156, 157, 195, 219, 223, 238, 412, 421, 438], "feel": [5, 413, 429, 438], "free": [5, 7, 173, 189, 193, 323, 335, 343, 416, 421, 429, 433, 438], "gladli": 5, "prepar": [6, 38, 421], "conda": [6, 7, 413], "cmake": 6, "activ": [6, 7, 9, 45, 248, 249, 255, 259, 269, 274, 275, 325, 340, 343, 414, 434, 438], "sim": 6, "bullet": 6, "headless": [6, 7], "cluster": [6, 7, 8, 18, 21, 413], "withbullet": 6, "forg": [6, 7], "aihabitat": [6, 130], "y": [6, 7, 34, 60, 64, 72, 145, 260, 274, 296, 419, 433, 436], "facebookresearch": [6, 130], "subdirectori": 6, "verbos": [6, 429], "magnum_log": 6, "quiet": 6, "habitat_sim_log": 6, "remov": [6, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 60, 61, 65, 67, 68, 69, 72, 77, 79, 80, 81, 82, 83, 84, 86, 121, 124, 128, 135, 136, 148, 149, 156, 157, 212, 221, 241, 341, 432, 433, 438, 439], "command": [6, 7, 10, 157, 421, 432, 433, 434, 439], "readm": [6, 7, 160, 438], "md": [6, 7], "habitatenv": [6, 412], "_has_habitat": 6, "available_env": [6, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 133, 134, 135, 136, 137, 140, 141, 145, 146, 147, 148, 149, 153, 154, 155, 156, 157, 158, 159, 160, 161, 439], "startswith": [6, 247, 415, 419, 426], "oserror": 6, "libllvmlit": 6, "ionstal": 6, "pointer": [6, 125, 341, 419], "env_nam": [6, 119, 121, 122, 124, 125, 127, 128, 130, 133, 135, 136, 137, 143, 148, 149, 153, 156, 157, 419, 421, 439], "llvmlite": 6, "config": [6, 7, 210, 237, 250, 255, 283, 400, 401, 402, 404, 407], "var": [6, 7, 27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 200, 230, 232, 241, 326, 341, 346], "ld_preload": [6, 7], "bind": 6, "deactiv": [6, 7, 305, 341], "importerror": [6, 7, 10], "usr": [6, 7, 10], "x86_64": [6, 7], "linux": [6, 7], "gnu": [6, 7], "libopengl": [6, 7], "undefin": [6, 7, 10, 27, 30, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 200, 230, 232, 241, 326, 341, 346, 423, 436], "symbol": [6, 7, 10], "_glapi_tls_curr": [6, 7], "mujoco_env": [6, 7], "libglvnd": [6, 7], "glx": [6, 7], "cos7": [6, 7], "reinstal": [6, 7], "xvfbwrapper": [6, 7], "sysroot": [6, 7], "lib64": [6, 7], "libgldispatch": [6, 7], "offici": [7, 423], "stand": [7, 37, 122, 123, 148, 156, 431, 434], "joint": [7, 420], "contact": [7, 59, 432], "engin": [7, 153, 434], "biomechan": 7, "graphic": 7, "anim": [7, 433], "area": 7, "demand": [7, 428, 439], "fast": [7, 9, 94, 119, 120, 173, 213, 344, 419, 420, 421, 438], "articul": 7, "acquir": [7, 421], "deepmind": [7, 8, 9, 121, 122, 123, 124, 128, 135, 136, 140, 141, 146, 147, 148, 149, 156, 157, 194, 421, 424], "whomev": 7, "licenc": 7, "incorpor": [7, 121, 124, 128, 135, 136, 148, 149, 156, 157, 243, 261, 285, 348, 422, 425, 434], "relianc": 7, "obsolet": 7, "legaci": [7, 23], "pro": [7, 413], "tip": [7, 413], "glfw": [7, 419], "osmesa": 7, "egl": 7, "advic": [7, 439], "sudo": [7, 413], "apt": [7, 433], "libglfw3": 7, "libglew2": 7, "libgl1": 7, "mesa": 7, "libosmesa6": 7, "workflow": [7, 136, 301, 302, 303], "glew": 7, "mesalib": 7, "anaconda": 7, "libgl": 7, "cos6": 7, "menpo": 7, "glfw3": 7, "mujoco_gl": 7, "pyopengl_platform": 7, "mkdir": 7, "earlier": [7, 415, 419, 421, 422, 432, 433, 436], "roboti": 7, "html": [7, 14, 15, 143, 145, 146, 147], "wget": 7, "mujoco210": 7, "tar": 7, "gz": 7, "xf": 7, "charg": [7, 14, 15, 17, 148, 156], "mjkei": 7, "txt": 7, "mjlib_path": 7, "home": [7, 56, 58, 78, 89], "bin": [7, 258, 284, 306, 414], "libmujoco210": 7, "ld_library_path": 7, "mujoco_py_mujoco_path": 7, "mujoco_py_mjkey_path": 7, "reload": 7, "later": [7, 254, 309, 313, 419, 421, 423, 436], "nvidia": [7, 132, 423], "older": [7, 242], "hack": [7, 419], "adatp": 7, "script": [7, 121, 124, 128, 135, 136, 148, 149, 156, 157, 162, 386, 406, 410, 414, 415, 416, 419, 420, 423, 428, 432, 433, 434, 436], "unnot": [7, 211], "mujoco_pi": 7, "cymj": 7, "linuxgpuextensionbuild": 7, "filenam": [7, 91, 420, 436], "troubleshoot": 7, "gl": 7, "h": [7, 102, 182, 184, 188, 214, 228, 262, 263, 264, 266, 267, 268, 271, 378, 420, 436], "eglshim": 7, "fatal": 7, "No": [7, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 30, 35, 48, 49, 54, 55], "directori": [7, 40, 41, 42, 56, 58, 65, 78, 79, 93, 383, 385, 415, 416, 419, 425, 428, 432], "devel": 7, "ubuntu": [7, 132], "libglew": 7, "dev": 7, "cento": 7, "yum": 7, "glu": 7, "disappear": [7, 420, 422, 431], "libstdc": 7, "glibcxx_3": 7, "29": [7, 107, 108], "compil": [7, 14, 15, 16, 23, 27, 34, 39, 50, 60, 61, 64, 67, 72, 73, 74, 92, 93, 94, 95, 96, 100, 103, 107, 108, 109, 114, 115, 117, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241, 242, 262, 263, 266, 267, 293, 358], "libosmesa": 7, "libgcc": 7, "filenotfounderror": 7, "errno": 7, "patchelf": 7, "fatalerror": 7, "gladloadgl": 7, "mj_env": 7, "912": 7, "glfwerror": 7, "65537": 7, "myscript": 7, "runtimeerror": [7, 8, 27, 30, 31, 32, 34, 39, 43, 50, 60, 61, 67, 69, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 205, 230, 232, 241, 326, 346, 415, 439], "job": [7, 18, 19, 20, 22, 64, 73, 74, 102, 436, 438], "slurm": 7, "mjrendercontext": 7, "pyx": 7, "46": [7, 107, 119, 120], "114": 7, "_setup_opengl_context": 7, "opengl_context": 7, "130": 7, "offscreenopenglcontext": 7, "opengl": [7, 432, 433], "global": [7, 27, 34, 39, 50, 60, 61, 64, 67, 72, 73, 74, 102, 121, 124, 128, 135, 136, 148, 149, 150, 151, 156, 157, 230, 241, 286, 295, 309, 313, 356, 416, 419, 432, 433], "cuda_visible_devic": 7, "id": [7, 23, 66, 79, 100, 102, 107, 108, 121, 124, 127, 128, 135, 136, 148, 149, 156, 157, 158, 159, 285, 326, 344, 381, 385, 427, 436], "slurm_step_gpu": 7, "black": [7, 121, 432], "onscreen": 7, "101": 7, "lgl": 7, "libegl": 7, "x11": [7, 433], "xlib": 7, "libx11": 7, "xorg": 7, "attributeerror": [7, 27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241], "nonetyp": 7, "glgeterror": 7, "this_dir": 7, "pwd": 7, "ln": 7, "libglut": 7, "sketch": [8, 416], "n_training_step": 8, "datapoint": [8, 78, 436], "n_data_per_train": 8, "no_grad": [8, 27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 202, 241, 246, 262, 263, 266, 267, 358, 359, 360, 361, 421, 422, 423, 433], "loss_fn": [8, 422, 426, 427, 438], "zero_grad": [8, 27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241, 284, 416, 419, 421, 422, 423, 426, 429, 432, 433, 434], "backpropag": [8, 119, 120, 133, 134, 148, 323, 324, 325, 331, 332, 333, 334, 335, 336, 339, 340, 341, 343, 344, 345, 346, 349, 356, 426, 433, 434], "differenti": [8, 78, 119, 120, 202, 326, 348, 358, 359, 360, 361, 422, 425, 426, 432, 433, 434], "denomin": 8, "artifact": 8, "numer": [8, 64, 128, 239, 265, 293, 294, 300, 305, 306, 309, 310, 311, 312, 313, 394, 421, 436, 439], "misconcept": 8, "freed": 8, "appear": [8, 11, 28, 54, 79, 80, 100, 107, 108, 124, 135, 190, 415, 434, 436], "compuat": 8, "fix": [8, 33, 148, 225, 324, 326, 342, 346, 420, 429, 434, 439], "retain_graph": [8, 119, 120], "discuss": [8, 9, 427, 432, 433], "inplac": [8, 27, 34, 39, 40, 41, 42, 45, 50, 56, 58, 60, 61, 65, 67, 72, 79, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241, 419], "forward": [8, 14, 15, 16, 17, 18, 19, 20, 21, 27, 34, 39, 50, 57, 60, 61, 62, 63, 64, 67, 72, 73, 74, 102, 121, 124, 128, 135, 136, 148, 149, 156, 157, 176, 178, 179, 181, 182, 183, 186, 187, 189, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 206, 209, 210, 211, 212, 213, 215, 218, 219, 222, 223, 224, 225, 226, 227, 230, 231, 235, 236, 238, 239, 241, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 274, 275, 276, 277, 279, 280, 283, 285, 286, 288, 289, 291, 295, 296, 304, 306, 308, 309, 311, 312, 313, 316, 317, 319, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 356, 358, 359, 360, 361, 362, 412, 415, 422, 434, 438], "submodul": [8, 27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 166, 225, 241, 264, 268, 320, 341], "param": [8, 27, 34, 39, 50, 60, 61, 66, 67, 72, 121, 124, 128, 135, 136, 142, 148, 149, 156, 157, 179, 186, 189, 191, 195, 202, 204, 212, 213, 219, 223, 229, 231, 233, 241, 256, 258, 274, 275, 276, 292, 304, 309, 312, 315, 341, 351, 355, 358, 359, 360, 361, 362, 419, 423, 429, 432, 433, 434, 435, 438], "grad": [8, 27, 34, 39, 50, 60, 61, 67, 72, 119, 120, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241, 313, 419, 421], "whose": [8, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 60, 61, 66, 67, 68, 69, 72, 77, 80, 81, 82, 83, 84, 121, 124, 128, 135, 136, 148, 149, 150, 151, 156, 157, 186, 210, 225, 231, 232, 235, 237, 241, 286, 312], "factor": [8, 11, 24, 34, 50, 215, 241, 243, 244, 261, 265, 278, 285, 293, 294, 324, 330, 333, 334, 336, 347, 364, 419, 420, 423, 425, 429, 432, 433, 436, 439], "fit": [8, 61, 206, 225, 242, 415, 416, 419], "brax": [8, 119, 120, 121, 124, 128, 135, 136, 148, 149, 156, 157, 213, 424, 439], "jax": [8, 119, 120, 133, 134, 242], "improperli": 8, "underli": [8, 121, 124, 125, 128, 135, 136, 148, 149, 156, 157, 341, 422, 424, 426, 428, 434], "tedeiou": 8, "priorit": [8, 57, 73, 99, 100, 326, 327, 328, 330, 331, 332, 339, 344, 346, 348, 349, 419, 420, 427, 438], "amount": [8, 148, 285, 420, 436], "costli": [8, 434], "constitut": [8, 420, 433, 434], "profil": 8, "frequent": [8, 45, 436], "program": [8, 331, 339, 423, 439], "functorch": [8, 10], "incl": 8, "suit": [8, 123, 421, 424, 438, 439], "mujoco_instal": 8, "valueerror": [8, 27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241], "bad": 8, "fds_to_keep": 8, "new_shap": 8, "permut": [8, 106, 208, 228, 423, 438, 439], "idea": [9, 344, 416, 422, 425, 432, 433], "introductori": 9, "intro": [9, 421, 422], "dai": [9, 438], "2022": [9, 10, 246, 438], "spin": [9, 122, 123], "hug": 9, "syllabu": 9, "lectur": 9, "awesom": 9, "curat": 9, "succinct": [9, 425], "summari": [9, 206, 239, 419, 420, 421, 422], "reddit": 9, "reagent": 9, "orient": [9, 439], "baselines3": 9, "tf": 9, "bandit": [9, 145], "tensorflow": [9, 272, 273], "kera": 9, "acm": 9, "dopamin": 9, "prototyp": [9, 423, 429], "salina": 9, "tianshou": 9, "eleg": 9, "rlpyt": 9, "rllib": 9, "industri": [9, 438], "grade": 9, "factori": [9, 14, 15, 16, 17, 18, 19, 20, 21, 62, 64, 73, 74, 75, 419], "cherri": 9, "jaxrl": 9, "mbrl": [9, 142, 414], "rlmeta": 9, "light": 9, "elegantrl": 9, "cloud": 9, "mtrl": 9, "baselin": 9, "689": 10, "_torchrl": 10, "_zn8pybind116detail11type_casterin2at6tensoreve4loadens_6handleeb": 10, "colab": [10, 421, 422, 432, 433], "notebook": [10, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439], "24": [10, 108, 127, 143, 144, 284, 308, 378, 432], "pip3": [10, 419, 421, 422, 432, 433], "url": [10, 130], "org": [10, 14, 15, 24, 57, 99, 100, 119, 120, 122, 123, 130, 133, 134, 140, 141, 143, 144, 145, 153, 160, 161, 182, 210, 235, 244, 250, 251, 252, 253, 254, 255, 258, 259, 260, 266, 271, 272, 273, 278, 279, 280, 284, 285, 286, 288, 289, 295, 306, 323, 324, 328, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 342, 343, 345, 346, 347, 348, 358, 363, 371, 411, 430, 435], "whl": 10, "u": [10, 262, 263, 266, 267, 434], "upgrad": 10, "lib_version_her": 10, "pyav": 11, "conveni": [11, 182, 421, 432, 433, 434, 436], "power": [11, 420], "knob": 11, "dispos": 11, "clarifi": 11, "behind": [11, 219, 412], "ultim": [11, 265, 293, 294], "ffmpeg": 11, "whatev": [11, 415, 419], "fed": [11, 433, 436], "feed": [11, 210, 237, 341, 414, 419, 432, 433, 436], "suppos": [11, 148, 391, 416, 439], "snippet": [11, 210, 235, 419], "gave": 11, "extrem": [11, 148, 156, 323, 325, 340, 343, 345], "blurri": [11, 423], "stitch": 11, "exp_nam": [11, 378, 379, 380, 383, 384, 385, 406, 420, 428, 429], "my_exp": [11, 428], "pixels_onli": [11, 122, 123, 127, 129, 130, 153, 419, 420, 428, 429, 438, 439], "my_video": [11, 428], "record_env": [11, 428, 429], "codec": 11, "h264": 11, "crf": 11, "preset": 11, "qualiti": [11, 303, 414], "allow_non": 12, "unwrap": [12, 194, 232, 386], "seealso": 12, "policy_weight": [13, 14, 15, 16, 17, 19, 20], "udpdat": [13, 14, 15, 16, 17, 19, 20], "create_env_fn": [14, 15, 16, 17, 18, 19, 20, 21, 125, 148, 156, 419, 438], "policy_factori": [14, 15, 16, 17, 18, 19, 20, 21], "device_typ": [14, 16, 17, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 210, 235, 237, 248, 249, 250, 251, 252, 253, 254, 260, 269, 274, 275, 277, 278, 283, 286, 312, 393, 404], "env_devic": [14, 15, 16, 17, 18, 19, 20, 21, 420], "create_env_kwarg": [14, 15, 16, 17, 21, 125, 143, 148, 156, 230, 419, 439], "dict": [14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 52, 53, 56, 57, 58, 60, 61, 62, 63, 64, 65, 67, 68, 69, 72, 73, 74, 77, 79, 80, 81, 82, 83, 84, 91, 100, 102, 107, 108, 121, 124, 125, 126, 127, 128, 129, 135, 136, 140, 141, 143, 146, 147, 148, 149, 150, 151, 156, 157, 158, 159, 160, 161, 163, 200, 202, 225, 230, 232, 238, 239, 241, 242, 248, 249, 250, 251, 252, 253, 254, 255, 260, 269, 283, 309, 313, 326, 346, 348, 378, 382, 383, 391, 396, 401, 402, 408, 409, 410, 414, 419, 420, 421, 436, 438, 439], "postproc": [14, 15, 16, 17, 18, 19, 20, 21, 50, 215, 420, 436], "explorationtyp": [14, 15, 16, 17, 18, 19, 20, 21, 309, 341, 391, 414, 419, 420, 421, 422, 425, 432, 438], "interactiontyp": [14, 16, 17, 18, 19, 20, 21, 164, 171, 309, 313, 391], "preemptive_threshold": [14, 15, 17], "num_thread": [14, 15, 17, 40, 41, 42, 56, 58, 65, 79, 148, 156], "num_sub_thread": [14, 15, 17, 148, 156], "str": [14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 89, 91, 93, 99, 100, 102, 113, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 133, 135, 136, 140, 141, 143, 145, 146, 147, 148, 149, 150, 151, 153, 156, 157, 158, 159, 160, 161, 162, 163, 166, 171, 174, 178, 182, 190, 194, 200, 201, 202, 210, 214, 223, 224, 227, 229, 230, 232, 233, 235, 237, 238, 239, 241, 242, 245, 257, 258, 264, 268, 270, 271, 274, 275, 276, 286, 287, 295, 300, 305, 306, 309, 310, 311, 312, 313, 316, 317, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 352, 356, 357, 358, 359, 360, 361, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 410, 420, 421, 423], "set_trunc": [14, 15, 16, 17, 121, 124, 128, 135, 136, 148, 149, 156, 157], "use_buff": [14, 15, 16, 148, 156, 190], "replay_buffer_chunk": 14, "trust_polici": [14, 15, 16, 121, 124, 128, 135, 136, 148, 149, 156, 157], "compile_polici": [14, 15, 16], "cudagraph_polici": [14, 15, 16], "no_cuda_sync": [14, 15, 16], "datacollector": [14, 15, 16, 17, 50, 343, 421, 427, 436], "recept": 14, "safe": [14, 15, 25, 26, 28, 29, 30, 31, 32, 35, 40, 41, 42, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 56, 58, 65, 68, 69, 77, 79, 80, 81, 82, 83, 84, 100, 107, 243, 285, 292, 293, 300, 305, 306, 309, 310, 311, 312, 313, 315, 414, 438], "sota": [14, 15, 142, 198, 345, 387, 401, 419, 420, 438], "guard": [14, 15], "doc": [14, 15, 75, 130, 133, 134, 145, 153, 385, 415, 420, 432, 433, 436], "env_mak": [14, 15, 16, 21, 62, 406, 439], "2000": [14, 15, 16, 50, 78, 131, 284, 378, 436], "50": [14, 15, 16, 21, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 59, 66, 68, 69, 77, 80, 81, 82, 83, 84, 107, 108, 140, 141, 241, 422, 436], "shutdown": [14, 15, 16, 17, 21, 179, 419, 420, 436, 438], "del": [14, 15, 16, 419, 420, 421, 431, 432, 436, 438, 439], "int64": [14, 15, 16, 23, 25, 26, 30, 35, 36, 40, 41, 42, 45, 46, 47, 48, 49, 54, 55, 56, 58, 59, 60, 65, 66, 70, 73, 75, 78, 79, 89, 99, 107, 121, 124, 128, 135, 136, 139, 140, 141, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 175, 179, 190, 194, 208, 215, 223, 258, 285, 287, 305, 306, 309, 310, 311, 414, 434], "subclass": [14, 15, 16, 17, 18, 19, 20, 21, 27, 28, 31, 34, 39, 60, 61, 67, 72, 80, 102, 121, 124, 128, 135, 136, 148, 149, 156, 157, 162, 177, 178, 231, 238, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 276, 279, 280, 283, 285, 288, 289, 291, 296, 304, 306, 308, 311, 312, 313, 314, 316, 319, 341, 343, 420, 422, 427, 434, 436], "tensordictmodulebas": [14, 15, 16, 17, 18, 19, 20, 21, 34, 60, 72, 181, 296, 305, 308, 310, 422], "undergon": [14, 15, 16, 17, 18, 19, 20, 21, 78], "env_obs_kei": [14, 15, 16, 17, 18, 19, 20, 21], "mustn": [14, 15, 16, 17, 18, 19, 20, 21], "pickl": [14, 15, 16, 17, 18, 19, 20, 21, 27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 239, 241], "exclus": [14, 15, 16, 17, 18, 19, 20, 21, 64, 73, 74, 85, 86, 100, 107, 108, 179, 195, 197, 262, 264, 266, 268, 272, 273, 305, 306, 310, 311, 347, 348, 349, 358, 359, 360, 361, 362, 385, 410, 414], "lifespan": [14, 15, 16, 17, 18, 19, 20, 420], "divis": [14, 15, 16, 17, 18, 19, 20, 27, 100, 107, 108, 244, 433], "endless": [14, 15, 16, 17, 18, 19, 20, 190], "fill": [14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 128, 178, 225, 238, 268, 422, 434, 435], "sit": [14, 15, 16, 17, 18, 19, 20, 21, 398, 420], "cast": [14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 60, 61, 65, 67, 68, 69, 72, 77, 79, 80, 81, 82, 83, 84, 89, 119, 120, 121, 122, 123, 124, 127, 128, 129, 133, 134, 135, 136, 143, 144, 146, 147, 148, 149, 153, 156, 157, 158, 159, 175, 176, 178, 179, 181, 182, 183, 186, 187, 189, 191, 193, 194, 195, 196, 198, 201, 202, 209, 210, 211, 212, 213, 215, 218, 219, 222, 223, 224, 225, 226, 227, 230, 231, 232, 235, 236, 237, 238, 239, 241, 312, 432, 439], "span": [14, 15, 16, 17, 18, 19, 20, 21, 100, 107, 108], "n_step": [14, 15, 16, 17, 18, 19, 20, 21, 50, 241, 308, 420, 421, 432, 433], "mainli": [14, 15, 16, 17, 18, 19, 20, 21, 66, 385, 414, 432, 433, 434], "round": [14, 15, 16, 17, 18, 19, 20, 21, 121], "closest": [14, 15, 16, 17, 18, 19, 20, 21], "post": [14, 15, 16, 17, 18, 19, 20, 21, 27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241], "boolm": [14, 15, 17], "update_policy_weight_": [14, 15, 17], "async": [14, 15, 17, 18, 19, 20, 21, 62, 238], "ratio": [14, 15, 17, 66, 419, 421], "finish": [14, 15, 17, 21, 128, 215, 439], "rest": [14, 15, 17, 34, 246, 414, 421, 422, 432, 434, 438], "earli": [14, 15, 17, 50, 128, 223, 438], "safeti": [14, 15, 17, 142, 148, 156], "harm": [14, 15, 17, 148, 156], "add_truncated_kei": [14, 15, 16, 17, 121, 124, 128, 135, 136, 148, 149, 156, 157, 232], "trust": [14, 15, 16, 121, 124, 128, 135, 136, 140, 141, 148, 149, 156, 157, 187, 268], "cudagraphmodul": [14, 15, 16, 121, 124, 128, 135, 136, 148, 149, 156, 157], "behaviour": [14, 15, 16, 34, 60, 72, 422, 423, 438], "kwarg": [14, 15, 16, 17, 21, 26, 27, 28, 29, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 47, 49, 50, 52, 53, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 79, 80, 81, 82, 83, 84, 91, 93, 94, 95, 96, 98, 99, 100, 102, 107, 108, 109, 111, 113, 115, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 169, 170, 176, 177, 179, 186, 210, 212, 221, 225, 230, 231, 232, 234, 236, 237, 240, 241, 243, 245, 247, 248, 249, 251, 252, 253, 254, 257, 260, 261, 264, 265, 268, 269, 270, 271, 274, 275, 276, 281, 285, 294, 296, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 351, 356, 357, 358, 359, 360, 361, 362, 376, 378, 382, 383, 385, 389, 396, 401, 402, 407, 408, 409, 415, 421, 423, 433], "bypass": [14, 15, 16, 425], "isaaclab": [14, 15, 16, 129], "maniskil": [14, 15, 16], "crash": [14, 15, 16, 215], "ordereddict": [14, 15, 16, 17, 21, 27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 200, 230, 232, 239, 241, 326, 346], "worker0": [14, 15, 17], "state_dict0": [14, 15, 17], "worker1": [14, 15, 17], "state_dict1": [14, 15, 17], "reset_idx": [14, 15, 17], "static_se": [14, 15, 16, 17, 21, 121, 124, 128, 135, 136, 148, 149, 156, 157, 232], "increment": [14, 15, 16, 17, 121, 124, 128, 135, 136, 148, 149, 156, 157, 206, 340], "env_fn": [14, 15, 16, 17, 125, 408, 409], "env_fn_parallel": [14, 15, 16, 17], "300": [14, 15, 16, 17, 107, 108, 253, 254], "out_se": [14, 15, 16, 17, 439], "shut": [14, 15, 16, 17], "irrevers": [14, 15, 17], "return_same_td": 16, "interruptor": 16, "cautious": [16, 343], "whole": [16, 27, 31, 32, 34, 39, 43, 50, 60, 61, 67, 69, 72, 78, 121, 124, 128, 135, 136, 148, 149, 156, 157, 200, 230, 232, 241, 309, 326, 346, 387, 419, 421], "_interruptor": 16, "outsid": [16, 191, 230, 415, 428, 432, 433, 434], "start_collect": 16, "stop_collect": 16, "preeptiv": 16, "chunk": [16, 425], "policy_state_dict": 16, "env_state_dict": 16, "exporationtyp": [18, 19, 20], "collector_class": [18, 19, 20, 21], "collector_kwarg": [18, 19, 20, 21], "num_workers_per_collector": [18, 19, 20, 21], "slurm_kwarg": [18, 19, 20], "update_after_each_batch": [18, 19, 20, 21], "max_weight_update_interv": [18, 19, 20, 21], "tcp_port": [18, 19, 20, 22], "deriv": [18, 19, 20, 21, 76, 256, 396], "respect": [18, 19, 20, 27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 180, 186, 189, 193, 204, 210, 211, 220, 225, 231, 232, 235, 237, 241, 262, 266, 274, 289, 312, 317, 323, 325, 340, 343, 345, 358, 360, 361, 392, 415, 421, 422, 432, 433], "subnod": [18, 19, 20, 21], "readi": [18, 20, 21, 413, 420, 421, 423, 425, 428, 436, 438], "fashion": [18, 20, 21, 40, 41, 42, 56, 58, 65, 79, 108], "executor": [18, 19, 20], "distributed_back": [18, 19], "ucc": [18, 19], "overwritten": [18, 19, 20, 21, 45, 121, 124, 128, 135, 136, 148, 149, 156, 157, 197], "submitit_delai": [18, 22], "former": [18, 19, 20, 23, 27, 34, 39, 57, 60, 61, 64, 67, 72, 73, 74, 121, 124, 128, 135, 136, 148, 149, 156, 157, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 276, 279, 280, 283, 285, 288, 289, 291, 296, 304, 306, 308, 311, 316, 319, 419], "whilst": [18, 19, 20], "homonym": [18, 19, 20, 434], "visit": [18, 19, 20, 79], "facebookincub": [18, 19, 20], "tcp": [18, 19, 20, 22], "port": [18, 19, 20, 22, 158], "10003": [18, 19, 20, 22], "worker_rank": [18, 19, 21], "update_interv": 19, "frequenc": [19, 284, 419], "visible_devic": 20, "tensorpipe_opt": 20, "experiment": [20, 23, 54, 309, 313], "tensorpiperpcbackendopt": 20, "ray_init_config": [21, 62], "remote_config": [21, 57, 62, 63, 64, 73, 74, 102], "num_collector": [21, 408, 409, 419, 420], "coordin": [21, 188], "init": [21, 27, 34, 39, 50, 60, 61, 62, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 186, 231, 239, 241, 274, 275, 276, 385, 420, 421], "autodetect": 21, "num_cpu": [21, 62], "num_gpu": [21, 62], "1024": [21, 62, 255, 436], "equat": [21, 60, 79, 128, 239, 285, 322, 325, 347, 421, 424, 434], "exce": [21, 436], "indefinit": [21, 88], "raydistributedcollector": 21, "rayreplaybuff": [21, 412], "enfoc": 21, "distributed_collector": [21, 62], "10000": [21, 148, 244, 396, 422], "add_collector": 21, "async_shutdown": [21, 62], "local_polici": 21, "remote_collector": 21, "stop_remote_collector": 21, "num_job": 22, "tcpport": 22, "submitit_main_conf": 22, "slurm_cpus_per_task": 22, "slurm_gpus_per_nod": 22, "slurm_partit": 22, "timeout_min": 22, "submitit_collection_conf": 22, "delai": [22, 348, 426], "jump": [22, 424], "host": [22, 27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 186, 210, 225, 231, 232, 235, 237, 241, 312], "satellit": 22, "rendezv": 22, "hang": 22, "forev": 22, "default_config": [22, 250, 255, 283, 304], "default_slurm_conf_main": 22, "default_slurm_conf": 22, "rollout_tensordict": 23, "nestedkei": [23, 25, 26, 28, 29, 30, 31, 32, 34, 35, 36, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 58, 60, 65, 68, 69, 70, 72, 77, 78, 79, 80, 81, 82, 83, 84, 100, 107, 108, 121, 124, 128, 135, 136, 148, 149, 152, 156, 157, 168, 173, 174, 175, 176, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 192, 193, 194, 195, 197, 199, 200, 201, 203, 206, 207, 208, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 239, 241, 243, 247, 258, 261, 285, 287, 304, 308, 313, 328, 356, 376, 378], "as_nest": 23, "x": [23, 34, 50, 60, 61, 64, 66, 67, 72, 108, 136, 200, 202, 228, 233, 242, 244, 246, 247, 249, 258, 260, 262, 263, 264, 266, 267, 268, 269, 271, 274, 275, 296, 305, 309, 310, 319, 322, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 396, 419, 423, 432, 434, 436, 438], "durat": [23, 433], "meta": [23, 40, 41, 42, 56, 58, 65, 77, 79, 126, 130, 323, 325, 340, 343, 345, 416, 421, 432, 433, 436], "aren": [23, 224, 422], "eventu": [23, 286, 422, 434], "recov": [23, 107, 108, 314, 331, 339, 431], "layout": 23, "to_padded_tensor": 23, "nested_tensor": [23, 127, 129], "stride": [23, 27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241, 248, 249, 251, 252, 260, 274, 420, 432, 438], "jag": 23, "focu": [23, 419, 420, 421, 423, 425, 426, 427, 432], "team": [23, 432, 433, 438], "cat": [23, 45, 190, 317, 324, 326, 327, 339, 344, 346, 348, 349, 432, 436, 438], "arang": [23, 25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 100, 107, 108, 175, 258, 273, 305, 387, 414, 436], "obs_": 23, "trajectory_id": 23, "int32": [23, 27, 28, 45, 74, 80, 107, 133, 134, 146, 147, 157, 167, 308], "data_split": 23, "got": [23, 427], "init_kl_coef": 24, "horizon": [24, 140, 141, 160, 161, 245, 271, 421], "kl": [24, 33, 66, 202, 335, 340], "describ": [24, 40, 41, 42, 56, 58, 65, 77, 79, 152, 183, 292, 293, 328, 381, 415, 419, 421, 432, 433, 434, 439], "ziegler": 24, "et": [24, 245], "relax": [24, 376], "penalti": [24, 66, 337, 340], "strai": [24, 66], "greater": [24, 100, 107, 108, 190, 203, 204, 264, 268, 326, 419, 420], "increas": [24, 91, 182, 226, 246, 285, 432, 433], "pull": [24, 45, 79, 436], "toward": [24, 237], "aggress": 24, "kl_coef": [24, 33, 66], "arxiv": [24, 57, 99, 100, 119, 120, 122, 123, 133, 134, 140, 141, 143, 144, 153, 160, 161, 182, 210, 235, 244, 250, 251, 252, 253, 254, 255, 258, 259, 260, 266, 271, 278, 279, 280, 284, 285, 286, 288, 289, 295, 306, 323, 324, 328, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 342, 343, 346, 347, 348, 358, 363, 371, 435], "pdf": [24, 182, 250, 251, 252, 253, 254, 258, 284, 285, 306, 326, 333, 337, 344, 347, 348, 358, 363, 371], "1909": 24, "08593": 24, "lm": 24, "blob": 24, "master": [24, 432, 433], "lm_human_prefer": 24, "train_polici": 24, "kl_valu": 24, "coef": [24, 202], "newest": 24, "int8": [25, 124, 139, 150, 151, 180], "encod": [25, 26, 27, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 57, 68, 69, 77, 80, 81, 82, 83, 84, 119, 120, 124, 127, 129, 130, 133, 134, 143, 144, 146, 147, 153, 158, 159, 175, 192, 280, 281, 284, 288, 322, 420, 421, 422, 425, 434, 436], "null": [25, 28, 29, 31, 32, 34, 43, 44, 52, 53, 57, 68, 69, 73, 77, 80, 81, 82, 83, 84, 99, 100, 180, 200], "denot": [25, 433], "clariti": [25, 45], "assert_is_in": [25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84], "cardin": [25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 79, 80, 81, 82, 83, 84, 121, 124, 128, 135, 136, 148, 149, 156, 157, 258, 287, 305, 306, 311, 421], "outcom": [25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 256, 273, 292, 341, 432], "cartesian": [25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84], "clear_device_": [25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84], "is_in": [25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 439], "np": [25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 128, 316, 376, 423, 432, 434], "ndarrai": [25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 128, 285, 316, 376, 423, 432], "ignore_devic": [25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84], "arrai": [25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 57, 66, 68, 69, 77, 80, 81, 82, 83, 84, 99, 121, 124, 128, 129, 135, 136, 148, 149, 156, 157, 190, 194, 262, 263, 266, 267, 419, 432], "use_mask": [25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 150, 151], "compliant": [25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84], "singleton": [25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 248, 249, 269, 290, 291, 412, 415], "start_dim": [25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84], "end_dim": [25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84], "classmethod": [25, 26, 28, 29, 30, 31, 32, 35, 40, 41, 42, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 62, 63, 64, 65, 68, 69, 72, 73, 74, 77, 79, 80, 81, 82, 83, 84, 102, 121, 124, 128, 135, 136, 148, 149, 156, 157, 200, 235, 242, 249, 250, 283], "implements_for_spec": [25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84], "torch_funct": [25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84], "index_typ": [25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 52, 53, 68, 69, 77, 80, 81, 82, 83, 84], "tensor_to_index": [25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84], "exanpl": [25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84], "one_hot": [25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 258, 273, 287], "categ": [25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 309], "to_categorical_spec": [25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84], "idx_one_hot": [25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84], "idx_categ": [25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84], "to_categor": [25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84], "make_neg_dim": [25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84], "convert": [25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 60, 61, 65, 67, 68, 69, 71, 72, 77, 78, 79, 80, 81, 82, 83, 84, 119, 120, 121, 124, 127, 128, 129, 130, 133, 134, 135, 136, 143, 144, 146, 147, 148, 149, 153, 156, 157, 158, 159, 186, 189, 190, 193, 210, 225, 231, 232, 235, 237, 239, 241, 312, 322, 341, 419, 420, 421, 434, 436], "shortcut": [25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 434, 439], "ndimens": [25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 419], "violat": [25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 414], "proxi": [25, 26, 28, 29, 30, 31, 32, 35, 40, 41, 42, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 56, 58, 65, 68, 69, 77, 79, 80, 81, 82, 83, 84, 273, 281, 309, 415], "project": [25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 61, 68, 69, 77, 80, 81, 82, 83, 84, 192, 243, 266, 285, 300, 305, 306, 309, 310, 311, 312, 313, 385, 414, 438, 439], "uniformli": [25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 101, 341, 439], "normal": [25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 63, 68, 69, 77, 80, 81, 82, 83, 84, 121, 124, 128, 135, 136, 148, 149, 156, 157, 206, 239, 243, 244, 248, 249, 265, 269, 272, 273, 293, 294, 309, 313, 325, 326, 340, 343, 391, 394, 410, 414, 416, 422, 425, 433, 439], "drawn": [25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 225, 261, 309, 313, 421, 432, 433], "set_provisional_n": [25, 26, 30, 35, 46, 47], "temporarili": [25, 26, 30, 35, 46, 47, 91, 121, 124, 128, 135, 136, 148, 149, 156, 157, 162, 427, 436], "dest": [25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 72, 77, 80, 81, 82, 83, 84, 210, 235, 237, 312], "to_numpi": [25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 121, 124, 128, 135, 136, 148, 149, 156, 157], "transformed_in": [25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 232, 292, 410], "check_spec_encod": [25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84], "to_one_hot": [25, 26, 30, 35, 46, 47, 48, 49, 54, 55], "hot": [25, 26, 30, 35, 46, 47, 48, 49, 54, 55, 119, 120, 127, 129, 130, 133, 134, 140, 141, 143, 144, 146, 147, 150, 151, 153, 158, 159, 160, 161, 175, 176, 192, 258, 281, 282, 287, 305, 306, 310, 311, 323, 324, 326, 327, 328, 330, 331, 332, 333, 334, 339, 341, 343, 344, 345, 346, 348, 349, 356, 422], "categ_sampl": [25, 26, 30, 35, 48, 49, 54, 55], "onehot_sampl": [25, 26, 30, 35, 48, 49], "to_one_hot_spec": [25, 26, 30, 35, 46, 47, 48, 49, 54, 55], "categoricalbox": [25, 26, 30, 35, 48, 49, 54, 55, 149], "type_check": [25, 26, 28, 29, 30, 31, 32, 35, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84], "update_mask": [25, 26, 30, 35, 46, 47, 48, 49, 54, 55], "disabl": [25, 26, 27, 30, 34, 35, 39, 46, 47, 48, 49, 50, 54, 55, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 232, 241, 265, 294, 376, 419, 432, 433], "unmask": [25, 26, 30, 35, 46, 47, 48, 49, 54, 55], "ts": [25, 26, 30, 35, 46, 47, 48, 49, 54, 55], "num_bit": 27, "convert_to_binari": 27, "decim": 27, "1001": 27, "bit": [27, 200, 421, 422, 424, 432, 433, 436], "heavysid": 27, "binary_to_decim": 27, "add_modul": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241], "child": [27, 34, 39, 45, 50, 60, 61, 67, 72, 79, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241, 420], "fn": [27, 34, 39, 50, 59, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 200, 233, 241, 408, 409], "recurs": [27, 31, 32, 34, 39, 43, 50, 60, 61, 67, 69, 72, 85, 86, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241, 341, 423], "init_weight": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241], "m": [27, 34, 39, 46, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 192, 241, 247, 313, 420, 434], "fill_": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241, 420, 422], "net": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241, 252, 254, 257, 260, 275, 323, 324, 326, 332, 339, 343, 344, 345, 346, 406, 420, 434, 435, 438], "in_featur": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 186, 210, 225, 231, 232, 235, 237, 241, 248, 249, 251, 252, 253, 254, 260, 269, 274, 275, 277, 278, 301, 312, 320, 328, 330, 423, 425, 426], "out_featur": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 142, 148, 149, 156, 157, 186, 210, 225, 231, 232, 235, 237, 241, 245, 248, 249, 251, 252, 253, 254, 259, 260, 264, 268, 269, 271, 274, 275, 277, 278, 301, 305, 312, 320, 328, 330, 414, 419, 422, 423, 425, 426, 429, 438], "bia": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 186, 200, 210, 225, 230, 231, 232, 235, 237, 241, 244, 248, 249, 251, 252, 253, 254, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 275, 277, 278, 285, 312, 319, 321, 322, 326, 341, 346, 415, 419, 420, 421, 422, 433], "requires_grad": [27, 34, 39, 50, 60, 61, 67, 72, 119, 120, 121, 124, 128, 135, 136, 148, 149, 156, 157, 202, 230, 232, 241, 284, 313, 326, 346], "bfloat16": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241], "datatyp": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241, 436], "member": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241, 341, 378], "xdoctest": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 186, 200, 210, 225, 230, 231, 232, 235, 237, 241, 312, 326, 341, 346], "buf": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241], "20l": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241, 341], "1l": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241, 341], "5l": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241, 341], "__call__": [27, 34, 39, 50, 59, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241, 313, 416], "doubl": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 186, 189, 191, 193, 210, 225, 231, 232, 235, 237, 241, 312, 328, 333, 338, 344, 347, 356, 419, 420, 421, 422, 439], "eval": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 232, 239, 241, 246, 414, 419, 420, 421], "evalu": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 129, 135, 136, 140, 141, 148, 149, 156, 157, 232, 241, 246, 256, 272, 273, 281, 294, 344, 401, 402, 420, 421, 429], "dropout": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 232, 241, 246, 247, 262, 264, 266, 268, 269, 414, 422], "batchnorm": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 232, 241, 244], "comparison": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 232, 241, 341, 419, 420], "extra_repr": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241], "recip": [27, 34, 39, 59, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 276, 279, 280, 283, 285, 288, 289, 291, 296, 304, 306, 308, 311, 316, 319], "get_buff": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241], "get_submodul": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241], "qualifi": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241], "referenc": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241], "resolv": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241], "someth": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 139, 148, 149, 156, 157, 241, 413, 420, 421, 434, 439], "get_extra_st": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 239, 241], "set_extra_st": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 239, 241], "picklabl": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 239, 241], "get_paramet": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241], "net_b": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241], "net_c": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241], "conv": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241, 248, 249, 420], "conv2d": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241, 249, 251, 252, 260, 274], "kernel_s": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241, 248, 249, 251, 252, 260, 274, 279, 420, 438], "diagram": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241], "degre": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 187, 241], "named_modul": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241], "half": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 186, 210, 225, 231, 232, 235, 237, 241, 312, 419], "ipu": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241], "strict": [27, 34, 39, 40, 41, 42, 50, 56, 58, 60, 61, 65, 67, 72, 79, 121, 124, 128, 135, 136, 148, 149, 156, 157, 230, 232, 241, 326, 346, 423], "descend": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 230, 232, 241, 326, 346], "get_swap_module_params_on_convers": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 230, 232, 241, 326, 346], "persist": [27, 34, 37, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 173, 200, 230, 232, 241, 326, 346], "preserv": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 230, 232, 241, 326, 346], "missing_kei": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 230, 232, 241, 326, 346], "unexpected_kei": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 230, 232, 241, 326, 346], "namedtupl": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 230, 232, 241, 326, 346], "l": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241, 262, 266, 357, 421, 434], "idx": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241], "mtia": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241], "named_buff": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241], "remove_dupl": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241, 341], "prepend": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241, 341, 423], "running_var": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241], "named_children": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241], "conv4": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241], "conv5": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241], "memo": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241], "named_paramet": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 202, 241, 341], "register_backward_hook": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241], "removablehandl": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241], "favor": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241, 421], "register_full_backward_hook": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241], "register_buff": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241], "running_mean": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241], "alongsid": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241, 428], "num_featur": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241, 244], "register_forward_hook": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241, 258, 287], "with_kwarg": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241], "always_cal": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241], "register_module_forward_hook": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241], "regardless": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241, 325, 340, 343], "register_forward_pre_hook": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241], "invok": [27, 34, 39, 50, 60, 61, 63, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241], "And": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241, 426], "forward_pr": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241], "register_module_forward_pre_hook": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241], "grad_input": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241], "grad_output": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241], "technic": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241, 420, 422, 423, 425], "caller": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241], "register_module_full_backward_hook": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241], "register_full_backward_pre_hook": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241], "backward_pr": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241], "register_module_full_backward_pre_hook": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241], "register_load_state_dict_post_hook": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241], "incompatible_kei": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241], "thrown": [27, 34, 39, 50, 60, 61, 67, 68, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241, 436], "register_load_state_dict_pre_hook": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241], "local_metadata": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241], "error_msg": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241], "noqa": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241], "b950": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241], "register_modul": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241, 416], "alia": [27, 34, 39, 50, 57, 60, 61, 62, 63, 64, 67, 72, 73, 74, 79, 93, 94, 95, 96, 102, 109, 111, 115, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 342, 343, 344, 345, 346, 348, 349, 356, 362], "register_paramet": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241], "register_state_dict_post_hook": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241], "register_state_dict_pre_hook": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241], "keep_var": [27, 34, 39, 40, 41, 42, 50, 56, 58, 60, 61, 65, 67, 72, 79, 121, 124, 128, 135, 136, 148, 149, 156, 157, 200, 230, 232, 241, 326, 346], "requires_grad_": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241, 423], "autograd": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 200, 230, 232, 241, 326, 346], "freez": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 239, 241], "finetun": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241], "gan": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241], "set_submodul": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241], "share_memori": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 125, 128, 135, 136, 148, 149, 156, 157, 241, 419], "share_memory_": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241, 438], "destin": [27, 34, 39, 40, 41, 42, 50, 56, 58, 60, 61, 65, 67, 72, 79, 121, 124, 128, 135, 136, 148, 149, 156, 157, 173, 181, 189, 191, 193, 200, 230, 232, 235, 239, 241, 326, 346, 378], "averag": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 200, 230, 232, 239, 241, 285, 326, 334, 335, 346, 394, 419, 421], "shallow": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 200, 230, 232, 241, 326, 346, 422], "pleas": [27, 34, 39, 50, 60, 61, 67, 72, 76, 121, 124, 127, 128, 135, 136, 148, 149, 150, 151, 156, 157, 179, 182, 200, 226, 230, 232, 241, 274, 275, 276, 326, 346, 413], "design": [27, 34, 39, 50, 52, 54, 60, 61, 67, 72, 105, 111, 118, 121, 124, 128, 135, 136, 140, 141, 148, 149, 156, 157, 175, 182, 200, 211, 230, 232, 241, 304, 323, 324, 325, 326, 331, 332, 333, 334, 335, 336, 339, 340, 341, 343, 344, 345, 346, 349, 356, 412, 419, 420, 421, 422, 424, 425, 426, 431, 432, 433, 434, 436, 438, 439], "detach": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 200, 230, 232, 241, 326, 337, 341, 346, 348, 358, 359, 360, 361, 419], "non_block": [27, 34, 39, 40, 41, 42, 50, 56, 58, 60, 61, 65, 67, 72, 79, 121, 124, 128, 135, 136, 148, 149, 156, 157, 186, 210, 225, 231, 232, 235, 237, 241, 312, 422], "memory_format": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 186, 210, 225, 231, 232, 235, 237, 241, 312], "channels_last": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 186, 210, 225, 231, 232, 235, 237, 241, 312], "unchang": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 186, 192, 210, 225, 231, 232, 235, 237, 241, 261, 312, 378, 393, 419, 436], "tri": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 186, 210, 225, 231, 232, 235, 237, 241, 312, 428], "pin": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 186, 210, 225, 231, 232, 235, 237, 241, 312], "4d": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 186, 210, 225, 231, 232, 235, 237, 241, 312], "ignore_w": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 186, 210, 225, 231, 232, 235, 237, 241, 312], "1913": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 186, 210, 225, 231, 232, 235, 237, 241, 312], "3420": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 186, 210, 225, 231, 232, 235, 237, 241, 312], "5113": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 186, 210, 225, 231, 232, 235, 237, 241, 312], "2325": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 186, 210, 225, 231, 232, 235, 237, 241, 312], "torch_doctest_cuda1": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 186, 210, 225, 231, 232, 235, 237, 241, 312], "gpu1": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 186, 210, 225, 231, 232, 235, 237, 241, 312], "1914": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 186, 210, 225, 231, 232, 235, 237, 241, 312], "5112": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 186, 210, 225, 231, 232, 235, 237, 241, 312], "2324": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 186, 210, 225, 231, 232, 235, 237, 241, 312], "float16": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 186, 210, 225, 231, 232, 235, 237, 241, 263, 267, 312], "cdoubl": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 186, 210, 225, 231, 232, 235, 237, 241, 312], "3741": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 186, 210, 225, 231, 232, 235, 237, 241, 312], "j": [27, 34, 39, 50, 57, 60, 61, 67, 72, 99, 100, 121, 124, 128, 135, 136, 148, 149, 156, 157, 186, 210, 225, 231, 232, 235, 237, 241, 312, 416, 426], "2382": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 186, 210, 225, 231, 232, 235, 237, 241, 312], "5593": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 186, 210, 225, 231, 232, 235, 237, 241, 312], "4443": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 186, 210, 225, 231, 232, 235, 237, 241, 312], "complex128": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 186, 210, 225, 231, 232, 235, 237, 241, 312], "6122": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 186, 210, 225, 231, 232, 235, 237, 241, 312], "1150": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 186, 210, 225, 231, 232, 235, 237, 241, 312], "to_empti": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241], "dst_type": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241], "xpu": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241], "set_to_non": [27, 34, 39, 50, 60, 61, 67, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 241], "upper": [28, 105, 205], "continuousbox": [28, 31, 80, 121, 124, 128, 135, 136, 148, 149, 156, 157, 167, 200, 203, 225, 233], "provision": 30, "descript": [31, 160, 178, 420, 421], "akin": 31, "unnam": 31, "compositespec": [31, 412, 434, 439], "constraint": [31, 142, 293, 421, 432, 433], "data_cl": 31, "tensorclass": [31, 40, 41, 42, 56, 58, 65, 79, 89, 93, 95, 115], "pixels_spec": 31, "observation_vector_spec": 31, "composite_spec": 31, "observation_vector": [31, 183, 419], "_nodefault": [31, 32, 43, 69], "is_empti": [31, 32, 43, 69, 434], "include_nest": [31, 32, 43, 69], "leaves_onli": [31, 32, 43, 69], "is_leaf": [31, 32, 43, 69], "_compositespecitemsview": [31, 32, 43, 69], "_compositespeckeysview": [31, 32, 43, 69], "reflect": [31, 32, 43, 69, 129, 150, 151, 173, 200, 238, 341, 399, 420, 421, 422, 433], "lock_": [31, 32, 43, 69], "propag": [31, 32, 43, 69, 323, 325, 326, 327, 331, 332, 339, 340, 343, 344, 345, 346, 348, 349, 358, 359, 360, 361, 421, 432, 433], "succeed": [31, 32, 43, 69, 200, 233], "pop": [31, 32, 43, 69], "keyerror": [31, 32, 43, 69, 232], "extract": [31, 32, 43, 69, 178, 200, 229, 233, 307, 419, 421, 438], "selected_kei": [31, 32, 43, 69, 219, 419], "unlock_": [31, 32, 43, 69], "_compositespecvaluesview": [31, 32, 43, 69], "multipli": [33, 246, 262, 266, 323, 324, 325, 326, 332, 340, 342, 343, 344, 346, 394, 419, 432], "calcul": [33, 66, 215, 262, 323, 325, 330, 340, 343, 345, 348], "reassign": 34, "reward2go": [34, 412], "reward_key_out": 34, "time_dim": [34, 358, 360, 361, 363, 364, 367, 368, 369, 370, 371, 372, 373, 374, 375], "unrol": [34, 334, 363, 364, 367, 368, 369, 370, 371, 372, 373, 374, 375], "discount": [34, 50, 125, 215, 241, 324, 330, 333, 334, 336, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 415, 420, 421, 432, 433], "lastrewardtotraj": 34, "last_reward_to_traj": 34, "new_tensordict": 34, "is_tdmodule_compat": [34, 60, 72], "reset_out_kei": [34, 60, 72], "orign": [34, 60, 72], "mod": [34, 60, 72, 202, 247, 264, 268, 308, 313, 316, 422, 423, 429], "select_out_kei": [34, 60, 72, 323, 324, 326, 327, 331, 332, 339, 343, 344, 346, 348, 349, 423], "reset_parameters_recurs": [34, 60, 72, 341], "relu": [34, 60, 72, 142, 245, 255, 271, 322], "old_param": [34, 60, 72], "bork": [34, 60, 72], "dork": [34, 60, 72], "reset_paramet": [34, 60, 72, 276], "from_modul": [34, 60, 72, 258, 312, 315, 438], "rid": [34, 60, 72], "out_keys_sourc": [34, 60, 72], "rubric": [34, 60, 72, 206, 315], "revert": [34, 60, 72, 121, 124, 128, 135, 136, 148, 149, 156, 157, 162, 425, 436], "seq": [34, 60, 72, 247, 262, 264, 266, 268, 308, 422, 423, 429, 431], "z": [34, 60, 72, 263], "shift_kei": [36, 38, 51, 70], "is_full_kei": [36, 38, 51, 70], "is_ful": [36, 38, 51, 70], "tempfil": [36, 40, 41, 42, 56, 57, 58, 62, 63, 64, 65, 70, 73, 74, 78, 79, 93, 102, 406, 419, 420, 422, 423, 427, 432, 435, 436], "register_save_hook": [36, 57, 62, 63, 64, 70, 73, 74, 102], "temporarydirectori": [36, 40, 41, 42, 56, 57, 58, 62, 63, 64, 65, 70, 73, 74, 78, 79, 102, 419, 420, 422, 423, 427, 432, 435, 436], "tmpdir": [36, 57, 62, 63, 64, 70, 73, 74, 78, 102, 419, 420, 423, 432], "rb_load": [36, 57, 62, 63, 64, 73, 74, 102], "register_load_hook": [36, 57, 62, 63, 64, 73, 74, 102], "filesystem": [37, 436], "ted2nest": [38, 412], "tokens_respons": [40, 42, 135], "attention_mask": [40, 41, 56, 58, 59, 65, 66, 75, 78, 89, 135], "token_list": [40, 41, 42], "tokens_response_list": [40, 42], "log_prob": [40, 42, 66, 256, 272, 273, 281, 284, 294, 313, 326, 415], "text": [40, 41, 42, 59, 66, 75, 135, 136, 262, 263, 266, 267, 285, 421], "text_respons": [40, 135], "copy_exist": [40, 41, 42, 56, 58, 65, 79], "return_earli": [40, 41, 42, 56, 58, 65, 79], "share_non_tensor": [40, 41, 42, 56, 58, 65, 79], "memmap": [40, 41, 42, 56, 58, 65, 79, 93, 148, 156, 239, 378, 380, 393], "dataclass": [40, 41, 42, 56, 58, 65, 77, 79, 341], "from_tensordict": [40, 41, 42, 56, 58, 65, 79], "non_tensordict": [40, 41, 42, 56, 58, 65, 79], "getattr": [40, 41, 42, 56, 58, 65, 79], "load_memmap": [40, 41, 42, 56, 58, 65, 79], "load_": [40, 41, 42, 56, 58, 65, 79], "load_memmap_": [40, 41, 42, 56, 58, 65, 79], "fetch": [40, 41, 42, 56, 58, 65, 79, 119, 120, 122, 123, 202, 425, 435, 436], "fromkei": [40, 41, 42, 56, 58, 65, 79], "saved_td": [40, 41, 42, 56, 58, 65, 79], "td_load": [40, 41, 42, 56, 58, 65, 79], "fake": [40, 41, 42, 56, 58, 65, 79, 121, 124, 128, 135, 136, 148, 149, 156, 157, 419, 420, 423], "_subclass": [40, 41, 42, 56, 58, 65, 79], "faketensormod": [40, 41, 42, 56, 58, 65, 79], "faketensor": [40, 41, 42, 56, 58, 65, 79], "from_flatten": [40, 41, 42, 56, 58, 65, 79], "attemptedli": [40, 41, 42, 56, 58, 65, 79], "existsok": [40, 41, 42, 56, 58, 65, 79, 93], "mimic": [40, 41, 42, 56, 58, 65, 79, 121, 124, 128, 135, 136, 148, 149, 156, 157], "cross": [40, 41, 42, 56, 58, 65, 79, 245], "tensordictfutur": [40, 41, 42, 56, 58, 65, 79], "serialis": [40, 41, 42, 56, 58, 65, 79], "deepli": [40, 41, 42, 56, 58, 65, 79], "memmap_": [40, 41, 42, 56, 58, 65, 79, 239], "memmap_lik": [40, 41, 42, 56, 58, 65, 79], "contentless": [40, 41, 42, 56, 58, 65, 79], "1_000_000": [40, 41, 42, 56, 57, 58, 62, 63, 64, 65, 73, 74, 79, 102, 107, 419, 422, 432], "alloc": [40, 41, 42, 56, 58, 65, 79, 95, 256, 272, 273, 419], "memmap_refresh_": [40, 41, 42, 56, 58, 65, 79], "refresh": [40, 41, 42, 56, 58, 65, 79, 429, 432, 433], "saved_path": [40, 41, 42, 56, 58, 65, 79], "setattr": [40, 41, 42, 56, 58, 65, 79], "tent": [40, 41, 42, 56, 58, 65, 78, 79], "to_tensordict": [40, 41, 42, 56, 58, 65, 79, 422], "retain_non": [40, 41, 42, 56, 58, 65, 79], "discrard": [40, 41, 42, 56, 58, 65, 79], "switch": [40, 41, 42, 56, 58, 65, 79, 232, 265, 294, 376], "stackedcomposit": [43, 412], "tensordictmap": [45, 412], "observation_kei": [45, 121, 124, 128, 135, 136, 148, 149, 156, 157], "excluded_kei": [45, 195], "consolid": [45, 72, 86, 95], "lazili": [45, 94, 275, 434], "from_tensordict_pair": [45, 72], "querymodul": [45, 72], "get_keys_from_env": 45, "cattensor": [45, 121, 124, 128, 135, 136, 148, 149, 156, 157, 419, 431, 434, 439], "unsqueezetransform": [45, 182, 434, 436], "oracl": 45, "obs_kei": 45, "state_kei": [45, 121, 124, 128, 135, 136, 148, 149, 156, 157], "reset_st": 45, "rollout0": 45, "rollout1": 45, "rollout1b": 45, "collaps": 45, "max_length": [45, 56, 58, 59, 75, 78, 79, 89, 190, 229, 423, 429], "valid_path": [45, 79], "assert_clos": [45, 264, 268], "subtre": [45, 79], "intersect": [45, 242], "Or": [45, 154, 155, 274], "rollout_from_path": [45, 79], "plot": [45, 79, 419, 421, 422, 432, 433, 434], "_nestedkei": [45, 121, 124, 128, 135, 136, 148, 149, 156, 157], "return_nod": 45, "diverg": [45, 202, 264, 268, 309, 313, 335, 340], "endpoint": 45, "noth": [45, 136, 419, 421], "r0": [45, 419], "123": [45, 79], "392": [45, 79], "989": [45, 79], "809": [45, 79], "847": [45, 79], "r1": 45, "235": 45, "td_root": [45, 79], "node_data": [45, 79], "node_id": [45, 79], "nontensordata": [45, 52, 121, 146, 147, 190, 200, 229, 233, 376], "_parent": [45, 79], "nontensorstack": [45, 52, 94, 121, 136, 190, 200, 229, 233], "weakref": [45, 79], "0x716eeb78fbf0": 45, "0x": 45, "4341220243998689835": 45, "6745467818783115365": 45, "win": [45, 79], "to_str": [45, 79], "node_format_fn": [45, 79], "indent": [45, 79], "rollouts_data": [45, 79], "456": [45, 79], "359": [45, 79], "3094": [45, 79], "75": [45, 79, 107], "948": [45, 79], "68": [45, 79, 107], "9045": [45, 79], "rollout_data": [45, 79], "nvec": [46, 48], "remove_singleton": 46, "ax": [46, 277, 278, 432], "Not": [46, 47, 64, 119, 120, 133, 230, 264, 268], "neither": [46, 47, 48, 49, 158, 434], "use_regist": [48, 54], "mone_hot": [48, 49], "boxlist": [48, 49], "gamma": [50, 215, 241, 271, 323, 324, 326, 327, 328, 330, 332, 333, 334, 336, 339, 341, 343, 344, 345, 346, 348, 349, 350, 351, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 406, 415, 419, 420, 421, 432, 433, 438], "sutton": [50, 415, 432, 433], "1988": 50, "tempor": [50, 264, 268, 271, 359, 360, 365, 366], "44": [50, 107], "ahead": [50, 241, 439], "bias": [50, 262, 263, 266, 267, 319, 415, 419], "mitig": [50, 182], "multisteptransform": [50, 412], "99": [50, 215, 239, 271, 336, 351, 357, 364, 406, 419, 420, 421, 423, 426, 429, 432, 433, 438], "nontermin": 50, "original_reward": 50, "newli": [50, 121, 124, 128, 135, 136, 148, 149, 156, 157], "OR": 50, "row": [51, 71, 133, 134, 203], "example_data": [52, 135, 190], "conform": 52, "templat": [52, 379], "randomli": [52, 106, 157, 205, 206, 225, 261, 309, 313, 425, 432, 433, 434, 436], "unidimension": 54, "action_valu": [54, 257, 258, 287, 305, 306, 310, 311, 326, 332, 341, 356, 414, 422, 423, 425, 429], "keepdim": 54, "chosen_action_valu": [54, 286, 287, 295, 310, 311, 356, 414, 422, 425], "priori": 54, "uniqu": [54, 79, 107, 108, 136, 140, 141, 182, 194, 224, 225, 226, 230, 308, 385, 427, 436], "tensor_spec": [54, 152, 174, 176, 331, 332, 343, 345], "one_hot_sampl": [54, 55], "chosen_data": [56, 89], "rewarddata": [56, 89, 412], "rejected_data": [56, 89], "from_dataset": [56, 58, 89], "dataset_nam": [56, 58, 66, 78, 89, 145], "550": [56, 58, 66, 78, 89, 107, 108], "root_dir": [56, 58, 78, 89], "from_disk": [56, 58, 78, 89], "carperai": [56, 58, 66, 78], "openai_summarize_comparison": [56, 58, 78], "load_from_disk": [56, 58, 78, 89], "load_dataset": [56, 58, 78, 89], "92534": 56, "input_id": [56, 58, 59, 65, 66, 75, 78, 89, 135, 136], "end_scor": [56, 65, 66, 89], "sub_data": [56, 58], "alpha": [57, 73, 99, 100, 248, 249, 251, 252, 253, 254, 260, 274, 324, 326, 332, 342, 344, 346, 348, 419, 436, 438], "ep": [57, 73, 99, 100, 206, 239, 244, 285, 325, 347, 394, 415, 419, 420, 422, 423, 426, 429], "1e": [57, 73, 99, 100, 206, 239, 244, 256, 259, 292, 419, 420, 421, 433], "08": [57, 73, 99, 100], "pin_memori": [57, 64, 73, 74, 209, 419, 438], "schaul": [57, 99, 100], "quan": [57, 99, 100], "antonogl": [57, 99, 100], "silver": [57, 99, 100], "2015": [57, 99, 100], "ab": [57, 99, 100, 119, 120, 122, 123, 133, 134, 140, 141, 143, 144, 153, 160, 161, 181, 210, 235, 239, 244, 250, 255, 259, 260, 266, 271, 278, 279, 280, 286, 288, 289, 295, 323, 324, 328, 329, 330, 331, 334, 335, 336, 338, 339, 342, 343, 346, 435], "1511": [57, 99, 100, 260], "05952": [57, 99, 100], "expon": [57, 73, 99, 100], "\u03b1": [57, 73, 99, 100], "delta": [57, 73, 99, 100, 262, 266, 292, 309, 313, 412, 415, 432], "1_000": [57, 64, 73, 74, 432, 436], "mini": [57, 64, 73, 74, 433], "decid": [57, 64, 73, 74, 432, 438], "incompat": [57, 64, 73, 74, 345, 436], "drop_last": [57, 64, 73, 74, 106, 108], "notion": [57, 64, 73, 74, 284], "caution": [57, 64, 73, 74, 106, 121, 124, 128, 135, 136, 148, 149, 156, 157, 162, 439], "codebas": [57, 64, 73, 74, 434], "return_info": [57, 62, 63, 64, 73, 74, 99, 100, 102, 436], "tensordictprioritizedreplaybuff": [57, 412, 438], "simplifi": [57, 170, 425, 434, 436], "_weight": [57, 73, 99, 100], "update_prior": [57, 99, 100, 393, 416, 420, 436, 438], "36278465": 57, "invert": [57, 62, 63, 64, 73, 74, 102, 321, 421], "as_remot": [57, 62, 63, 64, 73, 74, 102], "cl": [57, 62, 63, 64, 73, 74, 102, 420], "quantiti": [57, 62, 63, 64, 73, 74, 102], "reserv": [57, 62, 63, 64, 73, 74, 102, 416], "default_remote_class_config": [57, 62, 63, 64, 73, 74, 102], "tqdm": [57, 62, 63, 64, 73, 74, 102, 396, 419, 421, 422, 432, 433, 434], "randomsampl": [57, 62, 63, 64, 73, 74, 102, 419, 432], "td_error": [57, 62, 63, 64, 73, 74, 102, 326, 327, 328, 330, 331, 332, 333, 339, 341, 344, 346, 348, 349, 356, 419, 436, 438], "update_tensordict_prior": [57, 62, 63, 64, 73, 74, 102, 419, 436, 438], "insert_transform": [57, 62, 63, 64, 73, 74, 102, 177, 232], "insert": [57, 62, 63, 64, 73, 74, 92, 102, 103, 113, 114, 117, 118, 177, 182, 186, 222, 232, 234], "set_sampl": [57, 62, 63, 64, 73, 74, 102], "set_storag": [57, 62, 63, 64, 73, 74, 102], "set_writ": [57, 62, 63, 64, 73, 74, 102], "write_count": [57, 62, 63, 64, 73, 74, 102], "prompt_rindex": [58, 59, 66], "promptdatatldr": 58, "116722": 58, "prompt": [59, 66, 135, 190], "return_tensordict": [59, 75], "tensodict": [59, 75], "valid_sampl": 59, "eough": 59, "toknen": 59, "meet": 59, "criterion": 59, "autotoken": [59, 75, 78], "from_pretrain": [59, 66, 75, 136], "gpt2": [59, 66, 75, 78, 136, 250, 255, 283], "pad_token": [59, 75], "eos_token": 59, "enough": [59, 436], "inde": [59, 192, 421, 423, 434], "index_kei": [60, 72], "hash_kei": 60, "_hash": 60, "hash_modul": [60, 67, 72], "siphash": [60, 61, 72, 136], "hash_to_int": 60, "hashtoint": 60, "query_modul": [60, 72], "key1": [60, 72, 183, 222, 387, 395, 438], "key2": [60, 72, 183, 222, 387, 395, 438], "write_hash": 60, "n_compon": 61, "dtype_cast": 61, "as_tensor": [61, 67, 423], "init_method": 61, "emb": [61, 422], "sklearn": [61, 145], "byte": [61, 67, 176, 178, 179, 181, 182, 183, 186, 187, 191, 194, 195, 196, 198, 201, 202, 209, 211, 212, 213, 215, 218, 219, 222, 223, 224, 225, 226, 227, 230, 231, 235, 236, 238, 239, 241], "builtin": [61, 67], "pythonhashse": [61, 67], "todo": 61, "optiona": 62, "transform_factori": [62, 64, 73, 74], "asyncio": 62, "raycollector": [62, 412], "ray_buff": 62, "object_store_memori": 62, "600": [62, 66], "await": 62, "sleep": [62, 125, 439], "invoc": 63, "friendli": [63, 419], "include_info": [63, 73, 74], "storagecheckpointerbas": [64, 109], "roundrobinwrit": 64, "_pytre": [64, 436], "tree_map": [64, 436], "assert0": [64, 436], "ref_model": 66, "reward_model": [66, 318], "max_new_token": 66, "score_clip": 66, "kl_schedul": 66, "klcontrollerbas": 66, "num_step": [66, 423], "causal": 66, "sentenc": 66, "frozen": [66, 202, 239], "llm": [66, 78, 89, 135, 190], "gpt2rewardmodel": 66, "get_dataload": [66, 412], "promptdata": [66, 412], "gpt2lmheadmodel": 66, "dl": 66, "block_siz": [66, 89], "tensorclass_typ": [66, 89], "openai_summarize_tldr": 66, "config_class": 66, "model_path": 66, "rollout_from_model": 66, "rollout_from_data": 66, "reward_kl": [66, 202], "reward_raw": 66, "sample_log_prob": [66, 301, 302, 303, 309, 313, 315, 343], "create_rollout_td": 66, "log_ratio": 66, "replic": [66, 415], "rindex": 66, "eo": 66, "generation_config": 66, "generationconfig": 66, "ti": [66, 367, 368, 369, 370, 372, 373, 374, 375, 420], "log_probs_gen": 66, "logprobs_of_label": 66, "hash_a": 67, "4669941682990263259": 67, "3778166555168484291": 67, "9122128731510687521": 67, "hash_b": 67, "heterogen": [68, 69, 94, 121, 124, 128, 135, 136, 139, 148, 149, 150, 151, 156, 157, 162, 274, 275, 419, 420], "220": 70, "resembl": 72, "tensormap": 72, "collat": [72, 102], "subtyp": 72, "embedding_storag": 72, "tensor_dict_storag": 72, "new_index": 72, "key3": 72, "retrieve_valu": 72, "storage_constructor": 72, "write_fn": 72, "tensordictstorag": 72, "thumb": [72, 148, 421], "lazydynamicstorag": 72, "fixedstorag": 72, "randomprojectionhash": 72, "priority_kei": [73, 74, 99, 326, 328, 331, 332, 333, 339, 341, 344, 346, 348, 349, 356, 436, 438], "reduct": [73, 99, 100, 113, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 337, 339, 340, 342, 343, 344, 345, 346, 348, 349], "prioritizedreplaybuff": [73, 412, 438], "min": [73, 99, 100, 113, 285, 324, 325, 326, 332, 342, 344, 346, 420, 421], "median": [73, 99, 100, 113, 133, 134, 175, 309, 313], "huggingfac": [75, 307], "co": [75, 194, 434], "pad_trunc": 75, "am": 75, "me": 75, "reassur": 75, "ok": 75, "primarili": [77, 211, 425], "educ": 77, "guess": 77, "knowledg": [77, 121, 124, 128, 135, 136, 148, 149, 156, 157, 426, 428], "tokenizer_fn": 78, "tensordicttoken": [78, 412], "pre_tokenization_hook": 78, "valid_s": 78, "tokenizer_class": 78, "tokenizer_model_nam": 78, "tokein": 78, "elementwis": 78, "vocabulari": [78, 135, 136, 229], "loader": [78, 421], "185068": 78, "dataset_to_tensordict": 78, "data_dir": 78, "batch_dim": [78, 121, 124, 128, 135, 136, 148, 149, 156, 157, 410], "valid_mask_kei": 78, "batch_dimens": 78, "filder": 78, "from_dict": 78, "data_memmap": 78, "ref": 79, "branching_act": 79, "prev_act": 79, "edg": [79, 423], "travers": 79, "breadth": 79, "bf": 79, "fully_expand": 79, "get_vertex_by_hash": 79, "get_vertex_by_id": 79, "is_termin": 79, "make_nod": 79, "node_observ": 79, "bag": 79, "num_children": 79, "num_vertic": 79, "count_repeat": 79, "recustruct": 79, "scope": [79, 121, 124, 128, 135, 136, 148, 149, 156, 157, 423, 439], "plotli": 79, "make_label": 79, "visual": [79, 210, 235, 237, 378, 421, 432, 434], "notimplementederror": [79, 419], "unsupport": 79, "selected_act": 79, "mctsforest": [79, 136, 412], "key_typ": 79, "liter": [79, 135, 190, 299], "recurse_through_entri": 86, "recurse_through_stack": 86, "infinit": [89, 140, 141, 160, 161, 427, 436], "block": [89, 92, 118, 414, 419, 422, 423, 426, 427, 432, 436], "pairwisedataset": [89, 412], "256": [89, 140, 141, 200, 255, 420, 421, 423, 432, 433], "checkpoint_fil": 91, "h5": 91, "h5_kwarg": 91, "iff": 91, "suffix": [91, 391], "h5py": 91, "create_dataset": 91, "consequ": [91, 266, 427], "immut": [92, 121, 124, 128, 135, 136, 148, 156, 213, 232], "piec": [92, 103, 114, 117, 118, 419, 420, 421, 428, 432, 433, 434, 436], "scratch_dir": [93, 419, 420, 422, 427, 432, 435, 436], "sent": [93, 95, 115, 239], "mistak": [93, 95, 115], "overewritten": 93, "tensorstoragecheckpoint": 93, "pathlib": [93, 396, 423], "main_ckpt_dir": 93, "rb_memmap": 93, "10_000_000": 93, "myclass": [93, 95, 115], "foo": [93, 95, 115, 304, 436, 439], "bar": [93, 95, 115, 304, 389, 390, 391, 396, 416, 420], "attach": [93, 94, 95, 96, 109, 111, 115, 420], "entiti": [93, 94, 95, 96, 109, 111, 115], "lazystacktensordict": 94, "heterougen": 94, "linearli": 94, "densifi": 94, "unlimit": [94, 96], "st": 94, "expans": [95, 341], "zero_": [95, 115, 167], "liststoag": 97, "max_capac": [99, 100, 419, 436], "max_priority_within_buff": [99, 100], "data_0": 99, "data_1": 99, "smoothen": 99, "tdrb": 99, "pack": [99, 262, 266, 421, 424, 439], "nd": [99, 100], "1d": [99, 100, 107, 108, 113], "sum_tre": [99, 100], "min_tre": [99, 100], "slice_len": [100, 107, 108, 378], "end_kei": [100, 107, 108], "cache_valu": [100, 107, 108], "closer": [100, 438], "readili": [100, 107, 108, 313], "conjunct": [100, 107, 108, 420], "Will": [100, 107, 143, 378], "buffer0": [100, 107], "immutablewrit": [100, 107], "buffer1": [100, 107], "other_sampl": [100, 107], "shorter": [100, 107, 108], "short": [100, 107, 108, 119, 120, 121, 124, 128, 133, 134, 135, 136, 148, 149, 156, 157, 162, 266, 267, 420, 421, 424, 425, 433, 436], "Be": [100, 107, 108], "fewer": [100, 107], "tolist": 100, "120110917137936e": 100, "06": [100, 256, 292], "storageensembl": [102, 105], "samplerensembl": 102, "writerensembl": [102, 111], "sample_from_al": [102, 105], "num_buffer_sampl": [102, 105], "ensembl": [102, 105, 111, 112, 118, 312, 344], "forbidden": 102, "0x13a2ef430": 102, "0x13a2f9310": 102, "interpol": [102, 214, 420, 423], "interpolationmod": 102, "bilinear": [102, 214], "0x13a2f9220": 102, "0x13a2f9f70": 102, "0x13a2d9b50": 102, "0x13a2f95b0": 102, "0x128648260": 102, "roundrobin": [103, 114], "buffer_id": [105, 111], "shuffl": [106, 108, 433], "incomplet": [106, 108], "fresh": 106, "haven": [106, 435], "remain": [106, 181, 191, 192, 202, 224, 278, 426], "draw": [106, 261], "use_gpu": [107, 108], "slicesamplerwithoutreplac": [107, 436], "acceler": [107, 108, 432, 433], "significantli": [107, 108, 182, 415, 419, 420, 426, 433], "reconstruct": [107, 108, 335, 419, 439], "ep_1": [107, 108], "ep_2": [107, 108], "73": 107, "74": 107, "76": 107, "77": 107, "42": [107, 269, 284, 323, 324, 326, 327, 331, 339, 346], "43": 107, "45": 107, "67": [107, 431], "69": 107, "70": 107, "71": 107, "27": [107, 108, 119, 120, 148, 156], "28": [107, 108, 274], "31": [107, 133, 134], "80": [107, 119, 120], "82": 107, "83": 107, "84": [107, 214, 422, 423], "78": 107, "79": 107, "320": [107, 108, 122, 123], "700": [107, 108], "dataid": [107, 108], "available_dataset": [107, 108], "counter": [108, 230, 308, 389, 416, 423], "23": [108, 242], "request": [108, 179, 211], "51": 108, "__len__": 109, "rank_kei": 113, "rank": [113, 245], "samplerwithoutreplac": [113, 421, 433, 436], "get_insert_index": 113, "googl": [119, 120, 140, 141, 146, 147, 244, 421, 422, 432, 433], "convers": [119, 120, 133, 134, 135, 170, 415], "2106": [119, 120, 329, 348], "13281": [119, 120], "categorical_action_encod": [119, 120, 121, 124, 127, 128, 129, 130, 133, 134, 135, 136, 143, 144, 148, 149, 153, 156, 157, 170, 423], "frame_skip": [119, 120, 122, 123, 127, 128, 129, 130, 133, 134, 137, 138, 143, 144, 153, 198, 389, 391, 399, 416, 419, 420, 421, 438], "allow_done_after_reset": [119, 120, 122, 123, 124, 127, 129, 130, 133, 134, 143, 144, 146, 147, 153, 158, 159], "toler": [119, 120, 122, 123, 127, 129, 130, 133, 134, 143, 144, 146, 147, 153, 158, 159, 256, 292], "is_avail": [119, 120, 419, 420, 421, 422, 432, 433, 435], "ant": [119, 120, 121, 124, 128, 131, 135, 136, 148, 149, 156, 157, 435], "87": [119, 120], "acrobot": [119, 120, 122, 123, 439], "advant": [119, 120, 133, 134], "timer": [119, 120, 133, 134], "timeit": [119, 120, 133, 134, 423], "310": [119, 120], "ms": [119, 120, 133, 134], "268": [119, 120], "433": [119, 120], "213": [119, 120], "8605": [119, 120], "pipelineenv": 120, "get_environ": 120, "san": 121, "fen": [121, 146, 147], "pgn": 121, "legal": 121, "board": [121, 157], "include_san": 121, "algebra": [121, 434], "notat": 121, "include_fen": 121, "forsyth": 121, "edward": 121, "include_pgn": 121, "portabl": [121, 428], "include_legal_mov": 121, "include_hash": 121, "mask_act": 121, "subset": [121, 434, 435], "29275": 121, "rnbqkbnr": [121, 146, 147], "pppppppp": [121, 146, 147], "kqkq": [121, 146, 147], "legal_mov": 121, "219": 121, "5p2": 121, "ppppp1pp": 121, "event": [121, 272, 273, 281, 367, 368, 369, 370, 372, 373, 374, 375, 436], "date": [121, 181, 381], "white": 121, "f4": 121, "96": 121, "kq": 121, "5n2": 121, "rnbqkb1r": 121, "nf3": 121, "na6": 121, "c4": 121, "f6": 121, "h4": 121, "rb8": 121, "na3": 121, "ra": 121, "sort": [121, 124, 128, 135, 136, 148, 149, 156, 157, 183, 285], "another_act": [121, 124, 128, 135, 136, 148, 149, 156, 157], "discretebox": [121, 124, 128, 135, 136, 148, 149, 156, 157], "mutabl": [121, 124, 128, 135, 136, 148, 149, 156, 157], "action_spec_unbatch": [121, 124, 128, 135, 136, 148, 149, 156, 157, 421, 433], "had": [121, 124, 128, 135, 136, 148, 149, 156, 157, 425, 427], "all_act": [121, 124, 128, 135, 136, 148, 149, 156, 157], "any_don": [121, 124, 128, 135, 136, 148, 149, 156, 157], "loc": [121, 124, 128, 135, 136, 148, 149, 156, 157, 202, 206, 217, 239, 265, 293, 294, 301, 302, 303, 309, 313, 315, 323, 324, 326, 339, 343, 344, 345, 346, 400, 410, 414, 419, 420, 421, 422, 425, 433, 438], "_callabletransform": [121, 124, 128, 135, 136, 148, 149, 156, 157], "auto_specs_": [121, 124, 128, 135, 136, 148, 149, 156, 157], "action_spac": [121, 124, 128, 135, 136, 148, 149, 156, 157, 194, 258, 287, 305, 306, 310, 311, 323, 324, 326, 327, 328, 330, 331, 332, 333, 334, 339, 341, 343, 344, 345, 346, 348, 349, 356, 422, 423, 425, 429], "check_dtyp": [121, 124, 128, 135, 136, 148, 149, 156, 157, 162], "discrep": [121, 124, 128, 135, 136, 148, 149, 156, 157, 162, 323, 325, 327, 328, 340, 343, 345, 356], "broken": [121, 124, 128, 135, 136, 148, 149, 156, 157, 162], "rng": [121, 124, 128, 135, 136, 148, 149, 156, 157, 162, 434], "done_keys_group": [121, 124, 128, 135, 136, 148, 149, 156, 157], "another_don": [121, 124, 128, 135, 136, 148, 149, 156, 157], "done_spec_unbatch": [121, 124, 128, 135, 136, 148, 149, 156, 157], "empty_cach": [121, 124, 128, 135, 136, 148, 149, 156, 157, 232], "fake_tensordict": [121, 124, 128, 135, 136, 148, 149, 156, 157, 420, 423], "envnam": [121, 124, 128, 135, 136, 148, 149, 156, 157], "full_action_spec_unbatch": [121, 124, 128, 135, 136, 148, 149, 156, 157, 432, 433], "full_done_spec_unbatch": [121, 124, 128, 135, 136, 148, 149, 156, 157], "full_observation_spec_unbatch": [121, 124, 128, 135, 136, 148, 149, 156, 157], "full_reward_spec_unbatch": [121, 124, 128, 135, 136, 148, 149, 156, 157], "pipeline_st": [121, 124, 128, 135, 136, 148, 149, 156, 157], "full_state_spec_unbatch": [121, 124, 128, 135, 136, 148, 149, 156, 157], "get_legal_mov": 121, "uci": 121, "input_spec_unbatch": [121, 124, 128, 135, 136, 148, 149, 156, 157], "is_spec_lock": [121, 124, 128, 135, 136, 148, 149, 156, 157], "maybe_reset": [121, 124, 128, 135, 136, 148, 149, 156, 157], "speak": [121, 124, 128, 135, 136, 148, 149, 156, 157, 187, 313, 419], "observation_spec_unbatch": [121, 124, 128, 135, 136, 148, 149, 156, 157], "output_spec_unbatch": [121, 124, 128, 135, 136, 148, 149, 156, 157], "register_gym": [121, 124, 128, 135, 136, 148, 149, 156, 157, 424], "entry_point": [121, 124, 128, 135, 136, 148, 149, 156, 157], "info_kei": [121, 124, 128, 135, 136, 148, 149, 156, 157], "reward_threshold": [121, 124, 128, 135, 136, 148, 149, 156, 157], "nondeterminist": [121, 124, 128, 135, 136, 148, 149, 156, 157], "max_episode_step": [121, 124, 127, 128, 129, 135, 136, 148, 149, 156, 157], "order_enforc": [121, 124, 128, 135, 136, 148, 149, 156, 157], "autoreset": [121, 124, 128, 135, 136, 148, 149, 156, 157], "disable_env_check": [121, 124, 127, 128, 135, 136, 143, 144, 148, 149, 156, 157], "apply_api_compat": [121, 124, 128, 135, 136, 148, 149, 156, 157], "nasium": [121, 124, 128, 135, 136, 148, 149, 156, 157, 170], "dmcontrolenv": [121, 124, 128, 135, 136, 148, 149, 156, 157, 378, 412, 419, 424, 431, 439], "dmc": [121, 124, 128, 135, 136, 148, 149, 156, 157], "cheetah": [121, 122, 123, 124, 128, 135, 136, 148, 149, 156, 157, 378, 419], "removeemptyspec": [121, 124, 128, 135, 136, 148, 149, 156, 157], "threshold": [121, 124, 128, 135, 136, 148, 149, 156, 157, 261, 324, 325, 421], "learnt": [121, 124, 128, 135, 136, 148, 149, 156, 157, 406], "checker": [121, 124, 127, 128, 135, 136, 143, 144, 148, 149, 156, 157], "stepapicompat": [121, 124, 128, 135, 136, 148, 149, 156, 157], "deem": [121, 124, 128, 135, 136, 140, 141, 148, 149, 156, 157, 160, 161], "task_nam": [121, 122, 124, 128, 135, 136, 148, 149, 156, 157], "envgym": [121, 124, 128, 135, 136, 148, 149, 156, 157], "0855": [121, 124, 128, 135, 136, 148, 149, 156, 157], "0215": [121, 124, 128, 135, 136, 148, 149, 156, 157], "0881": [121, 124, 128, 135, 136, 148, 149, 156, 157], "0412": [121, 124, 128, 135, 136, 148, 149, 156, 157], "1101": [121, 124, 128, 135, 136, 148, 149, 156, 157], "0080": [121, 124, 128, 135, 136, 148, 149, 156, 157], "0254": [121, 124, 128, 135, 136, 148, 149, 156, 157], "0424": [121, 124, 128, 135, 136, 148, 149, 156, 157], "veloc": [121, 122, 123, 124, 128, 135, 136, 148, 149, 156, 157, 182, 432, 433, 434, 439], "9609e": [121, 124, 128, 135, 136, 148, 149, 156, 157], "9776e": [121, 124, 128, 135, 136, 148, 149, 156, 157], "04": [121, 124, 128, 132, 135, 136, 148, 149, 156, 157, 227], "6347e": [121, 124, 128, 135, 136, 148, 149, 156, 157], "3842e": [121, 124, 128, 135, 136, 148, 149, 156, 157], "5338e": [121, 124, 128, 135, 136, 148, 149, 156, 157], "3064e": [121, 124, 128, 135, 136, 148, 149, 156, 157], "0381e": [121, 124, 128, 135, 136, 148, 149, 156, 157], "6656e": [121, 124, 128, 135, 136, 148, 149, 156, 157], "05": [121, 124, 128, 135, 136, 148, 149, 156, 157, 227, 244, 434], "0204e": [121, 124, 128, 135, 136, 148, 149, 156, 157], "0833": [121, 124, 128, 135, 136, 148, 149, 156, 157], "0275": [121, 124, 128, 135, 136, 148, 149, 156, 157], "0612": [121, 124, 128, 135, 136, 148, 149, 156, 157], "0770": [121, 124, 128, 135, 136, 148, 149, 156, 157], "1256": [121, 124, 128, 135, 136, 148, 149, 156, 157], "0082": [121, 124, 128, 135, 136, 148, 149, 156, 157], "0186": [121, 124, 128, 135, 136, 148, 149, 156, 157], "0476": [121, 124, 128, 135, 136, 148, 149, 156, 157], "2221": [121, 124, 128, 135, 136, 148, 149, 156, 157], "2256": [121, 124, 128, 135, 136, 148, 149, 156, 157], "5930": [121, 124, 128, 135, 136, 148, 149, 156, 157], "6937": [121, 124, 128, 135, 136, 148, 149, 156, 157], "5865": [121, 124, 128, 135, 136, 148, 149, 156, 157], "5479": [121, 124, 128, 135, 136, 148, 149, 156, 157], "0187": [121, 124, 128, 135, 136, 148, 149, 156, 157], "6825": [121, 124, 128, 135, 136, 148, 149, 156, 157], "5224": [121, 124, 128, 135, 136, 148, 149, 156, 157], "0018": [121, 124, 128, 135, 136, 148, 149, 156, 157], "1005": [121, 124, 128, 135, 136, 148, 149, 156, 157], "0335": [121, 124, 128, 135, 136, 148, 149, 156, 157, 187], "0268": [121, 124, 128, 135, 136, 148, 149, 156, 157], "0133": [121, 124, 128, 135, 136, 148, 149, 156, 157], "0627": [121, 124, 128, 135, 136, 148, 149, 156, 157], "0074": [121, 124, 128, 135, 136, 148, 149, 156, 157], "0488": [121, 124, 128, 135, 136, 148, 149, 156, 157], "0353": [121, 124, 128, 135, 136, 148, 149, 156, 157], "0075": [121, 124, 128, 135, 136, 148, 149, 156, 157], "0069": [121, 124, 128, 135, 136, 148, 149, 156, 157], "0098": [121, 124, 128, 135, 136, 148, 149, 156, 157], "0058": [121, 124, 128, 135, 136, 148, 149, 156, 157], "0033": [121, 124, 128, 135, 136, 148, 149, 156, 157], "0157": [121, 124, 128, 135, 136, 148, 149, 156, 157], "0004": [121, 124, 128, 135, 136, 148, 149, 156, 157, 227], "0381": [121, 124, 128, 135, 136, 148, 149, 156, 157], "0452": [121, 124, 128, 135, 136, 148, 149, 156, 157], "11355747": [121, 124, 128, 135, 136, 148, 149, 156, 157], "04257728": [121, 124, 128, 135, 136, 148, 149, 156, 157], "00408397": [121, 124, 128, 135, 136, 148, 149, 156, 157], "04155852": [121, 124, 128, 135, 136, 148, 149, 156, 157], "0389733": [121, 124, 128, 135, 136, 148, 149, 156, 157], "01409826": [121, 124, 128, 135, 136, 148, 149, 156, 157], "0978704": [121, 124, 128, 135, 136, 148, 149, 156, 157], "08808327": [121, 124, 128, 135, 136, 148, 149, 156, 157], "03970837": [121, 124, 128, 135, 136, 148, 149, 156, 157], "00535434": [121, 124, 128, 135, 136, 148, 149, 156, 157], "02353762": [121, 124, 128, 135, 136, 148, 149, 156, 157], "05116226": [121, 124, 128, 135, 136, 148, 149, 156, 157], "02788907": [121, 124, 128, 135, 136, 148, 149, 156, 157], "06848346": [121, 124, 128, 135, 136, 148, 149, 156, 157], "05154399": [121, 124, 128, 135, 136, 148, 149, 156, 157], "0371798": [121, 124, 128, 135, 136, 148, 149, 156, 157], "05128025": [121, 124, 128, 135, 136, 148, 149, 156, 157], "dydact": [121, 124, 128, 135, 136, 148, 149, 156, 157], "gym_env": [121, 124, 128, 135, 136, 148, 149, 156, 157, 438], "reset_kei": [121, 124, 128, 135, 136, 148, 149, 156, 157, 182, 218, 224, 225, 226, 432], "multitask": [121, 124, 128, 135, 136, 148, 149, 156, 157], "multiag": [121, 124, 128, 135, 136, 139, 148, 149, 150, 151, 156, 157, 174, 275, 286, 295, 325, 340, 343, 356], "another_reward": [121, 124, 128, 135, 136, 148, 149, 156, 157], "reward_spec_unbatch": [121, 124, 128, 135, 136, 148, 149, 156, 157], "auto_cast_to_devic": [121, 124, 128, 135, 136, 148, 149, 156, 157, 433], "soon": [121, 124, 128, 135, 136, 148, 149, 150, 151, 156, 157], "__sort": [121, 124, 128, 135, 136, 148, 149, 156, 157], "as__": [121, 124, 128, 135, 136, 148, 149, 156, 157], "argmaxmodul": [121, 124, 128, 135, 136, 148, 149, 156, 157], "argmax": [121, 124, 128, 135, 136, 148, 149, 156, 157, 258, 287, 306, 311, 423, 425], "n_act": [121, 124, 128, 135, 136, 148, 149, 156, 157, 202, 323, 324, 326, 327, 328, 330, 331, 332, 339, 343, 344, 345, 346, 348, 349, 426], "ourselv": [121, 124, 128, 135, 136, 148, 149, 156, 157, 421, 439], "emul": [121, 124, 128, 135, 136, 148, 149, 156, 157], "epoch": [121, 124, 128, 135, 136, 148, 149, 156, 157, 396, 421, 432, 433], "input_td": [121, 124, 128, 135, 136, 148, 149, 156, 157], "rollout_td": [121, 124, 128, 135, 136, 148, 149, 156, 157], "state_spec_unbatch": [121, 124, 128, 135, 136, 148, 149, 156, 157], "prevail": [121, 124, 128, 135, 136, 148, 149, 156, 157, 174, 183, 218], "next_tensordict": [121, 124, 128, 135, 136, 148, 149, 156, 157, 173, 179, 183, 195, 196, 197, 202, 209, 212, 213, 219, 222, 235, 239], "precomput": [121, 124, 128, 135, 136, 148, 149, 156, 157], "_stepmdp": [121, 124, 128, 135, 136, 148, 149, 156, 157, 173], "exclude_act": [121, 124, 128, 135, 136, 148, 149, 156, 157, 173], "leverag": [121, 124, 128, 135, 136, 139, 148, 149, 150, 151, 156, 157, 419, 433, 439], "minim": [121, 124, 128, 135, 136, 148, 149, 156, 157, 380, 436], "reset_data": [121, 124, 128, 135, 136, 148, 149, 156, 157, 439], "dm_control": [122, 123, 419, 431, 439], "2006": [122, 123, 324, 330], "12983": [122, 123], "240": [122, 123, 438], "swingup": [122, 123, 439], "swingup_spars": [122, 123], "ball_in_cup": [122, 123], "catch": [122, 123, 423], "balance_spars": [122, 123], "three_pol": [122, 123], "two_pol": [122, 123], "finger": [122, 123], "turn_easi": [122, 123], "turn_hard": [122, 123], "fish": [122, 123], "upright": [122, 123, 420], "swim": [122, 123], "hopper": [122, 123], "hop": [122, 123], "humanoid": [122, 123, 148, 156, 431], "walk": [122, 123, 148, 156, 420, 431], "run_pure_st": [122, 123], "bring_bal": [122, 123], "bring_peg": [122, 123], "insert_bal": [122, 123], "insert_peg": [122, 123], "point_mass": [122, 123], "reacher": [122, 123], "swimmer": [122, 123], "swimmer6": [122, 123], "swimmer15": [122, 123], "walker": [122, 123], "dog": [122, 123], "trot": [122, 123], "humanoid_cmu": [122, 123], "lqr": [122, 123], "lqr_2_1": [122, 123], "lqr_6_2": [122, 123], "quadrup": [122, 123], "escap": [122, 123], "stacker": [122, 123], "stack_2": [122, 123], "stack_4": [122, 123], "deviceless": 124, "run_type_check": [124, 142], "hint": 124, "counterenv": 124, "creator": [125, 401, 402, 408, 409, 410], "substitut": [125, 224, 239, 425], "vecnorm": [125, 410], "env_creat": [125, 419], "test_env1": 125, "_td": [125, 334], "observation_count": [125, 439], "test_env2": 125, "ps": 125, "p1": 125, "p2": 125, "9934": 125, "make_vari": [125, 230], "variant": [125, 230, 246, 414], "trajcount": 125, "env_creator_pendulum": 125, "env_creator_cartpol": 125, "env_str": 126, "device_map": 126, "registri": [127, 158], "asyncvectorenv": 127, "involv": [127, 129, 130, 140, 141, 153, 179, 182, 230, 264, 268, 424, 426], "pixel_observ": [127, 129, 130, 153], "pixelobservationwrapp": [127, 129, 130, 153], "adventur": [127, 129], "airraid": [127, 129, 439], "alien": [127, 129], "time_limit": 127, "timelimit": [127, 140, 141, 160, 161], "default_info_dict_read": [127, 128, 129, 148], "reader": [127, 128, 129, 148, 420], "set_info_dict_read": [127, 128, 129, 148, 424], "info_dict": [127, 128, 129, 148], "gymlikeenv": [127, 129, 412], "auto_register_info_dict": [127, 128, 129, 148], "multibinari": [127, 129], "multidiscret": [127, 129], "rag": [127, 129], "gym_conversion_exampl": [127, 129], "info_dict_read": [128, 148], "ignore_priv": 128, "baseinfodictread": 128, "tensordictprim": [128, 148, 247, 264, 268, 320, 414, 422], "succe": [128, 148], "underscor": 128, "primer": [128, 135, 190, 225, 247, 264, 268, 320, 422], "halfcheetah": [128, 148, 175, 214, 419, 438], "reward_ctrl": [128, 148], "reward_run": [128, 148], "x_posit": [128, 148], "x_veloc": [128, 148], "raise_if_clos": 128, "read_act": 128, "read_don": 128, "nonsens": 128, "fallback": 128, "read_ob": 128, "dictat": [128, 203, 309, 313, 343, 419, 434], "read_reward": 128, "hoc": [128, 148, 425], "dict_read": 128, "my_info_kei": 128, "some_env": 128, "vecenv": 129, "vectorenv": 129, "convert_actions_to_numpi": 129, "secur": 130, "habitat3": 130, "ai": [130, 435], "habitatrenderpick": 130, "isaacgym": [131, 132], "isaacgymwrapp": [131, 412], "isaacgymenv": [132, 412], "webpag": 132, "isaac": 132, "essenc": [132, 424], "instadeepai": [133, 134], "2306": [133, 134], "09884": [133, 134], "snake": [133, 134], "grid": [133, 134, 378], "bodi": [133, 134], "body_st": [133, 134], "fruit_posit": [133, 134], "col": [133, 134], "head_posit": [133, 134], "tail": [133, 134], "game2048": [133, 134], "maze": [133, 134], "cleaner": [133, 134], "cvrp": [133, 134], "multicvrp": [133, 134], "minesweep": [133, 134], "rubikscub": [133, 134], "knapsack": [133, 134], "sudoku": [133, 134], "tsp": [133, 134], "connector": [133, 134], "v2": [133, 134, 154, 155, 352, 367, 368, 369, 370, 372, 373, 374, 375, 422], "mmst": [133, 134], "graphcolor": [133, 134], "partli": [133, 134], "scrambl": [133, 134], "robotwarehous": [133, 134], "tetri": [133, 134], "binpack": [133, 134], "jobshop": [133, 134], "0x1fca91910": 133, "122": [133, 134, 439], "0x1ff9baee0": 133, "134": [133, 134], "0x1ff9ba7c0": 133, "172": [133, 134], "jit": 134, "eager": 134, "tdreset": [134, 241, 431], "whichev": 134, "drastic": [134, 148, 436], "histori": 135, "tailor": [135, 438], "cot": 135, "from_dataload": [135, 190], "token_kei": 135, "str2str": [135, 190], "str_kei": 135, "attention_kei": 135, "assign_reward": 135, "vocab_s": [135, 136], "no_stack": 135, "has_attent": 135, "assign_don": 135, "batchless": 135, "as_llm_data": 135, "llmdata": [135, 412], "dataloadingprim": [135, 225], "data_kei": [135, 190], "data_spec": [135, 190], "stack_method": [135, 190], "as_nested_tensor": [135, 190], "as_padded_tensor": [135, 190], "tokens_in": 135, "tokens_out": 135, "grpo": [135, 190], "overview": [136, 421, 423, 426, 432, 433, 438], "hashing_modul": 136, "text_output": 136, "decod": [136, 168, 279], "batch_decod": 136, "text_kei": 136, "gpt2token": 136, "make_tensordict": 136, "mo": [137, 138], "minecart": [137, 138], "mo_gym": [138, 203], "qualnam": 139, "neural": [139, 150, 151, 248, 249, 282, 284, 290, 312, 414, 420, 421, 422, 425, 432, 433, 434, 439], "group_map": [139, 140, 141, 146, 147, 150, 151, 158, 159, 160, 161, 163, 432], "constructiuon": [139, 150, 151], "premad": [139, 140, 141, 150, 151, 160, 161, 356], "all_in_one_group": [139, 146, 147, 163], "agent_0": [139, 150, 151, 158, 163, 222], "agent_1": [139, 150, 151, 158, 163, 222], "agent_2": [139, 150, 151, 158, 163], "agent_3": [139, 158], "one_group_per_ag": [139, 150, 151], "meltingpot": [140, 141], "2211": [140, 141], "13746": [140, 141], "melt": [140, 141], "pot": [140, 141], "novel": [140, 141, 426], "social": [140, 141], "familiar": [140, 141, 420, 433, 439], "unfamiliar": [140, 141], "broad": [140, 141], "cooper": [140, 141, 432, 433], "decept": [140, 141], "reciproc": [140, 141], "stubborn": [140, 141], "substrat": [140, 141], "ml_collect": 140, "config_dict": 140, "configdict": 140, "categorical_act": [140, 141, 146, 147, 150, 151, 154, 155, 158, 159, 160, 161], "marlgroupmaptyp": [140, 141, 146, 147, 150, 151, 158, 159, 160, 161, 163, 412, 432], "agent_nam": [140, 141, 160, 161, 163], "agent_names_to_indices_map": [140, 141, 160, 161], "env_torchrl": [140, 141], "commons_harvest__open": [140, 141], "rgb": [140, 141], "144": [140, 141], "192": [140, 141], "collective_reward": [140, 141], "ready_to_shoot": [140, 141], "88": [140, 141, 154, 155], "substrate_config": 141, "get_config": 141, "mp_env": 141, "build_from_config": 141, "default_player_rol": 141, "mymbenv": [142, 245, 271], "world_model": [142, 245, 271, 335], "hidden_observ": [142, 245, 271], "mlp": [142, 245, 248, 249, 251, 252, 253, 254, 260, 264, 268, 271, 275, 276, 301, 305, 320, 328, 330, 414, 420, 423, 425, 426, 429, 431, 435, 438], "worldmodelwrapp": [142, 245, 271], "activation_class": [142, 245, 248, 249, 251, 252, 253, 254, 259, 260, 269, 271, 274, 275, 420, 425, 432, 433, 438], "activate_last_lay": [142, 245, 254, 269, 271], "sail": [143, 144], "sg": [143, 144], "2206": [143, 144], "10558": [143, 144], "readthedoc": [143, 146, 147], "en": [143, 146, 147], "python_interfac": 143, "envpoolmixin": 144, "env_bas": 144, "task_id": 144, "env_typ": 144, "gym_reset_return_info": 144, "envpool_env": 144, "www": [145, 272, 273], "fetch_openml": 145, "adult_num": 145, "adult_onehot": 145, "mushroom_num": 145, "mushroom_onehot": 145, "covertyp": 145, "shuttl": 145, "magic": [145, 423, 424], "106": 145, "openspiel": [146, 147], "open_spiel": [146, 147], "game_str": 146, "return_st": [146, 147, 150, 151], "4672": [146, 147], "current_play": [146, 147], "674": 146, "2048": [146, 147], "add_nois": [146, 147], "amazon": [146, 147], "backgammon": [146, 147], "restor": [146, 147], "td_restor": [146, 147], "pyspiel": 147, "load_gam": 147, "new_initial_st": 147, "3009": 147, "my_env_fun": [148, 156], "custom_attribute_list": [148, 156], "custom_attribut": [148, 156], "custom_method_list": [148, 156], "custom_method": [148, 156], "deploi": [148, 156, 179, 423], "slight": [148, 156, 420], "share_individual_td": [148, 156], "shared_memori": [148, 156], "policy_proof": [148, 156], "ll": [148, 156, 262, 263, 266, 267, 419, 420, 421, 422, 424, 425, 426, 427, 429, 433, 439], "hidden": [148, 156, 181, 251, 259, 262, 263, 264, 266, 267, 268, 279, 280, 288, 289, 301, 302, 303, 304, 312, 315, 325, 340, 343, 414, 422, 431, 438], "serial_for_singl": [148, 156, 420], "circular": [148, 156, 419], "list_of_kwarg": [148, 156], "com_veloc": [148, 156], "head_height": [148, 156], "joint_angl": [148, 156], "torso_vert": [148, 156], "timeout": 148, "idl": 148, "batched_pipe_timeout": 148, "stringent": [148, 421, 432, 433], "inter": 148, "penv": [148, 230], "env_fix": 148, "influenc": 148, "myenv": [148, 179, 189, 193], "pipe": 148, "update_kwarg": [148, 156], "th": [149, 197, 234, 262, 266, 434], "thdot": [149, 434], "max_spe": [149, 434], "max_torqu": [149, 434], "gen_param": [149, 434], "gravit": [149, 434], "torqu": [149, 434], "pettingzoo": [150, 151, 432, 433], "pet": [150, 151], "zoo": [150, 151], "__": [150, 151], "aecenv": [150, 151], "dead": [150, 151], "done_on_ani": [150, 151, 432], "compulsori": [150, 151], "adversary_0": [150, 151], "adversari": [150, 151, 337, 432], "sisl": 150, "multiwalker_v9": 150, "aec": [150, 151], "n_piston": [150, 151], "pistonball_v6": [150, 151], "piston": [150, 151], "piston_0": [150, 151], "piston_1": [150, 151], "piston_20": [150, 151], "tictactoe_v3": [150, 151], "player": [150, 151, 157], "player_1": [150, 151], "player_2": [150, 151], "butterfli": 151, "parallel_env": [151, 419, 438, 439], "cube": 152, "roboh": 153, "expos": [153, 189, 193, 314, 420], "vikashplu": 153, "wiki": 153, "2310": 153, "06828": 153, "from_depth": 153, "smacv2": [154, 155], "starcraft": [154, 155], "challeng": [154, 155, 424, 434, 435], "10gen_terran": [154, 155], "10gen_zerg": [154, 155], "10gen_protoss": [154, 155], "3m": [154, 155], "8m": [154, 155], "25m": [154, 155], "5m_vs_6m": [154, 155], "8m_vs_9m": [154, 155], "10m_vs_11m": [154, 155], "27m_vs_30m": [154, 155], "mmm": [154, 155], "mmm2": [154, 155], "2s3z": [154, 155], "3s5z": [154, 155], "3s5z_vs_3s6z": [154, 155], "3s_vs_3z": [154, 155], "3s_vs_4z": [154, 155], "3s_vs_5z": [154, 155], "1c3s5z": [154, 155], "2m_vs_1z": [154, 155], "corridor": [154, 155], "6h_vs_8z": [154, 155], "2s_vs_1sc": [154, 155], "so_many_banel": [154, 155], "bane_vs_ban": [154, 155], "2c_vs_64zg": [154, 155], "old": [154, 155, 340, 439], "smac": [154, 155], "map_nam": [154, 155], "176": [154, 155], "battle_won": [154, 155], "dead_al": [154, 155], "dead_enemi": [154, 155], "episode_limit": [154, 155], "322": [154, 155], "procedur": [154, 155], "distribution_config": [154, 155], "n_unit": [154, 155], "n_enemi": [154, 155], "team_gen": [154, 155], "dist_typ": [154, 155], "weighted_team": [154, 155], "unit_typ": [154, 155], "marin": [154, 155], "maraud": [154, 155], "medivac": [154, 155], "exception_unit_typ": [154, 155], "start_posit": [154, 155], "surrounded_and_reflect": [154, 155], "map_x": [154, 155], "map_i": [154, 155], "capability_config": [154, 155], "131": [154, 155], "starcraft2env": 155, "tic": 157, "tac": 157, "toe": 157, "single_play": 157, "player1": 157, "desired_batch_s": 157, "player0": 157, "uniti": [158, 159], "ml": [158, 159], "technolog": [158, 159], "llapi": [158, 159], "mlagents_env": [158, 159], "unityenviron": [158, 159], "file_nam": 158, "registered_nam": 158, "nor": 158, "localhost": 158, "connect": 158, "3dball": 158, "group_0": 158, "vectorsensor_size8": 158, "continuous_act": [158, 160, 161, 376, 432, 433], "agent_10": 158, "agent_11": 158, "agent_4": 158, "agent_5": 158, "agent_6": 158, "agent_7": 158, "agent_8": 158, "agent_9": 158, "group_reward": 158, "proroklab": [160, 161], "vectorizedmultiagentsimul": [160, 161], "2207": [160, 161], "03530": [160, 161], "basescenario": 160, "defaultt": 160, "chosen": [160, 161, 224, 225, 286, 287, 295, 311, 378, 414, 428], "sparsiti": 160, "unbatched_action_spec": [160, 161], "unbatched_observation_spec": [160, 161], "unbatched_reward_spec": [160, 161], "het_spec": [160, 161], "het_specs_map": [160, 161], "flock": [160, 161, 376], "agent_collision_rew": [160, 161], "agent_distance_rew": [160, 161], "ca": 163, "environment4": 163, "get_group_map": 163, "sumbodul": 166, "unsqueeze_null_shap": 167, "dynamic_shap": 167, "model_bas": [168, 169, 245, 271], "model_based_env": [168, 334], "dreamerenv": [168, 334, 412], "model_based_env_ev": 168, "spec_typ": 170, "convert_specnam": 170, "remap_state_to_observ": 170, "spectyp": 170, "unus": 170, "probabilistictdmodul": [171, 269, 309, 313, 357, 391], "keep_oth": [173, 434], "exclude_reward": 173, "exclude_don": 173, "next_": 173, "write_full_fals": 174, "_terminated_or_trunc": 174, "num_interv": 175, "out_action_kei": 175, "samplingstrategi": 175, "optino": 175, "intenum": 175, "interv": [175, 227, 377, 378, 388, 398, 420, 434], "action_disc": 175, "masker": 176, "maskedenv": 176, "ones_lik": 176, "scatter": 176, "transformthatmeasuresbyt": [176, 178, 179, 181, 182, 183, 186, 187, 191, 194, 195, 196, 198, 201, 202, 209, 211, 212, 213, 215, 218, 219, 222, 223, 224, 225, 226, 227, 230, 231, 235, 236, 238, 239, 241], "bytes_in_td": [176, 178, 179, 181, 182, 183, 186, 187, 191, 194, 195, 196, 198, 201, 202, 209, 211, 212, 213, 215, 218, 219, 222, 223, 224, 225, 226, 227, 230, 231, 235, 236, 238, 239, 241], "fill_float": 178, "fill_int": 178, "fill_bool": 178, "someenvclass": 178, "autoresetenv": 178, "fooenv": 178, "sign": [178, 220, 358, 432], "envtyp": 178, "reshape_fn": [179, 423], "reset_func": 179, "env_kwarg": [179, 408, 409, 419], "accompani": [179, 223], "tensordict_batch_s": 179, "tensordict_reset": [179, 434], "transform_env_batch_s": [179, 186, 231, 241], "untouch": [179, 186, 189, 191, 195, 202, 204, 212, 213, 219, 223, 229, 231, 233, 241], "transform_full_done_spec": [179, 186, 189, 191, 195, 202, 204, 212, 213, 219, 223, 229, 231, 233, 241], "biner": 180, "burn_in": 181, "burn": 181, "burnt": 181, "gru_modul": [181, 264, 320], "input_s": [181, 225, 262, 263, 264, 266, 267, 268, 320, 422, 423], "hidden_s": [181, 225, 262, 263, 264, 266, 267, 268, 320, 422, 423], "default_recurrent_mod": [181, 264, 268], "burn_in_transform": 181, "gru": [181, 225, 263, 264, 320, 423], "num_lay": [181, 262, 264, 266, 268, 279, 280, 320, 423], "is_init": [181, 201, 264, 268, 285, 308, 320, 422, 423], "86": 181, "3008": 181, "0344": 181, "padding_valu": [182, 272, 273], "as_invers": 182, "movement": 182, "1312": 182, "5602": 182, "consumpt": [182, 412], "pictur": 182, "pixels_trsf": [182, 436], "grayscal": [182, 420, 422, 423, 436, 439], "data_exclud": [182, 436], "make_rb_transform_and_sampl": 182, "sampler_kwarg": 182, "redund": [182, 422], "del_kei": [183, 222, 235, 431, 434], "unsqueeze_if_oor": 183, "observation_posit": 183, "observation_veloc": 183, "delet": [183, 222, 385], "crop": [184, 211, 378], "center": [184, 284, 378], "width": [184, 188, 214], "height": [184, 188, 214], "squar": [184, 188, 265, 293, 294, 378], "scalar": [185, 216, 243, 252, 254, 261, 277, 278, 285, 319, 323, 324, 325, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 343, 344, 345, 346, 347, 349, 356, 358, 359, 360, 361, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 414, 420, 426, 434], "permit": [185, 197, 222, 234, 323, 325, 340, 343, 345], "rewardsc": [186, 232, 419, 420, 422], "rewardclip": 186, "transformed_env": [186, 232, 424], "transform_env_devic": [186, 191, 231, 241], "cond": 187, "met": [187, 322, 432, 434], "altogeth": 187, "exectu": 187, "palliat": [187, 425], "step_count_kei": [187, 223], "inner_count": 187, "middle_env": 187, "middle_count": 187, "auto_unwrap": [187, 232, 386], "9670": 187, "2546": 187, "9669": 187, "9802": 187, "1981": 187, "1601": 187, "9926": 187, "1214": 187, "5556": 187, "9994": 187, "7622": 187, "9984": 187, "0561": 187, "7933": 187, "9895": 187, "1445": 187, "7779": 187, "dtype_in": 189, "dtype_out": 189, "scan": [189, 193, 314, 315], "resp": [189, 193], "not_transform": [189, 193], "auto_batch_s": 190, "maybe_dense_stack": 190, "endless_dataload": 190, "llmenv": [190, 412], "set_capture_non_tensor_stack": 190, "dummydataload": 190, "generate_random_str": 190, "ascii_lowercas": 190, "__iter__": 190, "__next__": 190, "zxwvupirska": 190, "stringa": 190, "zxwvupirsk": 190, "roll": 190, "init_st": 190, "nngcmflsana": 190, "vrrbnhzpmga": 190, "nngcmflsan": 190, "vrrb": 190, "dummytensordataload": 190, "generate_random_tensor": 190, "pad_tensor": 190, "padding_length": 190, "orig_devic": 191, "unspecifi": 191, "transform_done_spec": [191, 222, 231, 233, 241], "num_actions_effect": 192, "max_act": 192, "include_forward": 192, "num_act": [192, 249, 332, 423, 425], "action_out": 192, "eol_kei": 194, "lives_kei": 194, "eol_attribut": 194, "breakout": 194, "210": [194, 208], "160": [194, 208], "eol_transform": 194, "eol": 194, "dqnloss": [194, 323, 324, 326, 327, 330, 332, 333, 334, 338, 339, 341, 343, 344, 345, 346, 347, 348, 349, 350, 356, 403, 412, 415, 420, 422, 423, 429], "register_kei": 194, "loss_or_advantag": 194, "lossmodul": [194, 396, 405, 406, 412, 415], "valueestimatorbas": [194, 341, 412], "finit": [196, 284, 425, 436], "first_dim": 197, "last_dim": 197, "allow_positive_dim": [197, 222, 234], "frameskip": 197, "repeatedli": [198, 421, 433], "hash_fn": 200, "use_raw_nontensor": [200, 229, 233], "repertoir": 200, "reproducible_hash": 200, "unarytransform": 200, "observation_str": 200, "tobyt": [200, 233], "observation_hash": 200, "x08": 200, "x8b": 200, "xbexav": 200, "xbf": 200, "x00": 200, "xee": 200, "xb5": 200, "x17": 200, "x8f": 200, "xbe": [200, 233], "x88": 200, "xccu": 200, "xc0vr": 200, "get_input_from_hash": 200, "hash_tensor": 200, "init_kei": [201, 308], "tracker": 201, "pi_curr": 202, "pi_0": 202, "overfit": 202, "probabilist": [202, 309, 323, 343, 412, 421, 438], "get_dist": [202, 313, 314], "normalparamextractor": [202, 301, 302, 303, 309, 315, 323, 324, 326, 332, 339, 343, 344, 345, 346, 348, 349, 414, 421, 425, 433, 438], "probabilisticactor": [202, 301, 302, 303, 304, 323, 324, 326, 329, 331, 332, 339, 342, 343, 344, 345, 346, 348, 349, 414, 419, 421, 425, 432, 433], "tanhnorm": [202, 301, 302, 303, 309, 315, 323, 324, 326, 339, 343, 344, 345, 346, 348, 349, 412, 421, 433, 438], "return_log_prob": [202, 301, 302, 303, 309, 313, 315, 345, 414, 421, 425, 432, 433, 438], "apply_": 202, "copy_": [202, 419], "formula": [202, 265, 293, 294, 323, 325, 340, 343, 415, 421], "mogymwrapp": [203, 412], "mo_env": 203, "sea": 203, "treasur": 203, "so_env": 203, "stack_reward": 204, "stack_observ": 204, "auto_batch_size_": 204, "macro": [204, 308], "noop": 205, "trial": 205, "standard_norm": [206, 217, 239, 419, 420, 422], "affin": [206, 217, 239], "layer": [206, 239, 244, 248, 249, 251, 252, 257, 259, 262, 263, 264, 266, 267, 268, 269, 274, 275, 277, 278, 279, 280, 290, 291, 298, 307, 316, 414, 420, 421, 422, 423, 425, 432, 435], "epsilon": [206, 243, 261, 285, 347, 394, 420, 421, 422, 425], "recover": 206, "set_default_tensor_typ": 206, "doubletensor": 206, "isclos": 206, "next_ob": [206, 358, 359, 360, 361, 438], "init_stat": [206, 419, 420, 421, 422], "3752e": 206, "5087e": 206, "9294e": 206, "9636": 206, "5608": 206, "6408": 206, "num_it": [206, 420, 421], "reduce_dim": [206, 419, 420, 421, 422], "cat_dim": [206, 419, 420, 421, 422], "keep_dim": [206, 308, 420, 422], "statist": [206, 239, 244, 345, 410, 419, 420, 421, 439], "gaussian": [206, 225, 243, 245, 271, 277, 278, 283, 421, 423, 432], "empir": [206, 245, 271, 309, 313, 419, 421, 433], "3d": [206, 248], "reorder": 208, "in_keys_in": [208, 234], "channel": [208, 228, 274, 279, 280, 420], "r3m": [210, 435], "resnet": [210, 235, 237], "ego4d": [210, 235, 237], "univers": [210, 235, 237, 424], "suraj": [210, 235], "nair": [210, 235], "aravind": [210, 235], "rajeswaran": [210, 235], "vikash": [210, 235, 237], "kumar": [210, 235, 237], "chelsea": [210, 235], "finn": [210, 235], "abhinav": [210, 235], "gupta": [210, 235], "2203": [210, 235, 271, 435], "12601": [210, 235, 435], "_init": [210, 235, 419], "resnet50": [210, 237, 435], "model_nam": [210, 235, 237, 381], "resnet34": 210, "resnet18": 210, "r3m_vec": [210, 435], "stack_imag": [210, 237], "tread": [210, 237], "hub": [210, 237, 424], "resnet50_weight": [210, 237], "imagenet1k_v1": [210, 237], "download_path": [210, 237], "tensor_pixels_kei": [210, 237], "sub_seq_len": 211, "sample_dim": [211, 419], "hesit": 211, "robust": [211, 244], "mix": [211, 286, 295, 356, 419, 432, 433], "improp": 211, "dummyenv": 212, "another_oth": 212, "other_reward": 212, "create_copi": 213, "stuff": [213, 427], "newnam": 213, "r2g": 215, "reward_to_go": 215, "bernoulli_": 215, "9010": 215, "9404": [215, 364], "9701": [215, 364], "9900": [215, 364], "0000": [215, 226, 227, 261, 284, 316, 364], "clamp_min": 216, "clamp_max": 216, "clip_min": 216, "clip_max": 216, "episode_": 218, "reward1": 218, "reward2": 218, "episode_reward": [218, 432, 433], "keep_reward": 219, "keep_don": 219, "logical_or": 220, "in_key_inv": 222, "unstack": 222, "update_don": 223, "disjunct": 223, "recognis": 223, "target_return": 224, "default_valu": [225, 320], "expand_spec": 225, "single_default_valu": 225, "call_before_env_reset": 225, "unit": [225, 245, 259, 262, 263, 279, 280, 288, 289, 421], "scala": 225, "mykei": 225, "__unless": 225, "exists__": 225, "get_primers_from_modul": [225, 247, 264, 268, 412], "recurrent_st": [225, 264, 268, 320, 422], "pool": 226, "10th": 226, "0216": 226, "1149": 226, "1990": 226, "2749": 226, "3281": 226, "9290": 226, "3702": 226, "8978": 226, "time_kei": 227, "elaps": [227, 428], "monitor": [227, 424], "expend": 227, "_polici": 227, "time_reset": 227, "time_polici": 227, "time_step": [227, 267, 308], "0882": 227, "0002": 227, "5797e": 227, "6289e": 227, "7990e": 227, "0824e": 227, "0837e": 227, "6056e": 227, "2016e": 227, "1062e": 227, "7009e": 227, "from_int": 228, "shape_toler": 228, "ri": 228, "pretrainedtokenizerbas": 229, "additional_token": 229, "skip_special_token": 229, "add_special_token": 229, "bert": 229, "uncas": 229, "traj_count": 230, "traj": 230, "countingenv": 230, "mocking_class": 230, "make_env_c0": 230, "make_env_c1": 230, "set_contain": 231, "reset_par": 231, "smoothli": [232, 244], "add_1": 232, "cache_spec": 232, "set_missing_toler": 232, "inv_fn": 233, "unari": 233, "durin": 233, "ommit": 233, "observation_trsf": 233, "xbc": 233, "x7f": 233, "x859": 233, "x81": 233, "x9a": 233, "xbd": 233, "xb8t8": 233, "test_input_spec": 233, "test_output_spec": 233, "danger": 234, "vc1": 235, "vc1_vec": 235, "untrain": 235, "make_noload_model": 235, "vip": [236, 237, 435], "implicit": [237, 331, 339, 436], "jason": 237, "ma": 237, "shagun": 237, "sodhani": 237, "dinesh": 237, "jayaraman": 237, "osbert": 237, "bastani": 237, "ami": 237, "zhang": 237, "vip_vec": 237, "final_nam": 238, "sb3": 238, "terminal_obs_read": 238, "truli": [238, 438], "shared_td": 239, "decai": [239, 243, 261, 347, 394, 419, 420, 422, 439], "9999": 239, "0001": [239, 259], "to_observation_norm": 239, "frozen_copi": 239, "race": 239, "underflow": [239, 394], "build_td_for_shared_vecnorm": 239, "memmori": 239, "queue": [239, 436, 438], "td_share": 239, "v": [239, 262, 263, 266, 267, 301, 331, 339, 346, 419, 420], "unfreez": 239, "observationnorm": [239, 410, 419, 420, 421, 422, 438], "train_env": 239, "eval_env": 239, "state_dim": [240, 250, 255, 283, 288, 289, 304], "action_dim": [240, 250, 251, 253, 255, 283, 304, 419, 431], "gsde": [240, 344, 410], "gsdemodul": 240, "rb_transform": 241, "resist": 241, "insensit": 241, "sensit": [241, 420, 422], "_orig": 241, "95": [241, 271, 351, 421, 422], "window": [241, 308, 432, 436, 438], "module_nam": [242, 341], "from_vers": 242, "to_vers": 242, "class_method": 242, "vs": [242, 264, 268], "import_modul": 242, "get_class_that_defined_method": 242, "module_set": 242, "setters_dict": 242, "setter": 242, "setter_dict": 242, "po": 243, "sigma_init": [243, 432], "sigma_end": [243, 432], "annealing_num_step": [243, 261, 285, 419, 420, 422, 423, 425, 429, 432], "sigma": [243, 262, 263, 265, 266, 267, 285, 293, 294, 421, 432], "omiss": [243, 261, 285], "momentum": 244, "max_r": 244, "max_d": 244, "warmup_step": 244, "batchrenorm": 244, "1702": 244, "03275": 244, "corenet": 244, "enhanc": 244, "warmup": 244, "phase": [244, 246, 433, 436], "outlier": 244, "period": 244, "varianc": [244, 245, 246, 265, 293, 294, 415, 419, 421, 433], "warm": 244, "renorm": 244, "entropi": [245, 281, 323, 324, 325, 326, 331, 332, 339, 340, 342, 343, 344, 346, 348, 349, 433], "botev": 245, "2013": 245, "cem": 245, "plan": [245, 270, 271], "k": [245, 247, 262, 263, 266, 267], "maximis": [245, 251, 253, 271, 420, 421, 433], "modelbasedenv": [245, 271], "planning_horizon": [245, 271], "optim_step": [245, 271, 423, 429], "mpc": [245, 270, 271], "num_candid": [245, 271], "candid": [245, 271], "top_k": [245, 271], "modelbasedenvbas": [245, 270, 271, 412], "safemodul": [245, 270, 301, 303, 313, 323, 324, 326, 331, 332, 339, 343, 344, 345, 346, 348, 349, 401, 402, 406, 412, 438], "hausknecht": 246, "wagen": 246, "reus": [246, 251, 385], "consistentdropoutmodul": [246, 414], "capit": 246, "themselv": [246, 420], "conceptu": 246, "devianc": 246, "set_exploration_typ": [246, 341, 391, 412, 414, 421, 422, 423, 425, 432, 438], "_main_async_collector": 246, "asyncdatacollector": [246, 412], "ditto": 246, "consistentdropout": 247, "input_shap": 247, "batcht": 247, "make_tensordict_prim": [247, 264, 268, 422], "input_dtyp": 247, "get_default_dtyp": [247, 394], "mask_6127171760": 247, "env0": [247, 439], "num_cel": [248, 249, 251, 252, 253, 254, 259, 260, 264, 268, 269, 274, 275, 301, 320, 420, 421, 422, 423, 425, 426, 429, 432, 433, 438], "elu": [248, 249, 251, 252, 253, 254, 259, 260, 274, 420, 438], "activation_kwarg": [248, 249, 269], "norm_class": [248, 249, 251, 252, 269], "norm_kwarg": [248, 249, 269], "bias_last_lay": [248, 249, 251, 252, 253, 254, 260, 269], "aggregator_class": [248, 249, 251, 252, 420, 422, 438], "squashdim": [248, 249, 251, 260, 274, 438], "aggregator_kwarg": [248, 249, 251, 252, 420, 422], "squeeze_output": [248, 249, 251, 252, 420, 422], "convolut": [248, 249, 251, 252, 274, 290, 423, 425], "cell": [248, 249, 262, 263, 264, 266, 267, 268, 269, 274, 275, 421, 423, 424, 425, 426, 427, 428, 429], "kernel": [248, 249, 274], "cnet": [248, 249], "conv3d": 248, "rectangular": [248, 249], "lazyconv2d": [249, 251, 252, 260, 274], "default_atari_dqn": [249, 423], "semin": 249, "transformer_config": [250, 283, 304], "decisiontransform": [250, 283], "dtconfig": [250, 255, 283], "2202": [250, 255, 342], "05607": [250, 255, 342], "return_to_go": [250, 255, 283, 304], "conv_net_kwarg": [251, 252], "mlp_net_kwarg": [251, 252, 253], "use_avg_pool": [251, 252], "WITH": [251, 252, 253, 254, 285, 347], "1509": [251, 252, 253, 254, 271, 285, 328, 338, 347], "02971": [251, 252, 253, 254, 285, 347], "convnet": [251, 252, 260, 274, 422, 423, 425, 438], "ndims_in": 251, "avgpool": [251, 252], "lazylinear": [251, 252, 253, 254, 260, 269, 414, 421, 425, 434, 435], "2304": 251, "adaptiveavgpool2d": [252, 420, 422], "output_s": [252, 420, 422], "squeeze2dlay": 252, "400": [253, 254, 433], "mlp_net_kwargs_net1": 254, "mlp_net_kwargs_net2": 254, "mlp1": 254, "mlp2": 254, "desdescrib": 255, "n_embd": 255, "n_layer": [255, 262, 266], "n_head": 255, "n_inner": 255, "n_posit": 255, "resid_pdrop": 255, "attn_pdrop": 255, "gpt2config": 255, "atol": [256, 292], "rtol": [256, 292], "batch_shap": [256, 281, 292], "event_shap": [256, 292], "absolut": [256, 292, 419], "_instanc": 256, "densiti": [256, 272, 273, 281, 294], "mass": [256, 272, 273, 281, 294, 434], "rsampl": [256, 273, 281, 313], "sample_shap": [256, 272, 273, 281], "softmax": [257, 273, 281, 305, 306], "var_num": [258, 287, 305, 306, 311], "action_value_kei": [258, 287, 305, 306, 310, 311, 326, 341, 356], "action_mask_kei": [258, 261, 287, 305, 306, 310, 311], "1707": [258, 306, 333, 343], "06887": [258, 306, 333], "mult": [258, 275, 287, 305, 306, 310, 311], "tensordict_modul": [258, 262, 263, 266, 267, 287, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 323, 324, 326, 327, 331, 332, 339, 343, 344, 345, 346, 348, 349, 414], "nbin": [258, 305, 414], "customdistributionalqv": 258, "log_softmax": [258, 305], "qvalue_actor": [258, 287, 305, 310, 414], "to_modul": [258, 312, 315, 419, 438], "std_bia": 259, "std_min_val": 259, "belief": [259, 279, 288, 289], "1912": [259, 334, 335, 336], "01603": [259, 334, 335, 336], "softplu": [259, 319, 321, 322], "out_features_valu": 260, "cnn_kwarg": [260, 420], "mlp_kwarg": [260, 420], "duel": 260, "cnn": [260, 274, 420, 423, 425, 438], "06581": 260, "512": 260, "greedi": [261, 287, 306, 311, 420, 422, 423, 425], "eps_init": [261, 285, 420, 422, 423, 425, 429], "eps_end": [261, 285, 420], "explorative_polici": [261, 285], "9055": 261, "9277": 261, "6295": 261, "2532": 261, "grad_fn": [261, 300, 313], "addbackward0": 261, "batch_first": [262, 264, 266, 268, 422], "bidirect": [262, 266, 422], "cudnn": [262, 263, 264, 266, 267, 268, 422, 423], "rnn": [262, 263, 264, 266, 267, 268, 299, 332, 346, 422, 423, 425], "device_count": [262, 263, 266, 267, 439], "n_in": [262, 263, 266, 267], "n_out": [262, 263, 266, 267], "h0": [262, 263, 266, 267], "h1": [262, 263, 266, 267], "vectoris": [262, 263, 266, 267], "call_gru": [262, 263], "h_out": [262, 263, 266, 267], "batched_cal": [262, 263, 266, 267], "gate": [262, 263, 266], "r_t": 262, "w_": [262, 263, 266, 267], "ir": [262, 263], "x_t": [262, 266], "b_": [262, 263, 266, 267], "hr": [262, 263, 266], "h_": [262, 263, 266], "z_t": 262, "iz": [262, 263], "hz": [262, 263], "n_t": 262, "odot": [262, 263, 266, 267], "hn": [262, 263, 266], "h_t": [262, 266], "sigmoid": [262, 263, 266, 267], "hadamard": [262, 263, 266, 267], "multilay": [262, 266], "_t": [262, 266, 433, 434], "ge": [262, 266], "bernoulli": [262, 266], "b_ih": [262, 263, 266, 267, 268], "b_hh": [262, 263, 266, 267, 268], "h_0": [262, 266, 267], "pack_padded_sequ": [262, 266], "pack_sequ": [262, 266], "num": [262, 266, 429], "_layer": [262, 266], "_size": [262, 263, 266, 267], "h_n": [262, 266], "packedsequ": [262, 266], "weight_ih_l": [262, 266], "learnabl": [262, 263, 266, 267], "w_ir": 262, "w_iz": 262, "w_in": 262, "num_direct": [262, 266], "weight_hh_l": [262, 266], "w_hr": 262, "w_hz": 262, "w_hn": 262, "bias_ih_l": [262, 266], "b_ir": 262, "b_iz": 262, "b_in": 262, "bias_hh_l": [262, 266], "b_hr": 262, "b_hz": 262, "b_hn": 262, "mathcal": [262, 263, 266, 267], "sqrt": [262, 263, 266, 267, 285], "frac": [262, 263, 266, 267, 421], "seq_len": [262, 266], "subtli": 262, "matrix": [262, 266, 277, 278], "hx": [262, 263, 266, 267], "lstmcell": [263, 268, 423], "gru_cel": 263, "weight_ih": [263, 267], "weight_hh": [263, 267], "bias_ih": [263, 267], "bias_hh": [263, 267], "rocm": [263, 267], "embedd": [264, 268], "grucel": [264, 312], "python_bas": [264, 268], "custom_kei": [264, 268], "hasn": [264, 268], "set_recurrent_mod": [264, 268, 422], "recurrent_mod": [264, 268, 299], "rs": [264, 419], "gru_module_train": 264, "policy_train": [264, 268], "traj_td": [264, 268], "make_cudnn_bas": [264, 268], "make_python_bas": [264, 268, 423], "supplementari": [264, 268, 421, 439], "That": [264, 268, 421, 432], "dealt": [264, 268], "poorli": [264, 268], "meth": [264, 268, 341, 434], "data_collector": [264, 268, 420], "policy_infer": [264, 268], "td_inf": [264, 268], "upscal": [265, 293, 294], "tanh_loc": [265, 293, 294], "event_dim": [265, 292, 293], "poor": [265, 293, 294], "explos": [265, 293, 294], "proj_siz": 266, "c0": [266, 267], "c1": [266, 267], "call_lstm": [266, 267], "c_out": [266, 267], "i_t": 266, "ii": [266, 267], "hi": [266, 267], "f_t": 266, "hf": [266, 267], "g_t": 266, "ig": [266, 267], "hg": [266, 267], "o_t": 266, "ho": [266, 267], "c_t": 266, "c_": 266, "1402": 266, "1128": 266, "c_0": [266, 267], "proj": 266, "c_n": 266, "w_ii": 266, "w_if": 266, "w_ig": 266, "w_io": 266, "w_hi": 266, "w_hf": 266, "w_hg": 266, "w_ho": 266, "b_ii": 266, "b_if": 266, "b_ig": 266, "b_io": 266, "b_hi": 266, "b_hf": 266, "b_hg": 266, "b_ho": 266, "weight_hr_l": 266, "_revers": 266, "analog": [266, 425], "cn": 266, "lstm_cell": 267, "h_1": 267, "c_1": 267, "cx": 267, "recurrent_state_h": 268, "recurrent_state_c": 268, "triplet": [268, 310, 311], "lstm_modul": 268, "rs_h": 268, "rs_c": 268, "hidden0": [268, 423], "hidden1": [268, 423], "single_bias_last_lay": 269, "layer_class": 269, "layer_kwarg": 269, "perceptron": [269, 425], "noisylinear": [269, 277, 412, 420], "noisylazylinear": [269, 412], "mpcplanner": 270, "tensordict_out": [270, 439], "mppi": 271, "covari": 271, "william": [271, 345], "aldrich": 271, "theodor": 271, "01149": 271, "hansen": 271, "wang": 271, "su": 271, "04955": 271, "valueoper": [271, 301, 302, 303, 323, 324, 325, 326, 327, 332, 339, 340, 343, 344, 345, 346, 348, 349, 406, 414, 419, 421, 426], "tdlambdaestim": [271, 412, 419], "value_net": [271, 328, 330, 345, 358, 359, 360, 361, 421, 423, 425, 426, 429], "adv": 271, "lmbda": [271, 351, 358, 361, 363, 369, 370, 371, 374, 375, 415, 419, 421, 433], "value_network": [271, 327, 328, 330, 331, 333, 339, 346, 358, 359, 360, 361, 415, 419, 421, 423, 426, 429, 432], "temperatur": [271, 324, 331, 339], "neg_inf": [272, 273], "inf": [272, 273], "api_doc": [272, 273], "tf_agent": [272, 273], "unnorm": [272, 273, 281], "sparse_mask": [272, 273], "dens": [272, 273], "0831": [272, 273], "1203": [272, 273], "0928": [272, 273], "1972": [272, 273], "grad_method": [273, 281], "reparamgradientstrategi": [273, 281], "passthrough": [273, 281], "relaxedonehot": [273, 281], "sample_non_valid": 273, "zeros_lik": [273, 434], "share_param": [274, 275, 276, 432, 433], "use_td_param": [274, 275, 276], "get_stateful_net": [274, 275, 276, 341, 414, 415], "from_stateful_net": [274, 275, 276, 341, 415], "homogen": [274, 275, 432, 433], "tensordictparam": [274, 275, 313], "_empty_net": [274, 275], "roughli": [274, 275, 438], "agent_network": [274, 275], "modulelist": [274, 275], "2592": 274, "decentr": 274, "n_agent_input": [275, 276, 432, 433], "n_agent_output": [275, 276, 432, 433], "toech": 275, "centalis": 275, "shown": [275, 414, 423, 431, 432, 433, 436], "agent_dim": 276, "vmap_random": [276, 341, 415], "stateful_net": [276, 341], "Such": [276, 341], "multiagentmlp": [276, 432, 433], "snet": 276, "hasattr": [276, 419], "kaiming_normal_": 276, "std_init": [277, 278], "initialize_paramet": 277, "isol": [277, 341, 423], "1706": [278, 295], "10295v3": 278, "induc": [278, 313], "aid": 278, "1803": [279, 280, 286], "10122": [279, 280], "rnn_hidden": 279, "latent": 280, "ordin": [282, 412], "parametris": [282, 284], "inres": 283, "mu": [283, 285, 421], "impos": [284, 414], "proxim": [284, 343, 421, 433], "atom": 284, "tang": 284, "agraw": 284, "2020": 284, "1901": 284, "10500": 284, "discretis": 284, "num_atom": 284, "num_sampl": 284, "middl": 284, "adam": [284, 293, 419, 420, 421, 422, 423, 426, 429, 432, 433, 434], "lr": [284, 419, 420, 421, 422, 429, 432, 433, 434], "optimis": [284, 432, 433], "minimis": 284, "penalis": 284, "0308": 284, "1586": 284, "4727": 284, "2260": 284, "1120": 284, "histogram": 284, "return_typ": 284, "hist": [284, 436], "158": 284, "478": 284, "228": 284, "112": 284, "bin_edg": 284, "8000": 284, "6000": 284, "4000": 284, "ornstein": [285, 419, 423], "uhlenbeck": [285, 419, 423], "ou": [285, 419], "correl": 285, "noise_t": 285, "noise_": 285, "theta": [285, 421, 434], "sigma_t": 285, "sigma_": 285, "anneal": [285, 420, 425, 432], "ou_prev_nois": 285, "ou_step": 285, "x0": 285, "sigma_min": 285, "n_steps_ann": 285, "is_init_kei": 285, "_ou_prev_nois": 285, "_ou_step": 285, "state_shap": [286, 356], "mixing_embed_dim": [286, 356], "qmix": [286, 432, 433], "mixer": [286, 295, 356], "monoton": 286, "hyper": 286, "11485": 286, "qmixerloss": [286, 295], "qmix_vdn": [286, 295], "vdn": [286, 295], "hidden_dim": [288, 289], "scale_lb": [288, 289], "posterior": [288, 335], "rssm": [288, 289, 335], "1811": [288, 289], "04551": [288, 289], "obs_embed": 288, "rnn_hidden_dim": 289, "dream": 289, "safe_tanh": 293, "tanhtransform": 293, "overflow": [293, 300, 305, 306, 309, 310, 311, 312, 313], "get_mod": [293, 313], "decomposit": 295, "05296": 295, "hide": [296, 421, 432, 433], "satisfi": [296, 414], "vmap_dim": 296, "lam": 296, "sample_in": 296, "sample_in_td": 296, "vm": 296, "translat": [300, 309], "character": [300, 305, 309, 310, 312, 436], "td_modul": [300, 301, 302, 303, 309, 312, 313, 315, 317, 425, 438], "3635": 300, "0340": 300, "1476": 300, "3911": 300, "1664": 300, "5455": 300, "2247": 300, "4583": 300, "2916": 300, "2160": 300, "5337": 300, "5193": 300, "addmmbackward0": 300, "actorvalueoper": [301, 325, 340, 343, 414, 425], "get_policy_oper": [301, 302, 303, 325, 340, 343, 414], "standalon": [301, 302, 303, 423, 425], "tdmodul": [301, 302, 303, 406], "get_critic_oper": 301, "common_oper": [301, 303], "policy_oper": [301, 302, 303], "value_oper": [301, 302, 303], "module_hidden": [301, 303], "td_module_hidden": [301, 303], "module_act": [301, 303], "td_module_act": [301, 302, 303], "module_valu": [301, 302, 303], "td_module_valu": [301, 302, 303], "state_action_valu": [301, 317, 324, 326, 331, 339, 346, 357, 406, 414, 419, 432, 438], "td_clone": [301, 302, 303], "tensordictmodulewrapp": [301, 401, 402, 406], "get_policy_head": [301, 302, 303], "safesequenti": [301, 302, 303, 356], "head": [301, 303, 313, 320, 325, 340, 343, 412], "get_value_head": [301, 302, 303], "get_value_oper": [301, 302, 303, 325, 340, 343], "action_modul": 302, "actorcriticoper": [303, 414, 425], "actorcriticwrapp": [303, 414, 419], "inferec": 304, "set_tensor_kei": 304, "dt_inference_wrapp": 304, "baz": 304, "inference_context": 304, "obs_dim": 304, "tanhdelta": [304, 412, 419, 432], "dtactor": 304, "actor_modul": [304, 438], "dist_class": 304, "dist_kwarg": 304, "distribution_kwarg": [304, 309, 313, 421, 432, 433], "inference_actor": 304, "sequence_length": 304, "mask_context": 304, "out_act": 304, "qvaluemodul": [305, 310, 356, 422, 423, 425, 429], "distributionaldqnnet": 305, "make_log_softmax": 305, "my_action_valu": [306, 311], "chanc": 306, "lmheadmodel": 307, "actor_head": [307, 325, 340, 343], "base_model": 307, "lm_head": 307, "lookahead": 308, "reshape_cat": 308, "actor_bas": 308, "obs_cat": 308, "obs_cat_reshap": 308, "action_orig": 308, "multistepenvwrapp": 308, "alter": [308, 341, 414], "ego": 308, "default_interaction_typ": [309, 313, 425], "interaction_typ": [309, 313], "datacollectorbas": [309, 313, 398, 401, 402, 406, 412], "set_interaction_typ": [309, 313], "compositedistribut": [309, 313, 323, 343, 415, 425], "distribution_map": [309, 313], "name_map": [309, 313], "cache_dist": [309, 313], "n_empirical_estim": [309, 313], "compound": [309, 425], "chose": 311, "functionalmodul": 312, "functionalmodulewithbuff": 312, "td_fmodul": 312, "td_function": 312, "td_state": 312, "params_repeat": 312, "td_vmap": [312, 315], "random_sampl": [312, 313], "suppli": 313, "paliat": 313, "get_median": 313, "get_mean": 313, "transfer": 313, "log_prob_kei": [313, 415], "sample_key_nam": 313, "_log_prob": 313, "composite_lp_aggreg": 313, "clampbackward0": 313, "clamp": [313, 316, 335, 396, 415, 432, 434], "anihil": 313, "probabilistictensordictsequenti": [314, 323, 325, 340, 343, 345, 401, 402, 415, 438], "partial_toler": [314, 315, 431], "AND": [314, 315, 326], "tensordictsequ": 315, "safeprobabilisticmodul": [315, 414], "spec1": 315, "net1": 315, "module1": 315, "td_module1": 315, "spec2": 315, "module2": 315, "td_module2": 315, "boundari": [316, 421, 423, 432, 433], "resolut": 316, "9944": 316, "9991": 316, "3020": 316, "2299": 316, "5418": 316, "2989": 316, "6849": 316, "3169": 316, "2690": 316, "9649": 316, "5686": 316, "8602": 316, "0315": 316, "8455": 316, "6027": 316, "4746": 316, "7843": 316, "7782": 316, "2111": 316, "5115": 316, "4687": 316, "5760": 316, "custommodul": 317, "imaginari": 318, "imagin": 318, "transition_model": 318, "get_reward_oper": 318, "get_transition_model_oper": 318, "min_val": [319, 322], "_bia": 319, "surject": 322, "expln": 322, "biased_softplu": [322, 412], "biased_softplus_": 322, "syntax": [322, 419], "add_custom_map": 322, "1602": 323, "01783v2": 323, "actor_network": [323, 324, 325, 326, 327, 329, 331, 332, 339, 340, 342, 343, 344, 345, 346, 348, 349, 415, 419, 421, 426, 432, 433], "critic_network": [323, 325, 340, 343, 345, 421, 433], "entropy_bonu": [323, 325, 340, 343, 421], "favour": [323, 325, 340, 343], "samples_mc_entropi": [323, 325, 340, 342, 343], "entropy_coef": [323, 325, 340, 343, 421, 433], "critic_coef": [323, 325, 340, 343, 421], "loss_critic_typ": [323, 325, 340, 343, 345, 421], "l1": [323, 325, 327, 328, 332, 340, 343, 344, 345, 348, 349, 352, 356, 414, 419], "l2": [323, 325, 327, 328, 329, 330, 332, 335, 336, 340, 343, 344, 345, 348, 349, 352, 356, 419, 432], "smooth_l1": [323, 324, 325, 326, 327, 328, 331, 332, 339, 340, 343, 344, 345, 346, 348, 349, 352, 356, 421], "separate_loss": [323, 325, 326, 327, 331, 332, 339, 340, 343, 344, 345, 346, 348, 349], "advantage_kei": [323, 325, 340, 343, 345, 358, 359, 360, 361], "value_target_kei": [323, 325, 340, 343, 345, 358, 359, 360, 361], "value_target": [323, 325, 340, 343, 345, 358, 359, 360, 361, 421, 433], "ddp": [323, 325, 340, 343, 345], "fsdp": [323, 325, 340, 343, 345], "divid": [323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 337, 339, 340, 342, 343, 344, 345, 346, 348, 349, 399, 419, 432, 433, 434], "clip_valu": [323, 325, 340, 343, 345], "loss_crit": [323, 343, 421, 433], "loss_entropi": [323, 343, 421, 433], "loss_object": [323, 343, 421, 433], "next_reward": [323, 324, 326, 327, 328, 330, 331, 332, 339, 343, 344, 345, 346, 348, 349, 358, 359, 360, 361], "next_don": [323, 324, 326, 327, 328, 330, 331, 332, 339, 343, 344, 345, 346, 348, 349, 358, 359, 360, 361], "next_termin": [323, 324, 326, 327, 328, 330, 331, 332, 339, 343, 344, 345, 346, 348, 349, 358, 359, 360, 361], "loss_obj": 323, "next_observ": [323, 324, 326, 327, 328, 330, 331, 332, 339, 343, 344, 345, 346, 348, 349, 431], "sacloss": [323, 338, 347, 412], "default_kei": [323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 342, 343, 344, 345, 346, 348, 349, 356, 362], "_acceptedkei": [323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 341, 342, 343, 344, 345, 346, 348, 349, 356, 362], "fraction": 323, "make_value_estim": [323, 324, 326, 327, 328, 330, 332, 333, 334, 339, 341, 343, 344, 345, 346, 348, 349, 350, 356, 415, 419, 420, 432, 433, 438], "value_typ": [323, 324, 326, 327, 328, 330, 332, 333, 334, 339, 341, 343, 344, 345, 346, 348, 349, 351, 356, 419], "valueestim": [323, 324, 326, 327, 328, 330, 332, 333, 334, 339, 341, 343, 344, 345, 346, 348, 349, 351, 356, 412, 415, 419, 432, 433], "hyperparam": [323, 324, 326, 327, 328, 330, 332, 333, 334, 339, 341, 343, 344, 345, 346, 348, 349, 356, 419], "enum": [323, 324, 326, 327, 328, 330, 332, 333, 334, 339, 341, 343, 344, 345, 346, 348, 349, 351, 356, 419], "default_value_estim": [323, 324, 326, 327, 328, 330, 332, 333, 334, 339, 341, 343, 344, 345, 346, 348, 349, 356, 419, 438], "default_value_kwarg": [323, 324, 326, 327, 328, 330, 332, 333, 334, 339, 341, 343, 344, 345, 346, 348, 349, 356, 412, 419], "dqn_loss": [323, 324, 326, 327, 328, 330, 332, 333, 334, 339, 341, 343, 344, 345, 346, 348, 349, 350, 356], "td1": [323, 324, 326, 327, 328, 330, 332, 333, 334, 339, 341, 343, 344, 345, 346, 348, 349, 356, 419], "conserv": [324, 330], "04779": [324, 330], "qvalue_network": [324, 326, 331, 332, 339, 344, 346, 348, 349], "unti": [324, 326, 339, 344, 346, 348, 349], "loss_funct": [324, 326, 327, 328, 329, 330, 331, 332, 339, 344, 346, 348, 349, 352, 356, 419, 432], "alpha_init": [324, 326, 332, 342, 344, 346], "min_alpha": [324, 326, 332, 342, 344, 346], "max_alpha": [324, 326, 332, 342, 344, 346], "fixed_alpha": [324, 326, 332, 342, 344, 346], "target_entropi": [324, 326, 332, 342, 344, 346], "prod": [324, 326, 342, 346], "delay_actor": [324, 327, 346, 348, 349], "delay_qvalu": [324, 332, 344, 346, 348, 349], "min_q_weight": 324, "max_q_backup": 324, "backup": 324, "deterministic_backup": 324, "num_random": 324, "with_lagrang": 324, "lagrang": 324, "lagrange_thresh": 324, "valueclass": [324, 326, 327, 332, 344, 346, 348, 349], "qvalu": [324, 326, 331, 332, 339, 344, 346, 348, 349], "loss_actor": [324, 326, 327, 331, 332, 339, 344, 345, 346, 348, 349, 392, 419, 432], "loss_actor_bc": 324, "loss_alpha": [324, 326, 332, 344, 346], "loss_cql": [324, 330], "loss_qvalu": [324, 326, 330, 331, 332, 339, 344, 346, 348, 349], "loss_alpha_prim": 324, "clip_epsilon": [325, 421, 433], "normalize_advantag": [325, 340, 343, 433], "normalize_advantage_exclude_dim": [325, 340, 343], "multiobject": [325, 340, 343], "value_kei": [325, 340, 343, 358, 359, 360, 361, 419], "somemodul": [325, 340, 343], "someactor": [325, 340, 343], "value_head": [325, 340, 343], "somevalu": [325, 340, 343], "loss_modul": [325, 338, 340, 341, 343, 347, 396, 405, 406, 415, 416, 419, 420, 421, 432, 433, 436], "IN": 326, "FOR": 326, "simplic": [326, 420, 421, 427, 435, 436, 438], "openreview": [326, 344], "pczqttstix": 326, "qvalue_loss": [326, 348], "actor_loss": [326, 348], "alpha_loss": 326, "num_qvalue_net": [326, 331, 332, 339, 344, 346, 348, 349], "maybe_init_target_entropi": 326, "fault_toler": 326, "target_entropy_buff": 326, "delay_valu": [327, 328, 330, 333, 345, 346, 356, 420, 422, 423, 429, 432], "loss_valu": [327, 331, 339, 345, 346, 419, 421, 432, 433], "pred_valu": [327, 330, 348, 349, 419], "pred_value_max": [327, 419], "target_valu": [327, 330, 344, 348, 349, 357, 415, 419], "target_value_max": [327, 419], "qvalueactor": [328, 330, 356, 420, 422], "double_dqn": 328, "06461": [328, 338], "mult_one_hot": [328, 331, 332, 356], "loss_val": [328, 330, 415, 419, 421, 422, 423, 426, 427, 429, 432, 433, 436], "01345": 329, "distanc": [330, 340, 352, 357, 358, 433], "dcql_loss": 330, "2110": [331, 339], "06169": [331, 339], "expectil": [331, 339], "tau": [331, 339, 347, 419, 420, 432], "antmaz": [331, 339], "sticht": [331, 339], "onehotcategor": [331, 332, 412], "target_entropy_weight": 332, "skip_done_st": [332, 346], "disctount": 333, "distributionalqvalueactor": [333, 414], "input_tensordict": [333, 419], "actor_model": 334, "value_model": [334, 336], "imagination_horizon": 334, "discount_loss": [334, 336], "lambda_kl": 335, "lambda_reco": 335, "lambda_reward": 335, "reco_loss": 335, "reward_loss": 335, "free_nat": 335, "nat": 335, "delayed_clamp": 335, "global_averag": 335, "value_loss": 336, "fake_data": 336, "1606": 337, "03476": 337, "discriminator_network": 337, "use_grad_penalti": 337, "gp_lambda": 337, "discrimin": 337, "ddpgloss": [338, 347, 406, 412, 419, 426, 432, 438], "td3loss": [338, 347, 412], "value_network_update_interv": 338, "qvalueclass": 339, "loss_value_diff": 339, "diff": 339, "old_polici": 340, "new_polici": 340, "apart": [340, 433], "dtarg": 340, "samples_mc_kl": 340, "analyt": 340, "decrement": 340, "loss_": [341, 392, 415, 419, 426], "equip": [341, 422, 423, 425], "gh": 341, "_forward_value_estimator_kei": 341, "value_estim": [341, 358, 359, 360, 361, 362, 415, 419, 433], "myloss": 341, "action2": 341, "augment": [341, 427, 429, 436], "deterministic_sampling_mod": 341, "convert_to_funct": [341, 419], "expand_dim": 341, "create_target_param": [341, 419], "compare_against": [341, 419], "_param": 341, "resampl": 341, "_target_param": 341, "network_nam": 341, "blend": 341, "add_random_modul": [341, 415], "flavor": [343, 419, 432, 433, 438], "clipppoloss": [343, 412, 421, 433], "klpenppoloss": [343, 412], "06347": 343, "gae": [343, 412, 415, 419, 421, 433], "ppo_loss": 343, "tdlambda": [343, 351, 415, 419], "base_lay": 343, "randn_lik": 343, "samplelogprob": 343, "ay8zfzm0tdd": 344, "sub_sample_len": 344, "subsampl": [344, 387, 416], "action_log_prob_actor": 344, "state_action_value_actor": [344, 348, 349], "connectionist": 345, "1992": 345, "doi": 345, "1007": 345, "bf00992696": 345, "actor_net": [345, 419, 421], "1801": 346, "01290": 346, "applic": [346, 356, 424, 425, 434], "1812": 346, "05905": 346, "redqloss": [347, 412], "math": 347, "theta_t": [347, 434], "theta_": [347, 434], "polyak": 347, "minimalist": 348, "06860": 348, "policy_nois": [348, 349], "noise_clip": [348, 349], "td3_bc": 348, "bc_loss": 348, "lmbd": 348, "td0": [350, 419, 432], "strict_shap": 352, "view_a": 352, "qmixer": [356, 412], "local_valu": 356, "visibl": [356, 433], "acceptedkei": 356, "global_valu": 356, "penultim": 356, "local_value_network": 356, "mixer_network": 356, "value_modul": [356, 421, 438], "qnet": [356, 419], "next_val_kei": 357, "pred_next_v": 357, "mse": 357, "q_valu": 357, "n_steps_to_next": 357, "value_next_st": 357, "1506": [358, 363, 371], "02438": [358, 363, 371], "exponenti": [358, 359, 360, 361, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 394], "average_ga": [358, 421], "skip_exist": [358, 359, 360, 361], "get_default_devic": [358, 359, 360, 361, 362], "gradient_mod": 358, "value_error": [358, 359, 360, 361, 362], "target_param": [358, 359, 360, 361, 362, 419, 433], "98": [358, 359, 360, 361], "94": [358, 361], "unpack": [358, 359, 360, 361], "tensor_kei": [358, 359, 360, 361, 362], "next_valu": [358, 359, 360, 361, 362], "aka": [359, 420, 432], "average_reward": [359, 360, 361], "tdestim": [359, 360, 362], "infti": 360, "valuefunctionbas": 362, "old_stat": [363, 365, 367, 369, 371, 372, 374], "new_stat": [363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375], "rolling_gamma": [367, 368, 369, 370, 372, 373, 374, 375], "g1": [367, 368, 369, 370, 372, 373, 374, 375], "g2": [367, 368, 369, 370, 372, 373, 374, 375], "g3": [367, 368, 369, 370, 372, 373, 374, 375], "g4": [367, 368, 369, 370, 372, 373, 374, 375], "v3": [367, 368, 369, 370, 372, 373, 374, 375], "preproc": [376, 423, 432], "as_non_tensor": [376, 432], "render_method": 376, "pass_tensordict": 376, "syntact": 376, "sugar": 376, "out_file_bas": 377, "skip_reset": 377, "center_crop": 378, "make_grid": 378, "fp": [378, 383, 385], "log_video": 378, "csv": [378, 380, 382, 420, 428, 429], "wandb": [378, 382, 385, 428, 438], "tensorboard": [378, 382, 384, 428, 438], "log_dir": [378, 379, 380, 382, 384, 385, 420, 429], "cheetah_video": 378, "run_video": 378, "openxexperiencereplai": 378, "sec": [378, 434], "video_fp": [378, 380, 383], "cmu_stretch": 378, "run_video_0": 378, "pt": [380, 416], "cur_dir": 380, "csv_log": 380, "add_video": 380, "video_": 380, "experiment_nam": [381, 382], "uuid": [381, 420, 439], "logger_typ": 382, "logger_nam": 382, "mlflow": [382, 383], "wandb_kwarg": 382, "mlflow_kwarg": 382, "tracking_uri": 383, "uri": 383, "datastor": 383, "tb_log": 384, "tensoarboard": 384, "td_log": 384, "save_dir": 385, "resum": 385, "uncategor": 385, "my_funct": 386, "sub_traj_len": 387, "min_sub_traj_len": 387, "register_op": [387, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 416, 420], "process_optim_batch": [387, 393, 394, 416], "td_out": [387, 395], "_process_optim_batch_hook": [387, 416], "batch_subsampl": 387, "clear_cuda": 388, "pre_optim_step": [388, 416], "log_pbar": [389, 390, 391, 394, 416, 420], "progress": [389, 390, 391, 396, 416, 420, 422, 439], "count_fram": 389, "pre_steps_log": [389, 390, 416], "count_frames_log": 389, "lognam": 390, "r_train": 390, "log_reward": [390, 420], "record_interv": [391, 419, 420], "record_fram": [391, 399, 419, 420], "policy_explor": [391, 406, 419, 420, 423, 425, 429], "log_kei": [391, 420], "underestim": 391, "r_evalu": [391, 419], "loss_compon": 392, "appl": 392, "optimizer_hook": 392, "flatten_tensordict": [393, 420], "max_dim": 393, "rb_trainer": 393, "batch_process": [393, 394, 395, 416], "post_loss": [393, 416], "999": [394, 420], "jitter": 394, "finfo": 394, "default_dtyp": 394, "reward_norm": 394, "update_reward_stat": 394, "normalize_reward": 394, "make_train": [395, 412], "_process_batch_hook": [395, 416], "select_kei": [395, 416], "versatil": [396, 424], "optim_steps_per_batch": [396, 416, 420], "clip_grad_norm": 396, "clip_norm": 396, "progress_bar": 396, "save_trainer_interv": 396, "log_interv": [396, 420], "save_trainer_fil": [396, 416], "load_from_fil": [396, 416], "update_weights_interv": [398, 420], "update_weight": 398, "post_step": [398, 416, 420], "cfg": [399, 400, 401, 402, 403, 404, 405, 406, 407, 410], "dictconfig": [399, 400, 401, 402, 404, 405, 406, 407, 410], "unknowingli": 399, "annealing_fram": [399, 419], "init_env_step": [399, 400, 419], "proof_environ": [400, 419], "sta": 400, "ot": 400, "actor_model_explor": [401, 402, 419], "make_env_kwarg": [401, 402], "targetnetupdat": [403, 405, 406], "replayargsconfig": 404, "target_net_updat": [406, 419, 420], "constitu": 406, "egreedywrapp": 406, "env_proof": 406, "obs_spec": 406, "net_valu": 406, "dir": [406, 416, 420], "gettempdir": 406, "argpars": [407, 410], "namespac": [407, 410], "parser": [407, 410], "transformed_env_constructor": [407, 412], "num_env_per_collector": [408, 409], "video_tag": 410, "norm_obs_onli": 410, "use_env_cr": 410, "custom_env_mak": 410, "custom_env": 410, "return_transformed_env": 410, "action_dim_gsd": 410, "state_dim_gsd": 410, "obs_norm_state_dict": 410, "maker": [410, 420], "distributedsyncdatacollector": 412, "submitit_delayed_launch": 412, "remotetensordictreplaybuff": 412, "rational": 412, "footnot": 412, "binarydiscretetensorspec": 412, "boundedtensorspec": 412, "discretetensorspec": 412, "lazystackedcompositespec": 412, "lazystackedtensorspec": 412, "multidiscretetensorspec": 412, "multionehotdiscretetensorspec": 412, "nontensorspec": 412, "onehotdiscretetensorspec": 412, "unboundedcontinuoustensorspec": 412, "unboundeddiscretetensorspec": 412, "prompttensordicttoken": 412, "rolloutfrommodel": 412, "tokenizeddatasetload": 412, "create_infinite_iter": 412, "constantklcontrol": 412, "adaptiveklcontrol": 412, "llminput": 412, "llmoutput": 412, "densifyreward": 412, "h5combin": 412, "h5split": 412, "nested2t": 412, "check_no_exclusive_kei": 412, "consolidate_spec": 412, "contains_lazy_spec": 412, "envmetadata": 412, "chessenv": 412, "tictactoeenv": 412, "llmhashingenv": 412, "check_marl_group": 412, "get_available_librari": 412, "terminated_or_trunc": 412, "dreamerdecod": 412, "braxwrapp": 412, "dmcontrolwrapp": 412, "jumanjiwrapp": 412, "meltingpotenv": 412, "meltingpotwrapp": 412, "mogymenv": 412, "multithreadedenvwrapp": 412, "openmlenv": 412, "openspielwrapp": 412, "openspielenv": 412, "pettingzooenv": [412, 432], "robohiveenv": 412, "smacv2env": 412, "smacv2wrapp": 412, "unitymlagentsenv": 412, "unitymlagentswrapp": 412, "vmaswrapp": 412, "register_gym_spec_convers": 412, "qvaluehook": 412, "distributionalqvaluehook": 412, "reset_nois": 412, "cemplann": 412, "mpcplannerbas": 412, "mppiplann": 412, "independentnorm": 412, "truncatednorm": 412, "maskedonehotcategor": 412, "onehotordin": 412, "inv_softplu": 412, "vmapmodul": 412, "distributionaldqnloss": [412, 420], "discretesacloss": 412, "crossqloss": 412, "iqlloss": 412, "discreteiqlloss": 412, "cqlloss": 412, "discretecqlloss": 412, "gailloss": 412, "dtloss": 412, "onlinedtloss": 412, "td3bcloss": 412, "ppoloss": 412, "a2closs": 412, "reinforceloss": 412, "dreameractorloss": 412, "dreamermodelloss": 412, "dreamervalueloss": 412, "td0estim": [412, 419], "td1estim": [412, 419], "td0_return_estim": 412, "td0_advantage_estim": 412, "td1_return_estim": 412, "vec_td1_return_estim": 412, "td1_advantage_estim": 412, "vec_td1_advantage_estim": 412, "td_lambda_return_estim": 412, "vec_td_lambda_return_estim": 412, "td_lambda_advantage_estim": 412, "vec_td_lambda_advantage_estim": 412, "generalized_advantage_estim": 412, "vec_generalized_advantage_estim": 412, "hardupd": [412, 419, 426], "softupd": [412, 419, 420, 422, 423, 426, 429, 432], "distance_loss": [412, 419], "group_optim": 412, "hold_out_net": 412, "hold_out_param": [412, 419], "batchsubsampl": [412, 416], "clearcudacach": 412, "countframeslog": 412, "logscalar": [412, 416, 420], "optimizerhook": [412, 420], "logvalidationreward": [412, 416, 419, 420], "replaybuffertrain": [412, 416, 420], "rewardnorm": 412, "selectkei": [412, 416], "trainerhookbas": [412, 416, 420], "updateweight": [412, 416, 420], "make_collector_offpolici": 412, "make_collector_onpolici": 412, "make_dqn_loss": 412, "make_replay_buff": [412, 419], "make_target_updat": 412, "parallel_env_constructor": [412, 419], "sync_async_collector": 412, "sync_sync_collector": 412, "correct_for_frame_skip": 412, "get_stats_random_rollout": 412, "mlflowlogg": 412, "get_logg": 412, "generate_exp_nam": 412, "journei": 413, "textbook": 413, "highlight": [413, 432], "ever": [413, 433], "bump": 413, "benefit": [413, 424, 432, 433, 436], "pr": 413, "ground": [414, 419, 434], "recycl": [414, 436], "noisier": 414, "Their": [414, 432, 433], "sd": [414, 439], "prob_modul": 414, "uncertainti": 414, "soften": 414, "backbon": [414, 422, 425, 431, 438], "make_actor": 414, "make_valu": 414, "shared_param": 414, "make_common": 414, "reusabl": [415, 419, 436], "swappabl": [415, 419], "characterist": [415, 419, 434], "trainabl": [415, 419, 426, 435], "smth": [415, 419], "metric": [415, 419], "plenti": [415, 423], "amort": [415, 420, 421], "told": [415, 421], "pseudo": [415, 427, 434], "buri": 415, "str_valu": 415, "nutshel": [415, 419], "barto": [415, 432, 433], "chapter": [415, 428], "value_net_loss": 415, "pow": [415, 419], "room": 415, "signifi": [415, 432, 433], "underperform": 415, "thin": 415, "intric": [415, 425], "set_composite_lp_aggreg": [415, 433], "action_td": 415, "action0": 415, "f0": 415, "action1": 415, "f1": 415, "f2": 415, "legitim": [415, 439], "f3": 415, "action0_log_prob": 415, "action1_log_prob": 415, "inferior": 415, "multivari": 415, "dirichlet": 415, "contrari": 415, "prev_log_prob": 415, "new_log_prob": 415, "log_weight": 415, "appreci": [415, 424], "multihead": 415, "believ": 416, "scheme": [416, 439], "substanti": 416, "_pre_steps_log_hook": 416, "_pre_optim_hook": 416, "sub_batch": 416, "_post_loss_hook": 416, "_post_optim_hook": 416, "post_optim": [416, 420], "_post_optim_log": 416, "post_optim_log": 416, "_post_steps_hook": 416, "_post_steps_log_hook": 416, "post_steps_log": 416, "logginghook": 416, "logging_hook": 416, "save_dict": 416, "some_valu": 416, "torchsnapshot": 416, "ckpt_backend": 416, "filepath": 416, "save_train": 416, "000": [418, 437], "galleri": [418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439], "mem": [418, 437], "mb": [418, 437], "coding_ddpg": [418, 419, 437], "coding_dqn": [418, 420, 437], "coding_ppo": [418, 421, 437], "dqn_with_rnn": [418, 422, 437], "multi_task": [418, 431, 437], "multiagent_competitive_ddpg": [418, 432, 437], "multiagent_ppo": [418, 433, 437], "pretrained_model": [418, 435, 437], "rb_tutori": [418, 436, 437], "torchrl_demo": [418, 437, 438], "torchrl_env": [418, 437, 439], "author": [419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 432, 433, 434, 436, 439], "vincent": [419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 434, 436, 439], "moen": [419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 434, 436, 439], "assembl": 419, "focus": [419, 426], "maxim": [419, 426, 434], "transpar": [419, 422], "bash": 419, "is_fork": [419, 420, 421, 422, 432, 433, 435], "get_start_method": [419, 420, 421, 422, 432, 433, 435], "collector_devic": 419, "loss_dict": 419, "modal": 419, "oblivi": [419, 421, 436], "elementari": 419, "didact": [419, 423], "dilut": 419, "pessimist": [419, 420, 421], "target_actor_network_param": 419, "actor_in_kei": 419, "actor_crit": 419, "compromis": 419, "hp": 419, "_value_estim": 419, "elif": [419, 420], "unknown": 419, "_loss_actor": 419, "td_copi": 419, "actor_network_param": [419, 432], "value_network_param": [419, 432], "_loss_valu": 419, "pred_val": 419, "target_value_network_param": 419, "glue": 419, "_forward": 419, "remaind": 419, "env_librari": 419, "env_task": 419, "env_arg": [419, 420], "torchr": 419, "rescal": 419, "presum": 419, "make_transformed_env": 419, "reward_sc": 419, "marker": 419, "env_per_collector": 419, "transform_state_dict": 419, "make_t_env": 419, "cheat": 419, "10m": 419, "cautiou": 419, "magnitud": [419, 432], "thousand": [419, 422], "get_env_stat": 419, "proof_env": 419, "5000": [419, 423, 429], "recal": [419, 421, 436], "ddpgmlpactor": 419, "ddpgmlpqnet": 419, "materi": 419, "ornsteinuhlenbeckprocessmodul": [419, 425], "make_ddpg_actor": 419, "q_net": 419, "tight": 419, "decoupl": [419, 426, 438], "10_000": [419, 421], "traj_len": [419, 422], "make_record": 419, "recorder_obj": 419, "pick": [419, 420, 425], "buffer_s": [419, 420], "random_crop_len": 419, "prb": 419, "buffer_scratch_dir": [419, 420, 422, 427, 435], "25": 419, "dataflow": 419, "ceil_div": 419, "utd": [419, 422], "update_to_data": 419, "realiz": 419, "_must_": 419, "001": [419, 434], "outdat": 419, "trick": [419, 420], "despit": 419, "optimizer_actor": 419, "weight_decai": [419, 420], "optimizer_valu": 419, "total_collection_step": 419, "rewards_ev": 419, "collected_fram": 419, "pbar": [419, 421, 422, 432, 433, 434], "numel": [419, 421, 422, 423, 429, 432, 435, 436], "current_fram": [419, 432], "sampled_tensordict": 419, "gn1": 419, "clip_grad_norm_": [419, 421, 432, 433, 434], "gn2": 419, "gn": [419, 434], "td_record": 419, "rn": 419, "set_descript": [419, 421, 422, 432, 433, 434], "2f": 419, "mention": [419, 422, 436, 439], "matplotlib": [419, 421, 422, 423, 432, 433, 434, 436, 439], "pyplot": [419, 421, 422, 423, 432, 433, 434, 436, 439], "plt": [419, 421, 422, 423, 432, 433, 434, 436, 439], "zip": [419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439], "legend": [419, 432], "xlabel": [419, 422, 433, 434], "ylabel": [419, 433], "tight_layout": 419, "takeawai": [419, 420, 423], "distpatch": 419, "jupyt": [419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439], "ipynb": [419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 438, 439], "sphinx": [419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439], "road": 420, "aspect": [420, 426], "highest": [420, 425], "prerequisit": [420, 422], "lookup": 420, "cart": 420, "pole": 420, "un": 420, "actuat": 420, "frictionless": 420, "duelingcnndqnet": 420, "egreedymodul": [420, 422, 423, 425, 429], "is_notebook": 420, "shell": 420, "get_ipython": 420, "__class__": 420, "zmqinteractiveshel": 420, "qtconsol": 420, "terminalinteractiveshel": 420, "ipython": [420, 433, 434], "nameerror": [420, 432], "umbrella": 420, "misplac": 420, "misus": 420, "orchestr": [420, 426, 428], "five": 420, "64x64": 420, "motion": [420, 434], "obs_norm_sd": 420, "mp_context": 420, "simpler": [420, 424], "get_norm_stat": 420, "test_env": 420, "mathbb": 420, "rightarrow": 420, "make_model": 420, "dummy_env": 420, "init_bia": 420, "exploration_modul": [420, 422, 423, 425, 429], "eps_greedy_v": 420, "eps_greedy_val_env": 420, "actor_explor": 420, "get_replay_buff": 420, "n_optim": [420, 426, 427], "parametriz": 420, "get_collector": 420, "bunch": 420, "ubiquit": [420, 424], "get_loss_modul": 420, "target_updat": [420, 432], "995": 420, "hopefulli": 420, "variat": 420, "2e": [420, 434], "wd": 420, "upd": 420, "harder": [420, 438], "5_000": 420, "500000": 420, "100000": 420, "005": [420, 432], "mandatori": [420, 421, 433, 434], "fairer": 420, "budget": 420, "dqn_exp_": 420, "uuid1": [420, 439], "registr": 420, "cumbersom": 420, "buffer_hook": 420, "weight_updat": 420, "aliv": 420, "total_reward": 420, "print_csv_files_in_fold": 420, "folder_path": 420, "csv_file": 420, "output_str": 420, "dirpath": 420, "endswith": 420, "strip": 420, "qvaluenetwork": 420, "accuraci": 420, "fanci": [420, 427], "demonstr": [421, 423, 427, 432, 433, 434, 436, 439], "talk": 421, "six": 421, "sophist": [421, 433], "invent": 421, "theta_k": 421, "pi_": 421, "exceed": 421, "discourag": [421, 434], "indispens": 421, "analyz": 421, "lingua": 421, "franca": 421, "defaultdict": [421, 434], "3e": [421, 422, 432, 433], "max_grad_norm": [421, 432, 433], "sub_batch_s": 421, "num_epoch": [421, 433], "entropy_ep": [421, 433], "charact": [421, 423], "inverteddoublependulum": 421, "transmit": 421, "stai": 421, "confid": [421, 432, 433], "ran": 421, "f_": 421, "mu_": 421, "difficulti": [421, 439], "d_ob": 421, "d_action": 421, "policy_modul": [421, 432, 433], "briefli": [421, 432, 433], "refil": [421, 433], "easiest": [421, 426, 432, 433], "mathemat": [421, 432, 433], "tradeoff": [421, 433], "advantage_modul": 421, "lr_schedul": [421, 434], "cosineannealinglr": [421, 434], "eval_str": 421, "tensordict_data": [421, 433], "data_view": [421, 433], "subdata": [421, 432, 433], "cum_reward_str": 421, "4f": [421, 422, 434], "stepcount_str": 421, "param_group": [421, 432], "lr_str": 421, "eval_rollout": 421, "nice": [421, 424, 427], "cap": [421, 436], "figsiz": [421, 434], "subplot": [421, 432, 434, 439], "titl": [421, 422, 423, 433, 434], "84x84": [422, 423], "accessori": 422, "stamp": 422, "assist": 422, "n_cell": 422, "customiz": 422, "wouldn": 422, "qval": 422, "stoch_polici": 422, "opportun": [422, 432], "uniniti": 422, "again": [422, 423, 424, 425, 427, 433, 435, 436, 439], "strongli": 422, "million": 422, "sake": [422, 435, 436], "20_000": [422, 434], "longest": 422, "npai": 422, "action_spread": 422, "rom": 423, "licens": 423, "strong": 423, "impress": 423, "arduino": 423, "raspberri": 423, "pi": [423, 432, 433, 434], "alon": 423, "examplifi": 423, "ship": 423, "stick": 423, "nearest": 423, "value_mlp": [423, 429], "100_000": [423, 429], "init_rand_step": [423, 429], "total_count": [423, 429], "total_episod": [423, 429], "t0": [423, 429], "screen": [423, 432], "color": [423, 432], "unblock": 423, "policy_transform": 423, "fake_td": 423, "exported_polici": 423, "div": 423, "graph_modul": 423, "print_read": 423, "group0": 423, "group0_agent0_ob": 423, "collid": [423, 433], "group0_agent0": 423, "agent0_ob": 423, "comma": 423, "digress": 423, "exported_stochastic_polici": 423, "trace": 423, "batchsizetransform": 423, "recurrent_polici": 423, "fake_ob": 423, "fake_hidden0": 423, "fake_hidden1": 423, "fake_is_init": 423, "exported_recurrent_polici": 423, "platform": [423, 438], "aoti": 423, "_inductor": 423, "aoti_compile_and_packag": 423, "aoti_load_packag": 423, "pt2": 423, "pkg_path": 423, "package_path": 423, "compiled_modul": 423, "onnxruntim": 423, "showcas": [423, 434], "web": 423, "explain": [423, 435], "tensorrt": 423, "android": 423, "ale_pi": 423, "aleinterfac": 423, "loadrom": 423, "reset_gam": 423, "screen_ob": 423, "getscreenrgb": 423, "tick_param": 423, "bottom": 423, "labelleft": 423, "labelbottom": 423, "imshow": [423, 439], "dynamo_export": 423, "onnx_policy_export": 423, "onnx_file_path": 423, "ort_sess": 423, "inferencesess": 423, "cpuexecutionprovid": 423, "onnxruntime_input": 423, "get_input": 423, "onnx_polici": 423, "lightweight": [423, 428], "onnxruntime_output": 423, "deploy": 423, "topic": [424, 425, 426], "straight": 424, "backtrack": 424, "reset_with_act": 424, "stepped_data": 424, "spatial": 424, "useless": 424, "policyless": 424, "examin": [424, 432], "tackl": 425, "delv": 425, "extractor": 425, "additivegaussianmodul": [425, 432], "exploration_polici": [425, 432], "greedili": 425, "2d": [425, 432, 433], "innov": [425, 426], "rollout_explor": 425, "sole": 426, "supervis": [426, 427, 436, 439], "n_collect": 426, "get_next_batch": 426, "concis": 426, "ddpg_loss": 426, "total_loss": 426, "prove": 426, "reliev": 426, "concern": 426, "accustom": 427, "surprisingli": 427, "fundament": 427, "art": [427, 432, 433], "countless": 427, "yourself": [427, 432, 433], "everywher": 428, "log_scalar": 428, "my_scalar": 428, "saw": [428, 434, 436], "excess": 428, "lesson": 429, "voluntarili": 429, "torchrl_logg": 429, "training_loop": 429, "video_record": 429, "arbitrarili": 429, "t1": 429, "conclud": [429, 435], "tutorials_python": 430, "tutorials_jupyt": 430, "env1_obs_kei": 431, "observation_stand": 431, "env2_obs_kei": 431, "observation_walk": 431, "tdreset1": 431, "tdreset2": 431, "lazy_stack": 431, "policy_common": 431, "policy_stand": 431, "policy_walk": 431, "But": 431, "env1_mak": 431, "env2_mak": 431, "_single_task": 431, "td_rollout": 431, "matteo": [432, 433], "bettini": [432, 433], "benchmarl": [432, 433], "simple_tag": 432, "maddpg": [432, 433], "multiagentparticleenviron": 432, "mpe": 432, "centralis": [432, 433], "tie": [432, 433], "iddpg": [432, 433], "richard": 432, "andrew": 432, "mit": 432, "press": 432, "2018": 432, "mathbf": [432, 433], "decentralis": [432, 433], "literatur": [432, 433], "overcom": [432, 433], "stationari": [432, 433], "concurr": [432, 433], "establish": 432, "gui": [432, 433], "is_sphinx": 432, "__sphinx_build__": 432, "n_iter": [432, 433, 434], "evad": 432, "iteration_when_stop_training_evad": 432, "memory_s": 432, "n_optimiser_step": 432, "train_batch_s": 432, "polyak_tau": 432, "chaser": 432, "red": 432, "circl": [432, 433], "green": 432, "touch": [432, 434], "penal": [432, 433], "obstacl": 432, "drag": [432, 433], "elast": [432, 433], "collis": [432, 433], "imped": 432, "n_chaser": 432, "n_evad": 432, "n_obstacl": 432, "use_vma": 432, "simple_tag_v3": 432, "num_good": 432, "num_adversari": 432, "num_obstacl": 432, "max_cycl": 432, "num_vmas_env": [432, 433], "num_good_ag": 432, "num_landmark": 432, "four": [432, 433, 434], "n_agents_in_that_group": 432, "stress": [432, 433], "paramount": [432, 433], "n_rollout_step": [432, 433], "evolut": [432, 433], "group_nam": 432, "n_agents_in_group": 432, "minor": 432, "agents_exploration_polici": 432, "utilis": [432, 433], "n_obs_per_ag": [432, 433], "n_actions_per_ag": [432, 433], "share_parameters_polici": [432, 433], "policy_net": [432, 433], "_agent": 432, "grant": [432, 433], "converg": [432, 433], "share_parameters_crit": [432, 433], "obs_act": 432, "cat_modul": 432, "critic_modul": 432, "fantast": [432, 433], "reset_td": 432, "interfer": 432, "subject": [432, 434], "flatten_kei": 432, "process_batch": 432, "group_shap": 432, "get_item_shap": [432, 433], "nested_done_kei": 432, "nested_terminated_kei": 432, "desc": [432, 433], "episode_reward_mean_": 432, "episode_reward_mean_map": 432, "train_group_map": 432, "group_batch": 432, "_group": 432, "loss_nam": 432, "episode_reward_mean": [432, 433], "fig": [432, 436], "set_ylabel": 432, "axvlin": 432, "orang": 432, "set_xlabel": 432, "video_logg": 432, "vmas_log": 432, "env_with_rend": 432, "vmas_rend": 432, "print_log_dir": 432, "profici": [432, 433], "lidar": 433, "sensor": 433, "mappo": 433, "ippo": 433, "analys": 433, "visualis": 433, "vmas_devic": 433, "6_000": 433, "minibatch_s": 433, "generalis": 433, "simd": 433, "warp": 433, "todai": 433, "surround": 433, "dot": [433, 434], "scenario_nam": 433, "critic_net": 433, "minibatch": 433, "episode_reward_mean_list": 433, "critic_network_param": 433, "target_critic_network_param": 433, "xvfb": 433, "pyvirtualdisplai": 433, "1400": 433, "900": 433, "pil": 433, "rendering_callback": 433, "fromarrai": 433, "gif": 433, "save_al": 433, "append_imag": 433, "freeli": 434, "broader": 434, "wider": 434, "acquaint": 434, "avenu": 434, "_apply_to_composit": 434, "default_x": 434, "default_i": 434, "upward": 434, "angular": 434, "sin": 434, "rad": 434, "angl": 434, "deleg": 434, "new_th": 434, "new_thdot": 434, "g_forc": 434, "angle_norm": 434, "albeit": 434, "high_th": 434, "high_thdot": 434, "low_th": 434, "low_thdot": 434, "trivial": 434, "irrelev": 434, "_make_spec": 434, "td_param": 434, "render_fp": 434, "random_": 434, "_make_step": 434, "staticmethod": 434, "skeleton": 434, "unitari": 434, "sine": 434, "cosin": 434, "sintransform": 434, "costransform": 434, "t_sin": 434, "t_co": 434, "cat_transform": 434, "simple_rollout": 434, "unexplor": 434, "init_td": 434, "traj_return": 434, "last_reward": 434, "is_ipython": 434, "inlin": 434, "get_backend": 434, "ion": 434, "gcf": 434, "clear_output": 434, "r3mtransform": 435, "embodi": 435, "env_transform": [435, 439], "wiser": 435, "batteri": 436, "buffer_list": 436, "lowest": 436, "medium": 436, "buffer_lazytensor": 436, "tempdir": 436, "buffer_lazymemmap": 436, "fullest": 436, "mydata": 436, "buffer_lazi": 436, "background": 436, "question": [436, 438], "_i": 436, "artifici": 436, "hamper": 436, "she": 436, "pars": 436, "proport": 436, "reappear": 436, "unfold": 436, "problemat": 436, "4th": 436, "gc": 436, "prioritizedslicesampl": 436, "tensordictmaxvaluewrit": 436, "demo": 438, "icml": 438, "vmoen": 438, "fb": 438, "invest": 438, "media": 438, "predominantli": 438, "data2": 438, "sub_key1": 438, "scturctur": 438, "data_stack": 438, "data_sampl": 438, "_sampler": 438, "_sum_tre": 438, "modulenotfounderror": 438, "noopresetenv": [438, 439], "backbone_modul": 438, "params_expand": 438, "exec_sequ": 438, "tensordict_exp": 438, "base_modul": 438, "tensordicts_prealloc": 438, "tensordicts_stack": 438, "tensordict_rollout": [438, 439], "automatical": 438, "60": 438, "particularili": 438, "concatmodul": 438, "loss_td": 438, "contributor": 438, "curiou": 438, "nascent": 438, "unsupervis": 439, "unifi": 439, "_build_env": 439, "deserv": 439, "__episode__": 439, "__trajectory__": 439, "void": 439, "reproduct": 439, "tensordict_tprim": 439, "wrapper1": 439, "wrapper2": 439, "obviou": 439, "truth": 439, "env_transformed_bi": 439, "stanc": 439, "transformeddistribut": 439, "base_dist": 439, "concat": 439, "mofidi": 439, "transformedenviron": 439, "moderet": 439, "computation": 439, "incom": 439, "amongst": 439, "has_cuda": 439, "convention": 439, "markovian": 439, "bar_": 439, "get_someth": 439, "aargh": 439, "is_clos": 439, "foo_list": 439, "121": 439, "evolv": 439, "steadi": 439, "approx": 439, "absor": 439, "_extra_st": 439}, "objects": {"torchrl": [[12, 0, 1, "", "auto_unwrap_transformed_env"], [242, 0, 1, "", "implement_for"], [386, 0, 1, "", "set_auto_unwrap_transformed_env"]], "torchrl.collectors": [[13, 0, 1, "", "DataCollectorBase"], [14, 0, 1, "", "MultiSyncDataCollector"], [15, 0, 1, "", "MultiaSyncDataCollector"], [16, 0, 1, "", "SyncDataCollector"], [17, 0, 1, "", "aSyncDataCollector"]], "torchrl.collectors.DataCollectorBase": [[13, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.MultiSyncDataCollector": [[14, 1, 1, "", "load_state_dict"], [14, 1, 1, "", "reset"], [14, 1, 1, "", "set_seed"], [14, 1, 1, "", "shutdown"], [14, 1, 1, "", "state_dict"], [14, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.MultiaSyncDataCollector": [[15, 1, 1, "", "load_state_dict"], [15, 1, 1, "", "reset"], [15, 1, 1, "", "set_seed"], [15, 1, 1, "", "shutdown"], [15, 1, 1, "", "state_dict"], [15, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.SyncDataCollector": [[16, 1, 1, "", "iterator"], [16, 1, 1, "", "load_state_dict"], [16, 1, 1, "", "reset"], [16, 1, 1, "", "rollout"], [16, 1, 1, "", "set_seed"], [16, 1, 1, "", "shutdown"], [16, 1, 1, "", "state_dict"], [16, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.aSyncDataCollector": [[17, 1, 1, "", "load_state_dict"], [17, 1, 1, "", "reset"], [17, 1, 1, "", "set_seed"], [17, 1, 1, "", "shutdown"], [17, 1, 1, "", "state_dict"], [17, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed": [[18, 0, 1, "", "DistributedDataCollector"], [19, 0, 1, "", "DistributedSyncDataCollector"], [20, 0, 1, "", "RPCDataCollector"], [21, 0, 1, "", "RayCollector"], [22, 0, 1, "", "submitit_delayed_launcher"]], "torchrl.collectors.distributed.DistributedDataCollector": [[18, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.DistributedSyncDataCollector": [[19, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RPCDataCollector": [[20, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RayCollector": [[21, 1, 1, "", "add_collectors"], [21, 1, 1, "", "async_shutdown"], [21, 1, 1, "", "load_state_dict"], [21, 1, 1, "", "local_policy"], [21, 1, 1, "", "remote_collectors"], [21, 1, 1, "", "set_seed"], [21, 1, 1, "", "shutdown"], [21, 1, 1, "", "start"], [21, 1, 1, "", "state_dict"], [21, 1, 1, "", "stop_remote_collectors"], [21, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.utils": [[23, 2, 1, "", "split_trajectories"]], "torchrl.data": [[24, 0, 1, "", "AdaptiveKLController"], [25, 0, 1, "", "Binary"], [26, 0, 1, "", "BinaryDiscreteTensorSpec"], [27, 0, 1, "", "BinaryToDecimal"], [28, 0, 1, "", "Bounded"], [29, 0, 1, "", "BoundedTensorSpec"], [30, 0, 1, "", "Categorical"], [31, 0, 1, "", "Composite"], [32, 0, 1, "", "CompositeSpec"], [33, 0, 1, "", "ConstantKLController"], [34, 0, 1, "", "DensifyReward"], [35, 0, 1, "", "DiscreteTensorSpec"], [36, 0, 1, "", "Flat2TED"], [37, 0, 1, "", "H5Combine"], [38, 0, 1, "", "H5Split"], [39, 0, 1, "", "HashToInt"], [40, 0, 1, "", "LLMData"], [41, 0, 1, "", "LLMInput"], [42, 0, 1, "", "LLMOutput"], [43, 0, 1, "", "LazyStackedCompositeSpec"], [44, 0, 1, "", "LazyStackedTensorSpec"], [45, 0, 1, "", "MCTSForest"], [46, 0, 1, "", "MultiCategorical"], [47, 0, 1, "", "MultiDiscreteTensorSpec"], [48, 0, 1, "", "MultiOneHot"], [49, 0, 1, "", "MultiOneHotDiscreteTensorSpec"], [50, 0, 1, "", "MultiStep"], [51, 0, 1, "", "Nested2TED"], [52, 0, 1, "", "NonTensor"], [53, 0, 1, "", "NonTensorSpec"], [54, 0, 1, "", "OneHot"], [55, 0, 1, "", "OneHotDiscreteTensorSpec"], [56, 0, 1, "", "PairwiseDataset"], [57, 0, 1, "", "PrioritizedReplayBuffer"], [58, 0, 1, "", "PromptData"], [59, 0, 1, "", "PromptTensorDictTokenizer"], [60, 0, 1, "", "QueryModule"], [61, 0, 1, "", "RandomProjectionHash"], [62, 0, 1, "", "RayReplayBuffer"], [63, 0, 1, "", "RemoteTensorDictReplayBuffer"], [64, 0, 1, "", "ReplayBuffer"], [65, 0, 1, "", "RewardData"], [66, 0, 1, "", "RolloutFromModel"], [67, 0, 1, "", "SipHash"], [68, 0, 1, "", "Stacked"], [69, 0, 1, "", "StackedComposite"], [70, 0, 1, "", "TED2Flat"], [71, 0, 1, "", "TED2Nested"], [72, 0, 1, "", "TensorDictMap"], [73, 0, 1, "", "TensorDictPrioritizedReplayBuffer"], [74, 0, 1, "", "TensorDictReplayBuffer"], [75, 0, 1, "", "TensorDictTokenizer"], [76, 0, 1, "", "TensorMap"], [77, 0, 1, "", "TensorSpec"], [78, 0, 1, "", "TokenizedDatasetLoader"], [79, 0, 1, "", "Tree"], [80, 0, 1, "", "Unbounded"], [81, 0, 1, "", "UnboundedContinuous"], [82, 0, 1, "", "UnboundedContinuousTensorSpec"], [83, 0, 1, "", "UnboundedDiscrete"], [84, 0, 1, "", "UnboundedDiscreteTensorSpec"], [85, 0, 1, "", "check_no_exclusive_keys"], [86, 0, 1, "", "consolidate_spec"], [87, 0, 1, "", "contains_lazy_spec"], [88, 0, 1, "", "create_infinite_iterator"], [89, 0, 1, "", "get_dataloader"]], "torchrl.data.AdaptiveKLController": [[24, 1, 1, "", "update"]], "torchrl.data.Binary": [[25, 1, 1, "", "assert_is_in"], [25, 1, 1, "", "cardinality"], [25, 1, 1, "", "clear_device_"], [25, 1, 1, "", "clone"], [25, 1, 1, "", "contains"], [25, 1, 1, "", "cpu"], [25, 1, 1, "", "cuda"], [25, 3, 1, "", "device"], [25, 1, 1, "", "encode"], [25, 1, 1, "", "enumerate"], [25, 1, 1, "", "expand"], [25, 1, 1, "", "flatten"], [25, 1, 1, "", "implements_for_spec"], [25, 1, 1, "", "index"], [25, 1, 1, "", "is_in"], [25, 1, 1, "", "make_neg_dim"], [25, 4, 1, "", "ndim"], [25, 1, 1, "", "ndimension"], [25, 1, 1, "", "one"], [25, 1, 1, "", "ones"], [25, 1, 1, "", "project"], [25, 1, 1, "", "rand"], [25, 1, 1, "", "reshape"], [25, 1, 1, "", "sample"], [25, 1, 1, "", "set_provisional_n"], [25, 1, 1, "", "squeeze"], [25, 1, 1, "", "to"], [25, 1, 1, "", "to_categorical"], [25, 1, 1, "", "to_categorical_spec"], [25, 1, 1, "", "to_numpy"], [25, 1, 1, "", "to_one_hot"], [25, 1, 1, "", "to_one_hot_spec"], [25, 1, 1, "", "type_check"], [25, 1, 1, "", "unflatten"], [25, 1, 1, "", "unsqueeze"], [25, 1, 1, "", "update_mask"], [25, 1, 1, "", "view"], [25, 1, 1, "", "zero"], [25, 1, 1, "", "zeros"]], "torchrl.data.BinaryDiscreteTensorSpec": [[26, 1, 1, "", "assert_is_in"], [26, 1, 1, "", "cardinality"], [26, 1, 1, "", "clear_device_"], [26, 1, 1, "", "clone"], [26, 1, 1, "", "contains"], [26, 1, 1, "", "cpu"], [26, 1, 1, "", "cuda"], [26, 3, 1, "", "device"], [26, 1, 1, "", "encode"], [26, 1, 1, "", "enumerate"], [26, 1, 1, "", "expand"], [26, 1, 1, "", "flatten"], [26, 1, 1, "", "implements_for_spec"], [26, 1, 1, "", "index"], [26, 1, 1, "", "is_in"], [26, 1, 1, "", "make_neg_dim"], [26, 4, 1, "", "ndim"], [26, 1, 1, "", "ndimension"], [26, 1, 1, "", "one"], [26, 1, 1, "", "ones"], [26, 1, 1, "", "project"], [26, 1, 1, "", "rand"], [26, 1, 1, "", "reshape"], [26, 1, 1, "", "sample"], [26, 1, 1, "", "set_provisional_n"], [26, 1, 1, "", "squeeze"], [26, 1, 1, "", "to"], [26, 1, 1, "", "to_categorical"], [26, 1, 1, "", "to_categorical_spec"], [26, 1, 1, "", "to_numpy"], [26, 1, 1, "", "to_one_hot"], [26, 1, 1, "", "to_one_hot_spec"], [26, 1, 1, "", "type_check"], [26, 1, 1, "", "unflatten"], [26, 1, 1, "", "unsqueeze"], [26, 1, 1, "", "update_mask"], [26, 1, 1, "", "view"], [26, 1, 1, "", "zero"], [26, 1, 1, "", "zeros"]], "torchrl.data.BinaryToDecimal": [[27, 1, 1, "", "add_module"], [27, 1, 1, "", "apply"], [27, 1, 1, "", "bfloat16"], [27, 1, 1, "", "buffers"], [27, 1, 1, "", "children"], [27, 1, 1, "", "compile"], [27, 1, 1, "", "cpu"], [27, 1, 1, "", "cuda"], [27, 1, 1, "", "double"], [27, 1, 1, "", "eval"], [27, 1, 1, "", "extra_repr"], [27, 1, 1, "", "float"], [27, 1, 1, "", "forward"], [27, 1, 1, "", "get_buffer"], [27, 1, 1, "", "get_extra_state"], [27, 1, 1, "", "get_parameter"], [27, 1, 1, "", "get_submodule"], [27, 1, 1, "", "half"], [27, 1, 1, "", "ipu"], [27, 1, 1, "", "load_state_dict"], [27, 1, 1, "", "modules"], [27, 1, 1, "", "mtia"], [27, 1, 1, "", "named_buffers"], [27, 1, 1, "", "named_children"], [27, 1, 1, "", "named_modules"], [27, 1, 1, "", "named_parameters"], [27, 1, 1, "", "parameters"], [27, 1, 1, "", "register_backward_hook"], [27, 1, 1, "", "register_buffer"], [27, 1, 1, "", "register_forward_hook"], [27, 1, 1, "", "register_forward_pre_hook"], [27, 1, 1, "", "register_full_backward_hook"], [27, 1, 1, "", "register_full_backward_pre_hook"], [27, 1, 1, "", "register_load_state_dict_post_hook"], [27, 1, 1, "", "register_load_state_dict_pre_hook"], [27, 1, 1, "", "register_module"], [27, 1, 1, "", "register_parameter"], [27, 1, 1, "", "register_state_dict_post_hook"], [27, 1, 1, "", "register_state_dict_pre_hook"], [27, 1, 1, "", "requires_grad_"], [27, 1, 1, "", "set_extra_state"], [27, 1, 1, "", "set_submodule"], [27, 1, 1, "", "share_memory"], [27, 1, 1, "", "state_dict"], [27, 1, 1, "", "to"], [27, 1, 1, "", "to_empty"], [27, 1, 1, "", "train"], [27, 1, 1, "", "type"], [27, 1, 1, "", "xpu"], [27, 1, 1, "", "zero_grad"]], "torchrl.data.Bounded": [[28, 1, 1, "", "assert_is_in"], [28, 1, 1, "", "cardinality"], [28, 1, 1, "", "clear_device_"], [28, 1, 1, "", "clone"], [28, 1, 1, "", "contains"], [28, 1, 1, "", "cpu"], [28, 1, 1, "", "cuda"], [28, 4, 1, "", "device"], [28, 1, 1, "", "encode"], [28, 1, 1, "", "enumerate"], [28, 1, 1, "", "expand"], [28, 1, 1, "", "flatten"], [28, 1, 1, "", "implements_for_spec"], [28, 1, 1, "", "index"], [28, 1, 1, "", "is_in"], [28, 1, 1, "", "make_neg_dim"], [28, 4, 1, "", "ndim"], [28, 1, 1, "", "ndimension"], [28, 1, 1, "", "one"], [28, 1, 1, "", "ones"], [28, 1, 1, "", "project"], [28, 1, 1, "", "rand"], [28, 1, 1, "", "reshape"], [28, 1, 1, "", "sample"], [28, 1, 1, "", "squeeze"], [28, 1, 1, "", "to"], [28, 1, 1, "", "to_numpy"], [28, 1, 1, "", "type_check"], [28, 1, 1, "", "unflatten"], [28, 1, 1, "", "unsqueeze"], [28, 1, 1, "", "view"], [28, 1, 1, "", "zero"], [28, 1, 1, "", "zeros"]], "torchrl.data.BoundedTensorSpec": [[29, 1, 1, "", "assert_is_in"], [29, 1, 1, "", "cardinality"], [29, 1, 1, "", "clear_device_"], [29, 1, 1, "", "clone"], [29, 1, 1, "", "contains"], [29, 1, 1, "", "cpu"], [29, 1, 1, "", "cuda"], [29, 4, 1, "", "device"], [29, 1, 1, "", "encode"], [29, 1, 1, "", "enumerate"], [29, 1, 1, "", "expand"], [29, 1, 1, "", "flatten"], [29, 1, 1, "", "implements_for_spec"], [29, 1, 1, "", "index"], [29, 1, 1, "", "is_in"], [29, 1, 1, "", "make_neg_dim"], [29, 4, 1, "", "ndim"], [29, 1, 1, "", "ndimension"], [29, 1, 1, "", "one"], [29, 1, 1, "", "ones"], [29, 1, 1, "", "project"], [29, 1, 1, "", "rand"], [29, 1, 1, "", "reshape"], [29, 1, 1, "", "sample"], [29, 1, 1, "", "squeeze"], [29, 1, 1, "", "to"], [29, 1, 1, "", "to_numpy"], [29, 1, 1, "", "type_check"], [29, 1, 1, "", "unflatten"], [29, 1, 1, "", "unsqueeze"], [29, 1, 1, "", "view"], [29, 1, 1, "", "zero"], [29, 1, 1, "", "zeros"]], "torchrl.data.Categorical": [[30, 1, 1, "", "assert_is_in"], [30, 1, 1, "", "cardinality"], [30, 1, 1, "", "clear_device_"], [30, 1, 1, "", "clone"], [30, 1, 1, "", "contains"], [30, 1, 1, "", "cpu"], [30, 1, 1, "", "cuda"], [30, 3, 1, "", "device"], [30, 1, 1, "", "encode"], [30, 1, 1, "", "enumerate"], [30, 1, 1, "", "expand"], [30, 1, 1, "", "flatten"], [30, 1, 1, "", "implements_for_spec"], [30, 1, 1, "", "index"], [30, 1, 1, "", "is_in"], [30, 1, 1, "", "make_neg_dim"], [30, 4, 1, "", "ndim"], [30, 1, 1, "", "ndimension"], [30, 1, 1, "", "one"], [30, 1, 1, "", "ones"], [30, 1, 1, "", "project"], [30, 1, 1, "", "rand"], [30, 1, 1, "", "reshape"], [30, 1, 1, "", "sample"], [30, 1, 1, "", "set_provisional_n"], [30, 1, 1, "", "squeeze"], [30, 1, 1, "", "to"], [30, 1, 1, "", "to_categorical"], [30, 1, 1, "", "to_categorical_spec"], [30, 1, 1, "", "to_numpy"], [30, 1, 1, "", "to_one_hot"], [30, 1, 1, "", "to_one_hot_spec"], [30, 1, 1, "", "type_check"], [30, 1, 1, "", "unflatten"], [30, 1, 1, "", "unsqueeze"], [30, 1, 1, "", "update_mask"], [30, 1, 1, "", "view"], [30, 1, 1, "", "zero"], [30, 1, 1, "", "zeros"]], "torchrl.data.Composite": [[31, 1, 1, "", "assert_is_in"], [31, 1, 1, "", "cardinality"], [31, 1, 1, "", "clear_device_"], [31, 1, 1, "", "clone"], [31, 1, 1, "", "contains"], [31, 1, 1, "", "cpu"], [31, 1, 1, "", "cuda"], [31, 4, 1, "", "device"], [31, 1, 1, "", "empty"], [31, 1, 1, "", "encode"], [31, 1, 1, "", "enumerate"], [31, 1, 1, "", "expand"], [31, 1, 1, "", "flatten"], [31, 1, 1, "", "get"], [31, 1, 1, "", "implements_for_spec"], [31, 1, 1, "", "index"], [31, 1, 1, "", "is_empty"], [31, 1, 1, "", "is_in"], [31, 1, 1, "", "items"], [31, 1, 1, "", "keys"], [31, 1, 1, "", "lock_"], [31, 1, 1, "", "make_neg_dim"], [31, 4, 1, "", "ndim"], [31, 1, 1, "", "ndimension"], [31, 1, 1, "", "one"], [31, 1, 1, "", "ones"], [31, 1, 1, "", "pop"], [31, 1, 1, "", "project"], [31, 1, 1, "", "rand"], [31, 1, 1, "", "reshape"], [31, 1, 1, "", "sample"], [31, 1, 1, "", "separates"], [31, 1, 1, "", "set"], [31, 1, 1, "", "squeeze"], [31, 1, 1, "", "to"], [31, 1, 1, "", "to_numpy"], [31, 1, 1, "", "type_check"], [31, 1, 1, "", "unflatten"], [31, 1, 1, "", "unlock_"], [31, 1, 1, "", "unsqueeze"], [31, 1, 1, "", "values"], [31, 1, 1, "", "view"], [31, 1, 1, "", "zero"], [31, 1, 1, "", "zeros"]], "torchrl.data.CompositeSpec": [[32, 1, 1, "", "assert_is_in"], [32, 1, 1, "", "cardinality"], [32, 1, 1, "", "clear_device_"], [32, 1, 1, "", "clone"], [32, 1, 1, "", "contains"], [32, 1, 1, "", "cpu"], [32, 1, 1, "", "cuda"], [32, 4, 1, "", "device"], [32, 1, 1, "", "empty"], [32, 1, 1, "", "encode"], [32, 1, 1, "", "enumerate"], [32, 1, 1, "", "expand"], [32, 1, 1, "", "flatten"], [32, 1, 1, "", "get"], [32, 1, 1, "", "implements_for_spec"], [32, 1, 1, "", "index"], [32, 1, 1, "", "is_empty"], [32, 1, 1, "", "is_in"], [32, 1, 1, "", "items"], [32, 1, 1, "", "keys"], [32, 1, 1, "", "lock_"], [32, 1, 1, "", "make_neg_dim"], [32, 4, 1, "", "ndim"], [32, 1, 1, "", "ndimension"], [32, 1, 1, "", "one"], [32, 1, 1, "", "ones"], [32, 1, 1, "", "pop"], [32, 1, 1, "", "project"], [32, 1, 1, "", "rand"], [32, 1, 1, "", "reshape"], [32, 1, 1, "", "sample"], [32, 1, 1, "", "separates"], [32, 1, 1, "", "set"], [32, 1, 1, "", "squeeze"], [32, 1, 1, "", "to"], [32, 1, 1, "", "to_numpy"], [32, 1, 1, "", "type_check"], [32, 1, 1, "", "unflatten"], [32, 1, 1, "", "unlock_"], [32, 1, 1, "", "unsqueeze"], [32, 1, 1, "", "values"], [32, 1, 1, "", "view"], [32, 1, 1, "", "zero"], [32, 1, 1, "", "zeros"]], "torchrl.data.DensifyReward": [[34, 1, 1, "", "add_module"], [34, 1, 1, "", "apply"], [34, 1, 1, "", "bfloat16"], [34, 1, 1, "", "buffers"], [34, 1, 1, "", "children"], [34, 1, 1, "", "compile"], [34, 1, 1, "", "cpu"], [34, 1, 1, "", "cuda"], [34, 1, 1, "", "double"], [34, 1, 1, "", "eval"], [34, 1, 1, "", "extra_repr"], [34, 1, 1, "", "float"], [34, 1, 1, "", "forward"], [34, 1, 1, "", "get_buffer"], [34, 1, 1, "", "get_extra_state"], [34, 1, 1, "", "get_parameter"], [34, 1, 1, "", "get_submodule"], [34, 1, 1, "", "half"], [34, 1, 1, "", "ipu"], [34, 1, 1, "", "is_tdmodule_compatible"], [34, 1, 1, "", "load_state_dict"], [34, 1, 1, "", "modules"], [34, 1, 1, "", "mtia"], [34, 1, 1, "", "named_buffers"], [34, 1, 1, "", "named_children"], [34, 1, 1, "", "named_modules"], [34, 1, 1, "", "named_parameters"], [34, 1, 1, "", "parameters"], [34, 1, 1, "", "register_backward_hook"], [34, 1, 1, "", "register_buffer"], [34, 1, 1, "", "register_forward_hook"], [34, 1, 1, "", "register_forward_pre_hook"], [34, 1, 1, "", "register_full_backward_hook"], [34, 1, 1, "", "register_full_backward_pre_hook"], [34, 1, 1, "", "register_load_state_dict_post_hook"], [34, 1, 1, "", "register_load_state_dict_pre_hook"], [34, 1, 1, "", "register_module"], [34, 1, 1, "", "register_parameter"], [34, 1, 1, "", "register_state_dict_post_hook"], [34, 1, 1, "", "register_state_dict_pre_hook"], [34, 1, 1, "", "requires_grad_"], [34, 1, 1, "", "reset_out_keys"], [34, 1, 1, "", "reset_parameters_recursive"], [34, 1, 1, "", "select_out_keys"], [34, 1, 1, "", "set_extra_state"], [34, 1, 1, "", "set_submodule"], [34, 1, 1, "", "share_memory"], [34, 1, 1, "", "state_dict"], [34, 1, 1, "", "to"], [34, 1, 1, "", "to_empty"], [34, 1, 1, "", "train"], [34, 1, 1, "", "type"], [34, 1, 1, "", "xpu"], [34, 1, 1, "", "zero_grad"]], "torchrl.data.DiscreteTensorSpec": [[35, 1, 1, "", "assert_is_in"], [35, 1, 1, "", "cardinality"], [35, 1, 1, "", "clear_device_"], [35, 1, 1, "", "clone"], [35, 1, 1, "", "contains"], [35, 1, 1, "", "cpu"], [35, 1, 1, "", "cuda"], [35, 3, 1, "", "device"], [35, 1, 1, "", "encode"], [35, 1, 1, "", "enumerate"], [35, 1, 1, "", "expand"], [35, 1, 1, "", "flatten"], [35, 1, 1, "", "implements_for_spec"], [35, 1, 1, "", "index"], [35, 1, 1, "", "is_in"], [35, 1, 1, "", "make_neg_dim"], [35, 4, 1, "", "ndim"], [35, 1, 1, "", "ndimension"], [35, 1, 1, "", "one"], [35, 1, 1, "", "ones"], [35, 1, 1, "", "project"], [35, 1, 1, "", "rand"], [35, 1, 1, "", "reshape"], [35, 1, 1, "", "sample"], [35, 1, 1, "", "set_provisional_n"], [35, 1, 1, "", "squeeze"], [35, 1, 1, "", "to"], [35, 1, 1, "", "to_categorical"], [35, 1, 1, "", "to_categorical_spec"], [35, 1, 1, "", "to_numpy"], [35, 1, 1, "", "to_one_hot"], [35, 1, 1, "", "to_one_hot_spec"], [35, 1, 1, "", "type_check"], [35, 1, 1, "", "unflatten"], [35, 1, 1, "", "unsqueeze"], [35, 1, 1, "", "update_mask"], [35, 1, 1, "", "view"], [35, 1, 1, "", "zero"], [35, 1, 1, "", "zeros"]], "torchrl.data.HashToInt": [[39, 1, 1, "", "add_module"], [39, 1, 1, "", "apply"], [39, 1, 1, "", "bfloat16"], [39, 1, 1, "", "buffers"], [39, 1, 1, "", "children"], [39, 1, 1, "", "compile"], [39, 1, 1, "", "cpu"], [39, 1, 1, "", "cuda"], [39, 1, 1, "", "double"], [39, 1, 1, "", "eval"], [39, 1, 1, "", "extra_repr"], [39, 1, 1, "", "float"], [39, 1, 1, "", "forward"], [39, 1, 1, "", "get_buffer"], [39, 1, 1, "", "get_extra_state"], [39, 1, 1, "", "get_parameter"], [39, 1, 1, "", "get_submodule"], [39, 1, 1, "", "half"], [39, 1, 1, "", "ipu"], [39, 1, 1, "", "load_state_dict"], [39, 1, 1, "", "modules"], [39, 1, 1, "", "mtia"], [39, 1, 1, "", "named_buffers"], [39, 1, 1, "", "named_children"], [39, 1, 1, "", "named_modules"], [39, 1, 1, "", "named_parameters"], [39, 1, 1, "", "parameters"], [39, 1, 1, "", "register_backward_hook"], [39, 1, 1, "", "register_buffer"], [39, 1, 1, "", "register_forward_hook"], [39, 1, 1, "", "register_forward_pre_hook"], [39, 1, 1, "", "register_full_backward_hook"], [39, 1, 1, "", "register_full_backward_pre_hook"], [39, 1, 1, "", "register_load_state_dict_post_hook"], [39, 1, 1, "", "register_load_state_dict_pre_hook"], [39, 1, 1, "", "register_module"], [39, 1, 1, "", "register_parameter"], [39, 1, 1, "", "register_state_dict_post_hook"], [39, 1, 1, "", "register_state_dict_pre_hook"], [39, 1, 1, "", "requires_grad_"], [39, 1, 1, "", "set_extra_state"], [39, 1, 1, "", "set_submodule"], [39, 1, 1, "", "share_memory"], [39, 1, 1, "", "state_dict"], [39, 1, 1, "", "to"], [39, 1, 1, "", "to_empty"], [39, 1, 1, "", "train"], [39, 1, 1, "", "type"], [39, 1, 1, "", "xpu"], [39, 1, 1, "", "zero_grad"]], "torchrl.data.LLMData": [[40, 4, 1, "", "device"], [40, 1, 1, "", "dumps"], [40, 1, 1, "", "fields"], [40, 1, 1, "", "from_tensordict"], [40, 1, 1, "", "get"], [40, 1, 1, "", "load"], [40, 1, 1, "", "load_"], [40, 1, 1, "", "load_memmap"], [40, 1, 1, "", "load_state_dict"], [40, 1, 1, "", "memmap"], [40, 1, 1, "", "memmap_"], [40, 1, 1, "", "memmap_like"], [40, 1, 1, "", "memmap_refresh_"], [40, 1, 1, "", "save"], [40, 1, 1, "", "set"], [40, 1, 1, "", "state_dict"], [40, 1, 1, "", "to_tensordict"], [40, 1, 1, "", "unbind"]], "torchrl.data.LLMInput": [[41, 4, 1, "", "device"], [41, 1, 1, "", "dumps"], [41, 1, 1, "", "fields"], [41, 1, 1, "", "from_tensordict"], [41, 1, 1, "", "get"], [41, 1, 1, "", "load"], [41, 1, 1, "", "load_"], [41, 1, 1, "", "load_memmap"], [41, 1, 1, "", "load_state_dict"], [41, 1, 1, "", "memmap"], [41, 1, 1, "", "memmap_"], [41, 1, 1, "", "memmap_like"], [41, 1, 1, "", "memmap_refresh_"], [41, 1, 1, "", "save"], [41, 1, 1, "", "set"], [41, 1, 1, "", "state_dict"], [41, 1, 1, "", "to_tensordict"], [41, 1, 1, "", "unbind"]], "torchrl.data.LLMOutput": [[42, 4, 1, "", "device"], [42, 1, 1, "", "dumps"], [42, 1, 1, "", "fields"], [42, 1, 1, "", "from_tensordict"], [42, 1, 1, "", "get"], [42, 1, 1, "", "load"], [42, 1, 1, "", "load_"], [42, 1, 1, "", "load_memmap"], [42, 1, 1, "", "load_state_dict"], [42, 1, 1, "", "memmap"], [42, 1, 1, "", "memmap_"], [42, 1, 1, "", "memmap_like"], [42, 1, 1, "", "memmap_refresh_"], [42, 1, 1, "", "save"], [42, 1, 1, "", "set"], [42, 1, 1, "", "state_dict"], [42, 1, 1, "", "to_tensordict"], [42, 1, 1, "", "unbind"]], "torchrl.data.LazyStackedCompositeSpec": [[43, 1, 1, "", "assert_is_in"], [43, 1, 1, "", "cardinality"], [43, 1, 1, "", "clear_device_"], [43, 1, 1, "", "clone"], [43, 1, 1, "", "contains"], [43, 1, 1, "", "cpu"], [43, 1, 1, "", "cuda"], [43, 4, 1, "", "device"], [43, 1, 1, "", "empty"], [43, 1, 1, "", "encode"], [43, 1, 1, "", "enumerate"], [43, 1, 1, "", "expand"], [43, 1, 1, "", "flatten"], [43, 1, 1, "", "get"], [43, 1, 1, "", "implements_for_spec"], [43, 1, 1, "", "index"], [43, 1, 1, "", "is_empty"], [43, 1, 1, "", "is_in"], [43, 1, 1, "", "items"], [43, 1, 1, "", "keys"], [43, 1, 1, "", "lock_"], [43, 1, 1, "", "make_neg_dim"], [43, 4, 1, "", "ndim"], [43, 1, 1, "", "ndimension"], [43, 1, 1, "", "one"], [43, 1, 1, "", "ones"], [43, 1, 1, "", "pop"], [43, 1, 1, "", "project"], [43, 1, 1, "", "rand"], [43, 1, 1, "", "reshape"], [43, 1, 1, "", "sample"], [43, 1, 1, "", "separates"], [43, 1, 1, "", "set"], [43, 1, 1, "", "squeeze"], [43, 1, 1, "", "to"], [43, 1, 1, "", "to_numpy"], [43, 1, 1, "", "type_check"], [43, 1, 1, "", "unflatten"], [43, 1, 1, "", "unlock_"], [43, 1, 1, "", "unsqueeze"], [43, 1, 1, "", "values"], [43, 1, 1, "", "view"], [43, 1, 1, "", "zero"], [43, 1, 1, "", "zeros"]], "torchrl.data.LazyStackedTensorSpec": [[44, 1, 1, "", "assert_is_in"], [44, 1, 1, "", "cardinality"], [44, 1, 1, "", "clear_device_"], [44, 1, 1, "", "clone"], [44, 1, 1, "", "contains"], [44, 1, 1, "", "cpu"], [44, 1, 1, "", "cuda"], [44, 4, 1, "", "device"], [44, 1, 1, "", "encode"], [44, 1, 1, "", "enumerate"], [44, 1, 1, "", "expand"], [44, 1, 1, "", "flatten"], [44, 1, 1, "", "implements_for_spec"], [44, 1, 1, "", "index"], [44, 1, 1, "", "is_in"], [44, 1, 1, "", "make_neg_dim"], [44, 4, 1, "", "ndim"], [44, 1, 1, "", "ndimension"], [44, 1, 1, "", "one"], [44, 1, 1, "", "ones"], [44, 1, 1, "", "project"], [44, 1, 1, "", "rand"], [44, 1, 1, "", "reshape"], [44, 1, 1, "", "sample"], [44, 1, 1, "", "squeeze"], [44, 1, 1, "", "to"], [44, 1, 1, "", "to_numpy"], [44, 1, 1, "", "type_check"], [44, 1, 1, "", "unflatten"], [44, 1, 1, "", "unsqueeze"], [44, 1, 1, "", "view"], [44, 1, 1, "", "zero"], [44, 1, 1, "", "zeros"]], "torchrl.data.MCTSForest": [[45, 4, 1, "", "action_keys"], [45, 4, 1, "", "done_keys"], [45, 1, 1, "", "extend"], [45, 1, 1, "", "get_keys_from_env"], [45, 4, 1, "", "observation_keys"], [45, 4, 1, "", "reward_keys"], [45, 1, 1, "", "to_string"]], "torchrl.data.MultiCategorical": [[46, 1, 1, "", "assert_is_in"], [46, 1, 1, "", "cardinality"], [46, 1, 1, "", "clear_device_"], [46, 1, 1, "", "clone"], [46, 1, 1, "", "contains"], [46, 1, 1, "", "cpu"], [46, 1, 1, "", "cuda"], [46, 3, 1, "", "device"], [46, 1, 1, "", "encode"], [46, 1, 1, "", "enumerate"], [46, 1, 1, "", "expand"], [46, 1, 1, "", "flatten"], [46, 1, 1, "", "implements_for_spec"], [46, 1, 1, "", "index"], [46, 1, 1, "", "is_in"], [46, 1, 1, "", "make_neg_dim"], [46, 4, 1, "", "ndim"], [46, 1, 1, "", "ndimension"], [46, 1, 1, "", "one"], [46, 1, 1, "", "ones"], [46, 1, 1, "", "project"], [46, 1, 1, "", "rand"], [46, 1, 1, "", "reshape"], [46, 1, 1, "", "sample"], [46, 1, 1, "", "set_provisional_n"], [46, 1, 1, "", "squeeze"], [46, 1, 1, "", "to"], [46, 1, 1, "", "to_categorical"], [46, 1, 1, "", "to_categorical_spec"], [46, 1, 1, "", "to_numpy"], [46, 1, 1, "", "to_one_hot"], [46, 1, 1, "", "to_one_hot_spec"], [46, 1, 1, "", "type_check"], [46, 1, 1, "", "unflatten"], [46, 1, 1, "", "unsqueeze"], [46, 1, 1, "", "update_mask"], [46, 1, 1, "", "view"], [46, 1, 1, "", "zero"], [46, 1, 1, "", "zeros"]], "torchrl.data.MultiDiscreteTensorSpec": [[47, 1, 1, "", "assert_is_in"], [47, 1, 1, "", "cardinality"], [47, 1, 1, "", "clear_device_"], [47, 1, 1, "", "clone"], [47, 1, 1, "", "contains"], [47, 1, 1, "", "cpu"], [47, 1, 1, "", "cuda"], [47, 3, 1, "", "device"], [47, 1, 1, "", "encode"], [47, 1, 1, "", "enumerate"], [47, 1, 1, "", "expand"], [47, 1, 1, "", "flatten"], [47, 1, 1, "", "implements_for_spec"], [47, 1, 1, "", "index"], [47, 1, 1, "", "is_in"], [47, 1, 1, "", "make_neg_dim"], [47, 4, 1, "", "ndim"], [47, 1, 1, "", "ndimension"], [47, 1, 1, "", "one"], [47, 1, 1, "", "ones"], [47, 1, 1, "", "project"], [47, 1, 1, "", "rand"], [47, 1, 1, "", "reshape"], [47, 1, 1, "", "sample"], [47, 1, 1, "", "set_provisional_n"], [47, 1, 1, "", "squeeze"], [47, 1, 1, "", "to"], [47, 1, 1, "", "to_categorical"], [47, 1, 1, "", "to_categorical_spec"], [47, 1, 1, "", "to_numpy"], [47, 1, 1, "", "to_one_hot"], [47, 1, 1, "", "to_one_hot_spec"], [47, 1, 1, "", "type_check"], [47, 1, 1, "", "unflatten"], [47, 1, 1, "", "unsqueeze"], [47, 1, 1, "", "update_mask"], [47, 1, 1, "", "view"], [47, 1, 1, "", "zero"], [47, 1, 1, "", "zeros"]], "torchrl.data.MultiOneHot": [[48, 1, 1, "", "assert_is_in"], [48, 1, 1, "", "cardinality"], [48, 1, 1, "", "clear_device_"], [48, 1, 1, "", "clone"], [48, 1, 1, "", "contains"], [48, 1, 1, "", "cpu"], [48, 1, 1, "", "cuda"], [48, 3, 1, "", "device"], [48, 1, 1, "", "encode"], [48, 1, 1, "", "enumerate"], [48, 1, 1, "", "expand"], [48, 1, 1, "", "flatten"], [48, 1, 1, "", "implements_for_spec"], [48, 1, 1, "", "index"], [48, 1, 1, "", "is_in"], [48, 1, 1, "", "make_neg_dim"], [48, 4, 1, "", "ndim"], [48, 1, 1, "", "ndimension"], [48, 1, 1, "", "one"], [48, 1, 1, "", "ones"], [48, 1, 1, "", "project"], [48, 1, 1, "", "rand"], [48, 1, 1, "", "reshape"], [48, 1, 1, "", "sample"], [48, 1, 1, "", "squeeze"], [48, 1, 1, "", "to"], [48, 1, 1, "", "to_categorical"], [48, 1, 1, "", "to_categorical_spec"], [48, 1, 1, "", "to_numpy"], [48, 1, 1, "", "to_one_hot"], [48, 1, 1, "", "to_one_hot_spec"], [48, 1, 1, "", "type_check"], [48, 1, 1, "", "unflatten"], [48, 1, 1, "", "unsqueeze"], [48, 1, 1, "", "update_mask"], [48, 1, 1, "", "view"], [48, 1, 1, "", "zero"], [48, 1, 1, "", "zeros"]], "torchrl.data.MultiOneHotDiscreteTensorSpec": [[49, 1, 1, "", "assert_is_in"], [49, 1, 1, "", "cardinality"], [49, 1, 1, "", "clear_device_"], [49, 1, 1, "", "clone"], [49, 1, 1, "", "contains"], [49, 1, 1, "", "cpu"], [49, 1, 1, "", "cuda"], [49, 3, 1, "", "device"], [49, 1, 1, "", "encode"], [49, 1, 1, "", "enumerate"], [49, 1, 1, "", "expand"], [49, 1, 1, "", "flatten"], [49, 1, 1, "", "implements_for_spec"], [49, 1, 1, "", "index"], [49, 1, 1, "", "is_in"], [49, 1, 1, "", "make_neg_dim"], [49, 4, 1, "", "ndim"], [49, 1, 1, "", "ndimension"], [49, 1, 1, "", "one"], [49, 1, 1, "", "ones"], [49, 1, 1, "", "project"], [49, 1, 1, "", "rand"], [49, 1, 1, "", "reshape"], [49, 1, 1, "", "sample"], [49, 1, 1, "", "squeeze"], [49, 1, 1, "", "to"], [49, 1, 1, "", "to_categorical"], [49, 1, 1, "", "to_categorical_spec"], [49, 1, 1, "", "to_numpy"], [49, 1, 1, "", "to_one_hot"], [49, 1, 1, "", "to_one_hot_spec"], [49, 1, 1, "", "type_check"], [49, 1, 1, "", "unflatten"], [49, 1, 1, "", "unsqueeze"], [49, 1, 1, "", "update_mask"], [49, 1, 1, "", "view"], [49, 1, 1, "", "zero"], [49, 1, 1, "", "zeros"]], "torchrl.data.MultiStep": [[50, 1, 1, "", "add_module"], [50, 1, 1, "", "apply"], [50, 1, 1, "", "bfloat16"], [50, 1, 1, "", "buffers"], [50, 1, 1, "", "children"], [50, 1, 1, "", "compile"], [50, 1, 1, "", "cpu"], [50, 1, 1, "", "cuda"], [50, 1, 1, "", "double"], [50, 1, 1, "", "eval"], [50, 1, 1, "", "extra_repr"], [50, 1, 1, "", "float"], [50, 1, 1, "", "forward"], [50, 1, 1, "", "get_buffer"], [50, 1, 1, "", "get_extra_state"], [50, 1, 1, "", "get_parameter"], [50, 1, 1, "", "get_submodule"], [50, 1, 1, "", "half"], [50, 1, 1, "", "ipu"], [50, 1, 1, "", "load_state_dict"], [50, 1, 1, "", "modules"], [50, 1, 1, "", "mtia"], [50, 1, 1, "", "named_buffers"], [50, 1, 1, "", "named_children"], [50, 1, 1, "", "named_modules"], [50, 1, 1, "", "named_parameters"], [50, 1, 1, "", "parameters"], [50, 1, 1, "", "register_backward_hook"], [50, 1, 1, "", "register_buffer"], [50, 1, 1, "", "register_forward_hook"], [50, 1, 1, "", "register_forward_pre_hook"], [50, 1, 1, "", "register_full_backward_hook"], [50, 1, 1, "", "register_full_backward_pre_hook"], [50, 1, 1, "", "register_load_state_dict_post_hook"], [50, 1, 1, "", "register_load_state_dict_pre_hook"], [50, 1, 1, "", "register_module"], [50, 1, 1, "", "register_parameter"], [50, 1, 1, "", "register_state_dict_post_hook"], [50, 1, 1, "", "register_state_dict_pre_hook"], [50, 1, 1, "", "requires_grad_"], [50, 1, 1, "", "set_extra_state"], [50, 1, 1, "", "set_submodule"], [50, 1, 1, "", "share_memory"], [50, 1, 1, "", "state_dict"], [50, 1, 1, "", "to"], [50, 1, 1, "", "to_empty"], [50, 1, 1, "", "train"], [50, 1, 1, "", "type"], [50, 1, 1, "", "xpu"], [50, 1, 1, "", "zero_grad"]], "torchrl.data.NonTensor": [[52, 1, 1, "", "assert_is_in"], [52, 1, 1, "", "cardinality"], [52, 1, 1, "", "clear_device_"], [52, 1, 1, "", "clone"], [52, 1, 1, "", "contains"], [52, 1, 1, "", "cpu"], [52, 1, 1, "", "cuda"], [52, 4, 1, "", "device"], [52, 1, 1, "", "encode"], [52, 1, 1, "", "enumerate"], [52, 1, 1, "", "expand"], [52, 1, 1, "", "flatten"], [52, 1, 1, "", "implements_for_spec"], [52, 1, 1, "", "index"], [52, 1, 1, "", "is_in"], [52, 1, 1, "", "make_neg_dim"], [52, 4, 1, "", "ndim"], [52, 1, 1, "", "ndimension"], [52, 1, 1, "", "one"], [52, 1, 1, "", "ones"], [52, 1, 1, "", "project"], [52, 1, 1, "", "rand"], [52, 1, 1, "", "reshape"], [52, 1, 1, "", "sample"], [52, 1, 1, "", "squeeze"], [52, 1, 1, "", "to"], [52, 1, 1, "", "to_numpy"], [52, 1, 1, "", "type_check"], [52, 1, 1, "", "unflatten"], [52, 1, 1, "", "unsqueeze"], [52, 1, 1, "", "view"], [52, 1, 1, "", "zero"], [52, 1, 1, "", "zeros"]], "torchrl.data.NonTensorSpec": [[53, 1, 1, "", "assert_is_in"], [53, 1, 1, "", "cardinality"], [53, 1, 1, "", "clear_device_"], [53, 1, 1, "", "clone"], [53, 1, 1, "", "contains"], [53, 1, 1, "", "cpu"], [53, 1, 1, "", "cuda"], [53, 4, 1, "", "device"], [53, 1, 1, "", "encode"], [53, 1, 1, "", "enumerate"], [53, 1, 1, "", "expand"], [53, 1, 1, "", "flatten"], [53, 1, 1, "", "implements_for_spec"], [53, 1, 1, "", "index"], [53, 1, 1, "", "is_in"], [53, 1, 1, "", "make_neg_dim"], [53, 4, 1, "", "ndim"], [53, 1, 1, "", "ndimension"], [53, 1, 1, "", "one"], [53, 1, 1, "", "ones"], [53, 1, 1, "", "project"], [53, 1, 1, "", "rand"], [53, 1, 1, "", "reshape"], [53, 1, 1, "", "sample"], [53, 1, 1, "", "squeeze"], [53, 1, 1, "", "to"], [53, 1, 1, "", "to_numpy"], [53, 1, 1, "", "type_check"], [53, 1, 1, "", "unflatten"], [53, 1, 1, "", "unsqueeze"], [53, 1, 1, "", "view"], [53, 1, 1, "", "zero"], [53, 1, 1, "", "zeros"]], "torchrl.data.OneHot": [[54, 1, 1, "", "assert_is_in"], [54, 1, 1, "", "cardinality"], [54, 1, 1, "", "clear_device_"], [54, 1, 1, "", "clone"], [54, 1, 1, "", "contains"], [54, 1, 1, "", "cpu"], [54, 1, 1, "", "cuda"], [54, 3, 1, "", "device"], [54, 1, 1, "", "encode"], [54, 1, 1, "", "enumerate"], [54, 1, 1, "", "expand"], [54, 1, 1, "", "flatten"], [54, 1, 1, "", "implements_for_spec"], [54, 1, 1, "", "index"], [54, 1, 1, "", "is_in"], [54, 1, 1, "", "make_neg_dim"], [54, 4, 1, "", "ndim"], [54, 1, 1, "", "ndimension"], [54, 1, 1, "", "one"], [54, 1, 1, "", "ones"], [54, 1, 1, "", "project"], [54, 1, 1, "", "rand"], [54, 1, 1, "", "reshape"], [54, 1, 1, "", "sample"], [54, 1, 1, "", "squeeze"], [54, 1, 1, "", "to"], [54, 1, 1, "", "to_categorical"], [54, 1, 1, "", "to_categorical_spec"], [54, 1, 1, "", "to_numpy"], [54, 1, 1, "", "to_one_hot"], [54, 1, 1, "", "to_one_hot_spec"], [54, 1, 1, "", "type_check"], [54, 1, 1, "", "unflatten"], [54, 1, 1, "", "unsqueeze"], [54, 1, 1, "", "update_mask"], [54, 1, 1, "", "view"], [54, 1, 1, "", "zero"], [54, 1, 1, "", "zeros"]], "torchrl.data.OneHotDiscreteTensorSpec": [[55, 1, 1, "", "assert_is_in"], [55, 1, 1, "", "cardinality"], [55, 1, 1, "", "clear_device_"], [55, 1, 1, "", "clone"], [55, 1, 1, "", "contains"], [55, 1, 1, "", "cpu"], [55, 1, 1, "", "cuda"], [55, 3, 1, "", "device"], [55, 1, 1, "", "encode"], [55, 1, 1, "", "enumerate"], [55, 1, 1, "", "expand"], [55, 1, 1, "", "flatten"], [55, 1, 1, "", "implements_for_spec"], [55, 1, 1, "", "index"], [55, 1, 1, "", "is_in"], [55, 1, 1, "", "make_neg_dim"], [55, 4, 1, "", "ndim"], [55, 1, 1, "", "ndimension"], [55, 1, 1, "", "one"], [55, 1, 1, "", "ones"], [55, 1, 1, "", "project"], [55, 1, 1, "", "rand"], [55, 1, 1, "", "reshape"], [55, 1, 1, "", "sample"], [55, 1, 1, "", "squeeze"], [55, 1, 1, "", "to"], [55, 1, 1, "", "to_categorical"], [55, 1, 1, "", "to_categorical_spec"], [55, 1, 1, "", "to_numpy"], [55, 1, 1, "", "to_one_hot"], [55, 1, 1, "", "to_one_hot_spec"], [55, 1, 1, "", "type_check"], [55, 1, 1, "", "unflatten"], [55, 1, 1, "", "unsqueeze"], [55, 1, 1, "", "update_mask"], [55, 1, 1, "", "view"], [55, 1, 1, "", "zero"], [55, 1, 1, "", "zeros"]], "torchrl.data.PairwiseDataset": [[56, 4, 1, "", "device"], [56, 1, 1, "", "dumps"], [56, 1, 1, "", "fields"], [56, 1, 1, "", "from_dataset"], [56, 1, 1, "", "from_tensordict"], [56, 1, 1, "", "get"], [56, 1, 1, "", "load"], [56, 1, 1, "", "load_"], [56, 1, 1, "", "load_memmap"], [56, 1, 1, "", "load_state_dict"], [56, 1, 1, "", "memmap"], [56, 1, 1, "", "memmap_"], [56, 1, 1, "", "memmap_like"], [56, 1, 1, "", "memmap_refresh_"], [56, 1, 1, "", "save"], [56, 1, 1, "", "set"], [56, 1, 1, "", "state_dict"], [56, 1, 1, "", "to_tensordict"], [56, 1, 1, "", "unbind"]], "torchrl.data.PrioritizedReplayBuffer": [[57, 1, 1, "", "add"], [57, 1, 1, "", "append_transform"], [57, 1, 1, "", "as_remote"], [57, 1, 1, "", "dump"], [57, 1, 1, "", "dumps"], [57, 1, 1, "", "empty"], [57, 1, 1, "", "extend"], [57, 1, 1, "", "insert_transform"], [57, 1, 1, "", "load"], [57, 1, 1, "", "loads"], [57, 1, 1, "", "register_load_hook"], [57, 1, 1, "", "register_save_hook"], [57, 1, 1, "", "sample"], [57, 4, 1, "", "sampler"], [57, 1, 1, "", "save"], [57, 1, 1, "", "set_sampler"], [57, 1, 1, "", "set_storage"], [57, 1, 1, "", "set_writer"], [57, 4, 1, "", "storage"], [57, 4, 1, "", "write_count"], [57, 4, 1, "", "writer"]], "torchrl.data.PromptData": [[58, 4, 1, "", "device"], [58, 1, 1, "", "dumps"], [58, 1, 1, "", "fields"], [58, 1, 1, "", "from_dataset"], [58, 1, 1, "", "from_tensordict"], [58, 1, 1, "", "get"], [58, 1, 1, "", "load"], [58, 1, 1, "", "load_"], [58, 1, 1, "", "load_memmap"], [58, 1, 1, "", "load_state_dict"], [58, 1, 1, "", "memmap"], [58, 1, 1, "", "memmap_"], [58, 1, 1, "", "memmap_like"], [58, 1, 1, "", "memmap_refresh_"], [58, 1, 1, "", "save"], [58, 1, 1, "", "set"], [58, 1, 1, "", "state_dict"], [58, 1, 1, "", "to_tensordict"], [58, 1, 1, "", "unbind"]], "torchrl.data.QueryModule": [[60, 1, 1, "", "add_module"], [60, 1, 1, "", "apply"], [60, 1, 1, "", "bfloat16"], [60, 1, 1, "", "buffers"], [60, 1, 1, "", "children"], [60, 1, 1, "", "compile"], [60, 1, 1, "", "cpu"], [60, 1, 1, "", "cuda"], [60, 1, 1, "", "double"], [60, 1, 1, "", "eval"], [60, 1, 1, "", "extra_repr"], [60, 1, 1, "", "float"], [60, 1, 1, "", "forward"], [60, 1, 1, "", "get_buffer"], [60, 1, 1, "", "get_extra_state"], [60, 1, 1, "", "get_parameter"], [60, 1, 1, "", "get_submodule"], [60, 1, 1, "", "half"], [60, 1, 1, "", "ipu"], [60, 1, 1, "", "is_tdmodule_compatible"], [60, 1, 1, "", "load_state_dict"], [60, 1, 1, "", "modules"], [60, 1, 1, "", "mtia"], [60, 1, 1, "", "named_buffers"], [60, 1, 1, "", "named_children"], [60, 1, 1, "", "named_modules"], [60, 1, 1, "", "named_parameters"], [60, 1, 1, "", "parameters"], [60, 1, 1, "", "register_backward_hook"], [60, 1, 1, "", "register_buffer"], [60, 1, 1, "", "register_forward_hook"], [60, 1, 1, "", "register_forward_pre_hook"], [60, 1, 1, "", "register_full_backward_hook"], [60, 1, 1, "", "register_full_backward_pre_hook"], [60, 1, 1, "", "register_load_state_dict_post_hook"], [60, 1, 1, "", "register_load_state_dict_pre_hook"], [60, 1, 1, "", "register_module"], [60, 1, 1, "", "register_parameter"], [60, 1, 1, "", "register_state_dict_post_hook"], [60, 1, 1, "", "register_state_dict_pre_hook"], [60, 1, 1, "", "requires_grad_"], [60, 1, 1, "", "reset_out_keys"], [60, 1, 1, "", "reset_parameters_recursive"], [60, 1, 1, "", "select_out_keys"], [60, 1, 1, "", "set_extra_state"], [60, 1, 1, "", "set_submodule"], [60, 1, 1, "", "share_memory"], [60, 1, 1, "", "state_dict"], [60, 1, 1, "", "to"], [60, 1, 1, "", "to_empty"], [60, 1, 1, "", "train"], [60, 1, 1, "", "type"], [60, 1, 1, "", "xpu"], [60, 1, 1, "", "zero_grad"]], "torchrl.data.RandomProjectionHash": [[61, 1, 1, "", "add_module"], [61, 1, 1, "", "apply"], [61, 1, 1, "", "bfloat16"], [61, 1, 1, "", "buffers"], [61, 1, 1, "", "children"], [61, 1, 1, "", "compile"], [61, 1, 1, "", "cpu"], [61, 1, 1, "", "cuda"], [61, 1, 1, "", "double"], [61, 1, 1, "", "eval"], [61, 1, 1, "", "extra_repr"], [61, 1, 1, "", "fit"], [61, 1, 1, "", "float"], [61, 1, 1, "", "forward"], [61, 1, 1, "", "get_buffer"], [61, 1, 1, "", "get_extra_state"], [61, 1, 1, "", "get_parameter"], [61, 1, 1, "", "get_submodule"], [61, 1, 1, "", "half"], [61, 1, 1, "", "ipu"], [61, 1, 1, "", "load_state_dict"], [61, 1, 1, "", "modules"], [61, 1, 1, "", "mtia"], [61, 1, 1, "", "named_buffers"], [61, 1, 1, "", "named_children"], [61, 1, 1, "", "named_modules"], [61, 1, 1, "", "named_parameters"], [61, 1, 1, "", "parameters"], [61, 1, 1, "", "register_backward_hook"], [61, 1, 1, "", "register_buffer"], [61, 1, 1, "", "register_forward_hook"], [61, 1, 1, "", "register_forward_pre_hook"], [61, 1, 1, "", "register_full_backward_hook"], [61, 1, 1, "", "register_full_backward_pre_hook"], [61, 1, 1, "", "register_load_state_dict_post_hook"], [61, 1, 1, "", "register_load_state_dict_pre_hook"], [61, 1, 1, "", "register_module"], [61, 1, 1, "", "register_parameter"], [61, 1, 1, "", "register_state_dict_post_hook"], [61, 1, 1, "", "register_state_dict_pre_hook"], [61, 1, 1, "", "requires_grad_"], [61, 1, 1, "", "set_extra_state"], [61, 1, 1, "", "set_submodule"], [61, 1, 1, "", "share_memory"], [61, 1, 1, "", "state_dict"], [61, 1, 1, "", "to"], [61, 1, 1, "", "to_empty"], [61, 1, 1, "", "train"], [61, 1, 1, "", "type"], [61, 1, 1, "", "xpu"], [61, 1, 1, "", "zero_grad"]], "torchrl.data.RayReplayBuffer": [[62, 1, 1, "", "add"], [62, 1, 1, "", "append_transform"], [62, 1, 1, "", "as_remote"], [62, 1, 1, "", "dump"], [62, 1, 1, "", "dumps"], [62, 1, 1, "", "empty"], [62, 1, 1, "", "extend"], [62, 1, 1, "", "insert_transform"], [62, 1, 1, "", "load"], [62, 1, 1, "", "loads"], [62, 1, 1, "", "register_load_hook"], [62, 1, 1, "", "register_save_hook"], [62, 1, 1, "", "sample"], [62, 4, 1, "", "sampler"], [62, 1, 1, "", "save"], [62, 1, 1, "", "set_sampler"], [62, 1, 1, "", "set_storage"], [62, 1, 1, "", "set_writer"], [62, 4, 1, "", "storage"], [62, 4, 1, "", "write_count"], [62, 4, 1, "", "writer"]], "torchrl.data.RemoteTensorDictReplayBuffer": [[63, 1, 1, "", "add"], [63, 1, 1, "", "append_transform"], [63, 1, 1, "", "as_remote"], [63, 1, 1, "", "dump"], [63, 1, 1, "", "dumps"], [63, 1, 1, "", "empty"], [63, 1, 1, "", "extend"], [63, 1, 1, "", "insert_transform"], [63, 1, 1, "", "load"], [63, 1, 1, "", "loads"], [63, 1, 1, "", "register_load_hook"], [63, 1, 1, "", "register_save_hook"], [63, 1, 1, "", "sample"], [63, 4, 1, "", "sampler"], [63, 1, 1, "", "save"], [63, 1, 1, "", "set_sampler"], [63, 1, 1, "", "set_storage"], [63, 1, 1, "", "set_writer"], [63, 4, 1, "", "storage"], [63, 4, 1, "", "write_count"], [63, 4, 1, "", "writer"]], "torchrl.data.ReplayBuffer": [[64, 1, 1, "", "add"], [64, 1, 1, "", "append_transform"], [64, 1, 1, "", "as_remote"], [64, 1, 1, "", "dump"], [64, 1, 1, "", "dumps"], [64, 1, 1, "", "empty"], [64, 1, 1, "", "extend"], [64, 1, 1, "", "insert_transform"], [64, 1, 1, "", "load"], [64, 1, 1, "", "loads"], [64, 1, 1, "", "register_load_hook"], [64, 1, 1, "", "register_save_hook"], [64, 1, 1, "", "sample"], [64, 4, 1, "", "sampler"], [64, 1, 1, "", "save"], [64, 1, 1, "", "set_sampler"], [64, 1, 1, "", "set_storage"], [64, 1, 1, "", "set_writer"], [64, 4, 1, "", "storage"], [64, 4, 1, "", "write_count"], [64, 4, 1, "", "writer"]], "torchrl.data.RewardData": [[65, 4, 1, "", "device"], [65, 1, 1, "", "dumps"], [65, 1, 1, "", "fields"], [65, 1, 1, "", "from_tensordict"], [65, 1, 1, "", "get"], [65, 1, 1, "", "load"], [65, 1, 1, "", "load_"], [65, 1, 1, "", "load_memmap"], [65, 1, 1, "", "load_state_dict"], [65, 1, 1, "", "memmap"], [65, 1, 1, "", "memmap_"], [65, 1, 1, "", "memmap_like"], [65, 1, 1, "", "memmap_refresh_"], [65, 1, 1, "", "save"], [65, 1, 1, "", "set"], [65, 1, 1, "", "state_dict"], [65, 1, 1, "", "to_tensordict"], [65, 1, 1, "", "unbind"]], "torchrl.data.RolloutFromModel": [[66, 1, 1, "", "create_rollout_td"], [66, 1, 1, "", "generate"], [66, 1, 1, "", "logprobs_of_labels"]], "torchrl.data.SipHash": [[67, 1, 1, "", "add_module"], [67, 1, 1, "", "apply"], [67, 1, 1, "", "bfloat16"], [67, 1, 1, "", "buffers"], [67, 1, 1, "", "children"], [67, 1, 1, "", "compile"], [67, 1, 1, "", "cpu"], [67, 1, 1, "", "cuda"], [67, 1, 1, "", "double"], [67, 1, 1, "", "eval"], [67, 1, 1, "", "extra_repr"], [67, 1, 1, "", "float"], [67, 1, 1, "", "forward"], [67, 1, 1, "", "get_buffer"], [67, 1, 1, "", "get_extra_state"], [67, 1, 1, "", "get_parameter"], [67, 1, 1, "", "get_submodule"], [67, 1, 1, "", "half"], [67, 1, 1, "", "ipu"], [67, 1, 1, "", "load_state_dict"], [67, 1, 1, "", "modules"], [67, 1, 1, "", "mtia"], [67, 1, 1, "", "named_buffers"], [67, 1, 1, "", "named_children"], [67, 1, 1, "", "named_modules"], [67, 1, 1, "", "named_parameters"], [67, 1, 1, "", "parameters"], [67, 1, 1, "", "register_backward_hook"], [67, 1, 1, "", "register_buffer"], [67, 1, 1, "", "register_forward_hook"], [67, 1, 1, "", "register_forward_pre_hook"], [67, 1, 1, "", "register_full_backward_hook"], [67, 1, 1, "", "register_full_backward_pre_hook"], [67, 1, 1, "", "register_load_state_dict_post_hook"], [67, 1, 1, "", "register_load_state_dict_pre_hook"], [67, 1, 1, "", "register_module"], [67, 1, 1, "", "register_parameter"], [67, 1, 1, "", "register_state_dict_post_hook"], [67, 1, 1, "", "register_state_dict_pre_hook"], [67, 1, 1, "", "requires_grad_"], [67, 1, 1, "", "set_extra_state"], [67, 1, 1, "", "set_submodule"], [67, 1, 1, "", "share_memory"], [67, 1, 1, "", "state_dict"], [67, 1, 1, "", "to"], [67, 1, 1, "", "to_empty"], [67, 1, 1, "", "train"], [67, 1, 1, "", "type"], [67, 1, 1, "", "xpu"], [67, 1, 1, "", "zero_grad"]], "torchrl.data.Stacked": [[68, 1, 1, "", "assert_is_in"], [68, 1, 1, "", "cardinality"], [68, 1, 1, "", "clear_device_"], [68, 1, 1, "", "clone"], [68, 1, 1, "", "contains"], [68, 1, 1, "", "cpu"], [68, 1, 1, "", "cuda"], [68, 4, 1, "", "device"], [68, 1, 1, "", "encode"], [68, 1, 1, "", "enumerate"], [68, 1, 1, "", "expand"], [68, 1, 1, "", "flatten"], [68, 1, 1, "", "implements_for_spec"], [68, 1, 1, "", "index"], [68, 1, 1, "", "is_in"], [68, 1, 1, "", "make_neg_dim"], [68, 4, 1, "", "ndim"], [68, 1, 1, "", "ndimension"], [68, 1, 1, "", "one"], [68, 1, 1, "", "ones"], [68, 1, 1, "", "project"], [68, 1, 1, "", "rand"], [68, 1, 1, "", "reshape"], [68, 1, 1, "", "sample"], [68, 1, 1, "", "squeeze"], [68, 1, 1, "", "to"], [68, 1, 1, "", "to_numpy"], [68, 1, 1, "", "type_check"], [68, 1, 1, "", "unflatten"], [68, 1, 1, "", "unsqueeze"], [68, 1, 1, "", "view"], [68, 1, 1, "", "zero"], [68, 1, 1, "", "zeros"]], "torchrl.data.StackedComposite": [[69, 1, 1, "", "assert_is_in"], [69, 1, 1, "", "cardinality"], [69, 1, 1, "", "clear_device_"], [69, 1, 1, "", "clone"], [69, 1, 1, "", "contains"], [69, 1, 1, "", "cpu"], [69, 1, 1, "", "cuda"], [69, 4, 1, "", "device"], [69, 1, 1, "", "empty"], [69, 1, 1, "", "encode"], [69, 1, 1, "", "enumerate"], [69, 1, 1, "", "expand"], [69, 1, 1, "", "flatten"], [69, 1, 1, "", "get"], [69, 1, 1, "", "implements_for_spec"], [69, 1, 1, "", "index"], [69, 1, 1, "", "is_empty"], [69, 1, 1, "", "is_in"], [69, 1, 1, "", "items"], [69, 1, 1, "", "keys"], [69, 1, 1, "", "lock_"], [69, 1, 1, "", "make_neg_dim"], [69, 4, 1, "", "ndim"], [69, 1, 1, "", "ndimension"], [69, 1, 1, "", "one"], [69, 1, 1, "", "ones"], [69, 1, 1, "", "pop"], [69, 1, 1, "", "project"], [69, 1, 1, "", "rand"], [69, 1, 1, "", "reshape"], [69, 1, 1, "", "sample"], [69, 1, 1, "", "separates"], [69, 1, 1, "", "set"], [69, 1, 1, "", "squeeze"], [69, 1, 1, "", "to"], [69, 1, 1, "", "to_numpy"], [69, 1, 1, "", "type_check"], [69, 1, 1, "", "unflatten"], [69, 1, 1, "", "unlock_"], [69, 1, 1, "", "unsqueeze"], [69, 1, 1, "", "values"], [69, 1, 1, "", "view"], [69, 1, 1, "", "zero"], [69, 1, 1, "", "zeros"]], "torchrl.data.TensorDictMap": [[72, 1, 1, "", "add_module"], [72, 1, 1, "", "apply"], [72, 1, 1, "", "bfloat16"], [72, 1, 1, "", "buffers"], [72, 1, 1, "", "children"], [72, 1, 1, "", "compile"], [72, 1, 1, "", "cpu"], [72, 1, 1, "", "cuda"], [72, 1, 1, "", "double"], [72, 1, 1, "", "eval"], [72, 1, 1, "", "extra_repr"], [72, 1, 1, "", "float"], [72, 1, 1, "", "forward"], [72, 1, 1, "", "from_tensordict_pair"], [72, 1, 1, "", "get_buffer"], [72, 1, 1, "", "get_extra_state"], [72, 1, 1, "", "get_parameter"], [72, 1, 1, "", "get_submodule"], [72, 1, 1, "", "half"], [72, 1, 1, "", "ipu"], [72, 1, 1, "", "is_tdmodule_compatible"], [72, 1, 1, "", "load_state_dict"], [72, 1, 1, "", "modules"], [72, 1, 1, "", "mtia"], [72, 1, 1, "", "named_buffers"], [72, 1, 1, "", "named_children"], [72, 1, 1, "", "named_modules"], [72, 1, 1, "", "named_parameters"], [72, 1, 1, "", "parameters"], [72, 1, 1, "", "register_backward_hook"], [72, 1, 1, "", "register_buffer"], [72, 1, 1, "", "register_forward_hook"], [72, 1, 1, "", "register_forward_pre_hook"], [72, 1, 1, "", "register_full_backward_hook"], [72, 1, 1, "", "register_full_backward_pre_hook"], [72, 1, 1, "", "register_load_state_dict_post_hook"], [72, 1, 1, "", "register_load_state_dict_pre_hook"], [72, 1, 1, "", "register_module"], [72, 1, 1, "", "register_parameter"], [72, 1, 1, "", "register_state_dict_post_hook"], [72, 1, 1, "", "register_state_dict_pre_hook"], [72, 1, 1, "", "requires_grad_"], [72, 1, 1, "", "reset_out_keys"], [72, 1, 1, "", "reset_parameters_recursive"], [72, 1, 1, "", "select_out_keys"], [72, 1, 1, "", "set_extra_state"], [72, 1, 1, "", "set_submodule"], [72, 1, 1, "", "share_memory"], [72, 1, 1, "", "state_dict"], [72, 1, 1, "", "to"], [72, 1, 1, "", "to_empty"], [72, 1, 1, "", "train"], [72, 1, 1, "", "type"], [72, 1, 1, "", "xpu"], [72, 1, 1, "", "zero_grad"]], "torchrl.data.TensorDictPrioritizedReplayBuffer": [[73, 1, 1, "", "add"], [73, 1, 1, "", "append_transform"], [73, 1, 1, "", "as_remote"], [73, 1, 1, "", "dump"], [73, 1, 1, "", "dumps"], [73, 1, 1, "", "empty"], [73, 1, 1, "", "extend"], [73, 1, 1, "", "insert_transform"], [73, 1, 1, "", "load"], [73, 1, 1, "", "loads"], [73, 1, 1, "", "register_load_hook"], [73, 1, 1, "", "register_save_hook"], [73, 1, 1, "", "sample"], [73, 4, 1, "", "sampler"], [73, 1, 1, "", "save"], [73, 1, 1, "", "set_sampler"], [73, 1, 1, "", "set_storage"], [73, 1, 1, "", "set_writer"], [73, 4, 1, "", "storage"], [73, 4, 1, "", "write_count"], [73, 4, 1, "", "writer"]], "torchrl.data.TensorDictReplayBuffer": [[74, 1, 1, "", "add"], [74, 1, 1, "", "append_transform"], [74, 1, 1, "", "as_remote"], [74, 1, 1, "", "dump"], [74, 1, 1, "", "dumps"], [74, 1, 1, "", "empty"], [74, 1, 1, "", "extend"], [74, 1, 1, "", "insert_transform"], [74, 1, 1, "", "load"], [74, 1, 1, "", "loads"], [74, 1, 1, "", "register_load_hook"], [74, 1, 1, "", "register_save_hook"], [74, 1, 1, "", "sample"], [74, 4, 1, "", "sampler"], [74, 1, 1, "", "save"], [74, 1, 1, "", "set_sampler"], [74, 1, 1, "", "set_storage"], [74, 1, 1, "", "set_writer"], [74, 4, 1, "", "storage"], [74, 4, 1, "", "write_count"], [74, 4, 1, "", "writer"]], "torchrl.data.TensorSpec": [[77, 1, 1, "", "assert_is_in"], [77, 1, 1, "", "cardinality"], [77, 1, 1, "", "clear_device_"], [77, 1, 1, "", "clone"], [77, 1, 1, "", "contains"], [77, 1, 1, "", "cpu"], [77, 1, 1, "", "cuda"], [77, 4, 1, "", "device"], [77, 1, 1, "", "encode"], [77, 1, 1, "", "enumerate"], [77, 1, 1, "", "expand"], [77, 1, 1, "", "flatten"], [77, 1, 1, "", "implements_for_spec"], [77, 1, 1, "", "index"], [77, 1, 1, "", "is_in"], [77, 1, 1, "", "make_neg_dim"], [77, 4, 1, "", "ndim"], [77, 1, 1, "", "ndimension"], [77, 1, 1, "", "one"], [77, 1, 1, "", "ones"], [77, 1, 1, "", "project"], [77, 1, 1, "", "rand"], [77, 1, 1, "", "reshape"], [77, 1, 1, "", "sample"], [77, 1, 1, "", "squeeze"], [77, 1, 1, "", "to"], [77, 1, 1, "", "to_numpy"], [77, 1, 1, "", "type_check"], [77, 1, 1, "", "unflatten"], [77, 1, 1, "", "unsqueeze"], [77, 1, 1, "", "view"], [77, 1, 1, "", "zero"], [77, 1, 1, "", "zeros"]], "torchrl.data.TokenizedDatasetLoader": [[78, 1, 1, "", "dataset_to_tensordict"], [78, 1, 1, "", "load"]], "torchrl.data.Tree": [[79, 4, 1, "", "branching_action"], [79, 4, 1, "", "device"], [79, 1, 1, "", "dumps"], [79, 1, 1, "", "edges"], [79, 1, 1, "", "fields"], [79, 1, 1, "", "from_tensordict"], [79, 4, 1, "", "full_action_spec"], [79, 4, 1, "", "full_done_spec"], [79, 4, 1, "", "full_observation_spec"], [79, 4, 1, "", "full_reward_spec"], [79, 4, 1, "", "full_state_spec"], [79, 1, 1, "", "fully_expanded"], [79, 1, 1, "", "get"], [79, 1, 1, "", "get_vertex_by_hash"], [79, 1, 1, "", "get_vertex_by_id"], [79, 4, 1, "", "is_terminal"], [79, 1, 1, "", "load"], [79, 1, 1, "", "load_"], [79, 1, 1, "", "load_memmap"], [79, 1, 1, "", "load_state_dict"], [79, 1, 1, "", "make_node"], [79, 1, 1, "", "max_length"], [79, 1, 1, "", "memmap"], [79, 1, 1, "", "memmap_"], [79, 1, 1, "", "memmap_like"], [79, 1, 1, "", "memmap_refresh_"], [79, 4, 1, "", "node_observation"], [79, 4, 1, "", "node_observations"], [79, 4, 1, "", "num_children"], [79, 1, 1, "", "num_vertices"], [79, 4, 1, "", "parent"], [79, 1, 1, "", "plot"], [79, 4, 1, "", "prev_action"], [79, 1, 1, "", "rollout_from_path"], [79, 1, 1, "", "save"], [79, 4, 1, "", "selected_actions"], [79, 1, 1, "", "set"], [79, 1, 1, "", "state_dict"], [79, 1, 1, "", "to_string"], [79, 1, 1, "", "to_tensordict"], [79, 1, 1, "", "unbind"], [79, 1, 1, "", "valid_paths"], [79, 1, 1, "", "vertices"], [79, 4, 1, "", "visits"]], "torchrl.data.Unbounded": [[80, 1, 1, "", "assert_is_in"], [80, 1, 1, "", "cardinality"], [80, 1, 1, "", "clear_device_"], [80, 1, 1, "", "clone"], [80, 1, 1, "", "contains"], [80, 1, 1, "", "cpu"], [80, 1, 1, "", "cuda"], [80, 4, 1, "", "device"], [80, 1, 1, "", "encode"], [80, 1, 1, "", "enumerate"], [80, 1, 1, "", "expand"], [80, 1, 1, "", "flatten"], [80, 1, 1, "", "implements_for_spec"], [80, 1, 1, "", "index"], [80, 1, 1, "", "is_in"], [80, 1, 1, "", "make_neg_dim"], [80, 4, 1, "", "ndim"], [80, 1, 1, "", "ndimension"], [80, 1, 1, "", "one"], [80, 1, 1, "", "ones"], [80, 1, 1, "", "project"], [80, 1, 1, "", "rand"], [80, 1, 1, "", "reshape"], [80, 1, 1, "", "sample"], [80, 1, 1, "", "squeeze"], [80, 1, 1, "", "to"], [80, 1, 1, "", "to_numpy"], [80, 1, 1, "", "type_check"], [80, 1, 1, "", "unflatten"], [80, 1, 1, "", "unsqueeze"], [80, 1, 1, "", "view"], [80, 1, 1, "", "zero"], [80, 1, 1, "", "zeros"]], "torchrl.data.UnboundedContinuous": [[81, 1, 1, "", "assert_is_in"], [81, 1, 1, "", "cardinality"], [81, 1, 1, "", "clear_device_"], [81, 1, 1, "", "clone"], [81, 1, 1, "", "contains"], [81, 1, 1, "", "cpu"], [81, 1, 1, "", "cuda"], [81, 4, 1, "", "device"], [81, 1, 1, "", "encode"], [81, 1, 1, "", "enumerate"], [81, 1, 1, "", "expand"], [81, 1, 1, "", "flatten"], [81, 1, 1, "", "implements_for_spec"], [81, 1, 1, "", "index"], [81, 1, 1, "", "is_in"], [81, 1, 1, "", "make_neg_dim"], [81, 4, 1, "", "ndim"], [81, 1, 1, "", "ndimension"], [81, 1, 1, "", "one"], [81, 1, 1, "", "ones"], [81, 1, 1, "", "project"], [81, 1, 1, "", "rand"], [81, 1, 1, "", "reshape"], [81, 1, 1, "", "sample"], [81, 1, 1, "", "squeeze"], [81, 1, 1, "", "to"], [81, 1, 1, "", "to_numpy"], [81, 1, 1, "", "type_check"], [81, 1, 1, "", "unflatten"], [81, 1, 1, "", "unsqueeze"], [81, 1, 1, "", "view"], [81, 1, 1, "", "zero"], [81, 1, 1, "", "zeros"]], "torchrl.data.UnboundedContinuousTensorSpec": [[82, 1, 1, "", "assert_is_in"], [82, 1, 1, "", "cardinality"], [82, 1, 1, "", "clear_device_"], [82, 1, 1, "", "clone"], [82, 1, 1, "", "contains"], [82, 1, 1, "", "cpu"], [82, 1, 1, "", "cuda"], [82, 4, 1, "", "device"], [82, 1, 1, "", "encode"], [82, 1, 1, "", "enumerate"], [82, 1, 1, "", "expand"], [82, 1, 1, "", "flatten"], [82, 1, 1, "", "implements_for_spec"], [82, 1, 1, "", "index"], [82, 1, 1, "", "is_in"], [82, 1, 1, "", "make_neg_dim"], [82, 4, 1, "", "ndim"], [82, 1, 1, "", "ndimension"], [82, 1, 1, "", "one"], [82, 1, 1, "", "ones"], [82, 1, 1, "", "project"], [82, 1, 1, "", "rand"], [82, 1, 1, "", "reshape"], [82, 1, 1, "", "sample"], [82, 1, 1, "", "squeeze"], [82, 1, 1, "", "to"], [82, 1, 1, "", "to_numpy"], [82, 1, 1, "", "type_check"], [82, 1, 1, "", "unflatten"], [82, 1, 1, "", "unsqueeze"], [82, 1, 1, "", "view"], [82, 1, 1, "", "zero"], [82, 1, 1, "", "zeros"]], "torchrl.data.UnboundedDiscrete": [[83, 1, 1, "", "assert_is_in"], [83, 1, 1, "", "cardinality"], [83, 1, 1, "", "clear_device_"], [83, 1, 1, "", "clone"], [83, 1, 1, "", "contains"], [83, 1, 1, "", "cpu"], [83, 1, 1, "", "cuda"], [83, 4, 1, "", "device"], [83, 1, 1, "", "encode"], [83, 1, 1, "", "enumerate"], [83, 1, 1, "", "expand"], [83, 1, 1, "", "flatten"], [83, 1, 1, "", "implements_for_spec"], [83, 1, 1, "", "index"], [83, 1, 1, "", "is_in"], [83, 1, 1, "", "make_neg_dim"], [83, 4, 1, "", "ndim"], [83, 1, 1, "", "ndimension"], [83, 1, 1, "", "one"], [83, 1, 1, "", "ones"], [83, 1, 1, "", "project"], [83, 1, 1, "", "rand"], [83, 1, 1, "", "reshape"], [83, 1, 1, "", "sample"], [83, 1, 1, "", "squeeze"], [83, 1, 1, "", "to"], [83, 1, 1, "", "to_numpy"], [83, 1, 1, "", "type_check"], [83, 1, 1, "", "unflatten"], [83, 1, 1, "", "unsqueeze"], [83, 1, 1, "", "view"], [83, 1, 1, "", "zero"], [83, 1, 1, "", "zeros"]], "torchrl.data.UnboundedDiscreteTensorSpec": [[84, 1, 1, "", "assert_is_in"], [84, 1, 1, "", "cardinality"], [84, 1, 1, "", "clear_device_"], [84, 1, 1, "", "clone"], [84, 1, 1, "", "contains"], [84, 1, 1, "", "cpu"], [84, 1, 1, "", "cuda"], [84, 4, 1, "", "device"], [84, 1, 1, "", "encode"], [84, 1, 1, "", "enumerate"], [84, 1, 1, "", "expand"], [84, 1, 1, "", "flatten"], [84, 1, 1, "", "implements_for_spec"], [84, 1, 1, "", "index"], [84, 1, 1, "", "is_in"], [84, 1, 1, "", "make_neg_dim"], [84, 4, 1, "", "ndim"], [84, 1, 1, "", "ndimension"], [84, 1, 1, "", "one"], [84, 1, 1, "", "ones"], [84, 1, 1, "", "project"], [84, 1, 1, "", "rand"], [84, 1, 1, "", "reshape"], [84, 1, 1, "", "sample"], [84, 1, 1, "", "squeeze"], [84, 1, 1, "", "to"], [84, 1, 1, "", "to_numpy"], [84, 1, 1, "", "type_check"], [84, 1, 1, "", "unflatten"], [84, 1, 1, "", "unsqueeze"], [84, 1, 1, "", "view"], [84, 1, 1, "", "zero"], [84, 1, 1, "", "zeros"]], "torchrl.data.replay_buffers": [[90, 0, 1, "", "FlatStorageCheckpointer"], [91, 0, 1, "", "H5StorageCheckpointer"], [92, 0, 1, "", "ImmutableDatasetWriter"], [93, 0, 1, "", "LazyMemmapStorage"], [94, 0, 1, "", "LazyStackStorage"], [95, 0, 1, "", "LazyTensorStorage"], [96, 0, 1, "", "ListStorage"], [97, 0, 1, "", "ListStorageCheckpointer"], [98, 0, 1, "", "NestedStorageCheckpointer"], [99, 0, 1, "", "PrioritizedSampler"], [100, 0, 1, "", "PrioritizedSliceSampler"], [101, 0, 1, "", "RandomSampler"], [102, 0, 1, "", "ReplayBufferEnsemble"], [103, 0, 1, "", "RoundRobinWriter"], [104, 0, 1, "", "Sampler"], [105, 0, 1, "", "SamplerEnsemble"], [106, 0, 1, "", "SamplerWithoutReplacement"], [107, 0, 1, "", "SliceSampler"], [108, 0, 1, "", "SliceSamplerWithoutReplacement"], [109, 0, 1, "", "Storage"], [110, 0, 1, "", "StorageCheckpointerBase"], [111, 0, 1, "", "StorageEnsemble"], [112, 0, 1, "", "StorageEnsembleCheckpointer"], [113, 0, 1, "", "TensorDictMaxValueWriter"], [114, 0, 1, "", "TensorDictRoundRobinWriter"], [115, 0, 1, "", "TensorStorage"], [116, 0, 1, "", "TensorStorageCheckpointer"], [117, 0, 1, "", "Writer"], [118, 0, 1, "", "WriterEnsemble"]], "torchrl.data.replay_buffers.ImmutableDatasetWriter": [[92, 1, 1, "", "add"], [92, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.LazyMemmapStorage": [[93, 1, 1, "", "attach"], [93, 1, 1, "", "dump"], [93, 1, 1, "", "load"], [93, 1, 1, "", "save"]], "torchrl.data.replay_buffers.LazyStackStorage": [[94, 1, 1, "", "attach"], [94, 1, 1, "", "dump"], [94, 1, 1, "", "load"], [94, 1, 1, "", "save"]], "torchrl.data.replay_buffers.LazyTensorStorage": [[95, 1, 1, "", "attach"], [95, 1, 1, "", "dump"], [95, 1, 1, "", "load"], [95, 1, 1, "", "save"]], "torchrl.data.replay_buffers.ListStorage": [[96, 1, 1, "", "attach"], [96, 1, 1, "", "dump"], [96, 1, 1, "", "load"], [96, 1, 1, "", "save"]], "torchrl.data.replay_buffers.PrioritizedSampler": [[99, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.PrioritizedSliceSampler": [[100, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.ReplayBufferEnsemble": [[102, 1, 1, "", "add"], [102, 1, 1, "", "append_transform"], [102, 1, 1, "", "as_remote"], [102, 1, 1, "", "dump"], [102, 1, 1, "", "dumps"], [102, 1, 1, "", "empty"], [102, 1, 1, "", "extend"], [102, 1, 1, "", "insert_transform"], [102, 1, 1, "", "load"], [102, 1, 1, "", "loads"], [102, 1, 1, "", "register_load_hook"], [102, 1, 1, "", "register_save_hook"], [102, 1, 1, "", "sample"], [102, 4, 1, "", "sampler"], [102, 1, 1, "", "save"], [102, 1, 1, "", "set_sampler"], [102, 1, 1, "", "set_storage"], [102, 1, 1, "", "set_writer"], [102, 4, 1, "", "storage"], [102, 4, 1, "", "write_count"], [102, 4, 1, "", "writer"]], "torchrl.data.replay_buffers.RoundRobinWriter": [[103, 1, 1, "", "add"], [103, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.Storage": [[109, 1, 1, "", "attach"], [109, 1, 1, "", "dump"], [109, 1, 1, "", "load"], [109, 1, 1, "", "save"]], "torchrl.data.replay_buffers.StorageEnsemble": [[111, 1, 1, "", "attach"], [111, 1, 1, "", "dump"], [111, 1, 1, "", "load"], [111, 1, 1, "", "save"]], "torchrl.data.replay_buffers.TensorDictMaxValueWriter": [[113, 1, 1, "", "add"], [113, 1, 1, "", "extend"], [113, 1, 1, "", "get_insert_index"]], "torchrl.data.replay_buffers.TensorDictRoundRobinWriter": [[114, 1, 1, "", "add"], [114, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.TensorStorage": [[115, 1, 1, "", "attach"], [115, 1, 1, "", "dump"], [115, 1, 1, "", "load"], [115, 1, 1, "", "save"]], "torchrl.data.replay_buffers.Writer": [[117, 1, 1, "", "add"], [117, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.WriterEnsemble": [[118, 1, 1, "", "add"], [118, 1, 1, "", "extend"]], "torchrl.envs": [[119, 2, 1, "", "BraxEnv"], [120, 2, 1, "", "BraxWrapper"], [121, 0, 1, "", "ChessEnv"], [122, 2, 1, "", "DMControlEnv"], [123, 2, 1, "", "DMControlWrapper"], [124, 0, 1, "", "EnvBase"], [125, 0, 1, "", "EnvCreator"], [126, 0, 1, "", "EnvMetaData"], [127, 2, 1, "", "GymEnv"], [128, 0, 1, "", "GymLikeEnv"], [129, 2, 1, "", "GymWrapper"], [130, 2, 1, "", "HabitatEnv"], [131, 2, 1, "", "IsaacGymEnv"], [132, 2, 1, "", "IsaacGymWrapper"], [133, 2, 1, "", "JumanjiEnv"], [134, 2, 1, "", "JumanjiWrapper"], [135, 0, 1, "", "LLMEnv"], [136, 0, 1, "", "LLMHashingEnv"], [137, 2, 1, "", "MOGymEnv"], [138, 2, 1, "", "MOGymWrapper"], [139, 2, 1, "", "MarlGroupMapType"], [140, 2, 1, "", "MeltingpotEnv"], [141, 2, 1, "", "MeltingpotWrapper"], [142, 2, 1, "", "ModelBasedEnvBase"], [143, 2, 1, "", "MultiThreadedEnv"], [144, 2, 1, "", "MultiThreadedEnvWrapper"], [145, 2, 1, "", "OpenMLEnv"], [146, 2, 1, "", "OpenSpielEnv"], [147, 2, 1, "", "OpenSpielWrapper"], [148, 0, 1, "", "ParallelEnv"], [149, 0, 1, "", "PendulumEnv"], [150, 2, 1, "", "PettingZooEnv"], [151, 2, 1, "", "PettingZooWrapper"], [152, 2, 1, "", "RandomPolicy"], [153, 2, 1, "", "RoboHiveEnv"], [154, 2, 1, "", "SMACv2Env"], [155, 2, 1, "", "SMACv2Wrapper"], [156, 0, 1, "", "SerialEnv"], [157, 0, 1, "", "TicTacToeEnv"], [158, 2, 1, "", "UnityMLAgentsEnv"], [159, 2, 1, "", "UnityMLAgentsWrapper"], [160, 2, 1, "", "VmasEnv"], [161, 2, 1, "", "VmasWrapper"], [162, 2, 1, "", "check_env_specs"], [163, 2, 1, "", "check_marl_grouping"], [164, 2, 1, "", "exploration_type"], [165, 2, 1, "", "get_available_libraries"], [166, 2, 1, "", "gym_backend"], [167, 2, 1, "", "make_composite_from_td"], [142, 1, 1, "", "rand_step"], [170, 2, 1, "", "register_gym_spec_conversion"], [142, 1, 1, "", "reset"], [142, 1, 1, "", "rollout"], [171, 2, 1, "", "set_exploration_type"], [172, 2, 1, "", "set_gym_backend"], [142, 1, 1, "", "set_seed"], [142, 1, 1, "", "step"], [173, 2, 1, "", "step_mdp"], [174, 2, 1, "", "terminated_or_truncated"]], "torchrl.envs.ChessEnv": [[121, 4, 1, "", "action_key"], [121, 4, 1, "", "action_keys"], [121, 4, 1, "", "action_spec"], [121, 4, 1, "", "action_spec_unbatched"], [121, 1, 1, "", "add_module"], [121, 1, 1, "", "add_truncated_keys"], [121, 1, 1, "", "all_actions"], [121, 1, 1, "", "any_done"], [121, 1, 1, "", "append_transform"], [121, 1, 1, "", "apply"], [121, 1, 1, "", "auto_specs_"], [121, 4, 1, "", "batch_dims"], [121, 4, 1, "", "batch_locked"], [121, 4, 1, "", "batch_size"], [121, 1, 1, "", "bfloat16"], [121, 1, 1, "", "buffers"], [121, 1, 1, "", "cardinality"], [121, 1, 1, "", "check_env_specs"], [121, 1, 1, "", "children"], [121, 1, 1, "", "compile"], [121, 1, 1, "", "cpu"], [121, 1, 1, "", "cuda"], [121, 4, 1, "", "done_key"], [121, 4, 1, "", "done_keys"], [121, 4, 1, "", "done_keys_groups"], [121, 4, 1, "", "done_spec"], [121, 4, 1, "", "done_spec_unbatched"], [121, 1, 1, "", "double"], [121, 1, 1, "", "empty_cache"], [121, 1, 1, "", "eval"], [121, 1, 1, "", "extra_repr"], [121, 1, 1, "", "fake_tensordict"], [121, 1, 1, "", "float"], [121, 1, 1, "", "forward"], [121, 4, 1, "", "full_action_spec"], [121, 4, 1, "", "full_action_spec_unbatched"], [121, 4, 1, "", "full_done_spec"], [121, 4, 1, "", "full_done_spec_unbatched"], [121, 4, 1, "", "full_observation_spec_unbatched"], [121, 4, 1, "", "full_reward_spec"], [121, 4, 1, "", "full_reward_spec_unbatched"], [121, 4, 1, "", "full_state_spec"], [121, 4, 1, "", "full_state_spec_unbatched"], [121, 1, 1, "", "get_buffer"], [121, 1, 1, "", "get_extra_state"], [121, 1, 1, "", "get_legal_moves"], [121, 1, 1, "", "get_parameter"], [121, 1, 1, "", "get_submodule"], [121, 1, 1, "", "half"], [121, 4, 1, "", "input_spec"], [121, 4, 1, "", "input_spec_unbatched"], [121, 1, 1, "", "ipu"], [121, 4, 1, "", "is_spec_locked"], [121, 1, 1, "", "load_state_dict"], [121, 1, 1, "", "maybe_reset"], [121, 1, 1, "", "modules"], [121, 1, 1, "", "mtia"], [121, 1, 1, "", "named_buffers"], [121, 1, 1, "", "named_children"], [121, 1, 1, "", "named_modules"], [121, 1, 1, "", "named_parameters"], [121, 4, 1, "", "observation_keys"], [121, 4, 1, "", "observation_spec"], [121, 4, 1, "", "observation_spec_unbatched"], [121, 4, 1, "", "output_spec"], [121, 4, 1, "", "output_spec_unbatched"], [121, 1, 1, "", "parameters"], [121, 1, 1, "", "rand_action"], [121, 1, 1, "", "rand_step"], [121, 1, 1, "", "register_backward_hook"], [121, 1, 1, "", "register_buffer"], [121, 1, 1, "", "register_forward_hook"], [121, 1, 1, "", "register_forward_pre_hook"], [121, 1, 1, "", "register_full_backward_hook"], [121, 1, 1, "", "register_full_backward_pre_hook"], [121, 1, 1, "", "register_gym"], [121, 1, 1, "", "register_load_state_dict_post_hook"], [121, 1, 1, "", "register_load_state_dict_pre_hook"], [121, 1, 1, "", "register_module"], [121, 1, 1, "", "register_parameter"], [121, 1, 1, "", "register_state_dict_post_hook"], [121, 1, 1, "", "register_state_dict_pre_hook"], [121, 1, 1, "", "requires_grad_"], [121, 1, 1, "", "reset"], [121, 4, 1, "", "reset_keys"], [121, 4, 1, "", "reward_key"], [121, 4, 1, "", "reward_keys"], [121, 4, 1, "", "reward_spec"], [121, 4, 1, "", "reward_spec_unbatched"], [121, 1, 1, "", "rollout"], [121, 1, 1, "", "set_extra_state"], [121, 1, 1, "", "set_seed"], [121, 1, 1, "", "set_spec_lock_"], [121, 1, 1, "", "set_submodule"], [121, 4, 1, "", "shape"], [121, 1, 1, "", "share_memory"], [121, 4, 1, "", "specs"], [121, 1, 1, "", "state_dict"], [121, 4, 1, "", "state_keys"], [121, 4, 1, "", "state_spec"], [121, 4, 1, "", "state_spec_unbatched"], [121, 1, 1, "", "step"], [121, 1, 1, "", "step_and_maybe_reset"], [121, 1, 1, "", "step_mdp"], [121, 1, 1, "", "to"], [121, 1, 1, "", "to_empty"], [121, 1, 1, "", "train"], [121, 1, 1, "", "type"], [121, 1, 1, "", "xpu"], [121, 1, 1, "", "zero_grad"]], "torchrl.envs.EnvBase": [[124, 4, 1, "", "action_key"], [124, 4, 1, "", "action_keys"], [124, 4, 1, "", "action_spec"], [124, 4, 1, "", "action_spec_unbatched"], [124, 1, 1, "", "add_module"], [124, 1, 1, "", "add_truncated_keys"], [124, 1, 1, "", "all_actions"], [124, 1, 1, "", "any_done"], [124, 1, 1, "", "append_transform"], [124, 1, 1, "", "apply"], [124, 1, 1, "", "auto_specs_"], [124, 4, 1, "", "batch_dims"], [124, 4, 1, "", "batch_locked"], [124, 4, 1, "", "batch_size"], [124, 1, 1, "", "bfloat16"], [124, 1, 1, "", "buffers"], [124, 1, 1, "", "cardinality"], [124, 1, 1, "", "check_env_specs"], [124, 1, 1, "", "children"], [124, 1, 1, "", "compile"], [124, 1, 1, "", "cpu"], [124, 1, 1, "", "cuda"], [124, 4, 1, "", "done_key"], [124, 4, 1, "", "done_keys"], [124, 4, 1, "", "done_keys_groups"], [124, 4, 1, "", "done_spec"], [124, 4, 1, "", "done_spec_unbatched"], [124, 1, 1, "", "double"], [124, 1, 1, "", "empty_cache"], [124, 1, 1, "", "eval"], [124, 1, 1, "", "extra_repr"], [124, 1, 1, "", "fake_tensordict"], [124, 1, 1, "", "float"], [124, 1, 1, "", "forward"], [124, 4, 1, "", "full_action_spec"], [124, 4, 1, "", "full_action_spec_unbatched"], [124, 4, 1, "", "full_done_spec"], [124, 4, 1, "", "full_done_spec_unbatched"], [124, 4, 1, "", "full_observation_spec_unbatched"], [124, 4, 1, "", "full_reward_spec"], [124, 4, 1, "", "full_reward_spec_unbatched"], [124, 4, 1, "", "full_state_spec"], [124, 4, 1, "", "full_state_spec_unbatched"], [124, 1, 1, "", "get_buffer"], [124, 1, 1, "", "get_extra_state"], [124, 1, 1, "", "get_parameter"], [124, 1, 1, "", "get_submodule"], [124, 1, 1, "", "half"], [124, 4, 1, "", "input_spec"], [124, 4, 1, "", "input_spec_unbatched"], [124, 1, 1, "", "ipu"], [124, 4, 1, "", "is_spec_locked"], [124, 1, 1, "", "load_state_dict"], [124, 1, 1, "", "maybe_reset"], [124, 1, 1, "", "modules"], [124, 1, 1, "", "mtia"], [124, 1, 1, "", "named_buffers"], [124, 1, 1, "", "named_children"], [124, 1, 1, "", "named_modules"], [124, 1, 1, "", "named_parameters"], [124, 4, 1, "", "observation_keys"], [124, 4, 1, "", "observation_spec"], [124, 4, 1, "", "observation_spec_unbatched"], [124, 4, 1, "", "output_spec"], [124, 4, 1, "", "output_spec_unbatched"], [124, 1, 1, "", "parameters"], [124, 1, 1, "", "rand_action"], [124, 1, 1, "id0", "rand_step"], [124, 1, 1, "", "register_backward_hook"], [124, 1, 1, "", "register_buffer"], [124, 1, 1, "", "register_forward_hook"], [124, 1, 1, "", "register_forward_pre_hook"], [124, 1, 1, "", "register_full_backward_hook"], [124, 1, 1, "", "register_full_backward_pre_hook"], [124, 1, 1, "", "register_gym"], [124, 1, 1, "", "register_load_state_dict_post_hook"], [124, 1, 1, "", "register_load_state_dict_pre_hook"], [124, 1, 1, "", "register_module"], [124, 1, 1, "", "register_parameter"], [124, 1, 1, "", "register_state_dict_post_hook"], [124, 1, 1, "", "register_state_dict_pre_hook"], [124, 1, 1, "", "requires_grad_"], [124, 1, 1, "id1", "reset"], [124, 4, 1, "", "reset_keys"], [124, 4, 1, "", "reward_key"], [124, 4, 1, "", "reward_keys"], [124, 4, 1, "", "reward_spec"], [124, 4, 1, "", "reward_spec_unbatched"], [124, 1, 1, "id2", "rollout"], [124, 1, 1, "", "set_extra_state"], [124, 1, 1, "id3", "set_seed"], [124, 1, 1, "", "set_spec_lock_"], [124, 1, 1, "", "set_submodule"], [124, 4, 1, "", "shape"], [124, 1, 1, "", "share_memory"], [124, 4, 1, "", "specs"], [124, 1, 1, "", "state_dict"], [124, 4, 1, "", "state_keys"], [124, 4, 1, "", "state_spec"], [124, 4, 1, "", "state_spec_unbatched"], [124, 1, 1, "id4", "step"], [124, 1, 1, "", "step_and_maybe_reset"], [124, 1, 1, "", "step_mdp"], [124, 1, 1, "", "to"], [124, 1, 1, "", "to_empty"], [124, 1, 1, "", "train"], [124, 1, 1, "", "type"], [124, 1, 1, "", "xpu"], [124, 1, 1, "", "zero_grad"]], "torchrl.envs.EnvCreator": [[125, 1, 1, "", "make_variant"]], "torchrl.envs.GymLikeEnv": [[128, 4, 1, "", "action_key"], [128, 4, 1, "", "action_keys"], [128, 4, 1, "", "action_spec"], [128, 4, 1, "", "action_spec_unbatched"], [128, 1, 1, "", "add_module"], [128, 1, 1, "", "add_truncated_keys"], [128, 1, 1, "", "all_actions"], [128, 1, 1, "", "any_done"], [128, 1, 1, "", "append_transform"], [128, 1, 1, "", "apply"], [128, 1, 1, "", "auto_register_info_dict"], [128, 1, 1, "", "auto_specs_"], [128, 4, 1, "", "batch_dims"], [128, 4, 1, "", "batch_locked"], [128, 4, 1, "", "batch_size"], [128, 1, 1, "", "bfloat16"], [128, 1, 1, "", "buffers"], [128, 1, 1, "", "cardinality"], [128, 1, 1, "", "check_env_specs"], [128, 1, 1, "", "children"], [128, 1, 1, "", "close"], [128, 1, 1, "", "compile"], [128, 1, 1, "", "cpu"], [128, 1, 1, "", "cuda"], [128, 4, 1, "", "done_key"], [128, 4, 1, "", "done_keys"], [128, 4, 1, "", "done_keys_groups"], [128, 4, 1, "", "done_spec"], [128, 4, 1, "", "done_spec_unbatched"], [128, 1, 1, "", "double"], [128, 1, 1, "", "empty_cache"], [128, 1, 1, "", "eval"], [128, 1, 1, "", "extra_repr"], [128, 1, 1, "", "fake_tensordict"], [128, 1, 1, "", "float"], [128, 1, 1, "", "forward"], [128, 4, 1, "", "full_action_spec"], [128, 4, 1, "", "full_action_spec_unbatched"], [128, 4, 1, "", "full_done_spec"], [128, 4, 1, "", "full_done_spec_unbatched"], [128, 4, 1, "", "full_observation_spec_unbatched"], [128, 4, 1, "", "full_reward_spec"], [128, 4, 1, "", "full_reward_spec_unbatched"], [128, 4, 1, "", "full_state_spec"], [128, 4, 1, "", "full_state_spec_unbatched"], [128, 1, 1, "", "get_buffer"], [128, 1, 1, "", "get_extra_state"], [128, 1, 1, "", "get_parameter"], [128, 1, 1, "", "get_submodule"], [128, 1, 1, "", "half"], [128, 4, 1, "", "input_spec"], [128, 4, 1, "", "input_spec_unbatched"], [128, 1, 1, "", "ipu"], [128, 4, 1, "", "is_spec_locked"], [128, 1, 1, "", "load_state_dict"], [128, 1, 1, "", "maybe_reset"], [128, 1, 1, "", "modules"], [128, 1, 1, "", "mtia"], [128, 1, 1, "", "named_buffers"], [128, 1, 1, "", "named_children"], [128, 1, 1, "", "named_modules"], [128, 1, 1, "", "named_parameters"], [128, 4, 1, "", "observation_keys"], [128, 4, 1, "", "observation_spec"], [128, 4, 1, "", "observation_spec_unbatched"], [128, 4, 1, "", "output_spec"], [128, 4, 1, "", "output_spec_unbatched"], [128, 1, 1, "", "parameters"], [128, 1, 1, "", "rand_action"], [128, 1, 1, "", "rand_step"], [128, 1, 1, "", "read_action"], [128, 1, 1, "", "read_done"], [128, 1, 1, "", "read_obs"], [128, 1, 1, "", "read_reward"], [128, 1, 1, "", "register_backward_hook"], [128, 1, 1, "", "register_buffer"], [128, 1, 1, "", "register_forward_hook"], [128, 1, 1, "", "register_forward_pre_hook"], [128, 1, 1, "", "register_full_backward_hook"], [128, 1, 1, "", "register_full_backward_pre_hook"], [128, 1, 1, "", "register_gym"], [128, 1, 1, "", "register_load_state_dict_post_hook"], [128, 1, 1, "", "register_load_state_dict_pre_hook"], [128, 1, 1, "", "register_module"], [128, 1, 1, "", "register_parameter"], [128, 1, 1, "", "register_state_dict_post_hook"], [128, 1, 1, "", "register_state_dict_pre_hook"], [128, 1, 1, "", "requires_grad_"], [128, 1, 1, "", "reset"], [128, 4, 1, "", "reset_keys"], [128, 4, 1, "", "reward_key"], [128, 4, 1, "", "reward_keys"], [128, 4, 1, "", "reward_spec"], [128, 4, 1, "", "reward_spec_unbatched"], [128, 1, 1, "", "rollout"], [128, 1, 1, "", "set_extra_state"], [128, 1, 1, "", "set_info_dict_reader"], [128, 1, 1, "", "set_seed"], [128, 1, 1, "", "set_spec_lock_"], [128, 1, 1, "", "set_submodule"], [128, 4, 1, "", "shape"], [128, 1, 1, "", "share_memory"], [128, 4, 1, "", "specs"], [128, 1, 1, "", "state_dict"], [128, 4, 1, "", "state_keys"], [128, 4, 1, "", "state_spec"], [128, 4, 1, "", "state_spec_unbatched"], [128, 1, 1, "", "step"], [128, 1, 1, "", "step_and_maybe_reset"], [128, 1, 1, "", "step_mdp"], [128, 1, 1, "", "to"], [128, 1, 1, "", "to_empty"], [128, 1, 1, "", "train"], [128, 1, 1, "", "type"], [128, 1, 1, "", "xpu"], [128, 1, 1, "", "zero_grad"]], "torchrl.envs.LLMEnv": [[135, 4, 1, "", "action_key"], [135, 4, 1, "", "action_keys"], [135, 4, 1, "", "action_spec"], [135, 4, 1, "", "action_spec_unbatched"], [135, 1, 1, "", "add_module"], [135, 1, 1, "", "add_truncated_keys"], [135, 1, 1, "", "all_actions"], [135, 1, 1, "", "any_done"], [135, 1, 1, "", "append_transform"], [135, 1, 1, "", "apply"], [135, 1, 1, "", "auto_specs_"], [135, 4, 1, "", "batch_dims"], [135, 4, 1, "", "batch_locked"], [135, 4, 1, "", "batch_size"], [135, 1, 1, "", "bfloat16"], [135, 1, 1, "", "buffers"], [135, 1, 1, "", "cardinality"], [135, 1, 1, "", "check_env_specs"], [135, 1, 1, "", "children"], [135, 1, 1, "", "compile"], [135, 1, 1, "", "cpu"], [135, 1, 1, "", "cuda"], [135, 4, 1, "", "done_key"], [135, 4, 1, "", "done_keys"], [135, 4, 1, "", "done_keys_groups"], [135, 4, 1, "", "done_spec"], [135, 4, 1, "", "done_spec_unbatched"], [135, 1, 1, "", "double"], [135, 1, 1, "", "empty_cache"], [135, 1, 1, "", "eval"], [135, 1, 1, "", "extra_repr"], [135, 1, 1, "", "fake_tensordict"], [135, 1, 1, "", "float"], [135, 1, 1, "", "forward"], [135, 1, 1, "id0", "from_dataloader"], [135, 4, 1, "", "full_action_spec"], [135, 4, 1, "", "full_action_spec_unbatched"], [135, 4, 1, "", "full_done_spec"], [135, 4, 1, "", "full_done_spec_unbatched"], [135, 4, 1, "", "full_observation_spec_unbatched"], [135, 4, 1, "", "full_reward_spec"], [135, 4, 1, "", "full_reward_spec_unbatched"], [135, 4, 1, "", "full_state_spec"], [135, 4, 1, "", "full_state_spec_unbatched"], [135, 1, 1, "", "get_buffer"], [135, 1, 1, "", "get_extra_state"], [135, 1, 1, "", "get_parameter"], [135, 1, 1, "", "get_submodule"], [135, 1, 1, "", "half"], [135, 4, 1, "", "input_spec"], [135, 4, 1, "", "input_spec_unbatched"], [135, 1, 1, "", "ipu"], [135, 4, 1, "", "is_spec_locked"], [135, 1, 1, "", "load_state_dict"], [135, 1, 1, "", "maybe_reset"], [135, 1, 1, "", "modules"], [135, 1, 1, "", "mtia"], [135, 1, 1, "", "named_buffers"], [135, 1, 1, "", "named_children"], [135, 1, 1, "", "named_modules"], [135, 1, 1, "", "named_parameters"], [135, 4, 1, "", "observation_keys"], [135, 4, 1, "", "observation_spec"], [135, 4, 1, "", "observation_spec_unbatched"], [135, 4, 1, "", "output_spec"], [135, 4, 1, "", "output_spec_unbatched"], [135, 1, 1, "", "parameters"], [135, 1, 1, "", "rand_action"], [135, 1, 1, "", "rand_step"], [135, 1, 1, "", "register_backward_hook"], [135, 1, 1, "", "register_buffer"], [135, 1, 1, "", "register_forward_hook"], [135, 1, 1, "", "register_forward_pre_hook"], [135, 1, 1, "", "register_full_backward_hook"], [135, 1, 1, "", "register_full_backward_pre_hook"], [135, 1, 1, "", "register_gym"], [135, 1, 1, "", "register_load_state_dict_post_hook"], [135, 1, 1, "", "register_load_state_dict_pre_hook"], [135, 1, 1, "", "register_module"], [135, 1, 1, "", "register_parameter"], [135, 1, 1, "", "register_state_dict_post_hook"], [135, 1, 1, "", "register_state_dict_pre_hook"], [135, 1, 1, "", "requires_grad_"], [135, 1, 1, "", "reset"], [135, 4, 1, "", "reset_keys"], [135, 4, 1, "", "reward_key"], [135, 4, 1, "", "reward_keys"], [135, 4, 1, "", "reward_spec"], [135, 4, 1, "", "reward_spec_unbatched"], [135, 1, 1, "", "rollout"], [135, 1, 1, "", "set_extra_state"], [135, 1, 1, "", "set_seed"], [135, 1, 1, "", "set_spec_lock_"], [135, 1, 1, "", "set_submodule"], [135, 4, 1, "", "shape"], [135, 1, 1, "", "share_memory"], [135, 4, 1, "", "specs"], [135, 1, 1, "", "state_dict"], [135, 4, 1, "", "state_keys"], [135, 4, 1, "", "state_spec"], [135, 4, 1, "", "state_spec_unbatched"], [135, 1, 1, "", "step"], [135, 1, 1, "", "step_and_maybe_reset"], [135, 1, 1, "", "step_mdp"], [135, 1, 1, "", "to"], [135, 1, 1, "", "to_empty"], [135, 1, 1, "", "train"], [135, 1, 1, "", "type"], [135, 1, 1, "", "xpu"], [135, 1, 1, "", "zero_grad"]], "torchrl.envs.LLMHashingEnv": [[136, 4, 1, "", "action_key"], [136, 4, 1, "", "action_keys"], [136, 4, 1, "", "action_spec"], [136, 4, 1, "", "action_spec_unbatched"], [136, 1, 1, "", "add_module"], [136, 1, 1, "", "add_truncated_keys"], [136, 1, 1, "", "all_actions"], [136, 1, 1, "", "any_done"], [136, 1, 1, "", "append_transform"], [136, 1, 1, "", "apply"], [136, 1, 1, "", "auto_specs_"], [136, 4, 1, "", "batch_dims"], [136, 4, 1, "", "batch_locked"], [136, 4, 1, "", "batch_size"], [136, 1, 1, "", "bfloat16"], [136, 1, 1, "", "buffers"], [136, 1, 1, "", "cardinality"], [136, 1, 1, "", "check_env_specs"], [136, 1, 1, "", "children"], [136, 1, 1, "", "compile"], [136, 1, 1, "", "cpu"], [136, 1, 1, "", "cuda"], [136, 4, 1, "", "done_key"], [136, 4, 1, "", "done_keys"], [136, 4, 1, "", "done_keys_groups"], [136, 4, 1, "", "done_spec"], [136, 4, 1, "", "done_spec_unbatched"], [136, 1, 1, "", "double"], [136, 1, 1, "", "empty_cache"], [136, 1, 1, "", "eval"], [136, 1, 1, "", "extra_repr"], [136, 1, 1, "", "fake_tensordict"], [136, 1, 1, "", "float"], [136, 1, 1, "", "forward"], [136, 4, 1, "", "full_action_spec"], [136, 4, 1, "", "full_action_spec_unbatched"], [136, 4, 1, "", "full_done_spec"], [136, 4, 1, "", "full_done_spec_unbatched"], [136, 4, 1, "", "full_observation_spec_unbatched"], [136, 4, 1, "", "full_reward_spec"], [136, 4, 1, "", "full_reward_spec_unbatched"], [136, 4, 1, "", "full_state_spec"], [136, 4, 1, "", "full_state_spec_unbatched"], [136, 1, 1, "", "get_buffer"], [136, 1, 1, "", "get_extra_state"], [136, 1, 1, "", "get_parameter"], [136, 1, 1, "", "get_submodule"], [136, 1, 1, "", "half"], [136, 4, 1, "", "input_spec"], [136, 4, 1, "", "input_spec_unbatched"], [136, 1, 1, "", "ipu"], [136, 4, 1, "", "is_spec_locked"], [136, 1, 1, "", "load_state_dict"], [136, 1, 1, "", "make_tensordict"], [136, 1, 1, "", "maybe_reset"], [136, 1, 1, "", "modules"], [136, 1, 1, "", "mtia"], [136, 1, 1, "", "named_buffers"], [136, 1, 1, "", "named_children"], [136, 1, 1, "", "named_modules"], [136, 1, 1, "", "named_parameters"], [136, 4, 1, "", "observation_keys"], [136, 4, 1, "", "observation_spec"], [136, 4, 1, "", "observation_spec_unbatched"], [136, 4, 1, "", "output_spec"], [136, 4, 1, "", "output_spec_unbatched"], [136, 1, 1, "", "parameters"], [136, 1, 1, "", "rand_action"], [136, 1, 1, "", "rand_step"], [136, 1, 1, "", "register_backward_hook"], [136, 1, 1, "", "register_buffer"], [136, 1, 1, "", "register_forward_hook"], [136, 1, 1, "", "register_forward_pre_hook"], [136, 1, 1, "", "register_full_backward_hook"], [136, 1, 1, "", "register_full_backward_pre_hook"], [136, 1, 1, "", "register_gym"], [136, 1, 1, "", "register_load_state_dict_post_hook"], [136, 1, 1, "", "register_load_state_dict_pre_hook"], [136, 1, 1, "", "register_module"], [136, 1, 1, "", "register_parameter"], [136, 1, 1, "", "register_state_dict_post_hook"], [136, 1, 1, "", "register_state_dict_pre_hook"], [136, 1, 1, "", "requires_grad_"], [136, 1, 1, "", "reset"], [136, 4, 1, "", "reset_keys"], [136, 4, 1, "", "reward_key"], [136, 4, 1, "", "reward_keys"], [136, 4, 1, "", "reward_spec"], [136, 4, 1, "", "reward_spec_unbatched"], [136, 1, 1, "", "rollout"], [136, 1, 1, "", "set_extra_state"], [136, 1, 1, "", "set_seed"], [136, 1, 1, "", "set_spec_lock_"], [136, 1, 1, "", "set_submodule"], [136, 4, 1, "", "shape"], [136, 1, 1, "", "share_memory"], [136, 4, 1, "", "specs"], [136, 1, 1, "", "state_dict"], [136, 4, 1, "", "state_keys"], [136, 4, 1, "", "state_spec"], [136, 4, 1, "", "state_spec_unbatched"], [136, 1, 1, "", "step"], [136, 1, 1, "", "step_and_maybe_reset"], [136, 1, 1, "", "step_mdp"], [136, 1, 1, "", "to"], [136, 1, 1, "", "to_empty"], [136, 1, 1, "", "train"], [136, 1, 1, "", "type"], [136, 1, 1, "", "xpu"], [136, 1, 1, "", "zero_grad"]], "torchrl.envs.ParallelEnv": [[148, 4, 1, "", "action_key"], [148, 4, 1, "", "action_keys"], [148, 4, 1, "", "action_spec"], [148, 4, 1, "", "action_spec_unbatched"], [148, 1, 1, "", "add_module"], [148, 1, 1, "", "add_truncated_keys"], [148, 1, 1, "", "all_actions"], [148, 1, 1, "", "any_done"], [148, 1, 1, "", "append_transform"], [148, 1, 1, "", "apply"], [148, 1, 1, "", "auto_specs_"], [148, 4, 1, "", "batch_dims"], [148, 4, 1, "", "batch_locked"], [148, 4, 1, "", "batch_size"], [148, 1, 1, "", "bfloat16"], [148, 1, 1, "", "buffers"], [148, 1, 1, "", "cardinality"], [148, 1, 1, "", "check_env_specs"], [148, 1, 1, "", "children"], [148, 1, 1, "", "compile"], [148, 1, 1, "", "cpu"], [148, 1, 1, "", "cuda"], [148, 4, 1, "", "done_key"], [148, 4, 1, "", "done_keys"], [148, 4, 1, "", "done_keys_groups"], [148, 4, 1, "", "done_spec"], [148, 4, 1, "", "done_spec_unbatched"], [148, 1, 1, "", "double"], [148, 1, 1, "", "empty_cache"], [148, 1, 1, "", "eval"], [148, 1, 1, "", "extra_repr"], [148, 1, 1, "", "fake_tensordict"], [148, 1, 1, "", "float"], [148, 1, 1, "", "forward"], [148, 4, 1, "", "full_action_spec"], [148, 4, 1, "", "full_action_spec_unbatched"], [148, 4, 1, "", "full_done_spec"], [148, 4, 1, "", "full_done_spec_unbatched"], [148, 4, 1, "", "full_observation_spec_unbatched"], [148, 4, 1, "", "full_reward_spec"], [148, 4, 1, "", "full_reward_spec_unbatched"], [148, 4, 1, "", "full_state_spec"], [148, 4, 1, "", "full_state_spec_unbatched"], [148, 1, 1, "", "get_buffer"], [148, 1, 1, "", "get_extra_state"], [148, 1, 1, "", "get_parameter"], [148, 1, 1, "", "get_submodule"], [148, 1, 1, "", "half"], [148, 4, 1, "", "input_spec"], [148, 4, 1, "", "input_spec_unbatched"], [148, 1, 1, "", "ipu"], [148, 4, 1, "", "is_spec_locked"], [148, 1, 1, "", "load_state_dict"], [148, 1, 1, "", "maybe_reset"], [148, 1, 1, "", "modules"], [148, 1, 1, "", "mtia"], [148, 1, 1, "", "named_buffers"], [148, 1, 1, "", "named_children"], [148, 1, 1, "", "named_modules"], [148, 1, 1, "", "named_parameters"], [148, 4, 1, "", "observation_keys"], [148, 4, 1, "", "observation_spec"], [148, 4, 1, "", "observation_spec_unbatched"], [148, 4, 1, "", "output_spec"], [148, 4, 1, "", "output_spec_unbatched"], [148, 1, 1, "", "parameters"], [148, 1, 1, "", "rand_action"], [148, 1, 1, "", "rand_step"], [148, 1, 1, "", "register_backward_hook"], [148, 1, 1, "", "register_buffer"], [148, 1, 1, "", "register_forward_hook"], [148, 1, 1, "", "register_forward_pre_hook"], [148, 1, 1, "", "register_full_backward_hook"], [148, 1, 1, "", "register_full_backward_pre_hook"], [148, 1, 1, "", "register_gym"], [148, 1, 1, "", "register_load_state_dict_post_hook"], [148, 1, 1, "", "register_load_state_dict_pre_hook"], [148, 1, 1, "", "register_module"], [148, 1, 1, "", "register_parameter"], [148, 1, 1, "", "register_state_dict_post_hook"], [148, 1, 1, "", "register_state_dict_pre_hook"], [148, 1, 1, "", "requires_grad_"], [148, 1, 1, "", "reset"], [148, 4, 1, "", "reset_keys"], [148, 4, 1, "", "reward_key"], [148, 4, 1, "", "reward_keys"], [148, 4, 1, "", "reward_spec"], [148, 4, 1, "", "reward_spec_unbatched"], [148, 1, 1, "", "rollout"], [148, 1, 1, "", "set_extra_state"], [148, 1, 1, "", "set_seed"], [148, 1, 1, "", "set_spec_lock_"], [148, 1, 1, "", "set_submodule"], [148, 4, 1, "", "shape"], [148, 1, 1, "", "share_memory"], [148, 4, 1, "", "specs"], [148, 1, 1, "", "state_dict"], [148, 4, 1, "", "state_keys"], [148, 4, 1, "", "state_spec"], [148, 4, 1, "", "state_spec_unbatched"], [148, 1, 1, "", "step"], [148, 1, 1, "", "step_and_maybe_reset"], [148, 1, 1, "", "step_mdp"], [148, 1, 1, "", "to"], [148, 1, 1, "", "to_empty"], [148, 1, 1, "", "train"], [148, 1, 1, "", "type"], [148, 1, 1, "", "update_kwargs"], [148, 1, 1, "", "xpu"], [148, 1, 1, "", "zero_grad"]], "torchrl.envs.PendulumEnv": [[149, 4, 1, "", "action_key"], [149, 4, 1, "", "action_keys"], [149, 4, 1, "", "action_spec"], [149, 4, 1, "", "action_spec_unbatched"], [149, 1, 1, "", "add_module"], [149, 1, 1, "", "add_truncated_keys"], [149, 1, 1, "", "all_actions"], [149, 1, 1, "", "any_done"], [149, 1, 1, "", "append_transform"], [149, 1, 1, "", "apply"], [149, 1, 1, "", "auto_specs_"], [149, 4, 1, "", "batch_dims"], [149, 4, 1, "", "batch_size"], [149, 1, 1, "", "bfloat16"], [149, 1, 1, "", "buffers"], [149, 1, 1, "", "cardinality"], [149, 1, 1, "", "check_env_specs"], [149, 1, 1, "", "children"], [149, 1, 1, "", "compile"], [149, 1, 1, "", "cpu"], [149, 1, 1, "", "cuda"], [149, 4, 1, "", "done_key"], [149, 4, 1, "", "done_keys"], [149, 4, 1, "", "done_keys_groups"], [149, 4, 1, "", "done_spec"], [149, 4, 1, "", "done_spec_unbatched"], [149, 1, 1, "", "double"], [149, 1, 1, "", "empty_cache"], [149, 1, 1, "", "eval"], [149, 1, 1, "", "extra_repr"], [149, 1, 1, "", "fake_tensordict"], [149, 1, 1, "", "float"], [149, 1, 1, "", "forward"], [149, 4, 1, "", "full_action_spec"], [149, 4, 1, "", "full_action_spec_unbatched"], [149, 4, 1, "", "full_done_spec"], [149, 4, 1, "", "full_done_spec_unbatched"], [149, 4, 1, "", "full_observation_spec_unbatched"], [149, 4, 1, "", "full_reward_spec"], [149, 4, 1, "", "full_reward_spec_unbatched"], [149, 4, 1, "", "full_state_spec"], [149, 4, 1, "", "full_state_spec_unbatched"], [149, 1, 1, "", "gen_params"], [149, 1, 1, "", "get_buffer"], [149, 1, 1, "", "get_extra_state"], [149, 1, 1, "", "get_parameter"], [149, 1, 1, "", "get_submodule"], [149, 1, 1, "", "half"], [149, 4, 1, "", "input_spec"], [149, 4, 1, "", "input_spec_unbatched"], [149, 1, 1, "", "ipu"], [149, 4, 1, "", "is_spec_locked"], [149, 1, 1, "", "load_state_dict"], [149, 1, 1, "", "maybe_reset"], [149, 1, 1, "", "modules"], [149, 1, 1, "", "mtia"], [149, 1, 1, "", "named_buffers"], [149, 1, 1, "", "named_children"], [149, 1, 1, "", "named_modules"], [149, 1, 1, "", "named_parameters"], [149, 4, 1, "", "observation_keys"], [149, 4, 1, "", "observation_spec"], [149, 4, 1, "", "observation_spec_unbatched"], [149, 4, 1, "", "output_spec"], [149, 4, 1, "", "output_spec_unbatched"], [149, 1, 1, "", "parameters"], [149, 1, 1, "", "rand_action"], [149, 1, 1, "", "rand_step"], [149, 1, 1, "", "register_backward_hook"], [149, 1, 1, "", "register_buffer"], [149, 1, 1, "", "register_forward_hook"], [149, 1, 1, "", "register_forward_pre_hook"], [149, 1, 1, "", "register_full_backward_hook"], [149, 1, 1, "", "register_full_backward_pre_hook"], [149, 1, 1, "", "register_gym"], [149, 1, 1, "", "register_load_state_dict_post_hook"], [149, 1, 1, "", "register_load_state_dict_pre_hook"], [149, 1, 1, "", "register_module"], [149, 1, 1, "", "register_parameter"], [149, 1, 1, "", "register_state_dict_post_hook"], [149, 1, 1, "", "register_state_dict_pre_hook"], [149, 1, 1, "", "requires_grad_"], [149, 1, 1, "", "reset"], [149, 4, 1, "", "reset_keys"], [149, 4, 1, "", "reward_key"], [149, 4, 1, "", "reward_keys"], [149, 4, 1, "", "reward_spec"], [149, 4, 1, "", "reward_spec_unbatched"], [149, 1, 1, "", "rollout"], [149, 1, 1, "", "set_extra_state"], [149, 1, 1, "", "set_seed"], [149, 1, 1, "", "set_spec_lock_"], [149, 1, 1, "", "set_submodule"], [149, 4, 1, "", "shape"], [149, 1, 1, "", "share_memory"], [149, 4, 1, "", "specs"], [149, 1, 1, "", "state_dict"], [149, 4, 1, "", "state_keys"], [149, 4, 1, "", "state_spec"], [149, 4, 1, "", "state_spec_unbatched"], [149, 1, 1, "", "step"], [149, 1, 1, "", "step_and_maybe_reset"], [149, 1, 1, "", "step_mdp"], [149, 1, 1, "", "to"], [149, 1, 1, "", "to_empty"], [149, 1, 1, "", "train"], [149, 1, 1, "", "type"], [149, 1, 1, "", "xpu"], [149, 1, 1, "", "zero_grad"]], "torchrl.envs.SerialEnv": [[156, 4, 1, "", "action_key"], [156, 4, 1, "", "action_keys"], [156, 4, 1, "", "action_spec"], [156, 4, 1, "", "action_spec_unbatched"], [156, 1, 1, "", "add_module"], [156, 1, 1, "", "add_truncated_keys"], [156, 1, 1, "", "all_actions"], [156, 1, 1, "", "any_done"], [156, 1, 1, "", "append_transform"], [156, 1, 1, "", "apply"], [156, 1, 1, "", "auto_specs_"], [156, 4, 1, "", "batch_dims"], [156, 4, 1, "", "batch_locked"], [156, 4, 1, "", "batch_size"], [156, 1, 1, "", "bfloat16"], [156, 1, 1, "", "buffers"], [156, 1, 1, "", "cardinality"], [156, 1, 1, "", "check_env_specs"], [156, 1, 1, "", "children"], [156, 1, 1, "", "compile"], [156, 1, 1, "", "cpu"], [156, 1, 1, "", "cuda"], [156, 4, 1, "", "done_key"], [156, 4, 1, "", "done_keys"], [156, 4, 1, "", "done_keys_groups"], [156, 4, 1, "", "done_spec"], [156, 4, 1, "", "done_spec_unbatched"], [156, 1, 1, "", "double"], [156, 1, 1, "", "empty_cache"], [156, 1, 1, "", "eval"], [156, 1, 1, "", "extra_repr"], [156, 1, 1, "", "fake_tensordict"], [156, 1, 1, "", "float"], [156, 1, 1, "", "forward"], [156, 4, 1, "", "full_action_spec"], [156, 4, 1, "", "full_action_spec_unbatched"], [156, 4, 1, "", "full_done_spec"], [156, 4, 1, "", "full_done_spec_unbatched"], [156, 4, 1, "", "full_observation_spec_unbatched"], [156, 4, 1, "", "full_reward_spec"], [156, 4, 1, "", "full_reward_spec_unbatched"], [156, 4, 1, "", "full_state_spec"], [156, 4, 1, "", "full_state_spec_unbatched"], [156, 1, 1, "", "get_buffer"], [156, 1, 1, "", "get_extra_state"], [156, 1, 1, "", "get_parameter"], [156, 1, 1, "", "get_submodule"], [156, 1, 1, "", "half"], [156, 4, 1, "", "input_spec"], [156, 4, 1, "", "input_spec_unbatched"], [156, 1, 1, "", "ipu"], [156, 4, 1, "", "is_spec_locked"], [156, 1, 1, "", "load_state_dict"], [156, 1, 1, "", "maybe_reset"], [156, 1, 1, "", "modules"], [156, 1, 1, "", "mtia"], [156, 1, 1, "", "named_buffers"], [156, 1, 1, "", "named_children"], [156, 1, 1, "", "named_modules"], [156, 1, 1, "", "named_parameters"], [156, 4, 1, "", "observation_keys"], [156, 4, 1, "", "observation_spec"], [156, 4, 1, "", "observation_spec_unbatched"], [156, 4, 1, "", "output_spec"], [156, 4, 1, "", "output_spec_unbatched"], [156, 1, 1, "", "parameters"], [156, 1, 1, "", "rand_action"], [156, 1, 1, "", "rand_step"], [156, 1, 1, "", "register_backward_hook"], [156, 1, 1, "", "register_buffer"], [156, 1, 1, "", "register_forward_hook"], [156, 1, 1, "", "register_forward_pre_hook"], [156, 1, 1, "", "register_full_backward_hook"], [156, 1, 1, "", "register_full_backward_pre_hook"], [156, 1, 1, "", "register_gym"], [156, 1, 1, "", "register_load_state_dict_post_hook"], [156, 1, 1, "", "register_load_state_dict_pre_hook"], [156, 1, 1, "", "register_module"], [156, 1, 1, "", "register_parameter"], [156, 1, 1, "", "register_state_dict_post_hook"], [156, 1, 1, "", "register_state_dict_pre_hook"], [156, 1, 1, "", "requires_grad_"], [156, 1, 1, "", "reset"], [156, 4, 1, "", "reset_keys"], [156, 4, 1, "", "reward_key"], [156, 4, 1, "", "reward_keys"], [156, 4, 1, "", "reward_spec"], [156, 4, 1, "", "reward_spec_unbatched"], [156, 1, 1, "", "rollout"], [156, 1, 1, "", "set_extra_state"], [156, 1, 1, "", "set_seed"], [156, 1, 1, "", "set_spec_lock_"], [156, 1, 1, "", "set_submodule"], [156, 4, 1, "", "shape"], [156, 1, 1, "", "share_memory"], [156, 4, 1, "", "specs"], [156, 1, 1, "", "state_dict"], [156, 4, 1, "", "state_keys"], [156, 4, 1, "", "state_spec"], [156, 4, 1, "", "state_spec_unbatched"], [156, 1, 1, "", "step"], [156, 1, 1, "", "step_and_maybe_reset"], [156, 1, 1, "", "step_mdp"], [156, 1, 1, "", "to"], [156, 1, 1, "", "to_empty"], [156, 1, 1, "", "train"], [156, 1, 1, "", "type"], [156, 1, 1, "", "update_kwargs"], [156, 1, 1, "", "xpu"], [156, 1, 1, "", "zero_grad"]], "torchrl.envs.TicTacToeEnv": [[157, 4, 1, "", "action_key"], [157, 4, 1, "", "action_keys"], [157, 4, 1, "", "action_spec"], [157, 4, 1, "", "action_spec_unbatched"], [157, 1, 1, "", "add_module"], [157, 1, 1, "", "add_truncated_keys"], [157, 1, 1, "", "all_actions"], [157, 1, 1, "", "any_done"], [157, 1, 1, "", "append_transform"], [157, 1, 1, "", "apply"], [157, 1, 1, "", "auto_specs_"], [157, 4, 1, "", "batch_dims"], [157, 4, 1, "", "batch_size"], [157, 1, 1, "", "bfloat16"], [157, 1, 1, "", "buffers"], [157, 1, 1, "", "cardinality"], [157, 1, 1, "", "check_env_specs"], [157, 1, 1, "", "children"], [157, 1, 1, "", "compile"], [157, 1, 1, "", "cpu"], [157, 1, 1, "", "cuda"], [157, 4, 1, "", "done_key"], [157, 4, 1, "", "done_keys"], [157, 4, 1, "", "done_keys_groups"], [157, 4, 1, "", "done_spec"], [157, 4, 1, "", "done_spec_unbatched"], [157, 1, 1, "", "double"], [157, 1, 1, "", "empty_cache"], [157, 1, 1, "", "eval"], [157, 1, 1, "", "extra_repr"], [157, 1, 1, "", "fake_tensordict"], [157, 1, 1, "", "float"], [157, 1, 1, "", "forward"], [157, 4, 1, "", "full_action_spec"], [157, 4, 1, "", "full_action_spec_unbatched"], [157, 4, 1, "", "full_done_spec"], [157, 4, 1, "", "full_done_spec_unbatched"], [157, 4, 1, "", "full_observation_spec_unbatched"], [157, 4, 1, "", "full_reward_spec"], [157, 4, 1, "", "full_reward_spec_unbatched"], [157, 4, 1, "", "full_state_spec"], [157, 4, 1, "", "full_state_spec_unbatched"], [157, 1, 1, "", "get_buffer"], [157, 1, 1, "", "get_extra_state"], [157, 1, 1, "", "get_parameter"], [157, 1, 1, "", "get_submodule"], [157, 1, 1, "", "half"], [157, 4, 1, "", "input_spec"], [157, 4, 1, "", "input_spec_unbatched"], [157, 1, 1, "", "ipu"], [157, 4, 1, "", "is_spec_locked"], [157, 1, 1, "", "load_state_dict"], [157, 1, 1, "", "maybe_reset"], [157, 1, 1, "", "modules"], [157, 1, 1, "", "mtia"], [157, 1, 1, "", "named_buffers"], [157, 1, 1, "", "named_children"], [157, 1, 1, "", "named_modules"], [157, 1, 1, "", "named_parameters"], [157, 4, 1, "", "observation_keys"], [157, 4, 1, "", "observation_spec"], [157, 4, 1, "", "observation_spec_unbatched"], [157, 4, 1, "", "output_spec"], [157, 4, 1, "", "output_spec_unbatched"], [157, 1, 1, "", "parameters"], [157, 1, 1, "", "rand_action"], [157, 1, 1, "", "rand_step"], [157, 1, 1, "", "register_backward_hook"], [157, 1, 1, "", "register_buffer"], [157, 1, 1, "", "register_forward_hook"], [157, 1, 1, "", "register_forward_pre_hook"], [157, 1, 1, "", "register_full_backward_hook"], [157, 1, 1, "", "register_full_backward_pre_hook"], [157, 1, 1, "", "register_gym"], [157, 1, 1, "", "register_load_state_dict_post_hook"], [157, 1, 1, "", "register_load_state_dict_pre_hook"], [157, 1, 1, "", "register_module"], [157, 1, 1, "", "register_parameter"], [157, 1, 1, "", "register_state_dict_post_hook"], [157, 1, 1, "", "register_state_dict_pre_hook"], [157, 1, 1, "", "requires_grad_"], [157, 1, 1, "", "reset"], [157, 4, 1, "", "reset_keys"], [157, 4, 1, "", "reward_key"], [157, 4, 1, "", "reward_keys"], [157, 4, 1, "", "reward_spec"], [157, 4, 1, "", "reward_spec_unbatched"], [157, 1, 1, "", "rollout"], [157, 1, 1, "", "set_extra_state"], [157, 1, 1, "", "set_seed"], [157, 1, 1, "", "set_spec_lock_"], [157, 1, 1, "", "set_submodule"], [157, 4, 1, "", "shape"], [157, 1, 1, "", "share_memory"], [157, 4, 1, "", "specs"], [157, 1, 1, "", "state_dict"], [157, 4, 1, "", "state_keys"], [157, 4, 1, "", "state_spec"], [157, 4, 1, "", "state_spec_unbatched"], [157, 1, 1, "", "step"], [157, 1, 1, "", "step_and_maybe_reset"], [157, 1, 1, "", "step_mdp"], [157, 1, 1, "", "to"], [157, 1, 1, "", "to_empty"], [157, 1, 1, "", "train"], [157, 1, 1, "", "type"], [157, 1, 1, "", "xpu"], [157, 1, 1, "", "zero_grad"]], "torchrl.envs.model_based.dreamer": [[168, 2, 1, "", "DreamerDecoder"], [169, 2, 1, "", "DreamerEnv"]], "torchrl.envs.transforms": [[175, 0, 1, "", "ActionDiscretizer"], [176, 0, 1, "", "ActionMask"], [177, 0, 1, "", "AutoResetEnv"], [178, 0, 1, "", "AutoResetTransform"], [179, 0, 1, "", "BatchSizeTransform"], [180, 0, 1, "", "BinarizeReward"], [181, 0, 1, "", "BurnInTransform"], [182, 0, 1, "", "CatFrames"], [183, 0, 1, "", "CatTensors"], [184, 0, 1, "", "CenterCrop"], [185, 0, 1, "", "ClipTransform"], [186, 0, 1, "", "Compose"], [187, 0, 1, "", "ConditionalSkip"], [188, 0, 1, "", "Crop"], [189, 0, 1, "", "DTypeCastTransform"], [190, 0, 1, "", "DataLoadingPrimer"], [191, 0, 1, "", "DeviceCastTransform"], [192, 0, 1, "", "DiscreteActionProjection"], [193, 0, 1, "", "DoubleToFloat"], [194, 0, 1, "", "EndOfLifeTransform"], [195, 0, 1, "", "ExcludeTransform"], [196, 0, 1, "", "FiniteTensorDictCheck"], [197, 0, 1, "", "FlattenObservation"], [198, 0, 1, "", "FrameSkipTransform"], [199, 0, 1, "", "GrayScale"], [200, 0, 1, "", "Hash"], [201, 0, 1, "", "InitTracker"], [202, 0, 1, "", "KLRewardTransform"], [203, 0, 1, "", "LineariseRewards"], [204, 0, 1, "", "MultiAction"], [205, 0, 1, "", "NoopResetEnv"], [206, 0, 1, "", "ObservationNorm"], [207, 0, 1, "", "ObservationTransform"], [208, 0, 1, "", "PermuteTransform"], [209, 0, 1, "", "PinMemoryTransform"], [210, 0, 1, "", "R3MTransform"], [211, 0, 1, "", "RandomCropTensorDict"], [212, 0, 1, "", "RemoveEmptySpecs"], [213, 0, 1, "", "RenameTransform"], [214, 0, 1, "", "Resize"], [215, 0, 1, "", "Reward2GoTransform"], [216, 0, 1, "", "RewardClipping"], [217, 0, 1, "", "RewardScaling"], [218, 0, 1, "", "RewardSum"], [219, 0, 1, "", "SelectTransform"], [220, 0, 1, "", "SignTransform"], [221, 0, 1, "", "SqueezeTransform"], [222, 0, 1, "", "Stack"], [223, 0, 1, "", "StepCounter"], [224, 0, 1, "", "TargetReturn"], [225, 0, 1, "", "TensorDictPrimer"], [226, 0, 1, "", "TimeMaxPool"], [227, 0, 1, "", "Timer"], [228, 0, 1, "", "ToTensorImage"], [229, 0, 1, "", "Tokenizer"], [230, 0, 1, "", "TrajCounter"], [231, 0, 1, "", "Transform"], [232, 0, 1, "", "TransformedEnv"], [233, 0, 1, "", "UnaryTransform"], [234, 0, 1, "", "UnsqueezeTransform"], [235, 0, 1, "", "VC1Transform"], [236, 0, 1, "", "VIPRewardTransform"], [237, 0, 1, "", "VIPTransform"], [238, 0, 1, "", "VecGymEnvTransform"], [239, 0, 1, "", "VecNorm"], [240, 0, 1, "", "gSDENoise"]], "torchrl.envs.transforms.ActionDiscretizer": [[175, 0, 1, "", "SamplingStrategy"], [175, 1, 1, "", "inv"], [175, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.ActionMask": [[176, 1, 1, "", "forward"]], "torchrl.envs.transforms.AutoResetEnv": [[177, 1, 1, "", "insert_transform"]], "torchrl.envs.transforms.AutoResetTransform": [[178, 1, 1, "", "forward"]], "torchrl.envs.transforms.BatchSizeTransform": [[179, 1, 1, "", "forward"], [179, 1, 1, "", "transform_env_batch_size"], [179, 1, 1, "", "transform_input_spec"], [179, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.BinarizeReward": [[180, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.BurnInTransform": [[181, 1, 1, "", "forward"]], "torchrl.envs.transforms.CatFrames": [[182, 1, 1, "", "forward"], [182, 1, 1, "", "make_rb_transform_and_sampler"], [182, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CatTensors": [[183, 1, 1, "", "forward"], [183, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CenterCrop": [[184, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ClipTransform": [[185, 1, 1, "", "transform_observation_spec"], [185, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.Compose": [[186, 1, 1, "", "append"], [186, 1, 1, "", "forward"], [186, 1, 1, "", "init"], [186, 1, 1, "", "insert"], [186, 1, 1, "", "to"], [186, 1, 1, "", "transform_action_spec"], [186, 1, 1, "", "transform_env_batch_size"], [186, 1, 1, "", "transform_env_device"], [186, 1, 1, "", "transform_input_spec"], [186, 1, 1, "", "transform_observation_spec"], [186, 1, 1, "", "transform_output_spec"], [186, 1, 1, "", "transform_reward_spec"], [186, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.ConditionalSkip": [[187, 1, 1, "", "forward"]], "torchrl.envs.transforms.Crop": [[188, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.DTypeCastTransform": [[189, 1, 1, "", "forward"], [189, 1, 1, "", "transform_input_spec"], [189, 1, 1, "", "transform_observation_spec"], [189, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.DeviceCastTransform": [[191, 1, 1, "", "forward"], [191, 1, 1, "", "transform_action_spec"], [191, 1, 1, "", "transform_done_spec"], [191, 1, 1, "", "transform_env_device"], [191, 1, 1, "", "transform_input_spec"], [191, 1, 1, "", "transform_observation_spec"], [191, 1, 1, "", "transform_output_spec"], [191, 1, 1, "", "transform_reward_spec"], [191, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.DiscreteActionProjection": [[192, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.EndOfLifeTransform": [[194, 1, 1, "", "forward"], [194, 1, 1, "", "register_keys"], [194, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ExcludeTransform": [[195, 1, 1, "", "forward"], [195, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.FiniteTensorDictCheck": [[196, 1, 1, "", "forward"]], "torchrl.envs.transforms.FlattenObservation": [[197, 1, 1, "", "forward"], [197, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.FrameSkipTransform": [[198, 1, 1, "", "forward"]], "torchrl.envs.transforms.GrayScale": [[199, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Hash": [[200, 1, 1, "", "get_input_from_hash"], [200, 1, 1, "", "reproducible_hash"], [200, 1, 1, "", "state_dict"]], "torchrl.envs.transforms.InitTracker": [[201, 1, 1, "", "forward"], [201, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.KLRewardTransform": [[202, 1, 1, "", "forward"], [202, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.LineariseRewards": [[203, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.MultiAction": [[204, 1, 1, "", "transform_input_spec"], [204, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.ObservationNorm": [[206, 1, 1, "", "init_stats"], [206, 1, 1, "", "transform_action_spec"], [206, 1, 1, "", "transform_observation_spec"], [206, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.PermuteTransform": [[208, 1, 1, "", "transform_input_spec"], [208, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PinMemoryTransform": [[209, 1, 1, "", "forward"]], "torchrl.envs.transforms.R3MTransform": [[210, 1, 1, "", "to"]], "torchrl.envs.transforms.RandomCropTensorDict": [[211, 1, 1, "", "forward"]], "torchrl.envs.transforms.RemoveEmptySpecs": [[212, 1, 1, "", "forward"], [212, 1, 1, "", "transform_input_spec"], [212, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.RenameTransform": [[213, 1, 1, "", "forward"], [213, 1, 1, "", "transform_input_spec"], [213, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.Resize": [[214, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Reward2GoTransform": [[215, 1, 1, "", "forward"]], "torchrl.envs.transforms.RewardClipping": [[216, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardScaling": [[217, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardSum": [[218, 1, 1, "", "forward"], [218, 1, 1, "", "transform_input_spec"], [218, 1, 1, "", "transform_observation_spec"], [218, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.SelectTransform": [[219, 1, 1, "", "forward"], [219, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.SignTransform": [[220, 1, 1, "", "transform_observation_spec"], [220, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.Stack": [[222, 1, 1, "", "forward"], [222, 1, 1, "", "transform_done_spec"], [222, 1, 1, "", "transform_input_spec"], [222, 1, 1, "", "transform_observation_spec"], [222, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.StepCounter": [[223, 1, 1, "", "forward"], [223, 1, 1, "", "transform_input_spec"], [223, 1, 1, "", "transform_observation_spec"], [223, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.TargetReturn": [[224, 1, 1, "", "forward"], [224, 1, 1, "", "transform_input_spec"], [224, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TensorDictPrimer": [[225, 1, 1, "", "forward"], [225, 1, 1, "", "to"], [225, 1, 1, "", "transform_input_spec"], [225, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TimeMaxPool": [[226, 1, 1, "", "forward"], [226, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Timer": [[227, 1, 1, "", "forward"], [227, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ToTensorImage": [[228, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Tokenizer": [[229, 1, 1, "", "transform_input_spec"], [229, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.TrajCounter": [[230, 1, 1, "", "forward"], [230, 1, 1, "", "load_state_dict"], [230, 1, 1, "", "state_dict"], [230, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Transform": [[231, 1, 1, "", "clone"], [231, 4, 1, "", "container"], [231, 1, 1, "", "forward"], [231, 1, 1, "", "init"], [231, 1, 1, "", "inv"], [231, 4, 1, "", "parent"], [231, 1, 1, "", "reset_parent"], [231, 1, 1, "", "set_container"], [231, 1, 1, "", "to"], [231, 1, 1, "", "transform_action_spec"], [231, 1, 1, "", "transform_done_spec"], [231, 1, 1, "", "transform_env_batch_size"], [231, 1, 1, "", "transform_env_device"], [231, 1, 1, "", "transform_input_spec"], [231, 1, 1, "", "transform_observation_spec"], [231, 1, 1, "", "transform_output_spec"], [231, 1, 1, "", "transform_reward_spec"], [231, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.TransformedEnv": [[232, 1, 1, "", "add_truncated_keys"], [232, 1, 1, "", "append_transform"], [232, 4, 1, "", "batch_locked"], [232, 4, 1, "", "batch_size"], [232, 1, 1, "", "empty_cache"], [232, 1, 1, "", "eval"], [232, 4, 1, "", "input_spec"], [232, 1, 1, "", "insert_transform"], [232, 1, 1, "", "load_state_dict"], [232, 4, 1, "", "output_spec"], [232, 1, 1, "", "rand_action"], [232, 1, 1, "", "set_missing_tolerance"], [232, 1, 1, "", "set_seed"], [232, 1, 1, "", "state_dict"], [232, 1, 1, "", "to"], [232, 1, 1, "", "train"]], "torchrl.envs.transforms.UnaryTransform": [[233, 1, 1, "", "transform_action_spec"], [233, 1, 1, "", "transform_done_spec"], [233, 1, 1, "", "transform_input_spec"], [233, 1, 1, "", "transform_observation_spec"], [233, 1, 1, "", "transform_output_spec"], [233, 1, 1, "", "transform_reward_spec"], [233, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.UnsqueezeTransform": [[234, 1, 1, "", "transform_action_spec"], [234, 1, 1, "", "transform_observation_spec"], [234, 1, 1, "", "transform_reward_spec"], [234, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.VC1Transform": [[235, 1, 1, "", "forward"], [235, 1, 1, "", "make_noload_model"], [235, 1, 1, "", "to"], [235, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VIPRewardTransform": [[236, 1, 1, "", "forward"], [236, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.VIPTransform": [[237, 1, 1, "", "to"]], "torchrl.envs.transforms.VecGymEnvTransform": [[238, 1, 1, "", "forward"], [238, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VecNorm": [[239, 1, 1, "", "build_td_for_shared_vecnorm"], [239, 1, 1, "", "forward"], [239, 1, 1, "", "freeze"], [239, 1, 1, "", "frozen_copy"], [239, 1, 1, "", "get_extra_state"], [239, 4, 1, "", "loc"], [239, 4, 1, "", "scale"], [239, 1, 1, "", "set_extra_state"], [239, 4, 1, "", "standard_normal"], [239, 1, 1, "", "to_observation_norm"], [239, 1, 1, "", "transform_observation_spec"], [239, 1, 1, "", "unfreeze"]], "torchrl.envs.transforms.rb_transforms": [[241, 0, 1, "", "MultiStepTransform"]], "torchrl.envs.transforms.rb_transforms.MultiStepTransform": [[241, 1, 1, "", "add_module"], [241, 1, 1, "", "apply"], [241, 1, 1, "", "bfloat16"], [241, 1, 1, "", "buffers"], [241, 1, 1, "", "children"], [241, 1, 1, "", "compile"], [241, 4, 1, "", "container"], [241, 1, 1, "", "cpu"], [241, 1, 1, "", "cuda"], [241, 1, 1, "", "double"], [241, 1, 1, "", "eval"], [241, 1, 1, "", "extra_repr"], [241, 1, 1, "", "float"], [241, 1, 1, "", "forward"], [241, 1, 1, "", "get_buffer"], [241, 1, 1, "", "get_extra_state"], [241, 1, 1, "", "get_parameter"], [241, 1, 1, "", "get_submodule"], [241, 1, 1, "", "half"], [241, 1, 1, "", "init"], [241, 1, 1, "", "inv"], [241, 1, 1, "", "ipu"], [241, 1, 1, "", "load_state_dict"], [241, 1, 1, "", "modules"], [241, 1, 1, "", "mtia"], [241, 4, 1, "", "n_steps"], [241, 1, 1, "", "named_buffers"], [241, 1, 1, "", "named_children"], [241, 1, 1, "", "named_modules"], [241, 1, 1, "", "named_parameters"], [241, 1, 1, "", "parameters"], [241, 4, 1, "", "parent"], [241, 1, 1, "", "register_backward_hook"], [241, 1, 1, "", "register_buffer"], [241, 1, 1, "", "register_forward_hook"], [241, 1, 1, "", "register_forward_pre_hook"], [241, 1, 1, "", "register_full_backward_hook"], [241, 1, 1, "", "register_full_backward_pre_hook"], [241, 1, 1, "", "register_load_state_dict_post_hook"], [241, 1, 1, "", "register_load_state_dict_pre_hook"], [241, 1, 1, "", "register_module"], [241, 1, 1, "", "register_parameter"], [241, 1, 1, "", "register_state_dict_post_hook"], [241, 1, 1, "", "register_state_dict_pre_hook"], [241, 1, 1, "", "requires_grad_"], [241, 1, 1, "", "set_extra_state"], [241, 1, 1, "", "set_submodule"], [241, 1, 1, "", "share_memory"], [241, 1, 1, "", "state_dict"], [241, 1, 1, "", "to"], [241, 1, 1, "", "to_empty"], [241, 1, 1, "", "train"], [241, 1, 1, "", "transform_action_spec"], [241, 1, 1, "", "transform_done_spec"], [241, 1, 1, "", "transform_env_batch_size"], [241, 1, 1, "", "transform_env_device"], [241, 1, 1, "", "transform_input_spec"], [241, 1, 1, "", "transform_observation_spec"], [241, 1, 1, "", "transform_output_spec"], [241, 1, 1, "", "transform_reward_spec"], [241, 1, 1, "", "transform_state_spec"], [241, 1, 1, "", "type"], [241, 1, 1, "", "xpu"], [241, 1, 1, "", "zero_grad"]], "torchrl.implement_for": [[242, 1, 1, "", "get_class_that_defined_method"], [242, 1, 1, "", "import_module"], [242, 1, 1, "", "module_set"], [242, 1, 1, "", "reset"]], "torchrl.modules": [[243, 0, 1, "", "AdditiveGaussianModule"], [244, 0, 1, "", "BatchRenorm1d"], [245, 0, 1, "", "CEMPlanner"], [246, 0, 1, "", "ConsistentDropout"], [247, 0, 1, "", "ConsistentDropoutModule"], [248, 0, 1, "", "Conv3dNet"], [249, 0, 1, "", "ConvNet"], [250, 0, 1, "", "DTActor"], [251, 0, 1, "", "DdpgCnnActor"], [252, 0, 1, "", "DdpgCnnQNet"], [253, 0, 1, "", "DdpgMlpActor"], [254, 0, 1, "", "DdpgMlpQNet"], [255, 0, 1, "", "DecisionTransformer"], [256, 0, 1, "", "Delta"], [257, 0, 1, "", "DistributionalDQNnet"], [258, 0, 1, "", "DistributionalQValueHook"], [259, 0, 1, "", "DreamerActor"], [260, 0, 1, "", "DuelingCnnDQNet"], [261, 0, 1, "", "EGreedyModule"], [262, 0, 1, "", "GRU"], [263, 0, 1, "", "GRUCell"], [264, 0, 1, "", "GRUModule"], [265, 0, 1, "", "IndependentNormal"], [266, 0, 1, "", "LSTM"], [267, 0, 1, "", "LSTMCell"], [268, 0, 1, "", "LSTMModule"], [269, 0, 1, "", "MLP"], [270, 0, 1, "", "MPCPlannerBase"], [271, 0, 1, "", "MPPIPlanner"], [272, 0, 1, "", "MaskedCategorical"], [273, 0, 1, "", "MaskedOneHotCategorical"], [274, 0, 1, "", "MultiAgentConvNet"], [275, 0, 1, "", "MultiAgentMLP"], [276, 0, 1, "", "MultiAgentNetBase"], [277, 0, 1, "", "NoisyLazyLinear"], [278, 0, 1, "", "NoisyLinear"], [279, 0, 1, "", "ObsDecoder"], [280, 0, 1, "", "ObsEncoder"], [281, 0, 1, "", "OneHotCategorical"], [282, 0, 1, "", "OneHotOrdinal"], [283, 0, 1, "", "OnlineDTActor"], [284, 0, 1, "", "Ordinal"], [285, 0, 1, "", "OrnsteinUhlenbeckProcessModule"], [286, 0, 1, "", "QMixer"], [287, 0, 1, "", "QValueHook"], [288, 0, 1, "", "RSSMPosterior"], [289, 0, 1, "", "RSSMPrior"], [290, 0, 1, "", "Squeeze2dLayer"], [291, 0, 1, "", "SqueezeLayer"], [292, 0, 1, "", "TanhDelta"], [293, 0, 1, "", "TanhNormal"], [294, 0, 1, "", "TruncatedNormal"], [295, 0, 1, "", "VDNMixer"], [296, 0, 1, "", "VmapModule"], [297, 0, 1, "", "recurrent_mode"], [298, 0, 1, "", "reset_noise"], [299, 0, 1, "", "set_recurrent_mode"]], "torchrl.modules.AdditiveGaussianModule": [[243, 1, 1, "", "forward"], [243, 1, 1, "", "step"]], "torchrl.modules.BatchRenorm1d": [[244, 1, 1, "", "forward"]], "torchrl.modules.CEMPlanner": [[245, 1, 1, "", "planning"]], "torchrl.modules.ConsistentDropout": [[246, 1, 1, "", "forward"]], "torchrl.modules.ConsistentDropoutModule": [[247, 1, 1, "", "forward"], [247, 1, 1, "", "make_tensordict_primer"]], "torchrl.modules.Conv3dNet": [[248, 1, 1, "", "forward"]], "torchrl.modules.ConvNet": [[249, 1, 1, "", "default_atari_dqn"], [249, 1, 1, "", "forward"]], "torchrl.modules.DTActor": [[250, 1, 1, "", "default_config"], [250, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnActor": [[251, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnQNet": [[252, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpActor": [[253, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpQNet": [[254, 1, 1, "", "forward"]], "torchrl.modules.DecisionTransformer": [[255, 0, 1, "", "DTConfig"], [255, 1, 1, "", "forward"]], "torchrl.modules.Delta": [[256, 1, 1, "", "expand"], [256, 1, 1, "", "log_prob"], [256, 4, 1, "", "mean"], [256, 4, 1, "", "mode"], [256, 1, 1, "", "rsample"], [256, 1, 1, "", "sample"]], "torchrl.modules.DistributionalDQNnet": [[257, 1, 1, "", "forward"]], "torchrl.modules.DreamerActor": [[259, 1, 1, "", "forward"]], "torchrl.modules.DuelingCnnDQNet": [[260, 1, 1, "", "forward"]], "torchrl.modules.EGreedyModule": [[261, 1, 1, "", "forward"], [261, 1, 1, "", "step"]], "torchrl.modules.GRU": [[262, 1, 1, "", "forward"]], "torchrl.modules.GRUCell": [[263, 1, 1, "", "forward"]], "torchrl.modules.GRUModule": [[264, 1, 1, "", "forward"], [264, 1, 1, "", "make_cudnn_based"], [264, 1, 1, "", "make_python_based"], [264, 1, 1, "id0", "make_tensordict_primer"], [264, 1, 1, "id1", "set_recurrent_mode"]], "torchrl.modules.IndependentNormal": [[265, 4, 1, "", "mode"]], "torchrl.modules.LSTM": [[266, 1, 1, "", "forward"]], "torchrl.modules.LSTMCell": [[267, 1, 1, "", "forward"]], "torchrl.modules.LSTMModule": [[268, 1, 1, "", "forward"], [268, 1, 1, "", "make_cudnn_based"], [268, 1, 1, "", "make_python_based"], [268, 1, 1, "id0", "make_tensordict_primer"], [268, 1, 1, "id1", "set_recurrent_mode"]], "torchrl.modules.MLP": [[269, 1, 1, "", "forward"]], "torchrl.modules.MPCPlannerBase": [[270, 1, 1, "", "forward"], [270, 1, 1, "", "planning"]], "torchrl.modules.MPPIPlanner": [[271, 1, 1, "", "planning"]], "torchrl.modules.MaskedCategorical": [[272, 1, 1, "", "log_prob"], [272, 1, 1, "", "sample"]], "torchrl.modules.MaskedOneHotCategorical": [[273, 1, 1, "", "log_prob"], [273, 4, 1, "", "mode"], [273, 1, 1, "", "rsample"], [273, 1, 1, "", "sample"]], "torchrl.modules.MultiAgentNetBase": [[276, 1, 1, "", "forward"], [276, 1, 1, "", "from_stateful_net"], [276, 1, 1, "", "get_stateful_net"], [276, 1, 1, "", "reset_parameters"]], "torchrl.modules.NoisyLazyLinear": [[277, 1, 1, "", "initialize_parameters"]], "torchrl.modules.ObsDecoder": [[279, 1, 1, "", "forward"]], "torchrl.modules.ObsEncoder": [[280, 1, 1, "", "forward"]], "torchrl.modules.OneHotCategorical": [[281, 1, 1, "", "entropy"], [281, 1, 1, "", "log_prob"], [281, 4, 1, "", "mode"], [281, 1, 1, "", "rsample"], [281, 1, 1, "", "sample"]], "torchrl.modules.OnlineDTActor": [[283, 1, 1, "", "default_config"], [283, 1, 1, "", "forward"]], "torchrl.modules.OrnsteinUhlenbeckProcessModule": [[285, 1, 1, "", "forward"], [285, 1, 1, "", "step"]], "torchrl.modules.QMixer": [[286, 1, 1, "", "mix"]], "torchrl.modules.RSSMPosterior": [[288, 1, 1, "", "forward"]], "torchrl.modules.RSSMPrior": [[289, 1, 1, "", "forward"]], "torchrl.modules.SqueezeLayer": [[291, 1, 1, "", "forward"]], "torchrl.modules.TanhDelta": [[292, 4, 1, "", "mean"], [292, 4, 1, "", "mode"]], "torchrl.modules.TanhNormal": [[293, 1, 1, "", "get_mode"], [293, 4, 1, "", "mean"], [293, 4, 1, "", "mode"], [293, 4, 1, "", "support"]], "torchrl.modules.TruncatedNormal": [[294, 1, 1, "", "log_prob"], [294, 4, 1, "", "mode"]], "torchrl.modules.VDNMixer": [[295, 1, 1, "", "mix"]], "torchrl.modules.VmapModule": [[296, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module": [[300, 0, 1, "", "Actor"], [301, 0, 1, "", "ActorCriticOperator"], [302, 0, 1, "", "ActorCriticWrapper"], [303, 0, 1, "", "ActorValueOperator"], [304, 0, 1, "", "DecisionTransformerInferenceWrapper"], [305, 0, 1, "", "DistributionalQValueActor"], [306, 0, 1, "", "DistributionalQValueModule"], [307, 0, 1, "", "LMHeadActorValueOperator"], [308, 0, 1, "", "MultiStepActorWrapper"], [309, 0, 1, "", "ProbabilisticActor"], [310, 0, 1, "", "QValueActor"], [311, 0, 1, "", "QValueModule"], [312, 0, 1, "", "SafeModule"], [313, 0, 1, "", "SafeProbabilisticModule"], [314, 0, 1, "", "SafeProbabilisticTensorDictSequential"], [315, 0, 1, "", "SafeSequential"], [316, 0, 1, "", "TanhModule"], [317, 0, 1, "", "ValueOperator"], [318, 0, 1, "", "WorldModelWrapper"]], "torchrl.modules.tensordict_module.ActorCriticOperator": [[301, 1, 1, "", "get_critic_operator"], [301, 1, 1, "", "get_policy_head"], [301, 1, 1, "", "get_value_head"], [301, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorCriticWrapper": [[302, 1, 1, "", "get_policy_head"], [302, 1, 1, "", "get_policy_operator"], [302, 1, 1, "", "get_value_head"], [302, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorValueOperator": [[303, 1, 1, "", "get_policy_head"], [303, 1, 1, "", "get_policy_operator"], [303, 1, 1, "", "get_value_head"], [303, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper": [[304, 1, 1, "", "forward"], [304, 1, 1, "", "mask_context"], [304, 1, 1, "", "set_tensor_keys"]], "torchrl.modules.tensordict_module.DistributionalQValueModule": [[306, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.MultiStepActorWrapper": [[308, 1, 1, "", "forward"], [308, 4, 1, "", "init_key"]], "torchrl.modules.tensordict_module.QValueModule": [[311, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.SafeModule": [[312, 1, 1, "", "random"], [312, 1, 1, "", "random_sample"], [312, 1, 1, "", "to"]], "torchrl.modules.tensordict_module.SafeProbabilisticModule": [[313, 1, 1, "", "random"], [313, 1, 1, "", "random_sample"]], "torchrl.modules.tensordict_module.TanhModule": [[316, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.WorldModelWrapper": [[318, 1, 1, "", "get_reward_operator"], [318, 1, 1, "", "get_transition_model_operator"]], "torchrl.modules.utils": [[319, 0, 1, "", "biased_softplus"], [320, 0, 1, "", "get_primers_from_module"], [321, 0, 1, "", "inv_softplus"], [322, 0, 1, "", "mappings"]], "torchrl.modules.utils.biased_softplus": [[319, 1, 1, "", "forward"]], "torchrl.objectives": [[323, 0, 1, "", "A2CLoss"], [324, 0, 1, "", "CQLLoss"], [325, 0, 1, "", "ClipPPOLoss"], [326, 0, 1, "", "CrossQLoss"], [327, 0, 1, "", "DDPGLoss"], [328, 0, 1, "", "DQNLoss"], [329, 0, 1, "", "DTLoss"], [330, 0, 1, "", "DiscreteCQLLoss"], [331, 0, 1, "", "DiscreteIQLLoss"], [332, 0, 1, "", "DiscreteSACLoss"], [333, 0, 1, "", "DistributionalDQNLoss"], [334, 0, 1, "", "DreamerActorLoss"], [335, 0, 1, "", "DreamerModelLoss"], [336, 0, 1, "", "DreamerValueLoss"], [337, 0, 1, "", "GAILLoss"], [338, 0, 1, "", "HardUpdate"], [339, 0, 1, "", "IQLLoss"], [340, 0, 1, "", "KLPENPPOLoss"], [341, 0, 1, "", "LossModule"], [342, 0, 1, "", "OnlineDTLoss"], [343, 0, 1, "", "PPOLoss"], [344, 0, 1, "", "REDQLoss"], [345, 0, 1, "", "ReinforceLoss"], [346, 0, 1, "", "SACLoss"], [347, 0, 1, "", "SoftUpdate"], [348, 0, 1, "", "TD3BCLoss"], [349, 0, 1, "", "TD3Loss"], [350, 0, 1, "", "ValueEstimators"], [351, 0, 1, "", "default_value_kwargs"], [352, 0, 1, "", "distance_loss"], [353, 0, 1, "", "group_optimizers"], [354, 0, 1, "", "hold_out_net"], [355, 0, 1, "", "hold_out_params"], [357, 0, 1, "", "next_state_value"]], "torchrl.objectives.A2CLoss": [[323, 3, 1, "", "default_keys"], [323, 1, 1, "", "forward"], [323, 4, 1, "", "functional"], [323, 1, 1, "", "loss_critic"], [323, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.CQLLoss": [[324, 3, 1, "", "default_keys"], [324, 1, 1, "", "forward"], [324, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ClipPPOLoss": [[325, 1, 1, "", "forward"]], "torchrl.objectives.CrossQLoss": [[326, 1, 1, "", "actor_loss"], [326, 1, 1, "", "alpha_loss"], [326, 3, 1, "", "default_keys"], [326, 1, 1, "", "forward"], [326, 1, 1, "", "load_state_dict"], [326, 1, 1, "", "make_value_estimator"], [326, 1, 1, "", "maybe_init_target_entropy"], [326, 1, 1, "", "qvalue_loss"], [326, 1, 1, "", "set_keys"], [326, 1, 1, "", "state_dict"], [326, 4, 1, "", "target_entropy_buffer"]], "torchrl.objectives.DDPGLoss": [[327, 3, 1, "", "default_keys"], [327, 1, 1, "", "forward"], [327, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DQNLoss": [[328, 3, 1, "", "default_keys"], [328, 1, 1, "", "forward"], [328, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DTLoss": [[329, 3, 1, "", "default_keys"], [329, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteCQLLoss": [[330, 3, 1, "", "default_keys"], [330, 1, 1, "", "forward"], [330, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DiscreteIQLLoss": [[331, 3, 1, "", "default_keys"], [331, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteSACLoss": [[332, 3, 1, "", "default_keys"], [332, 1, 1, "", "forward"], [332, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DistributionalDQNLoss": [[333, 3, 1, "", "default_keys"], [333, 1, 1, "", "forward"], [333, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerActorLoss": [[334, 3, 1, "", "default_keys"], [334, 1, 1, "", "forward"], [334, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerModelLoss": [[335, 3, 1, "", "default_keys"], [335, 1, 1, "", "forward"]], "torchrl.objectives.DreamerValueLoss": [[336, 3, 1, "", "default_keys"], [336, 1, 1, "", "forward"]], "torchrl.objectives.GAILLoss": [[337, 3, 1, "", "default_keys"], [337, 1, 1, "", "forward"]], "torchrl.objectives.IQLLoss": [[339, 3, 1, "", "default_keys"], [339, 1, 1, "", "forward"], [339, 1, 1, "", "loss_value_diff"], [339, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.KLPENPPOLoss": [[340, 1, 1, "", "forward"]], "torchrl.objectives.LossModule": [[341, 1, 1, "", "convert_to_functional"], [341, 1, 1, "", "forward"], [341, 1, 1, "", "from_stateful_net"], [341, 4, 1, "", "functional"], [341, 1, 1, "", "get_stateful_net"], [341, 1, 1, "", "make_value_estimator"], [341, 1, 1, "", "named_parameters"], [341, 1, 1, "", "parameters"], [341, 1, 1, "", "reset_parameters_recursive"], [341, 1, 1, "", "set_keys"], [341, 4, 1, "", "value_estimator"], [341, 4, 1, "", "vmap_randomness"]], "torchrl.objectives.OnlineDTLoss": [[342, 3, 1, "", "default_keys"], [342, 1, 1, "", "forward"]], "torchrl.objectives.PPOLoss": [[343, 3, 1, "", "default_keys"], [343, 1, 1, "", "forward"], [343, 4, 1, "", "functional"], [343, 1, 1, "", "loss_critic"], [343, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.REDQLoss": [[344, 3, 1, "", "default_keys"], [344, 1, 1, "", "forward"], [344, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ReinforceLoss": [[345, 3, 1, "", "default_keys"], [345, 1, 1, "", "forward"], [345, 4, 1, "", "functional"], [345, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.SACLoss": [[346, 3, 1, "", "default_keys"], [346, 1, 1, "", "forward"], [346, 1, 1, "", "load_state_dict"], [346, 1, 1, "", "make_value_estimator"], [346, 1, 1, "", "state_dict"]], "torchrl.objectives.TD3BCLoss": [[348, 1, 1, "", "actor_loss"], [348, 3, 1, "", "default_keys"], [348, 1, 1, "", "forward"], [348, 1, 1, "", "make_value_estimator"], [348, 1, 1, "", "qvalue_loss"]], "torchrl.objectives.TD3Loss": [[349, 3, 1, "", "default_keys"], [349, 1, 1, "", "forward"], [349, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.multiagent": [[356, 0, 1, "", "QMixerLoss"]], "torchrl.objectives.multiagent.QMixerLoss": [[356, 3, 1, "", "default_keys"], [356, 1, 1, "", "forward"], [356, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.value": [[358, 0, 1, "", "GAE"], [359, 0, 1, "", "TD0Estimator"], [360, 0, 1, "", "TD1Estimator"], [361, 0, 1, "", "TDLambdaEstimator"], [362, 0, 1, "", "ValueEstimatorBase"]], "torchrl.objectives.value.GAE": [[358, 1, 1, "", "forward"], [358, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD0Estimator": [[359, 1, 1, "", "forward"], [359, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD1Estimator": [[360, 1, 1, "", "forward"], [360, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TDLambdaEstimator": [[361, 1, 1, "", "forward"], [361, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.ValueEstimatorBase": [[362, 3, 1, "", "default_keys"], [362, 1, 1, "", "forward"], [362, 1, 1, "", "set_keys"], [362, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.functional": [[363, 0, 1, "", "generalized_advantage_estimate"], [364, 0, 1, "", "reward2go"], [365, 0, 1, "", "td0_advantage_estimate"], [366, 0, 1, "", "td0_return_estimate"], [367, 0, 1, "", "td1_advantage_estimate"], [368, 0, 1, "", "td1_return_estimate"], [369, 0, 1, "", "td_lambda_advantage_estimate"], [370, 0, 1, "", "td_lambda_return_estimate"], [371, 0, 1, "", "vec_generalized_advantage_estimate"], [372, 0, 1, "", "vec_td1_advantage_estimate"], [373, 0, 1, "", "vec_td1_return_estimate"], [374, 0, 1, "", "vec_td_lambda_advantage_estimate"], [375, 0, 1, "", "vec_td_lambda_return_estimate"]], "torchrl.record": [[376, 2, 1, "", "PixelRenderTransform"], [377, 2, 1, "", "TensorDictRecorder"], [378, 2, 1, "", "VideoRecorder"]], "torchrl.record.loggers": [[379, 2, 1, "", "Logger"], [381, 2, 1, "", "generate_exp_name"], [382, 2, 1, "", "get_logger"]], "torchrl.record.loggers.csv": [[380, 2, 1, "", "CSVLogger"]], "torchrl.record.loggers.mlflow": [[383, 2, 1, "", "MLFlowLogger"]], "torchrl.record.loggers.tensorboard": [[384, 2, 1, "", "TensorboardLogger"]], "torchrl.record.loggers.wandb": [[385, 2, 1, "", "WandbLogger"]], "torchrl.trainers": [[387, 0, 1, "", "BatchSubSampler"], [388, 0, 1, "", "ClearCudaCache"], [389, 0, 1, "", "CountFramesLog"], [390, 0, 1, "", "LogScalar"], [391, 0, 1, "", "LogValidationReward"], [392, 0, 1, "", "OptimizerHook"], [393, 0, 1, "", "ReplayBufferTrainer"], [394, 0, 1, "", "RewardNormalizer"], [395, 0, 1, "", "SelectKeys"], [396, 0, 1, "", "Trainer"], [397, 0, 1, "", "TrainerHookBase"], [398, 0, 1, "", "UpdateWeights"]], "torchrl.trainers.BatchSubSampler": [[387, 1, 1, "", "register"]], "torchrl.trainers.ClearCudaCache": [[388, 1, 1, "", "register"]], "torchrl.trainers.CountFramesLog": [[389, 1, 1, "", "register"]], "torchrl.trainers.LogScalar": [[390, 1, 1, "", "register"]], "torchrl.trainers.LogValidationReward": [[391, 1, 1, "", "register"]], "torchrl.trainers.OptimizerHook": [[392, 1, 1, "", "register"]], "torchrl.trainers.ReplayBufferTrainer": [[393, 1, 1, "", "register"]], "torchrl.trainers.RewardNormalizer": [[394, 1, 1, "", "register"]], "torchrl.trainers.SelectKeys": [[395, 1, 1, "", "register"]], "torchrl.trainers.Trainer": [[396, 1, 1, "", "load_from_file"]], "torchrl.trainers.TrainerHookBase": [[397, 1, 1, "", "register"]], "torchrl.trainers.UpdateWeights": [[398, 1, 1, "", "register"]], "torchrl.trainers.helpers": [[399, 2, 1, "", "correct_for_frame_skip"], [400, 2, 1, "", "get_stats_random_rollout"], [401, 2, 1, "", "make_collector_offpolicy"], [402, 2, 1, "", "make_collector_onpolicy"], [403, 2, 1, "", "make_dqn_loss"], [404, 2, 1, "", "make_replay_buffer"], [405, 2, 1, "", "make_target_updater"], [406, 2, 1, "", "make_trainer"], [407, 2, 1, "", "parallel_env_constructor"], [408, 2, 1, "", "sync_async_collector"], [409, 2, 1, "", "sync_sync_collector"], [410, 2, 1, "", "transformed_env_constructor"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:attribute", "4": "py:property"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "property", "Python property"]}, "titleterms": {"torchrl": [0, 1, 2, 3, 6, 9, 414, 415, 416, 417, 419, 420, 421, 423, 425, 432, 433, 434, 438, 439], "instal": [0, 6, 7, 438], "get": [0, 424, 425, 426, 427, 428, 429], "start": [0, 424, 425, 426, 427, 428, 429], "tutori": [0, 421, 432, 433], "basic": [0, 436], "intermedi": [0, 8], "advanc": 0, "refer": [0, 412], "knowledg": [0, 413], "base": [0, 2, 7, 413, 423], "indic": 0, "tabl": 0, "collector": [1, 419, 420, 421, 422, 427, 429, 432, 433, 438], "packag": [1, 2, 3, 414, 415, 416, 417], "batch": [1, 3, 419, 434, 436], "size": [1, 3, 419, 436], "polici": [1, 2, 4, 415, 419, 421, 422, 423, 425, 429, 431, 432, 433, 434], "copi": 1, "replai": [1, 2, 3, 419, 420, 421, 422, 427, 429, 432, 433, 436, 438], "buffer": [1, 2, 3, 419, 420, 421, 422, 427, 429, 432, 433, 436, 438], "interoper": 1, "singl": [1, 4], "node": 1, "data": [1, 2, 4, 419, 420, 421, 427, 429, 432, 433, 438], "distribut": [1, 414], "helper": [1, 3], "function": [1, 4, 415, 420, 421, 426, 432, 433, 438], "compos": [2, 186], "support": 2, "type": 2, "choos": 2, "storag": [2, 109, 419, 427, 436], "sampl": [2, 436], "index": 2, "share": 2, "across": 2, "process": 2, "store": [2, 420, 436], "trajectori": [2, 436], "checkpoint": [2, 416], "episod": [2, 4], "format": 2, "ted": [2, 424], "The": [2, 419], "rational": 2, "behind": 2, "structur": [2, 436], "A": [2, 420, 436], "note": 2, "singleton": [2, 4], "dimens": 2, "flatten": 2, "reduc": 2, "memori": 2, "consumpt": 2, "dimension": [2, 4], "tensordict": [2, 414, 436, 438], "special": [2, 425, 438], "case": 2, "footnot": 2, "multi": [2, 3, 414, 415, 431, 432, 433], "agent": [2, 3, 4, 414, 415, 432, 433], "present": 2, "rnn": 2, "transform": [2, 3, 231, 419, 421, 424, 432, 433, 434, 436, 438, 439], "step": [2, 3, 419, 421, 424, 427, 432, 433, 436, 439], "what": [2, 5], "about": 2, "requir": 2, "dataset": 2, "tensorspec": [2, 77], "numer": 2, "subclass": [2, 3], "categor": [2, 30], "tree": [2, 79], "forest": 2, "tensordictmap": [2, 72], "mctsforest": [2, 45], "reinforc": [2, 415, 421, 432, 433], "learn": [2, 4, 414, 421, 432, 433], "from": [2, 6, 7], "human": 2, "feedback": 2, "rlhf": 2, "util": [2, 414, 415, 416, 432], "env": [3, 434, 438, 439], "spec": [3, 434, 439], "lock": 3, "method": [3, 419], "partial": 3, "reset": [3, 434, 439], "environ": [3, 4, 6, 7, 419, 420, 421, 422, 424, 429, 431, 432, 433, 434, 438, 439], "vector": [3, 438], "custom": [3, 11, 434, 436], "nativ": 3, "auto": 3, "dynam": [3, 4, 436], "forward": [3, 4, 419], "invers": 3, "understand": 3, "kei": 3, "tensor": [3, 436], "expos": 3, "outsid": 3, "world": 3, "design": [3, 429], "your": [3, 4, 6, 419, 423, 429, 434], "own": [3, 429], "tip": 3, "us": [3, 4, 6, 9, 415, 422, 435, 436, 438], "clone": [3, 7], "mask": 3, "action": [3, 4, 415, 422, 434], "record": [3, 416, 419, 428], "video": [3, 11, 428], "domain": [3, 414], "specif": [3, 414, 431], "librari": [3, 438], "thing": [4, 419, 434], "consid": 4, "when": [4, 7], "debug": 4, "rl": [4, 9, 424, 426, 438], "gener": [4, 11, 414], "have": 4, "you": 4, "valid": 4, "algorithm": [4, 414], "implement": 4, "few": 4, "small": 4, "toi": 4, "problem": 4, "known": 4, "optim": [4, 419, 420, 426, 429], "return": [4, 415], "e": 4, "g": 4, "gridworld": 4, "mountaincar": 4, "visual": 4, "Be": 4, "veri": 4, "care": 4, "ani": 4, "augment": 4, "doe": 4, "entropi": 4, "converg": 4, "too": [4, 8], "quickli": 4, "slowli": 4, "chang": [4, 438], "drastic": 4, "reward": 4, "beyond": 4, "go": 4, "up": [4, 6], "Is": 4, "favor": 4, "compon": 4, "i": 4, "veloc": 4, "vs": 4, "l2": 4, "magnitud": 4, "task": [4, 431], "horizon": 4, "extrem": 4, "long": 4, "ar": 4, "normal": [4, 419, 420, 421], "standard": 4, "explor": [4, 414, 419, 420, 425], "valu": [4, 414, 415, 419, 421, 422, 425], "loss": [4, 419, 420, 421, 422, 429, 432, 433], "earli": 4, "train": [4, 8, 415, 419, 421, 422, 423, 426, 429, 432, 433, 434], "roughli": 4, "uniformli": 4, "random": [4, 415, 432, 433], "intrins": 4, "decai": 4, "progress": 4, "remain": 4, "constant": [4, 420], "increas": 4, "an": [4, 421, 422, 424, 434], "can": 4, "low": 4, "model": [4, 414, 419, 420, 422, 423, 426, 435, 438], "also": 4, "offlin": 4, "observ": [4, 419], "space": 4, "effect": [4, 434], "dramat": 4, "dure": [4, 7], "high": 4, "work": [5, 6, 7, 423], "gym": [5, 438, 439], "openai": 5, "version": [5, 7, 10], "habitat": 6, "lab": 6, "set": [6, 11], "pip": [6, 7], "common": [6, 7, 8], "issu": [6, 7, 10], "mujoco": 7, "prerequisit": [7, 419], "render": [7, 11, 429, 432, 433, 439], "all": 7, "new": 7, "bindindg": 7, "2": 7, "1": 7, "old": 7, "bind": 7, "py": 7, "option": 7, "repo": [7, 9], "import": [7, 419], "pytorch": [8, 9, 10, 423], "error": 8, "solut": 8, "gradient": 8, "relat": 8, "newcom": 8, "my": 8, "slow": 8, "bug": 8, "resourc": 9, "paper": 9, "document": 9, "functorch": 9, "blog": 9, "websit": 9, "educ": 9, "forum": 9, "how": 10, "reproduc": [10, 434], "workaround": 10, "customis": 11, "tweak": 11, "principl": 11, "exampl": [11, 420, 436], "auto_unwrap_transformed_env": 12, "datacollectorbas": 13, "multisyncdatacollector": 14, "multiasyncdatacollector": 15, "syncdatacollector": 16, "asyncdatacollector": 17, "distributeddatacollector": 18, "distributedsyncdatacollector": 19, "rpcdatacollector": 20, "raycollector": 21, "submitit_delayed_launch": 22, "split_trajectori": 23, "adaptiveklcontrol": 24, "binari": [25, 423], "binarydiscretetensorspec": 26, "binarytodecim": 27, "bound": 28, "boundedtensorspec": 29, "composit": 31, "compositespec": 32, "constantklcontrol": 33, "densifyreward": 34, "discretetensorspec": 35, "flat2t": 36, "h5combin": 37, "h5split": 38, "hashtoint": 39, "llmdata": 40, "llminput": 41, "llmoutput": 42, "lazystackedcompositespec": 43, "lazystackedtensorspec": 44, "multicategor": 46, "multidiscretetensorspec": 47, "multionehot": 48, "multionehotdiscretetensorspec": 49, "multistep": 50, "nested2t": 51, "nontensor": 52, "nontensorspec": 53, "onehot": 54, "onehotdiscretetensorspec": 55, "pairwisedataset": 56, "prioritizedreplaybuff": 57, "promptdata": 58, "prompttensordicttoken": 59, "querymodul": 60, "randomprojectionhash": 61, "rayreplaybuff": 62, "remotetensordictreplaybuff": 63, "replaybuff": 64, "rewarddata": 65, "rolloutfrommodel": 66, "siphash": 67, "stack": [68, 222], "stackedcomposit": 69, "ted2flat": 70, "ted2nest": 71, "tensordictprioritizedreplaybuff": 73, "tensordictreplaybuff": 74, "tensordicttoken": 75, "tensormap": 76, "tokenizeddatasetload": 78, "unbound": 80, "unboundedcontinu": 81, "unboundedcontinuoustensorspec": 82, "unboundeddiscret": 83, "unboundeddiscretetensorspec": 84, "check_no_exclusive_kei": 85, "consolidate_spec": 86, "contains_lazy_spec": 87, "create_infinite_iter": 88, "get_dataload": 89, "flatstoragecheckpoint": 90, "h5storagecheckpoint": 91, "immutabledatasetwrit": 92, "lazymemmapstorag": 93, "lazystackstorag": 94, "lazytensorstorag": 95, "liststorag": 96, "liststoragecheckpoint": 97, "nestedstoragecheckpoint": 98, "prioritizedsampl": 99, "prioritizedslicesampl": 100, "randomsampl": 101, "replaybufferensembl": 102, "roundrobinwrit": 103, "sampler": 104, "samplerensembl": 105, "samplerwithoutreplac": 106, "slicesampl": 107, "slicesamplerwithoutreplac": 108, "storagecheckpointerbas": 110, "storageensembl": 111, "storageensemblecheckpoint": 112, "tensordictmaxvaluewrit": 113, "tensordictroundrobinwrit": 114, "tensorstorag": 115, "tensorstoragecheckpoint": 116, "writer": 117, "writerensembl": 118, "braxenv": 119, "braxwrapp": 120, "chessenv": 121, "dmcontrolenv": 122, "dmcontrolwrapp": 123, "envbas": [124, 434], "envcreat": 125, "envmetadata": 126, "gymenv": 127, "gymlikeenv": 128, "gymwrapp": 129, "habitatenv": 130, "isaacgymenv": 131, "isaacgymwrapp": 132, "jumanjienv": 133, "jumanjiwrapp": 134, "llmenv": 135, "llmhashingenv": 136, "mogymenv": 137, "mogymwrapp": 138, "marlgroupmaptyp": 139, "meltingpotenv": 140, "meltingpotwrapp": 141, "modelbasedenvbas": 142, "multithreadedenv": 143, "multithreadedenvwrapp": 144, "openmlenv": 145, "openspielenv": 146, "openspielwrapp": 147, "parallelenv": 148, "pendulumenv": 149, "pettingzooenv": 150, "pettingzoowrapp": 151, "randompolici": 152, "robohiveenv": 153, "smacv2env": 154, "smacv2wrapp": 155, "serialenv": 156, "tictactoeenv": 157, "unitymlagentsenv": 158, "unitymlagentswrapp": 159, "vmasenv": 160, "vmaswrapp": 161, "check_env_spec": 162, "check_marl_group": 163, "exploration_typ": 164, "get_available_librari": 165, "gym_backend": 166, "make_composite_from_td": 167, "dreamerdecod": 168, "dreamerenv": 169, "register_gym_spec_convers": 170, "set_exploration_typ": 171, "set_gym_backend": 172, "step_mdp": 173, "terminated_or_trunc": 174, "actiondiscret": 175, "actionmask": 176, "autoresetenv": 177, "autoresettransform": 178, "batchsizetransform": 179, "binarizereward": 180, "burnintransform": 181, "catfram": [182, 436], "cattensor": 183, "centercrop": 184, "cliptransform": 185, "conditionalskip": 187, "crop": 188, "dtypecasttransform": 189, "dataloadingprim": 190, "devicecasttransform": 191, "discreteactionproject": 192, "doubletofloat": 193, "endoflifetransform": 194, "excludetransform": 195, "finitetensordictcheck": 196, "flattenobserv": 197, "frameskiptransform": 198, "grayscal": 199, "hash": 200, "inittrack": 201, "klrewardtransform": 202, "linearisereward": 203, "multiact": 204, "noopresetenv": 205, "observationnorm": 206, "observationtransform": 207, "permutetransform": 208, "pinmemorytransform": 209, "r3mtransform": 210, "randomcroptensordict": 211, "removeemptyspec": 212, "renametransform": 213, "resiz": 214, "reward2gotransform": 215, "rewardclip": 216, "rewardsc": 217, "rewardsum": 218, "selecttransform": 219, "signtransform": 220, "squeezetransform": 221, "stepcount": 223, "targetreturn": 224, "tensordictprim": 225, "timemaxpool": 226, "timer": 227, "totensorimag": 228, "token": 229, "trajcount": 230, "transformedenv": 232, "unarytransform": 233, "unsqueezetransform": 234, "vc1transform": 235, "viprewardtransform": 236, "viptransform": 237, "vecgymenvtransform": 238, "vecnorm": [239, 439], "gsdenois": 240, "multisteptransform": 241, "implement_for": 242, "additivegaussianmodul": 243, "batchrenorm1d": 244, "cemplann": 245, "consistentdropout": 246, "consistentdropoutmodul": 247, "conv3dnet": 248, "convnet": 249, "dtactor": 250, "ddpgcnnactor": 251, "ddpgcnnqnet": 252, "ddpgmlpactor": 253, "ddpgmlpqnet": 254, "decisiontransform": 255, "delta": 256, "distributionaldqnnet": 257, "distributionalqvaluehook": 258, "dreameractor": 259, "duelingcnndqnet": 260, "egreedymodul": 261, "gru": 262, "grucel": 263, "grumodul": 264, "independentnorm": 265, "lstm": [266, 422], "lstmcell": 267, "lstmmodul": 268, "mlp": [269, 422], "mpcplannerbas": 270, "mppiplann": 271, "maskedcategor": 272, "maskedonehotcategor": 273, "multiagentconvnet": 274, "multiagentmlp": 275, "multiagentnetbas": 276, "noisylazylinear": 277, "noisylinear": 278, "obsdecod": 279, "obsencod": 280, "onehotcategor": 281, "onehotordin": 282, "onlinedtactor": 283, "ordin": 284, "ornsteinuhlenbeckprocessmodul": 285, "qmixer": [286, 415], "qvaluehook": 287, "rssmposterior": 288, "rssmprior": 289, "squeeze2dlay": 290, "squeezelay": 291, "tanhdelta": 292, "tanhnorm": 293, "truncatednorm": 294, "vdnmixer": 295, "vmapmodul": 296, "recurrent_mod": 297, "reset_nois": 298, "set_recurrent_mod": 299, "actor": [300, 414, 419, 425], "actorcriticoper": 301, "actorcriticwrapp": 302, "actorvalueoper": 303, "decisiontransformerinferencewrapp": 304, "distributionalqvalueactor": 305, "distributionalqvaluemodul": 306, "lmheadactorvalueoper": 307, "multistepactorwrapp": 308, "probabilisticactor": 309, "qvalueactor": [310, 414], "qvaluemodul": 311, "safemodul": [312, 414], "safeprobabilisticmodul": 313, "safeprobabilistictensordictsequenti": 314, "safesequenti": 315, "tanhmodul": 316, "valueoper": 317, "worldmodelwrapp": 318, "biased_softplu": 319, "get_primers_from_modul": 320, "inv_softplu": 321, "map": [322, 432], "a2closs": 323, "cqlloss": 324, "clipppoloss": 325, "crossqloss": 326, "ddpgloss": 327, "dqnloss": 328, "dtloss": 329, "discretecqlloss": 330, "discreteiqlloss": 331, "discretesacloss": 332, "distributionaldqnloss": 333, "dreameractorloss": 334, "dreamermodelloss": 335, "dreamervalueloss": 336, "gailloss": 337, "hardupd": 338, "iqlloss": 339, "klpenppoloss": 340, "lossmodul": [341, 419, 426], "onlinedtloss": 342, "ppoloss": 343, "redqloss": 344, "reinforceloss": 345, "sacloss": 346, "softupd": 347, "td3bcloss": 348, "td3loss": 349, "valueestim": 350, "default_value_kwarg": 351, "distance_loss": 352, "group_optim": 353, "hold_out_net": 354, "hold_out_param": 355, "qmixerloss": 356, "next_state_valu": 357, "gae": 358, "td0estim": 359, "td1estim": 360, "tdlambdaestim": 361, "valueestimatorbas": 362, "generalized_advantage_estim": 363, "reward2go": 364, "td0_advantage_estim": 365, "td0_return_estim": 366, "td1_advantage_estim": 367, "td1_return_estim": 368, "td_lambda_advantage_estim": 369, "td_lambda_return_estim": 370, "vec_generalized_advantage_estim": 371, "vec_td1_advantage_estim": 372, "vec_td1_return_estim": 373, "vec_td_lambda_advantage_estim": 374, "vec_td_lambda_return_estim": 375, "pixelrendertransform": 376, "tensordictrecord": 377, "videorecord": 378, "logger": [379, 416, 428, 429], "csvlogger": 380, "generate_exp_nam": 381, "get_logg": 382, "mlflowlogg": 383, "tensorboardlogg": 384, "wandblogg": 385, "set_auto_unwrap_transformed_env": 386, "batchsubsampl": 387, "clearcudacach": 388, "countframeslog": 389, "logscalar": 390, "logvalidationreward": 391, "optimizerhook": 392, "replaybuffertrain": 393, "rewardnorm": 394, "selectkei": 395, "trainer": [396, 416, 420], "trainerhookbas": 397, "updateweight": 398, "correct_for_frame_skip": 399, "get_stats_random_rollout": 400, "make_collector_offpolici": 401, "make_collector_onpolici": 402, "make_dqn_loss": 403, "make_replay_buff": 404, "make_target_updat": 405, "make_train": 406, "parallel_env_constructor": 407, "sync_async_collector": 408, "sync_sync_collector": 409, "transformed_env_constructor": 410, "readm": [411, 430], "tuto": [411, 430], "api": 412, "contribut": [413, 438], "content": 413, "modul": [414, 419, 422, 423, 425, 429, 438], "tensordictmodul": [414, 423, 425, 438], "wrapper": [414, 425], "probabilist": [414, 425], "q": [414, 420, 422, 425], "oper": 414, "join": 414, "hook": [414, 416, 420], "regular": 414, "planner": 414, "object": [415, 419, 426, 438], "torch": 415, "vmap": [415, 438], "dqn": [415, 420, 422], "ddpg": [415, 419, 432], "sac": 415, "redq": 415, "crossq": 415, "iql": 415, "cql": 415, "gail": 415, "dt": 415, "td3": 415, "bc": 415, "ppo": [415, 421, 433], "head": 415, "a2c": 415, "dreamer": 415, "builder": 416, "_util": 417, "comput": [418, 420, 434, 437], "time": [418, 419, 437], "code": [419, 434], "overview": [419, 422], "setup": [419, 422], "__init__": 419, "estim": 419, "put": 419, "togeth": [419, 434], "call": 419, "parallel": [419, 431, 439], "execut": [419, 431, 434], "stat": 419, "build": [419, 420, 429, 436], "evalu": 419, "construct": 419, "target": [419, 420, 426], "network": [419, 420, 421, 422, 425, 432, 433], "updat": 419, "experi": [419, 434], "result": [419, 421, 432, 433], "conclus": [419, 420, 421, 422, 423, 432, 433, 434, 436], "next": [419, 421, 424, 427, 432, 433, 436], "deep": 420, "collect": [420, 421, 427], "paramet": [420, 421, 426], "hyperparamet": [420, 421, 432, 433], "regist": 420, "possibl": 420, "improv": 420, "defin": [421, 432, 433], "loop": [421, 422, 423, 429, 432, 433, 434], "recurr": [422, 423], "convolut": 422, "select": 422, "further": [422, 426], "read": 422, "export": 423, "introduct": [423, 438], "fast": 423, "recap": 423, "simpl": [423, 434], "stochast": 423, "aotinductor": 423, "free": 423, "c": 423, "onnx": 423, "run": [423, 424, 439], "rollout": [423, 424, 431, 432, 433, 434, 439], "creat": 424, "s": [425, 426], "output": 426, "consider": 426, "log": 428, "first": 429, "divers": 431, "competit": 432, "group": 432, "critic": [432, 433], "pendulum": 434, "write": 434, "_step": 434, "simul": 434, "_reset": 434, "metadata": 434, "_spec": 434, "shape": 434, "seed": [434, 439], "wrap": 434, "class": [434, 438], "test": 434, "our": 434, "pretrain": 435, "vanilla": 436, "integr": 436, "tensorclass": 436, "other": 436, "pytre": 436, "iter": 436, "over": 436, "fix": 436, "priorit": 436, "save": 436, "raw": 436, "imag": 436, "more": 436, "complex": 436, "config": 438, "sequenc": 438, "program": 438, "ensembl": 438, "meta": 438, "sync": 438, "multiprocess": 438, "async": 438, "frame_skip": 439, "deepmind": 439, "control": 439, "devic": 439, "close": 439, "access": 439, "attribut": 439, "kwarg": 439}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 56}})