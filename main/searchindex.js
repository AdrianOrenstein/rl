Search.setIndex({"docnames": ["index", "reference/collectors", "reference/data", "reference/envs", "reference/generated/knowledge_base/DEBUGGING_RL", "reference/generated/knowledge_base/GYM", "reference/generated/knowledge_base/HABITAT", "reference/generated/knowledge_base/MUJOCO_INSTALLATION", "reference/generated/knowledge_base/PRO-TIPS", "reference/generated/knowledge_base/RESOURCES", "reference/generated/knowledge_base/VERSIONING_ISSUES", "reference/generated/knowledge_base/VIDEO_CUSTOMISATION", "reference/generated/torchrl.auto_unwrap_transformed_env", "reference/generated/torchrl.collectors.DataCollectorBase", "reference/generated/torchrl.collectors.MultiSyncDataCollector", "reference/generated/torchrl.collectors.MultiaSyncDataCollector", "reference/generated/torchrl.collectors.SyncDataCollector", "reference/generated/torchrl.collectors.WeightUpdateReceiverBase", "reference/generated/torchrl.collectors.WeightUpdateSenderBase", "reference/generated/torchrl.collectors.aSyncDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector", "reference/generated/torchrl.collectors.distributed.RPCDataCollector", "reference/generated/torchrl.collectors.distributed.RayCollector", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher", "reference/generated/torchrl.collectors.utils.split_trajectories", "reference/generated/torchrl.data.AdaptiveKLController", "reference/generated/torchrl.data.Binary", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec", "reference/generated/torchrl.data.BinaryToDecimal", "reference/generated/torchrl.data.Bounded", "reference/generated/torchrl.data.BoundedTensorSpec", "reference/generated/torchrl.data.Categorical", "reference/generated/torchrl.data.Composite", "reference/generated/torchrl.data.CompositeSpec", "reference/generated/torchrl.data.ConstantKLController", "reference/generated/torchrl.data.DensifyReward", "reference/generated/torchrl.data.DiscreteTensorSpec", "reference/generated/torchrl.data.Flat2TED", "reference/generated/torchrl.data.H5Combine", "reference/generated/torchrl.data.H5Split", "reference/generated/torchrl.data.HashToInt", "reference/generated/torchrl.data.LazyStackedCompositeSpec", "reference/generated/torchrl.data.LazyStackedTensorSpec", "reference/generated/torchrl.data.MCTSForest", "reference/generated/torchrl.data.MultiCategorical", "reference/generated/torchrl.data.MultiDiscreteTensorSpec", "reference/generated/torchrl.data.MultiOneHot", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec", "reference/generated/torchrl.data.MultiStep", "reference/generated/torchrl.data.Nested2TED", "reference/generated/torchrl.data.NonTensor", "reference/generated/torchrl.data.NonTensorSpec", "reference/generated/torchrl.data.OneHot", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec", "reference/generated/torchrl.data.PairwiseDataset", "reference/generated/torchrl.data.PrioritizedReplayBuffer", "reference/generated/torchrl.data.PromptData", "reference/generated/torchrl.data.PromptTensorDictTokenizer", "reference/generated/torchrl.data.QueryModule", "reference/generated/torchrl.data.RandomProjectionHash", "reference/generated/torchrl.data.RayReplayBuffer", "reference/generated/torchrl.data.RemoteTensorDictReplayBuffer", "reference/generated/torchrl.data.ReplayBuffer", "reference/generated/torchrl.data.RewardData", "reference/generated/torchrl.data.RolloutFromModel", "reference/generated/torchrl.data.SipHash", "reference/generated/torchrl.data.Stacked", "reference/generated/torchrl.data.StackedComposite", "reference/generated/torchrl.data.TED2Flat", "reference/generated/torchrl.data.TED2Nested", "reference/generated/torchrl.data.TensorDictMap", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer", "reference/generated/torchrl.data.TensorDictReplayBuffer", "reference/generated/torchrl.data.TensorDictTokenizer", "reference/generated/torchrl.data.TensorMap", "reference/generated/torchrl.data.TensorSpec", "reference/generated/torchrl.data.TokenizedDatasetLoader", "reference/generated/torchrl.data.Tree", "reference/generated/torchrl.data.Unbounded", "reference/generated/torchrl.data.UnboundedContinuous", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec", "reference/generated/torchrl.data.UnboundedDiscrete", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec", "reference/generated/torchrl.data.check_no_exclusive_keys", "reference/generated/torchrl.data.consolidate_spec", "reference/generated/torchrl.data.contains_lazy_spec", "reference/generated/torchrl.data.create_infinite_iterator", "reference/generated/torchrl.data.get_dataloader", "reference/generated/torchrl.data.replay_buffers.FlatStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.H5StorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.ImmutableDatasetWriter", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage", "reference/generated/torchrl.data.replay_buffers.LazyStackStorage", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage", "reference/generated/torchrl.data.replay_buffers.ListStorage", "reference/generated/torchrl.data.replay_buffers.ListStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.NestedStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler", "reference/generated/torchrl.data.replay_buffers.PrioritizedSliceSampler", "reference/generated/torchrl.data.replay_buffers.RandomSampler", "reference/generated/torchrl.data.replay_buffers.ReplayBufferEnsemble", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.Sampler", "reference/generated/torchrl.data.replay_buffers.SamplerEnsemble", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.SliceSampler", "reference/generated/torchrl.data.replay_buffers.SliceSamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.Storage", "reference/generated/torchrl.data.replay_buffers.StorageCheckpointerBase", "reference/generated/torchrl.data.replay_buffers.StorageEnsemble", "reference/generated/torchrl.data.replay_buffers.StorageEnsembleCheckpointer", "reference/generated/torchrl.data.replay_buffers.TensorDictMaxValueWriter", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.TensorStorage", "reference/generated/torchrl.data.replay_buffers.TensorStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.Writer", "reference/generated/torchrl.data.replay_buffers.WriterEnsemble", "reference/generated/torchrl.envs.AsyncEnvPool", "reference/generated/torchrl.envs.BraxEnv", "reference/generated/torchrl.envs.BraxWrapper", "reference/generated/torchrl.envs.ChessEnv", "reference/generated/torchrl.envs.DMControlEnv", "reference/generated/torchrl.envs.DMControlWrapper", "reference/generated/torchrl.envs.EnvBase", "reference/generated/torchrl.envs.EnvCreator", "reference/generated/torchrl.envs.EnvMetaData", "reference/generated/torchrl.envs.GymEnv", "reference/generated/torchrl.envs.GymLikeEnv", "reference/generated/torchrl.envs.GymWrapper", "reference/generated/torchrl.envs.HabitatEnv", "reference/generated/torchrl.envs.IsaacGymEnv", "reference/generated/torchrl.envs.IsaacGymWrapper", "reference/generated/torchrl.envs.JumanjiEnv", "reference/generated/torchrl.envs.JumanjiWrapper", "reference/generated/torchrl.envs.LLMHashingEnv", "reference/generated/torchrl.envs.MOGymEnv", "reference/generated/torchrl.envs.MOGymWrapper", "reference/generated/torchrl.envs.MarlGroupMapType", "reference/generated/torchrl.envs.MeltingpotEnv", "reference/generated/torchrl.envs.MeltingpotWrapper", "reference/generated/torchrl.envs.ModelBasedEnvBase", "reference/generated/torchrl.envs.MultiThreadedEnv", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper", "reference/generated/torchrl.envs.OpenMLEnv", "reference/generated/torchrl.envs.OpenSpielEnv", "reference/generated/torchrl.envs.OpenSpielWrapper", "reference/generated/torchrl.envs.ParallelEnv", "reference/generated/torchrl.envs.PendulumEnv", "reference/generated/torchrl.envs.PettingZooEnv", "reference/generated/torchrl.envs.PettingZooWrapper", "reference/generated/torchrl.envs.ProcessorAsyncEnvPool", "reference/generated/torchrl.envs.RandomPolicy", "reference/generated/torchrl.envs.RoboHiveEnv", "reference/generated/torchrl.envs.SMACv2Env", "reference/generated/torchrl.envs.SMACv2Wrapper", "reference/generated/torchrl.envs.SerialEnv", "reference/generated/torchrl.envs.ThreadingAsyncEnvPool", "reference/generated/torchrl.envs.TicTacToeEnv", "reference/generated/torchrl.envs.UnityMLAgentsEnv", "reference/generated/torchrl.envs.UnityMLAgentsWrapper", "reference/generated/torchrl.envs.VmasEnv", "reference/generated/torchrl.envs.VmasWrapper", "reference/generated/torchrl.envs.check_env_specs", "reference/generated/torchrl.envs.check_marl_grouping", "reference/generated/torchrl.envs.exploration_type", "reference/generated/torchrl.envs.get_available_libraries", "reference/generated/torchrl.envs.gym_backend", "reference/generated/torchrl.envs.make_composite_from_td", "reference/generated/torchrl.envs.model_based.dreamer.DreamerDecoder", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv", "reference/generated/torchrl.envs.register_gym_spec_conversion", "reference/generated/torchrl.envs.set_exploration_type", "reference/generated/torchrl.envs.set_gym_backend", "reference/generated/torchrl.envs.step_mdp", "reference/generated/torchrl.envs.terminated_or_truncated", "reference/generated/torchrl.envs.transforms.ActionDiscretizer", "reference/generated/torchrl.envs.transforms.ActionMask", "reference/generated/torchrl.envs.transforms.AutoResetEnv", "reference/generated/torchrl.envs.transforms.AutoResetTransform", "reference/generated/torchrl.envs.transforms.BatchSizeTransform", "reference/generated/torchrl.envs.transforms.BinarizeReward", "reference/generated/torchrl.envs.transforms.BurnInTransform", "reference/generated/torchrl.envs.transforms.CatFrames", "reference/generated/torchrl.envs.transforms.CatTensors", "reference/generated/torchrl.envs.transforms.CenterCrop", "reference/generated/torchrl.envs.transforms.ClipTransform", "reference/generated/torchrl.envs.transforms.Compose", "reference/generated/torchrl.envs.transforms.ConditionalSkip", "reference/generated/torchrl.envs.transforms.Crop", "reference/generated/torchrl.envs.transforms.DTypeCastTransform", "reference/generated/torchrl.envs.transforms.DeviceCastTransform", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection", "reference/generated/torchrl.envs.transforms.DoubleToFloat", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform", "reference/generated/torchrl.envs.transforms.ExcludeTransform", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck", "reference/generated/torchrl.envs.transforms.FlattenObservation", "reference/generated/torchrl.envs.transforms.FrameSkipTransform", "reference/generated/torchrl.envs.transforms.GrayScale", "reference/generated/torchrl.envs.transforms.Hash", "reference/generated/torchrl.envs.transforms.InitTracker", "reference/generated/torchrl.envs.transforms.KLRewardTransform", "reference/generated/torchrl.envs.transforms.LineariseRewards", "reference/generated/torchrl.envs.transforms.MultiAction", "reference/generated/torchrl.envs.transforms.NoopResetEnv", "reference/generated/torchrl.envs.transforms.ObservationNorm", "reference/generated/torchrl.envs.transforms.ObservationTransform", "reference/generated/torchrl.envs.transforms.PermuteTransform", "reference/generated/torchrl.envs.transforms.PinMemoryTransform", "reference/generated/torchrl.envs.transforms.R3MTransform", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict", "reference/generated/torchrl.envs.transforms.RemoveEmptySpecs", "reference/generated/torchrl.envs.transforms.RenameTransform", "reference/generated/torchrl.envs.transforms.Resize", "reference/generated/torchrl.envs.transforms.Reward2GoTransform", "reference/generated/torchrl.envs.transforms.RewardClipping", "reference/generated/torchrl.envs.transforms.RewardScaling", "reference/generated/torchrl.envs.transforms.RewardSum", "reference/generated/torchrl.envs.transforms.SelectTransform", "reference/generated/torchrl.envs.transforms.SignTransform", "reference/generated/torchrl.envs.transforms.SqueezeTransform", "reference/generated/torchrl.envs.transforms.Stack", "reference/generated/torchrl.envs.transforms.StepCounter", "reference/generated/torchrl.envs.transforms.TargetReturn", "reference/generated/torchrl.envs.transforms.TensorDictPrimer", "reference/generated/torchrl.envs.transforms.TimeMaxPool", "reference/generated/torchrl.envs.transforms.Timer", "reference/generated/torchrl.envs.transforms.ToTensorImage", "reference/generated/torchrl.envs.transforms.Tokenizer", "reference/generated/torchrl.envs.transforms.TrajCounter", "reference/generated/torchrl.envs.transforms.Transform", "reference/generated/torchrl.envs.transforms.TransformedEnv", "reference/generated/torchrl.envs.transforms.UnaryTransform", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform", "reference/generated/torchrl.envs.transforms.VC1Transform", "reference/generated/torchrl.envs.transforms.VIPRewardTransform", "reference/generated/torchrl.envs.transforms.VIPTransform", "reference/generated/torchrl.envs.transforms.VecGymEnvTransform", "reference/generated/torchrl.envs.transforms.VecNorm", "reference/generated/torchrl.envs.transforms.VecNormV2", "reference/generated/torchrl.envs.transforms.gSDENoise", "reference/generated/torchrl.envs.transforms.rb_transforms.MultiStepTransform", "reference/generated/torchrl.implement_for", "reference/generated/torchrl.modules.AdditiveGaussianModule", "reference/generated/torchrl.modules.BatchRenorm1d", "reference/generated/torchrl.modules.CEMPlanner", "reference/generated/torchrl.modules.ConsistentDropout", "reference/generated/torchrl.modules.ConsistentDropoutModule", "reference/generated/torchrl.modules.Conv3dNet", "reference/generated/torchrl.modules.ConvNet", "reference/generated/torchrl.modules.DTActor", "reference/generated/torchrl.modules.DdpgCnnActor", "reference/generated/torchrl.modules.DdpgCnnQNet", "reference/generated/torchrl.modules.DdpgMlpActor", "reference/generated/torchrl.modules.DdpgMlpQNet", "reference/generated/torchrl.modules.DecisionTransformer", "reference/generated/torchrl.modules.Delta", "reference/generated/torchrl.modules.DistributionalDQNnet", "reference/generated/torchrl.modules.DistributionalQValueHook", "reference/generated/torchrl.modules.DreamerActor", "reference/generated/torchrl.modules.DuelingCnnDQNet", "reference/generated/torchrl.modules.EGreedyModule", "reference/generated/torchrl.modules.GRU", "reference/generated/torchrl.modules.GRUCell", "reference/generated/torchrl.modules.GRUModule", "reference/generated/torchrl.modules.IndependentNormal", "reference/generated/torchrl.modules.LSTM", "reference/generated/torchrl.modules.LSTMCell", "reference/generated/torchrl.modules.LSTMModule", "reference/generated/torchrl.modules.MLP", "reference/generated/torchrl.modules.MPCPlannerBase", "reference/generated/torchrl.modules.MPPIPlanner", "reference/generated/torchrl.modules.MaskedCategorical", "reference/generated/torchrl.modules.MaskedOneHotCategorical", "reference/generated/torchrl.modules.MultiAgentConvNet", "reference/generated/torchrl.modules.MultiAgentMLP", "reference/generated/torchrl.modules.MultiAgentNetBase", "reference/generated/torchrl.modules.NoisyLazyLinear", "reference/generated/torchrl.modules.NoisyLinear", "reference/generated/torchrl.modules.ObsDecoder", "reference/generated/torchrl.modules.ObsEncoder", "reference/generated/torchrl.modules.OneHotCategorical", "reference/generated/torchrl.modules.OneHotOrdinal", "reference/generated/torchrl.modules.OnlineDTActor", "reference/generated/torchrl.modules.Ordinal", "reference/generated/torchrl.modules.OrnsteinUhlenbeckProcessModule", "reference/generated/torchrl.modules.QMixer", "reference/generated/torchrl.modules.QValueHook", "reference/generated/torchrl.modules.RSSMPosterior", "reference/generated/torchrl.modules.RSSMPrior", "reference/generated/torchrl.modules.Squeeze2dLayer", "reference/generated/torchrl.modules.SqueezeLayer", "reference/generated/torchrl.modules.TanhDelta", "reference/generated/torchrl.modules.TanhNormal", "reference/generated/torchrl.modules.TruncatedNormal", "reference/generated/torchrl.modules.VDNMixer", "reference/generated/torchrl.modules.VmapModule", "reference/generated/torchrl.modules.recurrent_mode", "reference/generated/torchrl.modules.reset_noise", "reference/generated/torchrl.modules.set_recurrent_mode", "reference/generated/torchrl.modules.tensordict_module.Actor", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.MultiStepActorWrapper", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor", "reference/generated/torchrl.modules.tensordict_module.QValueActor", "reference/generated/torchrl.modules.tensordict_module.QValueModule", "reference/generated/torchrl.modules.tensordict_module.SafeModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential", "reference/generated/torchrl.modules.tensordict_module.SafeSequential", "reference/generated/torchrl.modules.tensordict_module.TanhModule", "reference/generated/torchrl.modules.tensordict_module.ValueOperator", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper", "reference/generated/torchrl.modules.utils.biased_softplus", "reference/generated/torchrl.modules.utils.get_primers_from_module", "reference/generated/torchrl.modules.utils.inv_softplus", "reference/generated/torchrl.modules.utils.mappings", "reference/generated/torchrl.objectives.A2CLoss", "reference/generated/torchrl.objectives.CQLLoss", "reference/generated/torchrl.objectives.ClipPPOLoss", "reference/generated/torchrl.objectives.CrossQLoss", "reference/generated/torchrl.objectives.DDPGLoss", "reference/generated/torchrl.objectives.DQNLoss", "reference/generated/torchrl.objectives.DTLoss", "reference/generated/torchrl.objectives.DiscreteCQLLoss", "reference/generated/torchrl.objectives.DiscreteIQLLoss", "reference/generated/torchrl.objectives.DiscreteSACLoss", "reference/generated/torchrl.objectives.DistributionalDQNLoss", "reference/generated/torchrl.objectives.DreamerActorLoss", "reference/generated/torchrl.objectives.DreamerModelLoss", "reference/generated/torchrl.objectives.DreamerValueLoss", "reference/generated/torchrl.objectives.GAILLoss", "reference/generated/torchrl.objectives.HardUpdate", "reference/generated/torchrl.objectives.IQLLoss", "reference/generated/torchrl.objectives.KLPENPPOLoss", "reference/generated/torchrl.objectives.LossModule", "reference/generated/torchrl.objectives.OnlineDTLoss", "reference/generated/torchrl.objectives.PPOLoss", "reference/generated/torchrl.objectives.REDQLoss", "reference/generated/torchrl.objectives.ReinforceLoss", "reference/generated/torchrl.objectives.SACLoss", "reference/generated/torchrl.objectives.SoftUpdate", "reference/generated/torchrl.objectives.TD3BCLoss", "reference/generated/torchrl.objectives.TD3Loss", "reference/generated/torchrl.objectives.ValueEstimators", "reference/generated/torchrl.objectives.default_value_kwargs", "reference/generated/torchrl.objectives.distance_loss", "reference/generated/torchrl.objectives.group_optimizers", "reference/generated/torchrl.objectives.hold_out_net", "reference/generated/torchrl.objectives.hold_out_params", "reference/generated/torchrl.objectives.multiagent.QMixerLoss", "reference/generated/torchrl.objectives.next_state_value", "reference/generated/torchrl.objectives.value.GAE", "reference/generated/torchrl.objectives.value.TD0Estimator", "reference/generated/torchrl.objectives.value.TD1Estimator", "reference/generated/torchrl.objectives.value.TDLambdaEstimator", "reference/generated/torchrl.objectives.value.ValueEstimatorBase", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.reward2go", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate", "reference/generated/torchrl.record.PixelRenderTransform", "reference/generated/torchrl.record.TensorDictRecorder", "reference/generated/torchrl.record.VideoRecorder", "reference/generated/torchrl.record.loggers.Logger", "reference/generated/torchrl.record.loggers.csv.CSVLogger", "reference/generated/torchrl.record.loggers.generate_exp_name", "reference/generated/torchrl.record.loggers.get_logger", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger", "reference/generated/torchrl.record.loggers.wandb.WandbLogger", "reference/generated/torchrl.set_auto_unwrap_transformed_env", "reference/generated/torchrl.trainers.BatchSubSampler", "reference/generated/torchrl.trainers.ClearCudaCache", "reference/generated/torchrl.trainers.CountFramesLog", "reference/generated/torchrl.trainers.LogScalar", "reference/generated/torchrl.trainers.LogValidationReward", "reference/generated/torchrl.trainers.OptimizerHook", "reference/generated/torchrl.trainers.ReplayBufferTrainer", "reference/generated/torchrl.trainers.RewardNormalizer", "reference/generated/torchrl.trainers.SelectKeys", "reference/generated/torchrl.trainers.Trainer", "reference/generated/torchrl.trainers.TrainerHookBase", "reference/generated/torchrl.trainers.UpdateWeights", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy", "reference/generated/torchrl.trainers.helpers.make_dqn_loss", "reference/generated/torchrl.trainers.helpers.make_replay_buffer", "reference/generated/torchrl.trainers.helpers.make_target_updater", "reference/generated/torchrl.trainers.helpers.make_trainer", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor", "reference/generated/torchrl.trainers.helpers.sync_async_collector", "reference/generated/torchrl.trainers.helpers.sync_sync_collector", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor", "reference/generated/tutorials/README", "reference/index", "reference/knowledge_base", "reference/modules", "reference/objectives", "reference/trainers", "reference/utils", "sg_execution_times", "tutorials/coding_ddpg", "tutorials/coding_dqn", "tutorials/coding_ppo", "tutorials/dqn_with_rnn", "tutorials/export", "tutorials/getting-started-0", "tutorials/getting-started-1", "tutorials/getting-started-2", "tutorials/getting-started-3", "tutorials/getting-started-4", "tutorials/getting-started-5", "tutorials/index", "tutorials/multi_task", "tutorials/multiagent_competitive_ddpg", "tutorials/multiagent_ppo", "tutorials/pendulum", "tutorials/pretrained_models", "tutorials/rb_tutorial", "tutorials/sg_execution_times", "tutorials/torchrl_demo", "tutorials/torchrl_envs"], "filenames": ["index.rst", "reference/collectors.rst", "reference/data.rst", "reference/envs.rst", "reference/generated/knowledge_base/DEBUGGING_RL.rst", "reference/generated/knowledge_base/GYM.rst", "reference/generated/knowledge_base/HABITAT.rst", "reference/generated/knowledge_base/MUJOCO_INSTALLATION.rst", "reference/generated/knowledge_base/PRO-TIPS.rst", "reference/generated/knowledge_base/RESOURCES.rst", "reference/generated/knowledge_base/VERSIONING_ISSUES.rst", "reference/generated/knowledge_base/VIDEO_CUSTOMISATION.rst", "reference/generated/torchrl.auto_unwrap_transformed_env.rst", "reference/generated/torchrl.collectors.DataCollectorBase.rst", "reference/generated/torchrl.collectors.MultiSyncDataCollector.rst", "reference/generated/torchrl.collectors.MultiaSyncDataCollector.rst", "reference/generated/torchrl.collectors.SyncDataCollector.rst", "reference/generated/torchrl.collectors.WeightUpdateReceiverBase.rst", "reference/generated/torchrl.collectors.WeightUpdateSenderBase.rst", "reference/generated/torchrl.collectors.aSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RPCDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RayCollector.rst", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher.rst", "reference/generated/torchrl.collectors.utils.split_trajectories.rst", "reference/generated/torchrl.data.AdaptiveKLController.rst", "reference/generated/torchrl.data.Binary.rst", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec.rst", "reference/generated/torchrl.data.BinaryToDecimal.rst", "reference/generated/torchrl.data.Bounded.rst", "reference/generated/torchrl.data.BoundedTensorSpec.rst", "reference/generated/torchrl.data.Categorical.rst", "reference/generated/torchrl.data.Composite.rst", "reference/generated/torchrl.data.CompositeSpec.rst", "reference/generated/torchrl.data.ConstantKLController.rst", "reference/generated/torchrl.data.DensifyReward.rst", "reference/generated/torchrl.data.DiscreteTensorSpec.rst", "reference/generated/torchrl.data.Flat2TED.rst", "reference/generated/torchrl.data.H5Combine.rst", "reference/generated/torchrl.data.H5Split.rst", "reference/generated/torchrl.data.HashToInt.rst", "reference/generated/torchrl.data.LazyStackedCompositeSpec.rst", "reference/generated/torchrl.data.LazyStackedTensorSpec.rst", "reference/generated/torchrl.data.MCTSForest.rst", "reference/generated/torchrl.data.MultiCategorical.rst", "reference/generated/torchrl.data.MultiDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiOneHot.rst", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiStep.rst", "reference/generated/torchrl.data.Nested2TED.rst", "reference/generated/torchrl.data.NonTensor.rst", "reference/generated/torchrl.data.NonTensorSpec.rst", "reference/generated/torchrl.data.OneHot.rst", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.PairwiseDataset.rst", "reference/generated/torchrl.data.PrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.PromptData.rst", "reference/generated/torchrl.data.PromptTensorDictTokenizer.rst", "reference/generated/torchrl.data.QueryModule.rst", "reference/generated/torchrl.data.RandomProjectionHash.rst", "reference/generated/torchrl.data.RayReplayBuffer.rst", "reference/generated/torchrl.data.RemoteTensorDictReplayBuffer.rst", "reference/generated/torchrl.data.ReplayBuffer.rst", "reference/generated/torchrl.data.RewardData.rst", "reference/generated/torchrl.data.RolloutFromModel.rst", "reference/generated/torchrl.data.SipHash.rst", "reference/generated/torchrl.data.Stacked.rst", "reference/generated/torchrl.data.StackedComposite.rst", "reference/generated/torchrl.data.TED2Flat.rst", "reference/generated/torchrl.data.TED2Nested.rst", "reference/generated/torchrl.data.TensorDictMap.rst", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictTokenizer.rst", "reference/generated/torchrl.data.TensorMap.rst", "reference/generated/torchrl.data.TensorSpec.rst", "reference/generated/torchrl.data.TokenizedDatasetLoader.rst", "reference/generated/torchrl.data.Tree.rst", "reference/generated/torchrl.data.Unbounded.rst", "reference/generated/torchrl.data.UnboundedContinuous.rst", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec.rst", "reference/generated/torchrl.data.UnboundedDiscrete.rst", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec.rst", "reference/generated/torchrl.data.check_no_exclusive_keys.rst", "reference/generated/torchrl.data.consolidate_spec.rst", "reference/generated/torchrl.data.contains_lazy_spec.rst", "reference/generated/torchrl.data.create_infinite_iterator.rst", "reference/generated/torchrl.data.get_dataloader.rst", "reference/generated/torchrl.data.replay_buffers.FlatStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.H5StorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.ImmutableDatasetWriter.rst", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage.rst", "reference/generated/torchrl.data.replay_buffers.LazyStackStorage.rst", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.ListStorage.rst", "reference/generated/torchrl.data.replay_buffers.ListStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.NestedStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSliceSampler.rst", "reference/generated/torchrl.data.replay_buffers.RandomSampler.rst", "reference/generated/torchrl.data.replay_buffers.ReplayBufferEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.Sampler.rst", "reference/generated/torchrl.data.replay_buffers.SamplerEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.SliceSampler.rst", "reference/generated/torchrl.data.replay_buffers.SliceSamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.Storage.rst", "reference/generated/torchrl.data.replay_buffers.StorageCheckpointerBase.rst", "reference/generated/torchrl.data.replay_buffers.StorageEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.StorageEnsembleCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictMaxValueWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.TensorStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.Writer.rst", "reference/generated/torchrl.data.replay_buffers.WriterEnsemble.rst", "reference/generated/torchrl.envs.AsyncEnvPool.rst", "reference/generated/torchrl.envs.BraxEnv.rst", "reference/generated/torchrl.envs.BraxWrapper.rst", "reference/generated/torchrl.envs.ChessEnv.rst", "reference/generated/torchrl.envs.DMControlEnv.rst", "reference/generated/torchrl.envs.DMControlWrapper.rst", "reference/generated/torchrl.envs.EnvBase.rst", "reference/generated/torchrl.envs.EnvCreator.rst", "reference/generated/torchrl.envs.EnvMetaData.rst", "reference/generated/torchrl.envs.GymEnv.rst", "reference/generated/torchrl.envs.GymLikeEnv.rst", "reference/generated/torchrl.envs.GymWrapper.rst", "reference/generated/torchrl.envs.HabitatEnv.rst", "reference/generated/torchrl.envs.IsaacGymEnv.rst", "reference/generated/torchrl.envs.IsaacGymWrapper.rst", "reference/generated/torchrl.envs.JumanjiEnv.rst", "reference/generated/torchrl.envs.JumanjiWrapper.rst", "reference/generated/torchrl.envs.LLMHashingEnv.rst", "reference/generated/torchrl.envs.MOGymEnv.rst", "reference/generated/torchrl.envs.MOGymWrapper.rst", "reference/generated/torchrl.envs.MarlGroupMapType.rst", "reference/generated/torchrl.envs.MeltingpotEnv.rst", "reference/generated/torchrl.envs.MeltingpotWrapper.rst", "reference/generated/torchrl.envs.ModelBasedEnvBase.rst", "reference/generated/torchrl.envs.MultiThreadedEnv.rst", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper.rst", "reference/generated/torchrl.envs.OpenMLEnv.rst", "reference/generated/torchrl.envs.OpenSpielEnv.rst", "reference/generated/torchrl.envs.OpenSpielWrapper.rst", "reference/generated/torchrl.envs.ParallelEnv.rst", "reference/generated/torchrl.envs.PendulumEnv.rst", "reference/generated/torchrl.envs.PettingZooEnv.rst", "reference/generated/torchrl.envs.PettingZooWrapper.rst", "reference/generated/torchrl.envs.ProcessorAsyncEnvPool.rst", "reference/generated/torchrl.envs.RandomPolicy.rst", "reference/generated/torchrl.envs.RoboHiveEnv.rst", "reference/generated/torchrl.envs.SMACv2Env.rst", "reference/generated/torchrl.envs.SMACv2Wrapper.rst", "reference/generated/torchrl.envs.SerialEnv.rst", "reference/generated/torchrl.envs.ThreadingAsyncEnvPool.rst", "reference/generated/torchrl.envs.TicTacToeEnv.rst", "reference/generated/torchrl.envs.UnityMLAgentsEnv.rst", "reference/generated/torchrl.envs.UnityMLAgentsWrapper.rst", "reference/generated/torchrl.envs.VmasEnv.rst", "reference/generated/torchrl.envs.VmasWrapper.rst", "reference/generated/torchrl.envs.check_env_specs.rst", "reference/generated/torchrl.envs.check_marl_grouping.rst", "reference/generated/torchrl.envs.exploration_type.rst", "reference/generated/torchrl.envs.get_available_libraries.rst", "reference/generated/torchrl.envs.gym_backend.rst", "reference/generated/torchrl.envs.make_composite_from_td.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerDecoder.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv.rst", "reference/generated/torchrl.envs.register_gym_spec_conversion.rst", "reference/generated/torchrl.envs.set_exploration_type.rst", "reference/generated/torchrl.envs.set_gym_backend.rst", "reference/generated/torchrl.envs.step_mdp.rst", "reference/generated/torchrl.envs.terminated_or_truncated.rst", "reference/generated/torchrl.envs.transforms.ActionDiscretizer.rst", "reference/generated/torchrl.envs.transforms.ActionMask.rst", "reference/generated/torchrl.envs.transforms.AutoResetEnv.rst", "reference/generated/torchrl.envs.transforms.AutoResetTransform.rst", "reference/generated/torchrl.envs.transforms.BatchSizeTransform.rst", "reference/generated/torchrl.envs.transforms.BinarizeReward.rst", "reference/generated/torchrl.envs.transforms.BurnInTransform.rst", "reference/generated/torchrl.envs.transforms.CatFrames.rst", "reference/generated/torchrl.envs.transforms.CatTensors.rst", "reference/generated/torchrl.envs.transforms.CenterCrop.rst", "reference/generated/torchrl.envs.transforms.ClipTransform.rst", "reference/generated/torchrl.envs.transforms.Compose.rst", "reference/generated/torchrl.envs.transforms.ConditionalSkip.rst", "reference/generated/torchrl.envs.transforms.Crop.rst", "reference/generated/torchrl.envs.transforms.DTypeCastTransform.rst", "reference/generated/torchrl.envs.transforms.DeviceCastTransform.rst", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection.rst", "reference/generated/torchrl.envs.transforms.DoubleToFloat.rst", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform.rst", "reference/generated/torchrl.envs.transforms.ExcludeTransform.rst", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck.rst", "reference/generated/torchrl.envs.transforms.FlattenObservation.rst", "reference/generated/torchrl.envs.transforms.FrameSkipTransform.rst", "reference/generated/torchrl.envs.transforms.GrayScale.rst", "reference/generated/torchrl.envs.transforms.Hash.rst", "reference/generated/torchrl.envs.transforms.InitTracker.rst", "reference/generated/torchrl.envs.transforms.KLRewardTransform.rst", "reference/generated/torchrl.envs.transforms.LineariseRewards.rst", "reference/generated/torchrl.envs.transforms.MultiAction.rst", "reference/generated/torchrl.envs.transforms.NoopResetEnv.rst", "reference/generated/torchrl.envs.transforms.ObservationNorm.rst", "reference/generated/torchrl.envs.transforms.ObservationTransform.rst", "reference/generated/torchrl.envs.transforms.PermuteTransform.rst", "reference/generated/torchrl.envs.transforms.PinMemoryTransform.rst", "reference/generated/torchrl.envs.transforms.R3MTransform.rst", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict.rst", "reference/generated/torchrl.envs.transforms.RemoveEmptySpecs.rst", "reference/generated/torchrl.envs.transforms.RenameTransform.rst", "reference/generated/torchrl.envs.transforms.Resize.rst", "reference/generated/torchrl.envs.transforms.Reward2GoTransform.rst", "reference/generated/torchrl.envs.transforms.RewardClipping.rst", "reference/generated/torchrl.envs.transforms.RewardScaling.rst", "reference/generated/torchrl.envs.transforms.RewardSum.rst", "reference/generated/torchrl.envs.transforms.SelectTransform.rst", "reference/generated/torchrl.envs.transforms.SignTransform.rst", "reference/generated/torchrl.envs.transforms.SqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.Stack.rst", "reference/generated/torchrl.envs.transforms.StepCounter.rst", "reference/generated/torchrl.envs.transforms.TargetReturn.rst", "reference/generated/torchrl.envs.transforms.TensorDictPrimer.rst", "reference/generated/torchrl.envs.transforms.TimeMaxPool.rst", "reference/generated/torchrl.envs.transforms.Timer.rst", "reference/generated/torchrl.envs.transforms.ToTensorImage.rst", "reference/generated/torchrl.envs.transforms.Tokenizer.rst", "reference/generated/torchrl.envs.transforms.TrajCounter.rst", "reference/generated/torchrl.envs.transforms.Transform.rst", "reference/generated/torchrl.envs.transforms.TransformedEnv.rst", "reference/generated/torchrl.envs.transforms.UnaryTransform.rst", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.VC1Transform.rst", "reference/generated/torchrl.envs.transforms.VIPRewardTransform.rst", "reference/generated/torchrl.envs.transforms.VIPTransform.rst", "reference/generated/torchrl.envs.transforms.VecGymEnvTransform.rst", "reference/generated/torchrl.envs.transforms.VecNorm.rst", "reference/generated/torchrl.envs.transforms.VecNormV2.rst", "reference/generated/torchrl.envs.transforms.gSDENoise.rst", "reference/generated/torchrl.envs.transforms.rb_transforms.MultiStepTransform.rst", "reference/generated/torchrl.implement_for.rst", "reference/generated/torchrl.modules.AdditiveGaussianModule.rst", "reference/generated/torchrl.modules.BatchRenorm1d.rst", "reference/generated/torchrl.modules.CEMPlanner.rst", "reference/generated/torchrl.modules.ConsistentDropout.rst", "reference/generated/torchrl.modules.ConsistentDropoutModule.rst", "reference/generated/torchrl.modules.Conv3dNet.rst", "reference/generated/torchrl.modules.ConvNet.rst", "reference/generated/torchrl.modules.DTActor.rst", "reference/generated/torchrl.modules.DdpgCnnActor.rst", "reference/generated/torchrl.modules.DdpgCnnQNet.rst", "reference/generated/torchrl.modules.DdpgMlpActor.rst", "reference/generated/torchrl.modules.DdpgMlpQNet.rst", "reference/generated/torchrl.modules.DecisionTransformer.rst", "reference/generated/torchrl.modules.Delta.rst", "reference/generated/torchrl.modules.DistributionalDQNnet.rst", "reference/generated/torchrl.modules.DistributionalQValueHook.rst", "reference/generated/torchrl.modules.DreamerActor.rst", "reference/generated/torchrl.modules.DuelingCnnDQNet.rst", "reference/generated/torchrl.modules.EGreedyModule.rst", "reference/generated/torchrl.modules.GRU.rst", "reference/generated/torchrl.modules.GRUCell.rst", "reference/generated/torchrl.modules.GRUModule.rst", "reference/generated/torchrl.modules.IndependentNormal.rst", "reference/generated/torchrl.modules.LSTM.rst", "reference/generated/torchrl.modules.LSTMCell.rst", "reference/generated/torchrl.modules.LSTMModule.rst", "reference/generated/torchrl.modules.MLP.rst", "reference/generated/torchrl.modules.MPCPlannerBase.rst", "reference/generated/torchrl.modules.MPPIPlanner.rst", "reference/generated/torchrl.modules.MaskedCategorical.rst", "reference/generated/torchrl.modules.MaskedOneHotCategorical.rst", "reference/generated/torchrl.modules.MultiAgentConvNet.rst", "reference/generated/torchrl.modules.MultiAgentMLP.rst", "reference/generated/torchrl.modules.MultiAgentNetBase.rst", "reference/generated/torchrl.modules.NoisyLazyLinear.rst", "reference/generated/torchrl.modules.NoisyLinear.rst", "reference/generated/torchrl.modules.ObsDecoder.rst", "reference/generated/torchrl.modules.ObsEncoder.rst", "reference/generated/torchrl.modules.OneHotCategorical.rst", "reference/generated/torchrl.modules.OneHotOrdinal.rst", "reference/generated/torchrl.modules.OnlineDTActor.rst", "reference/generated/torchrl.modules.Ordinal.rst", "reference/generated/torchrl.modules.OrnsteinUhlenbeckProcessModule.rst", "reference/generated/torchrl.modules.QMixer.rst", "reference/generated/torchrl.modules.QValueHook.rst", "reference/generated/torchrl.modules.RSSMPosterior.rst", "reference/generated/torchrl.modules.RSSMPrior.rst", "reference/generated/torchrl.modules.Squeeze2dLayer.rst", "reference/generated/torchrl.modules.SqueezeLayer.rst", "reference/generated/torchrl.modules.TanhDelta.rst", "reference/generated/torchrl.modules.TanhNormal.rst", "reference/generated/torchrl.modules.TruncatedNormal.rst", "reference/generated/torchrl.modules.VDNMixer.rst", "reference/generated/torchrl.modules.VmapModule.rst", "reference/generated/torchrl.modules.recurrent_mode.rst", "reference/generated/torchrl.modules.reset_noise.rst", "reference/generated/torchrl.modules.set_recurrent_mode.rst", "reference/generated/torchrl.modules.tensordict_module.Actor.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.MultiStepActorWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential.rst", "reference/generated/torchrl.modules.tensordict_module.SafeSequential.rst", "reference/generated/torchrl.modules.tensordict_module.TanhModule.rst", "reference/generated/torchrl.modules.tensordict_module.ValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper.rst", "reference/generated/torchrl.modules.utils.biased_softplus.rst", "reference/generated/torchrl.modules.utils.get_primers_from_module.rst", "reference/generated/torchrl.modules.utils.inv_softplus.rst", "reference/generated/torchrl.modules.utils.mappings.rst", "reference/generated/torchrl.objectives.A2CLoss.rst", "reference/generated/torchrl.objectives.CQLLoss.rst", "reference/generated/torchrl.objectives.ClipPPOLoss.rst", "reference/generated/torchrl.objectives.CrossQLoss.rst", "reference/generated/torchrl.objectives.DDPGLoss.rst", "reference/generated/torchrl.objectives.DQNLoss.rst", "reference/generated/torchrl.objectives.DTLoss.rst", "reference/generated/torchrl.objectives.DiscreteCQLLoss.rst", "reference/generated/torchrl.objectives.DiscreteIQLLoss.rst", "reference/generated/torchrl.objectives.DiscreteSACLoss.rst", "reference/generated/torchrl.objectives.DistributionalDQNLoss.rst", "reference/generated/torchrl.objectives.DreamerActorLoss.rst", "reference/generated/torchrl.objectives.DreamerModelLoss.rst", "reference/generated/torchrl.objectives.DreamerValueLoss.rst", "reference/generated/torchrl.objectives.GAILLoss.rst", "reference/generated/torchrl.objectives.HardUpdate.rst", "reference/generated/torchrl.objectives.IQLLoss.rst", "reference/generated/torchrl.objectives.KLPENPPOLoss.rst", "reference/generated/torchrl.objectives.LossModule.rst", "reference/generated/torchrl.objectives.OnlineDTLoss.rst", "reference/generated/torchrl.objectives.PPOLoss.rst", "reference/generated/torchrl.objectives.REDQLoss.rst", "reference/generated/torchrl.objectives.ReinforceLoss.rst", "reference/generated/torchrl.objectives.SACLoss.rst", "reference/generated/torchrl.objectives.SoftUpdate.rst", "reference/generated/torchrl.objectives.TD3BCLoss.rst", "reference/generated/torchrl.objectives.TD3Loss.rst", "reference/generated/torchrl.objectives.ValueEstimators.rst", "reference/generated/torchrl.objectives.default_value_kwargs.rst", "reference/generated/torchrl.objectives.distance_loss.rst", "reference/generated/torchrl.objectives.group_optimizers.rst", "reference/generated/torchrl.objectives.hold_out_net.rst", "reference/generated/torchrl.objectives.hold_out_params.rst", "reference/generated/torchrl.objectives.multiagent.QMixerLoss.rst", "reference/generated/torchrl.objectives.next_state_value.rst", "reference/generated/torchrl.objectives.value.GAE.rst", "reference/generated/torchrl.objectives.value.TD0Estimator.rst", "reference/generated/torchrl.objectives.value.TD1Estimator.rst", "reference/generated/torchrl.objectives.value.TDLambdaEstimator.rst", "reference/generated/torchrl.objectives.value.ValueEstimatorBase.rst", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.reward2go.rst", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate.rst", "reference/generated/torchrl.record.PixelRenderTransform.rst", "reference/generated/torchrl.record.TensorDictRecorder.rst", "reference/generated/torchrl.record.VideoRecorder.rst", "reference/generated/torchrl.record.loggers.Logger.rst", "reference/generated/torchrl.record.loggers.csv.CSVLogger.rst", "reference/generated/torchrl.record.loggers.generate_exp_name.rst", "reference/generated/torchrl.record.loggers.get_logger.rst", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger.rst", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger.rst", "reference/generated/torchrl.record.loggers.wandb.WandbLogger.rst", "reference/generated/torchrl.set_auto_unwrap_transformed_env.rst", "reference/generated/torchrl.trainers.BatchSubSampler.rst", "reference/generated/torchrl.trainers.ClearCudaCache.rst", "reference/generated/torchrl.trainers.CountFramesLog.rst", "reference/generated/torchrl.trainers.LogScalar.rst", "reference/generated/torchrl.trainers.LogValidationReward.rst", "reference/generated/torchrl.trainers.OptimizerHook.rst", "reference/generated/torchrl.trainers.ReplayBufferTrainer.rst", "reference/generated/torchrl.trainers.RewardNormalizer.rst", "reference/generated/torchrl.trainers.SelectKeys.rst", "reference/generated/torchrl.trainers.Trainer.rst", "reference/generated/torchrl.trainers.TrainerHookBase.rst", "reference/generated/torchrl.trainers.UpdateWeights.rst", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip.rst", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout.rst", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_loss.rst", "reference/generated/torchrl.trainers.helpers.make_replay_buffer.rst", "reference/generated/torchrl.trainers.helpers.make_target_updater.rst", "reference/generated/torchrl.trainers.helpers.make_trainer.rst", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor.rst", "reference/generated/torchrl.trainers.helpers.sync_async_collector.rst", "reference/generated/torchrl.trainers.helpers.sync_sync_collector.rst", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor.rst", "reference/generated/tutorials/README.rst", "reference/index.rst", "reference/knowledge_base.rst", "reference/modules.rst", "reference/objectives.rst", "reference/trainers.rst", "reference/utils.rst", "sg_execution_times.rst", "tutorials/coding_ddpg.rst", "tutorials/coding_dqn.rst", "tutorials/coding_ppo.rst", "tutorials/dqn_with_rnn.rst", "tutorials/export.rst", "tutorials/getting-started-0.rst", "tutorials/getting-started-1.rst", "tutorials/getting-started-2.rst", "tutorials/getting-started-3.rst", "tutorials/getting-started-4.rst", "tutorials/getting-started-5.rst", "tutorials/index.rst", "tutorials/multi_task.rst", "tutorials/multiagent_competitive_ddpg.rst", "tutorials/multiagent_ppo.rst", "tutorials/pendulum.rst", "tutorials/pretrained_models.rst", "tutorials/rb_tutorial.rst", "tutorials/sg_execution_times.rst", "tutorials/torchrl_demo.rst", "tutorials/torchrl_envs.rst"], "titles": ["TorchRL", "torchrl.collectors package", "torchrl.data package", "torchrl.envs package", "Things to consider when debugging RL", "Working with gym", "Working with <code class=\"docutils literal notranslate\"><span class=\"pre\">habitat-lab</span></code>", "Working with MuJoCo-based environments", "Common PyTorch errors and solutions", "Useful resources", "Versioning Issues", "Customising Video Renders", "auto_unwrap_transformed_env", "DataCollectorBase", "MultiSyncDataCollector", "MultiaSyncDataCollector", "SyncDataCollector", "WeightUpdateReceiverBase", "WeightUpdateSenderBase", "aSyncDataCollector", "DistributedDataCollector", "DistributedSyncDataCollector", "RPCDataCollector", "RayCollector", "submitit_delayed_launcher", "split_trajectories", "AdaptiveKLController", "Binary", "BinaryDiscreteTensorSpec", "BinaryToDecimal", "Bounded", "BoundedTensorSpec", "Categorical", "Composite", "CompositeSpec", "ConstantKLController", "DensifyReward", "DiscreteTensorSpec", "Flat2TED", "H5Combine", "H5Split", "HashToInt", "LazyStackedCompositeSpec", "LazyStackedTensorSpec", "MCTSForest", "MultiCategorical", "MultiDiscreteTensorSpec", "MultiOneHot", "MultiOneHotDiscreteTensorSpec", "MultiStep", "Nested2TED", "NonTensor", "NonTensorSpec", "OneHot", "OneHotDiscreteTensorSpec", "PairwiseDataset", "PrioritizedReplayBuffer", "PromptData", "PromptTensorDictTokenizer", "QueryModule", "RandomProjectionHash", "RayReplayBuffer", "RemoteTensorDictReplayBuffer", "ReplayBuffer", "RewardData", "RolloutFromModel", "SipHash", "Stacked", "StackedComposite", "TED2Flat", "TED2Nested", "TensorDictMap", "TensorDictPrioritizedReplayBuffer", "TensorDictReplayBuffer", "TensorDictTokenizer", "TensorMap", "TensorSpec", "TokenizedDatasetLoader", "Tree", "Unbounded", "UnboundedContinuous", "UnboundedContinuousTensorSpec", "UnboundedDiscrete", "UnboundedDiscreteTensorSpec", "check_no_exclusive_keys", "consolidate_spec", "contains_lazy_spec", "create_infinite_iterator", "get_dataloader", "FlatStorageCheckpointer", "H5StorageCheckpointer", "ImmutableDatasetWriter", "LazyMemmapStorage", "LazyStackStorage", "LazyTensorStorage", "ListStorage", "ListStorageCheckpointer", "NestedStorageCheckpointer", "PrioritizedSampler", "PrioritizedSliceSampler", "RandomSampler", "ReplayBufferEnsemble", "RoundRobinWriter", "Sampler", "SamplerEnsemble", "SamplerWithoutReplacement", "SliceSampler", "SliceSamplerWithoutReplacement", "Storage", "StorageCheckpointerBase", "StorageEnsemble", "StorageEnsembleCheckpointer", "TensorDictMaxValueWriter", "TensorDictRoundRobinWriter", "TensorStorage", "TensorStorageCheckpointer", "Writer", "WriterEnsemble", "AsyncEnvPool", "BraxEnv", "BraxWrapper", "ChessEnv", "DMControlEnv", "DMControlWrapper", "EnvBase", "EnvCreator", "EnvMetaData", "GymEnv", "GymLikeEnv", "GymWrapper", "HabitatEnv", "IsaacGymEnv", "IsaacGymWrapper", "JumanjiEnv", "JumanjiWrapper", "LLMHashingEnv", "MOGymEnv", "MOGymWrapper", "MarlGroupMapType", "MeltingpotEnv", "MeltingpotWrapper", "ModelBasedEnvBase", "MultiThreadedEnv", "MultiThreadedEnvWrapper", "OpenMLEnv", "OpenSpielEnv", "OpenSpielWrapper", "ParallelEnv", "PendulumEnv", "PettingZooEnv", "PettingZooWrapper", "ProcessorAsyncEnvPool", "RandomPolicy", "RoboHiveEnv", "SMACv2Env", "SMACv2Wrapper", "SerialEnv", "ThreadingAsyncEnvPool", "TicTacToeEnv", "UnityMLAgentsEnv", "UnityMLAgentsWrapper", "VmasEnv", "VmasWrapper", "check_env_specs", "check_marl_grouping", "exploration_type", "get_available_libraries", "gym_backend", "make_composite_from_td", "DreamerDecoder", "DreamerEnv", "register_gym_spec_conversion", "set_exploration_type", "set_gym_backend", "step_mdp", "terminated_or_truncated", "ActionDiscretizer", "ActionMask", "AutoResetEnv", "AutoResetTransform", "BatchSizeTransform", "BinarizeReward", "BurnInTransform", "CatFrames", "CatTensors", "CenterCrop", "ClipTransform", "Compose", "ConditionalSkip", "Crop", "DTypeCastTransform", "DeviceCastTransform", "DiscreteActionProjection", "DoubleToFloat", "EndOfLifeTransform", "ExcludeTransform", "FiniteTensorDictCheck", "FlattenObservation", "FrameSkipTransform", "GrayScale", "Hash", "InitTracker", "KLRewardTransform", "LineariseRewards", "MultiAction", "NoopResetEnv", "ObservationNorm", "ObservationTransform", "PermuteTransform", "PinMemoryTransform", "R3MTransform", "RandomCropTensorDict", "RemoveEmptySpecs", "RenameTransform", "Resize", "Reward2GoTransform", "RewardClipping", "RewardScaling", "RewardSum", "SelectTransform", "SignTransform", "SqueezeTransform", "Stack", "StepCounter", "TargetReturn", "TensorDictPrimer", "TimeMaxPool", "Timer", "ToTensorImage", "Tokenizer", "TrajCounter", "Transform", "TransformedEnv", "UnaryTransform", "UnsqueezeTransform", "VC1Transform", "VIPRewardTransform", "VIPTransform", "VecGymEnvTransform", "VecNorm", "VecNormV2", "gSDENoise", "MultiStepTransform", "implement_for", "AdditiveGaussianModule", "BatchRenorm1d", "CEMPlanner", "ConsistentDropout", "ConsistentDropoutModule", "Conv3dNet", "ConvNet", "DTActor", "DdpgCnnActor", "DdpgCnnQNet", "DdpgMlpActor", "DdpgMlpQNet", "DecisionTransformer", "Delta", "DistributionalDQNnet", "DistributionalQValueHook", "DreamerActor", "DuelingCnnDQNet", "EGreedyModule", "GRU", "GRUCell", "GRUModule", "IndependentNormal", "LSTM", "LSTMCell", "LSTMModule", "MLP", "MPCPlannerBase", "MPPIPlanner", "MaskedCategorical", "MaskedOneHotCategorical", "MultiAgentConvNet", "MultiAgentMLP", "MultiAgentNetBase", "NoisyLazyLinear", "NoisyLinear", "ObsDecoder", "ObsEncoder", "OneHotCategorical", "OneHotOrdinal", "OnlineDTActor", "Ordinal", "OrnsteinUhlenbeckProcessModule", "QMixer", "QValueHook", "RSSMPosterior", "RSSMPrior", "Squeeze2dLayer", "SqueezeLayer", "TanhDelta", "TanhNormal", "TruncatedNormal", "VDNMixer", "VmapModule", "recurrent_mode", "reset_noise", "set_recurrent_mode", "Actor", "ActorCriticOperator", "ActorCriticWrapper", "ActorValueOperator", "DecisionTransformerInferenceWrapper", "DistributionalQValueActor", "DistributionalQValueModule", "LMHeadActorValueOperator", "MultiStepActorWrapper", "ProbabilisticActor", "QValueActor", "QValueModule", "SafeModule", "SafeProbabilisticModule", "SafeProbabilisticTensorDictSequential", "SafeSequential", "TanhModule", "ValueOperator", "WorldModelWrapper", "biased_softplus", "get_primers_from_module", "inv_softplus", "mappings", "A2CLoss", "CQLLoss", "ClipPPOLoss", "CrossQLoss", "DDPGLoss", "DQNLoss", "DTLoss", "DiscreteCQLLoss", "DiscreteIQLLoss", "DiscreteSACLoss", "DistributionalDQNLoss", "DreamerActorLoss", "DreamerModelLoss", "DreamerValueLoss", "GAILLoss", "HardUpdate", "IQLLoss", "KLPENPPOLoss", "LossModule", "OnlineDTLoss", "PPOLoss", "REDQLoss", "ReinforceLoss", "SACLoss", "SoftUpdate", "TD3BCLoss", "TD3Loss", "ValueEstimators", "default_value_kwargs", "distance_loss", "group_optimizers", "hold_out_net", "hold_out_params", "QMixerLoss", "next_state_value", "GAE", "TD0Estimator", "TD1Estimator", "TDLambdaEstimator", "ValueEstimatorBase", "generalized_advantage_estimate", "reward2go", "td0_advantage_estimate", "td0_return_estimate", "td1_advantage_estimate", "td1_return_estimate", "td_lambda_advantage_estimate", "td_lambda_return_estimate", "vec_generalized_advantage_estimate", "vec_td1_advantage_estimate", "vec_td1_return_estimate", "vec_td_lambda_advantage_estimate", "vec_td_lambda_return_estimate", "PixelRenderTransform", "TensorDictRecorder", "VideoRecorder", "Logger", "CSVLogger", "generate_exp_name", "get_logger", "MLFlowLogger", "TensorboardLogger", "WandbLogger", "set_auto_unwrap_transformed_env", "BatchSubSampler", "ClearCudaCache", "CountFramesLog", "LogScalar", "LogValidationReward", "OptimizerHook", "ReplayBufferTrainer", "RewardNormalizer", "SelectKeys", "Trainer", "TrainerHookBase", "UpdateWeights", "correct_for_frame_skip", "get_stats_random_rollout", "make_collector_offpolicy", "make_collector_onpolicy", "make_dqn_loss", "make_replay_buffer", "make_target_updater", "make_trainer", "parallel_env_constructor", "sync_async_collector", "sync_sync_collector", "transformed_env_constructor", "README Tutos", "API Reference", "Knowledge Base", "torchrl.modules package", "torchrl.objectives package", "torchrl.trainers package", "torchrl._utils package", "Computation times", "TorchRL objectives: Coding a DDPG loss", "TorchRL trainer: A DQN example", "Reinforcement Learning (PPO) with TorchRL Tutorial", "Recurrent DQN: Training recurrent policies", "Exporting TorchRL modules", "Get started with Environments, TED and transforms", "Get started with TorchRL\u2019s modules", "Getting started with model optimization", "Get started with data collection and storage", "Get started with logging", "Get started with your own first training loop", "README Tutos", "Task-specific policy in multi-task environments", "Competitive Multi-Agent Reinforcement Learning (DDPG) with TorchRL Tutorial", "Multi-Agent Reinforcement Learning (PPO) with TorchRL Tutorial", "Pendulum: Writing your environment and transforms with TorchRL", "Using pretrained models", "Using Replay Buffers", "Computation times", "Introduction to TorchRL", "TorchRL envs"], "terms": {"an": [0, 1, 2, 3, 5, 8, 9, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 71, 72, 73, 75, 76, 78, 79, 80, 81, 82, 83, 87, 91, 92, 93, 94, 95, 99, 101, 102, 104, 106, 107, 108, 110, 112, 113, 114, 116, 117, 118, 121, 122, 123, 124, 125, 127, 128, 129, 130, 134, 135, 141, 142, 144, 147, 148, 149, 150, 151, 153, 156, 157, 158, 159, 163, 164, 176, 177, 179, 180, 182, 183, 185, 190, 192, 193, 196, 200, 205, 206, 210, 211, 212, 213, 215, 224, 225, 226, 227, 228, 230, 231, 232, 235, 238, 239, 240, 242, 245, 249, 250, 252, 253, 254, 255, 257, 262, 263, 265, 267, 269, 270, 271, 275, 276, 278, 286, 291, 292, 294, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 314, 315, 319, 323, 324, 325, 326, 327, 329, 332, 333, 334, 335, 336, 337, 340, 341, 342, 344, 345, 346, 347, 350, 357, 359, 360, 361, 362, 363, 377, 379, 382, 386, 392, 393, 397, 398, 401, 408, 409, 410, 411, 414, 415, 416, 420, 421, 424, 426, 427, 428, 429, 430, 432, 433, 434, 436, 437, 439, 440], "open": [0, 5, 7, 55, 57, 64, 78, 92, 243, 421, 433, 434, 439], "sourc": [0, 1, 4, 7, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 440], "reinforc": [0, 1, 3, 9, 139, 140, 183, 240, 247, 252, 253, 254, 255, 259, 286, 307, 324, 325, 327, 330, 331, 332, 334, 339, 340, 346, 347, 348, 349, 413, 419, 421, 425, 426, 431, 435, 438, 439], "learn": [0, 1, 3, 7, 8, 9, 20, 49, 124, 139, 140, 144, 147, 156, 183, 240, 247, 252, 253, 254, 255, 259, 272, 279, 285, 286, 307, 324, 325, 327, 330, 331, 332, 334, 338, 339, 340, 345, 346, 347, 348, 349, 413, 416, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 435, 437, 438, 439, 440], "rl": [0, 1, 2, 3, 5, 8, 10, 14, 15, 16, 19, 141, 183, 224, 279, 301, 310, 318, 324, 326, 341, 342, 344, 346, 388, 412, 414, 415, 416, 417, 420, 421, 422, 428, 431, 433, 434, 436, 437, 440], "librari": [0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 14, 15, 20, 21, 22, 58, 74, 121, 122, 123, 132, 142, 166, 413, 414, 415, 416, 418, 420, 421, 422, 424, 425, 426, 428, 433, 434, 435, 440], "pytorch": [0, 1, 2, 3, 25, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 161, 162, 163, 183, 227, 228, 247, 263, 267, 278, 279, 397, 412, 414, 415, 417, 420, 422, 423, 427, 431, 433, 434, 435, 439, 440], "you": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 14, 15, 29, 36, 41, 49, 59, 60, 66, 71, 74, 118, 121, 124, 128, 132, 135, 138, 139, 140, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 161, 162, 173, 183, 203, 231, 239, 240, 242, 247, 267, 285, 314, 386, 387, 414, 415, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 439, 440], "can": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 92, 93, 98, 99, 101, 105, 106, 107, 112, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 161, 162, 163, 171, 173, 175, 176, 177, 179, 180, 182, 183, 186, 187, 188, 190, 192, 193, 194, 197, 200, 204, 205, 206, 210, 211, 215, 218, 222, 223, 224, 225, 229, 230, 231, 232, 233, 235, 237, 239, 240, 242, 243, 246, 248, 249, 250, 252, 262, 263, 265, 266, 267, 269, 271, 272, 273, 275, 276, 277, 279, 286, 295, 297, 301, 306, 307, 309, 310, 311, 312, 313, 314, 315, 316, 317, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 340, 341, 342, 344, 345, 346, 347, 349, 350, 357, 358, 359, 360, 361, 362, 363, 377, 379, 386, 387, 392, 409, 410, 411, 414, 415, 416, 417, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 439, 440], "directli": [0, 4, 8, 14, 15, 16, 19, 20, 21, 22, 23, 25, 101, 118, 119, 120, 121, 124, 127, 128, 135, 141, 147, 148, 151, 156, 157, 158, 176, 177, 179, 180, 182, 183, 184, 187, 188, 191, 194, 195, 196, 198, 200, 201, 202, 206, 209, 211, 212, 213, 215, 218, 219, 222, 223, 224, 225, 226, 227, 229, 230, 231, 233, 235, 236, 238, 239, 240, 242, 314, 342, 349, 411, 421, 422, 424, 425, 433, 434, 435, 437], "from": [0, 1, 3, 4, 5, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 88, 92, 93, 94, 95, 98, 99, 101, 104, 105, 106, 107, 108, 110, 112, 114, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 133, 134, 135, 138, 139, 140, 141, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 168, 173, 174, 175, 176, 177, 179, 180, 182, 183, 184, 186, 188, 190, 191, 192, 193, 194, 195, 200, 201, 202, 203, 206, 208, 210, 211, 212, 213, 214, 215, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 237, 238, 239, 240, 242, 243, 245, 246, 247, 248, 249, 252, 253, 254, 255, 256, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 282, 284, 285, 286, 287, 288, 294, 295, 296, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 321, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 340, 341, 342, 344, 345, 346, 347, 349, 350, 352, 357, 358, 359, 360, 361, 362, 365, 377, 378, 379, 388, 394, 397, 400, 401, 405, 407, 408, 411, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440], "pypi": [0, 2, 439], "see": [0, 1, 2, 3, 6, 7, 8, 9, 14, 15, 16, 19, 20, 21, 22, 23, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 56, 59, 60, 61, 62, 63, 66, 67, 68, 71, 72, 73, 74, 76, 78, 79, 80, 81, 82, 83, 88, 93, 99, 101, 106, 107, 118, 121, 124, 128, 131, 134, 135, 139, 140, 142, 145, 146, 147, 148, 149, 150, 151, 153, 156, 157, 158, 159, 160, 161, 162, 183, 187, 188, 204, 210, 225, 228, 230, 231, 232, 235, 237, 239, 240, 241, 242, 247, 248, 249, 250, 263, 265, 266, 267, 269, 270, 276, 277, 278, 285, 287, 295, 296, 300, 302, 304, 310, 313, 314, 327, 338, 342, 349, 379, 386, 394, 415, 416, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 433, 434, 435, 437, 439, 440], "more": [0, 1, 2, 3, 4, 6, 8, 9, 14, 15, 16, 19, 20, 21, 22, 23, 25, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 56, 59, 60, 61, 62, 63, 66, 67, 68, 71, 72, 73, 74, 76, 78, 79, 80, 81, 82, 83, 99, 101, 112, 118, 121, 124, 127, 128, 129, 131, 132, 134, 135, 139, 140, 145, 146, 147, 148, 149, 150, 151, 153, 156, 157, 158, 159, 160, 161, 162, 183, 228, 231, 235, 240, 241, 242, 243, 244, 245, 248, 259, 267, 270, 278, 301, 306, 307, 313, 314, 318, 324, 334, 342, 344, 359, 364, 372, 386, 393, 414, 415, 416, 417, 420, 421, 422, 423, 424, 425, 426, 427, 428, 432, 433, 434, 435, 436, 439, 440], "about": [0, 3, 5, 7, 9, 20, 21, 22, 27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 67, 68, 74, 76, 79, 80, 81, 82, 83, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 415, 416, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 433, 434, 435, 437, 439, 440], "instruct": [0, 6, 7, 10, 24, 192, 194, 416, 420, 421, 422, 423, 433, 434, 437], "dedic": [0, 1, 2, 3, 20, 21, 22, 23, 44, 63, 72, 73, 101, 147, 156, 302, 303, 304, 415, 420, 425, 427, 428, 430, 432, 434], "section": [0, 2, 3, 4, 26, 124, 263, 267, 421, 424, 425, 430, 433, 434], "below": [0, 2, 3, 7, 14, 15, 16, 19, 20, 21, 22, 23, 29, 36, 41, 49, 59, 60, 63, 66, 71, 72, 73, 79, 88, 107, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 187, 188, 204, 210, 225, 230, 231, 232, 235, 237, 242, 249, 250, 263, 266, 267, 270, 276, 295, 310, 313, 394, 420, 421, 422, 423, 424, 425, 433, 435], "pip": [0, 10, 424, 425, 426, 427, 428, 429, 430, 434, 439, 440], "provid": [0, 1, 2, 3, 5, 8, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 33, 34, 35, 36, 41, 42, 44, 45, 47, 49, 53, 55, 56, 57, 59, 60, 61, 62, 63, 64, 66, 68, 71, 72, 73, 77, 78, 85, 88, 92, 93, 95, 99, 100, 101, 104, 106, 107, 115, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 133, 134, 135, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 153, 156, 157, 158, 159, 160, 174, 175, 176, 180, 182, 183, 184, 185, 186, 189, 190, 193, 197, 200, 205, 206, 208, 210, 211, 214, 215, 218, 219, 224, 225, 226, 229, 230, 232, 234, 235, 237, 238, 239, 240, 242, 243, 249, 250, 256, 257, 259, 262, 263, 264, 265, 267, 268, 269, 270, 271, 273, 274, 275, 276, 297, 301, 305, 307, 309, 310, 311, 312, 314, 317, 324, 325, 326, 327, 328, 329, 331, 333, 334, 335, 340, 341, 342, 344, 345, 346, 347, 349, 350, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 383, 388, 394, 401, 407, 414, 415, 416, 417, 420, 421, 422, 423, 424, 425, 426, 428, 429, 432, 433, 434, 435, 436, 437, 439, 440], "python": [0, 3, 5, 6, 7, 10, 14, 15, 23, 56, 61, 62, 63, 66, 71, 72, 73, 78, 101, 143, 159, 160, 173, 263, 264, 265, 267, 268, 269, 273, 274, 417, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 440], "first": [0, 1, 2, 3, 4, 5, 7, 8, 13, 14, 15, 16, 19, 20, 21, 22, 23, 27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 59, 67, 68, 76, 78, 79, 80, 81, 82, 83, 92, 94, 99, 106, 107, 112, 114, 118, 121, 124, 127, 128, 129, 134, 135, 147, 148, 151, 156, 157, 158, 179, 180, 183, 184, 188, 197, 204, 206, 210, 211, 227, 228, 232, 235, 240, 243, 250, 257, 263, 265, 267, 269, 270, 273, 274, 276, 278, 281, 301, 305, 306, 307, 310, 311, 313, 314, 326, 336, 341, 342, 344, 378, 379, 396, 415, 419, 420, 421, 422, 423, 424, 425, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440], "low": [0, 3, 30, 33, 60, 71, 76, 79, 99, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 168, 176, 186, 192, 200, 203, 225, 233, 293, 294, 295, 305, 307, 310, 314, 317, 420, 421, 422, 424, 433, 434, 435, 439], "high": [0, 3, 9, 30, 33, 55, 57, 64, 72, 78, 79, 99, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 168, 176, 186, 192, 200, 203, 205, 225, 233, 293, 294, 295, 305, 307, 310, 314, 317, 359, 364, 372, 420, 421, 422, 433, 434, 435, 437, 439], "level": [0, 2, 3, 4, 24, 33, 34, 42, 56, 61, 62, 63, 68, 72, 73, 101, 127, 129, 183, 223, 231, 265, 269, 341, 420, 421, 424, 428, 439], "abstract": [0, 1, 3, 8, 17, 18, 75, 76, 116, 124, 207, 271, 363, 389, 398, 417, 422, 424, 435, 439], "ar": [0, 1, 2, 3, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 88, 89, 90, 92, 93, 94, 95, 97, 101, 104, 105, 106, 107, 108, 110, 112, 114, 118, 121, 124, 125, 127, 128, 129, 134, 135, 138, 139, 140, 141, 144, 147, 148, 149, 150, 151, 153, 156, 157, 158, 159, 160, 161, 162, 168, 174, 175, 176, 178, 179, 180, 182, 183, 186, 187, 188, 190, 191, 192, 193, 194, 196, 197, 200, 202, 203, 204, 205, 208, 210, 215, 218, 222, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 242, 244, 246, 247, 255, 257, 262, 263, 264, 265, 267, 268, 269, 271, 273, 274, 275, 276, 277, 279, 282, 287, 290, 300, 305, 306, 309, 310, 311, 313, 314, 315, 316, 317, 321, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 344, 345, 346, 347, 349, 350, 353, 354, 357, 358, 359, 360, 361, 362, 363, 377, 386, 387, 394, 397, 407, 411, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 439, 440], "intend": [0, 7, 14, 15, 16, 19, 20, 21, 22, 23, 27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 67, 68, 76, 77, 79, 80, 81, 82, 83, 182, 192, 297, 342, 415, 439], "effici": [0, 1, 2, 4, 8, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 263, 279, 327, 415, 420, 421, 422, 423, 424, 427, 428, 430, 432, 433, 434, 436, 437, 439], "modular": [0, 316, 424, 437, 439], "document": [0, 2, 5, 7, 11, 20, 21, 23, 29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 145, 146, 147, 148, 151, 156, 157, 158, 159, 160, 232, 242, 412, 421, 423, 424, 425, 428, 431, 439], "properli": [0, 1, 3, 79, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 174, 188, 265, 269, 422, 429, 433, 434, 435, 439], "test": [0, 3, 5, 118, 119, 120, 121, 124, 128, 133, 134, 135, 139, 140, 147, 148, 151, 156, 157, 158, 163, 230, 235, 392, 407, 422, 423, 424, 436, 439], "The": [0, 1, 3, 4, 5, 7, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 88, 90, 98, 99, 101, 104, 106, 107, 108, 112, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 132, 133, 134, 135, 142, 143, 145, 146, 147, 148, 149, 150, 151, 153, 156, 157, 158, 159, 161, 162, 163, 171, 174, 175, 176, 179, 180, 182, 183, 187, 188, 190, 193, 194, 195, 200, 203, 204, 206, 208, 210, 215, 217, 218, 219, 222, 223, 224, 225, 227, 230, 231, 232, 235, 237, 238, 239, 240, 242, 244, 245, 246, 247, 252, 253, 254, 255, 256, 259, 263, 264, 265, 267, 268, 269, 271, 272, 273, 274, 275, 279, 283, 285, 286, 288, 289, 290, 300, 301, 302, 305, 306, 307, 309, 310, 311, 312, 313, 314, 316, 318, 319, 320, 321, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 344, 345, 346, 347, 349, 350, 357, 358, 359, 360, 361, 362, 363, 365, 377, 379, 381, 384, 385, 386, 387, 388, 393, 407, 409, 410, 413, 415, 416, 417, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 433, 434, 435, 436, 437, 439, 440], "code": [0, 3, 5, 7, 8, 14, 15, 60, 66, 118, 121, 124, 128, 134, 135, 147, 148, 151, 156, 157, 158, 210, 232, 235, 245, 263, 264, 267, 268, 310, 314, 316, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440], "aim": [0, 2, 3, 7, 44, 67, 68, 210, 235, 237, 270, 400, 414, 415, 416, 420, 421, 439], "support": [0, 1, 3, 13, 14, 15, 16, 19, 20, 21, 22, 23, 36, 55, 57, 59, 64, 71, 78, 88, 92, 94, 108, 110, 114, 115, 117, 118, 119, 120, 121, 127, 129, 133, 142, 144, 147, 149, 153, 166, 180, 183, 194, 200, 206, 225, 226, 229, 233, 240, 259, 283, 285, 294, 297, 306, 307, 310, 313, 316, 334, 342, 359, 360, 361, 362, 384, 413, 415, 417, 422, 423, 425, 426, 434, 435, 437, 439], "research": [0, 7, 9, 139, 140, 245, 439], "most": [0, 1, 2, 3, 7, 8, 14, 15, 49, 51, 106, 107, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 163, 192, 238, 420, 422, 424, 425, 426, 427, 428, 429, 430, 435, 439, 440], "written": [0, 1, 2, 3, 38, 55, 56, 57, 59, 61, 62, 63, 64, 69, 72, 73, 77, 78, 90, 92, 99, 101, 106, 107, 118, 121, 122, 123, 124, 127, 128, 129, 130, 135, 147, 148, 151, 153, 156, 157, 158, 174, 175, 176, 183, 194, 197, 202, 203, 218, 223, 226, 227, 232, 238, 242, 243, 248, 286, 301, 310, 313, 314, 318, 324, 326, 341, 344, 346, 358, 377, 378, 379, 415, 416, 417, 420, 423, 424, 426, 432, 435, 439], "highli": [0, 2, 425, 439, 440], "wai": [0, 1, 2, 3, 4, 101, 112, 132, 183, 210, 213, 230, 231, 237, 238, 265, 267, 269, 344, 359, 360, 361, 362, 415, 420, 421, 422, 424, 425, 427, 428, 432, 433, 434, 435, 436, 437, 439, 440], "easili": [0, 1, 2, 3, 7, 27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 67, 68, 76, 79, 80, 81, 82, 83, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 416, 420, 421, 422, 425, 426, 427, 430, 433, 434, 439, 440], "swap": [0, 1, 3, 127, 238, 422, 424, 436, 439], "compon": [0, 1, 2, 3, 56, 60, 61, 62, 63, 72, 73, 92, 93, 94, 95, 101, 108, 110, 114, 259, 288, 306, 307, 312, 324, 325, 326, 332, 333, 334, 335, 336, 337, 340, 341, 342, 344, 345, 346, 347, 350, 357, 393, 397, 420, 421, 422, 423, 424, 426, 427, 430, 432, 433, 434, 435, 436, 439], "transform": [0, 1, 4, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 36, 44, 49, 56, 58, 61, 62, 63, 65, 72, 73, 74, 89, 90, 97, 101, 110, 115, 118, 121, 124, 125, 128, 135, 139, 140, 147, 148, 149, 150, 151, 156, 157, 158, 161, 162, 169, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 248, 251, 252, 256, 259, 260, 265, 269, 284, 287, 288, 294, 296, 305, 308, 309, 317, 320, 321, 323, 330, 343, 377, 379, 394, 411, 413, 419, 421, 423, 424, 426, 428, 429, 430, 431, 436, 438], "them": [0, 2, 3, 7, 9, 11, 14, 15, 16, 19, 20, 21, 22, 23, 29, 33, 34, 36, 41, 42, 56, 58, 59, 60, 61, 62, 63, 66, 68, 71, 72, 73, 101, 112, 117, 118, 121, 124, 125, 128, 132, 135, 138, 139, 140, 147, 148, 149, 150, 151, 156, 157, 158, 161, 162, 190, 193, 200, 203, 225, 229, 232, 233, 239, 240, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 277, 280, 281, 284, 286, 289, 290, 292, 296, 297, 305, 307, 309, 312, 317, 320, 341, 379, 420, 421, 423, 424, 425, 426, 428, 429, 432, 433, 434, 435, 436, 437, 439, 440], "write": [0, 2, 3, 8, 25, 44, 49, 55, 56, 57, 58, 61, 62, 63, 64, 72, 73, 77, 78, 99, 101, 106, 110, 117, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 175, 177, 179, 180, 182, 183, 184, 186, 187, 188, 191, 194, 195, 196, 198, 201, 202, 208, 209, 211, 212, 213, 215, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 234, 235, 236, 238, 239, 242, 301, 313, 314, 316, 318, 327, 328, 329, 331, 332, 333, 340, 345, 347, 349, 350, 358, 363, 379, 415, 417, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440], "new": [0, 1, 2, 3, 4, 8, 14, 15, 16, 19, 23, 25, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 66, 67, 68, 71, 72, 73, 76, 78, 79, 80, 81, 82, 83, 98, 99, 101, 105, 118, 121, 124, 128, 135, 142, 147, 148, 151, 154, 155, 156, 157, 158, 174, 175, 180, 218, 222, 231, 232, 239, 240, 242, 257, 263, 265, 269, 286, 313, 314, 319, 324, 325, 326, 329, 332, 333, 334, 335, 336, 337, 340, 341, 342, 344, 345, 346, 347, 350, 357, 386, 416, 420, 422, 425, 427, 433, 434, 435, 439, 440], "ones": [0, 2, 25, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 56, 59, 60, 63, 66, 67, 68, 71, 72, 73, 76, 79, 80, 81, 82, 83, 106, 107, 118, 121, 124, 128, 135, 147, 148, 149, 150, 151, 152, 156, 157, 158, 184, 187, 190, 191, 193, 206, 210, 215, 222, 225, 231, 232, 235, 237, 240, 242, 247, 273, 274, 285, 297, 313, 324, 325, 327, 328, 340, 344, 345, 347, 349, 350, 365, 420, 422, 424, 433, 434, 435, 437, 439, 440], "littl": [0, 1, 3, 74, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 232, 247, 324, 326, 341, 344, 346, 422, 423, 424, 428, 437, 439, 440], "effort": [0, 3, 435, 437, 439], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 89, 90, 92, 93, 94, 95, 97, 98, 99, 101, 104, 105, 106, 107, 108, 110, 112, 114, 115, 117, 118, 119, 120, 121, 124, 125, 127, 128, 129, 130, 133, 134, 135, 138, 139, 140, 141, 144, 147, 148, 149, 150, 151, 152, 156, 157, 158, 159, 161, 162, 163, 171, 173, 174, 175, 176, 177, 179, 180, 182, 183, 184, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 198, 200, 201, 202, 204, 206, 209, 210, 211, 212, 213, 215, 218, 219, 220, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 288, 289, 290, 292, 294, 295, 297, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 319, 320, 321, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349, 350, 357, 359, 360, 361, 362, 363, 377, 378, 386, 387, 388, 390, 392, 394, 397, 399, 400, 401, 407, 411, 414, 415, 416, 417, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 439, 440], "repo": [0, 6, 183, 226, 235, 414, 434, 439], "attempt": [0, 13, 14, 15, 16, 19, 20, 21, 22, 23, 29, 36, 41, 49, 59, 60, 66, 71, 106, 107, 118, 121, 122, 123, 124, 127, 128, 129, 130, 135, 147, 148, 151, 153, 156, 157, 158, 174, 242, 247, 314, 329, 332, 340, 357, 416, 427, 439], "align": [0, 263, 267, 439], "exist": [0, 1, 2, 3, 4, 20, 23, 29, 36, 41, 44, 49, 55, 57, 59, 60, 64, 66, 71, 77, 78, 92, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 184, 191, 230, 232, 242, 243, 257, 314, 327, 347, 401, 411, 433, 434, 439, 440], "ecosystem": [0, 424, 428, 439], "ha": [0, 1, 2, 3, 4, 5, 7, 8, 10, 12, 14, 15, 16, 19, 20, 21, 22, 23, 25, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 68, 71, 72, 73, 76, 78, 79, 80, 81, 82, 83, 92, 94, 101, 104, 106, 112, 114, 118, 121, 124, 125, 128, 132, 135, 139, 140, 147, 148, 151, 156, 157, 158, 161, 162, 180, 183, 204, 223, 224, 225, 226, 227, 229, 230, 231, 232, 242, 244, 263, 265, 267, 269, 275, 277, 294, 307, 309, 314, 324, 327, 341, 342, 344, 346, 379, 416, 420, 421, 422, 423, 424, 425, 428, 429, 432, 433, 434, 435, 436, 437, 439, 440], "dataset": [0, 40, 44, 55, 56, 57, 58, 63, 64, 65, 70, 72, 73, 77, 78, 88, 91, 99, 101, 104, 106, 107, 144, 239, 379, 413, 420, 421, 425, 436, 437, 439, 440], "pillar": [0, 439], "environ": [0, 2, 5, 8, 10, 14, 15, 16, 19, 20, 21, 22, 23, 27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 60, 61, 66, 67, 68, 76, 78, 79, 80, 81, 82, 83, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 170, 176, 177, 179, 180, 182, 183, 184, 188, 190, 191, 192, 193, 198, 204, 205, 206, 210, 211, 212, 215, 218, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 235, 238, 239, 240, 243, 246, 248, 265, 269, 271, 272, 309, 331, 335, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 387, 388, 390, 392, 400, 401, 402, 403, 407, 408, 409, 410, 411, 413, 414, 415, 416, 419, 424, 426, 427, 428, 429, 431, 436, 437, 438], "model": [0, 1, 3, 8, 9, 14, 15, 16, 19, 20, 21, 22, 23, 26, 29, 35, 36, 41, 49, 55, 57, 59, 60, 64, 65, 66, 71, 77, 78, 118, 121, 124, 128, 135, 141, 147, 148, 151, 156, 157, 158, 183, 190, 210, 225, 235, 237, 241, 242, 249, 250, 251, 256, 258, 270, 271, 272, 276, 277, 284, 287, 296, 302, 303, 304, 308, 313, 319, 321, 324, 325, 326, 327, 329, 330, 331, 332, 335, 336, 337, 340, 341, 342, 344, 345, 346, 347, 357, 397, 402, 403, 404, 413, 414, 416, 417, 419, 422, 425, 428, 431, 433, 434, 435, 437, 438, 440], "data": [0, 3, 8, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 133, 134, 135, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 158, 159, 160, 163, 168, 175, 177, 180, 182, 183, 190, 191, 193, 195, 197, 200, 202, 206, 212, 215, 222, 223, 229, 231, 232, 233, 238, 240, 242, 246, 247, 259, 262, 265, 269, 272, 275, 276, 286, 288, 297, 300, 301, 306, 309, 310, 311, 313, 314, 316, 317, 318, 324, 325, 327, 328, 329, 331, 332, 333, 340, 344, 345, 346, 347, 349, 350, 357, 359, 360, 361, 362, 363, 377, 379, 386, 388, 394, 397, 399, 402, 407, 409, 410, 411, 413, 415, 416, 417, 419, 423, 424, 425, 426, 427, 431, 435, 436, 437, 438, 440], "util": [0, 3, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 29, 36, 41, 49, 59, 60, 63, 65, 66, 71, 106, 107, 118, 119, 120, 121, 124, 128, 133, 134, 135, 140, 147, 148, 149, 150, 151, 156, 157, 158, 164, 183, 210, 215, 225, 237, 242, 245, 248, 249, 250, 256, 263, 265, 267, 269, 320, 321, 322, 323, 342, 407, 413, 418, 420, 422, 424, 426, 427, 428, 434, 435, 437, 439, 440], "e": [0, 1, 2, 3, 7, 8, 10, 14, 15, 16, 19, 20, 21, 22, 23, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 59, 60, 64, 66, 67, 68, 71, 76, 78, 79, 80, 81, 82, 83, 92, 94, 98, 99, 112, 114, 118, 121, 124, 125, 128, 135, 147, 148, 151, 156, 157, 158, 161, 163, 180, 182, 184, 187, 188, 189, 197, 200, 203, 204, 206, 210, 218, 225, 227, 230, 231, 232, 235, 237, 242, 243, 263, 265, 266, 267, 269, 272, 276, 288, 294, 295, 300, 305, 307, 309, 310, 312, 313, 314, 324, 326, 327, 328, 332, 333, 340, 341, 344, 345, 346, 347, 349, 350, 358, 359, 360, 361, 362, 377, 388, 400, 410, 415, 416, 421, 422, 424, 426, 427, 429, 433, 434, 436, 437, 439, 440], "g": [0, 1, 2, 3, 7, 8, 10, 14, 15, 16, 19, 20, 21, 22, 23, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 59, 60, 64, 66, 67, 68, 71, 76, 78, 79, 80, 81, 82, 83, 112, 118, 121, 124, 125, 128, 135, 147, 148, 151, 156, 157, 158, 161, 163, 180, 182, 184, 187, 197, 200, 203, 206, 210, 218, 225, 227, 230, 231, 232, 235, 237, 242, 243, 263, 265, 266, 267, 268, 269, 272, 276, 294, 295, 305, 310, 313, 314, 327, 347, 358, 368, 369, 370, 371, 373, 374, 375, 376, 377, 410, 415, 416, 421, 422, 424, 426, 429, 433, 434, 435, 436, 437, 439, 440], "collector": [0, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 38, 49, 56, 61, 62, 63, 65, 69, 72, 73, 101, 106, 107, 118, 121, 124, 128, 135, 147, 148, 151, 152, 156, 157, 158, 180, 183, 215, 223, 242, 247, 265, 269, 286, 394, 397, 399, 402, 403, 407, 409, 410, 413, 416, 417, 424, 437, 440], "contain": [0, 2, 3, 7, 13, 14, 15, 16, 19, 20, 21, 22, 23, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 86, 91, 98, 99, 101, 102, 104, 106, 107, 108, 113, 116, 117, 118, 121, 124, 128, 135, 141, 147, 148, 151, 156, 157, 158, 174, 175, 176, 183, 187, 190, 193, 200, 210, 222, 225, 230, 231, 232, 235, 237, 238, 239, 240, 242, 246, 249, 250, 263, 264, 267, 268, 270, 272, 275, 276, 301, 306, 307, 310, 312, 313, 314, 318, 321, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 340, 341, 342, 344, 345, 346, 347, 349, 350, 357, 358, 359, 360, 361, 362, 363, 365, 383, 388, 400, 407, 408, 409, 410, 411, 415, 416, 417, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 433, 434, 435, 436, 437, 439, 440], "etc": [0, 2, 3, 7, 8, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 59, 60, 66, 67, 68, 71, 76, 79, 80, 81, 82, 83, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 202, 222, 232, 242, 243, 270, 276, 294, 416, 421, 422, 428, 437, 439, 440], "have": [0, 1, 2, 3, 5, 6, 7, 8, 9, 14, 15, 19, 20, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 56, 59, 60, 61, 62, 63, 65, 66, 67, 68, 71, 72, 73, 76, 77, 79, 80, 81, 82, 83, 101, 105, 108, 118, 121, 124, 128, 135, 147, 148, 149, 150, 151, 156, 157, 158, 163, 168, 171, 175, 176, 179, 183, 190, 193, 194, 202, 205, 206, 222, 223, 225, 229, 230, 231, 232, 239, 240, 242, 244, 247, 249, 250, 270, 275, 276, 277, 286, 297, 309, 315, 316, 324, 326, 341, 344, 346, 349, 353, 354, 357, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 379, 388, 397, 415, 416, 417, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 439, 440], "few": [0, 2, 8, 107, 128, 379, 388, 422, 423, 426, 433, 434, 437, 439, 440], "depend": [0, 1, 2, 3, 4, 7, 8, 13, 14, 15, 16, 19, 20, 21, 22, 23, 30, 55, 57, 79, 118, 121, 124, 127, 128, 129, 130, 135, 147, 148, 151, 153, 156, 157, 158, 161, 162, 190, 193, 314, 318, 344, 381, 415, 420, 422, 423, 433, 434, 435, 439, 440], "possibl": [0, 1, 2, 3, 4, 25, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 59, 60, 66, 67, 68, 71, 76, 79, 80, 81, 82, 83, 93, 99, 106, 112, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 176, 187, 210, 225, 230, 231, 232, 235, 237, 242, 249, 250, 263, 264, 267, 268, 313, 377, 392, 397, 415, 420, 422, 423, 424, 426, 428, 429, 433, 434, 435, 437, 439, 440], "standard": [0, 2, 3, 51, 121, 206, 217, 239, 240, 244, 245, 246, 260, 272, 278, 279, 284, 305, 326, 341, 344, 349, 350, 359, 360, 361, 362, 420, 421, 425, 426, 434, 437, 439], "numpi": [0, 3, 27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 67, 68, 76, 79, 80, 81, 82, 83, 118, 121, 124, 128, 129, 135, 147, 148, 151, 156, 157, 158, 200, 228, 233, 243, 397, 424, 435, 437, 439, 440], "common": [0, 1, 2, 3, 4, 76, 118, 128, 133, 177, 194, 302, 303, 304, 308, 324, 325, 326, 327, 332, 333, 340, 341, 344, 345, 346, 347, 349, 350, 407, 414, 415, 416, 417, 420, 422, 426, 429, 432, 433, 434, 435, 436, 439, 440], "openai": [0, 7, 26, 127, 129, 135, 153, 422, 435, 439, 440], "gym": [0, 1, 3, 4, 8, 14, 15, 16, 19, 23, 24, 61, 118, 121, 124, 125, 127, 128, 129, 130, 132, 135, 139, 140, 142, 143, 147, 148, 151, 153, 156, 157, 158, 161, 162, 167, 171, 173, 179, 183, 186, 194, 201, 202, 206, 208, 213, 215, 218, 225, 231, 238, 239, 242, 243, 407, 414, 420, 421, 422, 423, 425, 429, 430, 435, 436, 437], "onli": [0, 1, 2, 3, 4, 7, 14, 15, 16, 19, 20, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 56, 59, 60, 61, 62, 63, 66, 67, 68, 71, 72, 73, 76, 78, 79, 80, 81, 82, 83, 92, 94, 98, 99, 101, 106, 107, 114, 118, 121, 122, 123, 124, 127, 128, 129, 130, 132, 134, 135, 142, 143, 147, 148, 149, 150, 151, 153, 156, 157, 158, 176, 179, 183, 184, 186, 187, 188, 190, 192, 193, 197, 200, 204, 206, 210, 211, 215, 222, 223, 224, 225, 226, 230, 231, 232, 235, 237, 239, 240, 242, 243, 247, 267, 269, 275, 276, 301, 305, 306, 310, 311, 313, 314, 315, 316, 324, 326, 327, 328, 332, 333, 340, 341, 342, 344, 345, 346, 347, 348, 349, 350, 359, 360, 361, 362, 363, 379, 386, 401, 416, 417, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 432, 433, 434, 435, 437, 439, 440], "option": [0, 1, 2, 3, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 88, 92, 93, 94, 95, 98, 99, 100, 101, 102, 104, 105, 106, 107, 110, 114, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 133, 134, 135, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 156, 157, 158, 159, 160, 161, 162, 163, 168, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 189, 190, 192, 193, 194, 195, 197, 198, 200, 201, 202, 203, 204, 205, 206, 210, 211, 213, 214, 217, 218, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 265, 266, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 286, 288, 289, 290, 293, 294, 295, 297, 301, 305, 306, 307, 309, 310, 311, 312, 313, 314, 315, 317, 318, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 357, 358, 359, 360, 361, 362, 363, 365, 368, 369, 370, 371, 373, 374, 375, 376, 377, 379, 381, 384, 386, 388, 390, 391, 392, 393, 394, 395, 397, 401, 407, 409, 410, 411, 415, 423, 425, 428, 433, 434, 435, 437, 439], "On": [0, 3, 7, 20, 21, 22, 23, 33, 264, 268, 415, 421, 433, 434], "end": [0, 2, 3, 14, 15, 19, 29, 36, 41, 44, 49, 56, 59, 60, 61, 62, 63, 66, 71, 72, 73, 78, 90, 99, 101, 105, 106, 107, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 194, 200, 208, 223, 224, 230, 232, 242, 249, 250, 263, 264, 267, 268, 271, 309, 327, 347, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 439, 440], "come": [0, 1, 2, 3, 8, 14, 15, 16, 19, 20, 21, 22, 23, 44, 49, 112, 118, 121, 124, 128, 134, 135, 138, 147, 148, 151, 156, 157, 158, 190, 193, 300, 301, 302, 303, 304, 310, 318, 324, 326, 341, 344, 346, 379, 420, 421, 422, 423, 427, 428, 429, 430, 433, 434, 437, 439, 440], "set": [0, 1, 2, 3, 7, 9, 12, 14, 15, 16, 19, 20, 21, 22, 23, 27, 28, 29, 32, 33, 34, 36, 37, 41, 42, 44, 45, 46, 47, 48, 49, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 66, 67, 68, 71, 72, 73, 78, 92, 93, 94, 101, 105, 108, 114, 118, 121, 124, 126, 128, 129, 134, 135, 139, 140, 141, 147, 148, 149, 150, 151, 156, 157, 158, 161, 162, 163, 172, 173, 175, 177, 179, 180, 183, 184, 187, 190, 193, 200, 201, 202, 203, 210, 215, 223, 224, 225, 226, 230, 231, 232, 235, 237, 239, 240, 242, 243, 263, 265, 267, 269, 271, 275, 276, 283, 285, 286, 294, 300, 305, 313, 314, 326, 327, 333, 338, 341, 342, 344, 347, 363, 379, 387, 388, 392, 394, 403, 411, 414, 415, 416, 418, 420, 421, 422, 423, 424, 426, 427, 428, 432, 433, 434, 435, 436, 437, 439, 440], "re": [0, 2, 3, 8, 29, 36, 41, 44, 49, 56, 59, 60, 61, 62, 63, 66, 71, 72, 73, 78, 101, 105, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 197, 242, 269, 273, 274, 277, 310, 314, 386, 417, 420, 422, 423, 425, 427, 432, 433, 435, 439, 440], "usabl": [0, 417, 423, 439], "function": [0, 2, 3, 8, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 92, 93, 94, 95, 101, 108, 110, 114, 118, 121, 124, 125, 128, 129, 135, 147, 148, 151, 156, 157, 158, 163, 171, 173, 174, 175, 179, 180, 190, 193, 200, 202, 229, 230, 232, 233, 239, 240, 242, 243, 244, 245, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 273, 274, 275, 276, 277, 280, 281, 282, 284, 286, 289, 290, 292, 295, 297, 302, 303, 304, 305, 307, 309, 310, 312, 313, 314, 316, 317, 318, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 340, 341, 342, 344, 345, 346, 347, 349, 350, 351, 352, 353, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 397, 407, 413, 415, 420, 423, 424, 425, 426, 429, 432, 435, 437, 440], "cost": [0, 2, 32, 93, 324, 326, 341, 344, 346, 416, 420, 421, 424, 433, 434, 435, 437], "return": [0, 2, 3, 7, 8, 12, 14, 15, 16, 19, 20, 21, 22, 23, 25, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 88, 91, 93, 99, 101, 102, 104, 106, 107, 110, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 133, 134, 135, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 151, 153, 156, 157, 158, 161, 162, 165, 166, 167, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 246, 247, 250, 251, 252, 253, 254, 255, 257, 259, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 282, 284, 287, 289, 290, 293, 294, 295, 296, 298, 301, 302, 303, 304, 305, 309, 310, 312, 313, 314, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 344, 345, 346, 347, 349, 350, 353, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 379, 383, 387, 397, 400, 402, 407, 408, 409, 410, 411, 413, 415, 417, 420, 421, 422, 424, 426, 427, 429, 432, 433, 434, 435, 436, 437, 439, 440], "process": [0, 1, 3, 4, 5, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 29, 36, 41, 49, 55, 56, 57, 59, 60, 63, 64, 66, 71, 72, 73, 74, 77, 78, 94, 98, 99, 102, 106, 114, 118, 121, 124, 125, 128, 132, 135, 138, 142, 147, 148, 149, 150, 151, 156, 157, 158, 182, 183, 190, 193, 200, 225, 228, 230, 239, 240, 242, 265, 269, 275, 276, 286, 307, 312, 413, 417, 420, 421, 423, 424, 425, 433, 434, 435, 436, 437, 439, 440], "good": [0, 1, 4, 9, 147, 420, 422, 423, 424, 426, 434, 439, 440], "runtim": [0, 2, 3, 25, 29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242, 435], "perform": [0, 1, 2, 3, 4, 8, 13, 14, 15, 16, 19, 20, 21, 22, 23, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 59, 60, 65, 66, 67, 68, 71, 76, 77, 79, 80, 81, 82, 83, 118, 121, 122, 123, 124, 127, 128, 129, 130, 134, 135, 147, 148, 151, 153, 156, 157, 158, 161, 162, 164, 190, 193, 200, 205, 227, 230, 232, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 277, 280, 281, 284, 285, 286, 289, 290, 292, 297, 305, 307, 309, 312, 317, 320, 326, 327, 336, 344, 347, 392, 397, 416, 420, 421, 422, 423, 424, 425, 428, 430, 432, 433, 434, 435, 440], "To": [0, 1, 2, 3, 4, 6, 7, 8, 9, 14, 15, 17, 18, 20, 21, 22, 29, 36, 41, 49, 56, 59, 60, 61, 62, 63, 65, 66, 71, 72, 73, 90, 99, 101, 106, 107, 110, 117, 118, 119, 120, 121, 124, 127, 128, 129, 133, 134, 135, 138, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 161, 183, 188, 223, 225, 239, 242, 248, 265, 269, 286, 302, 303, 304, 314, 327, 333, 338, 342, 349, 379, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 415, 416, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 433, 434, 435, 436, 437, 439, 440], "read": [0, 2, 3, 7, 25, 33, 34, 38, 42, 56, 58, 61, 62, 63, 65, 68, 69, 72, 73, 92, 93, 94, 95, 98, 101, 108, 110, 114, 118, 121, 124, 127, 128, 129, 135, 147, 148, 151, 156, 157, 158, 175, 176, 177, 179, 180, 182, 183, 184, 186, 187, 188, 190, 191, 192, 194, 195, 196, 197, 198, 201, 202, 208, 209, 211, 212, 213, 215, 218, 219, 220, 222, 223, 224, 225, 226, 227, 229, 230, 231, 234, 235, 236, 238, 239, 242, 248, 282, 301, 302, 303, 304, 306, 309, 310, 313, 314, 316, 318, 319, 324, 325, 326, 332, 333, 334, 335, 336, 337, 340, 341, 342, 344, 345, 346, 347, 350, 357, 359, 360, 361, 362, 363, 379, 392, 397, 415, 420, 421, 422, 424, 425, 426, 432, 433, 434, 435, 436, 439, 440], "philosophi": [0, 9], "capabl": [0, 1, 3, 7, 9, 11, 23, 25, 417, 420, 425, 428, 432, 436, 440], "beyond": [0, 44, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 424], "api": [0, 1, 2, 3, 5, 14, 15, 25, 33, 34, 36, 42, 44, 59, 68, 71, 76, 121, 124, 149, 150, 153, 210, 237, 239, 240, 247, 415, 416, 417, 424, 425, 426, 427, 428, 429, 433, 434, 435, 437, 439, 440], "check": [0, 2, 3, 4, 5, 6, 7, 9, 20, 25, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 59, 60, 63, 66, 67, 68, 71, 76, 79, 80, 81, 82, 83, 84, 86, 89, 90, 97, 106, 118, 121, 124, 125, 127, 128, 129, 135, 141, 147, 148, 151, 156, 157, 158, 163, 164, 183, 184, 188, 196, 202, 211, 225, 228, 232, 242, 243, 257, 301, 306, 307, 310, 311, 312, 313, 314, 327, 338, 349, 379, 412, 415, 416, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 440], "paper": [0, 119, 120, 122, 123, 130, 133, 134, 139, 140, 142, 143, 153, 161, 162, 210, 235, 237, 250, 263, 287, 296, 331, 339, 349, 420, 422, 433, 434], "releas": [0, 4, 7, 10, 29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 200, 230, 232, 242, 327, 347], "sync": [0, 1, 14, 15, 19, 20, 21, 22, 23, 118, 399, 407, 417, 420], "so": [0, 2, 3, 4, 6, 7, 10, 11, 29, 36, 41, 44, 49, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 71, 72, 73, 78, 101, 118, 121, 124, 128, 135, 139, 140, 147, 148, 151, 156, 157, 158, 200, 225, 230, 239, 242, 247, 315, 316, 359, 379, 420, 422, 423, 427, 430, 433, 434, 435, 440], "make": [0, 2, 3, 4, 7, 11, 29, 36, 41, 44, 49, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 71, 72, 73, 76, 78, 101, 104, 108, 110, 117, 118, 121, 124, 128, 129, 132, 134, 135, 137, 143, 147, 148, 151, 156, 157, 158, 163, 174, 176, 188, 195, 203, 206, 210, 211, 215, 219, 223, 227, 231, 235, 242, 245, 248, 263, 264, 265, 267, 268, 269, 275, 276, 278, 306, 314, 324, 326, 341, 344, 346, 359, 360, 361, 362, 377, 394, 403, 411, 415, 416, 420, 421, 422, 423, 424, 425, 426, 427, 429, 430, 432, 433, 434, 435, 436, 437, 439, 440], "sure": [0, 3, 4, 7, 36, 108, 121, 128, 132, 188, 215, 306, 411, 415, 420, 422, 423, 424, 427, 433, 434, 435, 437, 439, 440], "alwai": [0, 2, 3, 14, 15, 22, 29, 30, 36, 41, 49, 59, 60, 66, 71, 76, 79, 88, 89, 90, 97, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 202, 205, 227, 239, 240, 242, 334, 342, 415, 416, 421, 422, 423, 424, 433, 434, 435, 437], "enjoi": [0, 2, 3, 428], "latest": [0, 1, 2, 3, 10, 13, 14, 15, 16, 19, 20, 21, 22, 23, 142, 145, 146, 149, 150, 394, 422, 433, 434, 435, 439], "featur": [0, 2, 3, 4, 14, 15, 16, 19, 20, 21, 22, 23, 25, 29, 36, 53, 59, 71, 76, 77, 99, 106, 107, 118, 121, 124, 128, 135, 138, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 163, 180, 183, 197, 200, 202, 208, 225, 226, 234, 239, 245, 249, 250, 260, 261, 263, 264, 265, 267, 268, 269, 270, 275, 278, 279, 314, 321, 324, 326, 341, 344, 346, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 411, 415, 416, 420, 421, 422, 423, 424, 426, 427, 428, 430, 435, 437, 439, 440], "recent": [0, 7, 238, 240, 243, 440], "version": [0, 1, 2, 3, 6, 28, 29, 31, 34, 36, 37, 41, 42, 43, 46, 48, 49, 52, 54, 55, 57, 59, 60, 65, 66, 71, 80, 81, 82, 83, 106, 118, 121, 124, 127, 128, 129, 130, 135, 142, 143, 147, 148, 149, 151, 153, 156, 157, 158, 161, 162, 174, 183, 229, 238, 239, 240, 242, 243, 245, 265, 269, 277, 283, 304, 324, 326, 341, 342, 344, 346, 347, 359, 362, 414, 415, 416, 420, 422, 423, 424, 425, 427, 430, 433, 434, 435, 436, 440], "although": [0, 1, 3, 8, 23, 29, 36, 41, 59, 60, 66, 71, 79, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 244, 245, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 277, 280, 281, 284, 286, 289, 290, 292, 297, 305, 307, 309, 312, 317, 320, 416, 417, 420, 421, 428, 437], "core": [0, 2, 3, 8, 56, 61, 62, 63, 72, 73, 101, 417, 423, 426, 439], "guarante": [0, 2, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 59, 60, 64, 66, 67, 68, 71, 76, 78, 79, 80, 81, 82, 83, 92, 93, 94, 95, 108, 110, 114, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 230, 239, 240, 242, 314, 428], "backward": [0, 8, 29, 36, 41, 49, 59, 60, 66, 71, 118, 119, 120, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 239, 240, 242, 263, 264, 267, 268, 285, 314, 324, 325, 327, 328, 332, 333, 340, 344, 345, 346, 347, 349, 350, 420, 422, 423, 424, 427, 428, 430, 433, 434, 435], "compat": [0, 2, 3, 7, 14, 15, 16, 25, 29, 36, 41, 49, 59, 60, 66, 71, 93, 101, 104, 106, 107, 108, 112, 118, 121, 124, 128, 130, 135, 144, 147, 148, 151, 156, 157, 158, 183, 223, 235, 239, 240, 242, 243, 263, 264, 265, 267, 268, 269, 311, 324, 325, 327, 328, 329, 331, 332, 333, 340, 342, 344, 345, 346, 347, 349, 350, 353, 420, 423, 437], "2": [0, 1, 2, 3, 8, 9, 10, 14, 15, 16, 23, 24, 25, 26, 27, 28, 29, 32, 33, 34, 36, 37, 38, 41, 42, 44, 45, 46, 47, 48, 49, 53, 54, 56, 57, 58, 59, 60, 61, 63, 66, 68, 69, 71, 72, 73, 74, 77, 78, 88, 92, 94, 98, 99, 101, 106, 107, 112, 114, 118, 119, 120, 121, 124, 125, 128, 133, 134, 135, 138, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 161, 162, 168, 175, 179, 180, 182, 184, 187, 188, 190, 191, 192, 193, 202, 203, 206, 208, 210, 212, 215, 218, 222, 223, 224, 225, 230, 231, 232, 235, 237, 239, 240, 242, 243, 248, 249, 250, 251, 252, 253, 254, 255, 256, 259, 261, 262, 263, 264, 265, 267, 268, 269, 270, 273, 274, 275, 276, 277, 284, 285, 286, 294, 297, 305, 306, 307, 309, 313, 317, 318, 324, 325, 326, 327, 328, 332, 333, 340, 341, 344, 345, 346, 347, 349, 350, 358, 359, 360, 361, 362, 364, 365, 368, 369, 370, 371, 372, 373, 374, 375, 376, 379, 388, 415, 416, 419, 420, 421, 422, 423, 424, 426, 427, 432, 433, 434, 435, 437, 438, 439, 440], "0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 15, 19, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 76, 78, 79, 80, 81, 82, 83, 85, 88, 92, 93, 94, 98, 99, 101, 106, 107, 114, 118, 119, 120, 121, 124, 127, 128, 130, 131, 133, 134, 135, 141, 142, 143, 145, 146, 147, 148, 151, 153, 154, 155, 156, 157, 158, 176, 177, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 191, 192, 194, 195, 196, 198, 201, 202, 203, 204, 205, 206, 209, 210, 211, 212, 213, 215, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 278, 279, 282, 285, 286, 289, 290, 293, 294, 295, 297, 301, 305, 307, 312, 313, 314, 316, 317, 320, 321, 324, 325, 326, 327, 328, 329, 331, 333, 334, 335, 336, 337, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 357, 358, 359, 360, 361, 362, 365, 366, 367, 388, 395, 407, 411, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440], "nightli": [0, 6], "via": [0, 1, 3, 4, 7, 8, 22, 27, 28, 30, 31, 32, 33, 34, 36, 37, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 56, 59, 63, 67, 68, 71, 72, 73, 76, 79, 80, 81, 82, 83, 93, 128, 147, 156, 203, 210, 213, 237, 327, 330, 342, 416, 417, 420, 421, 422, 423, 426, 428, 437, 439, 440], "tensordict": [0, 1, 3, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 27, 28, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 89, 90, 92, 93, 94, 95, 97, 98, 99, 101, 104, 106, 107, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 168, 174, 175, 176, 177, 179, 180, 182, 183, 184, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 204, 206, 208, 209, 210, 211, 212, 213, 215, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 246, 247, 248, 258, 259, 262, 265, 269, 271, 272, 275, 276, 286, 287, 288, 296, 297, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 357, 358, 359, 360, 361, 362, 363, 377, 378, 388, 392, 393, 394, 396, 397, 413, 416, 417, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 440], "git": [0, 6, 7, 10], "clone": [0, 2, 4, 8, 27, 28, 30, 31, 32, 33, 34, 36, 37, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 59, 66, 67, 68, 71, 76, 78, 79, 80, 81, 82, 83, 92, 202, 212, 230, 231, 240, 302, 303, 304, 313, 332, 340, 349, 413, 420, 433, 435, 439], "willing": 0, "contribut": [0, 2], "cd": [0, 7], "path": [0, 3, 6, 7, 29, 36, 41, 44, 49, 55, 56, 57, 59, 60, 61, 62, 63, 64, 66, 71, 72, 73, 77, 78, 88, 90, 92, 101, 109, 115, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 159, 173, 210, 237, 242, 272, 381, 386, 397, 417, 421, 424, 430, 433], "root": [0, 2, 3, 33, 34, 42, 44, 56, 61, 62, 63, 68, 72, 73, 78, 89, 90, 97, 101, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 174, 183, 204, 226, 227, 265, 266, 269, 294, 295, 416, 423, 425, 433, 434, 435, 437, 440], "http": [0, 2, 5, 6, 7, 10, 14, 15, 20, 21, 22, 26, 56, 74, 98, 99, 119, 120, 122, 123, 130, 132, 133, 134, 139, 140, 142, 143, 144, 145, 146, 149, 150, 153, 159, 160, 161, 162, 183, 210, 235, 245, 251, 252, 253, 254, 255, 256, 259, 260, 261, 267, 272, 273, 274, 279, 280, 281, 285, 286, 287, 289, 290, 296, 307, 324, 325, 327, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 343, 344, 345, 346, 347, 348, 349, 359, 364, 372, 412, 431, 436, 439], "github": [0, 2, 5, 6, 7, 10, 20, 21, 22, 26, 119, 120, 122, 123, 127, 130, 133, 134, 139, 140, 142, 143, 145, 146, 149, 150, 153, 159, 160, 161, 162, 180, 183, 235, 245, 426, 430, 433, 434, 439], "com": [0, 2, 5, 6, 7, 10, 20, 21, 22, 26, 119, 120, 122, 123, 130, 132, 133, 134, 139, 140, 142, 143, 145, 146, 149, 150, 153, 159, 160, 161, 162, 183, 245, 439], "setup": [0, 1, 7, 119, 120, 132, 133, 134, 159], "py": [0, 3, 26, 127, 129, 173, 183, 257, 287, 296, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440], "develop": [0, 3, 4, 7, 44, 132, 420, 439], "A": [0, 1, 3, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 41, 42, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 105, 106, 108, 112, 113, 114, 115, 116, 118, 121, 124, 126, 128, 130, 131, 135, 147, 148, 151, 152, 153, 156, 157, 158, 163, 169, 174, 176, 178, 179, 180, 182, 183, 186, 188, 192, 198, 202, 204, 210, 211, 213, 220, 225, 227, 230, 231, 232, 235, 236, 238, 239, 240, 241, 242, 243, 244, 246, 248, 249, 250, 259, 262, 263, 264, 265, 267, 268, 269, 270, 272, 273, 274, 276, 277, 279, 285, 297, 305, 306, 307, 309, 310, 311, 314, 316, 317, 320, 321, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349, 350, 353, 357, 359, 360, 361, 362, 363, 365, 377, 380, 381, 384, 386, 387, 390, 397, 399, 407, 413, 416, 419, 420, 422, 424, 426, 427, 428, 431, 435, 438, 440], "seri": [0, 2, 3, 7, 8, 53, 91, 102, 112, 113, 116, 117, 156, 205, 231, 379, 415, 416, 420, 421, 422, 429, 430, 433, 434, 437, 440], "quick": [0, 424], "ramp": 0, "up": [0, 1, 2, 3, 8, 9, 14, 15, 16, 19, 20, 21, 22, 23, 27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 65, 67, 68, 76, 79, 80, 81, 82, 83, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 179, 182, 200, 203, 226, 231, 242, 245, 344, 414, 415, 416, 420, 421, 422, 423, 426, 430, 433, 434, 435, 437, 439, 440], "If": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 66, 67, 68, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 88, 92, 93, 94, 95, 99, 101, 102, 104, 105, 106, 107, 112, 114, 118, 121, 122, 123, 124, 125, 127, 128, 129, 130, 132, 134, 135, 139, 140, 141, 142, 143, 147, 148, 149, 150, 151, 153, 156, 157, 158, 159, 160, 161, 162, 163, 167, 171, 174, 175, 176, 179, 180, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 195, 197, 200, 202, 203, 204, 205, 206, 210, 211, 214, 215, 218, 219, 224, 225, 226, 227, 228, 229, 230, 232, 233, 235, 237, 239, 240, 242, 243, 248, 249, 250, 262, 263, 264, 265, 267, 268, 269, 270, 273, 274, 275, 276, 277, 286, 297, 301, 305, 306, 307, 310, 311, 312, 313, 314, 315, 316, 317, 318, 320, 323, 324, 325, 326, 327, 328, 329, 331, 333, 334, 335, 336, 338, 340, 341, 342, 344, 345, 346, 347, 349, 350, 357, 358, 359, 360, 361, 362, 363, 373, 374, 375, 376, 377, 383, 386, 387, 393, 394, 397, 399, 401, 407, 411, 414, 416, 420, 421, 422, 423, 424, 425, 427, 429, 430, 432, 433, 434, 435, 437, 439, 440], "hurri": [0, 425], "last": [0, 1, 2, 3, 4, 14, 15, 16, 19, 25, 27, 28, 29, 30, 31, 32, 33, 34, 37, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 58, 59, 67, 68, 76, 78, 79, 80, 81, 82, 83, 105, 106, 107, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 133, 134, 135, 142, 143, 147, 148, 151, 153, 156, 157, 158, 168, 176, 179, 182, 197, 204, 206, 211, 224, 226, 228, 243, 244, 249, 250, 262, 263, 265, 267, 269, 270, 273, 274, 280, 291, 294, 297, 305, 309, 314, 327, 359, 361, 362, 421, 422, 423, 424, 425, 426, 433, 434, 435, 436, 437, 439, 440], "item": [0, 2, 3, 8, 14, 27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 56, 61, 62, 63, 67, 68, 71, 72, 73, 76, 77, 79, 80, 81, 82, 83, 88, 93, 99, 101, 105, 112, 176, 196, 231, 240, 273, 274, 328, 329, 331, 388, 416, 417, 420, 422, 423, 427, 428, 433, 434, 435, 437], "navig": [0, 434], "previou": [0, 3, 4, 10, 49, 56, 61, 62, 63, 65, 72, 73, 101, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 175, 197, 225, 242, 263, 267, 290, 305, 422, 423, 424, 425, 426, 430, 435, 440], "whenev": [0, 1, 2, 3, 14, 15, 16, 19, 20, 21, 22, 23, 25, 27, 28, 30, 31, 32, 33, 34, 36, 37, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 56, 59, 63, 67, 68, 71, 72, 73, 76, 78, 79, 80, 81, 82, 83, 98, 99, 106, 107, 122, 123, 127, 129, 130, 139, 140, 153, 161, 162, 173, 197, 201, 232, 238, 342, 359, 360, 361, 362, 377, 399, 415, 429, 437], "want": [0, 2, 3, 6, 7, 8, 36, 59, 71, 107, 183, 206, 285, 324, 325, 327, 328, 329, 331, 333, 334, 335, 340, 342, 344, 345, 346, 347, 349, 350, 357, 415, 420, 421, 422, 423, 424, 425, 427, 428, 429, 433, 434, 435, 436, 437, 439, 440], "ted": [0, 38, 50, 69, 70, 89, 90, 97, 413, 419, 431, 438], "s": [0, 1, 2, 3, 6, 7, 8, 11, 13, 14, 15, 16, 19, 20, 21, 22, 23, 29, 33, 36, 41, 44, 49, 55, 56, 57, 59, 60, 61, 62, 63, 64, 66, 71, 72, 73, 76, 78, 101, 106, 107, 112, 118, 119, 120, 121, 124, 128, 132, 133, 134, 135, 139, 140, 142, 147, 148, 149, 150, 151, 156, 157, 158, 161, 162, 163, 183, 187, 200, 204, 210, 223, 225, 228, 229, 230, 231, 232, 235, 237, 239, 240, 242, 244, 247, 249, 250, 257, 262, 265, 269, 274, 275, 276, 279, 285, 287, 294, 296, 302, 304, 307, 309, 310, 313, 314, 317, 325, 327, 332, 338, 340, 342, 347, 349, 359, 360, 361, 362, 363, 377, 415, 416, 419, 420, 421, 422, 423, 424, 425, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440], "modul": [0, 2, 3, 4, 8, 11, 14, 15, 16, 19, 20, 21, 22, 23, 26, 29, 35, 36, 41, 49, 59, 60, 65, 66, 71, 112, 118, 119, 120, 121, 124, 128, 135, 138, 141, 144, 147, 148, 151, 156, 157, 158, 173, 182, 187, 192, 194, 200, 202, 210, 211, 224, 225, 230, 231, 232, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349, 350, 351, 355, 357, 359, 360, 361, 362, 363, 377, 397, 404, 407, 413, 416, 417, 419, 421, 422, 425, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438], "optim": [0, 1, 2, 8, 29, 36, 41, 49, 59, 60, 65, 66, 71, 118, 119, 120, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 230, 232, 242, 246, 272, 278, 279, 285, 294, 325, 327, 342, 343, 344, 347, 354, 392, 393, 397, 407, 416, 417, 419, 422, 423, 424, 425, 426, 428, 431, 433, 434, 435, 438], "collect": [0, 1, 2, 3, 4, 8, 14, 15, 16, 19, 20, 21, 22, 23, 24, 44, 49, 56, 61, 62, 63, 72, 73, 101, 105, 118, 121, 124, 128, 135, 147, 148, 151, 153, 156, 157, 158, 163, 180, 183, 197, 206, 210, 237, 286, 309, 325, 328, 331, 333, 345, 347, 349, 350, 379, 388, 394, 397, 399, 400, 401, 407, 417, 419, 420, 423, 424, 425, 426, 427, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440], "storag": [0, 1, 8, 29, 36, 38, 41, 44, 49, 55, 56, 57, 59, 60, 61, 62, 63, 64, 66, 69, 71, 72, 73, 75, 78, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 101, 105, 106, 107, 109, 110, 111, 112, 114, 115, 118, 121, 124, 126, 128, 135, 147, 148, 151, 156, 157, 158, 182, 183, 190, 193, 215, 242, 413, 417, 419, 421, 422, 423, 424, 425, 427, 430, 431, 433, 434, 436, 438], "log": [0, 3, 4, 8, 11, 65, 257, 258, 259, 273, 274, 282, 294, 295, 306, 307, 310, 314, 324, 325, 326, 327, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 344, 345, 346, 347, 350, 357, 386, 390, 391, 392, 397, 407, 415, 416, 417, 419, 420, 421, 422, 425, 426, 430, 431, 433, 434, 435, 438, 439], "your": [0, 1, 2, 7, 8, 10, 11, 14, 15, 20, 29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 132, 135, 138, 147, 148, 149, 150, 151, 156, 157, 158, 239, 240, 242, 314, 387, 411, 413, 414, 415, 416, 419, 421, 422, 423, 425, 426, 427, 428, 429, 431, 433, 434, 437, 438, 439], "own": [0, 1, 14, 15, 19, 23, 24, 29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 149, 150, 151, 156, 157, 158, 242, 379, 413, 416, 419, 421, 422, 425, 431, 433, 434, 435, 438], "train": [0, 1, 2, 3, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 26, 29, 32, 36, 41, 49, 55, 57, 59, 60, 64, 65, 66, 71, 77, 78, 88, 118, 121, 124, 128, 135, 139, 140, 147, 148, 149, 150, 151, 156, 157, 158, 163, 190, 198, 210, 224, 229, 232, 235, 237, 242, 244, 245, 247, 252, 254, 262, 286, 324, 325, 326, 327, 328, 332, 333, 334, 335, 336, 337, 340, 341, 342, 344, 345, 346, 347, 349, 350, 357, 359, 397, 399, 407, 413, 415, 417, 419, 421, 425, 428, 429, 431, 436, 437, 438, 439, 440], "loop": [0, 8, 55, 57, 64, 78, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 244, 262, 285, 286, 344, 397, 416, 417, 419, 420, 421, 425, 427, 428, 429, 431, 432, 437, 438, 439], "ppo": [0, 4, 8, 310, 314, 326, 341, 344, 413, 415, 419, 420, 421, 424, 426, 427, 431, 433, 438], "pendulum": [0, 3, 14, 15, 16, 19, 23, 24, 61, 112, 118, 121, 122, 123, 124, 125, 127, 128, 129, 135, 142, 147, 148, 151, 156, 157, 158, 183, 186, 187, 188, 195, 201, 202, 206, 213, 215, 219, 220, 223, 225, 226, 227, 230, 231, 232, 233, 239, 240, 242, 248, 265, 269, 407, 415, 419, 421, 422, 425, 426, 427, 431, 438, 439, 440], "introduct": [0, 416, 419, 425, 431, 433, 434, 438, 440], "multi": [0, 1, 7, 9, 29, 36, 41, 49, 56, 59, 60, 63, 66, 67, 68, 71, 72, 73, 89, 90, 97, 118, 121, 124, 128, 135, 139, 140, 147, 148, 151, 154, 155, 156, 157, 158, 203, 232, 242, 263, 265, 267, 269, 270, 275, 276, 277, 309, 314, 357, 359, 360, 361, 362, 413, 419, 420, 421, 422, 423, 425, 426, 431, 435, 438, 439], "agent": [0, 9, 62, 67, 68, 138, 139, 140, 145, 146, 149, 150, 154, 155, 159, 160, 161, 162, 164, 203, 222, 223, 224, 273, 274, 275, 276, 277, 279, 287, 296, 326, 341, 344, 357, 413, 419, 425, 431, 435, 438], "env": [0, 1, 2, 5, 6, 7, 8, 11, 14, 15, 16, 19, 20, 21, 22, 23, 24, 29, 33, 36, 38, 41, 44, 49, 59, 60, 61, 65, 66, 69, 71, 78, 101, 112, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 246, 248, 265, 269, 271, 272, 309, 313, 342, 377, 378, 379, 387, 401, 402, 403, 407, 409, 410, 411, 413, 415, 416, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438], "us": [0, 1, 2, 5, 7, 8, 10, 11, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 88, 89, 90, 92, 93, 97, 98, 99, 100, 101, 106, 107, 112, 114, 118, 119, 120, 121, 124, 125, 127, 128, 129, 130, 133, 134, 135, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 172, 173, 174, 175, 176, 177, 179, 180, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 200, 201, 202, 203, 204, 206, 209, 210, 211, 212, 213, 215, 218, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 256, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 282, 284, 285, 286, 287, 288, 294, 295, 296, 297, 300, 301, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 317, 318, 319, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 344, 345, 346, 347, 349, 350, 353, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 372, 377, 379, 382, 383, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 405, 407, 411, 413, 414, 415, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 438, 440], "pretrain": [0, 419, 431, 438], "recurr": [0, 2, 182, 263, 264, 265, 267, 269, 290, 300, 419, 421, 426, 431, 437, 438], "dqn": [0, 2, 176, 194, 250, 259, 306, 307, 324, 325, 327, 328, 329, 331, 333, 334, 335, 339, 340, 342, 344, 345, 346, 347, 348, 349, 350, 357, 404, 413, 415, 419, 424, 426, 427, 430, 431, 438], "polici": [0, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 38, 49, 61, 69, 118, 119, 120, 121, 124, 128, 135, 141, 147, 148, 151, 152, 156, 157, 158, 172, 192, 202, 204, 224, 227, 244, 247, 248, 259, 262, 265, 269, 275, 276, 279, 286, 288, 301, 302, 303, 304, 305, 306, 307, 309, 310, 311, 312, 313, 314, 317, 324, 325, 326, 327, 328, 332, 333, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 392, 399, 402, 403, 407, 409, 410, 413, 415, 417, 419, 421, 425, 427, 428, 431, 436, 437, 438, 439, 440], "replai": [0, 8, 14, 15, 16, 23, 49, 56, 61, 62, 63, 72, 73, 98, 99, 100, 101, 102, 103, 105, 107, 108, 110, 112, 113, 117, 182, 183, 192, 211, 215, 225, 231, 242, 327, 328, 329, 331, 332, 333, 340, 345, 347, 349, 350, 394, 397, 405, 407, 413, 416, 417, 419, 424, 431, 435, 436, 438], "buffer": [0, 4, 8, 14, 15, 16, 23, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 66, 67, 68, 71, 72, 73, 76, 78, 79, 80, 81, 82, 83, 92, 93, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 112, 113, 114, 117, 118, 121, 124, 128, 135, 141, 147, 148, 151, 156, 157, 158, 182, 183, 187, 192, 200, 210, 211, 215, 225, 230, 231, 232, 235, 237, 242, 244, 286, 305, 313, 316, 327, 328, 329, 331, 332, 333, 340, 345, 347, 349, 350, 359, 360, 361, 362, 363, 394, 397, 405, 407, 413, 416, 417, 419, 424, 429, 431, 435, 436, 438, 440], "export": [0, 6, 7, 419, 431, 438], "competit": [0, 3, 139, 140, 419, 431, 434, 438], "ddpg": [0, 252, 253, 254, 255, 328, 339, 348, 413, 415, 419, 421, 427, 431, 434, 438], "task": [0, 2, 3, 9, 65, 67, 68, 77, 118, 121, 122, 123, 124, 128, 131, 135, 139, 140, 147, 148, 149, 150, 151, 153, 156, 157, 158, 161, 162, 210, 223, 232, 235, 237, 332, 340, 419, 420, 421, 422, 423, 425, 426, 431, 433, 434, 435, 438, 440], "specif": [0, 1, 2, 5, 8, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 67, 68, 72, 73, 76, 79, 80, 81, 82, 83, 118, 121, 124, 128, 135, 145, 146, 147, 148, 151, 156, 157, 158, 161, 171, 204, 225, 240, 256, 265, 269, 305, 324, 342, 344, 346, 379, 397, 413, 416, 417, 419, 422, 423, 425, 426, 427, 428, 429, 430, 431, 433, 434, 437, 438, 439], "object": [0, 2, 3, 4, 6, 7, 14, 15, 16, 19, 20, 21, 22, 23, 26, 29, 33, 36, 41, 49, 51, 55, 57, 59, 60, 64, 66, 71, 76, 77, 78, 92, 93, 94, 95, 101, 104, 108, 110, 114, 117, 118, 121, 124, 128, 133, 135, 147, 148, 151, 152, 156, 157, 158, 176, 190, 193, 194, 200, 203, 206, 210, 230, 231, 232, 235, 239, 240, 242, 265, 269, 272, 275, 276, 287, 294, 296, 301, 302, 310, 313, 314, 315, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 379, 401, 402, 403, 406, 407, 411, 413, 415, 417, 419, 421, 422, 423, 424, 428, 430, 431, 433, 434, 435, 437, 438, 440], "loss": [0, 3, 8, 57, 194, 273, 285, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 357, 358, 359, 393, 397, 404, 407, 416, 417, 419, 424, 425, 427, 428, 429, 431, 435, 437, 438], "trainer": [0, 324, 325, 326, 332, 333, 334, 335, 336, 337, 340, 341, 342, 344, 345, 346, 347, 350, 357, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 419, 420, 431, 438], "exampl": [0, 1, 2, 4, 9, 10, 14, 15, 16, 19, 20, 23, 24, 25, 27, 28, 29, 30, 32, 33, 34, 36, 37, 38, 41, 42, 44, 45, 46, 47, 48, 49, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 71, 72, 73, 74, 77, 78, 79, 88, 92, 93, 94, 98, 99, 101, 106, 107, 112, 114, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 167, 168, 169, 173, 174, 175, 176, 177, 179, 180, 182, 183, 184, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 198, 200, 201, 202, 203, 206, 208, 209, 210, 211, 212, 213, 214, 215, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 242, 243, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 261, 262, 263, 264, 265, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 282, 284, 285, 286, 287, 288, 296, 297, 301, 302, 303, 304, 305, 306, 307, 309, 310, 311, 312, 313, 314, 316, 317, 318, 321, 324, 325, 327, 328, 329, 331, 332, 333, 334, 335, 340, 342, 344, 345, 346, 347, 349, 350, 351, 352, 357, 359, 360, 361, 362, 365, 377, 379, 387, 388, 389, 390, 391, 393, 394, 395, 396, 399, 407, 413, 415, 416, 417, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440], "packag": [0, 6, 7, 10, 173, 413, 414, 440], "batch": [0, 2, 14, 15, 16, 19, 20, 21, 22, 23, 25, 33, 49, 51, 53, 56, 58, 61, 62, 63, 65, 72, 73, 74, 76, 88, 92, 93, 94, 95, 99, 100, 101, 105, 106, 107, 112, 114, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 133, 134, 135, 141, 142, 144, 145, 146, 147, 148, 151, 156, 157, 158, 159, 160, 161, 162, 175, 180, 183, 187, 188, 197, 204, 206, 208, 211, 215, 222, 225, 227, 231, 232, 234, 238, 239, 240, 242, 245, 257, 263, 264, 265, 267, 268, 269, 273, 274, 275, 276, 277, 278, 282, 286, 287, 293, 297, 300, 309, 313, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 340, 341, 342, 344, 345, 346, 347, 349, 350, 357, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 388, 391, 394, 395, 396, 397, 399, 409, 410, 411, 413, 415, 416, 417, 421, 422, 423, 424, 425, 428, 430, 432, 433, 434, 436, 439, 440], "size": [0, 2, 14, 15, 16, 25, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 88, 92, 93, 94, 95, 98, 99, 100, 101, 105, 106, 107, 108, 114, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 133, 134, 135, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 168, 174, 176, 180, 182, 183, 184, 187, 189, 190, 193, 194, 195, 197, 200, 203, 204, 208, 210, 212, 213, 215, 219, 221, 222, 223, 225, 227, 228, 231, 232, 233, 234, 237, 239, 242, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 267, 268, 269, 270, 272, 273, 274, 275, 276, 282, 283, 284, 285, 286, 287, 288, 289, 290, 293, 296, 297, 301, 302, 303, 304, 305, 306, 307, 309, 310, 311, 312, 313, 316, 318, 321, 324, 325, 327, 328, 329, 331, 332, 333, 340, 342, 344, 345, 346, 347, 349, 350, 357, 358, 359, 360, 361, 362, 363, 379, 388, 394, 413, 415, 416, 421, 422, 423, 424, 425, 426, 428, 433, 434, 435, 440], "copi": [0, 2, 3, 20, 21, 22, 23, 27, 28, 29, 30, 31, 32, 36, 37, 41, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 59, 60, 64, 65, 66, 67, 71, 76, 77, 78, 79, 80, 81, 82, 83, 92, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 174, 179, 183, 200, 213, 224, 230, 231, 232, 239, 240, 242, 243, 265, 269, 277, 305, 327, 342, 347, 377, 413, 416, 420, 421, 423, 425, 433, 437, 439], "interoper": [0, 14, 15, 413], "singl": [0, 2, 3, 14, 15, 16, 19, 20, 21, 22, 23, 29, 33, 34, 36, 39, 41, 42, 44, 47, 49, 55, 56, 57, 59, 60, 61, 62, 63, 64, 66, 68, 71, 72, 73, 74, 78, 93, 101, 107, 112, 118, 121, 124, 127, 128, 135, 139, 140, 147, 148, 151, 156, 157, 158, 161, 162, 176, 183, 184, 203, 210, 215, 225, 230, 232, 237, 242, 249, 250, 263, 264, 265, 267, 268, 269, 270, 276, 312, 316, 325, 326, 327, 329, 331, 333, 334, 340, 341, 344, 345, 347, 349, 350, 354, 359, 360, 361, 362, 368, 369, 370, 371, 373, 374, 375, 376, 377, 411, 413, 415, 416, 420, 421, 422, 423, 424, 425, 426, 427, 428, 432, 433, 434, 435, 436, 437, 439], "node": [0, 2, 18, 20, 21, 22, 23, 24, 33, 34, 42, 44, 55, 57, 64, 68, 78, 135, 230, 413, 428, 439], "distribut": [0, 2, 3, 4, 9, 10, 18, 20, 21, 22, 23, 24, 56, 61, 62, 63, 72, 73, 101, 121, 149, 150, 202, 206, 240, 244, 246, 257, 258, 259, 260, 266, 272, 273, 274, 282, 283, 284, 285, 289, 290, 293, 294, 295, 305, 306, 307, 310, 314, 315, 324, 325, 326, 327, 332, 333, 334, 340, 341, 344, 345, 346, 347, 349, 350, 413, 416, 417, 421, 422, 424, 426, 428, 433, 434, 435, 439, 440], "helper": [0, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 420, 421, 423, 433, 435], "compos": [0, 3, 29, 36, 41, 49, 56, 59, 60, 63, 66, 71, 72, 73, 100, 101, 102, 103, 112, 113, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 183, 188, 200, 214, 230, 231, 232, 239, 242, 308, 309, 327, 336, 347, 379, 413, 420, 421, 422, 423, 424, 428, 432, 434, 436, 437, 439, 440], "episod": [0, 3, 44, 99, 106, 107, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 174, 179, 215, 218, 224, 246, 359, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 413, 421, 425, 430, 433, 434, 437], "format": [0, 3, 29, 36, 38, 41, 47, 48, 49, 50, 53, 54, 59, 60, 66, 69, 70, 71, 78, 89, 90, 97, 104, 112, 118, 121, 124, 128, 135, 147, 148, 149, 151, 156, 157, 158, 183, 187, 210, 225, 231, 232, 235, 237, 242, 313, 379, 413, 420, 421, 424, 425, 427, 429, 439, 440], "tensorspec": [0, 3, 27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 67, 68, 79, 80, 81, 82, 83, 84, 85, 86, 118, 121, 124, 128, 135, 141, 147, 148, 151, 152, 156, 157, 158, 161, 162, 175, 176, 180, 181, 183, 184, 185, 186, 187, 189, 190, 191, 192, 194, 195, 197, 199, 201, 202, 203, 204, 206, 208, 212, 213, 214, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 242, 244, 262, 286, 290, 301, 305, 306, 307, 310, 311, 312, 313, 314, 315, 317, 325, 327, 329, 332, 333, 345, 347, 349, 350, 357, 413, 435], "tree": [0, 1, 44, 55, 57, 64, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 183, 413, 433, 437], "forest": [0, 44, 78, 413], "larg": [0, 1, 3, 4, 32, 55, 57, 64, 78, 106, 107, 190, 193, 235, 324, 326, 341, 344, 346, 413, 421, 422, 433, 434, 437], "languag": [0, 26, 65, 413], "human": [0, 26, 413, 435], "feedback": [0, 413, 430, 439], "rlhf": [0, 202, 413, 415], "spec": [0, 1, 2, 14, 15, 16, 23, 27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 67, 68, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 118, 119, 120, 121, 124, 126, 127, 128, 129, 130, 133, 134, 135, 141, 142, 143, 145, 146, 147, 148, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 168, 171, 174, 175, 176, 177, 180, 181, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 197, 199, 201, 202, 203, 204, 206, 208, 210, 212, 213, 214, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 242, 244, 259, 262, 265, 269, 286, 288, 290, 301, 305, 306, 307, 310, 311, 312, 313, 314, 316, 317, 324, 325, 327, 328, 329, 331, 332, 333, 340, 344, 345, 346, 347, 349, 350, 357, 413, 415, 416, 420, 421, 422, 423, 424, 425, 426, 430, 432, 433, 434, 439], "lock": [0, 33, 34, 42, 55, 57, 64, 68, 78, 118, 121, 124, 128, 134, 135, 147, 148, 151, 156, 157, 158, 180, 188, 225, 239, 240, 413, 416, 435], "method": [0, 1, 2, 4, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 88, 92, 93, 94, 95, 98, 99, 101, 106, 107, 108, 109, 110, 112, 114, 118, 121, 124, 127, 128, 129, 130, 134, 135, 147, 148, 151, 152, 153, 156, 157, 158, 171, 176, 177, 179, 180, 182, 183, 184, 187, 188, 190, 191, 194, 195, 196, 197, 198, 201, 202, 204, 206, 209, 210, 211, 212, 213, 214, 215, 218, 219, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 242, 243, 244, 246, 247, 248, 257, 262, 265, 269, 275, 276, 277, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311, 312, 313, 314, 315, 321, 324, 325, 327, 328, 329, 331, 332, 333, 334, 335, 338, 340, 342, 344, 345, 346, 347, 349, 350, 357, 363, 377, 378, 408, 413, 416, 417, 418, 421, 422, 423, 424, 425, 426, 427, 428, 429, 433, 435, 437, 440], "partial": [0, 2, 14, 15, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 182, 183, 224, 225, 226, 310, 397, 413, 423], "step": [0, 1, 4, 8, 14, 15, 16, 19, 20, 21, 22, 23, 36, 44, 49, 65, 78, 89, 90, 97, 99, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 133, 134, 135, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 153, 156, 157, 158, 159, 160, 174, 175, 177, 179, 180, 182, 183, 184, 187, 188, 191, 194, 195, 196, 197, 198, 201, 202, 204, 206, 209, 211, 212, 213, 215, 218, 219, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 235, 236, 238, 239, 242, 244, 245, 246, 260, 262, 263, 265, 267, 269, 271, 272, 285, 286, 309, 310, 314, 324, 335, 344, 358, 359, 360, 361, 362, 365, 366, 367, 378, 381, 388, 392, 397, 413, 417, 421, 423, 424, 426, 427, 429, 430, 432, 435, 436, 439], "reset": [0, 1, 2, 8, 14, 15, 16, 19, 20, 21, 22, 23, 29, 36, 41, 44, 49, 56, 59, 60, 61, 62, 63, 66, 71, 72, 73, 101, 107, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 133, 134, 135, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 156, 157, 158, 159, 160, 163, 175, 178, 179, 180, 183, 194, 197, 201, 205, 210, 218, 223, 224, 225, 226, 227, 230, 231, 232, 235, 238, 239, 242, 243, 248, 263, 265, 269, 277, 286, 299, 309, 342, 378, 413, 416, 420, 421, 422, 423, 425, 428, 432, 433, 434, 439], "vector": [0, 1, 8, 27, 53, 119, 120, 129, 133, 134, 138, 149, 150, 153, 161, 162, 192, 238, 240, 252, 254, 263, 264, 267, 268, 270, 359, 362, 372, 373, 374, 375, 376, 413, 415, 416, 420, 421, 423, 432, 433, 434, 435, 436, 440], "async": [0, 14, 15, 16, 19, 20, 21, 22, 23, 61, 118, 151, 157, 238, 413], "custom": [0, 1, 2, 5, 13, 14, 15, 16, 19, 20, 21, 22, 23, 29, 36, 41, 49, 59, 60, 66, 71, 78, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 235, 242, 275, 276, 317, 323, 334, 344, 351, 411, 413, 415, 420, 421, 422, 423, 426, 427, 429, 433, 434], "nativ": [0, 1, 7, 9, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 183, 379, 413, 423, 437], "auto": [0, 94, 114, 124, 178, 179, 232, 238, 286, 325, 327, 333, 343, 345, 347, 349, 350, 413, 416, 433, 434], "dynam": [0, 2, 7, 14, 15, 16, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 163, 168, 242, 332, 340, 413, 422, 425, 435], "mask": [0, 1, 4, 25, 27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 67, 68, 76, 79, 80, 81, 82, 83, 118, 121, 124, 128, 135, 147, 148, 149, 150, 151, 156, 157, 158, 177, 211, 242, 247, 248, 259, 262, 273, 274, 288, 305, 306, 307, 311, 312, 333, 347, 394, 413, 421, 423, 424, 440], "action": [0, 2, 8, 9, 14, 15, 16, 19, 23, 38, 44, 53, 61, 65, 69, 71, 78, 98, 99, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 133, 134, 135, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 161, 162, 168, 174, 176, 177, 180, 186, 187, 190, 191, 192, 193, 194, 195, 197, 198, 200, 202, 204, 205, 206, 208, 212, 213, 215, 219, 223, 225, 229, 231, 232, 233, 234, 238, 242, 244, 246, 248, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 262, 265, 269, 270, 271, 272, 273, 274, 275, 284, 286, 287, 288, 290, 293, 294, 296, 301, 302, 303, 304, 305, 306, 307, 309, 310, 311, 312, 314, 317, 318, 324, 325, 327, 328, 329, 331, 332, 333, 340, 342, 344, 345, 346, 347, 349, 350, 357, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 407, 411, 413, 415, 417, 420, 421, 422, 424, 425, 426, 427, 432, 433, 434, 436, 439, 440], "record": [0, 2, 11, 29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 169, 176, 202, 242, 344, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 392, 407, 413, 421, 422, 426, 430, 433], "domain": [0, 2, 8, 27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 67, 68, 76, 79, 80, 81, 82, 83, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 168, 192, 200, 225, 233, 301, 306, 307, 310, 311, 312, 313, 314, 315, 316, 321, 413, 422, 427, 433, 434, 435, 439, 440], "actor": [0, 3, 4, 23, 152, 202, 246, 251, 252, 254, 259, 260, 262, 272, 284, 286, 288, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 338, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 357, 413, 416, 421, 423, 425, 427, 430, 433, 436, 439], "explor": [0, 1, 241, 244, 247, 262, 279, 286, 301, 306, 307, 310, 311, 312, 313, 314, 324, 342, 392, 402, 403, 407, 413, 422, 423, 424, 425, 427, 428, 430, 433, 434, 435], "valu": [0, 1, 2, 3, 8, 14, 15, 16, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 66, 67, 68, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 88, 98, 99, 101, 106, 107, 112, 118, 121, 124, 128, 135, 138, 147, 148, 151, 156, 157, 158, 163, 168, 173, 174, 175, 176, 179, 181, 183, 184, 186, 188, 190, 191, 192, 193, 194, 200, 205, 206, 210, 211, 214, 215, 216, 218, 220, 222, 225, 226, 231, 232, 237, 239, 240, 242, 243, 244, 245, 248, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 265, 266, 269, 270, 272, 273, 274, 275, 276, 278, 279, 282, 286, 287, 288, 293, 294, 295, 296, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311, 312, 313, 314, 317, 318, 320, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 379, 387, 388, 390, 391, 392, 393, 394, 397, 407, 413, 417, 421, 424, 427, 428, 429, 432, 433, 434, 435, 437, 439, 440], "gener": [0, 1, 2, 3, 7, 8, 9, 14, 15, 16, 19, 20, 21, 22, 23, 27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 56, 59, 63, 65, 67, 68, 72, 73, 76, 78, 79, 80, 81, 82, 83, 101, 103, 105, 118, 121, 124, 125, 128, 135, 139, 140, 141, 144, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 175, 180, 187, 188, 190, 191, 195, 200, 202, 204, 206, 212, 213, 218, 219, 223, 225, 229, 231, 233, 238, 240, 242, 247, 248, 257, 265, 269, 273, 274, 282, 301, 310, 314, 318, 319, 338, 345, 352, 359, 364, 372, 382, 397, 413, 416, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 440], "hook": [0, 2, 29, 36, 38, 41, 49, 56, 59, 60, 61, 62, 63, 66, 69, 71, 72, 73, 101, 115, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242, 244, 245, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 277, 280, 281, 284, 286, 288, 289, 290, 292, 297, 305, 307, 309, 312, 317, 320, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 413], "planner": [0, 246, 272, 413], "torch": [0, 1, 2, 3, 8, 9, 10, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 88, 92, 93, 94, 98, 99, 101, 102, 105, 106, 107, 112, 113, 114, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 168, 174, 175, 176, 177, 179, 180, 181, 182, 184, 187, 188, 190, 191, 192, 193, 194, 195, 200, 202, 203, 206, 208, 210, 212, 213, 215, 217, 218, 219, 220, 222, 223, 224, 225, 226, 228, 231, 232, 233, 235, 237, 239, 240, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 282, 283, 284, 285, 286, 287, 288, 293, 294, 295, 296, 297, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 321, 322, 324, 325, 327, 328, 329, 331, 332, 333, 334, 335, 340, 342, 344, 345, 346, 347, 349, 350, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 381, 388, 395, 396, 407, 413, 415, 417, 420, 421, 422, 423, 424, 426, 427, 428, 430, 432, 433, 434, 435, 436, 437, 439, 440], "vmap": [0, 263, 264, 267, 268, 277, 297, 313, 316, 342, 413, 415], "random": [0, 1, 3, 14, 15, 16, 19, 20, 21, 22, 23, 27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 60, 65, 67, 68, 76, 79, 80, 81, 82, 83, 100, 112, 118, 121, 124, 128, 135, 141, 147, 148, 151, 152, 156, 157, 158, 163, 176, 192, 205, 206, 225, 232, 248, 262, 263, 265, 267, 310, 313, 314, 321, 325, 342, 345, 392, 401, 413, 415, 420, 421, 422, 424, 425, 426, 428, 435, 436, 437, 439, 440], "sac": [0, 333, 345, 347, 413], "redq": [0, 345, 413], "crossq": [0, 327, 413], "iql": [0, 332, 340, 413, 420, 433, 434], "cql": [0, 325, 331, 413], "gail": [0, 338, 413], "dt": [0, 148, 286, 413, 435], "td3": [0, 349, 350, 413], "bc": [0, 5, 349, 413], "a2c": [0, 324, 413], "dreamer": [0, 169, 170, 260, 335, 336, 337, 413, 415], "checkpoint": [0, 63, 90, 92, 96, 108, 109, 111, 115, 413, 437], "builder": [0, 413, 421, 440], "logger": [0, 3, 11, 377, 379, 381, 382, 383, 384, 385, 386, 391, 397, 407, 411, 413, 421, 433], "_util": [0, 3, 147, 243, 413, 424, 430], "implement_for": [0, 3, 413], "set_auto_unwrap_transformed_env": [0, 12, 232, 413], "auto_unwrap_transformed_env": [0, 387, 413], "thing": [0, 3, 7, 8, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 231, 275, 276, 333, 347, 414, 422, 423, 424, 425, 426, 427, 428, 429, 433, 434, 437, 440], "consid": [0, 1, 2, 3, 8, 14, 15, 16, 20, 22, 23, 29, 33, 34, 36, 41, 42, 49, 56, 59, 60, 63, 66, 68, 71, 72, 73, 92, 94, 106, 107, 114, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 183, 192, 239, 242, 257, 275, 276, 293, 325, 327, 340, 345, 347, 349, 350, 359, 361, 362, 414, 416, 420, 425, 426, 427, 435, 437], "when": [0, 1, 2, 3, 5, 8, 13, 14, 15, 16, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 56, 59, 60, 61, 62, 63, 66, 67, 68, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 89, 90, 92, 93, 94, 95, 97, 98, 99, 100, 101, 105, 106, 107, 108, 110, 114, 118, 121, 124, 125, 127, 128, 129, 134, 135, 138, 139, 140, 142, 144, 147, 148, 149, 150, 151, 156, 157, 158, 161, 162, 172, 174, 177, 179, 182, 183, 187, 190, 192, 193, 202, 203, 205, 206, 210, 211, 218, 225, 227, 230, 231, 232, 235, 237, 238, 239, 240, 242, 243, 245, 246, 257, 259, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 285, 288, 294, 309, 310, 313, 314, 316, 320, 325, 326, 327, 329, 333, 334, 340, 341, 342, 344, 345, 347, 349, 350, 351, 357, 358, 359, 360, 361, 362, 377, 378, 379, 381, 384, 386, 394, 411, 414, 415, 416, 417, 420, 421, 422, 423, 424, 426, 428, 429, 433, 434, 435, 436, 437, 439, 440], "debug": [0, 6, 8, 44, 65, 78, 227, 414, 440], "work": [0, 1, 2, 3, 4, 8, 29, 36, 41, 49, 59, 60, 63, 66, 71, 92, 99, 104, 106, 107, 110, 117, 118, 121, 124, 127, 128, 129, 132, 135, 147, 148, 151, 153, 156, 157, 158, 171, 174, 176, 177, 179, 180, 182, 183, 184, 187, 188, 191, 194, 195, 196, 198, 201, 202, 209, 210, 211, 212, 213, 215, 218, 219, 222, 223, 224, 225, 226, 227, 229, 230, 231, 235, 236, 238, 239, 240, 242, 243, 249, 250, 270, 307, 312, 317, 326, 341, 344, 397, 414, 415, 420, 421, 422, 423, 425, 428, 432, 433, 434, 435, 436, 437, 439, 440], "habitat": [0, 3, 130, 414, 436], "lab": [0, 3, 122, 123, 130, 414], "mujoco": [0, 6, 8, 153, 414, 420, 422, 423], "error": [0, 1, 3, 7, 10, 27, 28, 29, 32, 36, 37, 41, 45, 46, 47, 48, 49, 53, 54, 55, 57, 59, 60, 64, 66, 67, 71, 78, 92, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 159, 163, 164, 211, 230, 242, 243, 342, 414, 416, 420, 422, 433, 434, 440], "solut": [0, 2, 3, 6, 7, 9, 23, 106, 414, 415, 417, 424, 439], "resourc": [0, 1, 23, 130, 414, 420, 422, 424, 433, 434], "issu": [0, 2, 3, 4, 5, 8, 61, 90, 92, 94, 106, 114, 118, 121, 124, 127, 128, 132, 135, 147, 148, 151, 156, 157, 158, 174, 183, 211, 226, 301, 306, 307, 310, 311, 312, 313, 314, 414, 439], "customis": [0, 414, 421, 429], "video": [0, 4, 9, 379, 381, 384, 386, 392, 411, 413, 414, 430, 433, 434], "render": [0, 3, 8, 134, 161, 377, 379, 392, 414, 420, 421, 422, 424, 425, 429], "index": [0, 3, 7, 8, 10, 16, 27, 28, 30, 31, 32, 33, 34, 37, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 67, 68, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 91, 92, 93, 94, 98, 99, 101, 102, 104, 106, 110, 112, 113, 114, 116, 117, 118, 121, 124, 128, 135, 139, 140, 145, 146, 147, 148, 151, 156, 157, 158, 161, 162, 174, 178, 183, 187, 192, 232, 273, 274, 309, 413, 425, 432, 433, 434, 437, 439], "search": [0, 2, 33, 34, 42, 68, 78, 144, 175, 421], "page": [0, 7, 26, 386, 427], "somewhat": [1, 2, 416, 426, 440], "equival": [1, 3, 23, 27, 28, 29, 32, 33, 36, 37, 41, 45, 46, 47, 48, 49, 53, 54, 55, 56, 57, 59, 60, 63, 64, 66, 71, 72, 73, 77, 78, 88, 118, 119, 120, 121, 124, 127, 128, 129, 130, 133, 134, 135, 142, 143, 145, 146, 147, 148, 151, 153, 156, 157, 158, 159, 160, 180, 191, 194, 225, 227, 232, 242, 259, 267, 270, 288, 306, 307, 311, 312, 344, 394, 428, 439, 440], "dataload": [1, 88, 105, 107, 421, 428, 437], "except": [1, 2, 3, 14, 15, 16, 19, 20, 21, 22, 24, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 59, 60, 64, 66, 67, 68, 71, 76, 78, 79, 80, 81, 82, 83, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 183, 196, 215, 224, 225, 226, 230, 232, 242, 244, 262, 263, 265, 267, 269, 282, 286, 324, 327, 342, 344, 347, 379, 415, 420, 421, 425, 433, 437, 439, 440], "1": [1, 2, 3, 4, 8, 10, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 88, 89, 92, 93, 94, 98, 99, 101, 106, 107, 112, 114, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 161, 162, 168, 174, 176, 177, 179, 180, 181, 182, 183, 184, 186, 187, 188, 190, 191, 192, 193, 194, 195, 198, 200, 202, 203, 204, 206, 208, 210, 211, 212, 213, 215, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 235, 237, 239, 240, 242, 243, 244, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 278, 279, 282, 284, 285, 286, 287, 289, 290, 292, 293, 294, 295, 296, 301, 302, 303, 304, 305, 307, 309, 310, 311, 312, 313, 314, 316, 317, 318, 320, 321, 324, 325, 326, 327, 328, 329, 331, 332, 333, 336, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 357, 358, 359, 360, 361, 362, 365, 367, 368, 369, 373, 374, 376, 377, 379, 388, 392, 394, 395, 407, 411, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 426, 427, 428, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440], "thei": [1, 2, 3, 4, 8, 9, 14, 15, 16, 19, 20, 21, 22, 23, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 66, 67, 68, 71, 72, 73, 76, 78, 79, 80, 81, 82, 83, 99, 101, 118, 121, 124, 127, 128, 129, 135, 138, 139, 140, 147, 148, 149, 150, 151, 156, 157, 158, 161, 162, 179, 182, 196, 202, 210, 219, 227, 231, 232, 237, 242, 269, 324, 325, 326, 327, 332, 333, 334, 335, 336, 337, 340, 341, 342, 344, 345, 346, 347, 349, 350, 357, 394, 397, 415, 416, 417, 420, 421, 422, 423, 424, 427, 432, 433, 434, 435, 436, 437, 439, 440], "over": [1, 2, 3, 4, 8, 14, 15, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 59, 60, 63, 66, 67, 68, 71, 72, 73, 74, 76, 77, 79, 80, 81, 82, 83, 87, 99, 101, 105, 106, 107, 118, 121, 124, 128, 135, 139, 140, 147, 148, 151, 156, 157, 158, 174, 176, 192, 206, 218, 226, 240, 242, 282, 285, 294, 297, 316, 334, 336, 342, 365, 377, 400, 415, 417, 420, 421, 422, 424, 425, 426, 427, 428, 433, 434, 435, 440], "non": [1, 2, 3, 8, 14, 15, 16, 19, 20, 21, 22, 23, 27, 29, 30, 31, 33, 34, 36, 41, 42, 43, 49, 51, 52, 55, 56, 57, 59, 60, 64, 66, 67, 68, 71, 76, 78, 79, 80, 81, 82, 83, 93, 95, 118, 121, 124, 128, 135, 147, 148, 149, 150, 151, 156, 157, 158, 174, 180, 181, 183, 187, 197, 210, 222, 225, 231, 232, 233, 234, 235, 237, 240, 242, 248, 263, 265, 267, 269, 275, 313, 314, 324, 325, 327, 328, 329, 331, 332, 333, 334, 335, 336, 340, 342, 344, 345, 346, 347, 349, 350, 357, 359, 360, 361, 362, 415, 420, 423, 424, 433, 434, 435, 437, 440], "static": [1, 36, 59, 65, 71, 77, 99, 106, 107, 130, 148, 239, 243, 340, 425, 435, 437], "like": [1, 2, 3, 4, 7, 11, 23, 29, 33, 34, 36, 41, 42, 44, 49, 51, 56, 59, 60, 63, 66, 68, 71, 72, 73, 77, 95, 101, 107, 118, 121, 124, 125, 128, 130, 135, 138, 147, 148, 149, 150, 151, 156, 157, 158, 163, 183, 194, 225, 228, 242, 263, 267, 276, 308, 314, 324, 326, 341, 344, 345, 346, 415, 416, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 433, 434, 435, 436, 437, 439, 440], "being": [1, 2, 3, 7, 8, 14, 15, 16, 19, 20, 21, 22, 23, 29, 36, 41, 49, 59, 60, 66, 67, 71, 88, 93, 112, 115, 118, 121, 124, 127, 128, 129, 130, 134, 135, 147, 148, 151, 153, 156, 157, 158, 172, 182, 190, 192, 193, 200, 205, 213, 225, 230, 231, 232, 242, 262, 265, 269, 286, 326, 327, 341, 342, 344, 347, 379, 394, 399, 409, 410, 411, 415, 416, 420, 421, 422, 423, 428, 433, 434, 435, 437], "accept": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 29, 36, 41, 49, 55, 57, 59, 60, 63, 64, 66, 71, 78, 79, 88, 118, 121, 124, 128, 135, 141, 147, 148, 151, 156, 157, 158, 178, 183, 187, 197, 200, 210, 218, 222, 225, 230, 231, 232, 233, 234, 235, 237, 242, 270, 297, 313, 314, 315, 327, 347, 379, 417, 422, 425, 429, 437, 439, 440], "two": [1, 2, 3, 4, 8, 10, 29, 36, 41, 44, 45, 46, 47, 48, 49, 56, 59, 60, 63, 65, 66, 71, 72, 73, 78, 101, 105, 106, 107, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 180, 206, 210, 230, 237, 242, 255, 263, 265, 267, 269, 275, 276, 291, 294, 314, 341, 349, 353, 392, 397, 416, 420, 421, 422, 423, 424, 425, 426, 428, 429, 432, 433, 434, 435, 437, 439, 440], "main": [1, 2, 3, 5, 14, 15, 22, 24, 25, 61, 125, 183, 314, 397, 415, 416, 420, 421, 432, 439, 440], "argument": [1, 2, 3, 11, 14, 15, 16, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 66, 67, 68, 71, 72, 73, 76, 78, 79, 80, 81, 82, 83, 88, 90, 92, 93, 94, 98, 99, 101, 104, 105, 106, 107, 110, 112, 114, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 133, 134, 135, 139, 140, 142, 143, 145, 146, 147, 148, 149, 151, 153, 156, 157, 158, 159, 160, 161, 162, 168, 174, 176, 177, 179, 180, 182, 183, 184, 186, 187, 188, 191, 194, 195, 196, 198, 200, 201, 202, 204, 209, 210, 211, 212, 213, 215, 218, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 248, 249, 250, 262, 263, 265, 267, 269, 270, 273, 274, 275, 276, 278, 286, 297, 301, 305, 306, 307, 309, 310, 311, 312, 313, 314, 315, 317, 318, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 338, 339, 340, 341, 343, 344, 345, 346, 347, 349, 350, 352, 357, 359, 360, 361, 362, 363, 367, 377, 378, 379, 384, 386, 390, 397, 400, 407, 408, 411, 420, 421, 422, 423, 424, 425, 426, 428, 433, 434, 435, 437, 439, 440], "list": [1, 2, 3, 6, 7, 8, 9, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 56, 59, 60, 61, 62, 63, 66, 67, 68, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 85, 93, 95, 101, 104, 105, 106, 107, 108, 110, 118, 121, 122, 123, 124, 127, 128, 129, 130, 135, 139, 140, 141, 144, 145, 146, 147, 148, 149, 150, 151, 153, 156, 157, 158, 159, 160, 161, 162, 164, 174, 181, 182, 186, 190, 191, 193, 202, 203, 206, 208, 210, 218, 220, 228, 229, 230, 231, 232, 234, 235, 237, 239, 242, 248, 249, 250, 252, 258, 261, 265, 269, 270, 273, 274, 280, 288, 307, 309, 311, 312, 314, 316, 317, 318, 325, 327, 340, 342, 345, 347, 349, 350, 356, 359, 362, 377, 378, 392, 394, 409, 410, 416, 420, 422, 425, 426, 427, 428, 432, 433, 435, 436, 437, 439, 440], "constructor": [1, 2, 3, 14, 15, 16, 20, 21, 22, 23, 61, 63, 72, 73, 77, 98, 112, 118, 121, 124, 128, 135, 142, 147, 148, 151, 156, 157, 158, 161, 179, 183, 230, 249, 250, 270, 300, 310, 314, 324, 325, 327, 328, 329, 331, 333, 334, 335, 340, 342, 344, 345, 346, 347, 349, 350, 357, 359, 360, 361, 362, 363, 408, 411, 415, 420, 421, 422, 425, 428, 433, 434, 437, 439], "iter": [1, 2, 3, 15, 16, 23, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 56, 59, 60, 61, 62, 63, 66, 67, 68, 71, 72, 73, 76, 79, 80, 81, 82, 83, 87, 88, 95, 101, 105, 118, 119, 120, 121, 124, 128, 133, 134, 135, 147, 148, 151, 156, 157, 158, 195, 206, 219, 242, 243, 245, 247, 248, 249, 250, 270, 275, 276, 292, 301, 306, 310, 311, 313, 315, 316, 318, 342, 356, 392, 396, 397, 416, 417, 420, 422, 423, 428, 430, 433, 434, 435], "execut": [1, 2, 3, 6, 7, 8, 13, 14, 15, 16, 19, 20, 21, 22, 23, 27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 56, 58, 60, 61, 62, 63, 66, 67, 68, 72, 73, 76, 79, 80, 81, 82, 83, 92, 93, 101, 106, 107, 118, 119, 120, 121, 124, 125, 128, 129, 130, 132, 133, 134, 135, 141, 142, 147, 148, 151, 153, 156, 157, 158, 159, 177, 188, 204, 227, 232, 262, 263, 265, 267, 269, 277, 300, 309, 315, 316, 342, 349, 401, 411, 415, 416, 417, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 433, 434, 437, 438, 439, 440], "queri": [1, 2, 3, 14, 29, 36, 41, 44, 49, 55, 57, 59, 60, 64, 66, 71, 78, 93, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 210, 235, 239, 242, 316, 416, 420, 427, 435, 439], "defin": [1, 2, 3, 17, 18, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 59, 60, 61, 66, 67, 68, 71, 76, 78, 79, 80, 81, 82, 83, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 211, 224, 242, 243, 244, 245, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 275, 277, 280, 281, 284, 285, 286, 289, 290, 292, 297, 305, 307, 309, 312, 317, 320, 321, 329, 331, 342, 359, 360, 361, 362, 363, 378, 408, 415, 420, 421, 423, 427, 430, 435, 437, 440], "number": [1, 2, 3, 8, 14, 15, 16, 19, 20, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 88, 92, 93, 94, 95, 98, 99, 101, 104, 106, 107, 114, 118, 119, 120, 121, 124, 127, 128, 129, 133, 134, 135, 141, 142, 143, 144, 147, 148, 149, 150, 151, 156, 157, 158, 161, 162, 176, 177, 179, 180, 182, 183, 184, 187, 188, 191, 192, 194, 195, 196, 198, 201, 202, 205, 206, 209, 211, 212, 213, 215, 217, 218, 219, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 235, 236, 238, 239, 242, 244, 245, 246, 249, 250, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 275, 276, 280, 281, 286, 287, 289, 290, 293, 294, 295, 296, 301, 305, 309, 310, 313, 314, 318, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 338, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 384, 386, 388, 390, 392, 397, 399, 400, 401, 409, 410, 411, 415, 416, 420, 421, 422, 423, 425, 426, 428, 430, 433, 434, 435, 436, 437, 440], "befor": [1, 2, 3, 4, 6, 7, 10, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 27, 28, 29, 32, 36, 37, 41, 44, 45, 46, 49, 59, 60, 66, 71, 77, 78, 105, 107, 112, 118, 121, 124, 128, 129, 135, 147, 148, 151, 156, 157, 158, 163, 176, 180, 181, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 197, 199, 200, 201, 202, 203, 204, 205, 206, 208, 212, 213, 214, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 238, 239, 240, 242, 247, 263, 265, 269, 270, 278, 279, 324, 325, 326, 327, 332, 333, 334, 335, 336, 337, 340, 341, 342, 344, 345, 346, 347, 349, 350, 357, 360, 361, 362, 394, 420, 422, 423, 424, 428, 429, 433, 434, 435, 437, 440], "deliv": [1, 2, 3, 16, 420, 421, 425, 428, 439], "stack": [1, 2, 3, 7, 8, 14, 15, 16, 20, 22, 23, 27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 61, 62, 63, 64, 68, 71, 72, 73, 76, 78, 79, 80, 81, 82, 83, 86, 93, 98, 101, 118, 121, 124, 127, 128, 129, 135, 138, 147, 148, 149, 150, 151, 156, 157, 158, 183, 204, 239, 263, 265, 267, 268, 269, 309, 315, 316, 325, 327, 340, 345, 347, 349, 350, 378, 388, 413, 421, 424, 425, 432, 433, 435, 439], "user": [1, 2, 3, 5, 8, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 29, 36, 41, 44, 49, 59, 60, 66, 71, 78, 99, 107, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 159, 163, 184, 200, 224, 230, 232, 242, 256, 327, 344, 347, 349, 379, 408, 416, 417, 420, 421, 425, 427, 428, 435, 439, 440], "reach": [1, 3, 14, 15, 16, 19, 20, 21, 22, 23, 24, 65, 105, 118, 121, 124, 128, 134, 135, 139, 140, 147, 148, 151, 156, 157, 158, 161, 162, 204, 223, 244, 262, 286, 420, 422, 430, 433, 434, 439, 440], "done": [1, 2, 3, 4, 7, 8, 14, 15, 16, 19, 24, 25, 27, 28, 30, 31, 32, 33, 34, 36, 37, 38, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 65, 67, 68, 69, 71, 76, 78, 79, 80, 81, 82, 83, 89, 90, 97, 99, 101, 106, 107, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 174, 175, 176, 177, 179, 180, 183, 190, 191, 193, 194, 195, 200, 204, 205, 206, 208, 212, 213, 215, 217, 219, 222, 223, 225, 226, 229, 230, 231, 232, 233, 239, 242, 246, 263, 265, 269, 272, 294, 309, 324, 325, 326, 327, 328, 329, 331, 332, 333, 340, 341, 344, 345, 346, 347, 349, 350, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 415, 416, 420, 422, 423, 424, 425, 427, 428, 430, 432, 433, 434, 435, 437, 439, 440], "state": [1, 2, 3, 4, 14, 15, 16, 19, 29, 36, 38, 41, 44, 49, 56, 59, 60, 61, 62, 63, 65, 66, 69, 71, 72, 73, 78, 89, 90, 97, 101, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 133, 134, 135, 141, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 163, 174, 175, 179, 182, 183, 184, 186, 187, 188, 191, 194, 197, 200, 204, 206, 213, 223, 224, 229, 230, 231, 232, 233, 234, 239, 240, 242, 246, 251, 256, 260, 263, 264, 265, 267, 268, 269, 270, 272, 277, 280, 284, 287, 289, 290, 296, 302, 309, 313, 319, 324, 326, 327, 331, 333, 341, 342, 344, 345, 346, 347, 357, 358, 359, 360, 361, 362, 363, 397, 411, 415, 416, 420, 421, 422, 423, 424, 425, 426, 427, 428, 433, 434, 435, 440], "after": [1, 2, 3, 8, 14, 15, 19, 20, 22, 23, 29, 36, 38, 41, 49, 55, 57, 59, 60, 64, 65, 66, 71, 78, 94, 101, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 132, 133, 134, 135, 142, 143, 145, 146, 147, 148, 151, 153, 156, 157, 158, 159, 160, 174, 176, 177, 179, 180, 181, 183, 184, 185, 186, 187, 189, 190, 191, 192, 194, 195, 197, 199, 200, 201, 202, 203, 204, 205, 206, 208, 212, 213, 214, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 242, 244, 245, 262, 263, 265, 269, 278, 306, 311, 327, 336, 347, 349, 421, 422, 423, 424, 425, 426, 428, 430, 433, 434, 435, 436, 437, 440], "predefin": [1, 379, 421, 423, 428, 437, 439], "becaus": [1, 2, 3, 4, 7, 29, 36, 41, 49, 55, 57, 59, 60, 64, 65, 66, 71, 78, 93, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 194, 202, 223, 238, 242, 255, 276, 301, 306, 307, 309, 310, 311, 312, 313, 314, 324, 344, 415, 420, 421, 423, 424, 426, 427, 428, 432, 433, 434, 435, 437, 440], "potenti": [1, 2, 27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 67, 68, 76, 79, 80, 81, 82, 83, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 435, 437], "comput": [1, 3, 4, 8, 14, 16, 23, 29, 32, 36, 41, 49, 59, 60, 65, 66, 71, 118, 119, 120, 121, 124, 128, 133, 134, 135, 147, 148, 151, 156, 157, 158, 175, 206, 220, 232, 236, 240, 242, 244, 245, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 280, 281, 282, 284, 286, 289, 290, 292, 294, 295, 297, 302, 305, 307, 309, 310, 312, 314, 317, 320, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 401, 416, 420, 422, 423, 424, 425, 426, 432, 433, 434, 436, 437], "heavi": [1, 8, 437], "crucial": [1, 2, 3, 244, 262, 286, 332, 340, 342, 420, 421, 422, 423, 425, 427, 429, 433, 434, 435, 439, 440], "configur": [1, 8, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 65, 121, 202, 251, 256, 284, 342, 344, 415, 420, 421, 422, 427, 433, 434, 435], "hyperparamet": [1, 104, 242, 324, 325, 327, 328, 329, 331, 332, 333, 334, 335, 340, 342, 344, 345, 346, 347, 349, 350, 357, 420, 429, 435, 437], "appropri": [1, 3, 4, 7, 91, 102, 112, 113, 116, 117, 135, 147, 156, 194, 408, 411, 420, 429, 437], "paramet": [1, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 92, 93, 94, 95, 98, 99, 100, 101, 102, 104, 105, 108, 110, 112, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 133, 134, 135, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 164, 167, 168, 172, 173, 174, 175, 176, 177, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 407, 408, 409, 410, 411, 415, 416, 420, 423, 424, 426, 430, 433, 434, 435, 436, 439], "take": [1, 2, 3, 8, 25, 29, 36, 41, 44, 59, 60, 65, 66, 71, 109, 115, 118, 119, 120, 121, 124, 128, 133, 134, 135, 147, 148, 151, 156, 157, 158, 186, 223, 226, 227, 231, 244, 245, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 275, 277, 280, 281, 284, 286, 289, 290, 292, 297, 305, 307, 308, 309, 310, 312, 314, 317, 320, 323, 344, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 379, 388, 399, 415, 417, 420, 421, 422, 424, 425, 426, 427, 433, 434, 435, 437, 440], "whether": [1, 2, 3, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 56, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 71, 72, 73, 74, 76, 78, 79, 80, 81, 82, 83, 92, 94, 101, 102, 114, 118, 121, 124, 128, 134, 135, 139, 140, 141, 147, 148, 149, 150, 151, 156, 157, 158, 161, 162, 175, 179, 188, 190, 193, 224, 230, 232, 239, 240, 242, 249, 250, 265, 269, 270, 309, 314, 318, 324, 325, 326, 327, 328, 329, 331, 333, 334, 338, 341, 342, 344, 345, 346, 347, 349, 350, 357, 359, 362, 387, 411, 420, 421, 422, 424, 425, 433, 434, 435, 439, 440], "should": [1, 2, 3, 4, 5, 7, 8, 11, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 25, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 88, 89, 92, 95, 99, 101, 106, 107, 108, 112, 115, 118, 121, 122, 123, 124, 127, 128, 129, 130, 134, 135, 138, 141, 147, 148, 149, 150, 151, 156, 157, 158, 161, 162, 163, 174, 175, 176, 179, 180, 183, 186, 187, 190, 191, 194, 195, 197, 202, 203, 204, 206, 211, 212, 213, 215, 218, 219, 223, 224, 226, 229, 231, 232, 233, 238, 239, 240, 242, 243, 244, 245, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 275, 276, 277, 280, 281, 284, 286, 289, 290, 292, 297, 305, 307, 309, 310, 312, 313, 314, 317, 320, 324, 326, 327, 333, 339, 341, 342, 344, 345, 346, 347, 348, 349, 358, 359, 360, 361, 362, 363, 379, 381, 387, 392, 393, 394, 397, 407, 409, 410, 411, 415, 416, 417, 420, 421, 422, 423, 424, 426, 428, 429, 432, 433, 434, 435, 436, 437, 439, 440], "occur": [1, 8, 15, 36, 59, 67, 68, 71, 78, 118, 121, 124, 128, 130, 135, 147, 148, 151, 156, 157, 158, 175, 184, 195, 206, 211, 238, 245, 301, 306, 307, 310, 311, 312, 313, 314, 336, 424, 437, 440], "serial": [1, 2, 3, 14, 15, 16, 19, 20, 21, 22, 23, 29, 36, 41, 49, 56, 59, 60, 61, 62, 63, 66, 69, 71, 72, 73, 101, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 230, 239, 240, 242], "parallel": [1, 3, 8, 118, 121, 124, 127, 128, 129, 135, 147, 148, 149, 150, 151, 156, 157, 158, 163, 232, 238, 265, 269, 324, 408, 409, 410, 411, 421, 422, 433, 434, 439], "syncdatacollector": [1, 2, 3, 14, 15, 19, 20, 21, 22, 23, 38, 49, 69, 180, 183, 215, 247, 265, 269, 407, 410, 413, 420, 421, 422, 423, 424, 428, 430, 433, 434, 437], "worker": [1, 2, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 55, 57, 64, 76, 77, 78, 88, 125, 142, 147, 156, 230, 239, 240, 409, 410, 411, 420, 421, 422, 439, 440], "multisyncdatacollector": [1, 15, 20, 21, 22, 23, 247, 410, 413, 422, 428, 439], "split": [1, 14, 15, 16, 19, 20, 21, 22, 23, 33, 34, 40, 42, 55, 57, 68, 77, 88, 99, 106, 107, 138, 149, 150, 263, 267, 324, 325, 326, 332, 333, 334, 335, 336, 337, 340, 341, 342, 344, 345, 346, 347, 350, 357, 415, 417, 422, 426, 437, 439], "workload": 1, "across": [1, 3, 8, 14, 15, 16, 18, 19, 20, 21, 22, 23, 27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 56, 60, 63, 66, 67, 68, 72, 73, 76, 79, 80, 81, 82, 83, 99, 106, 107, 119, 120, 122, 123, 127, 129, 130, 132, 133, 134, 142, 143, 147, 153, 158, 230, 239, 240, 242, 265, 269, 275, 285, 286, 342, 399, 413, 415, 416, 420, 425, 429, 433, 434, 435], "aggreg": [1, 3, 29, 59, 99, 112, 149, 150, 175, 203, 240, 249, 250, 252, 253, 316, 416, 434], "result": [1, 2, 3, 7, 14, 15, 16, 19, 20, 21, 22, 23, 25, 29, 30, 36, 41, 49, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 71, 72, 73, 78, 79, 99, 101, 105, 106, 107, 118, 121, 124, 125, 128, 135, 147, 148, 151, 156, 157, 158, 163, 174, 175, 176, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 197, 199, 200, 201, 202, 203, 204, 205, 206, 208, 212, 213, 214, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 242, 244, 247, 262, 263, 265, 267, 269, 270, 275, 288, 294, 305, 307, 312, 324, 325, 327, 328, 329, 331, 333, 334, 335, 340, 342, 344, 345, 346, 347, 349, 350, 357, 359, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 399, 416, 421, 423, 425, 426, 429, 430, 435, 436, 439, 440], "final": [1, 2, 3, 4, 23, 44, 55, 57, 64, 65, 78, 225, 238, 244, 262, 263, 265, 267, 269, 275, 286, 308, 315, 359, 392, 415, 420, 421, 422, 424, 429, 430, 433, 434, 435, 440], "multiasyncdatacollector": [1, 14, 19, 20, 21, 22, 23, 247, 409, 413, 420, 421, 422, 428, 439], "sever": [1, 2, 3, 8, 29, 36, 41, 45, 49, 59, 60, 66, 71, 77, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 184, 186, 203, 232, 242, 344, 420, 422, 424, 429, 430, 437, 440], "gather": [1, 3, 20, 22, 23, 44, 77, 88, 92, 94, 99, 106, 114, 204, 211, 274, 277, 282, 342, 358, 401, 414, 421, 422, 423, 428, 433, 434, 435, 437, 439, 440], "continu": [1, 2, 3, 9, 30, 33, 44, 79, 80, 81, 107, 118, 121, 124, 128, 135, 147, 148, 149, 150, 151, 156, 157, 158, 161, 162, 168, 176, 200, 225, 233, 252, 253, 254, 255, 285, 286, 316, 321, 325, 348, 359, 364, 372, 415, 420, 422, 426, 433, 434, 437], "concomitantli": [1, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "network": [1, 4, 8, 29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 138, 147, 148, 149, 150, 151, 156, 157, 158, 242, 249, 250, 252, 253, 254, 255, 258, 260, 261, 267, 270, 275, 276, 277, 279, 280, 281, 283, 285, 287, 289, 290, 291, 296, 302, 303, 304, 305, 313, 317, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349, 350, 355, 357, 359, 360, 361, 362, 363, 406, 407, 415, 416, 417, 424, 427, 430, 432, 435, 440], "impli": [1, 78, 440], "mai": [1, 2, 3, 4, 5, 7, 8, 14, 15, 16, 19, 20, 21, 22, 23, 25, 29, 36, 41, 49, 55, 57, 59, 60, 64, 66, 67, 68, 71, 76, 78, 90, 93, 99, 106, 118, 121, 124, 127, 128, 129, 130, 135, 147, 148, 151, 153, 156, 157, 158, 163, 202, 206, 219, 230, 232, 234, 239, 240, 242, 245, 265, 269, 270, 275, 314, 326, 333, 341, 344, 347, 415, 416, 417, 420, 421, 422, 423, 424, 425, 426, 427, 428, 433, 434, 435, 436, 437, 440], "slightli": [1, 25, 416, 423, 424, 433, 435, 436, 437, 440], "lag": [1, 420, 421, 422], "therefor": [1, 2, 3, 7, 56, 63, 72, 73, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 215, 344, 357, 424, 427, 433, 440], "fastest": 1, "price": [1, 2], "suitabl": [1, 2, 183], "where": [1, 2, 3, 4, 7, 8, 14, 15, 16, 19, 20, 21, 22, 23, 27, 29, 36, 38, 40, 41, 44, 49, 50, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 88, 90, 92, 94, 99, 101, 106, 107, 112, 114, 115, 118, 121, 124, 128, 135, 138, 141, 144, 147, 148, 149, 150, 151, 156, 157, 158, 171, 174, 175, 176, 177, 180, 183, 194, 202, 210, 215, 218, 223, 224, 225, 226, 227, 231, 232, 234, 237, 238, 242, 244, 262, 263, 264, 265, 267, 268, 269, 273, 274, 275, 283, 285, 286, 305, 310, 313, 314, 323, 324, 325, 326, 327, 332, 333, 334, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 358, 359, 360, 361, 362, 363, 364, 365, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 416, 417, 420, 421, 422, 424, 425, 432, 433, 434, 435, 437, 440], "asynchron": [1, 3, 9, 15, 23, 29, 36, 41, 49, 55, 57, 59, 60, 64, 66, 71, 78, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 187, 210, 225, 231, 232, 235, 237, 242, 313, 324, 409, 420, 421, 422], "off": [1, 2, 4, 266, 295, 306, 347, 377, 392, 402, 415, 417, 420, 421, 422, 426, 427, 433, 434, 436, 439, 440], "curriculum": [1, 4], "For": [1, 2, 3, 4, 7, 8, 9, 10, 11, 14, 15, 16, 19, 20, 21, 22, 23, 27, 28, 29, 30, 31, 32, 36, 37, 41, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 56, 59, 60, 61, 62, 63, 66, 71, 72, 73, 76, 78, 79, 80, 81, 82, 83, 92, 94, 99, 101, 106, 114, 118, 121, 124, 127, 128, 129, 134, 135, 147, 148, 149, 150, 151, 156, 157, 158, 159, 161, 163, 183, 190, 193, 197, 206, 224, 231, 232, 238, 242, 259, 263, 265, 267, 269, 273, 276, 278, 302, 304, 305, 307, 311, 324, 332, 334, 340, 344, 392, 415, 416, 417, 420, 421, 422, 423, 425, 426, 428, 429, 433, 434, 435, 436, 437, 440], "rollout": [1, 2, 3, 11, 14, 15, 16, 19, 23, 25, 44, 65, 71, 78, 112, 118, 119, 120, 121, 124, 128, 130, 131, 133, 134, 135, 139, 140, 141, 142, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 161, 162, 163, 176, 177, 179, 180, 183, 186, 188, 190, 193, 194, 195, 200, 202, 203, 208, 212, 213, 218, 219, 220, 223, 224, 226, 227, 230, 233, 239, 240, 242, 246, 247, 248, 265, 269, 272, 286, 309, 324, 377, 379, 401, 415, 420, 422, 423, 426, 427, 428, 429, 430, 436, 437, 439], "necessari": [1, 4, 6, 8, 14, 15, 16, 19, 20, 21, 22, 23, 118, 121, 124, 128, 135, 139, 140, 147, 148, 151, 156, 157, 158, 161, 162, 219, 345, 359, 360, 361, 362, 363, 416, 420, 422, 426, 427, 428], "synchronis": [1, 125, 433, 434], "either": [1, 2, 5, 24, 27, 29, 36, 41, 49, 56, 59, 60, 61, 62, 63, 65, 66, 71, 72, 73, 78, 88, 101, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 200, 204, 223, 224, 240, 242, 319, 342, 349, 350, 383, 417, 420, 421, 423, 433, 436, 437, 439, 440], "update_policy_weights_": [1, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 420, 434, 439], "update_at_each_batch": [1, 14, 15, 19], "true": [1, 2, 3, 4, 8, 11, 12, 14, 15, 16, 19, 20, 21, 22, 23, 25, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 92, 93, 94, 98, 99, 101, 102, 104, 105, 106, 107, 114, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 133, 134, 135, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 168, 174, 175, 176, 177, 179, 180, 182, 183, 184, 187, 188, 192, 195, 197, 200, 201, 202, 203, 204, 205, 206, 210, 211, 213, 214, 217, 218, 219, 222, 223, 225, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 242, 243, 244, 245, 246, 249, 250, 252, 253, 254, 255, 261, 263, 264, 265, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 285, 286, 293, 294, 295, 300, 301, 302, 303, 304, 306, 307, 310, 311, 312, 313, 314, 315, 316, 317, 324, 325, 326, 327, 328, 329, 331, 332, 333, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 353, 359, 360, 361, 362, 365, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 386, 387, 390, 391, 392, 394, 397, 411, 415, 416, 417, 420, 421, 422, 423, 424, 426, 429, 430, 432, 433, 434, 435, 436, 437, 439, 440], "second": [1, 2, 3, 8, 25, 44, 45, 46, 47, 48, 112, 147, 180, 227, 263, 265, 267, 269, 307, 326, 341, 344, 347, 379, 381, 384, 386, 396, 420, 422, 428, 433, 434, 435, 437, 439, 440], "devic": [1, 2, 3, 7, 8, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 88, 92, 93, 94, 98, 106, 107, 114, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 168, 171, 174, 176, 180, 187, 190, 191, 193, 194, 195, 200, 202, 203, 208, 209, 210, 212, 213, 215, 219, 222, 223, 225, 228, 231, 232, 233, 235, 237, 239, 242, 244, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 261, 262, 263, 264, 265, 267, 268, 269, 270, 272, 275, 276, 278, 279, 284, 286, 287, 288, 296, 301, 302, 303, 304, 305, 306, 307, 309, 310, 311, 312, 313, 314, 316, 318, 321, 324, 325, 327, 328, 329, 331, 332, 333, 340, 344, 345, 346, 347, 349, 350, 357, 359, 360, 361, 362, 363, 377, 394, 399, 405, 415, 420, 421, 422, 423, 424, 433, 434, 435, 436, 439], "oper": [1, 2, 3, 4, 7, 8, 14, 15, 16, 19, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 64, 66, 67, 68, 71, 76, 77, 78, 79, 80, 81, 82, 83, 93, 99, 106, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 180, 197, 202, 227, 229, 233, 240, 242, 258, 259, 264, 268, 302, 303, 304, 306, 307, 308, 313, 319, 324, 326, 328, 329, 334, 341, 344, 346, 357, 358, 359, 360, 361, 362, 397, 413, 416, 417, 420, 421, 422, 423, 424, 425, 426, 432, 433, 434, 435, 440], "instanc": [1, 2, 3, 4, 7, 8, 12, 14, 15, 16, 19, 20, 21, 22, 23, 29, 30, 36, 41, 49, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 71, 72, 73, 74, 76, 77, 78, 79, 89, 90, 92, 93, 94, 97, 99, 101, 106, 107, 114, 118, 121, 123, 124, 125, 127, 128, 129, 135, 141, 147, 148, 151, 156, 157, 158, 163, 168, 175, 206, 225, 232, 239, 242, 244, 245, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 275, 276, 277, 280, 281, 284, 286, 289, 290, 292, 297, 305, 306, 307, 309, 310, 311, 312, 313, 314, 315, 316, 317, 320, 325, 327, 329, 332, 333, 340, 342, 345, 347, 349, 350, 357, 359, 360, 361, 362, 377, 379, 383, 387, 392, 401, 402, 403, 407, 409, 410, 415, 416, 417, 420, 422, 423, 424, 425, 426, 435, 437, 440], "cpu": [1, 2, 3, 8, 10, 14, 15, 16, 19, 23, 25, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 88, 92, 93, 94, 98, 101, 106, 114, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 161, 162, 168, 174, 176, 180, 187, 190, 191, 193, 194, 195, 200, 203, 208, 210, 212, 213, 215, 219, 222, 223, 225, 231, 232, 233, 235, 237, 242, 246, 248, 258, 263, 264, 265, 267, 268, 269, 272, 278, 279, 286, 287, 288, 296, 301, 302, 303, 304, 305, 306, 307, 309, 310, 311, 312, 313, 316, 318, 321, 324, 325, 327, 328, 329, 331, 332, 333, 340, 344, 345, 346, 347, 349, 350, 357, 377, 415, 420, 421, 422, 423, 433, 434, 435, 436, 439], "slower": [1, 433], "than": [1, 2, 3, 4, 8, 14, 15, 16, 19, 20, 21, 22, 23, 26, 27, 29, 59, 78, 99, 106, 107, 110, 112, 118, 121, 124, 128, 132, 135, 145, 146, 147, 148, 151, 153, 156, 157, 158, 203, 204, 213, 240, 244, 255, 265, 267, 269, 270, 297, 301, 306, 313, 314, 318, 342, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 414, 415, 416, 420, 421, 422, 424, 425, 427, 433, 434, 435, 437, 439, 440], "one": [1, 2, 3, 4, 5, 7, 8, 14, 15, 16, 19, 20, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 76, 78, 79, 80, 81, 82, 83, 89, 90, 91, 92, 97, 98, 99, 101, 102, 106, 107, 108, 110, 112, 113, 116, 117, 118, 119, 120, 121, 124, 125, 127, 128, 129, 130, 132, 133, 134, 135, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 156, 157, 158, 159, 160, 161, 162, 176, 177, 180, 183, 186, 188, 190, 191, 192, 193, 200, 203, 205, 206, 210, 215, 218, 221, 222, 224, 225, 226, 231, 232, 234, 237, 239, 242, 243, 244, 245, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 276, 277, 280, 281, 282, 283, 284, 286, 288, 289, 290, 292, 297, 301, 305, 306, 307, 309, 310, 311, 312, 313, 314, 317, 318, 320, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 340, 341, 342, 344, 345, 346, 347, 348, 349, 350, 354, 357, 359, 360, 361, 362, 366, 367, 379, 381, 390, 392, 393, 397, 401, 411, 414, 416, 417, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 432, 433, 434, 435, 436, 437, 440], "cuda": [1, 2, 3, 7, 14, 15, 16, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 59, 60, 66, 67, 68, 71, 76, 79, 80, 81, 82, 83, 118, 119, 120, 121, 124, 128, 130, 131, 132, 135, 147, 148, 151, 156, 157, 158, 187, 202, 209, 210, 225, 231, 232, 235, 237, 242, 263, 264, 267, 268, 313, 389, 420, 421, 422, 423, 433, 434, 436, 440], "multipl": [1, 2, 3, 5, 8, 14, 15, 16, 19, 20, 21, 22, 23, 47, 59, 63, 72, 73, 74, 78, 94, 101, 102, 114, 118, 119, 120, 133, 134, 147, 156, 158, 184, 186, 192, 201, 204, 205, 215, 218, 222, 223, 230, 239, 263, 267, 269, 275, 278, 279, 301, 306, 310, 311, 313, 314, 317, 326, 333, 341, 344, 354, 365, 411, 415, 416, 417, 420, 421, 422, 425, 427, 428, 433, 434, 435, 437, 439], "infer": [1, 3, 14, 15, 16, 17, 18, 20, 22, 23, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 183, 239, 278, 305, 310, 314, 331, 377, 420, 422, 424, 428, 430, 437, 439], "run": [1, 2, 3, 4, 5, 6, 7, 8, 10, 14, 15, 16, 19, 23, 29, 36, 41, 49, 59, 60, 61, 66, 71, 99, 106, 107, 118, 119, 120, 121, 122, 123, 124, 127, 128, 133, 134, 135, 141, 142, 143, 147, 148, 151, 156, 157, 158, 163, 187, 200, 205, 206, 222, 230, 231, 232, 239, 242, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 277, 280, 281, 284, 286, 289, 290, 292, 297, 305, 307, 309, 312, 314, 315, 316, 317, 320, 327, 333, 347, 379, 386, 392, 409, 410, 411, 414, 415, 416, 417, 420, 421, 422, 423, 426, 427, 428, 429, 430, 433, 434, 435, 439], "dispatch": [1, 3, 20, 21, 22, 23, 36, 59, 71, 176, 177, 179, 180, 182, 183, 184, 187, 188, 191, 194, 195, 196, 198, 201, 202, 209, 211, 212, 213, 215, 218, 219, 222, 223, 224, 225, 226, 227, 229, 230, 231, 235, 236, 238, 239, 242, 297, 309, 379, 420, 440], "avail": [1, 2, 3, 4, 6, 13, 14, 15, 16, 19, 20, 21, 22, 23, 56, 63, 72, 73, 99, 105, 106, 107, 119, 120, 122, 123, 132, 133, 134, 139, 140, 145, 146, 147, 149, 150, 153, 159, 160, 161, 162, 176, 179, 182, 200, 202, 259, 288, 310, 314, 342, 379, 409, 410, 420, 421, 422, 423, 424, 425, 426, 433, 434, 435, 437, 440], "speed": [1, 2, 3, 4, 8, 27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 67, 68, 76, 79, 80, 81, 82, 83, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 416, 420, 421, 422, 423, 433, 434, 435, 437, 439], "avoid": [1, 2, 3, 29, 36, 41, 49, 59, 60, 66, 71, 92, 94, 106, 114, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 173, 183, 200, 230, 232, 239, 240, 242, 245, 294, 301, 313, 318, 326, 327, 341, 344, 347, 400, 422, 424, 434], "oom": [1, 3, 55, 57, 64, 78, 92, 94, 114], "choic": [1, 2, 51, 147, 415, 416, 420, 421, 427, 433, 434], "pass": [1, 2, 3, 4, 14, 15, 16, 19, 20, 21, 22, 23, 24, 27, 29, 33, 34, 36, 41, 42, 49, 51, 56, 59, 60, 61, 63, 65, 66, 68, 71, 72, 73, 76, 77, 90, 92, 94, 99, 101, 106, 107, 112, 114, 118, 121, 124, 125, 126, 128, 129, 135, 138, 142, 147, 148, 149, 150, 151, 156, 157, 158, 161, 177, 179, 180, 183, 188, 190, 193, 203, 204, 212, 213, 230, 234, 239, 242, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 275, 276, 277, 278, 280, 281, 284, 286, 287, 289, 290, 292, 296, 297, 301, 305, 306, 307, 309, 310, 311, 312, 313, 314, 316, 317, 318, 320, 325, 326, 327, 340, 341, 342, 344, 345, 347, 349, 350, 359, 360, 361, 362, 363, 377, 394, 397, 409, 410, 411, 415, 420, 421, 422, 423, 424, 425, 426, 427, 428, 432, 433, 434, 435, 437, 439, 440], "ie": [1, 2, 3, 20, 22, 24, 27, 28, 30, 31, 32, 33, 34, 36, 37, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 56, 59, 67, 68, 71, 72, 76, 77, 79, 80, 81, 82, 83, 98, 107, 118, 121, 124, 128, 132, 135, 144, 147, 148, 151, 156, 157, 158, 175, 176, 183, 197, 222, 225, 234, 239, 265, 269, 305, 313, 415, 416, 421, 434], "store": [1, 3, 8, 14, 15, 16, 19, 20, 21, 22, 23, 29, 33, 36, 39, 40, 41, 44, 49, 51, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 71, 72, 73, 74, 77, 78, 88, 90, 92, 93, 94, 95, 98, 99, 101, 106, 112, 114, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 183, 200, 227, 238, 239, 240, 242, 244, 246, 247, 272, 286, 324, 325, 327, 328, 329, 331, 333, 334, 335, 340, 342, 344, 345, 346, 347, 349, 350, 357, 386, 413, 417, 420, 422, 423, 426, 428, 430, 433, 434, 436, 440], "while": [1, 2, 3, 7, 8, 25, 29, 36, 41, 49, 59, 60, 61, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 215, 242, 244, 245, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 277, 280, 281, 284, 286, 289, 290, 292, 297, 305, 307, 309, 312, 317, 320, 332, 340, 341, 344, 415, 416, 420, 422, 423, 426, 428, 429, 433, 434, 435, 436, 437, 439], "wait": [1, 21, 23, 24, 61, 159, 423, 435], "also": [1, 2, 3, 8, 9, 11, 14, 15, 25, 27, 28, 29, 32, 36, 37, 41, 45, 46, 47, 48, 49, 53, 54, 55, 57, 59, 60, 63, 64, 66, 71, 72, 73, 76, 78, 88, 92, 93, 94, 99, 101, 106, 107, 112, 114, 118, 121, 124, 128, 134, 135, 139, 140, 147, 148, 149, 150, 151, 156, 157, 158, 161, 162, 171, 173, 174, 176, 177, 179, 180, 182, 183, 184, 187, 188, 191, 192, 194, 195, 196, 198, 200, 201, 202, 206, 209, 211, 212, 213, 215, 218, 219, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 235, 236, 238, 239, 242, 243, 249, 250, 263, 267, 270, 290, 309, 310, 315, 316, 317, 324, 325, 327, 328, 329, 331, 332, 333, 338, 340, 344, 347, 349, 359, 366, 367, 377, 379, 415, 416, 417, 420, 421, 422, 423, 424, 425, 426, 427, 428, 432, 433, 434, 435, 437, 439, 440], "impact": [1, 2, 3, 134, 190, 193, 245, 324, 326, 341, 344, 346, 421, 423, 433, 434], "memori": [1, 3, 8, 23, 29, 32, 36, 41, 49, 55, 57, 59, 60, 61, 64, 66, 71, 77, 78, 90, 92, 93, 97, 118, 121, 124, 125, 128, 132, 135, 147, 148, 151, 156, 157, 158, 183, 187, 210, 225, 231, 232, 235, 237, 239, 240, 242, 257, 267, 268, 313, 411, 413, 417, 420, 421, 423, 433, 437, 439], "manag": [1, 3, 8, 23, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 247, 265, 269, 300, 355, 356, 359, 360, 361, 362, 387, 392, 415, 423, 424, 427, 439], "kei": [1, 2, 7, 14, 15, 16, 19, 25, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 89, 98, 99, 101, 104, 106, 107, 112, 118, 121, 124, 128, 133, 134, 135, 147, 148, 149, 150, 151, 156, 157, 158, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 206, 209, 210, 211, 212, 213, 215, 218, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 242, 244, 246, 248, 258, 259, 262, 265, 269, 271, 272, 286, 288, 301, 305, 306, 307, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 344, 345, 346, 347, 349, 350, 357, 358, 359, 360, 361, 362, 363, 377, 379, 391, 392, 393, 395, 396, 397, 401, 416, 417, 420, 422, 423, 424, 425, 427, 432, 433, 434, 435, 437, 439, 440], "control": [1, 3, 5, 8, 16, 25, 26, 33, 34, 35, 42, 63, 68, 72, 73, 99, 101, 106, 118, 121, 122, 123, 124, 128, 134, 135, 138, 147, 148, 149, 150, 151, 156, 157, 158, 174, 192, 252, 253, 254, 255, 265, 269, 271, 272, 286, 290, 297, 313, 314, 315, 324, 326, 327, 341, 342, 344, 348, 359, 364, 372, 377, 387, 415, 417, 420, 421, 422, 423, 424, 425, 426, 427, 433, 434, 435, 437, 439], "which": [1, 2, 3, 4, 7, 8, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 88, 89, 93, 101, 104, 105, 112, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 132, 133, 134, 135, 139, 140, 142, 143, 145, 146, 147, 148, 151, 153, 156, 157, 158, 159, 160, 161, 162, 163, 183, 184, 190, 193, 198, 200, 202, 203, 205, 206, 210, 211, 213, 223, 225, 226, 229, 231, 232, 233, 235, 239, 242, 243, 258, 263, 264, 265, 266, 267, 268, 269, 273, 274, 275, 276, 277, 283, 285, 295, 302, 303, 304, 305, 309, 310, 313, 314, 315, 316, 324, 325, 326, 327, 329, 332, 333, 334, 335, 336, 337, 340, 341, 342, 344, 345, 346, 347, 349, 350, 353, 357, 359, 360, 361, 362, 377, 379, 388, 393, 415, 416, 417, 420, 421, 422, 423, 424, 425, 426, 427, 428, 432, 433, 434, 435, 436, 437, 440], "storing_devic": [1, 14, 15, 16, 19, 20, 21, 22, 23, 421, 434], "dure": [1, 2, 3, 13, 14, 15, 16, 19, 20, 21, 22, 23, 27, 28, 32, 37, 45, 46, 47, 48, 53, 54, 56, 57, 60, 61, 62, 63, 65, 66, 72, 73, 77, 88, 90, 95, 99, 101, 104, 106, 118, 121, 124, 125, 128, 134, 135, 147, 148, 149, 150, 151, 156, 157, 158, 179, 180, 183, 186, 190, 193, 195, 197, 198, 200, 204, 208, 220, 222, 225, 227, 229, 230, 232, 233, 234, 239, 240, 242, 245, 247, 248, 265, 269, 276, 309, 359, 361, 362, 392, 397, 416, 420, 421, 422, 423, 426, 427, 428, 430, 433, 434, 435, 437, 440], "heurist": [1, 4, 27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 67, 68, 76, 79, 80, 81, 82, 83, 244, 309, 314, 420, 424, 428, 440], "usual": [1, 2, 3, 4, 6, 7, 8, 14, 15, 16, 19, 20, 21, 22, 23, 104, 112, 118, 119, 120, 121, 124, 128, 133, 134, 135, 147, 148, 151, 156, 157, 158, 230, 279, 344, 349, 358, 359, 360, 361, 362, 363, 378, 414, 415, 416, 417, 420, 421, 422, 423, 426, 428, 429, 434, 437, 440], "same": [1, 2, 3, 4, 16, 20, 21, 22, 23, 25, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 59, 60, 64, 66, 67, 68, 71, 74, 76, 77, 78, 79, 80, 81, 82, 83, 105, 106, 107, 110, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 133, 134, 135, 138, 142, 143, 147, 148, 149, 150, 151, 153, 156, 157, 158, 176, 183, 190, 192, 193, 198, 200, 203, 204, 205, 206, 222, 230, 231, 232, 239, 242, 243, 249, 250, 264, 268, 270, 273, 274, 275, 276, 286, 294, 305, 317, 325, 327, 340, 342, 345, 347, 349, 350, 354, 416, 420, 421, 422, 425, 426, 428, 432, 433, 434, 436, 437, 440], "behavior": [1, 2, 3, 4, 14, 15, 23, 29, 36, 41, 49, 59, 60, 66, 71, 76, 78, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 174, 184, 190, 193, 206, 211, 224, 232, 240, 242, 245, 265, 266, 269, 295, 332, 340, 349, 377, 387, 392, 415, 421, 423, 433, 434, 435, 437], "besid": 1, "those": [1, 2, 3, 5, 7, 27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 67, 68, 76, 79, 80, 81, 82, 83, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 183, 190, 193, 200, 206, 225, 226, 229, 233, 269, 285, 310, 314, 315, 316, 399, 409, 410, 415, 420, 421, 425, 426, 434, 435, 440], "choos": [1, 3, 11, 51, 118, 121, 138, 265, 269, 344, 413, 416, 420, 421, 422, 424, 433, 434, 437, 439], "follow": [1, 2, 3, 6, 7, 8, 11, 17, 18, 29, 36, 41, 44, 49, 55, 57, 58, 59, 60, 64, 65, 66, 71, 76, 78, 99, 106, 107, 118, 119, 120, 121, 124, 127, 128, 129, 133, 134, 135, 141, 144, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 161, 162, 171, 179, 183, 202, 210, 235, 239, 240, 242, 249, 250, 263, 265, 267, 269, 270, 307, 310, 311, 312, 323, 324, 325, 326, 327, 328, 332, 333, 340, 341, 344, 345, 346, 347, 349, 350, 379, 397, 415, 416, 417, 420, 421, 422, 423, 424, 427, 428, 432, 433, 434, 435, 437, 439, 440], "max_frames_per_traj": [1, 14, 15, 16, 19, 20, 21, 22, 23, 400, 420, 422, 439], "frame": [1, 2, 11, 14, 15, 16, 19, 20, 21, 22, 23, 49, 183, 198, 242, 244, 262, 286, 309, 378, 379, 381, 384, 386, 390, 392, 397, 400, 401, 420, 421, 422, 423, 426, 433, 434, 437, 439, 440], "call": [1, 2, 3, 7, 8, 11, 14, 15, 16, 18, 19, 20, 21, 22, 23, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 85, 88, 92, 93, 94, 95, 99, 100, 101, 105, 106, 108, 110, 114, 115, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 133, 134, 135, 142, 143, 144, 145, 146, 147, 148, 151, 153, 156, 157, 158, 159, 160, 163, 172, 175, 176, 177, 179, 180, 182, 183, 184, 186, 187, 188, 191, 192, 194, 195, 196, 197, 198, 200, 201, 202, 204, 206, 208, 209, 210, 211, 212, 213, 215, 218, 219, 220, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 272, 276, 277, 278, 280, 281, 284, 286, 289, 290, 292, 297, 305, 307, 309, 312, 313, 314, 316, 317, 320, 326, 327, 341, 342, 344, 347, 349, 358, 359, 360, 361, 362, 377, 378, 381, 392, 416, 417, 421, 422, 423, 424, 425, 426, 428, 429, 433, 434, 435, 437, 439, 440], "frames_per_batch": [1, 2, 14, 15, 16, 19, 20, 21, 22, 23, 38, 49, 61, 69, 180, 183, 215, 265, 269, 400, 420, 421, 422, 423, 424, 428, 430, 433, 434, 437, 439], "each": [1, 2, 3, 4, 7, 8, 14, 15, 16, 19, 20, 21, 22, 23, 25, 29, 33, 34, 36, 40, 41, 42, 44, 45, 47, 49, 50, 59, 60, 63, 65, 66, 68, 70, 71, 72, 78, 99, 101, 104, 106, 107, 109, 112, 118, 121, 124, 125, 128, 135, 139, 140, 147, 148, 149, 150, 151, 156, 157, 158, 161, 162, 176, 201, 203, 204, 210, 215, 218, 223, 224, 225, 226, 230, 231, 237, 239, 240, 242, 243, 244, 259, 262, 263, 264, 265, 267, 269, 275, 276, 280, 287, 288, 296, 300, 306, 307, 312, 314, 316, 365, 368, 369, 370, 371, 373, 374, 375, 376, 379, 392, 394, 409, 410, 416, 420, 421, 422, 423, 426, 427, 428, 430, 433, 434, 435, 436, 437, 439, 440], "init_random_fram": [1, 14, 15, 16, 19, 20, 21, 22, 23, 400, 420, 421, 424, 430], "rand_step": [1, 2, 3, 38, 69, 118, 121, 122, 123, 124, 125, 127, 128, 129, 135, 136, 137, 141, 142, 143, 147, 148, 151, 156, 157, 158, 201, 225, 239, 435, 439, 440], "reset_at_each_it": [1, 14, 15, 16, 19, 20, 21, 22, 23, 420], "split_traj": [1, 14, 15, 16, 19, 20, 21, 22, 23, 420, 421, 422], "trajectori": [1, 3, 14, 15, 16, 19, 20, 21, 22, 23, 25, 36, 39, 40, 49, 50, 70, 72, 78, 98, 99, 106, 107, 112, 118, 119, 120, 121, 124, 128, 133, 134, 135, 147, 148, 151, 156, 157, 158, 183, 211, 223, 230, 242, 246, 269, 272, 286, 344, 359, 362, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 388, 413, 416, 420, 421, 422, 423, 425, 428, 430, 435, 439, 440], "pad": [1, 2, 3, 25, 58, 74, 183, 229, 249, 250, 252, 253, 269, 273, 274, 275, 394], "along": [1, 2, 3, 14, 15, 25, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 59, 60, 64, 65, 66, 67, 68, 71, 76, 77, 78, 79, 80, 81, 82, 83, 94, 99, 101, 106, 107, 112, 114, 118, 121, 124, 127, 128, 129, 135, 147, 148, 151, 156, 157, 158, 168, 182, 183, 184, 204, 206, 208, 211, 218, 222, 228, 242, 269, 270, 273, 274, 279, 306, 310, 313, 314, 327, 342, 349, 420, 421, 423, 425, 427, 433, 434, 435, 437, 439], "point": [1, 2, 3, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 59, 60, 61, 66, 67, 68, 71, 76, 78, 79, 80, 81, 82, 83, 91, 98, 99, 102, 112, 113, 116, 117, 118, 121, 124, 125, 128, 135, 147, 148, 151, 156, 157, 158, 176, 177, 179, 180, 182, 183, 184, 187, 188, 191, 194, 195, 196, 198, 201, 202, 209, 210, 211, 212, 213, 215, 218, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 235, 236, 237, 238, 239, 242, 271, 313, 323, 334, 397, 414, 421, 422, 432, 433, 434, 435, 437, 439, 440], "boolean": [1, 3, 14, 15, 16, 19, 20, 21, 22, 23, 25, 27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 65, 67, 68, 76, 79, 80, 81, 82, 83, 99, 106, 107, 128, 175, 179, 211, 223, 273, 274, 286, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 417, 423], "repres": [1, 2, 3, 14, 15, 16, 19, 20, 21, 22, 23, 33, 34, 38, 42, 44, 51, 68, 69, 71, 72, 78, 93, 118, 121, 122, 123, 124, 127, 128, 129, 135, 147, 148, 151, 156, 157, 158, 161, 162, 198, 211, 227, 239, 242, 259, 273, 274, 288, 294, 306, 307, 311, 312, 353, 359, 394, 415, 420, 422, 423, 424, 425, 426, 427, 433, 434], "valid": [1, 2, 3, 25, 55, 57, 58, 77, 78, 88, 112, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 164, 179, 211, 230, 232, 242, 244, 249, 250, 270, 273, 274, 286, 326, 333, 341, 344, 347, 359, 360, 361, 362, 394, 417, 424, 440], "exploration_typ": [1, 14, 15, 16, 19, 20, 21, 22, 23, 392, 413, 415, 420, 421], "strategi": [1, 2, 3, 16, 104, 138, 176, 262, 274, 282, 415, 417, 420, 421, 424, 426, 433, 434, 437, 439], "reset_when_don": [1, 14, 15, 16, 19], "its": [1, 2, 3, 4, 5, 7, 9, 11, 14, 15, 16, 19, 20, 21, 22, 23, 25, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 59, 60, 63, 64, 66, 67, 68, 71, 72, 76, 78, 79, 80, 81, 82, 83, 85, 94, 101, 106, 107, 118, 121, 124, 128, 134, 135, 141, 147, 148, 149, 150, 151, 156, 157, 158, 161, 164, 180, 182, 183, 188, 194, 202, 223, 224, 225, 230, 232, 238, 239, 240, 242, 243, 244, 249, 250, 265, 269, 273, 274, 275, 276, 285, 306, 310, 311, 314, 317, 324, 325, 326, 327, 332, 333, 334, 335, 336, 337, 340, 341, 342, 343, 344, 345, 346, 347, 350, 357, 379, 397, 407, 415, 416, 417, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 433, 434, 435, 436, 437, 439, 440], "organ": [1, 2, 435, 437], "within": [1, 2, 3, 14, 15, 19, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 59, 60, 64, 66, 67, 68, 71, 72, 73, 76, 78, 79, 80, 81, 82, 83, 93, 98, 99, 107, 118, 121, 124, 127, 128, 129, 135, 147, 148, 151, 153, 156, 157, 158, 175, 177, 179, 180, 182, 183, 184, 187, 188, 190, 191, 193, 194, 195, 196, 198, 201, 202, 209, 211, 212, 213, 215, 218, 219, 222, 223, 224, 225, 226, 227, 229, 230, 231, 235, 236, 238, 239, 240, 242, 244, 245, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 277, 280, 281, 284, 286, 289, 290, 292, 297, 300, 305, 307, 309, 312, 314, 317, 320, 321, 329, 334, 349, 357, 377, 379, 415, 416, 421, 424, 425, 426, 427, 428, 429, 430, 433, 435, 439], "differ": [1, 2, 3, 4, 14, 15, 16, 19, 20, 21, 22, 23, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 59, 60, 63, 65, 66, 67, 68, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 101, 104, 118, 119, 120, 121, 124, 125, 128, 133, 134, 135, 138, 147, 148, 149, 150, 151, 156, 157, 158, 179, 183, 191, 192, 203, 206, 213, 222, 230, 232, 234, 242, 243, 259, 263, 264, 267, 268, 270, 272, 275, 276, 277, 288, 314, 340, 342, 344, 353, 359, 360, 361, 365, 366, 367, 392, 397, 399, 409, 410, 415, 416, 417, 420, 421, 422, 424, 425, 427, 429, 432, 433, 434, 435, 436, 437, 439, 440], "how": [1, 2, 3, 11, 17, 18, 20, 21, 22, 26, 29, 36, 41, 49, 56, 59, 60, 66, 71, 72, 98, 99, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 133, 134, 135, 139, 140, 142, 143, 145, 146, 147, 148, 149, 150, 151, 153, 156, 157, 158, 159, 160, 161, 162, 176, 203, 242, 277, 310, 324, 326, 339, 341, 342, 344, 379, 381, 397, 414, 415, 420, 421, 422, 423, 424, 425, 426, 428, 429, 432, 433, 434, 435, 436, 437, 439, 440], "tabl": [1, 29, 415, 421, 426], "summar": [1, 3, 435], "what": [1, 3, 8, 11, 35, 36, 56, 76, 99, 106, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 163, 174, 194, 225, 230, 311, 327, 338, 342, 349, 414, 415, 416, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 433, 434, 435, 436, 437, 439, 440], "expect": [1, 2, 3, 4, 7, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 59, 60, 63, 66, 67, 68, 71, 76, 77, 79, 80, 81, 82, 83, 99, 105, 106, 118, 121, 124, 128, 135, 141, 144, 147, 148, 151, 156, 157, 158, 163, 176, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 194, 195, 197, 199, 201, 202, 203, 204, 206, 208, 210, 212, 213, 214, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 242, 263, 264, 265, 267, 268, 269, 275, 276, 286, 307, 313, 316, 324, 325, 326, 327, 328, 329, 331, 332, 333, 338, 340, 341, 342, 344, 345, 346, 347, 349, 350, 354, 357, 401, 414, 415, 416, 417, 420, 422, 423, 425, 426, 427, 428, 433, 434, 435, 437, 440], "n": [1, 2, 3, 6, 7, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 59, 60, 65, 66, 67, 68, 71, 76, 79, 80, 81, 82, 83, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 183, 192, 197, 234, 242, 263, 264, 267, 272, 283, 285, 286, 309, 314, 324, 325, 333, 342, 358, 394, 417, 421, 423, 424, 437, 439, 440], "b": [1, 2, 3, 7, 8, 25, 33, 34, 36, 42, 55, 57, 59, 63, 64, 65, 66, 68, 71, 72, 73, 78, 92, 93, 112, 121, 200, 233, 263, 264, 267, 268, 275, 276, 278, 279, 287, 296, 317, 359, 360, 361, 362, 363, 365, 379, 421, 437], "cat_result": [1, 14, 15], "na": 1, "t": [1, 2, 3, 4, 6, 7, 8, 14, 15, 16, 19, 20, 21, 22, 23, 25, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 66, 67, 68, 71, 72, 73, 76, 78, 79, 80, 81, 82, 83, 89, 98, 99, 101, 105, 106, 107, 112, 118, 121, 124, 125, 127, 128, 135, 142, 143, 147, 148, 151, 156, 157, 158, 163, 174, 176, 177, 179, 180, 182, 183, 184, 187, 188, 190, 191, 193, 194, 195, 196, 198, 200, 201, 202, 209, 210, 211, 212, 213, 214, 215, 218, 219, 222, 223, 224, 225, 226, 227, 229, 230, 231, 235, 236, 237, 238, 239, 242, 243, 263, 265, 267, 269, 286, 306, 313, 324, 348, 359, 360, 361, 362, 363, 365, 379, 386, 397, 399, 411, 414, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 432, 433, 434, 435, 436, 437, 439, 440], "p": [1, 2, 4, 101, 104, 125, 154, 155, 247, 248], "In": [1, 2, 3, 4, 5, 7, 8, 10, 11, 14, 15, 16, 19, 20, 21, 22, 23, 24, 29, 36, 41, 49, 59, 60, 66, 71, 107, 118, 119, 120, 121, 124, 128, 133, 134, 135, 147, 148, 149, 150, 151, 156, 157, 158, 187, 190, 191, 193, 201, 210, 215, 219, 224, 225, 228, 230, 231, 232, 235, 237, 238, 240, 242, 243, 263, 266, 267, 270, 275, 290, 294, 295, 313, 314, 316, 323, 324, 325, 327, 328, 329, 331, 332, 333, 340, 342, 344, 345, 346, 347, 349, 350, 399, 409, 410, 411, 415, 416, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 433, 434, 435, 436, 437, 440], "case": [1, 3, 4, 5, 7, 8, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 61, 62, 63, 64, 67, 68, 72, 73, 76, 78, 79, 80, 81, 82, 83, 89, 90, 97, 98, 99, 101, 112, 118, 121, 124, 127, 128, 135, 147, 148, 151, 156, 157, 158, 163, 190, 191, 193, 201, 206, 225, 228, 232, 233, 243, 269, 270, 276, 277, 310, 313, 314, 316, 317, 323, 324, 325, 327, 328, 329, 331, 332, 333, 340, 342, 344, 345, 346, 347, 349, 350, 359, 360, 361, 362, 379, 388, 399, 409, 410, 411, 413, 415, 416, 417, 420, 421, 422, 423, 424, 425, 426, 428, 429, 433, 434, 435, 437, 439, 440], "dimens": [1, 3, 14, 15, 16, 25, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 63, 64, 65, 67, 68, 76, 77, 78, 79, 80, 81, 82, 83, 92, 93, 94, 99, 106, 107, 112, 114, 118, 121, 122, 123, 124, 127, 128, 129, 130, 135, 147, 148, 151, 156, 157, 158, 161, 162, 168, 176, 182, 183, 184, 197, 204, 206, 208, 211, 218, 221, 222, 225, 228, 234, 239, 240, 249, 250, 251, 256, 257, 265, 267, 269, 270, 273, 274, 275, 278, 279, 284, 287, 291, 292, 293, 294, 297, 306, 309, 324, 325, 326, 332, 333, 334, 335, 336, 337, 340, 341, 342, 344, 345, 346, 347, 350, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 411, 413, 416, 420, 421, 422, 423, 425, 433, 434, 435, 437], "time": [1, 2, 3, 4, 7, 8, 14, 15, 16, 20, 21, 22, 23, 25, 29, 36, 41, 49, 56, 59, 60, 61, 62, 63, 65, 66, 71, 72, 73, 78, 89, 92, 101, 112, 118, 119, 120, 121, 124, 125, 128, 133, 134, 135, 138, 144, 147, 148, 149, 150, 151, 153, 156, 157, 158, 173, 174, 182, 183, 184, 204, 211, 218, 225, 226, 227, 230, 232, 239, 242, 248, 260, 263, 267, 269, 286, 300, 309, 314, 325, 326, 327, 333, 336, 340, 341, 342, 344, 345, 347, 349, 350, 359, 360, 361, 362, 363, 364, 365, 368, 369, 370, 371, 372, 373, 374, 375, 376, 397, 416, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 433, 434, 435, 437, 439, 440], "adapt": [1, 26, 177, 204, 223, 239, 245, 341, 420, 424, 435], "equal": [1, 14, 15, 19, 29, 78, 99, 106, 107, 121, 142, 145, 146, 147, 156, 205, 206, 249, 250, 263, 265, 267, 269, 270, 273, 274, 276, 348, 353, 388, 409, 410, 420, 422, 436], "introduc": [1, 2, 147, 156, 263, 265, 267, 269, 286, 420, 433], "some": [1, 2, 3, 4, 7, 8, 9, 24, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 59, 60, 61, 63, 66, 67, 68, 71, 76, 77, 78, 79, 80, 81, 82, 83, 92, 94, 101, 112, 114, 118, 119, 120, 121, 124, 127, 128, 129, 133, 134, 135, 139, 140, 147, 148, 149, 150, 151, 156, 157, 158, 161, 162, 163, 179, 210, 225, 232, 235, 242, 252, 265, 292, 314, 315, 316, 379, 388, 400, 415, 416, 417, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 433, 434, 435, 437, 439, 440], "confus": [1, 27, 29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 232, 242], "other": [1, 2, 3, 4, 7, 8, 11, 14, 15, 16, 19, 20, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 64, 66, 67, 68, 71, 76, 77, 78, 79, 80, 81, 82, 83, 92, 93, 94, 95, 101, 104, 105, 106, 107, 108, 110, 114, 118, 121, 124, 127, 128, 129, 135, 141, 147, 148, 151, 156, 157, 158, 186, 191, 192, 212, 219, 225, 228, 235, 239, 240, 242, 247, 262, 263, 265, 269, 279, 300, 305, 307, 312, 314, 324, 325, 326, 332, 333, 334, 335, 336, 337, 340, 341, 342, 344, 345, 346, 347, 350, 357, 359, 377, 394, 409, 410, 415, 416, 417, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 433, 434, 435, 436, 439, 440], "better": [1, 3, 8, 9, 14, 15, 25, 134, 265, 269, 416, 422, 425, 435, 439], "consist": [1, 2, 3, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 56, 59, 60, 63, 66, 67, 68, 71, 72, 73, 76, 78, 79, 80, 81, 82, 83, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 202, 238, 242, 247, 250, 270, 420, 421, 422, 435, 436, 440], "interact": [1, 2, 3, 4, 5, 7, 8, 14, 15, 16, 19, 20, 21, 22, 23, 118, 121, 124, 128, 135, 139, 140, 147, 148, 151, 156, 157, 158, 232, 310, 314, 420, 422, 424, 425, 426, 428, 433, 434, 435, 440], "keep": [1, 2, 3, 4, 7, 8, 15, 56, 63, 72, 73, 101, 105, 112, 121, 147, 156, 174, 206, 210, 237, 239, 240, 242, 286, 309, 379, 390, 397, 420, 421, 422, 423, 428, 429, 430, 434, 435, 437, 440], "separ": [1, 2, 4, 8, 14, 15, 19, 20, 22, 23, 25, 33, 34, 42, 63, 68, 72, 73, 183, 210, 237, 325, 328, 331, 333, 345, 347, 349, 350, 416, 420, 421, 426, 427, 433, 434, 437, 440], "interchang": [1, 275, 276, 422, 425, 429, 436, 437], "between": [1, 2, 3, 4, 5, 14, 15, 19, 23, 26, 29, 36, 41, 49, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 71, 72, 73, 78, 94, 99, 101, 102, 105, 106, 107, 114, 118, 121, 124, 128, 135, 139, 140, 147, 148, 151, 156, 157, 158, 161, 162, 163, 192, 205, 216, 227, 230, 232, 239, 240, 242, 249, 250, 258, 263, 265, 269, 270, 275, 276, 307, 310, 314, 324, 326, 327, 328, 331, 332, 333, 336, 337, 340, 341, 342, 344, 345, 346, 347, 349, 350, 353, 359, 392, 397, 416, 420, 421, 423, 424, 428, 433, 434, 435, 437, 440], "wherea": [1, 2, 24, 29, 36, 41, 49, 59, 60, 66, 71, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 133, 134, 135, 142, 143, 147, 148, 151, 153, 156, 157, 158, 192, 230, 232, 242, 327, 342, 347, 417, 429], "correspond": [1, 2, 3, 4, 14, 15, 16, 19, 20, 21, 22, 23, 25, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 59, 60, 64, 66, 67, 68, 71, 72, 76, 78, 79, 80, 81, 82, 83, 98, 99, 118, 121, 124, 128, 135, 141, 147, 148, 151, 156, 157, 158, 183, 200, 210, 225, 230, 232, 237, 239, 240, 242, 247, 262, 265, 267, 269, 273, 274, 286, 310, 314, 327, 329, 332, 333, 347, 357, 359, 360, 361, 362, 363, 415, 420, 421, 422, 424, 425, 427, 428, 429, 433, 434, 435, 436], "sub": [1, 2, 3, 14, 15, 19, 20, 21, 22, 23, 29, 33, 34, 36, 41, 42, 49, 59, 60, 66, 68, 71, 99, 106, 112, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 211, 230, 240, 242, 315, 316, 388, 397, 415, 416, 420, 421, 422, 428, 432, 439, 440], "doesn": [1, 4, 29, 36, 41, 49, 59, 60, 66, 71, 112, 118, 121, 124, 128, 135, 142, 147, 148, 151, 156, 157, 158, 190, 193, 242, 243, 424, 425], "understood": [1, 420], "serv": [1, 3, 20, 22, 23, 130, 437, 439, 440], "basi": [1, 112, 275, 437, 439], "we": [1, 2, 3, 5, 7, 9, 11, 25, 26, 29, 33, 36, 41, 44, 49, 56, 59, 60, 63, 65, 66, 71, 72, 73, 92, 105, 107, 112, 118, 119, 120, 121, 124, 125, 128, 132, 133, 134, 135, 147, 148, 151, 156, 157, 158, 163, 183, 202, 210, 213, 219, 230, 235, 238, 239, 240, 242, 243, 246, 269, 275, 276, 277, 324, 325, 327, 328, 329, 331, 333, 334, 335, 340, 342, 344, 345, 346, 347, 349, 350, 357, 379, 414, 415, 416, 417, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 439, 440], "anoth": [1, 2, 3, 8, 17, 18, 44, 71, 76, 93, 99, 106, 118, 121, 124, 127, 128, 129, 132, 135, 147, 148, 151, 156, 157, 158, 180, 188, 190, 191, 193, 225, 231, 270, 310, 324, 325, 326, 332, 333, 334, 335, 336, 337, 340, 341, 342, 344, 345, 346, 347, 350, 357, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 416, 420, 422, 423, 424, 426, 427, 432, 433, 434, 435, 440], "wise": [1, 204], "requir": [1, 3, 4, 7, 8, 14, 15, 16, 19, 20, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 59, 60, 63, 66, 67, 68, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 93, 98, 99, 106, 107, 118, 121, 124, 128, 132, 135, 142, 147, 148, 151, 153, 156, 157, 158, 180, 183, 187, 200, 210, 222, 225, 230, 231, 232, 235, 237, 240, 242, 247, 265, 269, 270, 277, 297, 313, 314, 315, 316, 324, 325, 326, 327, 332, 333, 334, 335, 336, 337, 340, 341, 342, 344, 345, 346, 347, 349, 350, 357, 377, 379, 381, 415, 417, 420, 421, 422, 423, 425, 426, 427, 429, 433, 434, 435, 437, 439, 440], "op": [1, 27, 28, 30, 31, 32, 37, 45, 46, 47, 48, 51, 52, 53, 54, 76, 79, 80, 81, 82, 83, 205, 238, 244, 247, 262, 379, 399], "sinc": [1, 2, 3, 4, 5, 7, 11, 25, 29, 36, 41, 44, 49, 56, 59, 60, 63, 66, 71, 72, 73, 98, 99, 107, 112, 118, 121, 124, 128, 135, 147, 148, 149, 150, 151, 153, 156, 157, 158, 163, 174, 188, 242, 244, 245, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 275, 277, 280, 281, 284, 286, 289, 290, 292, 297, 305, 306, 307, 309, 311, 312, 317, 320, 377, 379, 416, 420, 421, 422, 423, 425, 426, 427, 433, 435, 436, 437, 439, 440], "goal": [1, 3, 4, 135, 224, 420, 421, 422, 423, 434, 435], "policy_devic": [1, 14, 15, 16, 19, 20, 21, 22, 23, 421], "explicitli": [1, 2, 3, 4, 32, 77, 89, 90, 97, 101, 179, 285, 310, 387, 416, 421, 423, 428, 433, 434, 437], "do": [1, 2, 3, 4, 7, 51, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 161, 162, 174, 176, 211, 225, 230, 238, 239, 265, 269, 276, 278, 303, 314, 342, 359, 379, 415, 416, 417, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 437, 439, 440], "deepcopi": [1, 277, 342, 433], "structur": [1, 3, 7, 44, 51, 55, 56, 57, 63, 64, 65, 72, 73, 76, 77, 78, 93, 112, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 175, 190, 193, 225, 275, 286, 324, 333, 344, 347, 359, 360, 361, 362, 363, 413, 416, 420, 422, 423, 425, 428, 433, 434, 435, 436], "place": [1, 2, 3, 26, 29, 35, 36, 41, 49, 55, 57, 59, 60, 64, 66, 71, 78, 92, 94, 101, 104, 106, 114, 118, 121, 124, 125, 128, 135, 147, 148, 151, 156, 157, 158, 161, 162, 175, 179, 187, 194, 210, 225, 231, 232, 235, 237, 238, 239, 242, 277, 305, 309, 313, 394, 399, 400, 416, 421, 422, 426, 429, 433, 434, 435, 437], "instanti": [1, 2, 3, 14, 15, 23, 55, 56, 57, 61, 62, 63, 64, 72, 73, 76, 78, 98, 99, 101, 132, 134, 179, 200, 225, 276, 359, 360, 361, 362, 363, 377, 420, 421, 426, 427, 429, 433, 434, 435, 437, 440], "all": [1, 2, 3, 4, 8, 11, 14, 15, 16, 18, 19, 20, 21, 22, 23, 25, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 66, 67, 68, 71, 72, 73, 76, 78, 79, 80, 81, 82, 83, 85, 101, 118, 121, 122, 123, 124, 125, 127, 128, 129, 130, 134, 135, 139, 140, 141, 145, 146, 147, 148, 149, 150, 151, 156, 157, 158, 161, 162, 164, 166, 168, 172, 174, 176, 182, 183, 186, 187, 190, 191, 193, 196, 202, 205, 206, 210, 218, 220, 222, 225, 226, 231, 232, 235, 237, 239, 242, 244, 245, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 275, 276, 277, 280, 281, 284, 286, 289, 290, 292, 297, 300, 305, 307, 309, 312, 313, 314, 316, 317, 320, 321, 324, 325, 327, 336, 340, 342, 344, 345, 346, 347, 349, 350, 354, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 379, 393, 397, 400, 409, 410, 411, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 437, 439, 440], "graph": [1, 3, 4, 8, 36, 59, 71, 119, 120, 133, 134, 355, 356, 420, 424, 435], "reli": [1, 2, 3, 11, 25, 60, 66, 225, 263, 264, 265, 267, 268, 269, 324, 344, 416, 420, 422, 424, 426, 428, 435, 440], "third": [1, 206, 227, 307, 433, 434], "parti": 1, "try": [1, 2, 4, 7, 8, 9, 14, 15, 16, 19, 20, 21, 22, 23, 33, 34, 42, 55, 57, 64, 68, 78, 420, 421, 422, 423, 424, 427, 428, 433, 434, 435, 439, 440], "limit": [1, 2, 27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 65, 67, 68, 76, 79, 80, 81, 82, 83, 118, 121, 124, 128, 135, 141, 147, 148, 151, 156, 157, 158, 183, 202, 324, 326, 341, 342, 344, 346, 416, 420, 421, 423, 433, 434, 435], "chart": 1, "show": [1, 2, 11, 29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242, 276, 379, 420, 422, 423, 424, 433, 434, 435, 437, 439], "decis": [1, 2, 3, 251, 256, 284, 305, 330, 343, 415, 423, 425, 426, 433, 434, 437, 440], "multiprocess": [1, 2, 3, 14, 15, 20, 21, 22, 63, 72, 73, 93, 101, 118, 125, 126, 147, 151, 156, 239, 240, 420, 421, 422, 423, 428, 433, 434, 435, 436, 440], "ensur": [1, 2, 3, 13, 14, 15, 16, 19, 20, 21, 22, 23, 29, 36, 41, 49, 56, 59, 60, 66, 71, 72, 78, 98, 99, 105, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 176, 183, 210, 223, 232, 235, 239, 240, 242, 265, 269, 306, 415, 421, 422, 435, 437], "flexibl": [1, 3, 9, 142, 351, 416, 417, 420, 424, 437, 440], "extens": [1, 2, 56, 63, 72, 73, 107, 247, 417, 437], "mechan": [1, 4, 29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 232, 242, 421, 427, 435], "accommod": [1, 2, 3, 13, 14, 15, 16, 19, 20, 21, 22, 23, 425, 426], "variou": [1, 2, 3, 121, 231, 324, 325, 326, 332, 333, 334, 335, 336, 337, 340, 341, 342, 344, 345, 346, 347, 350, 351, 357, 379, 409, 410, 420, 421, 422, 424, 425, 426, 427, 429, 433, 434, 437, 440], "deploy": [1, 424], "scenario": [1, 2, 139, 140, 147, 161, 162, 230, 377, 420, 426, 433, 434, 435], "facilit": [1, 2, 3, 7, 209, 210, 225, 235, 237, 302, 303, 304, 415, 420, 423, 426, 435], "weightupdatereceiverbas": [1, 13, 14, 15, 16, 19, 20, 21, 22, 23], "weightupdatesenderbas": [1, 13, 14, 15, 16, 19, 20, 21, 22, 23], "These": [1, 2, 7, 44, 65, 115, 161, 210, 237, 240, 415, 416, 420, 422, 433, 434, 435, 437, 440], "base": [1, 3, 4, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 29, 44, 56, 63, 66, 72, 73, 77, 103, 109, 112, 113, 115, 116, 118, 119, 120, 121, 124, 128, 132, 133, 134, 135, 141, 142, 143, 147, 148, 151, 156, 157, 158, 161, 174, 191, 215, 229, 231, 235, 236, 265, 269, 275, 277, 302, 308, 324, 325, 327, 328, 329, 331, 332, 333, 335, 340, 344, 345, 346, 347, 349, 350, 386, 397, 415, 416, 417, 420, 421, 423, 425, 426, 427, 429, 433, 434, 435, 437, 440], "interfac": [1, 3, 17, 18, 118, 131, 144, 270, 278, 415, 416, 420, 422, 424, 429, 435, 437], "logic": [1, 3, 13, 14, 15, 16, 19, 20, 21, 22, 23, 433], "allow": [1, 2, 3, 14, 15, 16, 19, 20, 21, 22, 23, 26, 29, 33, 34, 36, 41, 42, 49, 51, 53, 55, 57, 59, 60, 63, 64, 66, 67, 68, 71, 72, 73, 78, 93, 99, 101, 104, 106, 107, 118, 119, 120, 121, 124, 128, 133, 134, 135, 147, 148, 151, 156, 157, 158, 174, 179, 180, 213, 240, 242, 243, 270, 324, 325, 327, 328, 329, 331, 333, 334, 335, 340, 342, 344, 345, 346, 347, 349, 350, 351, 353, 357, 415, 417, 420, 422, 423, 424, 425, 426, 427, 433, 434, 435, 437, 439, 440], "tailor": [1, 439], "need": [1, 2, 3, 4, 7, 8, 10, 13, 14, 15, 16, 19, 20, 21, 22, 23, 26, 29, 35, 36, 41, 49, 55, 57, 59, 60, 66, 71, 76, 108, 112, 118, 121, 124, 128, 132, 135, 138, 147, 148, 149, 150, 151, 156, 157, 158, 183, 186, 188, 197, 203, 210, 213, 226, 230, 231, 232, 237, 239, 240, 242, 243, 244, 245, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 277, 278, 280, 281, 284, 286, 289, 290, 292, 297, 305, 307, 309, 310, 311, 312, 313, 317, 320, 323, 333, 346, 347, 358, 363, 379, 397, 411, 415, 416, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 433, 434, 435, 437, 439, 440], "respons": [1, 2, 3, 8, 14, 15, 16, 17, 18, 20, 22, 23, 99, 106, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 397, 427, 428, 440], "It": [1, 2, 3, 4, 7, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 58, 59, 60, 65, 66, 67, 68, 71, 72, 74, 76, 77, 79, 80, 81, 82, 83, 93, 101, 104, 112, 117, 118, 121, 124, 128, 130, 135, 141, 142, 147, 148, 149, 150, 151, 156, 157, 158, 161, 162, 163, 174, 180, 182, 183, 194, 200, 202, 206, 211, 224, 230, 232, 238, 240, 242, 244, 252, 254, 260, 262, 275, 276, 285, 286, 287, 289, 290, 296, 297, 307, 309, 312, 314, 324, 325, 326, 327, 332, 333, 334, 335, 336, 337, 340, 341, 342, 344, 345, 346, 347, 348, 350, 357, 358, 359, 377, 386, 392, 414, 415, 416, 420, 421, 423, 424, 425, 433, 434, 435, 436, 437, 439, 440], "particularli": [1, 2, 3, 14, 15, 424, 439, 440], "machin": [1, 2, 7, 20, 21, 22, 49, 132, 433, 434, 439], "fetch": [1, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 55, 57, 64, 78, 119, 120, 122, 123, 202, 426, 436, 437], "server": [1, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], "appli": [1, 2, 3, 4, 16, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 56, 59, 60, 61, 62, 63, 66, 67, 68, 71, 72, 73, 74, 76, 79, 80, 81, 82, 83, 101, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 176, 177, 179, 180, 182, 183, 184, 187, 188, 190, 191, 192, 194, 195, 196, 197, 198, 201, 202, 203, 205, 209, 211, 212, 213, 215, 218, 219, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 235, 236, 238, 239, 242, 247, 263, 267, 277, 294, 306, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 338, 340, 341, 343, 344, 345, 346, 347, 349, 350, 359, 377, 393, 417, 420, 421, 422, 428, 433, 435, 439, 440], "ask": [1, 2, 3, 8, 99, 106, 107, 379, 422, 423, 425, 426, 433, 434, 436, 440], "contrast": [1, 3, 263, 285, 339, 437], "situat": [1, 2, 139, 140], "decid": [1, 56, 63, 72, 73, 433, 439], "handl": [1, 2, 3, 14, 15, 20, 22, 23, 29, 36, 41, 49, 51, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 238, 239, 240, 242, 269, 270, 324, 342, 344, 397, 409, 410, 420, 421, 422, 423, 425, 427, 434, 437], "essenti": [1, 2, 3, 324, 325, 326, 332, 333, 334, 335, 336, 337, 340, 341, 342, 344, 345, 346, 347, 350, 357, 421, 425, 433, 435, 437], "system": [1, 4, 5, 90, 422, 433, 434, 435], "kept": [1, 3, 25, 105, 107, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 163, 174, 192, 219, 266, 294, 295, 427, 433], "central": [1, 2, 18, 275, 276, 277, 420, 421, 425, 433, 434, 437], "divers": [1, 4, 147, 156], "benefici": [1, 2], "involv": [1, 127, 129, 130, 139, 140, 153, 180, 183, 230, 265, 269, 425, 427], "complex": [1, 2, 3, 29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 187, 210, 225, 231, 232, 235, 237, 242, 313, 420, 421, 425, 426], "architectur": [1, 4, 256, 427, 433, 434, 439], "special": [1, 3, 80, 82, 413, 420, 423, 424, 440], "hardwar": [1, 3, 424], "By": [1, 2, 3, 16, 33, 34, 42, 53, 68, 118, 121, 122, 123, 124, 127, 128, 129, 130, 135, 139, 140, 147, 148, 149, 150, 151, 153, 156, 157, 158, 161, 162, 176, 177, 179, 180, 182, 183, 184, 187, 188, 191, 194, 195, 196, 198, 201, 202, 204, 209, 211, 212, 213, 215, 218, 219, 222, 223, 224, 225, 226, 227, 229, 230, 231, 235, 236, 238, 239, 242, 297, 314, 342, 387, 392, 411, 416, 420, 423, 433, 436, 437, 440], "retriev": [1, 3, 17, 18, 44, 55, 56, 57, 59, 61, 62, 63, 64, 72, 73, 78, 101, 104, 106, 107, 118, 121, 124, 127, 128, 129, 135, 147, 148, 151, 156, 157, 158, 174, 184, 191, 194, 206, 246, 249, 272, 309, 310, 314, 317, 321, 324, 325, 326, 327, 329, 341, 344, 345, 347, 349, 350, 357, 359, 360, 361, 362, 411, 417, 421, 422, 426, 435, 440], "seamless": [1, 2, 270], "integr": [1, 2, 29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 187, 210, 225, 231, 232, 235, 237, 242, 255, 265, 269, 272, 313, 415, 425, 426, 428, 433, 434, 435, 436], "infrastructur": [1, 3, 433, 434], "vanillalocalweightupdat": [1, 16], "multiprocessedremoteweightupd": [1, 14, 15], "rayweightupdatesend": [1, 23], "rpcweightupdatesend": [1, 22], "distributedweightupdatesend": [1, 20], "cover": [1, 3, 127, 129, 414, 422, 425, 428, 429, 435, 439], "rang": [1, 2, 3, 4, 8, 56, 61, 62, 63, 65, 72, 73, 92, 94, 101, 112, 118, 121, 124, 125, 128, 135, 139, 140, 147, 148, 151, 156, 157, 158, 215, 228, 239, 242, 243, 264, 268, 285, 341, 349, 350, 416, 417, 420, 422, 423, 424, 427, 428, 430, 433, 434, 435, 437, 439], "typic": [1, 2, 3, 4, 8, 16, 20, 22, 23, 29, 36, 41, 49, 59, 60, 66, 71, 78, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 194, 224, 242, 283, 285, 310, 325, 327, 342, 344, 347, 415, 416, 417, 422, 424, 425, 427, 428, 433, 434, 435], "scale": [1, 3, 4, 26, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 183, 202, 206, 217, 224, 228, 239, 240, 245, 260, 266, 289, 290, 294, 295, 302, 303, 304, 310, 314, 316, 324, 325, 327, 340, 344, 345, 346, 347, 395, 401, 411, 415, 420, 421, 422, 423, 426, 434, 439], "design": [1, 29, 36, 41, 49, 51, 53, 59, 60, 66, 71, 104, 110, 117, 118, 121, 124, 128, 135, 139, 140, 147, 148, 151, 156, 157, 158, 176, 183, 200, 211, 230, 232, 240, 242, 305, 324, 325, 326, 327, 332, 333, 334, 335, 336, 337, 340, 341, 342, 344, 345, 346, 347, 350, 357, 413, 420, 421, 422, 423, 425, 426, 427, 432, 433, 434, 435, 437, 439, 440], "leverag": [1, 23, 118, 121, 124, 128, 135, 138, 147, 148, 149, 150, 151, 156, 157, 158, 420, 434, 440], "latenc": [1, 2, 3], "account": [1, 2, 92, 94, 114, 118, 121, 124, 127, 128, 129, 135, 147, 148, 151, 156, 157, 158, 179, 188, 273, 274, 415, 421, 423, 437, 440], "delai": [1, 24, 349, 427], "transfer": [1, 13, 14, 15, 16, 19, 20, 21, 22, 23, 314], "receiv": [1, 2, 3, 14, 15, 29, 36, 41, 49, 59, 60, 65, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 231, 232, 240, 242, 270, 365, 416, 420, 422, 427, 432, 435], "manner": [1, 2, 128, 210, 235, 415, 420, 421, 422, 428, 432, 435, 437], "maintain": [1, 3, 5, 9, 35, 51, 183, 240, 435], "import": [1, 2, 3, 4, 6, 10, 11, 14, 15, 16, 19, 23, 24, 25, 27, 28, 30, 31, 32, 33, 34, 36, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 88, 92, 93, 94, 98, 99, 101, 106, 107, 112, 114, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 133, 134, 135, 137, 139, 140, 141, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 164, 167, 168, 173, 174, 175, 176, 177, 179, 180, 182, 183, 186, 188, 194, 195, 200, 201, 202, 203, 206, 208, 210, 212, 213, 214, 215, 218, 219, 220, 222, 223, 224, 225, 226, 227, 230, 231, 233, 237, 239, 240, 242, 243, 246, 248, 252, 253, 254, 255, 258, 259, 261, 262, 263, 264, 265, 267, 268, 269, 270, 272, 275, 276, 277, 286, 287, 288, 296, 301, 302, 303, 304, 305, 306, 307, 309, 310, 311, 312, 313, 314, 316, 317, 318, 321, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 340, 342, 344, 345, 346, 347, 349, 350, 357, 359, 360, 361, 362, 377, 379, 390, 392, 407, 415, 416, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 439, 440], "stale": 1, "lead": [1, 2, 3, 4, 8, 10, 25, 33, 34, 42, 49, 56, 63, 68, 78, 105, 118, 121, 122, 123, 124, 127, 128, 129, 130, 135, 147, 148, 151, 156, 157, 158, 225, 243, 266, 287, 294, 295, 300, 420, 423, 424, 433, 434, 435, 437, 439], "suboptim": 1, "scalabl": 1, "As": [1, 2, 3, 4, 49, 63, 72, 73, 76, 101, 118, 121, 124, 128, 135, 138, 147, 148, 149, 150, 151, 156, 157, 158, 215, 257, 314, 359, 415, 420, 421, 422, 423, 424, 425, 427, 428, 433, 434, 435, 436, 437, 439, 440], "grow": [1, 3, 93], "overhead": [1, 2, 118, 119, 120, 121, 124, 128, 133, 134, 135, 147, 148, 151, 156, 157, 158, 174, 314], "broadcast": [1, 2, 27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 67, 68, 76, 79, 80, 81, 82, 83, 257, 333, 347], "minim": [1, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 381, 437], "bottleneck": [1, 3, 8, 99, 106, 107], "achiev": [1, 2, 3, 4, 29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 132, 135, 147, 148, 151, 156, 157, 158, 175, 224, 242, 248, 310, 394, 417, 420, 421, 422, 423, 424, 433, 434, 435, 437, 439, 440], "robust": [1, 211, 245], "varieti": [1, 3, 11], "remain": [1, 105, 182, 191, 192, 202, 224, 279, 427], "date": [1, 121, 182, 382], "simplest": [1, 36, 59, 71, 112, 317, 420, 422, 423, 426, 433, 434, 437, 440], "transit": [1, 29, 36, 41, 49, 59, 60, 66, 71, 99, 107, 112, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242, 245, 247, 319, 420, 423, 425, 426, 428, 433, 435, 437], "sampl": [1, 4, 8, 9, 27, 28, 30, 31, 32, 33, 34, 36, 37, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 59, 61, 62, 63, 65, 67, 68, 71, 72, 73, 76, 79, 80, 81, 82, 83, 88, 92, 93, 94, 98, 99, 100, 101, 104, 105, 106, 107, 110, 112, 114, 118, 121, 124, 128, 135, 141, 144, 147, 148, 151, 156, 157, 158, 165, 172, 176, 177, 179, 180, 182, 183, 184, 187, 188, 191, 194, 195, 196, 198, 201, 202, 209, 211, 212, 213, 215, 218, 219, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 235, 236, 238, 239, 240, 242, 244, 246, 257, 262, 266, 272, 273, 274, 282, 284, 285, 286, 289, 294, 295, 298, 301, 306, 307, 308, 310, 311, 312, 313, 314, 324, 325, 326, 327, 328, 329, 331, 341, 343, 344, 349, 350, 388, 394, 397, 400, 413, 415, 416, 420, 421, 422, 423, 424, 425, 426, 428, 430, 433, 434, 436, 439, 440], "attent": [1, 2, 8, 183, 420, 423, 440], "given": [1, 2, 3, 14, 15, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 56, 59, 60, 61, 62, 63, 65, 66, 67, 68, 71, 72, 73, 76, 78, 79, 80, 81, 82, 83, 84, 85, 99, 101, 106, 107, 118, 121, 124, 128, 135, 141, 145, 146, 147, 148, 151, 156, 157, 158, 159, 160, 174, 187, 192, 200, 206, 210, 225, 229, 231, 232, 233, 235, 237, 239, 240, 242, 244, 246, 248, 259, 260, 262, 263, 265, 267, 269, 272, 277, 288, 292, 301, 306, 307, 309, 312, 313, 314, 315, 316, 318, 323, 328, 329, 331, 342, 358, 359, 360, 361, 362, 363, 365, 389, 392, 407, 415, 416, 417, 420, 421, 422, 425, 426, 427, 428, 429, 434, 435, 440], "built": [1, 2, 3, 5, 7, 101, 119, 120, 127, 133, 134, 144, 145, 324, 325, 327, 328, 329, 331, 333, 334, 335, 340, 342, 344, 345, 346, 347, 349, 350, 351, 357, 405, 407, 408, 411, 420, 421, 422, 423, 424, 427, 429, 435, 437, 440], "flatten": [1, 27, 28, 30, 31, 32, 33, 34, 37, 38, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 55, 57, 64, 67, 68, 76, 78, 79, 80, 81, 82, 83, 112, 180, 197, 394, 413, 423, 434], "suffici": [1, 3, 4, 420], "preprocess": [1, 2, 77, 231, 421, 424], "popul": [1, 2, 3, 14, 15, 16, 23, 56, 61, 62, 63, 70, 72, 73, 101, 201, 225, 257, 277, 342, 420, 422, 423, 426, 428, 435, 437], "replaybuff": [1, 2, 3, 14, 15, 16, 23, 38, 56, 61, 62, 69, 72, 73, 92, 93, 98, 99, 100, 101, 106, 107, 116, 183, 211, 215, 242, 329, 334, 357, 405, 407, 413, 422, 424, 428, 430, 433, 434, 436, 437, 439], "lazytensorstorag": [1, 2, 56, 63, 71, 72, 73, 98, 106, 107, 112, 215, 242, 422, 424, 430, 433, 434, 437], "lambda": [1, 2, 14, 15, 16, 19, 23, 24, 36, 44, 59, 63, 71, 78, 112, 118, 121, 124, 125, 128, 135, 147, 148, 151, 156, 157, 158, 173, 180, 188, 200, 202, 225, 233, 240, 242, 243, 248, 297, 306, 309, 310, 311, 335, 337, 338, 349, 359, 362, 370, 371, 375, 376, 377, 407, 416, 420, 421, 424, 433, 434, 436, 437, 439, 440], "reshap": [1, 2, 27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 67, 68, 76, 79, 80, 81, 82, 83, 106, 112, 180, 265, 269, 270, 285, 377, 422, 433, 434], "slice": [1, 2, 3, 27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 56, 61, 62, 63, 67, 68, 72, 73, 76, 79, 80, 81, 82, 83, 99, 101, 106, 107, 176, 182, 183, 437], "recommend": [1, 2, 4, 7, 14, 15, 16, 19, 20, 21, 22, 23, 55, 56, 57, 63, 64, 72, 73, 78, 106, 112, 132, 183, 277, 416, 428, 433, 434], "creat": [1, 2, 3, 4, 5, 6, 7, 10, 14, 15, 16, 19, 20, 21, 22, 23, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 66, 67, 68, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 88, 93, 95, 101, 112, 118, 121, 124, 125, 128, 132, 135, 147, 148, 149, 151, 156, 157, 158, 161, 162, 168, 174, 180, 183, 200, 210, 230, 231, 232, 235, 238, 239, 240, 242, 249, 250, 252, 253, 254, 255, 256, 257, 261, 265, 269, 270, 271, 275, 276, 305, 313, 314, 321, 327, 329, 334, 345, 347, 357, 379, 394, 401, 402, 403, 407, 409, 410, 415, 420, 421, 422, 423, 424, 426, 429, 433, 434, 435, 436, 437, 439, 440], "multidimension": [1, 2, 72, 98, 99, 437], "slicesampl": [1, 2, 99, 107, 183, 437], "sampler": [1, 2, 56, 61, 62, 63, 72, 73, 92, 93, 94, 95, 98, 99, 100, 101, 104, 105, 106, 107, 108, 110, 112, 114, 183, 211, 285, 329, 334, 357, 420, 422, 433, 434, 437], "One": [1, 2, 3, 4, 8, 27, 28, 32, 33, 34, 37, 42, 47, 48, 53, 54, 68, 77, 112, 118, 119, 120, 147, 151, 156, 157, 183, 215, 235, 244, 282, 313, 317, 348, 353, 383, 420, 421, 437, 440], "must": [1, 2, 3, 7, 11, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 56, 59, 60, 61, 62, 63, 65, 66, 67, 68, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 88, 92, 93, 94, 95, 99, 101, 106, 107, 108, 109, 110, 112, 114, 118, 119, 121, 124, 125, 128, 133, 135, 145, 147, 148, 149, 150, 151, 153, 156, 157, 158, 159, 161, 171, 176, 179, 180, 183, 186, 188, 194, 198, 200, 202, 204, 206, 208, 219, 222, 224, 225, 226, 229, 230, 232, 233, 234, 239, 242, 249, 250, 259, 265, 269, 270, 273, 274, 275, 276, 288, 301, 306, 307, 309, 310, 311, 312, 313, 314, 317, 318, 324, 325, 327, 328, 329, 331, 332, 333, 334, 335, 340, 342, 344, 345, 346, 347, 348, 349, 350, 357, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 381, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 416, 420, 421, 422, 423, 426, 432, 435, 437], "shape": [1, 2, 3, 14, 15, 16, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 88, 92, 93, 94, 98, 101, 106, 112, 114, 118, 121, 122, 123, 124, 127, 128, 129, 133, 134, 135, 138, 139, 140, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 161, 162, 163, 168, 174, 176, 180, 182, 184, 190, 193, 194, 195, 200, 202, 203, 206, 208, 212, 213, 215, 219, 222, 223, 225, 228, 233, 239, 241, 242, 246, 248, 251, 252, 253, 254, 255, 256, 257, 258, 261, 263, 264, 265, 267, 268, 269, 270, 272, 273, 274, 275, 276, 278, 282, 283, 284, 285, 286, 287, 288, 293, 294, 296, 301, 302, 303, 304, 305, 306, 307, 309, 310, 311, 312, 313, 314, 316, 317, 318, 321, 324, 325, 327, 328, 329, 331, 332, 333, 340, 344, 345, 346, 347, 349, 350, 353, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 388, 394, 397, 407, 415, 416, 420, 421, 422, 423, 424, 426, 427, 430, 432, 433, 434, 436, 437, 439, 440], "clearli": [1, 2], "dimension": [1, 56, 60, 63, 71, 72, 73, 192, 265, 269, 359, 364, 372, 416, 434], "num_slic": [1, 2, 99, 106, 107, 437], "4": [1, 2, 3, 7, 27, 29, 33, 34, 38, 42, 44, 47, 48, 49, 53, 56, 59, 61, 62, 63, 65, 66, 68, 69, 71, 72, 73, 92, 93, 94, 101, 106, 107, 114, 118, 119, 120, 121, 122, 123, 124, 128, 133, 134, 135, 136, 137, 138, 141, 143, 147, 148, 151, 154, 155, 156, 157, 158, 176, 177, 179, 180, 183, 188, 194, 215, 222, 223, 224, 230, 239, 240, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 259, 260, 261, 262, 263, 264, 267, 268, 270, 272, 273, 274, 275, 276, 280, 281, 282, 284, 285, 286, 287, 288, 296, 301, 302, 303, 304, 305, 306, 307, 309, 310, 311, 312, 313, 316, 318, 324, 325, 327, 328, 329, 331, 332, 333, 334, 335, 340, 342, 344, 345, 346, 347, 349, 350, 357, 377, 378, 415, 419, 420, 421, 422, 423, 429, 433, 434, 435, 437, 438, 439, 440], "trajectory_kei": [1, 25, 106, 107], "traj_id": [1, 2, 3, 14, 15, 16, 25, 38, 69, 180, 215, 428, 437], "total_fram": [1, 2, 14, 15, 16, 19, 20, 21, 22, 23, 38, 49, 61, 69, 180, 183, 215, 397, 400, 407, 417, 420, 421, 422, 423, 424, 428, 430, 433, 434, 437, 439], "dim": [1, 2, 27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 63, 64, 67, 68, 72, 73, 76, 78, 79, 80, 81, 82, 83, 106, 183, 184, 204, 208, 221, 222, 225, 234, 239, 268, 292, 297, 309, 411, 416, 421, 422, 424, 433, 435, 437], "ndim": [1, 2, 27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 56, 63, 67, 68, 72, 73, 76, 79, 80, 81, 82, 83, 92, 94, 98, 99, 112, 114, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 204, 242, 309], "parallelenv": [1, 2, 3, 14, 15, 16, 19, 22, 112, 118, 121, 124, 128, 135, 142, 148, 149, 150, 151, 153, 156, 157, 158, 230, 240, 265, 269, 377, 408, 413, 420, 421, 422, 425, 432, 439, 440], "make_env": [1, 3, 147, 156, 162, 230, 239, 240, 377, 402, 403, 420, 421, 439, 440], "regular": [1, 2, 3, 14, 15, 16, 19, 20, 21, 22, 23, 55, 57, 64, 78, 98, 104, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 176, 177, 179, 180, 182, 183, 184, 187, 188, 191, 194, 195, 196, 198, 201, 202, 209, 211, 212, 213, 215, 218, 219, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 235, 236, 238, 239, 242, 245, 247, 258, 265, 269, 288, 307, 311, 312, 313, 314, 334, 344, 399, 413, 417, 420, 421, 424, 425, 426, 430, 437, 440], "behav": [1, 3, 130, 141, 263, 267, 282, 332, 340, 342, 424, 436], "accordingli": [1, 2, 3, 99, 188, 204, 223, 224, 267, 311, 423], "3": [1, 2, 3, 6, 7, 10, 11, 14, 15, 16, 19, 23, 27, 28, 29, 32, 33, 34, 36, 37, 41, 42, 44, 45, 46, 47, 48, 49, 51, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 66, 68, 71, 72, 73, 78, 92, 94, 99, 101, 106, 107, 112, 114, 118, 121, 122, 123, 124, 127, 128, 129, 130, 131, 135, 138, 139, 140, 142, 144, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 168, 177, 179, 180, 183, 187, 188, 192, 194, 195, 200, 202, 206, 208, 210, 212, 213, 215, 218, 219, 222, 223, 224, 225, 228, 230, 231, 232, 233, 235, 237, 240, 242, 243, 245, 246, 248, 249, 250, 252, 253, 254, 256, 259, 261, 263, 264, 265, 267, 268, 269, 270, 272, 273, 275, 276, 277, 282, 285, 287, 297, 301, 302, 303, 304, 306, 307, 310, 312, 313, 316, 317, 318, 324, 325, 327, 328, 329, 331, 332, 333, 334, 335, 336, 340, 342, 344, 345, 346, 347, 349, 350, 357, 359, 360, 361, 362, 365, 368, 369, 370, 371, 373, 374, 375, 376, 377, 379, 396, 415, 417, 419, 420, 421, 422, 423, 425, 426, 428, 429, 433, 434, 435, 437, 438, 439, 440], "isn": [1, 2, 3, 8, 14, 15, 16, 19, 20, 21, 22, 23, 55, 57, 64, 78, 98, 112, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 163, 179, 194, 200, 306, 313, 359, 426, 427, 429, 433, 434], "current": [1, 2, 3, 12, 14, 15, 17, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 76, 78, 79, 80, 81, 82, 83, 96, 99, 101, 107, 118, 121, 124, 128, 130, 135, 142, 145, 146, 147, 148, 151, 156, 157, 158, 165, 174, 179, 180, 183, 200, 211, 224, 225, 226, 230, 231, 232, 240, 242, 260, 286, 290, 294, 298, 309, 324, 326, 327, 334, 341, 344, 346, 347, 382, 417, 420, 421, 422, 423, 427, 433, 434, 435, 437, 440], "fulli": [1, 8, 29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242, 264, 268, 421, 424, 427, 435, 437], "ani": [1, 2, 3, 5, 8, 11, 14, 15, 16, 19, 20, 21, 22, 23, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 66, 67, 68, 71, 72, 73, 76, 78, 79, 80, 81, 82, 83, 90, 91, 92, 93, 94, 95, 101, 102, 105, 107, 108, 110, 112, 113, 114, 116, 117, 118, 121, 124, 125, 128, 135, 142, 147, 148, 149, 150, 151, 156, 157, 158, 159, 161, 162, 163, 175, 177, 179, 180, 182, 183, 184, 187, 188, 191, 194, 195, 196, 197, 198, 200, 201, 202, 209, 210, 211, 212, 213, 215, 218, 219, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 235, 236, 238, 239, 240, 242, 248, 249, 250, 256, 257, 270, 279, 285, 305, 309, 313, 314, 315, 316, 324, 325, 327, 328, 329, 331, 332, 333, 340, 342, 344, 345, 346, 347, 349, 350, 359, 361, 362, 377, 379, 384, 397, 414, 416, 420, 421, 422, 423, 424, 426, 427, 433, 434, 435, 437, 439, 440], "consecut": [1, 3, 105, 132, 269, 286, 379, 423, 425, 428, 434, 437, 440], "won": [1, 3, 4, 14, 15, 16, 19, 20, 21, 22, 23, 29, 36, 41, 49, 55, 57, 59, 60, 64, 66, 71, 78, 118, 121, 124, 125, 127, 128, 135, 142, 143, 147, 148, 151, 156, 157, 158, 210, 237, 242, 324, 397, 411, 421, 422, 425, 426], "therebi": [1, 26, 377, 416, 420, 421], "interrupt": [1, 2, 128, 309, 365], "tool": [1, 2, 3, 5, 415, 416, 423, 425, 433, 435, 437, 440], "backend": [1, 3, 7, 20, 21, 23, 24, 78, 118, 121, 124, 127, 128, 135, 147, 148, 151, 156, 157, 158, 167, 173, 243, 417, 420, 422, 423, 424, 425, 428, 429, 435], "gloo": [1, 20, 21, 24], "nccl": [1, 20, 21], "mpi": [1, 20, 21], "distributeddatacollector": [1, 24, 413], "rpc": [1, 22, 24, 62], "rpcdatacollector": [1, 24, 413], "launcher": [1, 20, 21, 22, 24], "rai": [1, 16, 23, 56, 61, 62, 63, 72, 73, 101], "submitit": [1, 20, 21, 22, 24], "mode": [1, 3, 6, 14, 15, 16, 19, 20, 21, 22, 23, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 59, 60, 66, 67, 68, 71, 76, 79, 80, 81, 82, 83, 118, 121, 124, 128, 135, 142, 147, 148, 151, 156, 157, 158, 190, 193, 224, 232, 239, 240, 242, 247, 257, 265, 266, 269, 274, 282, 293, 294, 295, 300, 310, 314, 342, 377, 387, 392, 415, 416, 420, 421, 433, 434, 439, 440], "find": [1, 4, 6, 7, 20, 21, 22, 56, 58, 74, 106, 107, 244, 267, 286, 391, 395, 420, 421, 424, 426, 427, 433, 434], "folder": [1, 2, 55, 57, 64, 78, 161, 183, 421], "wonder": 1, "why": [1, 2, 3, 174, 416, 433, 435, 440], "instead": [1, 2, 3, 4, 7, 8, 14, 15, 16, 19, 20, 21, 22, 23, 27, 29, 32, 36, 41, 49, 59, 60, 61, 66, 71, 75, 78, 118, 121, 124, 128, 134, 135, 147, 148, 151, 156, 157, 158, 183, 197, 242, 243, 244, 245, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 277, 280, 281, 284, 286, 289, 290, 292, 297, 305, 307, 309, 312, 313, 317, 320, 324, 326, 327, 329, 332, 333, 334, 340, 341, 344, 345, 346, 347, 357, 359, 363, 367, 411, 416, 424, 425, 426, 430, 435, 437, 440], "lower": [1, 2, 3, 23, 29, 30, 186, 239, 240, 289, 290, 317, 422, 433, 435], "io": [1, 11, 133, 134, 142, 145, 146, 159, 160, 267, 268, 424], "footprint": [1, 2, 437], "commun": [1, 2, 3, 135, 147, 151, 156, 414, 422, 440], "yet": [1, 119, 120, 133, 436], "plai": [1, 3, 149, 150, 158, 183, 421, 422, 427, 437, 440], "role": [1, 3, 140, 421, 427, 440], "opposit": [1, 433], "direct": [1, 2, 29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242, 263, 267, 342, 421, 427], "faster": [1, 2, 4, 25, 27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 67, 68, 76, 79, 80, 81, 82, 83, 142, 273, 359, 360, 361, 362, 423, 424, 433, 434], "share": [1, 3, 6, 8, 25, 55, 57, 63, 64, 72, 73, 76, 78, 90, 92, 93, 94, 95, 99, 101, 102, 106, 108, 110, 114, 125, 147, 156, 222, 230, 239, 240, 265, 269, 275, 276, 302, 303, 304, 324, 325, 326, 327, 328, 332, 333, 340, 341, 344, 345, 346, 347, 349, 350, 411, 413, 415, 416, 422, 424, 430, 432, 433, 434, 439, 440], "among": [1, 3, 51, 149, 150, 230, 333, 347, 416, 433, 434], "prohibit": [1, 3, 16, 112], "slow": [1, 3, 4, 11, 55, 57, 64, 78, 93, 106, 107], "compar": [1, 3, 112, 325, 327, 340, 345, 347, 349, 350, 392, 416, 420, 422, 424, 426, 427, 433, 434, 437, 440], "gpu": [1, 7, 8, 29, 36, 41, 49, 59, 60, 66, 71, 92, 94, 114, 118, 121, 124, 128, 129, 132, 135, 147, 148, 151, 156, 157, 158, 242, 420, 422, 423, 433, 434, 440], "driver": [1, 7], "mean": [1, 2, 3, 4, 7, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 55, 57, 64, 72, 76, 78, 93, 98, 99, 106, 107, 112, 118, 119, 120, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 179, 206, 230, 239, 240, 244, 245, 246, 257, 260, 263, 265, 267, 269, 272, 284, 285, 293, 294, 310, 314, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 338, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 359, 360, 361, 362, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 415, 416, 420, 421, 422, 424, 426, 433, 434, 435, 437, 440], "keyword": [1, 2, 3, 11, 14, 15, 16, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 66, 67, 68, 71, 72, 73, 76, 78, 79, 80, 81, 82, 83, 88, 90, 92, 93, 94, 98, 99, 101, 104, 106, 107, 110, 114, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 133, 134, 135, 139, 140, 142, 143, 145, 146, 147, 148, 151, 153, 156, 157, 158, 159, 160, 161, 162, 168, 176, 177, 179, 180, 182, 183, 184, 186, 187, 188, 191, 194, 195, 196, 198, 200, 201, 202, 204, 209, 210, 211, 212, 213, 215, 218, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 248, 262, 265, 269, 273, 274, 275, 276, 286, 301, 305, 306, 309, 310, 311, 313, 314, 317, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 338, 339, 340, 341, 343, 344, 345, 346, 347, 349, 350, 352, 357, 359, 360, 361, 362, 363, 367, 377, 379, 384, 386, 397, 408, 420, 421, 422, 424, 426, 429, 433, 434, 437, 439, 440], "build": [1, 2, 3, 7, 25, 29, 33, 36, 41, 49, 56, 59, 60, 61, 62, 63, 66, 71, 72, 73, 76, 101, 118, 119, 120, 121, 124, 128, 129, 130, 133, 134, 135, 139, 140, 142, 145, 146, 147, 148, 151, 153, 156, 157, 158, 159, 160, 161, 162, 215, 239, 240, 242, 246, 272, 308, 310, 314, 397, 404, 405, 406, 415, 416, 417, 422, 423, 424, 426, 427, 428, 429, 433, 434, 435, 436, 439, 440], "mani": [1, 2, 3, 4, 63, 119, 120, 122, 123, 124, 127, 129, 130, 133, 134, 142, 143, 153, 225, 324, 326, 333, 341, 344, 415, 420, 421, 422, 424, 425, 426, 428, 430, 433, 434, 435, 437, 439, 440], "eg": [1, 2, 3, 27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 55, 57, 64, 67, 68, 76, 78, 79, 80, 81, 82, 83, 92, 93, 94, 95, 108, 110, 114, 118, 121, 122, 123, 124, 127, 128, 129, 130, 132, 135, 147, 148, 151, 153, 156, 157, 158, 192, 223, 232, 243, 275, 305, 379], "gymnasium": [1, 2, 3, 5, 71, 118, 121, 124, 127, 128, 129, 135, 136, 137, 147, 148, 151, 156, 157, 158, 167, 173, 195, 219, 223, 238, 243, 421, 422, 424, 435, 439], "warn": [1, 3, 60, 66, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 239, 244, 262, 286, 387, 421], "quickli": [1, 3, 421, 433, 434, 440], "becom": [1, 2, 3, 4, 23, 263, 267, 433, 434, 440], "quit": [1, 3, 11, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 420, 421, 422, 424, 426, 433, 434, 440], "annoi": [1, 3], "filter": [1, 2, 3, 4, 77, 99, 106, 107, 324, 325, 327, 328, 332, 333, 340, 344, 345, 347, 425], "out": [1, 2, 3, 4, 5, 9, 23, 29, 36, 41, 44, 49, 55, 57, 59, 60, 64, 66, 71, 77, 78, 90, 99, 106, 107, 118, 121, 124, 128, 135, 147, 148, 149, 150, 151, 156, 157, 158, 163, 222, 225, 242, 244, 263, 264, 267, 273, 274, 277, 278, 279, 301, 305, 306, 307, 310, 311, 312, 313, 314, 342, 355, 356, 416, 417, 420, 421, 422, 423, 424, 425, 426, 428, 433, 434, 435, 437, 439, 440], "still": [1, 2, 3, 9, 36, 59, 71, 78, 79, 118, 119, 120, 121, 124, 128, 133, 134, 135, 147, 148, 151, 156, 157, 158, 230, 286, 341, 342, 416, 420, 421, 423, 432, 435, 437, 440], "wish": [1, 3, 11, 14, 15, 19, 173, 427, 437], "displai": [1, 3, 7, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 397, 417, 420, 421, 434, 435], "filter_warnings_subprocess": [1, 3], "fals": [1, 2, 3, 11, 12, 14, 15, 16, 19, 20, 21, 22, 23, 25, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 104, 105, 106, 107, 108, 113, 114, 116, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 168, 174, 175, 176, 177, 179, 180, 183, 184, 187, 188, 190, 193, 194, 195, 197, 200, 201, 202, 204, 205, 206, 208, 210, 211, 212, 213, 215, 217, 218, 219, 222, 223, 225, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 242, 243, 244, 245, 246, 248, 249, 250, 252, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 286, 287, 288, 294, 295, 296, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 311, 312, 313, 314, 316, 317, 318, 324, 325, 326, 327, 328, 329, 331, 332, 333, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 353, 357, 359, 360, 361, 362, 368, 369, 370, 371, 373, 374, 375, 376, 377, 379, 386, 387, 390, 391, 392, 394, 395, 397, 411, 415, 416, 417, 420, 421, 422, 424, 429, 430, 432, 433, 434, 435, 436, 439, 440], "part": [2, 3, 4, 8, 29, 36, 41, 49, 59, 60, 65, 66, 71, 78, 118, 119, 121, 124, 128, 133, 135, 145, 147, 148, 151, 156, 157, 158, 174, 182, 206, 215, 218, 242, 318, 388, 411, 416, 420, 422, 423, 424, 430, 433, 435, 440], "algorithm": [2, 3, 8, 9, 141, 176, 222, 324, 344, 345, 347, 413, 416, 417, 420, 421, 422, 423, 424, 426, 427, 428, 429, 433, 434, 436, 437, 439], "implement": [2, 3, 9, 14, 15, 16, 17, 18, 23, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 59, 60, 61, 66, 67, 68, 71, 75, 76, 79, 80, 81, 82, 83, 96, 108, 109, 118, 121, 124, 128, 135, 141, 142, 147, 148, 151, 156, 157, 158, 180, 187, 190, 191, 195, 198, 202, 204, 212, 213, 219, 223, 229, 231, 232, 233, 239, 240, 242, 243, 247, 249, 263, 264, 265, 266, 267, 268, 269, 293, 294, 295, 324, 325, 327, 330, 331, 332, 338, 340, 342, 343, 344, 346, 347, 349, 377, 388, 402, 413, 415, 417, 420, 421, 422, 423, 424, 433, 434, 435, 439], "wide": [2, 3, 5, 439], "give": [2, 3, 7, 72, 118, 121, 124, 128, 135, 141, 147, 148, 151, 156, 157, 158, 183, 414, 416, 420, 421, 424, 433, 434, 435, 436, 439], "abil": [2, 342, 435, 437], "panel": [2, 422], "usag": [2, 3, 5, 7, 14, 15, 16, 19, 20, 21, 22, 23, 36, 59, 71, 90, 112, 180, 183, 194, 247, 265, 269, 327, 332, 340, 347, 351, 415, 420, 422, 423, 426, 427, 429, 433, 434, 437], "includ": [2, 3, 4, 7, 9, 23, 29, 36, 41, 49, 59, 60, 66, 71, 76, 78, 89, 90, 92, 93, 94, 95, 97, 108, 110, 114, 118, 121, 124, 128, 135, 141, 145, 146, 147, 148, 151, 156, 157, 158, 197, 200, 224, 230, 232, 239, 240, 242, 265, 269, 324, 327, 342, 347, 400, 415, 417, 420, 421, 422, 423, 424, 433, 434, 435, 437, 440], "almost": [2, 240, 273, 274, 423], "physic": [2, 6, 7, 90, 147, 148, 153, 417, 420, 433, 434, 435], "theori": 2, "crude": 2, "made": [2, 3, 25, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 59, 60, 63, 66, 67, 68, 71, 76, 79, 80, 81, 82, 83, 92, 93, 94, 95, 108, 110, 114, 118, 121, 124, 127, 128, 129, 135, 147, 148, 151, 156, 157, 158, 225, 242, 277, 286, 329, 342, 357, 420, 421, 423, 433, 434, 436, 437, 439], "liststorag": [2, 44, 56, 61, 62, 63, 71, 72, 73, 93, 101, 437], "veri": [2, 3, 133, 134, 421, 425, 428, 433, 435, 437, 439, 440], "ineffici": [2, 4], "tensor": [2, 8, 14, 15, 16, 19, 20, 21, 22, 23, 25, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 104, 106, 107, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 161, 162, 168, 174, 175, 176, 177, 179, 180, 182, 183, 184, 187, 188, 190, 192, 193, 194, 195, 197, 200, 201, 203, 206, 208, 210, 211, 212, 213, 215, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 237, 239, 240, 242, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 282, 283, 284, 285, 286, 287, 288, 291, 292, 293, 294, 295, 296, 301, 302, 303, 304, 305, 306, 307, 309, 310, 311, 312, 313, 314, 316, 317, 318, 320, 322, 324, 325, 327, 328, 329, 331, 332, 333, 336, 337, 340, 342, 344, 345, 346, 347, 349, 350, 353, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 415, 416, 417, 420, 421, 422, 423, 424, 425, 426, 433, 434, 435, 439, 440], "contigu": [2, 3, 8, 30, 33, 41, 79, 93, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 168, 200, 203, 225, 233, 435, 437, 439], "tensorstorag": [2, 63, 71, 92, 98, 99, 112, 115, 428, 437], "lazymemmapstorag": [2, 38, 56, 61, 62, 63, 69, 72, 73, 99, 101, 106, 107, 182, 183, 420, 421, 423, 428, 433, 436, 437], "class": [2, 5, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 124, 125, 126, 127, 128, 129, 130, 134, 135, 138, 141, 144, 147, 148, 149, 150, 151, 153, 156, 157, 158, 159, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 409, 410, 411, 413, 415, 416, 417, 420, 421, 422, 423, 425, 426, 427, 428, 429, 433, 434, 437, 440], "citizen": 2, "pytre": [2, 56, 61, 62, 63, 72, 73, 95, 101, 115], "tupl": [2, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 76, 78, 79, 80, 81, 82, 83, 90, 95, 99, 101, 106, 110, 112, 118, 121, 122, 123, 124, 127, 128, 129, 135, 147, 148, 151, 156, 157, 158, 183, 200, 202, 206, 242, 248, 252, 258, 259, 265, 268, 269, 270, 277, 284, 287, 288, 306, 307, 311, 312, 317, 324, 325, 326, 327, 328, 332, 333, 335, 340, 341, 342, 344, 345, 346, 347, 349, 350, 359, 360, 361, 362, 391, 392, 395, 404, 437, 439], "dictionari": [2, 14, 15, 16, 19, 20, 21, 22, 23, 29, 33, 36, 41, 49, 55, 57, 59, 60, 64, 66, 71, 77, 78, 99, 104, 106, 107, 118, 121, 124, 127, 128, 129, 135, 139, 140, 147, 148, 151, 156, 157, 158, 161, 162, 200, 225, 230, 232, 240, 242, 310, 314, 327, 347, 349, 392, 409, 410, 411, 417, 421, 422, 425, 427, 433, 435, 440], "nest": [2, 3, 25, 29, 33, 34, 36, 38, 40, 41, 42, 49, 50, 55, 57, 59, 60, 63, 64, 66, 68, 69, 70, 71, 78, 84, 92, 93, 94, 97, 101, 114, 118, 121, 124, 127, 128, 129, 135, 147, 148, 151, 156, 157, 158, 175, 183, 223, 226, 230, 242, 309, 359, 360, 361, 362, 363, 377, 387, 417, 421, 422, 424, 434, 435, 437, 439], "construct": [2, 3, 5, 25, 29, 36, 41, 49, 56, 59, 60, 63, 66, 71, 72, 73, 76, 101, 118, 121, 124, 125, 127, 128, 135, 147, 148, 149, 151, 156, 157, 158, 163, 190, 193, 240, 242, 265, 269, 290, 314, 397, 415, 421, 422, 423, 426, 433, 435, 437, 440], "ram": [2, 127, 129, 429, 437], "prealloc": [2, 3, 147, 156, 435], "ve": [2, 65, 420, 423, 430], "been": [2, 3, 5, 7, 8, 12, 20, 22, 23, 27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 65, 67, 68, 76, 79, 80, 81, 82, 83, 101, 105, 118, 121, 124, 128, 132, 135, 139, 140, 147, 148, 151, 156, 157, 158, 202, 223, 224, 231, 232, 263, 265, 267, 269, 277, 309, 324, 342, 344, 346, 420, 421, 422, 423, 432, 433, 434, 435, 437, 439, 440], "extend": [2, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 38, 44, 56, 59, 61, 62, 63, 69, 72, 73, 78, 91, 92, 95, 98, 99, 101, 102, 106, 107, 110, 112, 113, 116, 117, 176, 182, 215, 231, 242, 245, 342, 394, 413, 416, 417, 420, 421, 422, 423, 424, 428, 430, 433, 434, 436, 437, 439], "here": [2, 3, 4, 7, 8, 9, 10, 14, 15, 23, 112, 118, 121, 122, 123, 124, 128, 132, 135, 147, 148, 149, 150, 151, 156, 157, 158, 183, 230, 277, 386, 415, 416, 417, 420, 421, 422, 423, 424, 425, 426, 428, 430, 433, 434, 435, 437, 439, 440], "start": [2, 3, 4, 5, 14, 16, 23, 26, 44, 61, 76, 77, 78, 99, 106, 107, 118, 121, 124, 125, 128, 135, 138, 147, 148, 151, 156, 157, 158, 174, 189, 393, 419, 420, 421, 424, 431, 434, 435, 437, 438, 440], "replay_buff": [2, 8, 14, 15, 16, 23, 56, 61, 62, 63, 72, 73, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 183, 394, 407, 420, 421, 422, 428, 433, 434, 437], "rb": [2, 38, 56, 61, 62, 63, 69, 72, 73, 93, 98, 99, 101, 106, 107, 112, 183, 215, 242, 421, 423, 424, 428, 430, 434, 436, 437, 439], "10": [2, 3, 7, 24, 25, 27, 28, 29, 32, 36, 37, 44, 45, 49, 56, 61, 62, 63, 65, 71, 72, 73, 74, 77, 78, 92, 93, 94, 98, 101, 106, 107, 112, 114, 118, 119, 120, 121, 124, 125, 128, 133, 134, 135, 141, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 161, 162, 176, 177, 180, 182, 183, 188, 224, 226, 227, 228, 239, 240, 242, 246, 248, 251, 252, 254, 256, 258, 262, 263, 264, 265, 267, 268, 269, 272, 273, 274, 284, 286, 297, 310, 314, 317, 321, 325, 329, 331, 338, 344, 345, 346, 350, 357, 359, 360, 361, 362, 365, 379, 388, 417, 420, 421, 422, 423, 424, 425, 426, 430, 433, 435, 437, 439, 440], "add": [2, 3, 4, 6, 23, 29, 33, 34, 36, 41, 42, 44, 49, 56, 59, 60, 61, 62, 63, 66, 68, 71, 72, 73, 91, 93, 98, 101, 102, 112, 113, 116, 117, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 183, 200, 202, 229, 232, 242, 265, 269, 278, 308, 324, 393, 422, 423, 424, 425, 426, 427, 428, 429, 430, 433, 434, 435, 437, 439], "string": [2, 20, 21, 22, 29, 36, 41, 44, 49, 51, 58, 59, 60, 66, 71, 77, 78, 88, 93, 118, 121, 124, 128, 135, 139, 145, 147, 148, 151, 156, 157, 158, 173, 200, 210, 223, 229, 237, 242, 265, 269, 306, 309, 310, 311, 323, 378, 396, 416, 420, 422, 423, 437], "element": [2, 3, 14, 15, 16, 19, 20, 21, 22, 23, 25, 27, 44, 45, 47, 53, 55, 56, 57, 61, 62, 63, 64, 71, 72, 73, 76, 78, 92, 93, 94, 95, 98, 99, 101, 106, 107, 112, 114, 118, 121, 124, 128, 135, 144, 147, 148, 151, 156, 157, 158, 176, 183, 188, 211, 220, 224, 225, 240, 244, 249, 250, 263, 264, 267, 300, 301, 306, 309, 313, 314, 318, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 338, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 388, 416, 420, 422, 426, 428, 437, 440], "30": [2, 3, 63, 71, 106, 107, 179, 205, 289, 290, 377, 381, 384, 386, 428, 434, 435, 437], "none": [2, 3, 8, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 88, 89, 90, 92, 93, 94, 95, 97, 98, 99, 101, 104, 106, 107, 108, 110, 112, 114, 118, 121, 124, 125, 127, 128, 135, 138, 139, 140, 141, 145, 146, 147, 148, 149, 150, 151, 156, 157, 158, 159, 160, 161, 162, 163, 165, 167, 168, 169, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 193, 197, 199, 200, 202, 203, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 237, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 286, 287, 288, 294, 296, 297, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 311, 312, 313, 314, 316, 317, 318, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 383, 384, 385, 391, 392, 393, 394, 395, 396, 397, 401, 402, 403, 404, 406, 407, 409, 410, 411, 415, 417, 420, 421, 423, 424, 435, 437, 439], "int": [2, 3, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 88, 91, 92, 93, 94, 95, 98, 99, 100, 101, 102, 104, 106, 107, 108, 112, 113, 114, 116, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 133, 134, 135, 139, 140, 141, 142, 143, 147, 148, 149, 150, 151, 153, 156, 157, 158, 161, 162, 163, 168, 176, 178, 179, 180, 182, 183, 184, 185, 187, 189, 192, 197, 198, 200, 204, 205, 206, 208, 210, 211, 214, 221, 222, 223, 226, 229, 230, 232, 234, 237, 242, 244, 245, 246, 249, 250, 251, 252, 254, 256, 257, 259, 260, 261, 262, 263, 264, 266, 267, 268, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 284, 286, 287, 288, 289, 290, 292, 293, 294, 296, 297, 305, 306, 307, 309, 310, 312, 314, 324, 325, 326, 333, 335, 336, 341, 342, 343, 344, 345, 349, 350, 359, 361, 362, 364, 365, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 381, 384, 386, 388, 389, 390, 392, 394, 397, 399, 409, 410, 411, 424, 435, 437], "entri": [2, 3, 14, 15, 19, 25, 29, 33, 34, 36, 38, 41, 42, 44, 49, 55, 57, 58, 59, 60, 64, 66, 68, 69, 71, 77, 78, 85, 106, 107, 118, 121, 122, 123, 124, 127, 128, 129, 130, 135, 139, 140, 147, 148, 151, 153, 156, 157, 158, 161, 162, 174, 175, 179, 183, 185, 186, 188, 189, 190, 191, 193, 194, 197, 201, 203, 204, 206, 208, 210, 213, 215, 218, 220, 222, 223, 224, 225, 227, 230, 232, 234, 237, 239, 242, 265, 273, 274, 305, 306, 309, 311, 312, 325, 327, 347, 359, 360, 361, 362, 415, 420, 422, 423, 425, 426, 427, 429, 433, 434, 435, 436, 437, 439, 440], "onto": [2, 8, 53, 55, 57, 64, 78, 168, 191, 244, 286, 301, 306, 307, 310, 311, 312, 313, 314, 423, 435], "__setitem__": 2, "indic": [2, 3, 8, 14, 15, 16, 19, 20, 21, 22, 23, 25, 27, 28, 30, 31, 32, 33, 34, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 59, 61, 62, 63, 64, 65, 67, 68, 69, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 88, 91, 98, 99, 101, 102, 104, 105, 106, 107, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 133, 134, 135, 142, 143, 147, 148, 151, 153, 156, 157, 158, 161, 162, 175, 176, 183, 184, 223, 224, 225, 226, 232, 240, 242, 243, 249, 250, 270, 273, 274, 276, 286, 309, 311, 312, 320, 324, 325, 327, 328, 329, 331, 333, 334, 335, 340, 342, 344, 345, 346, 347, 349, 350, 357, 401, 411, 414, 417, 422, 423, 424, 428, 429, 430, 435, 437, 440], "without": [2, 3, 7, 9, 13, 14, 15, 16, 19, 20, 21, 22, 23, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 59, 60, 64, 65, 66, 67, 68, 71, 76, 78, 79, 80, 81, 82, 83, 106, 107, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 161, 162, 177, 179, 190, 193, 228, 231, 242, 263, 264, 267, 268, 303, 304, 324, 325, 327, 328, 329, 331, 332, 333, 340, 344, 345, 346, 347, 349, 350, 358, 359, 360, 361, 362, 363, 407, 414, 415, 420, 421, 422, 424, 425, 426, 427, 428, 433, 434, 435, 437, 440], "updat": [2, 3, 4, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 29, 35, 36, 41, 44, 49, 55, 56, 57, 59, 60, 64, 65, 66, 71, 72, 78, 98, 99, 118, 121, 124, 128, 135, 141, 147, 148, 149, 150, 151, 156, 157, 158, 159, 160, 175, 177, 179, 180, 190, 192, 193, 200, 212, 223, 224, 230, 232, 236, 239, 240, 242, 244, 246, 247, 262, 263, 272, 277, 286, 310, 311, 312, 313, 314, 324, 325, 326, 327, 328, 329, 331, 333, 334, 335, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349, 350, 357, 359, 360, 361, 362, 363, 392, 397, 399, 402, 403, 406, 407, 413, 417, 421, 422, 423, 424, 427, 430, 433, 434, 435, 437, 440], "length": [2, 22, 27, 28, 29, 30, 31, 32, 33, 34, 37, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 57, 58, 59, 65, 67, 68, 74, 76, 77, 78, 79, 80, 81, 82, 83, 88, 99, 106, 107, 110, 118, 121, 124, 128, 133, 134, 135, 147, 148, 151, 156, 157, 158, 176, 183, 203, 211, 239, 246, 249, 250, 252, 254, 256, 263, 267, 270, 272, 275, 276, 301, 313, 318, 388, 394, 420, 422, 423, 428, 430, 435, 437, 440], "cursor": [2, 56, 61, 62, 63, 72, 73, 101], "afterward": [2, 29, 36, 41, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 244, 245, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 277, 280, 281, 284, 286, 289, 290, 292, 297, 305, 307, 309, 312, 317, 320, 433, 440], "tell": [2, 3, 4, 7, 118, 149, 150, 230, 420, 423, 428, 433, 434], "our": [2, 3, 7, 8, 11, 20, 44, 63, 183, 379, 416, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 436, 437, 439], "far": [2, 56, 61, 62, 63, 65, 72, 73, 101, 266, 294, 295, 430, 435, 440], "restrict": [2, 3, 416, 421, 436, 437, 440], "empti": [2, 3, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 66, 67, 68, 71, 72, 73, 76, 78, 79, 80, 81, 82, 83, 95, 101, 118, 121, 124, 128, 134, 135, 144, 147, 148, 151, 156, 157, 158, 168, 190, 193, 210, 212, 226, 232, 235, 237, 240, 242, 313, 383, 420, 435], "64": [2, 3, 55, 57, 64, 78, 101, 183, 214, 252, 253, 261, 265, 269, 276, 277, 287, 357, 420, 421, 422, 423, 424, 426, 430, 432, 435, 437, 439, 440], "dtype": [2, 3, 14, 15, 16, 25, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 88, 92, 93, 94, 98, 99, 106, 107, 114, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 161, 162, 163, 168, 171, 174, 175, 176, 177, 180, 181, 187, 190, 191, 192, 193, 194, 195, 200, 202, 203, 206, 208, 210, 212, 213, 215, 219, 222, 223, 225, 227, 228, 231, 232, 233, 235, 237, 242, 246, 248, 258, 259, 263, 264, 265, 267, 268, 269, 272, 278, 279, 286, 287, 288, 296, 301, 302, 303, 304, 305, 306, 307, 309, 310, 311, 312, 313, 314, 316, 318, 321, 324, 325, 327, 328, 329, 331, 332, 333, 340, 344, 345, 346, 347, 349, 350, 357, 359, 360, 361, 362, 365, 415, 424, 432, 435, 437, 439, 440], "unit8": 2, "img": 2, "randint": [2, 77, 101, 228, 437], "255": [2, 101, 228, 437], "uint8": [2, 3, 33, 55, 57, 64, 78, 122, 123, 139, 140, 194, 200, 208, 228, 421, 437], "next": [2, 3, 4, 8, 14, 15, 16, 25, 33, 34, 36, 38, 40, 42, 44, 49, 56, 61, 62, 63, 65, 68, 69, 71, 72, 73, 78, 88, 89, 90, 97, 99, 101, 106, 107, 112, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 133, 134, 135, 139, 140, 141, 145, 146, 147, 148, 151, 154, 155, 156, 157, 158, 159, 161, 162, 168, 174, 176, 179, 180, 182, 183, 188, 190, 193, 194, 195, 200, 201, 202, 203, 204, 208, 212, 213, 215, 218, 219, 223, 225, 227, 230, 233, 238, 239, 240, 242, 246, 264, 265, 268, 269, 272, 290, 309, 319, 321, 324, 325, 327, 328, 329, 331, 332, 333, 334, 340, 344, 345, 346, 347, 349, 350, 357, 358, 359, 360, 361, 362, 363, 379, 391, 392, 395, 421, 423, 424, 426, 430, 435, 436, 439, 440], "automat": [2, 3, 5, 12, 18, 30, 44, 76, 79, 92, 94, 101, 107, 114, 118, 121, 124, 127, 128, 129, 135, 147, 148, 149, 150, 151, 156, 157, 158, 179, 190, 193, 206, 225, 238, 240, 249, 265, 269, 301, 309, 310, 314, 377, 387, 415, 420, 422, 425, 426, 433, 434, 435, 437, 439], "hand": [2, 3, 7, 23, 33, 433, 434, 435], "look": [2, 3, 5, 7, 8, 29, 36, 41, 49, 59, 60, 66, 71, 99, 118, 121, 124, 128, 135, 138, 147, 148, 149, 150, 151, 156, 157, 158, 200, 210, 211, 235, 242, 247, 310, 314, 315, 316, 416, 422, 423, 424, 425, 426, 427, 428, 429, 430, 433, 434, 435, 436, 437, 439, 440], "assum": [2, 3, 6, 14, 15, 16, 27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 65, 66, 67, 68, 72, 73, 76, 79, 80, 81, 82, 83, 89, 90, 97, 106, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 168, 182, 185, 189, 197, 210, 211, 218, 225, 232, 235, 237, 248, 265, 269, 297, 300, 317, 329, 333, 334, 347, 357, 368, 369, 370, 371, 373, 374, 375, 376, 379, 420, 422, 432, 435], "leav": [2, 27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 55, 57, 63, 64, 67, 68, 76, 78, 79, 80, 81, 82, 83, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 163, 175, 219, 416, 420, 428, 437], "match": [2, 3, 6, 8, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 56, 58, 59, 60, 61, 62, 63, 66, 67, 68, 71, 72, 73, 76, 78, 79, 80, 81, 82, 83, 89, 101, 110, 118, 121, 122, 123, 124, 125, 127, 128, 129, 130, 135, 147, 148, 151, 156, 157, 158, 176, 180, 181, 183, 184, 185, 186, 187, 189, 190, 191, 192, 194, 195, 197, 199, 201, 202, 203, 204, 206, 208, 212, 213, 214, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 242, 249, 250, 257, 265, 269, 270, 275, 276, 293, 301, 305, 306, 310, 311, 313, 314, 317, 318, 325, 327, 333, 341, 343, 345, 347, 394, 399, 415, 416, 420, 422, 424, 432, 434, 435, 437, 440], "don": [2, 3, 4, 6, 7, 27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 67, 68, 76, 79, 80, 81, 82, 83, 183, 231, 421, 422, 424, 428, 437, 439, 440], "throw": [2, 29, 36, 41, 49, 55, 57, 59, 60, 64, 66, 71, 78, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242, 440], "rb_td": 2, "batch_siz": [2, 3, 8, 14, 15, 16, 25, 33, 36, 38, 44, 51, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 69, 71, 72, 73, 74, 77, 78, 88, 92, 93, 94, 98, 99, 100, 101, 106, 107, 112, 114, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 171, 174, 175, 176, 180, 182, 183, 187, 190, 193, 194, 195, 200, 208, 212, 213, 215, 219, 222, 223, 225, 231, 232, 233, 242, 246, 248, 256, 257, 258, 259, 262, 265, 269, 272, 286, 287, 288, 296, 297, 301, 302, 303, 304, 305, 306, 307, 309, 310, 311, 312, 313, 314, 316, 317, 318, 324, 325, 327, 328, 329, 331, 332, 333, 340, 344, 345, 346, 347, 349, 350, 357, 379, 388, 394, 415, 416, 420, 421, 422, 423, 428, 433, 434, 435, 437, 439, 440], "max": [2, 25, 53, 57, 72, 77, 88, 98, 99, 112, 134, 192, 226, 286, 325, 326, 327, 333, 343, 345, 347, 420, 422, 423, 424, 430], "label": [2, 57, 58, 65, 77, 78, 420, 433, 437], "100": [2, 14, 15, 16, 19, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 56, 59, 60, 61, 62, 63, 66, 67, 68, 71, 72, 73, 74, 76, 79, 80, 81, 82, 83, 92, 94, 101, 106, 107, 112, 118, 119, 120, 121, 124, 128, 133, 134, 135, 147, 148, 151, 156, 157, 158, 186, 194, 206, 215, 220, 223, 242, 273, 274, 275, 307, 309, 379, 389, 407, 421, 422, 424, 425, 427, 430, 432, 433, 434, 435, 437, 439, 440], "rb_pytre": 2, "randn": [2, 3, 56, 59, 61, 62, 63, 72, 73, 92, 93, 94, 99, 101, 106, 107, 114, 118, 168, 182, 206, 248, 251, 252, 256, 258, 259, 263, 264, 267, 268, 273, 274, 275, 282, 284, 288, 301, 302, 303, 304, 305, 306, 310, 311, 313, 316, 317, 318, 324, 325, 327, 328, 329, 331, 332, 333, 340, 342, 344, 345, 346, 347, 349, 350, 359, 360, 361, 362, 396, 415, 424, 437, 439, 440], "c": [2, 3, 6, 7, 33, 36, 55, 57, 59, 63, 64, 71, 72, 73, 78, 93, 206, 228, 233, 267, 268, 421, 437], "zero": [2, 3, 4, 25, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 66, 67, 68, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 92, 94, 101, 106, 107, 112, 114, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 168, 174, 180, 182, 184, 190, 192, 193, 206, 212, 215, 222, 240, 242, 245, 246, 253, 254, 255, 261, 262, 263, 264, 265, 267, 268, 269, 273, 274, 276, 277, 286, 287, 296, 312, 314, 320, 324, 325, 327, 328, 329, 331, 332, 333, 340, 344, 345, 346, 347, 349, 350, 357, 359, 360, 361, 362, 365, 423, 424, 437, 439, 440], "assert": [2, 3, 6, 16, 25, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 59, 61, 62, 63, 64, 66, 67, 68, 71, 72, 73, 76, 78, 79, 80, 81, 82, 83, 101, 112, 118, 121, 124, 128, 131, 135, 147, 148, 151, 156, 157, 158, 163, 168, 173, 176, 180, 183, 186, 190, 193, 202, 213, 220, 232, 239, 248, 276, 297, 359, 360, 361, 362, 387, 388, 396, 428, 432, 437, 440], "len": [2, 27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 56, 61, 62, 63, 67, 68, 72, 73, 76, 79, 80, 81, 82, 83, 92, 94, 101, 114, 208, 249, 250, 270, 276, 420, 424, 428, 430, 433, 435, 436, 437, 439], "ambigu": [2, 56, 61, 62, 63, 72, 73, 101], "signatur": [2, 14, 15, 16, 19, 20, 21, 22, 23, 29, 36, 41, 44, 49, 56, 59, 60, 61, 62, 63, 66, 71, 72, 73, 78, 101, 110, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 171, 180, 187, 200, 210, 225, 231, 232, 235, 237, 242, 313, 416, 420, 424, 425, 435], "deal": [2, 3, 56, 61, 62, 63, 72, 73, 101, 342, 416, 420, 422, 434, 437], "interpret": [2, 3, 56, 61, 62, 63, 72, 73, 101, 421], "put": [2, 56, 61, 62, 63, 72, 73, 101, 128, 139, 140, 158, 161, 162, 239, 386, 411, 415, 421, 422, 423, 425, 433, 435], "solv": [2, 4, 7, 9, 10, 56, 61, 62, 63, 72, 73, 101, 414, 420, 421, 422, 428, 430, 433, 434, 435, 437], "clear": [2, 3, 11, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 56, 59, 60, 61, 62, 63, 66, 67, 68, 71, 72, 73, 76, 79, 80, 81, 82, 83, 101, 118, 121, 124, 128, 132, 135, 147, 148, 151, 156, 157, 158, 242, 389, 425, 428], "cut": [2, 56, 61, 62, 63, 72, 73, 101], "distinct": [2, 3, 56, 61, 62, 63, 72, 73, 101, 180, 183, 427, 432], "view": [2, 3, 8, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 40, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 56, 59, 60, 61, 62, 63, 66, 67, 68, 71, 72, 73, 76, 79, 80, 81, 82, 83, 101, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 177, 242, 259, 263, 267, 270, 425, 435, 437, 439, 440], "through": [2, 3, 4, 5, 8, 14, 15, 16, 19, 20, 22, 23, 33, 34, 42, 56, 60, 61, 62, 63, 66, 68, 72, 73, 78, 101, 118, 119, 120, 121, 124, 127, 128, 129, 132, 133, 134, 135, 138, 147, 148, 149, 150, 151, 156, 157, 158, 179, 188, 190, 193, 211, 243, 248, 270, 287, 309, 310, 314, 315, 316, 320, 323, 342, 359, 360, 361, 362, 387, 415, 416, 420, 421, 422, 425, 427, 432, 433, 434, 435, 436, 437, 440], "collate_fn": [2, 56, 61, 62, 63, 71, 72, 73, 101, 437, 439], "__init__": [2, 3, 7, 124, 141, 159, 173, 177, 179, 180, 182, 183, 184, 187, 188, 190, 191, 193, 194, 195, 196, 198, 201, 202, 209, 211, 212, 213, 215, 218, 219, 222, 223, 224, 225, 226, 227, 229, 230, 231, 235, 236, 238, 239, 242, 246, 257, 259, 263, 267, 272, 318, 325, 327, 328, 333, 340, 345, 347, 349, 350, 417, 435, 440], "default": [2, 3, 10, 11, 12, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 88, 90, 92, 93, 94, 98, 99, 101, 102, 104, 105, 106, 107, 112, 114, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 133, 134, 135, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 156, 157, 158, 159, 160, 161, 162, 163, 168, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 215, 217, 218, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 284, 286, 288, 289, 290, 292, 293, 294, 295, 300, 301, 305, 306, 307, 309, 310, 311, 312, 313, 314, 317, 318, 320, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 352, 353, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 407, 411, 413, 416, 417, 420, 421, 422, 423, 426, 433, 436, 437, 439, 440], "major": 2, "worri": [2, 74, 440], "even": [2, 3, 4, 8, 11, 15, 20, 21, 22, 23, 27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 67, 68, 71, 76, 79, 80, 81, 82, 83, 92, 93, 94, 95, 99, 106, 108, 110, 114, 118, 121, 124, 125, 128, 132, 135, 147, 148, 151, 156, 157, 158, 175, 179, 420, 422, 425, 433, 434, 435, 440], "though": [2, 4, 11, 27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 67, 68, 76, 79, 80, 81, 82, 83, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 270, 422, 433, 434], "too": [2, 7, 14, 15, 16, 19, 20, 21, 22, 23, 27, 28, 30, 31, 32, 33, 34, 36, 37, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 58, 59, 65, 67, 68, 71, 76, 79, 80, 81, 82, 83, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 177, 179, 180, 182, 183, 184, 187, 188, 191, 194, 195, 196, 198, 201, 202, 205, 209, 211, 212, 213, 215, 218, 219, 222, 223, 224, 225, 226, 227, 229, 230, 231, 235, 236, 238, 239, 242, 266, 294, 295, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 340, 341, 342, 344, 345, 346, 347, 349, 350, 357, 359, 360, 361, 362, 421, 426, 429, 435, 437, 440], "latter": [2, 20, 21, 22, 29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242, 244, 245, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 277, 280, 281, 284, 286, 289, 290, 292, 297, 305, 307, 309, 312, 317, 320, 344, 409, 410], "inv": [2, 3, 176, 186, 192, 195, 200, 208, 215, 220, 222, 227, 231, 234, 242, 435], "obvious": [2, 424], "ignor": [2, 14, 15, 16, 19, 20, 21, 22, 23, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 58, 59, 60, 66, 67, 68, 71, 74, 76, 79, 80, 81, 82, 83, 90, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 192, 195, 219, 228, 242, 244, 245, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 273, 274, 277, 280, 281, 284, 286, 289, 290, 292, 297, 305, 307, 309, 312, 317, 320, 359, 437], "multithread": [2, 3, 56, 63, 72, 73, 88, 142, 143, 428, 437], "thread": [2, 3, 14, 15, 19, 55, 57, 64, 78, 118, 119, 120, 133, 134, 147, 156, 157, 240], "prefetch": [2, 56, 63, 72, 73, 88, 420, 421, 423, 437], "advis": [2, 11, 429, 440], "benchmark": [2, 3, 9, 119, 120, 128, 133, 134], "techniqu": [2, 8, 147, 156, 421, 424, 428, 437], "real": [2, 5, 314, 416, 423, 424, 435, 436], "life": [2, 194, 436], "adopt": [2, 3, 5, 420, 440], "throughput": [2, 9, 134, 420], "practic": [2, 3, 4, 5, 8, 51, 231, 266, 294, 295, 323, 413, 414, 420, 421, 422, 423, 424, 427, 433, 434, 436, 440], "constant": [2, 11, 35, 183, 206, 224, 417, 420, 422, 423, 440], "throughout": [2, 3, 324, 325, 326, 332, 333, 334, 335, 336, 337, 340, 341, 342, 344, 345, 346, 347, 350, 357, 422, 433, 440], "further": [2, 3, 5, 26, 420, 422, 424, 425], "refin": [2, 324, 325, 327, 328, 329, 331, 333, 334, 335, 340, 342, 344, 345, 346, 347, 349, 350, 357], "coupl": [2, 423, 426, 427, 435, 437], "get": [2, 3, 4, 6, 7, 8, 9, 12, 33, 34, 36, 42, 44, 55, 56, 57, 59, 60, 63, 64, 66, 68, 71, 78, 92, 94, 99, 106, 107, 108, 110, 112, 114, 118, 121, 124, 125, 128, 135, 147, 148, 151, 156, 157, 158, 177, 182, 184, 190, 192, 193, 202, 206, 211, 224, 225, 228, 232, 239, 240, 262, 301, 310, 311, 314, 321, 359, 360, 361, 362, 363, 379, 383, 415, 416, 419, 420, 421, 422, 423, 424, 431, 433, 434, 435, 437, 438, 439, 440], "first_elt": 2, "128": [2, 107, 119, 120, 133, 134, 253, 256, 421, 423, 424, 430, 433, 436, 437], "wa": [2, 3, 5, 7, 33, 34, 36, 42, 44, 56, 59, 61, 62, 63, 68, 71, 72, 73, 78, 99, 101, 105, 106, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 163, 175, 183, 200, 232, 267, 324, 326, 339, 341, 344, 346, 348, 365, 416, 421, 422, 425, 426, 432, 433, 437, 439], "print": [2, 3, 6, 7, 14, 15, 16, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 66, 67, 68, 69, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 88, 98, 99, 101, 106, 107, 112, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 133, 134, 135, 136, 137, 138, 139, 140, 141, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 161, 162, 167, 168, 173, 174, 175, 176, 179, 180, 183, 184, 188, 190, 191, 192, 193, 201, 206, 212, 213, 215, 218, 223, 225, 226, 227, 228, 239, 240, 242, 249, 250, 252, 253, 254, 255, 256, 259, 261, 262, 265, 269, 270, 273, 274, 275, 276, 282, 285, 286, 288, 301, 302, 303, 304, 305, 306, 309, 310, 311, 313, 314, 316, 318, 321, 342, 377, 407, 415, 417, 421, 422, 423, 424, 425, 426, 427, 428, 429, 432, 433, 434, 435, 436, 437, 439, 440], "influenti": 2, "especi": [2, 3, 7, 8, 184], "larger": [2, 4, 71, 265, 269, 332, 340, 439], "volum": 2, "due": [2, 3, 5, 25, 427, 436, 437, 440], "memorymappedtensor": [2, 38, 55, 57, 69, 77, 92, 381, 428], "well": [2, 3, 8, 23, 25, 29, 36, 41, 49, 56, 58, 59, 60, 63, 66, 71, 72, 73, 76, 99, 104, 108, 115, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 231, 232, 242, 243, 247, 252, 267, 289, 290, 314, 342, 344, 349, 363, 415, 420, 421, 423, 424, 425, 426, 427, 429, 436, 437, 439, 440], "specifi": [2, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 56, 59, 60, 61, 62, 63, 66, 67, 68, 71, 72, 73, 76, 78, 79, 80, 81, 82, 83, 101, 118, 121, 124, 128, 135, 139, 140, 147, 148, 149, 150, 151, 156, 157, 158, 159, 160, 161, 162, 189, 190, 191, 193, 218, 221, 224, 229, 233, 234, 242, 243, 246, 267, 313, 314, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 386, 415, 420, 422, 423, 424, 428, 433], "file": [2, 6, 7, 8, 55, 57, 64, 78, 90, 161, 378, 379, 381, 397, 417, 419, 421, 433, 437, 438], "locat": [2, 7, 55, 57, 64, 77, 78, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 171, 189, 194, 206, 217, 240, 266, 294, 295, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 420, 421, 422, 429, 433, 434, 437], "improv": [2, 4, 11, 198, 324, 416, 424, 433, 434, 437], "failur": [2, 4], "recoveri": 2, "were": [2, 7, 14, 15, 16, 19, 20, 21, 22, 23, 147, 156, 200, 422, 433, 437], "found": [2, 3, 6, 7, 10, 14, 15, 16, 19, 23, 25, 29, 33, 34, 36, 41, 42, 44, 49, 55, 57, 59, 60, 64, 66, 68, 71, 77, 78, 106, 107, 118, 121, 122, 123, 124, 127, 128, 129, 132, 135, 147, 148, 151, 156, 157, 158, 175, 177, 183, 203, 215, 218, 226, 239, 240, 242, 262, 275, 276, 310, 314, 341, 342, 344, 416, 420, 421, 423, 424, 425, 427, 429, 435, 437, 439], "rough": 2, "1x": 2, "83x": 2, "44x": 2, "long": [2, 3, 14, 15, 16, 19, 20, 21, 22, 23, 27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 58, 67, 68, 76, 79, 80, 81, 82, 83, 92, 99, 145, 146, 192, 230, 245, 267, 268, 332, 423, 424, 428, 437], "sharabl": [2, 147, 156], "collabor": 2, "rather": [2, 4, 110, 145, 146, 213, 240, 415, 416, 420, 421, 422, 425, 427, 433, 434, 437], "incur": [2, 119, 120, 133, 134], "transmiss": 2, "content": [2, 3, 8, 16, 33, 34, 42, 55, 56, 57, 63, 64, 68, 72, 73, 78, 105, 106, 107, 118, 121, 124, 127, 128, 129, 135, 142, 147, 148, 151, 156, 157, 158, 212, 249, 250, 270, 275, 276, 310, 342, 422, 435, 439], "map": [2, 3, 8, 17, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 59, 60, 63, 64, 66, 67, 68, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 88, 90, 92, 97, 98, 99, 118, 121, 124, 128, 135, 138, 139, 140, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 161, 162, 164, 168, 176, 180, 181, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 197, 199, 200, 201, 202, 203, 204, 206, 208, 212, 213, 214, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 238, 239, 240, 242, 259, 301, 302, 303, 304, 306, 310, 311, 313, 314, 316, 317, 318, 319, 327, 347, 357, 392, 413, 415, 416, 420, 421, 422, 423, 426, 427, 436], "writer": [2, 56, 61, 62, 63, 72, 73, 91, 94, 99, 101, 102, 106, 112, 113, 114, 117, 422, 437], "tensordictroundrobinwrit": [2, 73, 101], "goe": [2, 4, 78, 149, 150, 420, 422, 433, 434, 440], "prioritizedsampl": [2, 56, 61, 62, 63, 72, 73, 99, 101, 329, 334, 357, 420, 437], "access": [2, 3, 7, 8, 11, 17, 29, 36, 41, 49, 56, 59, 60, 66, 71, 93, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 171, 183, 210, 231, 235, 242, 411, 414, 420, 425, 433, 434, 435, 437, 439], "tensordictreplaybuff": [2, 56, 61, 62, 63, 72, 98, 99, 101, 106, 107, 112, 182, 183, 394, 407, 413, 420, 421, 423, 437], "mp": [2, 20, 21, 22, 125, 239, 240], "def": [2, 3, 24, 29, 36, 41, 49, 56, 59, 60, 61, 62, 63, 66, 71, 72, 73, 101, 118, 121, 124, 125, 128, 135, 141, 147, 148, 151, 156, 157, 158, 171, 173, 177, 179, 180, 182, 183, 184, 187, 188, 190, 191, 193, 194, 195, 196, 198, 201, 202, 209, 211, 212, 213, 215, 218, 219, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 235, 236, 238, 239, 240, 242, 243, 246, 259, 263, 264, 267, 268, 272, 277, 309, 310, 318, 325, 327, 328, 333, 340, 342, 345, 347, 349, 350, 377, 387, 416, 417, 420, 421, 424, 432, 433, 434, 435, 437, 439, 440], "td": [2, 3, 14, 15, 16, 19, 20, 21, 22, 23, 33, 36, 38, 44, 55, 56, 57, 59, 61, 62, 63, 64, 69, 71, 72, 73, 78, 92, 101, 112, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 133, 134, 135, 136, 137, 145, 146, 147, 148, 151, 152, 156, 157, 158, 159, 160, 174, 177, 180, 182, 184, 188, 190, 191, 192, 193, 201, 202, 203, 204, 206, 215, 218, 222, 225, 228, 232, 239, 246, 248, 258, 259, 262, 271, 272, 286, 287, 288, 296, 301, 302, 303, 304, 305, 306, 310, 311, 313, 316, 318, 357, 360, 361, 362, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 378, 388, 396, 415, 416, 420, 421, 423, 434, 435, 436, 439], "__name__": [2, 3, 14, 15, 24, 61, 125, 240, 377, 421, 439], "__main__": [2, 3, 14, 15, 24, 61, 125, 240, 377, 439], "21": [2, 44, 78, 106, 107, 147, 149, 150, 156], "proc": 2, "target": [2, 4, 8, 23, 26, 29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 125, 128, 135, 147, 148, 151, 156, 157, 158, 224, 242, 285, 313, 314, 324, 325, 326, 327, 328, 329, 331, 333, 334, 337, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 357, 358, 359, 360, 361, 362, 363, 400, 406, 407, 416, 417, 423, 424, 430, 433, 435], "arg": [2, 3, 14, 15, 16, 19, 20, 21, 22, 23, 28, 29, 30, 31, 33, 34, 36, 37, 41, 42, 43, 44, 46, 48, 49, 52, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 73, 78, 79, 80, 81, 82, 83, 92, 93, 94, 95, 99, 101, 106, 107, 108, 110, 114, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 170, 176, 177, 178, 179, 180, 182, 183, 184, 187, 188, 191, 194, 195, 196, 198, 200, 201, 202, 204, 209, 210, 211, 212, 213, 215, 218, 219, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 242, 244, 246, 248, 249, 250, 257, 258, 262, 265, 269, 270, 271, 272, 286, 297, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 357, 359, 360, 361, 362, 363, 386, 390, 394, 397, 411, 421, 424], "join": [2, 125, 413, 421, 422, 424, 433], "now": [2, 3, 7, 56, 63, 72, 73, 101, 145, 146, 147, 183, 219, 276, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 432, 433, 434, 436, 437, 440], "20": [2, 44, 71, 77, 78, 106, 107, 112, 118, 121, 124, 128, 132, 135, 145, 146, 147, 148, 151, 156, 157, 158, 224, 242, 261, 263, 264, 267, 268, 285, 305, 388, 423, 437, 440], "_data": [2, 435], "remot": [2, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 56, 61, 62, 63, 72, 73, 101, 147, 156, 240, 413, 440], "difficult": [2, 4, 147, 429], "pai": [2, 8, 183, 420], "word": [2, 3, 11, 65, 342, 420, 428, 435, 440], "1m": [2, 400, 420, 422, 423], "doe": [2, 3, 20, 29, 36, 41, 49, 55, 56, 57, 59, 60, 64, 66, 71, 72, 77, 78, 89, 90, 97, 98, 99, 106, 108, 110, 117, 118, 121, 124, 128, 135, 139, 140, 147, 148, 151, 156, 157, 158, 161, 162, 176, 177, 179, 180, 182, 183, 184, 187, 188, 191, 194, 195, 196, 198, 201, 202, 209, 211, 212, 213, 215, 218, 219, 222, 223, 224, 225, 226, 227, 229, 230, 231, 235, 236, 238, 239, 240, 242, 247, 256, 257, 263, 264, 265, 267, 268, 269, 278, 285, 297, 305, 315, 316, 324, 326, 334, 341, 342, 344, 358, 397, 416, 417, 420, 421, 422, 423, 425, 428, 433, 435, 437, 440], "howev": [2, 3, 5, 7, 29, 36, 41, 49, 59, 60, 66, 71, 106, 107, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 177, 179, 180, 182, 183, 184, 187, 188, 191, 194, 195, 196, 198, 200, 201, 202, 209, 211, 212, 213, 215, 218, 219, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 235, 236, 238, 239, 242, 324, 326, 327, 341, 344, 346, 347, 415, 420, 421, 423, 424, 427, 435, 437, 440], "capac": [2, 56, 63, 72, 73, 92, 94, 98, 106, 114, 422, 428], "There": [2, 3, 10, 101, 231, 247, 265, 269, 324, 344, 415, 416, 417, 422, 423, 424, 426, 428, 433, 434, 435, 437, 439, 440], "circumv": 2, "save": [2, 3, 8, 29, 36, 41, 49, 55, 56, 57, 59, 60, 61, 62, 63, 64, 66, 69, 71, 72, 73, 78, 89, 90, 92, 93, 94, 95, 97, 101, 108, 109, 110, 114, 115, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 238, 242, 378, 379, 381, 386, 397, 417, 424, 428, 429, 430, 433, 434], "convent": [2, 3, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 161, 162, 416, 420, 423, 433, 434, 435], "overridden": [2, 3, 29, 36, 41, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 244, 245, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 277, 280, 281, 284, 286, 289, 290, 292, 297, 305, 307, 309, 312, 317, 320, 359, 361, 362, 423, 433], "dim_extend": [2, 56, 63, 72, 73], "obtain": [2, 3, 7, 27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 65, 67, 68, 76, 79, 80, 81, 82, 83, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 182, 210, 224, 237, 246, 248, 285, 287, 394, 420, 422, 425, 426, 427, 433, 434], "counterpart": [2, 3, 183], "desir": [2, 3, 11, 29, 32, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 172, 178, 180, 187, 188, 206, 208, 210, 211, 225, 231, 232, 235, 237, 242, 249, 250, 257, 270, 276, 301, 306, 307, 310, 311, 312, 313, 314, 415, 420, 424, 433, 434, 435, 437], "diversifi": 2, "offer": [2, 3, 7, 118, 119, 120, 121, 124, 128, 133, 134, 135, 139, 140, 147, 148, 151, 156, 157, 158, 230, 377, 415, 420, 421, 424, 425, 427, 428, 433, 435, 437, 440], "accomplish": [2, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 163, 425], "__especially__": 2, "offlin": [2, 8, 14, 15, 16, 19, 20, 21, 22, 23, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 163, 177, 179, 180, 182, 183, 184, 187, 188, 191, 194, 195, 196, 198, 201, 202, 209, 211, 212, 213, 215, 218, 219, 222, 223, 224, 225, 226, 227, 229, 230, 231, 235, 236, 238, 239, 242, 325, 331, 332, 340, 349, 386, 417, 425, 436, 437], "docstr": [2, 29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242, 425, 426], "detail": [2, 3, 5, 6, 7, 14, 15, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 59, 60, 66, 67, 68, 71, 76, 79, 80, 81, 82, 83, 118, 121, 124, 128, 135, 147, 148, 149, 150, 151, 156, 157, 158, 228, 232, 242, 247, 259, 263, 267, 277, 285, 307, 324, 334, 342, 344, 414, 417, 421, 424, 428, 432, 437], "happi": [2, 424], "concaten": [2, 8, 14, 15, 23, 44, 45, 47, 78, 183, 184, 206, 222, 267, 270, 316, 420, 421, 426, 433, 434, 435, 437, 440], "schedul": [2, 4, 7, 65, 392, 422, 435], "transformedenv": [2, 3, 11, 12, 49, 118, 121, 124, 125, 128, 135, 147, 148, 151, 156, 157, 158, 176, 177, 180, 183, 186, 187, 188, 190, 193, 194, 195, 201, 202, 203, 205, 206, 208, 212, 213, 214, 215, 218, 219, 220, 223, 224, 225, 226, 230, 231, 239, 242, 265, 269, 309, 379, 387, 420, 421, 422, 423, 424, 425, 429, 430, 432, 433, 434, 435, 436, 437, 439, 440], "stepcount": [2, 44, 49, 118, 121, 124, 128, 135, 139, 140, 147, 148, 151, 156, 157, 158, 161, 162, 188, 230, 231, 232, 242, 248, 420, 421, 422, 423, 424, 425, 430, 433, 434, 439], "gymenv": [2, 3, 5, 11, 14, 15, 16, 19, 23, 24, 38, 44, 49, 61, 69, 71, 112, 118, 121, 124, 125, 128, 130, 135, 147, 148, 151, 156, 157, 158, 176, 179, 180, 183, 186, 187, 188, 194, 200, 201, 202, 206, 208, 213, 214, 215, 218, 220, 224, 225, 226, 227, 230, 231, 232, 233, 239, 240, 242, 248, 265, 269, 309, 377, 379, 407, 413, 415, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 436, 437, 439, 440], "randompolici": [2, 14, 15, 16, 19, 20, 21, 22, 23, 24, 49, 183, 215, 413, 428, 437], "cartpol": [2, 3, 11, 38, 49, 69, 71, 118, 121, 122, 123, 124, 125, 128, 135, 147, 148, 151, 156, 157, 158, 179, 180, 183, 218, 224, 239, 242, 309, 377, 421, 423, 426, 428, 429, 430, 437, 440], "v1": [2, 3, 11, 14, 15, 16, 19, 23, 24, 38, 49, 61, 69, 71, 112, 118, 121, 124, 125, 127, 128, 129, 133, 134, 135, 142, 147, 148, 151, 156, 157, 158, 179, 180, 183, 186, 188, 195, 201, 202, 206, 213, 215, 218, 219, 220, 223, 224, 225, 226, 227, 230, 231, 233, 239, 240, 242, 248, 265, 269, 309, 353, 368, 369, 370, 371, 373, 374, 375, 376, 377, 415, 421, 423, 425, 426, 427, 428, 429, 430, 435, 437, 439, 440], "action_spec": [2, 3, 14, 15, 16, 19, 20, 21, 22, 23, 49, 118, 119, 120, 121, 124, 128, 133, 134, 135, 141, 147, 148, 149, 150, 151, 152, 156, 157, 158, 176, 177, 180, 183, 187, 190, 191, 193, 202, 206, 212, 215, 231, 232, 233, 234, 242, 246, 259, 272, 288, 290, 301, 306, 310, 311, 325, 327, 329, 331, 345, 347, 349, 350, 407, 415, 420, 421, 422, 423, 424, 426, 427, 428, 430, 432, 433, 434, 435, 436, 437, 439, 440], "8": [2, 3, 6, 7, 33, 34, 42, 49, 63, 68, 71, 98, 99, 106, 107, 118, 119, 120, 121, 122, 123, 124, 128, 135, 145, 146, 147, 148, 151, 156, 157, 158, 159, 176, 179, 188, 224, 227, 233, 240, 249, 250, 252, 253, 261, 270, 302, 303, 304, 310, 313, 316, 340, 420, 421, 435, 437, 439], "traj_kei": [2, 99, 106, 107, 437], "truncated_kei": [2, 99, 106, 107, 215, 223], "strict_length": [2, 99, 106, 107, 379], "i": [2, 3, 14, 15, 16, 19, 20, 21, 22, 23, 29, 33, 34, 36, 38, 41, 42, 49, 56, 59, 60, 63, 66, 68, 69, 71, 73, 74, 78, 92, 94, 98, 99, 106, 107, 114, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 188, 189, 204, 210, 215, 218, 230, 232, 237, 242, 264, 265, 268, 269, 288, 300, 307, 309, 310, 312, 313, 314, 324, 326, 327, 328, 332, 333, 340, 341, 344, 345, 346, 347, 349, 350, 359, 360, 361, 362, 388, 400, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 433, 434, 435, 437, 439, 440], "enumer": [2, 14, 15, 16, 23, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 59, 60, 63, 66, 67, 68, 69, 71, 73, 76, 79, 80, 81, 82, 83, 107, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242, 351, 416, 420, 421, 422, 423, 430, 433, 437, 439], "break": [2, 5, 14, 15, 16, 23, 29, 36, 41, 49, 59, 60, 61, 63, 66, 71, 73, 88, 99, 106, 107, 112, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 180, 183, 215, 239, 240, 242, 265, 269, 294, 379, 421, 424, 428, 430, 437, 439], "step_count": [2, 14, 15, 16, 49, 118, 121, 124, 128, 133, 134, 135, 147, 148, 151, 156, 157, 158, 188, 223, 242, 422, 423, 424, 425, 430], "32": [2, 24, 33, 56, 61, 62, 63, 72, 73, 101, 107, 128, 134, 154, 155, 161, 162, 183, 200, 249, 250, 251, 252, 253, 255, 256, 261, 270, 275, 276, 280, 281, 284, 287, 296, 357, 377, 421, 423, 424, 426, 427, 435, 436, 437, 439, 440], "33": [2, 29, 33, 36, 41, 49, 59, 60, 66, 71, 101, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242, 249, 250, 270], "34": [2, 249, 250, 270], "35": [2, 249, 250, 270], "36": 2, "37": [2, 182], "38": [2, 7, 44], "39": [2, 133, 134], "40": [2, 71, 133, 134], "41": [2, 106], "11": [2, 10, 25, 44, 53, 71, 77, 78, 92, 93, 94, 98, 107, 114, 125, 176, 228, 242, 246, 272], "12": [2, 7, 10, 44, 71, 92, 94, 107, 114, 133, 134, 147, 154, 155, 156, 240, 242, 379, 437], "13": [2, 5, 71, 106, 107, 153, 238, 240, 242, 243], "14": [2, 6, 71, 106, 107, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 206, 242, 243], "15": [2, 25, 107, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242, 286, 305, 335, 437], "16": [2, 3, 29, 36, 41, 49, 59, 60, 66, 71, 99, 107, 118, 119, 120, 121, 124, 128, 133, 134, 135, 147, 148, 151, 156, 157, 158, 183, 242, 423, 437], "17": [2, 11, 106, 107, 128, 147, 176, 242], "could": [2, 3, 4, 6, 25, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 59, 60, 66, 67, 68, 71, 76, 79, 80, 81, 82, 83, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242, 314, 421, 422, 429, 433, 434, 436, 440], "sai": [2, 29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242, 275, 433, 436, 440], "interleav": 2, "cannot": [2, 3, 4, 7, 14, 15, 16, 19, 20, 21, 22, 23, 24, 33, 47, 53, 63, 72, 73, 94, 95, 99, 102, 106, 107, 114, 118, 121, 124, 127, 128, 129, 132, 135, 147, 148, 151, 156, 157, 158, 190, 193, 211, 218, 230, 275, 276, 311, 324, 327, 344, 421, 422, 423, 424, 433, 434, 435], "suggest": [2, 357, 420, 434], "serialenv": [2, 3, 118, 121, 124, 128, 135, 147, 148, 151, 157, 158, 225, 240, 242, 248, 309, 413, 439, 440], "squeez": [2, 3, 27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 67, 68, 76, 79, 80, 81, 82, 83, 179, 180, 183, 221, 224, 249, 250, 291, 292, 420, 424, 435, 437], "6": [2, 3, 7, 14, 15, 16, 19, 25, 44, 49, 63, 66, 71, 78, 99, 107, 122, 123, 128, 147, 154, 155, 176, 179, 188, 206, 208, 224, 230, 240, 248, 249, 250, 252, 253, 254, 257, 261, 264, 270, 275, 276, 277, 280, 293, 309, 310, 318, 421, 424, 439], "5": [2, 3, 14, 15, 25, 32, 33, 34, 42, 44, 45, 46, 47, 48, 49, 53, 56, 61, 63, 66, 68, 71, 72, 73, 101, 106, 107, 112, 118, 121, 124, 125, 128, 133, 134, 135, 139, 140, 142, 147, 148, 151, 154, 155, 156, 157, 158, 161, 162, 176, 179, 180, 182, 188, 203, 215, 222, 223, 224, 230, 240, 242, 245, 246, 247, 248, 249, 250, 252, 253, 258, 259, 260, 261, 263, 266, 267, 270, 272, 275, 276, 280, 285, 288, 294, 295, 305, 306, 309, 311, 317, 341, 344, 346, 349, 350, 377, 415, 419, 420, 421, 424, 426, 430, 433, 434, 435, 437, 438, 439, 440], "7": [2, 3, 6, 10, 36, 44, 49, 53, 56, 63, 71, 72, 99, 107, 118, 121, 124, 128, 135, 139, 140, 147, 148, 151, 156, 157, 158, 176, 179, 188, 224, 227, 240, 246, 248, 249, 250, 253, 270, 272, 275, 365, 420, 437, 439], "9": [2, 3, 7, 25, 29, 44, 49, 56, 63, 71, 72, 78, 99, 107, 112, 122, 123, 138, 149, 150, 158, 176, 179, 188, 224, 227, 232, 239, 240, 242, 273, 274, 324, 325, 327, 328, 329, 331, 333, 334, 335, 340, 342, 344, 345, 346, 347, 349, 350, 351, 357, 387, 416, 420, 421, 433, 434], "18": [2, 44, 106, 107, 154, 155, 161, 162, 230, 242, 276], "19": [2, 106, 107, 112, 242, 419, 438], "independ": [2, 14, 15, 16, 19, 20, 21, 22, 23, 147, 156, 197, 204, 225, 234, 247, 276, 300, 324, 344, 416, 417, 420, 421, 434, 437, 439], "congruent": 2, "name": [2, 3, 6, 7, 16, 29, 33, 34, 36, 41, 42, 49, 55, 57, 59, 60, 64, 66, 68, 71, 77, 78, 88, 118, 119, 121, 122, 124, 128, 133, 135, 138, 139, 140, 142, 145, 147, 148, 149, 150, 151, 153, 156, 157, 158, 161, 162, 164, 171, 175, 176, 177, 179, 180, 182, 183, 184, 187, 188, 191, 192, 194, 195, 196, 198, 200, 201, 202, 209, 211, 212, 213, 215, 218, 219, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 235, 236, 238, 239, 242, 243, 265, 269, 306, 311, 324, 325, 326, 327, 332, 333, 334, 335, 336, 337, 340, 341, 342, 344, 345, 346, 347, 350, 357, 359, 361, 362, 363, 377, 381, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 417, 420, 421, 422, 423, 424, 427, 428, 429, 433, 434, 435, 436, 440], "randomcroptensordict": [2, 420], "unlik": [2, 27, 63, 72, 73, 105, 128, 139, 140, 161, 162, 245, 247, 309, 334, 344, 379, 415, 421, 424, 426, 428, 439], "stop": [2, 3, 16, 23, 65, 99, 106, 107, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 422, 428, 433, 434, 439, 440], "signal": [2, 3, 14, 15, 16, 19, 25, 44, 99, 106, 107, 112, 118, 121, 124, 128, 135, 139, 140, 147, 148, 151, 156, 157, 158, 161, 162, 175, 183, 188, 194, 203, 223, 226, 416, 420, 422, 433, 434, 437, 440], "disk": [2, 3, 44, 55, 56, 57, 61, 62, 63, 64, 72, 73, 78, 92, 101, 397, 417, 420, 421, 423, 424, 428, 429, 433, 437], "dump": [2, 3, 11, 38, 55, 56, 57, 61, 62, 63, 64, 69, 72, 73, 78, 90, 92, 93, 94, 95, 101, 108, 110, 114, 377, 378, 379, 429, 430, 433], "load": [2, 6, 7, 14, 15, 16, 19, 29, 36, 38, 41, 49, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 69, 71, 72, 73, 77, 78, 90, 92, 93, 94, 95, 101, 108, 109, 110, 114, 115, 118, 121, 123, 124, 128, 135, 147, 148, 151, 156, 157, 158, 159, 173, 239, 240, 242, 397, 411, 417, 420, 422, 424, 437], "json": 2, "metadata": [2, 27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 67, 68, 76, 79, 80, 81, 82, 83, 118, 121, 124, 125, 128, 135, 147, 148, 151, 156, 157, 158, 327, 349, 422, 425, 427, 428, 433, 434, 440], "anticip": [2, 190, 193], "compli": [2, 247, 415], "back": [2, 26, 27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 56, 67, 68, 76, 79, 80, 81, 82, 83, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 163, 229, 238, 277, 301, 306, 307, 310, 311, 312, 313, 314, 422, 424, 433, 434, 435, 437], "exact": [2, 3, 25, 147, 267], "statu": [2, 3, 124], "prioriti": [2, 4, 56, 72, 73, 92, 93, 94, 95, 98, 99, 108, 110, 114, 327, 328, 329, 331, 332, 333, 334, 340, 345, 347, 349, 350, 357, 417, 420, 421, 437], "heap": 2, "under": [2, 3, 4, 23, 29, 36, 41, 44, 49, 59, 60, 65, 66, 71, 118, 121, 122, 123, 124, 127, 128, 129, 130, 135, 147, 148, 151, 153, 156, 157, 158, 177, 179, 180, 182, 183, 184, 187, 188, 191, 194, 195, 196, 198, 201, 202, 203, 209, 211, 212, 213, 215, 218, 219, 222, 223, 224, 225, 226, 227, 229, 230, 231, 235, 236, 238, 239, 242, 247, 301, 306, 307, 310, 311, 312, 313, 314, 342, 359, 360, 361, 362, 363, 379, 416, 420, 421, 426, 433, 435, 440], "hood": [2, 3, 23, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 247, 435], "naiv": [2, 235, 425], "just": [2, 3, 4, 78, 110, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 133, 134, 135, 138, 142, 143, 145, 146, 147, 148, 149, 150, 151, 153, 156, 157, 158, 159, 160, 175, 179, 186, 225, 243, 276, 388, 417, 420, 421, 422, 423, 424, 425, 426, 428, 433, 434, 435, 437, 439, 440], "public": [2, 62, 109, 210, 237], "serializ": 2, "consum": [2, 105, 107, 309, 421, 422, 428, 434, 437], "much": [2, 3, 8, 14, 15, 19, 56, 72, 98, 99, 147, 156, 341, 344, 422, 424, 425, 429, 433, 434, 435, 437, 440], "duplic": [2, 29, 36, 41, 49, 59, 60, 66, 71, 105, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242, 325, 327, 329, 334, 340, 342, 345, 347, 349, 350, 357], "observ": [2, 3, 8, 14, 15, 16, 19, 23, 26, 38, 44, 49, 61, 69, 71, 78, 89, 90, 97, 99, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 161, 162, 169, 174, 176, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 194, 195, 197, 199, 200, 201, 202, 204, 206, 207, 208, 212, 213, 214, 215, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 238, 239, 240, 242, 248, 251, 252, 253, 254, 255, 256, 259, 262, 265, 269, 275, 280, 281, 284, 285, 286, 288, 289, 301, 302, 303, 304, 305, 306, 309, 310, 311, 318, 319, 324, 325, 326, 327, 328, 329, 331, 332, 333, 336, 340, 341, 344, 345, 346, 347, 349, 350, 357, 359, 360, 361, 362, 363, 377, 379, 407, 415, 416, 417, 421, 422, 423, 424, 425, 426, 427, 429, 430, 432, 433, 434, 435, 437, 439, 440], "plu": [2, 14, 15, 19, 65, 147, 156, 435], "enabl": [2, 7, 8, 92, 94, 105, 114, 180, 265, 269, 286, 309, 377, 379, 392, 422, 425, 433, 434, 435, 437], "three": [2, 27, 28, 32, 37, 45, 46, 47, 48, 53, 54, 59, 88, 327, 415, 417, 422, 424, 425, 426, 433, 434, 435, 437, 440], "flatstoragecheckpoint": 2, "discard": [2, 3, 77, 128, 174, 235, 378, 437, 440], "compress": 2, "At": [2, 227, 262, 271, 421, 422, 423, 428, 432, 435, 436], "correct": [2, 4, 55, 57, 64, 78, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 183, 202, 400, 422, 423], "addit": [2, 3, 4, 29, 36, 41, 49, 51, 59, 60, 66, 71, 78, 118, 121, 124, 125, 128, 135, 147, 148, 151, 156, 157, 158, 161, 183, 187, 210, 225, 229, 231, 232, 235, 237, 242, 244, 263, 305, 309, 313, 323, 342, 359, 377, 379, 416, 420, 421, 424, 425, 433, 434, 437], "nestedstoragecheckpoint": 2, "represent": [2, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 59, 60, 66, 67, 68, 71, 76, 78, 79, 80, 81, 82, 83, 93, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 210, 235, 237, 242, 324, 344, 420, 435, 436, 440], "appar": [2, 3, 390], "h5storagecheckpoint": 2, "h5db": 2, "space": [2, 9, 27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 67, 68, 76, 79, 80, 81, 82, 83, 89, 90, 97, 118, 121, 124, 127, 128, 129, 135, 147, 148, 151, 156, 157, 158, 168, 171, 176, 186, 192, 200, 203, 225, 233, 244, 250, 256, 259, 275, 281, 286, 288, 301, 306, 307, 310, 311, 312, 313, 314, 316, 317, 318, 321, 324, 329, 331, 332, 333, 344, 349, 350, 357, 415, 416, 421, 422, 423, 424, 425, 426, 427, 433, 434, 435, 440], "assumpt": [2, 3, 76, 435, 437], "accur": [2, 7, 421, 435, 437], "truncat": [2, 3, 14, 15, 16, 19, 38, 40, 44, 49, 50, 58, 69, 71, 74, 77, 89, 90, 97, 99, 106, 107, 118, 121, 122, 123, 124, 127, 128, 129, 135, 139, 140, 147, 148, 149, 150, 151, 156, 157, 158, 159, 161, 162, 175, 176, 194, 195, 200, 205, 212, 215, 219, 223, 225, 232, 233, 242, 265, 269, 295, 309, 359, 365, 420, 422, 425, 433, 440], "marl": [2, 138, 164, 183, 222, 226, 275, 276, 277, 333, 347, 416, 425, 433, 434], "extra": [2, 10, 29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 174, 183, 239, 240, 242, 386, 415, 422, 423, 437], "fail": [2, 7, 24, 27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 67, 68, 76, 79, 80, 81, 82, 83, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 163, 177], "concret": [2, 420, 422], "set_se": [2, 3, 14, 15, 16, 19, 23, 38, 44, 49, 69, 71, 118, 119, 120, 121, 124, 128, 133, 134, 135, 141, 147, 148, 151, 156, 157, 158, 179, 188, 206, 213, 218, 224, 226, 232, 242, 424, 428, 430, 435, 439, 440], "manual_se": [2, 3, 27, 38, 45, 46, 56, 63, 69, 71, 72, 73, 93, 106, 107, 118, 119, 120, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 177, 179, 188, 192, 206, 215, 218, 224, 226, 240, 242, 262, 273, 274, 282, 285, 286, 301, 307, 314, 317, 324, 325, 327, 328, 332, 340, 347, 424, 428, 430, 433, 434, 435, 439, 440], "200": [2, 14, 15, 16, 23, 29, 36, 38, 41, 49, 59, 60, 61, 66, 69, 71, 118, 121, 124, 127, 128, 129, 135, 147, 148, 151, 156, 157, 158, 161, 162, 215, 242, 252, 253, 260, 289, 290, 377, 379, 420, 423, 424, 428, 430, 437], "22": [2, 106, 107, 238], "rb_test": 2, "_storag": [2, 436, 437], "max_siz": [2, 44, 56, 63, 71, 72, 73, 92, 93, 94, 95, 106, 107, 108, 112, 114, 422, 428], "102": 2, "path_to_save_dir": 2, "assert_allclose_td": 2, "altern": [2, 4, 32, 55, 57, 64, 78, 142, 230, 256, 273, 274, 275, 323, 327, 377, 420, 422, 424, 433, 434], "state_dict": [2, 14, 15, 16, 19, 23, 29, 36, 41, 49, 55, 57, 59, 60, 64, 66, 71, 78, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 200, 230, 232, 239, 240, 242, 275, 276, 327, 347, 411, 417, 420, 421, 440], "load_state_dict": [2, 14, 15, 16, 19, 23, 29, 36, 41, 49, 55, 57, 59, 60, 64, 66, 71, 78, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 230, 232, 239, 240, 242, 327, 347, 417, 420], "drawback": 2, "struggl": 2, "big": [2, 422, 428, 437, 440], "sequenti": [2, 9, 29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 182, 202, 242, 300, 302, 303, 304, 310, 315, 316, 321, 324, 325, 327, 333, 340, 344, 345, 346, 347, 349, 415, 422, 423, 426, 434, 435, 436, 439, 440], "known": [2, 3, 5, 7, 8, 71, 128, 225, 366, 367, 420, 421, 425], "indiffer": 2, "heavili": [2, 11], "smooth": [2, 245, 420, 421, 427], "understand": [2, 8, 36, 420, 421, 424, 425, 426, 433, 434], "purpos": [2, 3, 7, 11, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 183, 263, 324, 326, 338, 341, 344, 346, 407, 420, 422, 423, 424, 427, 429, 433, 434, 436, 440], "guid": [2, 11, 149, 150, 154, 155, 224, 414, 420, 434, 439], "explan": [2, 29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242, 247], "effect": [2, 3, 29, 33, 36, 41, 49, 56, 59, 60, 63, 66, 71, 72, 73, 99, 101, 104, 106, 107, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 179, 183, 188, 232, 242, 247, 397, 415, 420, 426, 433, 437, 440], "realm": [2, 426], "practition": 2, "often": [2, 3, 8, 277, 339, 342, 397, 420, 421, 425, 427, 435, 437, 440], "encount": [2, 4, 204, 309, 414, 421, 426, 435], "sometim": [2, 3, 76, 423, 440], "variabl": [2, 3, 4, 7, 8, 17, 18, 27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 60, 66, 67, 68, 76, 79, 80, 81, 82, 83, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 133, 134, 135, 139, 140, 143, 144, 145, 146, 147, 148, 151, 153, 156, 157, 158, 159, 160, 161, 162, 227, 231, 240, 263, 264, 265, 267, 268, 269, 272, 302, 303, 304, 342, 345, 387, 417, 421], "immedi": [2, 29, 33, 34, 36, 41, 42, 49, 59, 60, 66, 68, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242, 358, 433, 434], "199": 2, "info": [2, 3, 14, 15, 56, 61, 62, 63, 72, 73, 78, 98, 99, 101, 104, 106, 107, 118, 121, 122, 123, 124, 127, 128, 129, 130, 135, 139, 140, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 162, 200, 233, 235, 238, 241, 386, 425, 430, 433, 434, 437, 439], "glanc": [2, 425], "seem": [2, 420, 423, 425], "togeth": [2, 3, 11, 14, 15, 16, 19, 20, 21, 22, 23, 44, 59, 65, 67, 68, 93, 118, 121, 124, 128, 135, 138, 147, 148, 149, 150, 151, 156, 157, 158, 183, 211, 222, 231, 263, 265, 267, 269, 296, 302, 303, 304, 319, 415, 421, 423, 425, 433], "less": [2, 142, 297, 409, 410, 416, 422, 423, 437, 439], "omit": [2, 135, 244, 262, 286, 393, 422, 427, 435, 437], "proper": [2, 3, 4, 6, 7, 359, 360, 361, 362, 421, 422, 433, 434, 435, 437], "imposs": [2, 3, 63, 72, 73, 112, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 163, 324, 326, 341, 344, 346], "determin": [2, 3, 44, 56, 72, 78, 98, 99, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 161, 162, 163, 210, 237, 275, 286, 327, 421, 426, 433, 434], "complic": [2, 36, 59, 71, 435, 437, 440], "matter": [2, 35, 428], "inconsist": [2, 440], "miss": [2, 3, 4, 6, 7, 29, 33, 36, 41, 44, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 174, 200, 230, 232, 242, 243, 315, 316, 324, 327, 347, 414, 420, 423], "primari": [2, 27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 67, 68, 76, 79, 80, 81, 82, 83, 135, 428], "elimin": [2, 3, 425], "upon": [2, 3, 8, 18, 433, 435], "canon": 2, "definit": [2, 53, 108, 275], "markov": [2, 3, 425, 440], "mdp": [2, 174, 425, 435], "context": [2, 3, 5, 8, 13, 14, 15, 16, 19, 20, 21, 22, 23, 29, 36, 41, 49, 59, 60, 66, 71, 107, 118, 121, 124, 125, 128, 135, 144, 147, 148, 151, 156, 157, 158, 225, 234, 242, 247, 265, 269, 276, 278, 300, 305, 355, 356, 359, 360, 361, 362, 364, 372, 379, 387, 392, 415, 416, 420, 421, 422, 423, 424, 433, 434, 435, 436, 437, 439], "condit": [2, 27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 67, 68, 76, 77, 79, 80, 81, 82, 83, 188, 224, 239, 306, 307, 309, 311, 312, 323, 416, 420, 433, 435, 437], "complet": [2, 7, 9, 105, 118, 121, 124, 127, 128, 129, 135, 147, 148, 151, 156, 157, 158, 183, 223, 414, 416, 420, 422, 425, 432], "termin": [2, 3, 7, 14, 15, 16, 19, 38, 40, 44, 49, 50, 65, 69, 71, 89, 90, 97, 106, 118, 121, 122, 123, 124, 127, 128, 129, 133, 134, 135, 139, 140, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 161, 162, 175, 176, 179, 180, 194, 200, 212, 225, 233, 242, 246, 265, 269, 272, 309, 315, 324, 325, 327, 328, 329, 331, 332, 333, 340, 344, 345, 346, 347, 349, 350, 357, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 420, 421, 422, 433, 434, 435, 439, 440], "reward": [2, 3, 14, 15, 16, 35, 36, 38, 40, 44, 49, 50, 55, 64, 65, 69, 71, 77, 78, 88, 98, 99, 112, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 133, 134, 135, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 153, 154, 155, 156, 157, 158, 159, 161, 162, 168, 174, 176, 177, 180, 181, 186, 187, 190, 191, 193, 194, 195, 200, 202, 203, 204, 208, 212, 213, 215, 216, 217, 218, 219, 220, 222, 223, 224, 229, 231, 232, 233, 234, 236, 237, 239, 240, 242, 246, 265, 272, 305, 309, 319, 324, 325, 327, 328, 329, 331, 332, 333, 336, 340, 342, 344, 345, 346, 347, 349, 350, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 390, 391, 392, 395, 411, 416, 417, 420, 421, 422, 423, 424, 425, 429, 433, 434, 435, 439, 440], "imit": [2, 3, 338], "inform": [2, 3, 4, 14, 15, 16, 19, 20, 21, 22, 23, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 59, 60, 64, 66, 67, 68, 71, 74, 76, 78, 79, 80, 81, 82, 83, 118, 121, 124, 125, 128, 131, 134, 135, 147, 148, 151, 156, 157, 158, 242, 248, 249, 250, 270, 276, 415, 416, 417, 420, 421, 422, 423, 424, 425, 433, 434, 435, 437, 439], "stateless": [2, 3, 44, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 180, 188, 240, 342, 377, 420, 425, 435, 440], "simul": [2, 3, 5, 7, 8, 76, 119, 120, 121, 130, 133, 134, 153, 161, 162, 170, 246, 272, 415, 420, 422, 424, 425, 429, 433, 434], "furthermor": [2, 433, 434], "certain": [2, 4, 20, 21, 22, 23, 29, 36, 41, 49, 59, 60, 66, 71, 77, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 173, 188, 198, 223, 232, 242, 262, 264, 268, 341, 420, 421, 422, 424, 430, 433, 434, 440], "composit": [2, 3, 27, 28, 30, 31, 32, 34, 37, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 67, 68, 76, 78, 79, 80, 81, 82, 83, 85, 104, 110, 117, 118, 121, 124, 126, 128, 135, 141, 147, 148, 151, 156, 157, 158, 168, 175, 177, 180, 190, 191, 192, 193, 195, 200, 202, 204, 212, 213, 219, 223, 225, 229, 230, 231, 233, 240, 242, 244, 246, 272, 301, 310, 314, 316, 317, 321, 324, 344, 413, 420, 422, 426, 435], "uniform": [2, 56, 72, 98, 99, 433], "unambigu": 2, "distinguish": [2, 3, 63, 72, 73, 139, 140, 161, 162], "happen": [2, 3, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 243, 286, 421, 424, 427, 428, 429, 436, 440], "everyth": [2, 421, 422, 423, 429, 430], "belong": [2, 27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 67, 68, 76, 79, 80, 81, 82, 83, 238, 239, 314, 420, 428, 434], "rule": [2, 29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 190, 193, 242, 314, 415, 422], "field": [2, 3, 14, 15, 16, 19, 25, 29, 33, 36, 38, 41, 44, 49, 55, 57, 58, 59, 60, 64, 65, 66, 69, 71, 72, 73, 74, 76, 77, 78, 92, 93, 94, 98, 106, 114, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 161, 162, 174, 176, 180, 190, 193, 194, 195, 200, 208, 212, 213, 215, 219, 222, 223, 225, 230, 232, 233, 242, 246, 248, 258, 259, 265, 269, 272, 286, 287, 288, 296, 301, 302, 303, 304, 305, 306, 307, 309, 310, 311, 312, 313, 316, 318, 324, 325, 327, 328, 329, 331, 332, 333, 340, 344, 345, 346, 347, 349, 350, 357, 401, 414, 415, 421, 435], "taken": [2, 3, 27, 28, 32, 37, 45, 46, 47, 48, 53, 54, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 176, 214, 273, 274, 416, 420, 422, 423, 426, 433, 434, 435], "is_shar": [2, 3, 14, 15, 16, 25, 33, 36, 38, 44, 55, 57, 58, 59, 64, 65, 69, 71, 72, 73, 74, 77, 78, 88, 92, 93, 94, 98, 106, 114, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 161, 162, 174, 176, 180, 190, 193, 194, 195, 200, 208, 212, 213, 215, 219, 222, 223, 225, 233, 239, 246, 248, 258, 259, 265, 269, 272, 286, 287, 288, 296, 301, 302, 303, 304, 305, 306, 307, 309, 310, 311, 312, 313, 316, 318, 324, 325, 327, 328, 329, 331, 332, 333, 340, 344, 345, 346, 347, 349, 350, 357, 415, 435], "envbas": [2, 3, 14, 15, 16, 19, 20, 21, 22, 23, 44, 78, 118, 121, 125, 128, 135, 147, 148, 151, 156, 157, 158, 163, 174, 177, 180, 190, 193, 205, 212, 213, 231, 232, 239, 242, 246, 265, 269, 271, 272, 309, 392, 401, 402, 403, 407, 409, 410, 411, 413, 425], "brought": [2, 422, 423, 426], "step_mdp": [2, 3, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 265, 269, 413, 423, 425, 435, 439, 440], "count": [2, 3, 44, 49, 78, 124, 125, 223, 230, 240, 286, 392, 397, 400, 420, 421, 422, 423, 437, 440], "trigger": [2, 7, 36, 59, 71, 240], "turn": [2, 20, 21, 22, 23, 33, 34, 42, 55, 57, 60, 64, 66, 68, 78, 121, 134, 147, 158, 199, 231, 234, 238, 306, 377, 392, 416, 420, 421, 423, 426, 435, 436], "retain": [2, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "consider": [2, 3, 8, 127, 129, 231, 413, 421, 433, 434, 437], "regard": [2, 259, 307, 324, 334, 344, 420, 422, 435], "expand": [2, 8, 27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 55, 57, 64, 67, 68, 76, 78, 79, 80, 81, 82, 83, 92, 106, 107, 180, 225, 257, 313, 316, 325, 327, 340, 342, 345, 347, 349, 350, 433, 434, 435, 437, 439], "recur": [2, 324, 325, 327, 328, 329, 331, 332, 333, 340, 344, 345, 346, 347, 349, 350, 359, 360, 361, 362, 363, 426], "anyth": [2, 4, 14, 15, 16, 19, 20, 21, 22, 23, 416], "els": [2, 119, 120, 180, 263, 264, 267, 268, 280, 415, 417, 420, 421, 422, 423, 433, 434, 435, 436], "repetit": [2, 422, 425, 428], "embed": [2, 210, 235, 236, 237, 252, 287, 301, 302, 303, 304, 313, 314, 318, 436], "strictli": [2, 3, 8, 29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 203, 230, 232, 242, 327, 347, 420, 422], "enforc": [2, 29, 33, 36, 41, 49, 59, 60, 66, 71, 105, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 200, 230, 232, 242, 315, 327, 347, 435], "n_action": [2, 309, 325, 327, 329, 331, 343, 347], "rightmost": [2, 416], "n_ob": [2, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 202, 309, 324, 325, 327, 328, 329, 331, 332, 333, 340, 344, 345, 346, 347, 349, 350, 427], "estim": [2, 4, 99, 106, 107, 194, 202, 252, 294, 302, 303, 304, 324, 325, 326, 327, 328, 329, 331, 333, 334, 335, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 357, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 416, 421, 422, 426, 427, 433, 434], "subsequ": [2, 29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 179, 242, 423, 433], "proce": [2, 433], "state_valu": [2, 303, 304, 318, 326, 332, 340, 341, 344, 345, 347, 359, 360, 361, 362, 364, 366, 368, 370, 372, 373, 375, 415, 420, 434], "f": [2, 119, 120, 128, 133, 134, 227, 243, 268, 323, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 420, 421, 422, 423, 430, 433, 434, 435, 437, 440], "next_state_valu": [2, 349, 350, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 413], "left": [2, 14, 15, 51, 99, 106, 180, 187, 189, 190, 191, 195, 202, 204, 210, 212, 213, 219, 223, 226, 229, 231, 233, 235, 237, 240, 242, 262, 275, 421, 422, 424, 428, 429], "would": [2, 3, 29, 36, 41, 49, 59, 60, 65, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242, 263, 265, 267, 269, 270, 275, 314, 416, 417, 421, 422, 423, 425, 427, 428, 435, 437, 439, 440], "best": [2, 5, 9, 132, 265, 269, 433, 434, 437, 439], "bug": [2, 4], "worst": [2, 421], "twice": [2, 8, 107], "feasibl": 2, "mostli": [2, 3, 19, 285, 379, 416, 429, 437, 440], "eas": [2, 3, 433, 434], "flat": [2, 112], "ted2flat": [2, 38, 413], "flat2t": [2, 413], "unflatten": [2, 27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 67, 68, 76, 79, 80, 81, 82, 83, 180, 309], "deseri": [2, 3, 38], "posit": [2, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 56, 59, 60, 61, 62, 63, 66, 67, 68, 71, 72, 73, 76, 79, 80, 81, 82, 83, 101, 118, 121, 122, 123, 124, 128, 135, 147, 148, 151, 156, 157, 158, 197, 198, 200, 221, 222, 223, 226, 230, 232, 234, 242, 327, 347, 416, 422, 433, 434, 435, 437], "both": [2, 3, 7, 13, 14, 15, 16, 19, 20, 21, 22, 23, 29, 36, 41, 49, 56, 59, 60, 63, 66, 71, 72, 73, 118, 121, 124, 125, 127, 128, 135, 139, 140, 147, 148, 149, 150, 151, 156, 157, 158, 159, 163, 175, 176, 183, 200, 213, 229, 230, 232, 242, 249, 250, 265, 268, 269, 270, 275, 276, 302, 303, 304, 307, 312, 324, 326, 327, 328, 332, 333, 340, 341, 342, 344, 345, 346, 347, 349, 350, 392, 415, 420, 422, 424, 425, 427, 433, 434, 435, 436, 437, 440], "mark": [2, 3, 16, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 227, 265, 269, 359, 361, 362, 428, 437], "identifi": [2, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 58, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "abov": [2, 3, 7, 29, 36, 41, 49, 59, 60, 66, 71, 79, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 231, 242, 266, 294, 295, 323, 416, 417, 420, 422, 424, 425, 426, 433, 434, 435, 440], "output": [2, 3, 4, 14, 15, 16, 19, 20, 21, 22, 23, 29, 36, 41, 44, 49, 56, 59, 60, 63, 66, 71, 72, 73, 76, 78, 99, 106, 107, 118, 121, 122, 123, 124, 127, 128, 129, 130, 134, 135, 139, 140, 141, 144, 145, 146, 147, 148, 149, 150, 151, 153, 156, 157, 158, 159, 160, 161, 162, 163, 175, 180, 181, 183, 186, 187, 188, 189, 190, 191, 193, 195, 197, 200, 202, 204, 206, 210, 212, 213, 218, 219, 222, 223, 226, 227, 229, 231, 232, 233, 235, 237, 238, 240, 242, 244, 249, 250, 251, 252, 253, 256, 258, 259, 260, 263, 264, 265, 267, 268, 269, 270, 275, 276, 283, 285, 286, 288, 297, 301, 302, 305, 306, 307, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 321, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 357, 359, 360, 361, 362, 363, 377, 379, 388, 415, 416, 420, 421, 422, 423, 424, 425, 426, 429, 432, 433, 434, 435, 436, 439, 440], "adjust": [2, 11, 225, 420, 433, 434, 435], "grumodul": [2, 182, 225, 300, 321, 423], "lstmmodul": [2, 265, 300, 423, 424], "skip": [2, 3, 29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 163, 188, 198, 200, 204, 230, 232, 242, 310, 314, 327, 342, 347, 359, 360, 361, 362, 378, 379, 390, 392, 420, 421, 435], "accumul": [2, 8, 242], "upcom": [2, 342, 368, 369, 370, 371, 373, 374, 375, 376, 420], "popular": [2, 3, 415, 423, 427, 434], "rainbow": 2, "multistep": [2, 14, 15, 16, 19, 20, 21, 22, 23, 242, 413, 421], "shift": [2, 38, 40, 49, 50, 69, 89, 90, 97, 320, 359, 360, 361, 362, 422], "approxim": [2, 434, 440], "intens": [2, 3, 8], "ataridqnexperiencereplai": 2, "onlin": [2, 8, 14, 19, 183, 256, 284, 324, 330, 343, 344, 388, 411, 422, 423, 434, 437], "2x": 2, "small": [2, 107, 235, 240, 245, 420, 422, 424, 433, 434, 440], "clearer": [2, 424, 426], "lazi": [2, 3, 67, 68, 85, 86, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 161, 162, 210, 235, 249, 275, 278, 315, 316, 420, 421, 426, 428, 432, 437, 440], "certainli": 2, "welcom": [2, 425], "wrapper": [2, 3, 19, 55, 57, 64, 65, 72, 73, 78, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 139, 140, 141, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 167, 238, 243, 247, 248, 297, 305, 309, 314, 319, 359, 384, 385, 386, 411, 413, 422, 423, 425, 433, 434, 436, 439, 440], "around": [2, 5, 7, 19, 72, 73, 118, 121, 124, 128, 135, 141, 147, 148, 151, 152, 156, 157, 158, 247, 285, 309, 314, 359, 420, 421, 434, 440], "selecttransform": [2, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "excludetransform": [2, 219, 437], "promptli": 2, "virtual": [2, 3, 127], "instal": [2, 3, 5, 10, 20, 21, 22, 60, 71, 118, 121, 124, 128, 135, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 381, 397, 414, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 433, 434, 440], "d4rl": 2, "repositori": [2, 7, 161, 162, 433, 434], "wheel": [2, 422], "publish": 2, "openml": [2, 144], "scikit": [2, 144], "panda": 2, "raw": [2, 3, 4, 65, 200, 229, 233, 266, 294, 295, 421, 424, 428, 435], "go": [2, 3, 7, 93, 138, 147, 188, 211, 215, 305, 365, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 439, 440], "natur": [2, 3, 420, 426, 427, 428, 437], "modifi": [2, 3, 7, 8, 29, 36, 41, 49, 59, 60, 66, 71, 77, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 180, 183, 187, 188, 197, 200, 202, 210, 225, 231, 232, 235, 237, 240, 242, 277, 286, 305, 313, 314, 400, 416, 420, 421, 422, 424, 425, 433, 434, 435], "fly": [2, 183, 239, 341, 416, 422, 435, 437, 440], "least": [2, 27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 59, 67, 68, 76, 79, 80, 81, 82, 83, 99, 106, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 186, 429, 440], "pre": [2, 7, 24, 29, 36, 41, 49, 59, 60, 66, 71, 77, 94, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 210, 229, 235, 237, 242, 440], "conisder": 2, "per": [2, 3, 4, 14, 15, 16, 19, 20, 21, 22, 23, 99, 106, 112, 132, 133, 134, 147, 149, 150, 186, 204, 218, 249, 250, 260, 262, 275, 276, 309, 379, 381, 384, 386, 397, 409, 410, 420, 421, 422, 423, 424, 426, 427, 430, 433, 434, 437, 439], "pipelin": [2, 3, 7, 128, 415, 416, 422], "replac": [2, 3, 6, 7, 29, 36, 41, 49, 59, 60, 66, 71, 99, 106, 107, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 174, 179, 192, 194, 201, 239, 240, 242, 262, 415, 433, 437, 439], "onc": [2, 3, 7, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 29, 36, 41, 49, 55, 57, 59, 60, 64, 66, 71, 78, 101, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 179, 204, 215, 225, 232, 242, 244, 286, 309, 395, 415, 417, 421, 422, 423, 426, 429, 435, 437, 440], "produc": [2, 3, 33, 34, 42, 44, 68, 106, 176, 179, 180, 249, 250, 270, 276, 282, 302, 304, 305, 314, 379, 422, 423, 424, 425, 426, 428, 437, 440], "unless": [2, 3, 14, 15, 16, 19, 20, 21, 22, 23, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 59, 60, 66, 67, 68, 71, 76, 79, 80, 81, 82, 83, 89, 105, 118, 121, 124, 128, 135, 147, 148, 149, 150, 151, 156, 157, 158, 230, 232, 240, 242, 247, 324, 325, 327, 340, 342, 344, 345, 346, 347, 349, 350, 422], "download": [2, 7, 10, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 132, 210, 237, 379, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 440], "forc": [2, 3, 6, 7, 14, 15, 19, 20, 21, 22, 23, 148, 421, 433, 434, 435], "robosetexperiencereplai": [2, 106, 107], "fk1": 2, "v4": [2, 128, 147, 176, 214, 368, 369, 370, 371, 373, 374, 375, 376, 420, 422, 436, 439], "expert": 2, "fk1_microopenrandom_v2d": 2, "func": [2, 14, 15, 241], "obs_norm": 2, "norm": [2, 4, 8, 119, 120, 245, 397, 420, 421, 422, 433, 434, 435], "num_work": [2, 55, 57, 77, 88, 142, 147, 156, 420, 421], "os": [2, 57, 77, 88, 421], "cpu_count": [2, 57, 77, 88], "num_chunk": 2, "1000": [2, 4, 14, 15, 44, 63, 71, 92, 93, 98, 106, 107, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 183, 239, 244, 262, 285, 286, 310, 314, 339, 420, 421, 422, 423, 424, 426, 428, 430, 435, 436, 437], "mp_start_method": [2, 147, 156, 230, 421, 439], "fork": [2, 5, 420, 421, 422, 423, 433, 434, 436, 439], "recreat": [2, 435], "customari": 2, "moreov": [2, 3], "fine": [2, 3, 26, 63, 72, 73, 99, 101, 106, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 180, 202, 424, 428, 436], "grain": [2, 3, 63, 72, 73, 99, 101, 106, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 180], "nomenclatur": 2, "compact": [2, 44, 69, 89, 90, 97], "propos": [2, 183, 194, 247, 271, 339, 348, 415, 423, 437], "replaybufferensembl": [2, 104, 110, 117], "primit": [2, 3, 4, 324, 325, 327, 328, 329, 331, 332, 333, 340, 344, 345, 346, 347, 349, 350], "individu": [2, 4, 20, 21, 22, 23, 29, 36, 41, 49, 59, 60, 66, 71, 77, 99, 101, 112, 118, 121, 124, 128, 135, 139, 140, 147, 148, 151, 156, 157, 158, 240, 242, 420, 434], "dummi": [2, 3, 158, 377, 420, 424, 428, 440], "semant": [2, 67, 68, 127, 129, 436], "ident": [2, 3, 14, 15, 16, 49, 55, 57, 63, 64, 71, 72, 73, 78, 92, 101, 106, 118, 121, 124, 127, 128, 129, 135, 142, 147, 148, 151, 156, 157, 158, 194, 222, 231, 240, 245, 275, 276, 325, 327, 340, 345, 347, 349, 350, 359, 360, 361, 362, 409, 410, 421, 425, 433, 434], "another_kei": [2, 101], "renam": [2, 3, 55, 57, 64, 78, 101, 174, 213, 215, 420], "resiz": [2, 3, 101, 183, 421, 423, 424, 425, 437, 440], "imag": [2, 3, 4, 7, 11, 183, 185, 189, 210, 228, 237, 270, 377, 379, 420, 421, 424, 425, 429, 434, 436, 440], "comops": 2, "totensorimag": [2, 3, 101, 183, 214, 421, 423, 424, 437, 439, 440], "renametransform": [2, 3, 101, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 183], "rb0": [2, 101], "in_kei": [2, 3, 14, 15, 16, 19, 20, 21, 22, 23, 36, 44, 59, 61, 71, 101, 118, 119, 120, 121, 124, 128, 135, 141, 147, 148, 151, 156, 157, 158, 169, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 246, 248, 258, 265, 269, 272, 287, 296, 297, 301, 302, 303, 304, 305, 306, 309, 310, 311, 313, 314, 316, 317, 318, 321, 324, 325, 326, 327, 328, 329, 331, 332, 333, 338, 340, 341, 344, 345, 346, 347, 349, 350, 357, 359, 360, 361, 362, 378, 379, 407, 415, 420, 421, 422, 423, 424, 426, 427, 430, 432, 433, 434, 435, 436, 437, 439, 440], "pixel": [2, 3, 7, 33, 101, 121, 122, 123, 127, 129, 130, 153, 183, 185, 189, 194, 197, 199, 206, 208, 210, 214, 228, 235, 237, 252, 280, 281, 377, 379, 420, 421, 423, 424, 429, 433, 436, 437, 439, 440], "rb1": [2, 101], "out_kei": [2, 3, 14, 15, 16, 19, 20, 21, 22, 23, 36, 44, 59, 61, 71, 101, 118, 119, 120, 121, 124, 128, 135, 141, 147, 148, 151, 156, 157, 158, 169, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 242, 246, 248, 258, 259, 265, 269, 272, 287, 288, 296, 297, 301, 302, 303, 304, 305, 307, 309, 310, 311, 312, 313, 314, 316, 317, 318, 321, 324, 325, 326, 327, 332, 333, 338, 340, 341, 344, 345, 346, 347, 349, 357, 359, 360, 361, 362, 377, 379, 392, 407, 415, 420, 421, 422, 423, 424, 426, 430, 432, 433, 434, 435, 436, 437, 439, 440], "pixels33": [2, 101], "data0": [2, 93, 101], "244": [2, 101, 210, 237], "data1": [2, 93, 101, 439], "_": [2, 8, 56, 61, 62, 63, 72, 73, 93, 101, 121, 125, 132, 161, 162, 184, 190, 192, 193, 202, 206, 213, 228, 239, 242, 285, 301, 313, 314, 318, 323, 324, 325, 327, 328, 332, 333, 340, 344, 345, 347, 349, 350, 359, 360, 361, 362, 381, 420, 421, 422, 423, 424, 430, 433, 434, 435, 437, 439], "parent": [2, 3, 23, 29, 36, 40, 41, 49, 51, 59, 60, 66, 71, 76, 78, 101, 110, 117, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 176, 180, 183, 184, 187, 188, 191, 194, 197, 198, 204, 206, 210, 218, 223, 224, 225, 226, 230, 231, 234, 235, 242, 265, 269, 302, 321, 342, 344, 363, 377, 379, 420, 428, 435, 439, 440], "basic": [2, 3, 141, 415, 422, 427, 428, 430, 433, 439, 440], "properti": [2, 3, 23, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 66, 67, 68, 71, 72, 73, 76, 78, 79, 80, 81, 82, 83, 101, 118, 121, 124, 128, 135, 141, 147, 148, 151, 156, 157, 158, 179, 230, 231, 232, 239, 240, 242, 257, 266, 274, 278, 282, 293, 294, 295, 309, 324, 327, 342, 344, 346, 347, 426, 428, 435, 437], "input": [2, 3, 4, 14, 15, 16, 19, 20, 21, 22, 23, 25, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 64, 65, 66, 67, 68, 71, 74, 76, 78, 79, 80, 81, 82, 83, 109, 115, 118, 121, 124, 128, 135, 139, 140, 141, 144, 145, 146, 147, 148, 149, 150, 151, 156, 157, 158, 159, 160, 161, 162, 163, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 204, 208, 209, 210, 211, 212, 213, 215, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 245, 247, 248, 249, 250, 252, 253, 254, 255, 258, 259, 262, 263, 264, 265, 267, 268, 269, 270, 275, 276, 277, 278, 279, 286, 288, 289, 290, 291, 292, 294, 297, 301, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 321, 323, 324, 325, 326, 327, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 344, 345, 346, 347, 349, 350, 357, 358, 359, 360, 361, 362, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 391, 395, 400, 407, 415, 416, 417, 420, 421, 422, 423, 424, 425, 433, 434, 435, 439, 440], "send": [2, 3, 8, 151, 157, 386, 439], "spawn": [2, 3, 4, 20, 24, 132, 142, 147, 156, 230, 421, 433, 434], "check_env_spec": [2, 3, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 176, 200, 212, 233, 377, 413, 422, 433, 434, 435], "saniti": [2, 3, 7, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 163, 422], "make_composite_from_td": [2, 76, 413, 435], "fall": [2, 4], "categori": [2, 33, 415, 417], "bound": [2, 3, 4, 23, 29, 31, 33, 36, 41, 49, 59, 60, 66, 71, 79, 118, 121, 124, 128, 135, 147, 148, 151, 152, 156, 157, 158, 186, 205, 239, 242, 244, 262, 286, 289, 290, 301, 306, 307, 310, 311, 312, 313, 314, 317, 324, 325, 327, 328, 340, 344, 345, 347, 349, 350, 413, 415, 420, 421, 422, 424, 433, 435, 439, 440], "unbound": [2, 3, 27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 61, 62, 63, 64, 67, 68, 72, 73, 76, 78, 80, 81, 82, 83, 101, 118, 121, 124, 128, 135, 141, 147, 148, 151, 156, 157, 158, 168, 177, 180, 190, 193, 212, 225, 246, 272, 301, 313, 316, 318, 346, 413, 435, 437], "boundeddiscret": [2, 30, 33], "boundedcontinu": [2, 24, 30, 33, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 200, 203, 233], "unboundeddiscret": [2, 79, 148, 200, 413], "unboundedcontinu": [2, 79, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 168, 212, 225, 316, 321, 413], "implicitli": 2, "onehot": [2, 27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 45, 46, 47, 48, 51, 52, 54, 67, 68, 76, 79, 80, 81, 82, 83, 119, 120, 127, 129, 130, 133, 134, 142, 143, 145, 146, 153, 159, 160, 259, 288, 306, 311, 329, 331, 332, 333, 357, 413, 415], "multionehot": [2, 45, 46, 48, 329, 332, 333, 357, 413], "multicategor": [2, 46, 47, 48, 413], "binari": [2, 3, 7, 28, 29, 53, 159, 177, 181, 259, 288, 306, 307, 311, 312, 329, 332, 333, 357, 413], "concept": [2, 3, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 285, 421, 437], "arbitrari": [2, 3, 27, 53, 63, 118, 121, 124, 128, 134, 135, 147, 148, 151, 156, 157, 158, 179, 416, 420, 421, 435, 437], "combin": [2, 4, 39, 60, 349, 421, 424, 429, 437, 439], "relat": [2, 3, 4, 10, 56, 147, 197, 324, 325, 327, 328, 329, 331, 332, 333, 340, 344, 345, 346, 347, 349, 350, 421, 430, 435], "nevertheless": [2, 3, 422, 425, 437], "otherwis": [2, 3, 12, 14, 15, 16, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 88, 99, 101, 106, 107, 118, 119, 120, 121, 124, 127, 128, 129, 130, 133, 134, 135, 138, 139, 140, 142, 143, 145, 146, 147, 148, 149, 150, 151, 153, 156, 157, 158, 159, 160, 161, 162, 183, 184, 188, 192, 200, 206, 224, 225, 226, 230, 231, 232, 239, 242, 243, 245, 247, 263, 266, 267, 275, 276, 294, 295, 300, 306, 311, 314, 317, 325, 327, 336, 342, 343, 347, 359, 361, 362, 392, 394, 416, 417, 420, 421, 422, 423, 435, 440], "similarli": [2, 3, 23, 29, 36, 41, 49, 59, 60, 66, 71, 105, 110, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 204, 242, 275, 315, 316, 332, 340, 440], "possess": [2, 76], "unsqueez": [2, 27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 67, 68, 76, 78, 79, 80, 81, 82, 83, 99, 168, 177, 180, 183, 184, 228, 234, 420, 423, 424, 433, 434, 435], "move": [2, 4, 29, 36, 41, 49, 59, 60, 66, 71, 76, 118, 121, 124, 128, 129, 135, 147, 148, 151, 156, 157, 158, 174, 176, 187, 191, 210, 225, 231, 232, 235, 237, 239, 240, 242, 270, 313, 395, 420, 421, 423, 425, 440], "unbind": [2, 55, 56, 57, 63, 64, 72, 73, 78, 204, 309], "said": [2, 422], "neg": [2, 8, 14, 15, 16, 19, 20, 21, 22, 23, 56, 59, 72, 76, 98, 99, 183, 197, 211, 222, 234, 326, 335, 341, 344, 359, 361, 362, 416, 422, 433, 434, 435], "seen": [2, 3, 20, 21, 22, 23, 33, 34, 42, 68, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 191, 416, 420, 421, 423, 427, 433, 434, 437], "predict": [2, 3, 49, 65, 258, 260, 271, 272, 305, 319, 324, 326, 331, 334, 336, 337, 341, 344, 346, 358, 420, 421, 427], "deprec": [2, 25, 28, 29, 31, 34, 36, 37, 41, 42, 43, 46, 48, 49, 52, 54, 59, 60, 66, 71, 81, 83, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 200, 230, 232, 239, 242, 324, 326, 327, 329, 332, 333, 334, 340, 341, 344, 345, 346, 347, 357, 359, 360, 361, 362, 367, 440], "mont": [2, 324, 326, 341, 344, 420], "carlo": [2, 324, 326, 341, 344, 420], "mct": [2, 44], "act": [2, 3, 4, 106, 107, 149, 150, 232, 258, 276, 325, 327, 328, 340, 345, 347, 349, 350, 423, 424, 433, 434, 437, 439], "tradit": [2, 427, 433], "integ": [2, 14, 15, 16, 19, 25, 41, 45, 47, 49, 53, 59, 60, 65, 66, 78, 99, 106, 107, 108, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 176, 179, 194, 198, 206, 223, 240, 249, 250, 270, 275, 276, 327, 332, 340, 347, 416, 424, 437], "advanc": [2, 3, 23, 56, 63, 72, 73, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 425, 428, 437], "rebuild": [2, 44], "initi": [2, 4, 7, 13, 14, 15, 16, 19, 20, 21, 22, 23, 26, 27, 28, 29, 32, 36, 37, 41, 44, 45, 46, 47, 48, 49, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 71, 72, 73, 78, 101, 112, 118, 121, 124, 128, 135, 145, 146, 147, 148, 151, 156, 157, 158, 159, 182, 200, 206, 210, 225, 232, 235, 240, 241, 242, 243, 244, 245, 246, 262, 263, 264, 267, 268, 272, 275, 276, 277, 278, 279, 286, 309, 324, 325, 327, 328, 329, 331, 333, 334, 335, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 357, 411, 415, 416, 420, 421, 423, 425, 426, 428, 433, 435, 440], "pair": [2, 3, 49, 55, 57, 59, 64, 71, 78, 118, 121, 122, 123, 124, 128, 135, 147, 148, 151, 156, 157, 158, 215, 225, 230, 265, 302, 310, 314, 342, 359, 360, 361, 362, 363, 415, 416, 420, 421, 422, 426, 427, 432, 435, 440], "term": [2, 65, 93, 202, 267, 268, 278, 279, 323, 324, 333, 399, 421, 422, 425, 426, 434], "pseudocod": [2, 3], "next_stat": [2, 416], "associ": [2, 3, 29, 33, 34, 36, 41, 42, 44, 49, 55, 57, 59, 60, 64, 66, 68, 71, 78, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 230, 242, 289, 411, 420, 437], "sens": [2, 4, 55, 57, 64, 78, 183, 428, 435], "hard": [2, 3, 7, 112, 122, 123, 147, 339, 421, 440], "let": [2, 3, 6, 7, 11, 25, 29, 36, 41, 44, 49, 56, 59, 60, 63, 66, 71, 72, 73, 74, 118, 121, 124, 128, 135, 147, 148, 149, 150, 151, 156, 157, 158, 183, 242, 275, 276, 306, 392, 416, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 432, 433, 434, 435, 436, 437, 439, 440], "know": [2, 3, 4, 9, 56, 63, 72, 73, 127, 129, 244, 342, 345, 392, 420, 421, 422, 423, 424, 425, 426, 427, 428, 433, 434, 437], "next_td": 2, "Of": [2, 3, 7, 414, 435, 440], "cours": [2, 3, 4, 414, 435, 440], "handi": [2, 3, 14, 15, 16, 19, 20, 21, 22, 23, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 429], "undertaken": [2, 78, 416, 435], "link": [2, 6, 7, 124, 421, 430], "hash": [2, 41, 44, 59, 60, 66, 71, 78, 121, 135], "past": [2, 4, 183, 309, 421, 437], "node_map": [2, 44], "_index": [2, 59, 71], "Then": [2, 7, 14, 15, 16, 19, 20, 21, 22, 23, 238, 422, 432], "track": [2, 3, 4, 14, 15, 16, 19, 20, 21, 22, 23, 73, 98, 99, 105, 121, 218, 227, 239, 240, 242, 286, 309, 384, 390, 421, 423, 425, 428, 434, 435, 437], "next_data": [2, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "data_map": [2, 44], "form": [2, 14, 15, 19, 29, 36, 41, 49, 56, 59, 60, 63, 66, 71, 72, 73, 89, 90, 97, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 239, 240, 242, 263, 265, 267, 269, 314, 323, 324, 326, 341, 344, 397, 415, 426, 434], "figur": [2, 3, 78, 135, 420, 422, 423, 434, 435, 440], "flowchart": 2, "o": [2, 29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242, 268], "get_tre": [2, 44, 78], "vertex": [2, 78], "longer": [2, 78, 243, 421, 430, 433, 434, 437], "vertic": [2, 78], "branch": [2, 44, 78], "repeat": [2, 78, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 133, 134, 135, 142, 143, 147, 148, 151, 153, 156, 157, 158, 230, 246, 257, 422, 433, 434, 435], "depth": [2, 63, 76, 118, 121, 124, 128, 135, 141, 147, 148, 151, 153, 156, 157, 158, 246, 249, 250, 252, 253, 254, 255, 260, 261, 270, 272, 275, 276, 277, 280, 281, 306, 415, 421, 425, 427, 428, 432, 433, 434, 437], "until": [2, 3, 7, 23, 134, 226, 231, 242, 387, 422, 423, 430, 433, 434], "anymor": [2, 55, 57, 64, 78, 232, 313], "utmost": 2, "llm": [2, 65, 77, 88], "post": [2, 14, 15, 16, 19, 20, 21, 22, 23, 29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242], "grpo": 2, "commonli": [2, 99, 106, 107, 440], "emploi": [2, 279], "scarc": 2, "address": [2, 437], "subdomain": 2, "extern": [2, 3, 190, 193, 240, 433, 440], "token": [2, 57, 58, 65, 74, 77, 88, 135], "dm": [3, 420, 440], "abl": [3, 44, 118, 138, 149, 150, 151, 157, 265, 269, 420, 422, 423, 426, 432, 433, 434, 435, 437], "experi": [3, 56, 63, 72, 73, 98, 99, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 163, 381, 382, 383, 384, 385, 386, 414, 421, 422, 424, 428, 429, 433, 434, 437], "box": [3, 27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 67, 68, 76, 78, 79, 80, 81, 82, 83, 127, 129, 277, 342], "lib": [3, 5, 6, 7, 9, 10, 14, 15, 16, 19, 23, 24, 61, 118, 121, 124, 125, 128, 135, 139, 140, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 183, 186, 194, 201, 202, 206, 208, 213, 215, 218, 225, 231, 238, 239, 242, 377, 407, 420, 421, 422, 423, 432, 434, 436, 437, 439, 440], "hope": [3, 11], "nn": [3, 14, 15, 16, 19, 20, 21, 22, 23, 26, 29, 35, 36, 41, 49, 59, 60, 61, 65, 66, 71, 118, 119, 120, 121, 124, 128, 135, 141, 147, 148, 151, 156, 157, 158, 187, 192, 194, 202, 210, 225, 231, 232, 235, 237, 242, 246, 248, 249, 250, 252, 253, 254, 255, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 272, 274, 275, 276, 277, 286, 287, 288, 296, 301, 302, 303, 304, 305, 306, 309, 310, 311, 313, 314, 315, 316, 318, 321, 323, 324, 325, 327, 328, 329, 331, 332, 333, 334, 335, 340, 342, 344, 345, 346, 347, 349, 350, 357, 359, 360, 361, 362, 407, 415, 416, 420, 421, 422, 423, 424, 426, 427, 430, 432, 433, 434, 435, 436, 439], "organis": [3, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 232, 421], "attribut": [3, 4, 7, 14, 15, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 59, 60, 64, 66, 67, 68, 69, 71, 76, 77, 78, 79, 80, 81, 82, 83, 118, 121, 124, 127, 128, 129, 134, 135, 147, 148, 151, 156, 157, 158, 176, 194, 204, 210, 232, 235, 239, 240, 242, 314, 324, 325, 327, 328, 329, 331, 333, 334, 335, 338, 340, 342, 344, 345, 346, 347, 349, 350, 357, 420, 423, 435], "live": [3, 29, 36, 41, 49, 56, 59, 60, 61, 62, 63, 66, 71, 72, 73, 101, 118, 121, 124, 128, 135, 141, 147, 148, 151, 156, 157, 158, 194, 242], "actual": [3, 4, 7, 27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 55, 57, 64, 67, 68, 76, 78, 79, 80, 81, 82, 83, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 238, 400, 416, 420, 422, 424, 433, 434, 435], "care": [3, 8, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 41, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 59, 60, 66, 67, 68, 71, 76, 79, 80, 81, 82, 83, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 244, 245, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 277, 280, 281, 284, 286, 289, 290, 292, 297, 305, 307, 309, 312, 317, 320, 379, 420, 422, 424, 433, 434, 435, 437], "parametr": [3, 279, 314, 325, 327, 332, 340, 347, 420, 422], "observation_spec": [3, 44, 118, 121, 124, 128, 135, 141, 147, 148, 151, 156, 157, 158, 177, 180, 183, 184, 185, 186, 187, 189, 190, 191, 193, 194, 197, 199, 200, 201, 202, 206, 208, 210, 212, 214, 218, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 238, 239, 240, 242, 246, 265, 269, 272, 401, 407, 420, 422, 427, 432, 433, 434, 435, 440], "state_spec": [3, 118, 121, 124, 128, 135, 141, 147, 148, 151, 156, 157, 158, 177, 187, 191, 206, 231, 233, 234, 242, 246, 272, 435, 440], "reward_spec": [3, 118, 121, 124, 128, 135, 141, 147, 148, 151, 156, 157, 158, 177, 180, 181, 186, 187, 190, 191, 193, 203, 212, 216, 217, 218, 220, 222, 229, 231, 233, 234, 240, 242, 246, 272, 422, 433, 434, 435, 440], "done_spec": [3, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 175, 190, 191, 193, 194, 212, 222, 229, 231, 233, 242, 433, 434, 435, 440], "flag": [3, 8, 36, 56, 61, 62, 63, 72, 73, 101, 118, 121, 124, 128, 135, 139, 140, 147, 148, 151, 156, 157, 158, 161, 162, 201, 286, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 415, 433, 434, 435, 436], "input_spec": [3, 78, 118, 121, 124, 128, 135, 141, 147, 148, 151, 156, 157, 158, 176, 180, 187, 190, 191, 192, 204, 208, 212, 213, 218, 219, 222, 223, 224, 225, 229, 231, 232, 233, 236, 242, 422, 435], "full_action_spec": [3, 78, 118, 121, 124, 128, 135, 145, 146, 147, 148, 151, 156, 157, 158, 159, 160, 176, 191, 246, 272, 433, 434], "full_state_spec": [3, 44, 78, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 176, 191, 246, 272], "output_spec": [3, 78, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 180, 187, 190, 191, 195, 202, 204, 212, 213, 219, 223, 229, 231, 232, 233, 240, 242, 435], "full_observation_spec": [3, 78, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 246, 272], "full_reward_spec": [3, 78, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 180, 191, 212, 433, 434], "full_done_spec": [3, 78, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 175, 180, 191, 212, 433, 434], "carri": [3, 23, 47, 77, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 225, 240, 342, 421, 423, 433, 434, 435, 437], "nontensor": [3, 52, 200, 233, 413], "spec_lock": [3, 124], "modif": [3, 5, 29, 33, 34, 36, 41, 42, 49, 59, 60, 66, 68, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 175, 197, 200, 242, 342, 416, 422, 435], "children": [3, 13, 14, 15, 16, 19, 20, 21, 22, 23, 29, 33, 34, 36, 41, 42, 49, 59, 60, 66, 68, 71, 78, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242], "unlock": [3, 33, 34, 42, 55, 57, 64, 68, 78, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "set_spec_lock_": [3, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "reason": [3, 4, 8, 29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 149, 150, 151, 156, 157, 158, 210, 235, 242, 269, 416, 420, 421, 422, 427, 428, 433, 435, 437], "easi": [3, 5, 11, 118, 121, 122, 123, 124, 128, 133, 134, 135, 147, 148, 151, 156, 157, 158, 244, 262, 286, 415, 416, 420, 421, 422, 434, 436, 437, 439, 440], "cach": [3, 17, 27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 55, 57, 67, 68, 76, 77, 79, 80, 81, 82, 83, 88, 99, 106, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 174, 179, 190, 193, 210, 231, 232, 237, 247, 389], "principl": 3, "new_spec": 3, "eras": [3, 27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 67, 68, 76, 79, 80, 81, 82, 83, 99, 106, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 232], "relock": 3, "previous": [3, 4, 44, 422, 440], "importantli": [3, 310, 314], "action_s": 3, "help": [3, 4, 29, 36, 41, 49, 59, 60, 66, 71, 76, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 183, 194, 242, 324, 326, 341, 344, 346, 414, 416, 420, 421, 422, 423, 433, 434], "With": [3, 133, 134, 138, 224, 417, 421, 432, 433, 434, 437, 440], "necessarili": [3, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 440], "present": [3, 29, 36, 41, 49, 55, 56, 57, 59, 60, 61, 62, 63, 64, 66, 71, 72, 73, 76, 78, 98, 99, 101, 105, 118, 121, 124, 127, 128, 135, 147, 148, 151, 156, 157, 158, 174, 175, 195, 215, 219, 225, 230, 232, 242, 250, 251, 252, 253, 254, 255, 261, 265, 267, 269, 279, 284, 286, 309, 313, 314, 315, 316, 324, 325, 326, 327, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 357, 359, 360, 361, 362, 363, 411, 417, 420, 430, 432, 433, 434, 437, 439], "0s": [3, 225, 423], "step_and_maybe_reset": [3, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 425], "done_kei": [3, 25, 36, 38, 40, 44, 50, 69, 89, 90, 97, 106, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 174, 179, 183, 194, 215, 223, 242, 433, 434], "assign": [3, 4, 14, 15, 19, 29, 30, 36, 41, 49, 55, 57, 59, 60, 64, 66, 71, 78, 79, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 230, 232, 242, 327, 328, 329, 331, 347, 422, 426, 433, 434, 437], "_reset": [3, 118, 121, 124, 128, 135, 141, 147, 148, 151, 156, 157, 158, 175, 177, 179, 180, 183, 190, 193, 201, 212, 227, 246, 272, 433], "data_": [3, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "append": [3, 8, 11, 44, 56, 61, 62, 63, 72, 73, 101, 118, 121, 124, 125, 128, 135, 147, 148, 151, 156, 157, 158, 179, 186, 187, 204, 215, 225, 232, 238, 264, 265, 268, 269, 306, 311, 420, 421, 422, 423, 424, 433, 434, 435, 436, 437, 439], "seed": [3, 14, 15, 16, 19, 23, 63, 72, 73, 101, 118, 121, 124, 128, 135, 141, 147, 148, 149, 150, 151, 156, 157, 158, 161, 162, 163, 177, 180, 190, 193, 200, 212, 232, 377, 397, 433], "determinist": [3, 14, 15, 16, 19, 20, 21, 22, 23, 29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 172, 187, 210, 225, 231, 232, 235, 237, 242, 251, 260, 280, 290, 301, 310, 313, 314, 317, 325, 342, 392, 415, 420, 421, 422, 423, 424, 426, 427, 430, 433, 435, 439, 440], "preced": [3, 49, 121, 183, 423], "risk": [3, 211], "overlap": [3, 72, 112], "reproduc": [3, 60, 66, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 163, 183, 200, 420, 422, 424, 434], "maximum": [3, 4, 14, 15, 16, 19, 20, 21, 22, 23, 27, 49, 55, 57, 58, 65, 71, 74, 77, 78, 79, 88, 92, 93, 94, 95, 98, 99, 114, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 192, 216, 223, 224, 226, 245, 293, 294, 295, 317, 325, 327, 332, 333, 340, 342, 343, 347, 379, 394, 415, 420, 421, 422, 423, 426, 433, 434, 437], "max_step": [3, 11, 112, 118, 121, 124, 128, 135, 139, 140, 141, 147, 148, 151, 156, 157, 158, 161, 162, 223, 230, 242, 377, 425, 426, 427, 429, 430, 433, 434, 439, 440], "tensordictmodul": [3, 14, 15, 16, 19, 20, 21, 22, 23, 36, 59, 61, 65, 71, 118, 119, 120, 121, 124, 128, 135, 141, 147, 148, 151, 156, 157, 158, 182, 202, 248, 259, 265, 269, 272, 287, 288, 296, 297, 302, 303, 304, 305, 306, 309, 310, 311, 312, 313, 315, 316, 317, 319, 321, 325, 327, 328, 332, 333, 335, 336, 337, 338, 340, 342, 345, 347, 349, 350, 357, 358, 359, 360, 361, 362, 392, 407, 413, 420, 422, 423, 427, 430, 432, 433, 434, 435, 436, 440], "trail": [3, 239], "treat": [3, 49, 416, 426, 427], "brief": [3, 422, 425, 427, 437], "deliveri": 3, "metaclass": [3, 124], "everi": [3, 8, 16, 29, 33, 34, 36, 41, 42, 49, 53, 56, 59, 60, 61, 62, 63, 66, 68, 71, 72, 73, 78, 101, 108, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 168, 223, 224, 239, 242, 244, 245, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 275, 276, 277, 280, 281, 284, 286, 289, 290, 292, 297, 305, 307, 309, 312, 317, 320, 342, 397, 417, 420, 421, 422, 423, 425, 426, 433, 434, 435], "flank": [3, 416, 423], "dual": 3, "refer": [3, 7, 8, 9, 11, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 59, 60, 65, 66, 67, 68, 71, 76, 79, 80, 81, 82, 83, 118, 121, 124, 127, 128, 129, 135, 147, 148, 151, 156, 157, 158, 183, 200, 230, 232, 239, 242, 246, 259, 260, 272, 273, 274, 275, 276, 277, 280, 281, 289, 290, 304, 307, 324, 327, 334, 335, 336, 337, 344, 347, 359, 364, 372, 419, 420, 422, 424, 426, 427, 428, 429, 433, 434, 437], "union": [3, 22, 29, 33, 34, 36, 41, 42, 43, 47, 48, 49, 51, 53, 54, 59, 60, 66, 67, 68, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242, 275, 296, 331, 333, 345, 408, 411], "assess": [3, 14, 15, 16, 19, 20, 21, 22, 23, 33, 34, 42, 68, 139, 140, 164, 420], "split_trajectori": [3, 14, 15, 16, 19, 20, 21, 22, 23, 99, 106, 107, 413], "adjac": [3, 25, 197, 309], "junction": 3, "inittrack": [3, 265, 269, 309, 420, 423], "tutori": [3, 148, 412, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 435, 436, 437, 438, 440], "scratch": [3, 8, 421, 435], "mere": [3, 19, 424], "batch_lock": [3, 118, 121, 124, 126, 128, 135, 147, 151, 156, 157, 180, 225, 232, 435], "notabl": 3, "braxenv": [3, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 213, 413, 425], "jumanjienv": [3, 413], "straightforward": [3, 420, 421, 425, 426, 427, 428, 437], "merg": [3, 56, 63, 72, 73, 435], "correctli": [3, 7, 29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242], "silent": [3, 29, 36, 41, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 244, 245, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 277, 280, 281, 284, 286, 289, 290, 292, 297, 305, 307, 309, 312, 317, 320], "_step": [3, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 177, 179, 180, 182, 183, 184, 187, 188, 190, 191, 193, 194, 195, 196, 197, 198, 201, 202, 209, 211, 212, 213, 215, 218, 219, 222, 223, 224, 225, 226, 227, 229, 230, 231, 235, 236, 238, 239, 242], "temporari": [3, 420], "hold": [3, 231, 355, 356, 435, 437], "arm": 3, "unbatch": [3, 263, 267], "captur": [3, 244, 262, 286, 424], "base_env": [3, 118, 120, 121, 124, 128, 129, 134, 135, 146, 147, 148, 151, 156, 157, 158, 160, 176, 177, 180, 186, 188, 190, 192, 193, 202, 208, 212, 214, 220, 223, 225, 226, 230, 232, 242, 379, 387, 420, 421, 422, 424, 433, 436, 439, 440], "break_when_all_don": [3, 118, 121, 124, 128, 134, 135, 147, 148, 151, 156, 157, 158], "conditionalskip": 3, "programmat": 3, "pretti": [3, 420, 425, 429, 437], "likewis": 3, "break_when_any_don": [3, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 163, 179, 230, 242, 248, 309, 434], "te": 3, "paragraph": 3, "deep": [3, 9, 183, 203, 252, 253, 254, 255, 258, 286, 324, 327, 339, 347, 348, 420, 433], "dive": 3, "gym3": 3, "envpool": [3, 142, 143], "simultan": [3, 22, 134, 142, 143, 147, 156, 435], "advantag": [3, 8, 261, 324, 326, 341, 344, 346, 359, 360, 361, 362, 363, 364, 366, 368, 370, 372, 373, 375, 416, 417, 420, 421, 422, 423, 434, 435, 440], "inherit": [3, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 271, 275, 276, 342, 417, 422, 433, 434], "from_pixel": [3, 11, 119, 120, 122, 123, 127, 129, 130, 133, 134, 153, 183, 214, 377, 379, 420, 421, 423, 425, 429, 430, 436, 437, 439, 440], "81": [3, 106], "simpli": [3, 6, 55, 57, 64, 77, 78, 110, 112, 117, 195, 219, 238, 342, 359, 415, 416, 420, 422, 427, 433, 434, 440], "d": [3, 36, 56, 59, 63, 71, 72, 73, 88, 98, 99, 245, 263, 267, 310, 314, 439], "privat": [3, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 238, 435, 440], "absenc": 3, "total": [3, 14, 15, 16, 19, 20, 21, 22, 23, 27, 45, 47, 53, 55, 56, 57, 61, 62, 63, 64, 72, 73, 78, 101, 107, 112, 326, 341, 344, 388, 390, 392, 397, 400, 401, 419, 420, 421, 422, 423, 427, 433, 434, 436, 437, 438, 439], "accord": [3, 14, 15, 16, 19, 20, 21, 22, 23, 44, 55, 57, 64, 65, 78, 101, 104, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 159, 160, 206, 217, 266, 278, 289, 294, 295, 357, 415, 416, 426, 427, 433, 435, 437], "inner": [3, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 192, 232, 417, 421, 422, 434, 440], "mind": [3, 99, 106, 107, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 433, 434], "wherev": 3, "lost": [3, 8, 238], "intern": [3, 44, 75, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 240, 418], "face": [3, 5, 8, 9, 425, 440], "NOT": [3, 89, 90, 97, 107, 211], "right": [3, 6, 7, 25, 65, 99, 106, 421, 422, 424, 434, 435, 440], "preliminari": 3, "warranti": 3, "affect": [3, 8, 29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 163, 188, 232, 240, 242, 359, 360, 361, 362, 433], "preclud": 3, "presenc": [3, 36, 59, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 163, 427], "annihil": 3, "supersed": [3, 25], "pettingzoowrapp": [3, 413], "group": [3, 27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 59, 67, 68, 76, 79, 80, 81, 82, 83, 118, 121, 124, 128, 135, 138, 139, 140, 145, 146, 147, 148, 149, 150, 151, 156, 157, 158, 159, 160, 161, 162, 164, 203, 222, 354, 415, 421, 426, 428, 434, 437], "__not__": [3, 310, 325, 327, 340, 345, 347, 349, 350], "constrain": [3, 202, 265, 269, 344, 440], "li": 3, "fact": [3, 7, 8, 420, 422, 425, 433, 434, 435, 436, 437, 440], "meaning": [3, 27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 67, 68, 76, 79, 80, 81, 82, 83], "perfectli": [3, 417, 420, 424, 435], "meaningless": 3, "val": [3, 27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 67, 68, 76, 79, 80, 81, 82, 83, 240, 387, 427, 439], "agent0": [3, 424], "agent1": 3, "overrid": [3, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 59, 60, 63, 66, 67, 68, 71, 76, 79, 80, 81, 82, 83, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 179, 242, 257, 379, 411, 415], "bool": [3, 12, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 88, 91, 92, 93, 94, 95, 98, 99, 101, 102, 104, 105, 106, 107, 108, 113, 114, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 168, 174, 175, 176, 177, 179, 180, 183, 184, 188, 190, 192, 193, 194, 195, 197, 200, 202, 204, 205, 206, 208, 210, 212, 213, 215, 217, 218, 219, 222, 223, 225, 228, 229, 230, 232, 233, 234, 235, 237, 239, 240, 242, 243, 244, 245, 246, 248, 249, 250, 252, 253, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 275, 276, 277, 278, 279, 293, 294, 295, 300, 301, 306, 307, 309, 310, 311, 312, 313, 314, 315, 317, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 353, 357, 359, 360, 361, 362, 365, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 386, 387, 390, 391, 392, 394, 395, 397, 411, 421, 422, 424, 435, 439, 440], "500": [3, 420, 421], "note": [3, 4, 14, 15, 16, 19, 20, 21, 22, 23, 29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 171, 175, 190, 193, 230, 239, 240, 242, 247, 263, 265, 267, 269, 286, 310, 314, 334, 413, 416, 421, 424, 426, 432, 433, 434, 440], "launch": [3, 14, 15, 19, 20, 21, 22, 24, 147, 156], "great": [3, 7, 8, 424, 433, 439], "speedup": [3, 8, 433, 440], "precis": [3, 27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 67, 68, 76, 79, 80, 81, 82, 83, 174, 190, 193, 264, 268, 420, 422], "misspecifi": 3, "caus": [3, 7, 8, 14, 15, 16, 92, 94, 114, 118, 121, 124, 128, 132, 135, 147, 148, 151, 156, 157, 158, 211, 440], "breakag": 3, "rais": [3, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 59, 60, 64, 66, 67, 68, 71, 76, 78, 79, 80, 81, 82, 83, 92, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 159, 163, 164, 183, 196, 205, 215, 224, 225, 226, 230, 232, 239, 242, 244, 262, 286, 327, 342, 347, 387, 420, 422, 433, 434, 437], "mismatch": [3, 59, 421], "subprocess": [3, 14, 15, 19, 125, 147, 156], "multithreadedenv": [3, 413], "underneath": 3, "higher": [3, 4, 99, 186, 317, 420, 421, 422, 433, 437, 440], "type": [3, 12, 14, 15, 16, 19, 20, 21, 22, 23, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 88, 101, 118, 121, 124, 128, 135, 138, 141, 144, 147, 148, 149, 150, 151, 156, 157, 158, 165, 171, 172, 174, 180, 183, 187, 190, 191, 194, 195, 200, 202, 204, 210, 212, 213, 219, 223, 225, 229, 230, 231, 232, 233, 235, 237, 239, 240, 242, 244, 249, 250, 270, 275, 276, 279, 287, 296, 298, 306, 310, 313, 314, 321, 324, 325, 327, 328, 329, 331, 333, 334, 335, 340, 342, 344, 345, 346, 347, 349, 350, 352, 354, 357, 365, 377, 409, 413, 415, 420, 421, 422, 424, 428, 433, 434, 435, 437, 440], "atari": [3, 4, 183, 250, 379, 424, 429, 440], "classic": [3, 141, 150, 421], "benchmark_batched_env": 3, "significantli": [3, 106, 107, 183, 416, 420, 421, 427, 434], "asyncenvpool": [3, 151, 157], "pool": [3, 118, 151, 157, 226], "concurr": [3, 118, 433, 434], "contrari": [3, 416], "permit": [3, 186, 197, 222, 234, 324, 326, 341, 344, 346], "job": [3, 7, 20, 21, 22, 24, 63, 72, 73, 101, 437, 439], "famili": 3, "interest": [3, 310, 314, 415, 421, 422, 425, 434, 435, 440], "prefer": [3, 14, 15, 19, 22, 25, 26, 56, 63, 72, 73, 106, 107, 118, 151, 157, 211, 219, 344, 349, 394, 415, 422, 433, 434, 437, 439], "pleas": [3, 29, 36, 41, 49, 59, 60, 66, 71, 75, 118, 121, 124, 127, 128, 135, 147, 148, 149, 150, 151, 156, 157, 158, 180, 183, 200, 226, 230, 232, 242, 275, 276, 277, 327, 347, 414], "lifecycl": 3, "processorasyncenvpool": 3, "inter": [3, 147, 151], "threadingasyncenvpool": 3, "executor": [3, 20, 21, 22, 157], "functool": [3, 14, 15, 118], "synchron": [3, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 55, 57, 64, 78, 142, 409, 410, 413, 421, 422, 433], "s0": [3, 118], "clamp": [3, 118, 314, 317, 336, 397, 416, 433, 435], "env_index": [3, 118], "async_step_send": [3, 118, 151, 157], "s0_result": [3, 118], "async_step_recv": [3, 118, 151, 157], "close": [3, 16, 118, 128, 142, 202, 240, 324, 326, 341, 344, 377, 420, 421, 425, 432, 433, 435, 439], "seamlessli": [3, 435], "paradigm": [3, 19, 434], "decpodp": 3, "game": [3, 4, 5, 121, 139, 140, 145, 146, 250, 379, 424, 429], "thank": [3, 420, 424, 425, 439], "carrier": [3, 422, 423, 425, 437], "particular": [3, 29, 36, 41, 49, 59, 60, 66, 71, 77, 78, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 200, 232, 242, 416, 417, 421, 423, 425, 432, 434, 437], "thu": [3, 341, 434], "vma": [3, 161, 162, 377, 433, 434], "robot": [3, 5, 7, 210, 235, 237, 424, 434], "vmasenv": [3, 377, 413, 433, 434], "balanc": [3, 122, 123, 420, 421], "num_env": [3, 23, 118, 127, 131, 143, 161, 162, 377, 433, 434], "n_agent": [3, 161, 162, 275, 276, 277, 287, 296, 357, 377, 416, 433, 434], "ground_rew": 3, "pos_rew": 3, "style": [3, 56, 63, 72, 73], "vari": [3, 127, 129, 130, 149, 150, 153, 161, 211, 416, 424, 434], "creation": [3, 147, 156, 440], "info_spec": [3, 147], "agent_i_action_spec": 3, "agent_i_reward_spec": 3, "agent_i_observation_spec": 3, "categor": [3, 27, 28, 30, 31, 33, 34, 37, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 67, 68, 76, 79, 80, 81, 82, 83, 118, 119, 120, 121, 124, 127, 128, 129, 130, 133, 134, 135, 139, 140, 142, 143, 145, 146, 147, 148, 149, 150, 151, 153, 156, 157, 158, 159, 160, 161, 162, 175, 176, 177, 194, 212, 259, 282, 285, 288, 306, 307, 310, 311, 312, 329, 332, 333, 357, 413, 423], "simpl": [3, 9, 29, 36, 41, 49, 53, 59, 60, 66, 71, 76, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242, 252, 309, 314, 329, 331, 342, 346, 416, 420, 421, 422, 425, 426, 427, 433, 434, 437, 440], "prefix": [3, 25, 29, 36, 41, 49, 55, 57, 59, 60, 64, 66, 71, 77, 78, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 200, 227, 230, 232, 242, 310, 327, 342, 347, 378, 423, 427, 440], "exactli": [3, 29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 130, 135, 147, 148, 151, 156, 157, 158, 230, 232, 242, 263, 267, 282, 327, 347, 420, 423, 428, 433, 434], "action_kei": [3, 14, 15, 16, 19, 20, 21, 22, 23, 44, 118, 121, 124, 128, 135, 147, 148, 151, 152, 156, 157, 158, 174, 176, 177, 192, 202, 204, 244, 246, 262, 271, 272, 286, 309, 416, 433, 434], "reward_kei": [3, 36, 38, 40, 44, 50, 69, 89, 90, 97, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 174, 242, 246, 272, 391, 395, 433, 434], "set_kei": [3, 194, 324, 326, 327, 329, 332, 333, 334, 340, 341, 342, 344, 345, 346, 347, 357, 363, 420, 433, 434], "awai": [3, 422, 425, 433, 434, 439], "leaf": [3, 14, 15, 16, 19, 20, 21, 22, 23, 27, 28, 30, 31, 32, 33, 34, 37, 42, 44, 45, 46, 47, 48, 51, 52, 53, 54, 68, 76, 78, 79, 80, 81, 82, 83, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 201, 223, 225, 231, 314], "full": [3, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 247, 265, 269, 307, 314, 388, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 439, 440], "autoresettransform": 3, "invalid": [3, 29, 36, 41, 49, 59, 60, 66, 71, 112, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 164, 242, 273, 274], "nan": [3, 179, 238], "auto_reset": [3, 44, 118, 121, 124, 128, 134, 135, 147, 148, 151, 156, 157, 158, 179, 242, 435], "auto_reset_replac": [3, 179], "placehold": [3, 130, 194, 232], "set_gym_backend": [3, 118, 121, 124, 127, 128, 135, 147, 148, 151, 156, 157, 158, 167, 179, 413, 425, 439], "autoresettinggymenv": [3, 179], "self": [3, 14, 15, 16, 19, 20, 21, 22, 23, 26, 29, 33, 34, 36, 41, 42, 49, 55, 57, 59, 60, 64, 66, 68, 71, 78, 118, 121, 124, 128, 135, 141, 147, 148, 151, 156, 157, 158, 177, 179, 180, 182, 183, 184, 187, 188, 190, 191, 193, 194, 195, 196, 198, 201, 202, 209, 210, 211, 212, 213, 215, 218, 219, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 235, 236, 237, 238, 239, 242, 243, 244, 246, 259, 262, 265, 269, 272, 275, 276, 287, 296, 310, 313, 318, 324, 325, 327, 328, 329, 331, 333, 334, 335, 340, 342, 344, 345, 346, 347, 349, 350, 357, 359, 360, 361, 362, 363, 417, 420, 435, 439], "super": [3, 141, 177, 179, 180, 182, 183, 184, 187, 188, 190, 191, 193, 194, 195, 196, 198, 201, 202, 209, 211, 212, 213, 215, 218, 219, 222, 223, 224, 225, 226, 227, 229, 230, 231, 235, 236, 238, 239, 242, 246, 259, 272, 318, 325, 327, 328, 333, 340, 345, 347, 349, 350, 420, 435, 439], "td_reset": [3, 179], "exclud": [3, 8, 27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 67, 68, 71, 76, 79, 80, 81, 82, 83, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 174, 179, 183, 195, 287, 326, 341, 344, 433, 434, 437], "r": [3, 4, 44, 49, 121, 176, 177, 179, 186, 188, 206, 220, 227, 230, 239, 240, 245, 248, 264, 314, 323, 358, 377, 421, 435, 440], "3633e": [3, 179], "02": [3, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 179, 240, 421, 430], "4877e": [3, 179], "01": [3, 179, 206, 240, 245, 286, 320, 324, 326, 341, 344], "2849e": [3, 179], "7584e": [3, 179], "6609e": [3, 179], "6166e": [3, 179], "8366e": [3, 179], "2761e": [3, 179], "5685e": [3, 179], "4102e": [3, 179], "8111e": [3, 179], "9959e": [3, 179], "0865e": [3, 179], "5644e": [3, 179], "2119e": [3, 179], "2542e": [3, 179], "03": [3, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 179, 206, 227], "9952e": [3, 179], "4059e": [3, 179], "2094e": [3, 179], "9009e": [3, 179], "5140e": [3, 179], "3554e": [3, 179], "2920e": [3, 179], "7893e": [3, 179], "6429e": [3, 179], "3057e": [3, 179], "2867e": [3, 179], "6963e": [3, 179], "3818e": [3, 179], "2576e": [3, 179], "2679e": [3, 179], "1640e": [3, 179], "00": [3, 119, 120, 179, 419, 438], "6972e": [3, 179], "0212e": [3, 179], "5959e": [3, 179], "4637e": [3, 179], "3121e": [3, 179], "2168e": [3, 179], "5232e": [3, 179], "7704e": [3, 179], "7457e": [3, 179], "4127e": [3, 179], "1064e": [3, 179], "0854e": [3, 179], "5712e": [3, 179], "2189e": [3, 179], "5235e": [3, 179], "8289e": [3, 179], "0009e": [3, 179], "0257e": [3, 179], "8893e": [3, 179], "5872e": [3, 179], "9405e": [3, 179], "7766e": [3, 179], "0403e": [3, 179], "0626e": [3, 179], "2959e": [3, 179], "7263e": [3, 179], "2775e": [3, 179], "9564e": [3, 179], "0411e": [3, 179], "6769e": [3, 179], "6354e": [3, 179], "8698e": [3, 179], "1765e": [3, 179], "6292e": [3, 179], "5375e": [3, 179], "1820e": [3, 179], "7023e": [3, 179], "5836e": [3, 179], "9016e": [3, 179], "4826e": [3, 179], "6191e": [3, 179], "6387e": [3, 179], "8667e": [3, 179], "2056e": [3, 179], "1147e": [3, 179], "5991e": [3, 179], "0278e": [3, 179], "5219e": [3, 179], "3067e": [3, 179], "6617e": [3, 179], "3322e": [3, 179], "2629e": [3, 179], "4599e": [3, 179], "7298e": [3, 179], "5848e": [3, 179], "0148e": [3, 179], "5745e": [3, 179], "6982e": [3, 179], "7877e": [3, 179], "3527e": [3, 179], "7285e": [3, 179], "6668e": [3, 179], "0583e": [3, 179], "6956e": [3, 179], "3962e": [3, 179], "9845e": [3, 179], "5015e": [3, 179], "5903e": [3, 179], "9993e": [3, 179], "9418e": [3, 179], "0196e": [3, 179], "6557e": [3, 179], "2109e": [3, 179], "8997e": [3, 179], "1507e": [3, 179], "7363e": [3, 179], "0310e": [3, 179], "9574e": [3, 179], "8980e": [3, 179], "0090e": [3, 179], "forecast": 3, "awar": [3, 7, 92, 93, 94, 95, 108, 110, 114, 265, 269, 421, 423], "detect": [3, 342, 416], "return_contigu": [3, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 163, 432], "tensordictbas": [3, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 27, 28, 30, 31, 32, 33, 34, 36, 37, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 59, 62, 64, 67, 68, 71, 72, 73, 76, 78, 79, 80, 81, 82, 83, 112, 118, 121, 124, 126, 128, 135, 147, 148, 151, 156, 157, 158, 163, 174, 175, 177, 179, 180, 182, 183, 184, 187, 188, 190, 191, 194, 195, 196, 197, 198, 201, 202, 209, 211, 212, 213, 215, 218, 219, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 235, 236, 238, 239, 240, 242, 244, 246, 262, 265, 269, 271, 272, 286, 305, 307, 309, 312, 313, 314, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 338, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 357, 358, 359, 360, 361, 362, 363, 397, 420, 433, 435], "envwithdynamicspec": 3, "max_count": 3, "float": [3, 14, 15, 19, 26, 29, 30, 33, 35, 36, 41, 49, 53, 56, 59, 60, 65, 66, 71, 72, 79, 98, 99, 101, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 176, 179, 183, 187, 190, 193, 202, 203, 206, 210, 215, 216, 217, 224, 225, 228, 231, 232, 235, 237, 240, 242, 244, 245, 247, 248, 257, 260, 263, 266, 267, 270, 273, 274, 278, 279, 285, 289, 290, 293, 295, 313, 317, 320, 322, 323, 324, 325, 326, 327, 331, 332, 333, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 358, 364, 365, 366, 367, 368, 369, 370, 371, 372, 395, 420, 421, 437, 440], "_set_se": [3, 177, 180, 190, 193, 212, 435], "lazystackedtensordict": [3, 44, 68, 93, 118, 121, 124, 128, 135, 141, 147, 148, 151, 156, 157, 158, 432], "float32": [3, 14, 15, 16, 30, 33, 36, 38, 44, 55, 56, 57, 59, 64, 65, 69, 71, 72, 73, 76, 77, 78, 79, 92, 93, 94, 98, 99, 106, 114, 118, 119, 120, 121, 124, 127, 128, 129, 133, 134, 135, 141, 144, 145, 146, 147, 148, 151, 154, 155, 156, 157, 158, 159, 161, 162, 168, 174, 176, 180, 190, 193, 194, 195, 200, 203, 206, 208, 212, 213, 215, 219, 222, 223, 225, 228, 233, 246, 248, 258, 259, 265, 269, 272, 286, 287, 288, 296, 301, 302, 303, 304, 305, 306, 309, 310, 311, 312, 313, 316, 318, 321, 324, 325, 327, 328, 329, 331, 332, 333, 340, 344, 345, 346, 347, 349, 350, 357, 415, 435], "exclusive_field": [3, 44, 93, 118], "stack_dim": [3, 44, 93, 118], "dramat": 3, "carefulli": [3, 433, 434, 440], "against": [3, 5, 7, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 59, 60, 66, 67, 68, 71, 76, 79, 80, 81, 82, 83, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 163, 242, 301, 306, 307, 310, 311, 312, 313, 314, 325, 327, 340, 345, 347, 349, 350, 422, 433, 434], "plain": [3, 8, 425], "expens": [3, 99, 106, 107, 377, 437], "absent": [3, 33, 34, 42, 68, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 219, 232], "torchvis": [3, 11, 210, 237, 381, 433, 439, 440], "callabl": [3, 14, 15, 16, 17, 19, 20, 21, 22, 23, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 56, 59, 60, 61, 62, 63, 66, 67, 68, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 101, 118, 121, 124, 125, 128, 135, 141, 147, 148, 151, 156, 157, 158, 173, 178, 180, 187, 188, 194, 200, 225, 232, 233, 242, 243, 249, 250, 270, 277, 314, 323, 342, 377, 402, 403, 409, 410, 411, 421, 437], "bring": [3, 422, 425, 440], "signific": [3, 5, 8, 422, 439, 440], "kind": [3, 63, 76, 427, 433, 437], "consult": 3, "resize_par": 3, "revers": [3, 267], "order": [3, 11, 16, 29, 36, 41, 49, 53, 56, 59, 60, 61, 62, 63, 66, 71, 72, 73, 101, 105, 107, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 184, 190, 193, 200, 208, 222, 230, 232, 242, 285, 301, 306, 313, 315, 316, 318, 324, 325, 327, 328, 332, 333, 340, 344, 345, 346, 347, 349, 350, 421, 433, 434], "chain": [3, 55, 56, 57, 63, 64, 72, 73, 78, 135, 187, 192, 249, 250, 316, 440], "in_keys_inv": [3, 169, 186, 190, 191, 193, 200, 206, 207, 208, 212, 213, 215, 220, 229, 231, 233, 234, 420, 432, 435, 440], "append_transform": [3, 44, 56, 61, 62, 63, 72, 73, 101, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 169, 176, 177, 179, 180, 182, 183, 184, 187, 188, 191, 194, 195, 196, 198, 200, 201, 202, 209, 210, 211, 212, 213, 215, 218, 219, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 235, 236, 238, 239, 240, 242, 248, 265, 269, 377, 420, 423, 433, 435, 437, 439, 440], "doubletofloat": [3, 420, 422, 432], "float64": [3, 29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 122, 123, 124, 128, 135, 139, 140, 147, 148, 151, 156, 157, 158, 176, 187, 190, 193, 210, 225, 231, 232, 235, 237, 242, 313], "think": [3, 414, 422, 433, 434, 440], "in_": 3, "out_": 3, "perspect": [3, 259, 307, 334, 422, 424], "outer": [3, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 232, 417, 420, 421, 440], "ob": [3, 4, 8, 25, 33, 34, 42, 44, 56, 61, 62, 63, 68, 71, 72, 73, 78, 98, 101, 106, 107, 112, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 168, 174, 177, 179, 190, 191, 193, 206, 220, 222, 228, 252, 253, 254, 255, 275, 276, 277, 311, 318, 325, 327, 328, 333, 340, 345, 347, 349, 350, 359, 360, 361, 362, 421, 424, 432, 433, 435, 437, 439, 440], "obs_standard": 3, "out_keys_inv": [3, 169, 186, 190, 191, 193, 200, 206, 207, 208, 212, 213, 220, 222, 229, 231, 233, 234, 435], "illustr": [3, 420, 421, 426, 437], "chang": [3, 5, 7, 11, 25, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 56, 59, 60, 63, 66, 67, 68, 71, 72, 73, 76, 79, 80, 81, 82, 83, 92, 93, 94, 95, 99, 105, 106, 108, 110, 114, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 180, 187, 190, 191, 193, 195, 202, 204, 212, 213, 219, 223, 229, 231, 232, 233, 239, 240, 242, 267, 324, 325, 327, 328, 329, 331, 333, 334, 335, 340, 342, 344, 345, 346, 347, 349, 350, 357, 416, 420, 423, 433, 434, 435, 436, 437, 440], "schemat": [3, 416], "outermost": 3, "innermost": 3, "similar": [3, 29, 36, 41, 49, 51, 55, 57, 59, 60, 63, 64, 66, 71, 78, 118, 121, 124, 128, 135, 147, 148, 149, 150, 151, 156, 157, 158, 187, 210, 225, 231, 232, 235, 236, 237, 239, 240, 242, 302, 304, 310, 313, 314, 416, 420, 421, 422, 423, 424, 426, 427, 428, 429, 435, 437, 439, 440], "transform_action_spec": [3, 187, 191, 206, 231, 233, 234, 242], "spec_from_random_valu": 3, "_apply_transform": [3, 177, 179, 180, 182, 183, 184, 187, 188, 191, 194, 195, 196, 198, 201, 202, 209, 211, 212, 213, 215, 218, 219, 222, 223, 224, 225, 226, 227, 229, 230, 231, 235, 236, 238, 239, 242, 435, 440], "rand": [3, 27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 56, 61, 62, 63, 67, 68, 72, 73, 76, 79, 80, 81, 82, 83, 93, 101, 119, 120, 133, 134, 141, 145, 146, 152, 159, 160, 177, 180, 190, 193, 212, 222, 246, 272, 310, 324, 325, 327, 328, 329, 331, 332, 333, 340, 342, 344, 345, 347, 349, 350, 435, 439, 440], "approach": [3, 56, 63, 72, 73, 183, 206, 245, 275, 276, 349, 420, 422, 427, 428, 433, 440], "insid": [3, 55, 57, 64, 78, 147, 440], "did": [3, 63, 238, 365, 421, 422, 428, 437, 440], "_inv_apply_transform": [3, 176, 231, 242, 435, 440], "actiondiscret": 3, "rand_act": [3, 118, 121, 124, 128, 135, 138, 147, 148, 149, 150, 151, 156, 157, 158, 180, 232, 425], "action_discret": 3, "addonetoob": 3, "Is": [3, 231], "rewrit": [3, 231], "_call": [3, 177, 179, 180, 182, 183, 184, 187, 188, 191, 192, 194, 195, 196, 197, 198, 201, 202, 209, 211, 212, 213, 215, 218, 219, 222, 223, 224, 225, 226, 227, 229, 230, 231, 235, 236, 238, 239, 242, 435], "_inv_cal": [3, 176, 231, 242], "overwrit": [3, 231], "till": [3, 231, 238], "encapsul": [3, 231, 425, 426, 427], "forget": [3, 231, 267], "edit": [3, 231, 242, 428], "top": [3, 4, 112, 119, 120, 133, 134, 189, 231, 246, 272, 426], "transform_output_spec": [3, 180, 187, 190, 191, 195, 202, 204, 212, 213, 219, 223, 229, 231, 233, 240, 242], "transform_input_spec": [3, 176, 180, 187, 190, 191, 192, 204, 208, 212, 213, 218, 222, 223, 224, 225, 229, 231, 233, 236, 242], "transform_observation_spec": [3, 180, 183, 184, 185, 186, 187, 189, 190, 191, 194, 195, 197, 199, 201, 202, 204, 206, 208, 212, 213, 214, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 238, 239, 240, 242, 435], "transform_state_spec": [3, 187, 191, 206, 231, 233, 234, 242], "transform_reward_spec": [3, 180, 181, 186, 187, 190, 191, 195, 202, 203, 204, 212, 213, 216, 217, 218, 219, 220, 222, 223, 229, 231, 233, 234, 240, 242], "rewardsum": [3, 174, 231, 242, 433, 434], "undo": 3, "addonetoact": 3, "subtract": [3, 224], "regist": [3, 17, 18, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 56, 59, 60, 61, 62, 63, 66, 67, 68, 71, 72, 73, 76, 79, 80, 81, 82, 83, 101, 118, 121, 124, 127, 128, 129, 135, 147, 148, 151, 156, 157, 158, 159, 160, 171, 174, 190, 193, 194, 218, 230, 232, 242, 244, 245, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 277, 280, 281, 284, 286, 289, 290, 292, 297, 305, 307, 309, 312, 317, 320, 324, 325, 327, 328, 329, 331, 333, 334, 335, 340, 342, 344, 345, 346, 347, 349, 350, 357, 377, 379, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 417, 420, 422, 425, 437], "manipul": [3, 4, 8, 122, 123, 210, 231, 235], "third_transform": 3, "unexpect": [3, 14, 15, 16, 29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242, 440], "behviour": 3, "fortun": [3, 423, 424, 425, 426, 429], "alreadi": [3, 8, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 59, 60, 64, 66, 67, 68, 71, 76, 77, 78, 79, 80, 81, 82, 83, 92, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 175, 225, 242, 243, 314, 359, 360, 361, 362, 420, 422, 429, 433, 434], "catfram": [3, 309, 421], "notic": [3, 112, 183, 416, 422, 430, 435], "parenthood": 3, "henc": [3, 56, 175, 211, 275, 420, 422, 433, 434, 435], "transform1": 3, "transform2": 3, "transform3": 3, "last_two": 3, "isinst": [3, 147, 156, 232, 377, 387, 435], "discret": [3, 27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 67, 68, 76, 79, 80, 81, 82, 83, 118, 121, 124, 127, 128, 129, 135, 139, 140, 147, 148, 149, 150, 151, 156, 157, 158, 161, 162, 176, 192, 200, 282, 285, 288, 331, 332, 333, 334, 415, 421, 426, 434], "might": [3, 55, 57, 58, 64, 78, 383, 414, 420, 425, 440], "action_mask": [3, 121, 133, 134, 149, 150, 154, 155, 177], "unavail": [3, 149, 150], "probabl": [3, 4, 8, 65, 101, 104, 247, 248, 257, 259, 262, 263, 265, 267, 269, 270, 273, 274, 282, 294, 295, 310, 314, 327, 344, 415, 416, 421, 424, 426, 439], "probabilistictensordictmodul": [3, 202, 314, 315, 416, 439], "tensordictsequenti": [3, 36, 59, 71, 248, 262, 265, 269, 286, 306, 309, 315, 316, 321, 415, 420, 421, 423, 424, 426, 430, 432, 433, 436, 439], "maskedcategor": [3, 274, 413], "linear": [3, 14, 15, 16, 19, 23, 29, 36, 41, 49, 59, 60, 61, 66, 71, 118, 119, 120, 121, 124, 128, 135, 141, 147, 148, 151, 156, 157, 158, 187, 202, 210, 225, 231, 232, 235, 237, 242, 246, 248, 249, 250, 252, 253, 254, 255, 259, 261, 262, 270, 272, 275, 276, 278, 279, 286, 288, 289, 290, 301, 302, 303, 304, 308, 309, 310, 311, 313, 316, 318, 324, 325, 327, 328, 329, 331, 332, 333, 334, 335, 340, 342, 344, 345, 346, 347, 349, 350, 357, 359, 360, 361, 362, 407, 415, 421, 432, 436, 439], "in_feat": 3, "out_feat": 3, "logit": [3, 57, 65, 258, 273, 274, 282, 285, 307, 310, 332, 333, 415], "dist": [3, 10, 273, 274, 282, 314, 416, 426], "distribution_class": [3, 202, 302, 303, 304, 305, 310, 314, 316, 324, 325, 327, 332, 333, 340, 344, 345, 346, 347, 415, 420, 422, 426, 433, 434, 439], "wrap": [3, 5, 14, 15, 16, 19, 20, 21, 22, 23, 26, 29, 35, 36, 41, 49, 59, 60, 65, 66, 71, 118, 119, 120, 121, 124, 128, 129, 133, 134, 135, 140, 143, 145, 146, 147, 148, 149, 150, 151, 156, 157, 158, 160, 162, 163, 171, 188, 230, 232, 242, 243, 265, 269, 297, 302, 303, 304, 309, 311, 314, 319, 342, 357, 415, 420, 421, 422, 423, 427, 430, 433, 434, 440], "actionmask": [3, 121], "your_base_env": 3, "mask_kei": [3, 25, 177, 211, 242], "itself": [3, 29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 167, 179, 242, 342, 349, 422, 425], "ey": 3, "report": [3, 119, 120, 133, 134, 429], "foremost": 3, "callback": [3, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 434], "ad": [3, 4, 16, 25, 29, 36, 41, 44, 49, 56, 59, 60, 61, 62, 63, 66, 71, 72, 73, 85, 98, 99, 101, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 183, 200, 218, 230, 232, 242, 245, 278, 279, 286, 323, 324, 326, 327, 329, 334, 341, 344, 347, 357, 421, 423, 424, 426, 433, 437, 439, 440], "tensordictrecord": [3, 413], "videorecord": [3, 11, 377, 413, 422, 429, 430, 433], "csvlogger": [3, 11, 377, 379, 413, 421, 429, 430, 433], "wandblogg": [3, 413, 429], "tensorboardlogg": [3, 407, 413, 429], "tag": [3, 7, 11, 377, 379, 381, 384, 411, 429, 430, 433], "mp4": [3, 377, 379, 381, 430, 433], "video_format": [3, 377, 379, 381, 430, 433], "whc": 3, "cwh": 3, "exp": [3, 323, 416], "al": [3, 26, 127, 129, 194, 208, 246, 424, 440], "pong": [3, 143, 208, 424, 440], "v5": [3, 127, 129, 143, 194, 208, 424, 440], "tediou": [3, 425], "workspac": [3, 78, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 200], "pixelrendertransform": [3, 413, 433], "stream": 3, "alik": [3, 377], "envcreat": [3, 16, 24, 147, 156, 230, 240, 377, 407, 408, 411, 413, 420, 421, 439, 440], "render_mod": [3, 377, 435], "rgb_arrai": [3, 377, 433, 434, 435], "uncom": [3, 429], "line": [3, 7, 29, 36, 41, 44, 49, 59, 60, 66, 71, 78, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242, 421, 429, 433, 434], "comment": [3, 417, 421, 439], "pixels_record": [3, 377], "mission": 3, "irrespect": [3, 313, 314], "dmcontrol": [3, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "jumanji": [3, 118, 121, 124, 128, 133, 134, 135, 147, 148, 151, 156, 157, 158], "framework": [3, 4, 9, 24, 118, 119, 120, 121, 124, 128, 133, 134, 135, 141, 147, 148, 151, 156, 157, 158, 263, 439, 440], "Its": [3, 29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 187, 210, 225, 231, 232, 235, 237, 239, 242, 313, 363], "success": [3, 183, 227, 262, 327, 349, 421, 428, 430, 435, 437, 439], "foundat": [3, 5, 149, 150, 422, 434], "inspir": [3, 424, 435], "gone": [3, 4, 5, 309], "concomittantli": 3, "problem": [3, 7, 8, 9, 16, 421, 422, 423, 428, 433, 434, 435, 437, 440], "decor": [3, 8, 171, 173, 243, 265, 269, 300, 342, 359, 360, 361, 362, 387, 423, 439], "relev": [3, 13, 14, 15, 16, 19, 20, 21, 22, 23, 65, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 359, 360, 361, 362, 363, 386, 424, 435], "gym_backend": [3, 173, 413], "env1": [3, 248, 432], "venv": 3, "python3": [3, 6, 7, 10], "site": [3, 6, 7, 121, 173], "env2": [3, 432], "_env": [3, 6, 127, 440], "classic_control": 3, "pendulumenv": [3, 44, 413, 435], "0x15147e190": 3, "0x1629916a0": 3, "mo_gymnasium": [3, 137, 167, 203], "side": [3, 4, 440], "v0": [3, 14, 15, 33, 34, 42, 68, 118, 121, 124, 128, 130, 133, 134, 135, 136, 137, 147, 148, 151, 156, 157, 158, 187, 203, 232, 239, 240, 387, 407], "26": [3, 107, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "fun": [3, 173, 243, 422, 433, 434], "reveal": 4, "curv": 4, "exploit": [4, 426], "cv": 4, "flip": [4, 134], "correspondingli": 4, "invers": [4, 27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 56, 61, 62, 63, 67, 68, 72, 73, 76, 79, 80, 81, 82, 83, 101, 176, 183, 190, 193, 195, 200, 206, 213, 215, 227, 229, 231, 233, 242, 322, 332, 340, 413, 435], "prescript": 4, "tune": [4, 26, 202, 433, 434, 436], "coeffici": [4, 26, 35, 65, 202, 434], "bonu": [4, 324, 326, 341, 344], "beta": [4, 56, 72, 98, 99, 332, 340, 341, 420, 421, 437, 439], "reduc": [4, 6, 32, 112, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 174, 183, 188, 224, 240, 245, 247, 294, 413, 421, 433], "downstream": [4, 416, 420], "formul": [4, 433, 434], "rate": [4, 11, 239, 240, 358, 421, 422, 433, 434], "gradient": [4, 29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 232, 242, 247, 266, 274, 279, 282, 294, 295, 314, 324, 326, 327, 328, 332, 333, 338, 340, 341, 342, 344, 345, 346, 347, 349, 350, 358, 359, 360, 361, 362, 397, 420, 422, 433, 434, 435], "easier": [4, 60, 415, 420, 439], "local": [4, 7, 10, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 29, 36, 41, 49, 59, 60, 62, 66, 71, 99, 106, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 232, 240, 242, 275, 276, 287, 296, 357, 384, 386, 413, 424, 429, 430, 433, 434], "optima": 4, "product": [4, 9, 27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 67, 68, 76, 79, 80, 81, 82, 83, 263, 264, 267, 268, 409, 410], "sum": [4, 23, 29, 36, 47, 53, 71, 112, 119, 120, 122, 123, 127, 129, 130, 133, 134, 142, 143, 153, 182, 203, 218, 273, 274, 294, 296, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 338, 340, 341, 343, 344, 345, 346, 347, 349, 350, 358, 365, 416, 420, 421, 422, 423, 424, 427, 430, 433, 434, 435, 440], "stat": [4, 206, 239, 240, 401, 411, 421, 422], "w": [4, 101, 121, 145, 146, 183, 185, 189, 214, 228, 263, 286, 379, 421, 437], "yield": [4, 14, 15, 16, 23, 29, 36, 41, 49, 59, 60, 66, 71, 78, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242, 342, 420, 427], "insight": [4, 424], "auxiliari": [4, 427], "weight": [4, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 29, 36, 41, 49, 56, 59, 60, 65, 66, 71, 99, 101, 104, 118, 119, 120, 121, 124, 128, 135, 147, 148, 151, 154, 155, 156, 157, 158, 187, 200, 203, 210, 225, 230, 231, 232, 235, 237, 242, 263, 264, 265, 267, 268, 269, 275, 277, 279, 313, 324, 325, 326, 327, 333, 336, 347, 349, 399, 406, 413, 415, 417, 420, 421, 422, 432, 435, 437, 439], "credit": 4, "futur": [4, 25, 29, 36, 41, 49, 55, 57, 59, 60, 64, 66, 71, 78, 89, 90, 97, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 200, 210, 230, 232, 237, 242, 270, 324, 325, 327, 328, 329, 331, 333, 334, 335, 340, 342, 344, 345, 346, 347, 349, 350, 357, 414], "spars": [4, 36, 423], "intermedi": [4, 14, 15, 36, 44, 59, 71, 182, 248, 265, 269, 307, 420, 424, 436], "instrument": 4, "greatli": 4, "soccer": 4, "kick": 4, "ball": 4, "likelihood": [4, 420], "discov": 4, "score": [4, 65, 283, 285], "undesir": 4, "unintention": 4, "valuabl": 4, "idiosyncrat": 4, "subtask": 4, "hierarch": 4, "select": [4, 36, 56, 59, 61, 62, 63, 71, 72, 73, 78, 101, 121, 139, 140, 149, 150, 152, 161, 162, 176, 177, 179, 180, 182, 183, 184, 187, 188, 190, 191, 193, 194, 195, 196, 197, 198, 201, 202, 204, 205, 209, 211, 212, 213, 215, 218, 219, 222, 223, 224, 225, 226, 227, 229, 230, 231, 235, 236, 238, 239, 242, 246, 306, 311, 396, 415, 416, 420, 424, 425, 433, 437], "explicit": [4, 14, 15, 16, 243, 437], "curios": 4, "magnitudin": 4, "domin": 4, "smaller": [4, 26, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 267, 332, 340, 422, 434], "addition": [4, 257], "timestep": [4, 65, 215, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 433, 434], "realli": 4, "huge": [4, 276, 423], "std": [4, 206, 239, 244, 284, 420, 440], "torchrlunseen": 4, "extrins": 4, "wrong": [4, 99, 106], "bonus": 4, "denser": 4, "prior": [4, 66, 290, 336, 434], "freshli": 4, "drop": [4, 105, 107, 174, 240], "meant": [4, 49, 141], "encourag": [4, 147, 285, 420, 421, 437], "measur": [4, 92, 94, 114, 119, 120, 133, 134, 177, 179, 180, 182, 183, 184, 187, 188, 191, 194, 195, 196, 198, 201, 202, 209, 211, 212, 213, 215, 218, 219, 222, 223, 224, 225, 226, 227, 229, 230, 231, 235, 236, 238, 239, 242, 422, 428], "novelti": 4, "revisit": 4, "diminish": 4, "decreas": [4, 26, 426], "ideal": [4, 206, 435], "down": [4, 14, 15, 16, 19, 151, 157, 416, 423, 425], "distil": 4, "nois": [4, 241, 279, 286, 299, 345, 349, 350, 392, 411, 420, 433], "exploratori": [4, 324, 326, 341, 344], "misalign": 4, "trade": [4, 426], "unavoid": 4, "bootstrap": [4, 334, 359, 360, 366, 367, 420, 423], "noisi": [4, 278, 279, 299, 415], "unstabl": [4, 266, 294, 295], "inher": [4, 324, 344], "stochast": [4, 202, 260, 279, 280, 290, 325, 327, 330, 332, 333, 338, 340, 343, 345, 347, 415, 422, 426, 434], "enemi": 4, "pomdp": [4, 437], "loos": [4, 314, 415, 421, 422], "nonexist": 4, "sequenc": [4, 14, 15, 16, 19, 26, 27, 28, 30, 31, 32, 33, 34, 36, 37, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 65, 67, 68, 71, 74, 76, 77, 78, 79, 80, 81, 82, 83, 88, 91, 101, 102, 104, 110, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 133, 134, 135, 142, 143, 147, 148, 151, 153, 156, 157, 158, 169, 181, 182, 183, 184, 185, 189, 190, 192, 193, 197, 199, 200, 203, 206, 207, 211, 212, 213, 214, 215, 216, 217, 218, 222, 224, 226, 227, 228, 229, 231, 233, 239, 240, 249, 250, 257, 259, 263, 267, 270, 273, 274, 275, 276, 282, 288, 292, 305, 315, 316, 330, 378, 379, 392, 393, 394, 396, 397, 415, 420, 422, 423, 424, 432, 433, 434, 440], "lstm": [4, 225, 268, 269, 424], "rel": [4, 101, 225, 257, 293, 420, 421, 433, 434, 437], "tend": 4, "stabl": [4, 9, 10, 144], "compens": 4, "descent": [4, 279], "minimum": [4, 79, 118, 147, 156, 216, 260, 293, 294, 295, 317, 320, 323, 325, 327, 333, 342, 343, 347, 388, 416, 420, 422, 430, 433, 434], "manual": [4, 11, 20, 22, 23, 44, 56, 61, 62, 63, 72, 73, 101, 128, 129, 420, 423, 437], "deviat": [4, 206, 239, 240, 244, 246, 260, 272, 278, 279, 284, 285, 344, 349, 350, 420, 426, 434], "radic": 4, "begin": [4, 14, 15, 16, 19, 20, 21, 22, 23, 99, 106, 179, 263, 264, 267, 268, 323, 387, 416, 424, 425, 426, 427, 428, 429, 430], "stabil": [4, 198, 247, 324, 326, 341, 344, 346], "stage": [4, 420, 435], "never": [4, 14, 15, 19, 30, 79, 99, 227, 428, 439], "prevent": [4, 27, 28, 32, 33, 34, 37, 42, 45, 46, 47, 48, 53, 54, 61, 68, 90, 239, 240, 266, 294, 295, 324, 326, 341, 344, 346, 395, 429, 437], "entir": [4, 14, 15, 16, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 183, 240, 275, 422, 425, 435, 437], "submit": [4, 127, 180, 414, 439], "adequ": [4, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 163, 422, 433, 434], "infeas": 4, "allevi": [4, 415], "prune": [4, 135], "fire": [4, 29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242], "illeg": 4, "chess": [4, 121, 145, 146], "grasp": 4, "wherein": 4, "cumul": [4, 36, 218, 224, 246, 365, 422], "q": [4, 9, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 252, 253, 254, 255, 258, 259, 261, 287, 288, 296, 304, 307, 311, 312, 325, 327, 328, 329, 331, 332, 333, 334, 339, 340, 345, 347, 349, 350, 357, 413, 420, 427], "flow": [4, 420, 422, 433, 434, 435, 437], "reparameter": [4, 257, 274, 282], "soft": [4, 339, 347, 348, 433], "critic": [4, 8, 302, 308, 324, 326, 327, 328, 332, 333, 340, 341, 344, 345, 346, 347, 349, 350, 420, 427], "clip": [4, 65, 186, 216, 324, 326, 341, 344, 346, 349, 350, 397, 422, 434, 435], "oppos": [4, 77], "incorrect": [4, 106], "thought": [4, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "region": 4, "squash": [4, 423, 439], "tanh": [4, 249, 250, 263, 264, 266, 267, 268, 270, 276, 293, 294, 295, 317, 422, 426, 433, 434, 435, 436], "prob": [4, 273, 274, 282, 285, 422, 434], "rememb": [4, 433], "remap": 4, "origin": [4, 8, 36, 55, 57, 58, 59, 64, 65, 71, 74, 78, 132, 191, 192, 202, 210, 232, 237, 242, 263, 310, 313, 314, 325, 327, 339, 340, 342, 344, 345, 347, 349, 350, 420, 424, 432, 435, 440], "world": [5, 141, 319, 336, 424, 429, 433, 434, 435, 440], "histor": 5, "ceas": 5, "farama": [5, 136, 137, 149, 150, 422, 435], "gymwrapp": [5, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 195, 219, 223, 238, 413, 422, 439], "feel": [5, 414, 430, 439], "free": [5, 7, 174, 190, 193, 324, 336, 344, 417, 422, 430, 434, 439], "gladli": 5, "prepar": [6, 40, 422], "conda": [6, 7, 414], "cmake": 6, "activ": [6, 7, 9, 44, 249, 250, 256, 260, 270, 275, 276, 326, 341, 344, 415, 435, 439], "sim": 6, "bullet": 6, "headless": [6, 7], "cluster": [6, 7, 8, 20, 23, 414], "withbullet": 6, "forg": [6, 7], "aihabitat": [6, 130], "y": [6, 7, 36, 59, 63, 71, 144, 261, 275, 297, 420, 434, 437], "facebookresearch": [6, 130], "subdirectori": 6, "verbos": [6, 430], "magnum_log": 6, "quiet": 6, "habitat_sim_log": 6, "remov": [6, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 59, 60, 64, 66, 67, 68, 71, 76, 78, 79, 80, 81, 82, 83, 85, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 212, 221, 242, 342, 433, 434, 439, 440], "command": [6, 7, 10, 151, 157, 158, 422, 433, 434, 435, 440], "readm": [6, 7, 161, 439], "md": [6, 7], "habitatenv": [6, 413], "_has_habitat": 6, "available_env": [6, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 133, 134, 135, 136, 139, 140, 144, 145, 146, 147, 148, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 440], "startswith": [6, 248, 416, 420, 427], "oserror": 6, "libllvmlit": 6, "ionstal": 6, "pointer": [6, 125, 342, 420], "env_nam": [6, 118, 119, 121, 122, 124, 125, 127, 128, 130, 133, 135, 136, 142, 147, 148, 151, 153, 156, 157, 158, 420, 422, 440], "llvmlite": 6, "config": [6, 7, 210, 237, 251, 256, 284, 401, 402, 403, 405, 408], "var": [6, 7, 29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 200, 230, 232, 240, 242, 327, 342, 347], "ld_preload": [6, 7], "bind": 6, "deactiv": [6, 7, 306, 342], "importerror": [6, 7, 10], "usr": [6, 7, 10], "x86_64": [6, 7], "linux": [6, 7], "gnu": [6, 7], "libopengl": [6, 7], "undefin": [6, 7, 10, 29, 32, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 200, 230, 232, 242, 327, 342, 347, 424, 437], "symbol": [6, 7, 10], "_glapi_tls_curr": [6, 7], "mujoco_env": [6, 7], "libglvnd": [6, 7], "glx": [6, 7], "cos7": [6, 7], "reinstal": [6, 7], "xvfbwrapper": [6, 7], "sysroot": [6, 7], "lib64": [6, 7], "libgldispatch": [6, 7], "offici": [7, 424], "stand": [7, 39, 122, 123, 147, 156, 432, 435], "joint": [7, 421], "contact": [7, 58, 433], "engin": [7, 153, 435], "biomechan": 7, "graphic": 7, "anim": [7, 434], "area": 7, "demand": [7, 429, 440], "fast": [7, 9, 93, 119, 120, 174, 213, 345, 420, 421, 422, 439], "articul": 7, "acquir": [7, 422], "deepmind": [7, 8, 9, 118, 121, 122, 123, 124, 128, 135, 139, 140, 145, 146, 147, 148, 151, 156, 157, 158, 194, 422, 425], "whomev": 7, "licenc": 7, "incorpor": [7, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 244, 262, 286, 349, 423, 426, 435], "relianc": 7, "obsolet": 7, "legaci": [7, 25], "pro": [7, 414], "tip": [7, 414], "glfw": [7, 420], "osmesa": 7, "egl": 7, "advic": [7, 440], "sudo": [7, 414], "apt": [7, 434], "libglfw3": 7, "libglew2": 7, "libgl1": 7, "mesa": 7, "libosmesa6": 7, "workflow": [7, 135, 302, 303, 304], "glew": 7, "mesalib": 7, "anaconda": 7, "libgl": 7, "cos6": 7, "menpo": 7, "glfw3": 7, "mujoco_gl": 7, "pyopengl_platform": 7, "mkdir": 7, "earlier": [7, 416, 420, 422, 423, 433, 434, 437], "roboti": 7, "html": [7, 14, 15, 142, 144, 145, 146], "wget": 7, "mujoco210": 7, "tar": 7, "gz": 7, "xf": 7, "charg": [7, 14, 15, 19, 147, 156], "mjkei": 7, "txt": 7, "mjlib_path": 7, "home": [7, 55, 57, 77, 88], "bin": [7, 259, 285, 307, 415], "libmujoco210": 7, "ld_library_path": 7, "mujoco_py_mujoco_path": 7, "mujoco_py_mjkey_path": 7, "reload": 7, "later": [7, 255, 310, 314, 420, 422, 424, 437], "nvidia": [7, 132, 424], "older": [7, 243], "hack": [7, 420], "adatp": 7, "script": [7, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 163, 387, 407, 411, 415, 416, 417, 420, 421, 424, 429, 433, 434, 435, 437], "unnot": [7, 211], "mujoco_pi": 7, "cymj": 7, "linuxgpuextensionbuild": 7, "filenam": [7, 90, 421, 437], "troubleshoot": 7, "gl": 7, "h": [7, 101, 183, 185, 189, 214, 228, 263, 264, 265, 267, 268, 269, 272, 379, 421, 437], "eglshim": 7, "fatal": 7, "No": [7, 14, 15, 16, 19, 20, 21, 22, 23, 27, 28, 32, 37, 47, 48, 53, 54], "directori": [7, 55, 57, 64, 77, 78, 92, 384, 386, 416, 417, 420, 426, 429, 433], "devel": 7, "ubuntu": [7, 132], "libglew": 7, "dev": 7, "cento": 7, "yum": 7, "glu": 7, "disappear": [7, 421, 423, 432], "libstdc": 7, "glibcxx_3": 7, "29": [7, 106, 107], "compil": [7, 14, 15, 16, 25, 29, 36, 41, 49, 59, 60, 63, 66, 71, 72, 73, 91, 92, 93, 94, 95, 99, 102, 106, 107, 108, 113, 114, 116, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242, 243, 263, 264, 267, 268, 294, 359], "libosmesa": 7, "libgcc": 7, "filenotfounderror": 7, "errno": 7, "patchelf": 7, "fatalerror": 7, "gladloadgl": 7, "mj_env": 7, "912": 7, "glfwerror": 7, "65537": 7, "myscript": 7, "runtimeerror": [7, 8, 29, 32, 33, 34, 36, 41, 42, 49, 59, 60, 66, 68, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 205, 230, 232, 242, 327, 347, 416, 440], "slurm": 7, "mjrendercontext": 7, "pyx": 7, "46": [7, 106, 119, 120], "114": 7, "_setup_opengl_context": 7, "opengl_context": 7, "130": 7, "offscreenopenglcontext": 7, "opengl": [7, 433, 434], "global": [7, 29, 36, 41, 49, 59, 60, 63, 66, 71, 72, 73, 101, 118, 121, 124, 128, 135, 147, 148, 149, 150, 151, 156, 157, 158, 230, 242, 287, 296, 310, 314, 357, 417, 420, 433, 434], "cuda_visible_devic": 7, "id": [7, 25, 65, 78, 99, 101, 106, 107, 118, 121, 124, 127, 128, 135, 147, 148, 151, 156, 157, 158, 159, 160, 286, 327, 345, 382, 386, 428, 437], "slurm_step_gpu": 7, "black": [7, 121, 433], "onscreen": 7, "101": 7, "lgl": 7, "libegl": 7, "x11": [7, 434], "xlib": 7, "libx11": 7, "xorg": 7, "attributeerror": [7, 29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242], "nonetyp": 7, "glgeterror": 7, "this_dir": 7, "pwd": 7, "ln": 7, "libglut": 7, "sketch": [8, 417], "n_training_step": 8, "datapoint": [8, 77, 437], "n_data_per_train": 8, "no_grad": [8, 29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 202, 242, 247, 263, 264, 267, 268, 359, 360, 361, 362, 422, 423, 424, 434], "loss_fn": [8, 423, 427, 428, 439], "zero_grad": [8, 29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242, 285, 417, 420, 422, 423, 424, 427, 430, 433, 434, 435], "backpropag": [8, 119, 120, 133, 134, 147, 324, 325, 326, 332, 333, 334, 335, 336, 337, 340, 341, 342, 344, 345, 346, 347, 350, 357, 427, 434, 435], "differenti": [8, 77, 119, 120, 202, 327, 349, 359, 360, 361, 362, 423, 426, 427, 433, 434, 435], "denomin": 8, "artifact": 8, "numer": [8, 63, 128, 239, 266, 294, 295, 301, 306, 307, 310, 311, 312, 313, 314, 395, 422, 437, 440], "misconcept": 8, "freed": 8, "appear": [8, 11, 30, 53, 78, 79, 99, 106, 107, 124, 416, 435, 437], "compuat": 8, "fix": [8, 35, 147, 225, 325, 327, 343, 347, 421, 430, 435, 440], "retain_graph": [8, 119, 120], "discuss": [8, 9, 428, 433, 434], "inplac": [8, 29, 36, 41, 44, 49, 55, 57, 59, 60, 64, 66, 71, 78, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242, 313, 420], "forward": [8, 14, 15, 16, 19, 20, 21, 22, 23, 29, 36, 41, 49, 56, 59, 60, 61, 62, 63, 66, 71, 72, 73, 101, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 177, 179, 180, 182, 183, 184, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 206, 209, 210, 211, 212, 213, 215, 218, 219, 222, 223, 224, 225, 226, 227, 229, 230, 231, 235, 236, 238, 239, 242, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 275, 276, 277, 278, 280, 281, 284, 286, 287, 289, 290, 292, 296, 297, 305, 307, 309, 310, 312, 313, 314, 317, 318, 320, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 357, 359, 360, 361, 362, 363, 413, 416, 423, 435, 439], "submodul": [8, 29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 167, 225, 242, 265, 269, 321, 342], "param": [8, 29, 36, 41, 49, 59, 60, 65, 66, 71, 118, 121, 124, 128, 135, 141, 147, 148, 151, 156, 157, 158, 180, 187, 190, 191, 195, 202, 204, 212, 213, 219, 223, 229, 231, 233, 240, 242, 257, 259, 275, 276, 277, 293, 305, 310, 313, 316, 342, 352, 356, 359, 360, 361, 362, 363, 420, 424, 430, 433, 434, 435, 436, 439], "grad": [8, 29, 36, 41, 49, 59, 60, 66, 71, 118, 119, 120, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242, 314, 420, 422], "whose": [8, 17, 18, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 59, 60, 65, 66, 67, 68, 71, 76, 79, 80, 81, 82, 83, 118, 121, 124, 128, 135, 147, 148, 149, 150, 151, 156, 157, 158, 187, 210, 225, 231, 232, 235, 237, 242, 287, 313], "factor": [8, 11, 26, 36, 49, 215, 242, 244, 245, 262, 266, 279, 286, 294, 295, 325, 331, 334, 335, 337, 348, 365, 420, 421, 424, 426, 430, 433, 434, 437, 440], "fit": [8, 60, 206, 225, 243, 416, 417, 420], "brax": [8, 118, 119, 120, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 213, 425, 440], "jax": [8, 119, 120, 133, 134, 243], "improperli": 8, "underli": [8, 118, 121, 124, 125, 128, 135, 147, 148, 151, 156, 157, 158, 342, 423, 425, 427, 429, 435], "tedeiou": 8, "priorit": [8, 56, 72, 98, 99, 327, 328, 329, 331, 332, 333, 340, 345, 347, 349, 350, 420, 421, 428, 439], "amount": [8, 147, 286, 421, 437], "costli": [8, 435], "constitut": [8, 421, 434, 435], "profil": 8, "frequent": [8, 44, 437], "program": [8, 332, 340, 424, 440], "functorch": [8, 10], "incl": 8, "suit": [8, 123, 422, 425, 439, 440], "mujoco_instal": 8, "valueerror": [8, 29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242], "bad": 8, "fds_to_keep": 8, "new_shap": 8, "permut": [8, 105, 208, 228, 424, 439, 440], "idea": [9, 345, 417, 423, 426, 433, 434], "introductori": 9, "intro": [9, 422, 423], "dai": [9, 439], "2022": [9, 10, 247, 439], "spin": [9, 122, 123], "hug": 9, "syllabu": 9, "lectur": 9, "awesom": 9, "curat": 9, "succinct": [9, 426], "summari": [9, 206, 239, 240, 420, 421, 422, 423], "reddit": 9, "reagent": 9, "orient": [9, 440], "baselines3": 9, "tf": 9, "bandit": [9, 144], "tensorflow": [9, 273, 274], "kera": 9, "acm": 9, "dopamin": 9, "prototyp": [9, 424, 430], "salina": 9, "tianshou": 9, "eleg": 9, "rlpyt": 9, "rllib": 9, "industri": [9, 439], "grade": 9, "factori": [9, 14, 15, 16, 19, 20, 21, 22, 23, 61, 63, 72, 73, 74, 76, 420], "cherri": 9, "jaxrl": 9, "mbrl": [9, 141, 415], "rlmeta": 9, "light": 9, "elegantrl": 9, "cloud": 9, "mtrl": 9, "baselin": 9, "689": 10, "_torchrl": 10, "_zn8pybind116detail11type_casterin2at6tensoreve4loadens_6handleeb": 10, "colab": [10, 422, 423, 433, 434], "notebook": [10, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 440], "24": [10, 107, 127, 142, 143, 285, 309, 379, 433], "pip3": [10, 420, 422, 423, 433, 434], "url": [10, 130], "org": [10, 14, 15, 26, 56, 98, 99, 119, 120, 122, 123, 130, 133, 134, 139, 140, 142, 143, 144, 153, 161, 162, 183, 210, 235, 245, 251, 252, 253, 254, 255, 256, 259, 260, 261, 267, 272, 273, 274, 279, 280, 281, 285, 286, 287, 289, 290, 296, 307, 324, 325, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 343, 344, 346, 347, 348, 349, 359, 364, 372, 412, 431, 436], "whl": 10, "u": [10, 263, 264, 267, 268, 435], "upgrad": 10, "lib_version_her": 10, "pyav": 11, "conveni": [11, 183, 422, 433, 434, 435, 437], "power": [11, 421], "knob": 11, "dispos": 11, "clarifi": 11, "behind": [11, 219, 413], "ultim": [11, 266, 294, 295], "ffmpeg": 11, "whatev": [11, 416, 420], "fed": [11, 434, 437], "feed": [11, 210, 237, 342, 415, 420, 433, 434, 437], "suppos": [11, 147, 392, 417, 440], "snippet": [11, 210, 235, 420], "gave": 11, "extrem": [11, 147, 156, 324, 326, 341, 344, 346], "blurri": [11, 424], "stitch": 11, "exp_nam": [11, 379, 380, 381, 384, 385, 386, 407, 421, 429, 430], "my_exp": [11, 429], "pixels_onli": [11, 122, 123, 127, 129, 130, 153, 420, 421, 429, 430, 439, 440], "my_video": [11, 429], "record_env": [11, 429, 430], "codec": 11, "h264": 11, "crf": 11, "preset": 11, "qualiti": [11, 304, 415], "allow_non": 12, "unwrap": [12, 194, 232, 387], "seealso": 12, "policy_weight": [13, 14, 15, 16, 19, 20, 21, 22, 23], "worker_id": [13, 14, 15, 16, 19, 20, 21, 22, 23], "kwarg": [13, 14, 15, 16, 19, 20, 22, 23, 28, 29, 30, 31, 33, 34, 36, 37, 41, 42, 43, 46, 48, 49, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 73, 78, 79, 80, 81, 82, 83, 90, 92, 93, 94, 95, 97, 98, 99, 101, 106, 107, 108, 110, 112, 114, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 170, 171, 177, 178, 180, 187, 210, 212, 221, 225, 230, 231, 232, 234, 236, 237, 239, 241, 242, 244, 246, 248, 249, 250, 252, 253, 254, 255, 258, 261, 262, 265, 266, 269, 270, 271, 272, 275, 276, 277, 282, 286, 295, 297, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 352, 357, 358, 359, 360, 361, 362, 363, 377, 379, 383, 384, 386, 390, 397, 402, 403, 408, 409, 410, 416, 422, 424, 434], "upload": [13, 14, 15, 16, 18, 19, 20, 21, 22, 23], "typeerror": [13, 14, 15, 16, 19, 20, 21, 22, 23], "weight_update_send": [13, 14, 15, 16, 19, 20, 21, 22, 23], "weight_update_receiv": [13, 14, 15, 16, 19, 20, 21, 22, 23], "overwritten": [13, 14, 15, 16, 19, 20, 21, 22, 23, 44, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 197], "localweightsupdaterbas": [13, 14, 15, 16, 18, 19, 20, 21, 22, 23], "remoteweightsupdaterbas": [13, 14, 15, 16, 17, 19, 20, 21, 22, 23], "create_env_fn": [14, 15, 16, 19, 20, 21, 22, 23, 125, 147, 156, 420, 439], "policy_factori": [14, 15, 16, 19, 20, 21, 22, 23], "device_typ": [14, 16, 19, 27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 67, 68, 76, 79, 80, 81, 82, 83, 210, 235, 237, 249, 250, 251, 252, 253, 254, 255, 261, 270, 275, 276, 278, 279, 284, 287, 313, 394, 405], "env_devic": [14, 15, 16, 19, 20, 21, 22, 23, 421], "create_env_kwarg": [14, 15, 16, 19, 23, 125, 142, 147, 156, 230, 420, 440], "dict": [14, 15, 16, 19, 20, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 41, 42, 43, 44, 45, 46, 49, 51, 52, 55, 56, 57, 59, 60, 61, 62, 63, 64, 66, 67, 68, 71, 72, 73, 76, 78, 79, 80, 81, 82, 83, 90, 99, 101, 106, 107, 118, 121, 124, 125, 126, 127, 128, 129, 135, 139, 140, 142, 145, 146, 147, 148, 149, 150, 151, 156, 157, 158, 159, 160, 161, 162, 164, 200, 202, 225, 230, 232, 238, 239, 240, 242, 243, 249, 250, 251, 252, 253, 254, 255, 256, 261, 270, 284, 310, 314, 327, 347, 349, 379, 383, 384, 392, 397, 402, 403, 409, 410, 411, 415, 420, 421, 422, 437, 439, 440], "collector_class": [14, 15, 20, 21, 22, 23], "datacollectorbas": [14, 17, 18, 21, 310, 314, 399, 402, 403, 407, 413], "postproc": [14, 15, 16, 19, 20, 21, 22, 23, 49, 215, 421, 437], "explorationtyp": [14, 15, 16, 19, 20, 21, 22, 23, 310, 342, 392, 415, 420, 421, 422, 423, 426, 433, 439], "interactiontyp": [14, 16, 19, 20, 21, 22, 23, 165, 172, 310, 314, 392], "preemptive_threshold": [14, 15, 19], "num_thread": [14, 15, 19, 55, 57, 64, 78, 128, 147, 156], "num_sub_thread": [14, 15, 19, 147, 156], "str": [14, 15, 16, 19, 20, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 88, 90, 92, 98, 99, 101, 112, 118, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 133, 135, 139, 140, 142, 144, 145, 146, 147, 148, 149, 150, 151, 153, 156, 157, 158, 159, 160, 161, 162, 163, 164, 167, 172, 175, 179, 183, 194, 200, 201, 202, 210, 214, 223, 224, 227, 229, 230, 232, 233, 235, 237, 238, 239, 242, 243, 246, 258, 259, 265, 269, 271, 272, 275, 276, 277, 287, 288, 296, 301, 306, 307, 310, 311, 312, 313, 314, 317, 318, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 353, 357, 358, 359, 360, 361, 362, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 411, 421, 422, 424], "set_trunc": [14, 15, 16, 19, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "use_buff": [14, 15, 16, 147, 156], "extend_buff": [14, 15, 16], "replay_buffer_chunk": 14, "trust_polici": [14, 15, 16, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "compile_polici": [14, 15, 16], "cudagraph_polici": [14, 15, 16], "no_cuda_sync": [14, 15, 16], "datacollector": [14, 15, 16, 19, 23, 49, 344, 422, 428, 437], "recept": 14, "safe": [14, 15, 27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 55, 57, 64, 67, 68, 76, 78, 79, 80, 81, 82, 83, 99, 106, 244, 286, 293, 294, 301, 306, 307, 310, 311, 312, 313, 314, 316, 415, 439], "sota": [14, 15, 141, 198, 346, 388, 402, 420, 421, 439], "guard": [14, 15], "doc": [14, 15, 74, 130, 133, 134, 144, 153, 386, 416, 421, 433, 434, 437], "env_mak": [14, 15, 16, 23, 61, 118, 407, 440], "2000": [14, 15, 16, 49, 77, 131, 285, 379, 437], "50": [14, 15, 16, 23, 27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 58, 65, 67, 68, 76, 79, 80, 81, 82, 83, 106, 107, 139, 140, 242, 423, 437], "shutdown": [14, 15, 16, 19, 23, 151, 157, 180, 420, 421, 437, 439], "del": [14, 15, 16, 420, 421, 422, 432, 433, 437, 439, 440], "int64": [14, 15, 16, 25, 27, 28, 32, 37, 38, 44, 45, 46, 47, 48, 53, 54, 55, 57, 58, 59, 64, 65, 69, 72, 74, 77, 78, 88, 98, 106, 118, 121, 124, 128, 135, 138, 139, 140, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 176, 180, 194, 208, 215, 223, 259, 286, 288, 306, 307, 310, 311, 312, 415, 435], "subclass": [14, 15, 16, 19, 20, 21, 22, 23, 29, 30, 33, 36, 41, 59, 60, 66, 71, 79, 101, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 163, 178, 179, 231, 238, 244, 245, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 277, 280, 281, 284, 286, 289, 290, 292, 297, 305, 307, 309, 312, 313, 314, 315, 317, 320, 342, 344, 421, 423, 428, 435, 437], "tensordictmodulebas": [14, 15, 16, 19, 20, 21, 22, 23, 36, 59, 71, 182, 297, 306, 309, 311, 423], "undergon": [14, 15, 16, 19, 20, 21, 22, 23, 77], "env_obs_kei": [14, 15, 16, 19, 20, 21, 22, 23], "mustn": [14, 15, 16, 19, 20, 21, 22, 23], "pickl": [14, 15, 16, 19, 20, 21, 22, 23, 29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 239, 240, 242], "exclus": [14, 15, 16, 19, 20, 21, 22, 23, 63, 72, 73, 84, 85, 99, 106, 107, 180, 195, 197, 263, 265, 267, 269, 273, 274, 306, 307, 311, 312, 348, 349, 350, 359, 360, 361, 362, 363, 386, 411, 415], "lifespan": [14, 15, 16, 19, 20, 21, 22, 421], "divis": [14, 15, 16, 19, 20, 21, 22, 29, 99, 106, 107, 240, 245, 434], "endless": [14, 15, 16, 19, 20, 21, 22], "fill": [14, 15, 16, 19, 20, 21, 22, 23, 27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 67, 68, 76, 79, 80, 81, 82, 83, 128, 179, 225, 238, 269, 423, 435, 436], "sit": [14, 15, 16, 19, 20, 21, 22, 23, 399, 421], "cast": [14, 15, 16, 19, 20, 21, 22, 23, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 59, 60, 64, 66, 67, 68, 71, 76, 78, 79, 80, 81, 82, 83, 88, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 133, 134, 135, 142, 143, 145, 146, 147, 148, 151, 153, 156, 157, 158, 159, 160, 176, 177, 179, 180, 182, 183, 184, 187, 188, 190, 191, 193, 194, 195, 196, 198, 201, 202, 209, 210, 211, 212, 213, 215, 218, 219, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 235, 236, 237, 238, 239, 240, 242, 313, 433, 440], "deriv": [14, 15, 20, 21, 22, 23, 75, 257, 397], "span": [14, 15, 16, 19, 20, 21, 22, 23, 99, 106, 107], "n_step": [14, 15, 16, 19, 20, 21, 22, 23, 49, 242, 309, 421, 422, 433, 434], "mainli": [14, 15, 16, 19, 20, 21, 22, 23, 65, 386, 415, 433, 434, 435], "round": [14, 15, 16, 19, 20, 21, 22, 23, 121], "closest": [14, 15, 16, 19, 20, 21, 22, 23], "boolm": [14, 15, 19], "update_policy_weight_": [14, 15, 19], "ratio": [14, 15, 19, 65, 420, 422], "finish": [14, 15, 16, 19, 23, 128, 215, 440], "rest": [14, 15, 19, 36, 247, 415, 422, 423, 433, 435, 439], "earli": [14, 15, 19, 49, 128, 223, 439], "safeti": [14, 15, 19, 141, 147, 156, 240], "harm": [14, 15, 19, 147, 156], "add_truncated_kei": [14, 15, 16, 19, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 232], "trust": [14, 15, 16, 118, 121, 124, 128, 135, 139, 140, 147, 148, 151, 156, 157, 158, 188, 269], "cudagraphmodul": [14, 15, 16, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "behaviour": [14, 15, 16, 36, 59, 71, 423, 424, 439], "bypass": [14, 15, 16, 426], "isaaclab": [14, 15, 16, 129], "maniskil": [14, 15, 16], "crash": [14, 15, 16, 215], "unus": [14, 15, 171], "worker_collector": [14, 15], "worker_weight_updater_receiv": [14, 15], "sender": [14, 15], "server_collector": [14, 15], "server_weight_updater_send": [14, 15], "ordereddict": [14, 15, 16, 19, 23, 29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 200, 230, 232, 239, 240, 242, 327, 347], "worker0": [14, 15, 19], "state_dict0": [14, 15, 19], "worker1": [14, 15, 19], "state_dict1": [14, 15, 19], "reset_idx": [14, 15, 19], "static_se": [14, 15, 16, 19, 23, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 232], "increment": [14, 15, 16, 19, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 206, 341], "env_fn": [14, 15, 16, 19, 125, 409, 410], "env_fn_parallel": [14, 15, 16, 19], "300": [14, 15, 16, 19, 106, 107, 254, 255], "out_se": [14, 15, 16, 19, 440], "shut": [14, 15, 16, 19, 151, 157], "irrevers": [14, 15, 19], "return_same_td": 16, "interruptor": 16, "cautious": [16, 344], "whole": [16, 29, 33, 34, 36, 41, 42, 49, 59, 60, 66, 68, 71, 77, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 200, 230, 232, 242, 310, 327, 347, 388, 420, 422], "_interruptor": 16, "outsid": [16, 191, 230, 416, 429, 433, 434, 435], "start_collect": 16, "stop_collect": 16, "preeptiv": 16, "async_shutdown": [16, 23, 61], "init": [16, 23, 29, 36, 41, 49, 59, 60, 61, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 187, 231, 239, 242, 275, 276, 277, 386, 421, 422], "chunk": [16, 426], "policy_state_dict": 16, "env_state_dict": 16, "raycollector": [16, 61, 413], "decentr": [17, 275], "_get_server_weight": [17, 18], "_get_local_weight": 17, "_maybe_map_weight": [17, 18], "get_weights_from_polici": 17, "extract": [17, 33, 34, 42, 68, 179, 200, 229, 233, 308, 420, 422, 439], "get_weights_from_serv": 17, "weight_map_fn": 17, "cache_policy_weight": 17, "update_weight": [17, 18, 399], "register_collector": [17, 18], "_sync_weights_with_work": 18, "all_worker_id": 18, "registr": [18, 421], "exporationtyp": [20, 21, 22], "collector_kwarg": [20, 21, 22, 23], "num_workers_per_collector": [20, 21, 22, 23], "slurm_kwarg": [20, 21, 22], "update_after_each_batch": [20, 21, 22, 23], "max_weight_update_interv": [20, 21, 22, 23], "tcp_port": [20, 21, 22, 24], "respect": [20, 21, 22, 29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 181, 187, 190, 193, 204, 210, 211, 220, 225, 231, 232, 235, 237, 242, 263, 267, 275, 290, 313, 318, 324, 326, 341, 344, 346, 359, 361, 362, 393, 416, 422, 423, 433, 434], "subnod": [20, 21, 22, 23], "readi": [20, 22, 23, 414, 421, 422, 424, 426, 429, 437, 439], "fashion": [20, 22, 23, 55, 57, 64, 78, 107], "distributed_back": [20, 21], "ucc": [20, 21], "submitit_delai": [20, 24], "former": [20, 21, 22, 25, 29, 36, 41, 56, 59, 60, 63, 66, 71, 72, 73, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 244, 245, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 277, 280, 281, 284, 286, 289, 290, 292, 297, 305, 307, 309, 312, 317, 320, 420], "whilst": [20, 21, 22], "homonym": [20, 21, 22, 435], "visit": [20, 21, 22, 78], "facebookincub": [20, 21, 22], "tcp": [20, 21, 22, 24], "port": [20, 21, 22, 24, 159], "10003": [20, 21, 22, 24], "focus": [20, 22, 23, 420, 427], "liter": [21, 78, 118, 300], "update_interv": 21, "frequenc": [21, 285, 420], "visible_devic": 22, "tensorpipe_opt": 22, "experiment": [22, 25, 53, 310, 314], "tensorpiperpcbackendopt": 22, "ray_init_config": [23, 61], "remote_config": [23, 56, 61, 62, 63, 72, 73, 101], "num_collector": [23, 409, 410, 420, 421], "coordin": [23, 189], "autodetect": 23, "num_cpu": [23, 61], "num_gpu": [23, 61], "1024": [23, 61, 256, 437], "equat": [23, 59, 78, 128, 239, 240, 286, 323, 326, 348, 422, 425, 435], "exce": [23, 437], "indefinit": [23, 87], "rayreplaybuff": [23, 413], "enfoc": 23, "distributed_collector": [23, 61], "10000": [23, 147, 245, 397, 423], "add_collector": 23, "local_polici": 23, "remote_collector": 23, "stop_remote_collector": 23, "num_job": 24, "tcpport": 24, "submitit_main_conf": 24, "slurm_cpus_per_task": 24, "slurm_gpus_per_nod": 24, "slurm_partit": 24, "timeout_min": 24, "submitit_collection_conf": 24, "jump": [24, 425], "host": [24, 29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 187, 210, 225, 231, 232, 235, 237, 242, 313], "satellit": 24, "rendezv": 24, "hang": 24, "forev": 24, "default_config": [24, 251, 256, 284, 305], "default_slurm_conf_main": 24, "default_slurm_conf": 24, "rollout_tensordict": 25, "nestedkei": [25, 27, 28, 30, 31, 32, 33, 34, 36, 37, 38, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 57, 59, 64, 67, 68, 69, 71, 76, 77, 78, 79, 80, 81, 82, 83, 99, 106, 107, 118, 121, 124, 128, 135, 147, 148, 151, 152, 156, 157, 158, 169, 174, 175, 176, 177, 181, 182, 183, 184, 185, 186, 189, 190, 191, 192, 193, 194, 195, 197, 199, 200, 201, 202, 203, 206, 207, 208, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 239, 240, 242, 244, 248, 259, 262, 286, 288, 305, 309, 314, 329, 357, 377, 379], "as_nest": 25, "x": [25, 36, 49, 59, 60, 63, 65, 66, 71, 107, 135, 200, 202, 228, 233, 243, 245, 247, 248, 250, 259, 261, 263, 264, 265, 267, 268, 269, 270, 272, 275, 276, 297, 306, 310, 311, 320, 323, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 397, 420, 424, 433, 435, 437, 439], "durat": [25, 434], "meta": [25, 55, 57, 64, 76, 78, 126, 130, 324, 326, 341, 344, 346, 417, 422, 433, 434, 437], "aren": [25, 224, 423], "eventu": [25, 287, 423, 435], "recov": [25, 106, 107, 315, 332, 340, 432], "layout": 25, "to_padded_tensor": 25, "nested_tensor": [25, 127, 129], "stride": [25, 29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242, 249, 250, 252, 253, 261, 275, 421, 433, 439], "jag": 25, "focu": [25, 420, 421, 422, 424, 426, 427, 428, 433], "team": [25, 433, 434, 439], "cat": [25, 44, 318, 325, 327, 328, 340, 345, 347, 349, 350, 433, 437, 439], "arang": [25, 27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 67, 68, 76, 79, 80, 81, 82, 83, 99, 106, 107, 176, 259, 273, 274, 306, 388, 415, 437], "obs_": 25, "trajectory_id": 25, "int32": [25, 29, 30, 44, 73, 79, 106, 133, 134, 145, 146, 158, 168, 309], "data_split": 25, "got": [25, 428], "init_kl_coef": 26, "horizon": [26, 139, 140, 161, 162, 246, 272, 422], "kl": [26, 35, 65, 202, 336, 341], "describ": [26, 55, 57, 64, 76, 78, 152, 184, 293, 294, 329, 382, 416, 420, 422, 433, 434, 435, 440], "ziegler": 26, "et": [26, 246], "relax": [26, 377], "penalti": [26, 65, 338, 341], "strai": [26, 65], "greater": [26, 99, 106, 107, 203, 204, 265, 269, 327, 420, 421], "increas": [26, 90, 183, 226, 247, 286, 433, 434], "pull": [26, 44, 78, 437], "toward": [26, 237], "aggress": 26, "kl_coef": [26, 35, 65], "arxiv": [26, 56, 98, 99, 119, 120, 122, 123, 133, 134, 139, 140, 142, 143, 153, 161, 162, 183, 210, 235, 245, 251, 252, 253, 254, 255, 256, 259, 260, 261, 267, 272, 279, 280, 281, 285, 286, 287, 289, 290, 296, 307, 324, 325, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 343, 344, 347, 348, 349, 359, 364, 372, 436], "pdf": [26, 183, 251, 252, 253, 254, 255, 259, 285, 286, 307, 327, 334, 338, 345, 348, 349, 359, 364, 372], "1909": 26, "08593": 26, "lm": 26, "blob": 26, "master": [26, 433, 434], "lm_human_prefer": 26, "train_polici": 26, "kl_valu": 26, "coef": [26, 202], "newest": 26, "int8": [27, 124, 138, 149, 150, 181], "encod": [27, 28, 29, 30, 31, 32, 33, 34, 37, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 56, 67, 68, 76, 79, 80, 81, 82, 83, 119, 120, 124, 127, 128, 129, 130, 133, 134, 142, 143, 145, 146, 153, 159, 160, 176, 192, 281, 282, 285, 289, 323, 421, 422, 423, 426, 435, 437], "null": [27, 30, 31, 33, 34, 36, 42, 43, 51, 52, 56, 67, 68, 72, 76, 79, 80, 81, 82, 83, 98, 99, 181, 200], "denot": [27, 434], "clariti": [27, 44], "assert_is_in": [27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 67, 68, 76, 79, 80, 81, 82, 83], "cardin": [27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 67, 68, 76, 78, 79, 80, 81, 82, 83, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 259, 288, 306, 307, 312, 422], "outcom": [27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 67, 68, 76, 79, 80, 81, 82, 83, 257, 273, 274, 293, 342, 433], "cartesian": [27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 67, 68, 76, 79, 80, 81, 82, 83], "clear_device_": [27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 67, 68, 76, 79, 80, 81, 82, 83], "is_in": [27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 67, 68, 76, 79, 80, 81, 82, 83, 440], "np": [27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 67, 68, 76, 79, 80, 81, 82, 83, 128, 317, 377, 424, 433, 435], "ndarrai": [27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 67, 68, 76, 79, 80, 81, 82, 83, 128, 286, 317, 377, 424, 433], "ignore_devic": [27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 67, 68, 76, 79, 80, 81, 82, 83], "arrai": [27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 56, 65, 67, 68, 76, 79, 80, 81, 82, 83, 98, 118, 121, 124, 128, 129, 135, 147, 148, 151, 156, 157, 158, 194, 263, 264, 267, 268, 420, 433], "use_mask": [27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 67, 68, 76, 79, 80, 81, 82, 83, 149, 150], "erase_memoize_cach": [27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 67, 68, 76, 79, 80, 81, 82, 83], "memoiz": [27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 67, 68, 76, 79, 80, 81, 82, 83, 128], "memoize_encod": [27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 67, 68, 76, 79, 80, 81, 82, 83], "compliant": [27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 67, 68, 76, 79, 80, 81, 82, 83], "singleton": [27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 67, 68, 76, 79, 80, 81, 82, 83, 249, 250, 270, 291, 292, 413, 416], "start_dim": [27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 67, 68, 76, 79, 80, 81, 82, 83], "end_dim": [27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 67, 68, 76, 79, 80, 81, 82, 83], "classmethod": [27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 61, 62, 63, 64, 67, 68, 71, 72, 73, 76, 78, 79, 80, 81, 82, 83, 101, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 200, 235, 243, 250, 251, 284], "implements_for_spec": [27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 67, 68, 76, 79, 80, 81, 82, 83], "torch_funct": [27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 67, 68, 76, 79, 80, 81, 82, 83], "index_typ": [27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 45, 46, 51, 52, 67, 68, 76, 79, 80, 81, 82, 83], "tensor_to_index": [27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 67, 68, 76, 79, 80, 81, 82, 83], "exanpl": [27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 67, 68, 76, 79, 80, 81, 82, 83], "one_hot": [27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 67, 68, 76, 79, 80, 81, 82, 83, 259, 274, 288], "categ": [27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 67, 68, 76, 79, 80, 81, 82, 83, 310], "to_categorical_spec": [27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 67, 68, 76, 79, 80, 81, 82, 83], "idx_one_hot": [27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 67, 68, 76, 79, 80, 81, 82, 83], "idx_categ": [27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 67, 68, 76, 79, 80, 81, 82, 83], "to_categor": [27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 67, 68, 76, 79, 80, 81, 82, 83], "make_neg_dim": [27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 67, 68, 76, 79, 80, 81, 82, 83], "convert": [27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 59, 60, 64, 66, 67, 68, 70, 71, 76, 77, 78, 79, 80, 81, 82, 83, 118, 119, 120, 121, 124, 127, 128, 129, 130, 133, 134, 135, 142, 143, 145, 146, 147, 148, 151, 153, 156, 157, 158, 159, 160, 187, 190, 193, 210, 225, 231, 232, 235, 237, 239, 240, 242, 313, 323, 342, 420, 421, 422, 435, 437], "shortcut": [27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 67, 68, 76, 79, 80, 81, 82, 83, 435, 440], "ndimens": [27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 67, 68, 76, 79, 80, 81, 82, 83, 420], "violat": [27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 67, 68, 76, 79, 80, 81, 82, 83, 415], "proxi": [27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 55, 57, 64, 67, 68, 76, 78, 79, 80, 81, 82, 83, 274, 282, 310, 416], "project": [27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 60, 67, 68, 76, 79, 80, 81, 82, 83, 192, 244, 267, 286, 301, 306, 307, 310, 311, 312, 313, 314, 386, 415, 439, 440], "uniformli": [27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 67, 68, 76, 79, 80, 81, 82, 83, 100, 342, 440], "normal": [27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 62, 67, 68, 76, 79, 80, 81, 82, 83, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 206, 239, 240, 244, 245, 249, 250, 266, 270, 273, 274, 294, 295, 310, 314, 326, 327, 341, 344, 392, 395, 411, 415, 417, 423, 426, 434, 440], "drawn": [27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 67, 68, 76, 79, 80, 81, 82, 83, 225, 262, 310, 314, 422, 433, 434], "set_provisional_n": [27, 28, 32, 37, 45, 46], "temporarili": [27, 28, 32, 37, 45, 46, 90, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 163, 428, 437], "dest": [27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 67, 68, 71, 76, 79, 80, 81, 82, 83, 210, 235, 237, 313], "to_numpi": [27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 67, 68, 76, 79, 80, 81, 82, 83, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "transformed_in": [27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 67, 68, 76, 79, 80, 81, 82, 83, 232, 293, 411], "check_spec_encod": [27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 67, 68, 76, 79, 80, 81, 82, 83], "to_one_hot": [27, 28, 32, 37, 45, 46, 47, 48, 53, 54], "hot": [27, 28, 32, 37, 45, 46, 47, 48, 53, 54, 119, 120, 127, 129, 130, 133, 134, 139, 140, 142, 143, 145, 146, 149, 150, 153, 159, 160, 161, 162, 176, 177, 192, 259, 282, 283, 288, 306, 307, 311, 312, 324, 325, 327, 328, 329, 331, 332, 333, 334, 335, 340, 342, 344, 345, 346, 347, 349, 350, 357, 423], "categ_sampl": [27, 28, 32, 37, 47, 48, 53, 54], "onehot_sampl": [27, 28, 32, 37, 47, 48], "to_one_hot_spec": [27, 28, 32, 37, 45, 46, 47, 48, 53, 54], "categoricalbox": [27, 28, 32, 37, 47, 48, 53, 54, 148], "type_check": [27, 28, 30, 31, 32, 33, 34, 37, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 67, 68, 76, 79, 80, 81, 82, 83], "update_mask": [27, 28, 32, 37, 45, 46, 47, 48, 53, 54], "disabl": [27, 28, 29, 32, 36, 37, 41, 45, 46, 47, 48, 49, 53, 54, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 232, 242, 266, 295, 377, 420, 433, 434], "unmask": [27, 28, 32, 37, 45, 46, 47, 48, 53, 54], "ts": [27, 28, 32, 37, 45, 46, 47, 48, 53, 54], "num_bit": 29, "convert_to_binari": 29, "decim": 29, "1001": 29, "bit": [29, 200, 422, 423, 425, 433, 434, 437], "heavysid": 29, "binary_to_decim": 29, "add_modul": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242], "child": [29, 36, 41, 44, 49, 59, 60, 66, 71, 78, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242, 421], "fn": [29, 36, 41, 49, 58, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 200, 233, 242, 409, 410], "recurs": [29, 33, 34, 36, 41, 42, 49, 59, 60, 66, 68, 71, 84, 85, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242, 342, 424], "init_weight": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242], "m": [29, 36, 41, 45, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 192, 242, 248, 314, 421, 435], "fill_": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242, 421, 423], "net": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242, 253, 255, 258, 261, 276, 324, 325, 327, 333, 340, 344, 345, 346, 347, 407, 421, 435, 436, 439], "in_featur": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 187, 210, 225, 231, 232, 235, 237, 242, 249, 250, 252, 253, 254, 255, 261, 270, 275, 276, 278, 279, 302, 313, 321, 329, 331, 424, 426, 427], "out_featur": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 141, 147, 148, 151, 156, 157, 158, 187, 210, 225, 231, 232, 235, 237, 242, 246, 249, 250, 252, 253, 254, 255, 260, 261, 265, 269, 270, 272, 275, 276, 278, 279, 302, 306, 313, 321, 329, 331, 415, 420, 423, 424, 426, 427, 430, 439], "bia": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 187, 200, 210, 225, 230, 231, 232, 235, 237, 242, 245, 249, 250, 252, 253, 254, 255, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 276, 278, 279, 286, 313, 320, 322, 323, 327, 342, 347, 416, 420, 421, 422, 423, 434], "requires_grad": [29, 36, 41, 49, 59, 60, 66, 71, 118, 119, 120, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 202, 230, 232, 242, 285, 314, 327, 347], "bfloat16": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242], "datatyp": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242, 437], "member": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242, 342, 379], "xdoctest": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 187, 200, 210, 225, 230, 231, 232, 235, 237, 242, 313, 327, 342, 347], "buf": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242], "20l": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242, 342], "1l": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242, 342], "5l": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242, 342], "__call__": [29, 36, 41, 49, 58, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242, 314, 417], "doubl": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 187, 190, 191, 193, 210, 225, 231, 232, 235, 237, 242, 313, 329, 334, 339, 345, 348, 357, 420, 421, 422, 423, 440], "eval": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 232, 239, 242, 247, 415, 420, 421, 422], "evalu": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 129, 135, 139, 140, 147, 148, 151, 156, 157, 158, 232, 242, 247, 257, 273, 274, 282, 295, 345, 402, 403, 421, 422, 430], "dropout": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 232, 242, 247, 248, 263, 265, 267, 269, 270, 415, 423], "batchnorm": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 232, 242, 245], "comparison": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 232, 242, 342, 420, 421], "extra_repr": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242], "recip": [29, 36, 41, 58, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 244, 245, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 277, 280, 281, 284, 286, 289, 290, 292, 297, 305, 307, 309, 312, 317, 320], "get_buff": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242], "get_submodul": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242], "qualifi": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242], "referenc": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242], "resolv": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242], "someth": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 138, 147, 148, 151, 156, 157, 158, 242, 414, 421, 422, 435, 440], "get_extra_st": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 239, 240, 242], "set_extra_st": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 239, 240, 242], "picklabl": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 239, 240, 242], "get_paramet": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242], "net_b": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242], "net_c": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242], "conv": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242, 249, 250, 421], "conv2d": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242, 250, 252, 253, 261, 275], "kernel_s": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242, 249, 250, 252, 253, 261, 275, 280, 421, 439], "diagram": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242], "degre": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 188, 242], "named_modul": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242], "half": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 187, 210, 225, 231, 232, 235, 237, 242, 313, 420], "ipu": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242], "strict": [29, 36, 41, 49, 55, 57, 59, 60, 64, 66, 71, 78, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 230, 232, 242, 327, 347, 424], "descend": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 230, 232, 242, 327, 347], "get_swap_module_params_on_convers": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 230, 232, 242, 327, 347], "persist": [29, 36, 39, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 174, 200, 230, 232, 242, 327, 347], "preserv": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 230, 232, 242, 313, 327, 347], "missing_kei": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 230, 232, 242, 327, 347], "unexpected_kei": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 230, 232, 242, 327, 347], "namedtupl": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 230, 232, 242, 327, 347], "l": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242, 263, 267, 358, 422, 435], "idx": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242], "mtia": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242], "named_buff": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242], "remove_dupl": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242, 342], "prepend": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242, 342, 424], "running_var": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242], "named_children": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242], "conv4": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242], "conv5": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242], "memo": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242], "named_paramet": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 202, 242, 342], "register_backward_hook": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242], "removablehandl": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242], "favor": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 239, 242, 422], "register_full_backward_hook": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242], "register_buff": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242], "running_mean": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242], "alongsid": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242, 429], "num_featur": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242, 245], "register_forward_hook": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242, 259, 288], "with_kwarg": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242], "always_cal": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242], "register_module_forward_hook": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242], "regardless": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242, 326, 341, 344], "register_forward_pre_hook": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242], "invok": [29, 36, 41, 49, 59, 60, 62, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242], "And": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242, 427], "forward_pr": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242], "register_module_forward_pre_hook": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242], "ordinarili": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242], "grad_input": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242], "grad_output": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242], "technic": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242, 421, 423, 424, 426], "caller": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242], "register_module_full_backward_hook": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242], "register_full_backward_pre_hook": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242], "backward_pr": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242], "register_module_full_backward_pre_hook": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242], "register_load_state_dict_post_hook": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242], "incompatible_kei": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242], "thrown": [29, 36, 41, 49, 59, 60, 66, 67, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242, 437], "register_load_state_dict_pre_hook": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242], "local_metadata": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242], "error_msg": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242], "noqa": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242], "b950": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242], "register_modul": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242, 417], "alia": [29, 36, 41, 49, 56, 59, 60, 61, 62, 63, 66, 71, 72, 73, 78, 92, 93, 94, 95, 101, 108, 110, 114, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 343, 344, 345, 346, 347, 349, 350, 357, 363], "register_paramet": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242], "register_state_dict_post_hook": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242], "register_state_dict_pre_hook": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242], "keep_var": [29, 36, 41, 49, 55, 57, 59, 60, 64, 66, 71, 78, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 200, 230, 232, 242, 327, 347], "requires_grad_": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242, 424], "autograd": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 200, 230, 232, 242, 327, 347], "freez": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 239, 240, 242], "finetun": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242], "gan": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242], "set_submodul": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242], "share_memori": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 125, 128, 135, 147, 148, 151, 156, 157, 158, 242, 420], "share_memory_": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242, 439], "destin": [29, 36, 41, 49, 55, 57, 59, 60, 64, 66, 71, 78, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 174, 182, 190, 191, 193, 200, 230, 232, 235, 239, 242, 327, 347, 379], "averag": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 200, 230, 232, 239, 240, 242, 286, 327, 335, 336, 347, 395, 420, 422], "shallow": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 200, 230, 232, 242, 327, 347, 423], "detach": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 200, 230, 232, 242, 327, 338, 342, 347, 349, 359, 360, 361, 362, 420], "non_block": [29, 36, 41, 49, 55, 57, 59, 60, 64, 66, 71, 78, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 187, 210, 225, 231, 232, 235, 237, 242, 313, 423], "memory_format": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 187, 210, 225, 231, 232, 235, 237, 242, 313], "channels_last": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 187, 210, 225, 231, 232, 235, 237, 242, 313], "unchang": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 187, 192, 210, 225, 231, 232, 235, 237, 242, 262, 313, 379, 394, 420, 437], "tri": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 187, 210, 225, 231, 232, 235, 237, 242, 313, 429], "pin": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 187, 210, 225, 231, 232, 235, 237, 242, 313], "4d": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 187, 210, 225, 231, 232, 235, 237, 242, 313], "ignore_w": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 187, 210, 225, 231, 232, 235, 237, 242, 313], "1913": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 187, 210, 225, 231, 232, 235, 237, 242, 313], "3420": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 187, 210, 225, 231, 232, 235, 237, 242, 313], "5113": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 187, 210, 225, 231, 232, 235, 237, 242, 313], "2325": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 187, 210, 225, 231, 232, 235, 237, 242, 313], "torch_doctest_cuda1": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 187, 210, 225, 231, 232, 235, 237, 242, 313], "gpu1": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 187, 210, 225, 231, 232, 235, 237, 242, 313], "1914": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 187, 210, 225, 231, 232, 235, 237, 242, 313], "5112": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 187, 210, 225, 231, 232, 235, 237, 242, 313], "2324": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 187, 210, 225, 231, 232, 235, 237, 242, 313], "float16": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 187, 210, 225, 231, 232, 235, 237, 242, 264, 268, 313], "cdoubl": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 187, 210, 225, 231, 232, 235, 237, 242, 313], "3741": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 187, 210, 225, 231, 232, 235, 237, 242, 313], "j": [29, 36, 41, 49, 56, 59, 60, 66, 71, 98, 99, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 187, 210, 225, 231, 232, 235, 237, 242, 313, 417, 427], "2382": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 187, 210, 225, 231, 232, 235, 237, 242, 313], "5593": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 187, 210, 225, 231, 232, 235, 237, 242, 313], "4443": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 187, 210, 225, 231, 232, 235, 237, 242, 313], "complex128": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 187, 210, 225, 231, 232, 235, 237, 242, 313], "6122": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 187, 210, 225, 231, 232, 235, 237, 242, 313], "1150": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 187, 210, 225, 231, 232, 235, 237, 242, 313], "to_empti": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242], "dst_type": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242], "xpu": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242], "set_to_non": [29, 36, 41, 49, 59, 60, 66, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 242], "upper": [30, 104, 205], "continuousbox": [30, 33, 79, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 168, 200, 203, 225, 233], "provision": 32, "descript": [33, 161, 179, 421, 422], "akin": 33, "unnam": 33, "compositespec": [33, 413, 435, 440], "constraint": [33, 141, 294, 422, 433, 434], "data_cl": 33, "tensorclass": [33, 55, 57, 64, 78, 88, 92, 94, 114], "pixels_spec": 33, "observation_vector_spec": 33, "composite_spec": 33, "observation_vector": [33, 184, 420], "_nodefault": [33, 34, 42, 68], "is_empti": [33, 34, 42, 68, 435], "include_nest": [33, 34, 42, 68], "leaves_onli": [33, 34, 42, 68], "is_leaf": [33, 34, 42, 68], "_compositespecitemsview": [33, 34, 42, 68], "_compositespeckeysview": [33, 34, 42, 68], "reflect": [33, 34, 42, 68, 129, 149, 150, 174, 200, 238, 342, 400, 421, 422, 423, 434], "lock_": [33, 34, 42, 68], "propag": [33, 34, 42, 68, 324, 326, 327, 328, 332, 333, 340, 341, 344, 345, 346, 347, 349, 350, 359, 360, 361, 362, 422, 433, 434], "succeed": [33, 34, 42, 68, 200, 233], "pop": [33, 34, 42, 68], "keyerror": [33, 34, 42, 68, 232], "selected_kei": [33, 34, 42, 68, 219, 420], "unlock_": [33, 34, 42, 68], "_compositespecvaluesview": [33, 34, 42, 68], "multipli": [35, 247, 263, 267, 324, 325, 326, 327, 333, 341, 343, 344, 345, 347, 395, 420, 433], "calcul": [35, 65, 215, 263, 324, 326, 331, 341, 344, 346, 349, 359], "reassign": 36, "reward2go": [36, 413], "reward_key_out": 36, "time_dim": [36, 359, 361, 362, 364, 365, 368, 369, 370, 371, 372, 373, 374, 375, 376], "unrol": [36, 335, 364, 365, 368, 369, 370, 371, 372, 373, 374, 375, 376], "discount": [36, 49, 125, 215, 242, 325, 331, 334, 335, 337, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 416, 421, 422, 433, 434], "lastrewardtotraj": 36, "last_reward_to_traj": 36, "new_tensordict": 36, "is_tdmodule_compat": [36, 59, 71], "reset_out_kei": [36, 59, 71], "orign": [36, 59, 71], "mod": [36, 59, 71, 202, 248, 265, 269, 309, 314, 317, 423, 424, 430], "select_out_kei": [36, 59, 71, 324, 325, 327, 328, 332, 333, 340, 344, 345, 347, 349, 350, 424], "reset_parameters_recurs": [36, 59, 71, 342], "relu": [36, 59, 71, 141, 246, 256, 272, 323], "old_param": [36, 59, 71], "bork": [36, 59, 71], "dork": [36, 59, 71], "reset_paramet": [36, 59, 71, 277], "from_modul": [36, 59, 71, 259, 313, 316, 439], "rid": [36, 59, 71], "out_keys_sourc": [36, 59, 71], "rubric": [36, 59, 71, 206, 316], "revert": [36, 59, 71, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 163, 426, 437], "seq": [36, 59, 71, 248, 263, 265, 267, 269, 309, 423, 424, 430, 432], "z": [36, 59, 71, 264], "shift_kei": [38, 40, 50, 69], "is_full_kei": [38, 40, 50, 69], "is_ful": [38, 40, 50, 69], "tempfil": [38, 55, 56, 57, 61, 62, 63, 64, 69, 72, 73, 77, 78, 92, 101, 407, 420, 421, 423, 424, 428, 433, 436, 437], "register_save_hook": [38, 56, 61, 62, 63, 69, 72, 73, 101], "temporarydirectori": [38, 55, 56, 57, 61, 62, 63, 64, 69, 72, 73, 77, 78, 101, 420, 421, 423, 424, 428, 433, 436, 437], "tmpdir": [38, 56, 61, 62, 63, 69, 72, 73, 77, 101, 420, 421, 424, 433], "rb_load": [38, 56, 61, 62, 63, 72, 73, 101], "register_load_hook": [38, 56, 61, 62, 63, 72, 73, 101], "filesystem": [39, 437], "ted2nest": [40, 413], "stackedcomposit": [42, 413], "tensordictmap": [44, 413], "observation_kei": [44, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "excluded_kei": [44, 195], "consolid": [44, 71, 85, 94], "lazili": [44, 93, 276, 435], "from_tensordict_pair": [44, 71], "querymodul": [44, 71], "get_keys_from_env": 44, "cattensor": [44, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 420, 432, 435, 440], "unsqueezetransform": [44, 183, 435, 437], "oracl": 44, "obs_kei": 44, "state_kei": [44, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "reset_st": 44, "rollout0": 44, "rollout1": 44, "rollout1b": 44, "collaps": 44, "max_length": [44, 55, 57, 58, 74, 77, 78, 88, 229, 424, 430], "valid_path": [44, 78], "assert_clos": 44, "subtre": [44, 78], "intersect": [44, 243], "Or": [44, 154, 155, 275], "rollout_from_path": [44, 78], "plot": [44, 78, 420, 422, 423, 433, 434, 435], "_nestedkei": [44, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "return_nod": 44, "diverg": [44, 202, 310, 314, 336, 341], "endpoint": 44, "noth": [44, 135, 420, 422], "r0": [44, 420], "123": [44, 78], "392": [44, 78], "989": [44, 78], "809": [44, 78], "847": [44, 78], "r1": 44, "235": 44, "td_root": [44, 78], "node_data": [44, 78], "node_id": [44, 78], "nontensordata": [44, 51, 121, 145, 146, 200, 229, 233, 377], "_parent": [44, 78], "nontensorstack": [44, 51, 93, 118, 121, 135, 200, 229, 233], "weakref": [44, 78], "0x716eeb78fbf0": 44, "0x": 44, "4341220243998689835": 44, "6745467818783115365": 44, "win": [44, 78], "to_str": [44, 78], "node_format_fn": [44, 78], "indent": [44, 78], "rollouts_data": [44, 78], "456": [44, 78], "359": [44, 78], "3094": [44, 78], "75": [44, 78, 106], "948": [44, 78], "68": [44, 78, 106], "9045": [44, 78], "rollout_data": [44, 78], "nvec": [45, 47], "remove_singleton": 45, "ax": [45, 278, 279, 433], "Not": [45, 46, 63, 119, 120, 133, 230, 265, 269], "neither": [45, 46, 47, 48, 159, 435], "use_regist": [47, 53], "mone_hot": [47, 48], "boxlist": [47, 48], "gamma": [49, 215, 242, 272, 324, 325, 327, 328, 329, 331, 333, 334, 335, 337, 340, 342, 344, 345, 346, 347, 349, 350, 351, 352, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 407, 416, 420, 421, 422, 433, 434, 439], "sutton": [49, 416, 433, 434], "1988": 49, "tempor": [49, 265, 269, 272, 360, 361, 366, 367], "44": [49, 106], "ahead": [49, 242, 440], "bias": [49, 263, 264, 267, 268, 320, 416, 420], "mitig": [49, 183], "multisteptransform": [49, 413], "99": [49, 215, 239, 272, 337, 352, 358, 365, 407, 420, 421, 422, 424, 427, 430, 433, 434, 439], "nontermin": 49, "original_reward": 49, "newli": [49, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "OR": 49, "row": [50, 70, 133, 134, 203], "example_data": 51, "conform": 51, "templat": [51, 380], "randomli": [51, 105, 158, 205, 206, 225, 262, 310, 314, 426, 433, 434, 435, 437], "unidimension": 53, "action_valu": [53, 258, 259, 288, 306, 307, 311, 312, 327, 333, 342, 357, 415, 423, 424, 426, 430], "keepdim": 53, "chosen_action_valu": [53, 287, 288, 296, 311, 312, 357, 415, 423, 426], "priori": 53, "uniqu": [53, 78, 106, 107, 135, 139, 140, 183, 194, 224, 225, 226, 230, 309, 386, 428, 437], "tensor_spec": [53, 152, 175, 177, 332, 333, 344, 346], "one_hot_sampl": [53, 54], "chosen_data": [55, 88], "rewarddata": [55, 88, 413], "rejected_data": [55, 88], "copy_exist": [55, 57, 64, 78], "return_earli": [55, 57, 64, 78], "share_non_tensor": [55, 57, 64, 78], "memmap": [55, 57, 64, 78, 92, 147, 156, 239, 379, 381, 394], "dataclass": [55, 57, 64, 76, 78, 342], "from_dataset": [55, 57, 88], "dataset_nam": [55, 57, 65, 77, 88, 144], "550": [55, 57, 65, 77, 88, 106, 107], "root_dir": [55, 57, 77, 88], "from_disk": [55, 57, 77, 88], "carperai": [55, 57, 65, 77], "openai_summarize_comparison": [55, 57, 77], "load_from_disk": [55, 57, 77, 88], "load_dataset": [55, 57, 77, 88], "attention_mask": [55, 57, 58, 64, 65, 74, 77, 88], "92534": 55, "input_id": [55, 57, 58, 64, 65, 74, 77, 88, 135], "end_scor": [55, 64, 65, 88], "sub_data": [55, 57], "from_tensordict": [55, 57, 64, 78], "non_tensordict": [55, 57, 64, 78], "getattr": [55, 57, 64, 78], "load_memmap": [55, 57, 64, 78], "load_": [55, 57, 64, 78], "load_memmap_": [55, 57, 64, 78], "fromkei": [55, 57, 64, 78], "saved_td": [55, 57, 64, 78], "td_load": [55, 57, 64, 78], "fake": [55, 57, 64, 78, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 420, 421, 424], "_subclass": [55, 57, 64, 78], "faketensormod": [55, 57, 64, 78], "faketensor": [55, 57, 64, 78], "from_flatten": [55, 57, 64, 78], "attemptedli": [55, 57, 64, 78], "existsok": [55, 57, 64, 78, 92], "mimic": [55, 57, 64, 78, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "cross": [55, 57, 64, 78, 246], "tensordictfutur": [55, 57, 64, 78], "serialis": [55, 57, 64, 78], "deepli": [55, 57, 64, 78], "memmap_": [55, 57, 64, 78, 239], "memmap_lik": [55, 57, 64, 78], "contentless": [55, 57, 64, 78], "1_000_000": [55, 56, 57, 61, 62, 63, 64, 72, 73, 78, 101, 106, 420, 423, 433], "alloc": [55, 57, 64, 78, 94, 257, 273, 274, 420], "memmap_refresh_": [55, 57, 64, 78], "refresh": [55, 57, 64, 78, 430, 433, 434], "saved_path": [55, 57, 64, 78], "setattr": [55, 57, 64, 78], "tent": [55, 57, 64, 77, 78], "to_tensordict": [55, 57, 64, 78, 423], "retain_non": [55, 57, 64, 78], "discrard": [55, 57, 64, 78], "alpha": [56, 72, 98, 99, 249, 250, 252, 253, 254, 255, 261, 275, 325, 327, 333, 343, 345, 347, 349, 420, 437, 439], "ep": [56, 72, 98, 99, 206, 239, 240, 245, 286, 326, 348, 395, 416, 420, 421, 423, 424, 427, 430], "1e": [56, 72, 98, 99, 206, 239, 240, 245, 257, 260, 293, 420, 421, 422, 434], "08": [56, 72, 98, 99], "pin_memori": [56, 63, 72, 73, 209, 420, 439], "schaul": [56, 98, 99], "quan": [56, 98, 99], "antonogl": [56, 98, 99], "silver": [56, 98, 99], "2015": [56, 98, 99], "ab": [56, 98, 99, 119, 120, 122, 123, 133, 134, 139, 140, 142, 143, 153, 161, 162, 182, 210, 235, 239, 245, 251, 256, 260, 261, 267, 272, 279, 280, 281, 287, 289, 290, 296, 324, 325, 329, 330, 331, 332, 335, 336, 337, 339, 340, 343, 344, 347, 436], "1511": [56, 98, 99, 261], "05952": [56, 98, 99], "expon": [56, 72, 98, 99], "\u03b1": [56, 72, 98, 99], "delta": [56, 72, 98, 99, 263, 267, 293, 310, 314, 413, 416, 433], "1_000": [56, 63, 72, 73, 433, 437], "mini": [56, 63, 72, 73, 434], "incompat": [56, 63, 72, 73, 346, 437], "drop_last": [56, 63, 72, 73, 105, 107], "notion": [56, 63, 72, 73, 285], "caution": [56, 63, 72, 73, 105, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 163, 440], "codebas": [56, 63, 72, 73, 435], "return_info": [56, 61, 62, 63, 72, 73, 98, 99, 101, 437], "tensordictprioritizedreplaybuff": [56, 413, 439], "simplifi": [56, 171, 426, 435, 437], "_weight": [56, 72, 98, 99], "update_prior": [56, 98, 99, 394, 417, 421, 437, 439], "36278465": 56, "invert": [56, 61, 62, 63, 72, 73, 101, 322, 422], "as_remot": [56, 61, 62, 63, 72, 73, 101], "cl": [56, 61, 62, 63, 72, 73, 101, 421], "quantiti": [56, 61, 62, 63, 72, 73, 101], "reserv": [56, 61, 62, 63, 72, 73, 101, 417], "default_remote_class_config": [56, 61, 62, 63, 72, 73, 101], "tqdm": [56, 61, 62, 63, 72, 73, 101, 397, 420, 422, 423, 433, 434, 435], "randomsampl": [56, 61, 62, 63, 72, 73, 101, 420, 433], "td_error": [56, 61, 62, 63, 72, 73, 101, 327, 328, 329, 331, 332, 333, 334, 340, 342, 345, 347, 349, 350, 357, 420, 437, 439], "update_tensordict_prior": [56, 61, 62, 63, 72, 73, 101, 420, 437, 439], "insert_transform": [56, 61, 62, 63, 72, 73, 101, 178, 232], "insert": [56, 61, 62, 63, 72, 73, 91, 101, 102, 112, 113, 116, 117, 178, 183, 187, 222, 232, 234], "set_sampl": [56, 61, 62, 63, 72, 73, 101], "set_storag": [56, 61, 62, 63, 72, 73, 101], "set_writ": [56, 61, 62, 63, 72, 73, 101], "write_count": [56, 61, 62, 63, 72, 73, 101], "prompt_rindex": [57, 58, 65], "promptdatatldr": 57, "116722": 57, "prompt": [58, 65], "return_tensordict": [58, 74], "text": [58, 65, 74, 135, 263, 264, 267, 268, 286, 422], "tensodict": [58, 74], "valid_sampl": 58, "eough": 58, "toknen": 58, "meet": 58, "criterion": 58, "autotoken": [58, 74, 77], "from_pretrain": [58, 65, 74, 135], "gpt2": [58, 65, 74, 77, 135, 251, 256, 284], "pad_token": [58, 74], "eos_token": 58, "enough": [58, 437], "inde": [58, 192, 422, 424, 435], "index_kei": [59, 71], "hash_kei": 59, "_hash": 59, "hash_modul": [59, 66, 71], "siphash": [59, 60, 71, 135], "hash_to_int": 59, "hashtoint": 59, "query_modul": [59, 71], "key1": [59, 71, 184, 222, 388, 396, 439], "key2": [59, 71, 184, 222, 388, 396, 439], "write_hash": 59, "n_compon": 60, "dtype_cast": 60, "as_tensor": [60, 66, 424], "init_method": 60, "emb": [60, 423], "sklearn": [60, 144], "byte": [60, 66, 177, 179, 180, 182, 183, 184, 187, 188, 191, 194, 195, 196, 198, 201, 202, 209, 211, 212, 213, 215, 218, 219, 222, 223, 224, 225, 226, 227, 229, 230, 231, 235, 236, 238, 239, 242], "builtin": [60, 66], "pythonhashse": [60, 66], "todo": 60, "optiona": 61, "transform_factori": [61, 63, 72, 73], "asyncio": [61, 118], "ray_buff": 61, "object_store_memori": 61, "600": [61, 65], "await": 61, "sleep": [61, 125, 440], "invoc": 62, "friendli": [62, 420], "include_info": [62, 72, 73], "storagecheckpointerbas": [63, 108], "roundrobinwrit": 63, "_pytre": [63, 437], "tree_map": [63, 437], "assert0": [63, 437], "ref_model": 65, "reward_model": [65, 319], "max_new_token": 65, "score_clip": 65, "kl_schedul": 65, "klcontrollerbas": 65, "num_step": [65, 424], "causal": 65, "sentenc": 65, "frozen": [65, 202, 239, 240], "gpt2rewardmodel": 65, "get_dataload": [65, 413], "promptdata": [65, 413], "gpt2lmheadmodel": 65, "dl": 65, "block_siz": [65, 88], "tensorclass_typ": [65, 88], "openai_summarize_tldr": 65, "config_class": 65, "model_path": 65, "rollout_from_model": 65, "rollout_from_data": 65, "reward_kl": [65, 202], "reward_raw": 65, "sample_log_prob": [65, 202, 302, 303, 304, 310, 314, 316, 344], "create_rollout_td": 65, "log_prob": [65, 257, 273, 274, 282, 285, 295, 314, 327, 416], "log_ratio": 65, "replic": [65, 416], "rindex": 65, "eo": 65, "generation_config": 65, "generationconfig": 65, "ti": [65, 368, 369, 370, 371, 373, 374, 375, 376, 421], "log_probs_gen": 65, "logprobs_of_label": 65, "hash_a": 66, "4669941682990263259": 66, "3778166555168484291": 66, "9122128731510687521": 66, "hash_b": 66, "heterogen": [67, 68, 93, 118, 121, 124, 128, 135, 138, 147, 148, 149, 150, 151, 156, 157, 158, 163, 275, 276, 420, 421], "220": 69, "resembl": 71, "tensormap": 71, "collat": [71, 101], "subtyp": 71, "embedding_storag": 71, "tensor_dict_storag": 71, "new_index": 71, "key3": 71, "retrieve_valu": 71, "storage_constructor": 71, "write_fn": 71, "tensordictstorag": 71, "thumb": [71, 147, 422], "lazydynamicstorag": 71, "fixedstorag": 71, "randomprojectionhash": 71, "priority_kei": [72, 73, 98, 327, 329, 332, 333, 334, 340, 342, 345, 347, 349, 350, 357, 437, 439], "reduct": [72, 98, 99, 112, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 338, 340, 341, 343, 344, 345, 346, 347, 349, 350], "prioritizedreplaybuff": [72, 413, 439], "min": [72, 98, 99, 112, 286, 325, 326, 327, 333, 343, 345, 347, 421, 422], "median": [72, 98, 99, 112, 128, 133, 134, 176, 310, 314], "huggingfac": [74, 308], "co": [74, 194, 435], "pad_trunc": 74, "am": 74, "me": 74, "reassur": 74, "ok": 74, "_encode_memo_dict": 76, "primarili": [76, 211, 426], "educ": 76, "guess": 76, "knowledg": [76, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 427, 429], "tokenizer_fn": 77, "tensordicttoken": [77, 413], "pre_tokenization_hook": 77, "valid_s": 77, "tokenizer_class": 77, "tokenizer_model_nam": 77, "tokein": 77, "elementwis": 77, "vocabulari": [77, 135, 229], "loader": [77, 422], "185068": 77, "dataset_to_tensordict": 77, "data_dir": 77, "batch_dim": [77, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 411], "valid_mask_kei": 77, "batch_dimens": 77, "filder": 77, "from_dict": 77, "data_memmap": 77, "ref": 78, "branching_act": 78, "prev_act": 78, "edg": [78, 424], "travers": 78, "breadth": 78, "bf": 78, "fully_expand": 78, "get_vertex_by_hash": 78, "get_vertex_by_id": 78, "is_termin": 78, "make_nod": 78, "node_observ": 78, "bag": 78, "num_children": 78, "num_vertic": 78, "count_repeat": 78, "recustruct": 78, "scope": [78, 118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 424, 440], "plotli": 78, "make_label": 78, "visual": [78, 210, 235, 237, 379, 422, 433, 435], "notimplementederror": [78, 420], "unsupport": 78, "selected_act": 78, "mctsforest": [78, 135, 413], "key_typ": 78, "recurse_through_entri": 85, "recurse_through_stack": 85, "infinit": [88, 139, 140, 161, 162, 240, 428, 437], "block": [88, 91, 117, 415, 420, 423, 424, 427, 428, 433, 437], "pairwisedataset": [88, 413], "256": [88, 139, 140, 200, 256, 421, 422, 424, 433, 434], "checkpoint_fil": 90, "h5": 90, "h5_kwarg": 90, "iff": 90, "suffix": [90, 392], "h5py": 90, "create_dataset": 90, "consequ": [90, 267, 428], "immut": [91, 118, 121, 124, 128, 135, 147, 151, 156, 157, 213, 232], "piec": [91, 102, 113, 116, 117, 420, 421, 422, 429, 433, 434, 435, 437], "scratch_dir": [92, 420, 421, 423, 428, 433, 436, 437], "sent": [92, 94, 114, 239], "mistak": [92, 94, 114], "overewritten": 92, "tensorstoragecheckpoint": 92, "pathlib": [92, 397, 424], "main_ckpt_dir": 92, "rb_memmap": 92, "10_000_000": 92, "myclass": [92, 94, 114], "foo": [92, 94, 114, 305, 437, 440], "bar": [92, 94, 114, 305, 390, 391, 392, 397, 417, 421], "attach": [92, 93, 94, 95, 108, 110, 114, 421], "entiti": [92, 93, 94, 95, 108, 110, 114], "lazystacktensordict": 93, "heterougen": 93, "linearli": 93, "densifi": 93, "unlimit": [93, 95], "st": 93, "expans": [94, 342], "zero_": [94, 114, 168], "liststoag": 96, "max_capac": [98, 99, 420, 437], "max_priority_within_buff": [98, 99], "data_0": 98, "data_1": 98, "smoothen": 98, "tdrb": 98, "pack": [98, 263, 267, 422, 425, 440], "nd": [98, 99], "1d": [98, 99, 106, 107, 112], "sum_tre": [98, 99], "min_tre": [98, 99], "slice_len": [99, 106, 107, 379], "end_kei": [99, 106, 107], "cache_valu": [99, 106, 107], "closer": [99, 439], "readili": [99, 106, 107, 314], "conjunct": [99, 106, 107, 421], "Will": [99, 106, 142, 379], "buffer0": [99, 106], "immutablewrit": [99, 106], "buffer1": [99, 106], "other_sampl": [99, 106], "shorter": [99, 106, 107], "short": [99, 106, 107, 118, 119, 120, 121, 124, 128, 133, 134, 135, 147, 148, 151, 156, 157, 158, 163, 267, 268, 421, 422, 425, 426, 434, 437], "Be": [99, 106, 107], "fewer": [99, 106], "tolist": 99, "120110917137936e": 99, "06": [99, 257, 293], "storageensembl": [101, 104], "samplerensembl": 101, "writerensembl": [101, 110], "sample_from_al": [101, 104], "num_buffer_sampl": [101, 104], "ensembl": [101, 104, 110, 111, 117, 313, 345], "forbidden": 101, "0x13a2ef430": 101, "0x13a2f9310": 101, "interpol": [101, 214, 421, 424], "interpolationmod": 101, "bilinear": [101, 214], "0x13a2f9220": 101, "0x13a2f9f70": 101, "0x13a2d9b50": 101, "0x13a2f95b0": 101, "0x128648260": 101, "roundrobin": [102, 113], "buffer_id": [104, 110], "shuffl": [105, 107, 434], "incomplet": [105, 107], "fresh": 105, "haven": [105, 436], "draw": [105, 262], "use_gpu": [106, 107], "slicesamplerwithoutreplac": [106, 437], "acceler": [106, 107, 128, 433, 434], "reconstruct": [106, 107, 336, 420, 440], "ep_1": [106, 107], "ep_2": [106, 107], "73": 106, "74": 106, "76": 106, "77": 106, "42": [106, 270, 285, 324, 325, 327, 328, 332, 340, 347], "43": 106, "45": 106, "67": [106, 432], "69": 106, "70": 106, "71": 106, "27": [106, 107, 119, 120, 147, 156], "28": [106, 107, 275], "31": [106, 133, 134], "80": [106, 119, 120], "82": 106, "83": 106, "84": [106, 214, 423, 424], "78": 106, "79": 106, "320": [106, 107, 122, 123], "700": [106, 107], "dataid": [106, 107], "available_dataset": [106, 107], "counter": [107, 230, 309, 390, 417, 424], "23": [107, 243], "request": [107, 180, 211], "51": 107, "__len__": 108, "rank_kei": 112, "rank": [112, 246], "samplerwithoutreplac": [112, 422, 434, 437], "get_insert_index": 112, "themselv": [118, 247, 421], "dens": [118, 273, 274], "maybe_dens": 118, "min_get": [118, 151, 157], "maker": [118, 411, 421], "sort": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 184, 286], "another_act": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "discretebox": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "mutabl": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "action_spec_unbatch": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 422, 434], "had": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 426, 428], "all_act": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "any_don": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "loc": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 202, 206, 217, 239, 240, 266, 294, 295, 302, 303, 304, 310, 314, 316, 324, 325, 327, 340, 344, 345, 346, 347, 401, 411, 415, 420, 421, 422, 423, 426, 434, 439], "_callabletransform": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "auto_specs_": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "action_spac": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 194, 259, 288, 306, 307, 311, 312, 324, 325, 327, 328, 329, 331, 332, 333, 334, 335, 340, 342, 344, 345, 346, 347, 349, 350, 357, 423, 424, 426, 430], "check_dtyp": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 163], "discrep": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 163, 324, 326, 328, 329, 341, 344, 346, 357], "broken": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 163], "rng": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 163, 435], "done_keys_group": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "another_don": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "done_spec_unbatch": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "empty_cach": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 232], "fake_tensordict": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 421, 424], "envnam": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "full_action_spec_unbatch": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 433, 434], "full_done_spec_unbatch": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "full_observation_spec_unbatch": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "full_reward_spec_unbatch": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "pipeline_st": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "full_state_spec_unbatch": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "input_spec_unbatch": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "is_spec_lock": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "maybe_reset": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "speak": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 188, 314, 420], "observation_spec_unbatch": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "output_spec_unbatch": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "register_gym": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 425], "entry_point": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "info_kei": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "reward_threshold": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "nondeterminist": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "max_episode_step": [118, 121, 124, 127, 128, 129, 135, 147, 148, 151, 156, 157, 158], "order_enforc": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "autoreset": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "disable_env_check": [118, 121, 124, 127, 128, 135, 142, 143, 147, 148, 151, 156, 157, 158], "apply_api_compat": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "nasium": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 171], "dmcontrolenv": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 379, 413, 420, 425, 432, 440], "dmc": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "cheetah": [118, 121, 122, 123, 124, 128, 135, 147, 148, 151, 156, 157, 158, 379, 420], "removeemptyspec": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "threshold": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 262, 325, 326, 422], "learnt": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 407], "checker": [118, 121, 124, 127, 128, 135, 142, 143, 147, 148, 151, 156, 157, 158], "stepapicompat": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "deem": [118, 121, 124, 128, 135, 139, 140, 147, 148, 151, 156, 157, 158, 161, 162], "task_nam": [118, 121, 122, 124, 128, 135, 147, 148, 151, 156, 157, 158], "envgym": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "0855": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "0215": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "0881": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "0412": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "1101": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "0080": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "0254": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "0424": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "veloc": [118, 121, 122, 123, 124, 128, 135, 147, 148, 151, 156, 157, 158, 183, 433, 434, 435, 440], "9609e": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "9776e": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "04": [118, 121, 124, 128, 132, 135, 147, 148, 151, 156, 157, 158, 227, 240], "6347e": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "3842e": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "5338e": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "3064e": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "0381e": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "6656e": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "05": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 227, 245, 435], "0204e": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "0833": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "0275": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "0612": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "0770": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "1256": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "0082": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "0186": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "0476": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "2221": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "2256": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "5930": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "6937": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "5865": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "5479": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "0187": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "6825": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "5224": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "0018": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "1005": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "0335": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 188], "0268": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "0133": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "0627": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "0074": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "0488": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "0353": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "0075": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "0069": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "0098": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "0058": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "0033": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "0157": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "0004": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 227], "0381": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "0452": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "11355747": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "04257728": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "00408397": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "04155852": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "0389733": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "01409826": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "0978704": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "08808327": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "03970837": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "00535434": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "02353762": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "05116226": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "02788907": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "06848346": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "05154399": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "0371798": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "05128025": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "dydact": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "ant": [118, 119, 120, 121, 124, 128, 131, 135, 147, 148, 151, 156, 157, 158, 436], "gym_env": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 439], "reset_kei": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 183, 218, 224, 225, 226, 433], "multitask": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "multiag": [118, 121, 124, 128, 135, 138, 147, 148, 149, 150, 151, 156, 157, 158, 175, 276, 287, 296, 326, 341, 344, 357], "another_reward": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "reward_spec_unbatch": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "auto_cast_to_devic": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 434], "soon": [118, 121, 124, 128, 135, 147, 148, 149, 150, 151, 156, 157, 158], "__sort": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "as__": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "categorical_action_encod": [118, 119, 120, 121, 124, 127, 128, 129, 130, 133, 134, 135, 142, 143, 147, 148, 151, 153, 156, 157, 158, 171, 424], "argmaxmodul": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "argmax": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 259, 288, 307, 312, 424, 426], "n_act": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 202, 324, 325, 327, 328, 329, 331, 332, 333, 340, 344, 345, 346, 347, 349, 350, 427], "ourselv": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 422, 440], "emul": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "epoch": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 397, 422, 433, 434], "input_td": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "rollout_td": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "state_spec_unbatch": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "prevail": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 175, 184, 218], "next_tensordict": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 174, 180, 184, 195, 196, 197, 209, 212, 213, 219, 222, 235, 239], "precomput": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158], "_stepmdp": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 174], "exclude_act": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 174], "reset_data": [118, 121, 124, 128, 135, 147, 148, 151, 156, 157, 158, 440], "googl": [119, 120, 139, 140, 145, 146, 245, 422, 423, 433, 434], "convers": [119, 120, 133, 134, 171, 416], "2106": [119, 120, 330, 349], "13281": [119, 120], "frame_skip": [119, 120, 122, 123, 127, 128, 129, 130, 133, 134, 136, 137, 142, 143, 153, 198, 390, 392, 400, 417, 420, 421, 422, 439], "allow_done_after_reset": [119, 120, 122, 123, 124, 127, 129, 130, 133, 134, 142, 143, 145, 146, 153, 159, 160], "toler": [119, 120, 122, 123, 127, 129, 130, 133, 134, 142, 143, 145, 146, 153, 159, 160, 257, 293], "is_avail": [119, 120, 420, 421, 422, 423, 433, 434, 436], "87": [119, 120], "acrobot": [119, 120, 122, 123, 440], "advant": [119, 120, 133, 134], "timer": [119, 120, 128, 133, 134], "timeit": [119, 120, 133, 134, 424], "310": [119, 120], "ms": [119, 120, 133, 134], "268": [119, 120], "433": [119, 120], "213": [119, 120], "8605": [119, 120], "pipelineenv": 120, "get_environ": 120, "san": 121, "fen": [121, 145, 146], "pgn": 121, "legal": 121, "board": [121, 158], "include_san": 121, "algebra": [121, 435], "notat": 121, "include_fen": 121, "forsyth": 121, "edward": 121, "include_pgn": 121, "portabl": [121, 429], "include_legal_mov": 121, "include_hash": 121, "mask_act": 121, "subset": [121, 435, 436], "29275": 121, "rnbqkbnr": [121, 145, 146], "pppppppp": [121, 145, 146], "kqkq": [121, 145, 146], "legal_mov": 121, "219": 121, "5p2": 121, "ppppp1pp": 121, "event": [121, 273, 274, 282, 368, 369, 370, 371, 373, 374, 375, 376, 437], "white": 121, "f4": 121, "96": 121, "kq": 121, "5n2": 121, "rnbqkb1r": 121, "nf3": 121, "na6": 121, "c4": 121, "f6": 121, "h4": 121, "rb8": 121, "na3": 121, "ra": 121, "get_legal_mov": 121, "uci": 121, "dm_control": [122, 123, 420, 432, 440], "2006": [122, 123, 325, 331], "12983": [122, 123], "240": [122, 123, 439], "swingup": [122, 123, 440], "swingup_spars": [122, 123], "ball_in_cup": [122, 123], "catch": [122, 123, 424], "balance_spars": [122, 123], "three_pol": [122, 123], "two_pol": [122, 123], "finger": [122, 123], "turn_easi": [122, 123], "turn_hard": [122, 123], "fish": [122, 123], "upright": [122, 123, 421], "swim": [122, 123], "hopper": [122, 123], "hop": [122, 123], "humanoid": [122, 123, 147, 156, 432], "walk": [122, 123, 147, 156, 421, 432], "run_pure_st": [122, 123], "bring_bal": [122, 123], "bring_peg": [122, 123], "insert_bal": [122, 123], "insert_peg": [122, 123], "point_mass": [122, 123], "reacher": [122, 123], "swimmer": [122, 123], "swimmer6": [122, 123], "swimmer15": [122, 123], "walker": [122, 123], "dog": [122, 123], "trot": [122, 123], "humanoid_cmu": [122, 123], "lqr": [122, 123], "lqr_2_1": [122, 123], "lqr_6_2": [122, 123], "quadrup": [122, 123], "escap": [122, 123], "stacker": [122, 123], "stack_2": [122, 123], "stack_4": [122, 123], "deviceless": 124, "run_type_check": [124, 141], "hint": 124, "counterenv": 124, "creator": [125, 402, 403, 409, 410, 411], "substitut": [125, 224, 239, 426], "vecnorm": [125, 240, 411], "env_creat": [125, 420], "test_env1": 125, "_td": [125, 335], "observation_count": [125, 440], "test_env2": 125, "ps": 125, "p1": 125, "p2": 125, "9934": 125, "make_vari": [125, 230], "variant": [125, 230, 247, 415], "trajcount": 125, "env_creator_pendulum": 125, "env_creator_cartpol": 125, "env_str": 126, "device_map": 126, "registri": [127, 159], "asyncvectorenv": 127, "pixel_observ": [127, 129, 130, 153], "pixelobservationwrapp": [127, 129, 130, 153], "adventur": [127, 129], "airraid": [127, 129, 440], "alien": [127, 129], "time_limit": 127, "timelimit": [127, 139, 140, 161, 162], "default_info_dict_read": [127, 128, 129, 147], "reader": [127, 128, 129, 147, 421], "set_info_dict_read": [127, 128, 129, 147, 425], "info_dict": [127, 128, 129, 147], "gymlikeenv": [127, 129, 413], "auto_register_info_dict": [127, 128, 129, 147], "multibinari": [127, 129], "multidiscret": [127, 129], "rag": [127, 129], "gym_conversion_exampl": [127, 129], "info_dict_read": [128, 147], "ignore_priv": 128, "baseinfodictread": 128, "tensordictprim": [128, 147, 248, 265, 269, 321, 415, 423], "succe": [128, 147], "underscor": 128, "primer": [128, 225, 248, 265, 269, 321, 423], "halfcheetah": [128, 147, 176, 214, 420, 439], "reward_ctrl": [128, 147], "reward_run": [128, 147], "x_posit": [128, 147], "x_veloc": [128, 147], "raise_if_clos": 128, "fast_encod": 128, "memoize_cach": 128, "adaptive_autorang": 128, "4f": [128, 422, 423, 435], "fp": [128, 379, 384, 386], "10141": 128, "5742fp": 128, "10576": 128, "8388fp": 128, "read_act": 128, "read_don": 128, "nonsens": 128, "fallback": 128, "read_ob": 128, "dictat": [128, 203, 310, 314, 344, 420, 435], "read_reward": 128, "hoc": [128, 147, 426], "dict_read": 128, "my_info_kei": 128, "some_env": 128, "vecenv": 129, "vectorenv": 129, "convert_actions_to_numpi": 129, "secur": 130, "habitat3": 130, "ai": [130, 436], "habitatrenderpick": 130, "isaacgym": [131, 132], "isaacgymwrapp": [131, 413], "isaacgymenv": [132, 413], "webpag": 132, "isaac": 132, "essenc": [132, 425], "instadeepai": [133, 134], "2306": [133, 134, 240], "09884": [133, 134], "snake": [133, 134], "grid": [133, 134, 379], "bodi": [133, 134], "body_st": [133, 134], "fruit_posit": [133, 134], "col": [133, 134], "head_posit": [133, 134], "tail": [133, 134], "game2048": [133, 134], "maze": [133, 134], "cleaner": [133, 134], "cvrp": [133, 134], "multicvrp": [133, 134], "minesweep": [133, 134], "rubikscub": [133, 134], "knapsack": [133, 134], "sudoku": [133, 134], "tsp": [133, 134], "connector": [133, 134], "v2": [133, 134, 154, 155, 353, 368, 369, 370, 371, 373, 374, 375, 376, 423], "mmst": [133, 134], "graphcolor": [133, 134], "partli": [133, 134], "scrambl": [133, 134], "robotwarehous": [133, 134], "tetri": [133, 134], "binpack": [133, 134], "jobshop": [133, 134], "0x1fca91910": 133, "122": [133, 134, 440], "0x1ff9baee0": 133, "134": [133, 134], "0x1ff9ba7c0": 133, "172": [133, 134], "jit": 134, "eager": 134, "tdreset": [134, 242, 432], "whichev": 134, "drastic": [134, 147, 437], "overview": [135, 422, 424, 427, 433, 434, 439], "vocab_s": 135, "hashing_modul": 135, "text_output": 135, "decod": [135, 169, 280], "batch_decod": 135, "text_kei": 135, "gpt2token": 135, "make_tensordict": 135, "mo": [136, 137], "minecart": [136, 137], "mo_gym": [137, 203], "qualnam": 138, "neural": [138, 149, 150, 249, 250, 283, 285, 291, 313, 415, 421, 422, 423, 426, 433, 434, 435, 440], "group_map": [138, 139, 140, 145, 146, 149, 150, 159, 160, 161, 162, 164, 433], "constructiuon": [138, 149, 150], "premad": [138, 139, 140, 149, 150, 161, 162, 357], "all_in_one_group": [138, 145, 146, 164], "agent_0": [138, 149, 150, 159, 164, 222], "agent_1": [138, 149, 150, 159, 164, 222], "agent_2": [138, 149, 150, 159, 164], "agent_3": [138, 159], "one_group_per_ag": [138, 149, 150], "meltingpot": [139, 140], "2211": [139, 140], "13746": [139, 140], "melt": [139, 140], "pot": [139, 140], "novel": [139, 140, 427], "social": [139, 140], "familiar": [139, 140, 421, 434, 440], "unfamiliar": [139, 140], "broad": [139, 140], "cooper": [139, 140, 433, 434], "decept": [139, 140], "reciproc": [139, 140], "stubborn": [139, 140], "substrat": [139, 140], "ml_collect": 139, "config_dict": 139, "configdict": 139, "categorical_act": [139, 140, 145, 146, 149, 150, 154, 155, 159, 160, 161, 162], "marlgroupmaptyp": [139, 140, 145, 146, 149, 150, 159, 160, 161, 162, 164, 413, 433], "agent_nam": [139, 140, 161, 162, 164], "agent_names_to_indices_map": [139, 140, 161, 162], "env_torchrl": [139, 140], "commons_harvest__open": [139, 140], "rgb": [139, 140], "144": [139, 140], "192": [139, 140], "collective_reward": [139, 140], "ready_to_shoot": [139, 140], "88": [139, 140, 154, 155], "substrate_config": 140, "get_config": 140, "mp_env": 140, "build_from_config": 140, "default_player_rol": 140, "mymbenv": [141, 246, 272], "world_model": [141, 246, 272, 336], "hidden_observ": [141, 246, 272], "mlp": [141, 246, 249, 250, 252, 253, 254, 255, 261, 265, 269, 272, 276, 277, 302, 306, 321, 329, 331, 415, 421, 424, 426, 427, 430, 432, 436, 439], "worldmodelwrapp": [141, 246, 272], "activation_class": [141, 246, 249, 250, 252, 253, 254, 255, 260, 261, 270, 272, 275, 276, 421, 426, 433, 434, 439], "activate_last_lay": [141, 246, 255, 270, 272], "sail": [142, 143], "sg": [142, 143], "2206": [142, 143], "10558": [142, 143], "readthedoc": [142, 145, 146], "en": [142, 145, 146], "python_interfac": 142, "envpoolmixin": 143, "env_bas": 143, "task_id": 143, "env_typ": 143, "gym_reset_return_info": 143, "envpool_env": 143, "www": [144, 273, 274], "fetch_openml": 144, "adult_num": 144, "adult_onehot": 144, "mushroom_num": 144, "mushroom_onehot": 144, "covertyp": 144, "shuttl": 144, "magic": [144, 424, 425], "106": 144, "openspiel": [145, 146], "open_spiel": [145, 146], "game_str": 145, "return_st": [145, 146, 149, 150], "4672": [145, 146], "current_play": [145, 146], "674": 145, "2048": [145, 146], "add_nois": [145, 146], "amazon": [145, 146], "backgammon": [145, 146], "restor": [145, 146], "td_restor": [145, 146], "pyspiel": 146, "load_gam": 146, "new_initial_st": 146, "3009": 146, "my_env_fun": [147, 156], "custom_attribute_list": [147, 156], "custom_attribut": [147, 156], "custom_method_list": [147, 156], "custom_method": [147, 156], "deploi": [147, 156, 180, 424], "slight": [147, 156, 421], "share_individual_td": [147, 156], "shared_memori": [147, 156], "policy_proof": [147, 156], "ll": [147, 156, 263, 264, 267, 268, 420, 421, 422, 423, 425, 426, 427, 428, 430, 434, 440], "hidden": [147, 156, 182, 252, 260, 263, 264, 265, 267, 268, 269, 280, 281, 289, 290, 302, 303, 304, 305, 313, 316, 326, 341, 344, 415, 423, 432, 439], "serial_for_singl": [147, 156, 421], "circular": [147, 156, 420], "list_of_kwarg": [147, 156], "com_veloc": [147, 156], "head_height": [147, 156], "joint_angl": [147, 156], "torso_vert": [147, 156], "timeout": 147, "idl": 147, "batched_pipe_timeout": 147, "stringent": [147, 422, 433, 434], "penv": [147, 230], "env_fix": 147, "influenc": 147, "myenv": [147, 180, 190, 193], "pipe": 147, "update_kwarg": [147, 156], "th": [148, 197, 234, 263, 267, 435], "thdot": [148, 435], "max_spe": [148, 435], "max_torqu": [148, 435], "gen_param": [148, 435], "gravit": [148, 435], "torqu": [148, 435], "pettingzoo": [149, 150, 433, 434], "pet": [149, 150], "zoo": [149, 150], "__": [149, 150], "aecenv": [149, 150], "dead": [149, 150], "done_on_ani": [149, 150, 433], "compulsori": [149, 150], "adversary_0": [149, 150], "adversari": [149, 150, 338, 433], "sisl": 149, "multiwalker_v9": 149, "aec": [149, 150], "n_piston": [149, 150], "pistonball_v6": [149, 150], "piston": [149, 150], "piston_0": [149, 150], "piston_1": [149, 150], "piston_20": [149, 150], "tictactoe_v3": [149, 150], "player": [149, 150, 158], "player_1": [149, 150], "player_2": [149, 150], "butterfli": 150, "parallel_env": [150, 420, 439, 440], "_setup": [151, 157], "queue": [151, 239, 437, 439], "async_reset_send": [151, 157], "async_reset_recv": [151, 157], "cube": 152, "roboh": 153, "expos": [153, 190, 193, 315, 421], "vikashplu": 153, "wiki": 153, "2310": 153, "06828": 153, "from_depth": 153, "smacv2": [154, 155], "starcraft": [154, 155], "challeng": [154, 155, 425, 435, 436], "10gen_terran": [154, 155], "10gen_zerg": [154, 155], "10gen_protoss": [154, 155], "3m": [154, 155], "8m": [154, 155], "25m": [154, 155], "5m_vs_6m": [154, 155], "8m_vs_9m": [154, 155], "10m_vs_11m": [154, 155], "27m_vs_30m": [154, 155], "mmm": [154, 155], "mmm2": [154, 155], "2s3z": [154, 155], "3s5z": [154, 155], "3s5z_vs_3s6z": [154, 155], "3s_vs_3z": [154, 155], "3s_vs_4z": [154, 155], "3s_vs_5z": [154, 155], "1c3s5z": [154, 155], "2m_vs_1z": [154, 155], "corridor": [154, 155], "6h_vs_8z": [154, 155], "2s_vs_1sc": [154, 155], "so_many_banel": [154, 155], "bane_vs_ban": [154, 155], "2c_vs_64zg": [154, 155], "old": [154, 155, 240, 341, 440], "smac": [154, 155], "map_nam": [154, 155], "176": [154, 155], "battle_won": [154, 155], "dead_al": [154, 155], "dead_enemi": [154, 155], "episode_limit": [154, 155], "322": [154, 155], "procedur": [154, 155], "distribution_config": [154, 155], "n_unit": [154, 155], "n_enemi": [154, 155], "team_gen": [154, 155], "dist_typ": [154, 155], "weighted_team": [154, 155], "unit_typ": [154, 155], "marin": [154, 155], "maraud": [154, 155], "medivac": [154, 155], "exception_unit_typ": [154, 155], "start_posit": [154, 155], "surrounded_and_reflect": [154, 155], "map_x": [154, 155], "map_i": [154, 155], "capability_config": [154, 155], "131": [154, 155], "starcraft2env": 155, "tic": 158, "tac": 158, "toe": 158, "single_play": 158, "player1": 158, "desired_batch_s": 158, "player0": 158, "uniti": [159, 160], "ml": [159, 160], "technolog": [159, 160], "llapi": [159, 160], "mlagents_env": [159, 160], "unityenviron": [159, 160], "file_nam": 159, "registered_nam": 159, "nor": 159, "localhost": 159, "connect": 159, "3dball": 159, "group_0": 159, "vectorsensor_size8": 159, "continuous_act": [159, 161, 162, 377, 433, 434], "agent_10": 159, "agent_11": 159, "agent_4": 159, "agent_5": 159, "agent_6": 159, "agent_7": 159, "agent_8": 159, "agent_9": 159, "group_reward": 159, "proroklab": [161, 162], "vectorizedmultiagentsimul": [161, 162], "2207": [161, 162], "03530": [161, 162], "basescenario": 161, "defaultt": 161, "chosen": [161, 162, 224, 225, 287, 288, 296, 312, 379, 415, 429], "sparsiti": 161, "unbatched_action_spec": [161, 162], "unbatched_observation_spec": [161, 162], "unbatched_reward_spec": [161, 162], "het_spec": [161, 162], "het_specs_map": [161, 162], "flock": [161, 162, 377], "agent_collision_rew": [161, 162], "agent_distance_rew": [161, 162], "ca": 164, "environment4": 164, "get_group_map": 164, "sumbodul": 167, "unsqueeze_null_shap": 168, "dynamic_shap": 168, "model_bas": [169, 170, 246, 272], "model_based_env": [169, 335], "dreamerenv": [169, 335, 413], "model_based_env_ev": 169, "spec_typ": 171, "convert_specnam": 171, "remap_state_to_observ": 171, "spectyp": 171, "probabilistictdmodul": [172, 270, 310, 314, 358, 392], "keep_oth": [174, 435], "exclude_reward": 174, "exclude_don": 174, "next_": 174, "write_full_fals": 175, "_terminated_or_trunc": 175, "num_interv": 176, "out_action_kei": 176, "samplingstrategi": 176, "optino": 176, "intenum": 176, "interv": [176, 227, 378, 379, 389, 399, 421, 435], "action_disc": 176, "masker": 177, "maskedenv": 177, "ones_lik": [177, 273], "scatter": 177, "transformthatmeasuresbyt": [177, 179, 180, 182, 183, 184, 187, 188, 191, 194, 195, 196, 198, 201, 202, 209, 211, 212, 213, 215, 218, 219, 222, 223, 224, 225, 226, 227, 229, 230, 231, 235, 236, 238, 239, 242], "bytes_in_td": [177, 179, 180, 182, 183, 184, 187, 188, 191, 194, 195, 196, 198, 201, 202, 209, 211, 212, 213, 215, 218, 219, 222, 223, 224, 225, 226, 227, 229, 230, 231, 235, 236, 238, 239, 242], "fill_float": 179, "fill_int": 179, "fill_bool": 179, "someenvclass": 179, "autoresetenv": 179, "fooenv": 179, "sign": [179, 220, 359, 433], "envtyp": 179, "reshape_fn": [180, 424], "reset_func": 180, "env_kwarg": [180, 409, 410, 420], "accompani": [180, 223], "tensordict_batch_s": 180, "tensordict_reset": [180, 435], "transform_env_batch_s": [180, 187, 231, 242], "untouch": [180, 187, 190, 191, 195, 202, 204, 212, 213, 219, 223, 229, 231, 233, 240, 242], "transform_full_done_spec": [180, 187, 190, 191, 195, 202, 204, 212, 213, 219, 223, 229, 231, 233, 240, 242], "biner": 181, "burn_in": 182, "burn": 182, "burnt": 182, "gru_modul": [182, 265, 321], "input_s": [182, 225, 263, 264, 265, 267, 268, 269, 321, 423, 424], "hidden_s": [182, 225, 263, 264, 265, 267, 268, 269, 321, 423, 424], "default_recurrent_mod": [182, 265, 269], "burn_in_transform": 182, "gru": [182, 225, 264, 265, 321, 424], "num_lay": [182, 263, 265, 267, 269, 280, 281, 321, 424], "is_init": [182, 201, 265, 269, 286, 309, 321, 423, 424], "86": 182, "3008": 182, "0344": 182, "padding_valu": [183, 273, 274], "as_invers": 183, "movement": 183, "1312": 183, "5602": 183, "consumpt": [183, 413], "pictur": 183, "pixels_trsf": [183, 437], "grayscal": [183, 421, 423, 424, 437, 440], "data_exclud": [183, 437], "make_rb_transform_and_sampl": 183, "sampler_kwarg": 183, "redund": [183, 423], "del_kei": [184, 222, 235, 432, 435], "unsqueeze_if_oor": 184, "observation_posit": 184, "observation_veloc": 184, "delet": [184, 222, 386], "crop": [185, 211, 379], "center": [185, 285, 379], "width": [185, 189, 214], "height": [185, 189, 214], "squar": [185, 189, 266, 294, 295, 379], "scalar": [186, 216, 244, 253, 255, 262, 278, 279, 286, 320, 324, 325, 326, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 344, 345, 346, 347, 348, 350, 357, 359, 360, 361, 362, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 415, 421, 427, 435], "rewardsc": [187, 232, 420, 421, 423], "rewardclip": 187, "transformed_env": [187, 232, 425], "transform_env_devic": [187, 191, 231, 242], "cond": 188, "met": [188, 323, 433, 435], "altogeth": 188, "exectu": 188, "palliat": [188, 426], "step_count_kei": [188, 223], "inner_count": 188, "middle_env": 188, "middle_count": 188, "auto_unwrap": [188, 232, 387], "9670": 188, "2546": 188, "9669": 188, "9802": 188, "1981": 188, "1601": 188, "9926": 188, "1214": 188, "5556": 188, "9994": 188, "7622": 188, "9984": 188, "0561": 188, "7933": 188, "9895": 188, "1445": 188, "7779": 188, "dtype_in": 190, "dtype_out": 190, "scan": [190, 193, 315, 316], "resp": [190, 193], "not_transform": [190, 193], "orig_devic": 191, "unspecifi": 191, "transform_done_spec": [191, 222, 229, 231, 233, 242], "num_actions_effect": 192, "max_act": 192, "include_forward": 192, "num_act": [192, 250, 333, 424, 426], "action_out": 192, "eol_kei": 194, "lives_kei": 194, "eol_attribut": 194, "breakout": 194, "210": [194, 208], "160": [194, 208], "eol_transform": 194, "eol": 194, "dqnloss": [194, 324, 325, 327, 328, 331, 333, 334, 335, 339, 340, 342, 344, 345, 346, 347, 348, 349, 350, 351, 357, 404, 413, 416, 421, 423, 424, 430], "register_kei": 194, "loss_or_advantag": 194, "lossmodul": [194, 397, 406, 407, 413, 416], "valueestimatorbas": [194, 342, 413], "finit": [196, 285, 426, 437], "first_dim": 197, "last_dim": 197, "allow_positive_dim": [197, 222, 234], "frameskip": 197, "repeatedli": [198, 422, 434], "hash_fn": 200, "use_raw_nontensor": [200, 229, 233], "repertoir": 200, "reproducible_hash": 200, "unarytransform": 200, "observation_str": 200, "tobyt": [200, 233], "observation_hash": 200, "x08": 200, "x8b": 200, "xbexav": 200, "xbf": 200, "x00": 200, "xee": 200, "xb5": 200, "x17": 200, "x8f": 200, "xbe": [200, 233], "x88": 200, "xccu": 200, "xc0vr": 200, "get_input_from_hash": 200, "hash_tensor": 200, "init_kei": [201, 309], "tracker": 201, "log_prob_kei": [202, 314, 416], "pi_curr": 202, "pi_0": 202, "overfit": 202, "probabilist": [202, 310, 324, 344, 413, 422, 439], "get_dist": [202, 314, 315], "normalparamextractor": [202, 302, 303, 304, 310, 316, 324, 325, 327, 333, 340, 344, 345, 346, 347, 349, 350, 415, 422, 426, 434, 439], "probabilisticactor": [202, 302, 303, 304, 305, 324, 325, 327, 330, 332, 333, 340, 343, 344, 345, 346, 347, 349, 350, 415, 420, 422, 426, 433, 434], "tanhnorm": [202, 302, 303, 304, 310, 316, 324, 325, 327, 340, 344, 345, 346, 347, 349, 350, 413, 422, 434, 439], "return_log_prob": [202, 302, 303, 304, 310, 314, 316, 346, 415, 422, 426, 433, 434, 439], "apply_": 202, "copy_": [202, 420], "formula": [202, 266, 294, 295, 324, 326, 341, 344, 416, 422], "mogymwrapp": [203, 413], "mo_env": 203, "sea": 203, "treasur": 203, "so_env": 203, "stack_reward": 204, "stack_observ": 204, "auto_batch_size_": 204, "macro": [204, 309], "noop": 205, "trial": 205, "standard_norm": [206, 217, 239, 240, 420, 421, 423], "affin": [206, 217, 239, 240], "layer": [206, 239, 245, 249, 250, 252, 253, 258, 260, 263, 264, 265, 267, 268, 269, 270, 275, 276, 278, 279, 280, 281, 291, 292, 299, 308, 317, 415, 421, 422, 423, 424, 426, 433, 436], "epsilon": [206, 244, 262, 286, 348, 395, 421, 422, 423, 426], "recover": 206, "set_default_tensor_typ": 206, "doubletensor": 206, "isclos": 206, "next_ob": [206, 359, 360, 361, 362, 439], "init_stat": [206, 420, 421, 422, 423], "3752e": 206, "5087e": 206, "9294e": 206, "9636": 206, "5608": 206, "6408": 206, "num_it": [206, 421, 422], "reduce_dim": [206, 420, 421, 422, 423], "cat_dim": [206, 420, 421, 422, 423], "keep_dim": [206, 309, 421, 423], "statist": [206, 239, 240, 245, 346, 411, 420, 421, 422, 440], "gaussian": [206, 225, 244, 246, 272, 278, 279, 284, 422, 424, 433], "empir": [206, 246, 272, 310, 314, 420, 422, 434], "3d": [206, 249], "reorder": 208, "in_keys_in": [208, 234], "channel": [208, 228, 275, 280, 281, 421], "r3m": [210, 436], "resnet": [210, 235, 237], "ego4d": [210, 235, 237], "univers": [210, 235, 237, 425], "suraj": [210, 235], "nair": [210, 235], "aravind": [210, 235], "rajeswaran": [210, 235], "vikash": [210, 235, 237], "kumar": [210, 235, 237], "chelsea": [210, 235], "finn": [210, 235], "abhinav": [210, 235], "gupta": [210, 235], "2203": [210, 235, 272, 436], "12601": [210, 235, 436], "_init": [210, 235, 420], "resnet50": [210, 237, 436], "model_nam": [210, 235, 237, 382], "resnet34": 210, "resnet18": 210, "r3m_vec": [210, 436], "stack_imag": [210, 237], "tread": [210, 237], "hub": [210, 237, 425], "resnet50_weight": [210, 237], "imagenet1k_v1": [210, 237], "download_path": [210, 237], "tensor_pixels_kei": [210, 237], "sub_seq_len": 211, "sample_dim": [211, 420], "hesit": 211, "mix": [211, 287, 296, 357, 420, 433, 434], "improp": 211, "dummyenv": 212, "another_oth": 212, "other_reward": 212, "create_copi": 213, "stuff": [213, 428], "newnam": 213, "r2g": 215, "reward_to_go": 215, "bernoulli_": 215, "9010": 215, "9404": [215, 365], "9701": [215, 365], "9900": [215, 365], "0000": [215, 226, 227, 262, 285, 317, 365], "clamp_min": 216, "clamp_max": 216, "clip_min": 216, "clip_max": 216, "episode_": 218, "reward1": 218, "reward2": 218, "episode_reward": [218, 433, 434], "keep_reward": 219, "keep_don": 219, "logical_or": 220, "in_key_inv": 222, "unstack": 222, "update_don": 223, "disjunct": 223, "recognis": 223, "target_return": 224, "default_valu": [225, 321], "expand_spec": 225, "single_default_valu": 225, "call_before_env_reset": 225, "unit": [225, 246, 260, 263, 264, 280, 281, 289, 290, 422], "scala": 225, "dataloadingprim": 225, "mykei": 225, "__unless": 225, "exists__": 225, "get_primers_from_modul": [225, 248, 265, 269, 413], "recurrent_st": [225, 265, 269, 321, 423], "10th": 226, "0216": 226, "1149": 226, "1990": 226, "2749": 226, "3281": 226, "9290": 226, "3702": 226, "8978": 226, "time_kei": 227, "elaps": [227, 429], "monitor": [227, 425], "expend": 227, "_polici": 227, "time_reset": 227, "time_polici": 227, "time_step": [227, 268, 309], "0882": 227, "0002": 227, "5797e": 227, "6289e": 227, "7990e": 227, "0824e": 227, "0837e": 227, "6056e": 227, "2016e": 227, "1062e": 227, "7009e": 227, "from_int": 228, "shape_toler": 228, "ri": 228, "pretrainedtokenizerbas": 229, "additional_token": 229, "skip_special_token": 229, "add_special_token": 229, "return_attention_mask": 229, "missing_toler": 229, "call_before_reset": 229, "bert": 229, "uncas": 229, "traj_count": 230, "traj": 230, "countingenv": 230, "mocking_class": 230, "make_env_c0": 230, "make_env_c1": 230, "set_contain": 231, "reset_par": 231, "smoothli": [232, 245], "add_1": 232, "cache_spec": 232, "switch": [232, 240, 266, 295, 377], "set_missing_toler": 232, "inv_fn": 233, "unari": 233, "durin": 233, "ommit": 233, "observation_trsf": 233, "xbc": 233, "x7f": 233, "x859": 233, "x81": 233, "x9a": 233, "xbd": 233, "xb8t8": 233, "test_input_spec": 233, "test_output_spec": 233, "danger": 234, "vc1": 235, "vc1_vec": 235, "untrain": 235, "make_noload_model": 235, "vip": [236, 237, 436], "implicit": [237, 332, 340, 437], "jason": 237, "ma": 237, "shagun": 237, "sodhani": 237, "dinesh": 237, "jayaraman": 237, "osbert": 237, "bastani": 237, "ami": 237, "zhang": 237, "vip_vec": 237, "final_nam": 238, "sb3": 238, "terminal_obs_read": 238, "truli": [238, 439], "vecnormv2": 239, "new_api": [239, 240], "to_observation_norm": [239, 240], "frozen_copi": [239, 240], "shared_td": 239, "race": 239, "decai": [239, 240, 244, 262, 348, 395, 420, 421, 423, 440], "underflow": [239, 395], "build_td_for_shared_vecnorm": 239, "memmori": 239, "td_share": 239, "v": [239, 263, 264, 267, 268, 302, 332, 340, 347, 420, 421], "unfreez": [239, 240], "observationnorm": [239, 240, 411, 420, 421, 422, 423, 439], "train_env": 239, "eval_env": 239, "9999": 240, "0001": [240, 260], "shared_data": 240, "reduce_batch_dim": 240, "varianc": [240, 245, 246, 247, 266, 294, 295, 416, 420, 422, 434], "vs": [240, 243], "weigh": 240, "_cast_int_to_float": 240, "env_trsf": 240, "observation_norm": 240, "reward_norm": [240, 395], "unnorm": [240, 273, 274, 282], "7967": 240, "1238": 240, "5911": 240, "5275": 240, "8585": 240, "5028": 240, "2505": 240, "3169": [240, 317], "1332": 240, "1235": 240, "6596e": 240, "3072e": 240, "9170e": 240, "9255e": 240, "9131e": 240, "4671e": 240, "3760e": 240, "2058e": 240, "3484e": 240, "6185e": 240, "1456": 240, "1862": 240, "2053": 240, "2605": 240, "4046": 240, "5185": 240, "8023": 240, "1364": 240, "6183": 240, "5406": 240, "0920": 240, "1492": 240, "2702": 240, "3917": 240, "5001": 240, "7947": 240, "0160": 240, "3347": 240, "9082": 240, "9679": 240, "2199": 240, "2918": 240, "1668": 240, "2083": 240, "4981": 240, "5046": 240, "7950": 240, "9791": 240, "1484": 240, "4182": 240, "2201": 240, "0403": 240, "5206": 240, "7791": 240, "8282": 240, "2279": 240, "2907": 240, "4929": 240, "7793": 240, "8626": 240, "1832": 240, "local_env": 240, "testifi": 240, "4307": 240, "9613": 240, "state_dim": [241, 251, 256, 284, 289, 290, 305], "action_dim": [241, 251, 252, 254, 256, 284, 305, 420, 432], "gsde": [241, 345, 411], "gsdemodul": 241, "rb_transform": 242, "resist": 242, "insensit": 242, "sensit": [242, 421, 423], "_orig": 242, "95": [242, 272, 352, 422, 423], "window": [242, 309, 433, 437, 439], "module_nam": [243, 342], "from_vers": 243, "to_vers": 243, "class_method": 243, "import_modul": 243, "get_class_that_defined_method": 243, "module_set": 243, "setters_dict": 243, "setter": 243, "setter_dict": 243, "po": 244, "sigma_init": [244, 433], "sigma_end": [244, 433], "annealing_num_step": [244, 262, 286, 420, 421, 423, 424, 426, 430, 433], "sigma": [244, 263, 264, 266, 267, 268, 286, 294, 295, 422, 433], "omiss": [244, 262, 286], "momentum": 245, "max_r": 245, "max_d": 245, "warmup_step": 245, "batchrenorm": 245, "1702": 245, "03275": 245, "corenet": 245, "enhanc": 245, "warmup": 245, "phase": [245, 247, 434, 437], "outlier": 245, "period": 245, "warm": 245, "renorm": 245, "entropi": [246, 282, 324, 325, 326, 327, 332, 333, 340, 341, 343, 344, 345, 347, 349, 350, 434], "botev": 246, "2013": 246, "cem": 246, "plan": [246, 271, 272], "k": [246, 248, 263, 264, 267, 268], "maximis": [246, 252, 254, 272, 421, 422, 434], "modelbasedenv": [246, 272], "planning_horizon": [246, 272], "optim_step": [246, 272, 424, 430], "mpc": [246, 271, 272], "num_candid": [246, 272], "candid": [246, 272], "top_k": [246, 272], "modelbasedenvbas": [246, 271, 272, 413], "safemodul": [246, 271, 302, 304, 314, 324, 325, 327, 332, 333, 340, 344, 345, 346, 347, 349, 350, 402, 403, 407, 413, 439], "hausknecht": 247, "wagen": 247, "reus": [247, 252, 386], "consistentdropoutmodul": [247, 415], "capit": 247, "conceptu": 247, "devianc": 247, "set_exploration_typ": [247, 342, 392, 413, 415, 422, 423, 424, 426, 433, 439], "_main_async_collector": 247, "asyncdatacollector": [247, 413], "ditto": 247, "consistentdropout": 248, "input_shap": 248, "batcht": 248, "make_tensordict_prim": [248, 265, 269, 423], "input_dtyp": 248, "get_default_dtyp": [248, 395], "mask_6127171760": 248, "env0": [248, 440], "num_cel": [249, 250, 252, 253, 254, 255, 260, 261, 265, 269, 270, 275, 276, 302, 321, 421, 422, 423, 424, 426, 427, 430, 433, 434, 439], "elu": [249, 250, 252, 253, 254, 255, 260, 261, 275, 421, 439], "activation_kwarg": [249, 250, 270], "norm_class": [249, 250, 252, 253, 270], "norm_kwarg": [249, 250, 270], "bias_last_lay": [249, 250, 252, 253, 254, 255, 261, 270], "aggregator_class": [249, 250, 252, 253, 421, 423, 439], "squashdim": [249, 250, 252, 261, 275, 439], "aggregator_kwarg": [249, 250, 252, 253, 421, 423], "squeeze_output": [249, 250, 252, 253, 421, 423], "convolut": [249, 250, 252, 253, 275, 291, 424, 426], "cell": [249, 250, 263, 264, 265, 267, 268, 269, 270, 275, 276, 422, 424, 425, 426, 427, 428, 429, 430], "kernel": [249, 250, 275], "cnet": [249, 250], "conv3d": 249, "rectangular": [249, 250], "lazyconv2d": [250, 252, 253, 261, 275], "default_atari_dqn": [250, 424], "semin": 250, "transformer_config": [251, 284, 305], "decisiontransform": [251, 284], "dtconfig": [251, 256, 284], "2202": [251, 256, 343], "05607": [251, 256, 343], "return_to_go": [251, 256, 284, 305], "conv_net_kwarg": [252, 253], "mlp_net_kwarg": [252, 253, 254], "use_avg_pool": [252, 253], "WITH": [252, 253, 254, 255, 286, 348], "1509": [252, 253, 254, 255, 272, 286, 329, 339, 348], "02971": [252, 253, 254, 255, 286, 348], "convnet": [252, 253, 261, 275, 423, 424, 426, 439], "ndims_in": 252, "avgpool": [252, 253], "lazylinear": [252, 253, 254, 255, 261, 270, 415, 422, 426, 435, 436], "2304": 252, "adaptiveavgpool2d": [253, 421, 423], "output_s": [253, 421, 423], "squeeze2dlay": 253, "400": [254, 255, 434], "mlp_net_kwargs_net1": 255, "mlp_net_kwargs_net2": 255, "mlp1": 255, "mlp2": 255, "desdescrib": 256, "n_embd": 256, "n_layer": [256, 263, 267], "n_head": 256, "n_inner": 256, "n_posit": 256, "resid_pdrop": 256, "attn_pdrop": 256, "gpt2config": 256, "atol": [257, 293], "rtol": [257, 293], "batch_shap": [257, 282, 293], "event_shap": [257, 293], "absolut": [257, 293, 420], "_instanc": 257, "densiti": [257, 273, 274, 282, 295], "mass": [257, 273, 274, 282, 295, 435], "rsampl": [257, 274, 282, 314], "sample_shap": [257, 273, 274, 282], "softmax": [258, 274, 282, 306, 307], "var_num": [259, 288, 306, 307, 312], "action_value_kei": [259, 288, 306, 307, 311, 312, 327, 342, 357], "action_mask_kei": [259, 262, 288, 306, 307, 311, 312], "1707": [259, 307, 334, 344], "06887": [259, 307, 334], "mult": [259, 276, 288, 306, 307, 311, 312], "tensordict_modul": [259, 263, 264, 267, 268, 288, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 324, 325, 327, 328, 332, 333, 340, 344, 345, 346, 347, 349, 350, 415], "nbin": [259, 306, 415], "customdistributionalqv": 259, "log_softmax": [259, 306], "qvalue_actor": [259, 288, 306, 311, 415], "to_modul": [259, 313, 316, 420, 439], "std_bia": 260, "std_min_val": 260, "belief": [260, 280, 289, 290], "1912": [260, 335, 336, 337], "01603": [260, 335, 336, 337], "softplu": [260, 320, 322, 323], "out_features_valu": 261, "cnn_kwarg": [261, 421], "mlp_kwarg": [261, 421], "duel": 261, "cnn": [261, 275, 421, 424, 426, 439], "06581": 261, "512": 261, "greedi": [262, 288, 307, 312, 421, 423, 424, 426], "eps_init": [262, 286, 421, 423, 424, 426, 430], "eps_end": [262, 286, 421], "explorative_polici": [262, 286], "9055": 262, "9277": 262, "6295": 262, "2532": 262, "grad_fn": [262, 301, 314], "addbackward0": 262, "batch_first": [263, 267, 423], "bidirect": [263, 267, 423], "cudnn": [263, 264, 265, 267, 268, 269, 423, 424], "rnn": [263, 264, 265, 267, 268, 269, 300, 333, 347, 423, 424, 426], "device_count": [263, 264, 267, 268, 440], "n_in": [263, 264, 267, 268], "n_out": [263, 264, 267, 268], "h0": [263, 264, 267, 268], "h1": [263, 264, 267, 268], "vectoris": [263, 264, 267, 268], "call_gru": [263, 264], "h_out": [263, 264, 267, 268], "batched_cal": [263, 264, 267, 268], "gate": [263, 264, 267], "r_t": 263, "w_": [263, 264, 267, 268], "ir": [263, 264], "x_t": [263, 267], "b_": [263, 264, 267, 268], "hr": [263, 264, 267], "h_": [263, 264, 267], "z_t": 263, "iz": [263, 264], "hz": [263, 264], "n_t": 263, "odot": [263, 264, 267, 268], "hn": [263, 264, 267], "h_t": [263, 267], "sigmoid": [263, 264, 267, 268], "hadamard": [263, 264, 267, 268], "multilay": [263, 267], "_t": [263, 267, 434, 435], "ge": [263, 267], "bernoulli": [263, 267], "b_ih": [263, 264, 267, 268, 269], "b_hh": [263, 264, 267, 268, 269], "h_0": [263, 267, 268], "pack_padded_sequ": [263, 267], "pack_sequ": [263, 267], "num": [263, 267, 430], "_layer": [263, 267], "_size": [263, 264, 267, 268], "h_n": [263, 267], "packedsequ": [263, 267], "weight_ih_l": [263, 267], "learnabl": [263, 264, 267, 268], "w_ir": 263, "w_iz": 263, "w_in": 263, "num_direct": [263, 267], "weight_hh_l": [263, 267], "w_hr": 263, "w_hz": 263, "w_hn": 263, "bias_ih_l": [263, 267], "b_ir": 263, "b_iz": 263, "b_in": 263, "bias_hh_l": [263, 267], "b_hr": 263, "b_hz": 263, "b_hn": 263, "mathcal": [263, 264, 267, 268], "sqrt": [263, 264, 267, 268, 286], "frac": [263, 264, 267, 268, 422], "seq_len": [263, 267], "subtli": 263, "matrix": [263, 267, 278, 279], "hx": [263, 264, 267, 268], "lstmcell": [264, 269, 424], "gru_cel": 264, "weight_ih": [264, 268], "weight_hh": [264, 268], "bias_ih": [264, 268], "bias_hh": [264, 268], "rocm": [264, 268], "embedd": [265, 269], "grucel": [265, 313], "python_bas": [265, 269], "custom_kei": [265, 269], "hasn": [265, 269], "set_recurrent_mod": [265, 269, 423], "recurrent_mod": [265, 269, 300], "rs": [265, 420], "gru_module_train": 265, "policy_train": 265, "traj_td": 265, "make_cudnn_bas": [265, 269], "make_python_bas": [265, 269, 424], "supplementari": [265, 269, 422, 440], "That": [265, 269, 422, 433], "dealt": [265, 269], "poorli": [265, 269], "meth": [265, 269, 342, 435], "data_collector": [265, 269, 421], "upscal": [266, 294, 295], "tanh_loc": [266, 294, 295], "event_dim": [266, 293, 294], "poor": [266, 294, 295], "explos": [266, 294, 295], "proj_siz": 267, "c0": [267, 268], "c1": [267, 268], "call_lstm": [267, 268], "c_out": [267, 268], "i_t": 267, "ii": [267, 268], "hi": [267, 268], "f_t": 267, "hf": [267, 268], "g_t": 267, "ig": [267, 268], "hg": [267, 268], "o_t": 267, "ho": [267, 268], "c_t": 267, "c_": 267, "1402": 267, "1128": 267, "c_0": [267, 268], "proj": 267, "c_n": 267, "w_ii": 267, "w_if": 267, "w_ig": 267, "w_io": 267, "w_hi": 267, "w_hf": 267, "w_hg": 267, "w_ho": 267, "b_ii": 267, "b_if": 267, "b_ig": 267, "b_io": 267, "b_hi": 267, "b_hf": 267, "b_hg": 267, "b_ho": 267, "weight_hr_l": 267, "_revers": 267, "analog": [267, 426], "cn": 267, "lstm_cell": 268, "h_1": 268, "c_1": 268, "cx": 268, "recurrent_state_h": 269, "recurrent_state_c": 269, "triplet": [269, 311, 312], "lstm_modul": 269, "rs_h": 269, "rs_c": 269, "single_bias_last_lay": 270, "layer_class": 270, "layer_kwarg": 270, "perceptron": [270, 426], "noisylinear": [270, 278, 413, 421], "noisylazylinear": [270, 413], "mpcplanner": 271, "tensordict_out": [271, 440], "mppi": 272, "covari": 272, "william": [272, 346], "aldrich": 272, "theodor": 272, "01149": 272, "hansen": 272, "wang": 272, "su": 272, "04955": 272, "valueoper": [272, 302, 303, 304, 324, 325, 326, 327, 328, 333, 340, 341, 344, 345, 346, 347, 349, 350, 407, 415, 420, 422, 427], "tdlambdaestim": [272, 413, 420], "value_net": [272, 329, 331, 346, 359, 360, 361, 362, 422, 424, 426, 427, 430], "adv": 272, "lmbda": [272, 352, 359, 362, 364, 370, 371, 372, 375, 376, 416, 420, 422, 434], "value_network": [272, 328, 329, 331, 332, 334, 340, 347, 359, 360, 361, 362, 416, 420, 422, 424, 427, 430, 433], "temperatur": [272, 325, 332, 340], "neg_inf": [273, 274], "inf": [273, 274], "use_cross_entropi": 273, "api_doc": [273, 274], "tf_agent": [273, 274], "sparse_mask": [273, 274], "cross_entropi": 273, "1203": [273, 274], "0928": [273, 274], "0831": [273, 274], "1972": [273, 274], "grad_method": [274, 282], "reparamgradientstrategi": [274, 282], "passthrough": [274, 282], "relaxedonehot": [274, 282], "sample_non_valid": 274, "zeros_lik": [274, 435], "share_param": [275, 276, 277, 433, 434], "use_td_param": [275, 276, 277], "get_stateful_net": [275, 276, 277, 342, 415, 416], "from_stateful_net": [275, 276, 277, 342, 416], "homogen": [275, 276, 433, 434], "tensordictparam": [275, 276, 314], "_empty_net": [275, 276], "roughli": [275, 276, 439], "agent_network": [275, 276], "modulelist": [275, 276], "2592": 275, "n_agent_input": [276, 277, 433, 434], "n_agent_output": [276, 277, 433, 434], "toech": 276, "centalis": 276, "shown": [276, 415, 424, 432, 433, 434, 437], "agent_dim": 277, "vmap_random": [277, 342, 416], "stateful_net": [277, 342], "Such": [277, 342], "multiagentmlp": [277, 433, 434], "snet": 277, "hasattr": [277, 420], "kaiming_normal_": 277, "std_init": [278, 279], "initialize_paramet": 278, "isol": [278, 342, 424], "1706": [279, 296], "10295v3": 279, "induc": [279, 314], "aid": 279, "1803": [280, 281, 287], "10122": [280, 281], "rnn_hidden": 280, "latent": 281, "ordin": [283, 413], "parametris": [283, 285], "inres": 284, "mu": [284, 286, 422], "impos": [285, 415], "proxim": [285, 344, 422, 434], "atom": 285, "tang": 285, "agraw": 285, "2020": 285, "1901": 285, "10500": 285, "discretis": 285, "num_atom": 285, "num_sampl": 285, "middl": 285, "adam": [285, 294, 420, 421, 422, 423, 424, 427, 430, 433, 434, 435], "lr": [285, 420, 421, 422, 423, 430, 433, 434, 435], "optimis": [285, 433, 434], "minimis": 285, "penalis": 285, "0308": 285, "1586": 285, "4727": 285, "2260": 285, "1120": 285, "histogram": 285, "return_typ": 285, "hist": [285, 437], "158": 285, "478": 285, "228": 285, "112": 285, "bin_edg": 285, "8000": 285, "6000": 285, "4000": 285, "ornstein": [286, 420, 424], "uhlenbeck": [286, 420, 424], "ou": [286, 420], "correl": 286, "noise_t": 286, "noise_": 286, "theta": [286, 422, 435], "sigma_t": 286, "sigma_": 286, "anneal": [286, 421, 426, 433], "ou_prev_nois": 286, "ou_step": 286, "x0": 286, "sigma_min": 286, "n_steps_ann": 286, "is_init_kei": 286, "_ou_prev_nois": 286, "_ou_step": 286, "state_shap": [287, 357], "mixing_embed_dim": [287, 357], "qmix": [287, 433, 434], "mixer": [287, 296, 357], "monoton": 287, "hyper": 287, "11485": 287, "qmixerloss": [287, 296], "qmix_vdn": [287, 296], "vdn": [287, 296], "hidden_dim": [289, 290], "scale_lb": [289, 290], "posterior": [289, 336], "rssm": [289, 290, 336], "1811": [289, 290], "04551": [289, 290], "obs_embed": 289, "rnn_hidden_dim": 290, "dream": 290, "safe_tanh": 294, "tanhtransform": 294, "overflow": [294, 301, 306, 307, 310, 311, 312, 313, 314], "get_mod": [294, 314], "decomposit": 296, "05296": 296, "hide": [297, 422, 433, 434], "satisfi": [297, 415], "vmap_dim": 297, "lam": 297, "sample_in": 297, "sample_in_td": 297, "vm": 297, "translat": [301, 310], "character": [301, 306, 310, 311, 313, 437], "td_modul": [301, 302, 303, 304, 310, 313, 314, 316, 318, 426, 439], "3635": 301, "0340": 301, "1476": 301, "3911": 301, "1664": 301, "5455": 301, "2247": 301, "4583": 301, "2916": 301, "2160": 301, "5337": 301, "5193": 301, "addmmbackward0": 301, "actorvalueoper": [302, 326, 341, 344, 415, 426], "get_policy_oper": [302, 303, 304, 326, 341, 344, 415], "standalon": [302, 303, 304, 424, 426], "tdmodul": [302, 303, 304, 407], "get_critic_oper": 302, "common_oper": [302, 304], "policy_oper": [302, 303, 304], "value_oper": [302, 303, 304], "module_hidden": [302, 304], "td_module_hidden": [302, 304], "module_act": [302, 304], "td_module_act": [302, 303, 304], "module_valu": [302, 303, 304], "td_module_valu": [302, 303, 304], "state_action_valu": [302, 318, 325, 327, 332, 340, 347, 358, 407, 415, 420, 433, 439], "td_clone": [302, 303, 304], "tensordictmodulewrapp": [302, 402, 403, 407], "get_policy_head": [302, 303, 304], "safesequenti": [302, 303, 304, 357], "head": [302, 304, 314, 321, 326, 341, 344, 413], "get_value_head": [302, 303, 304], "get_value_oper": [302, 303, 304, 326, 341, 344], "action_modul": 303, "actorcriticoper": [304, 415, 426], "actorcriticwrapp": [304, 415, 420], "inferec": 305, "set_tensor_kei": 305, "dt_inference_wrapp": 305, "baz": 305, "inference_context": 305, "obs_dim": 305, "tanhdelta": [305, 413, 420, 433], "dtactor": 305, "actor_modul": [305, 439], "dist_class": 305, "dist_kwarg": 305, "distribution_kwarg": [305, 310, 314, 422, 433, 434], "inference_actor": 305, "sequence_length": 305, "mask_context": 305, "out_act": 305, "qvaluemodul": [306, 311, 357, 423, 424, 426, 430], "distributionaldqnnet": 306, "make_log_softmax": 306, "my_action_valu": [307, 312], "chanc": 307, "lmheadmodel": 308, "actor_head": [308, 326, 341, 344], "base_model": 308, "lm_head": 308, "lookahead": 309, "reshape_cat": 309, "actor_bas": 309, "obs_cat": 309, "obs_cat_reshap": 309, "action_orig": 309, "multistepenvwrapp": 309, "alter": [309, 342, 415], "ego": 309, "default_interaction_typ": [310, 314, 426], "interaction_typ": [310, 314], "set_interaction_typ": [310, 314], "compositedistribut": [310, 314, 324, 344, 416, 426], "distribution_map": [310, 314], "name_map": [310, 314], "cache_dist": [310, 314], "n_empirical_estim": [310, 314], "compound": [310, 426], "chose": 312, "functionalmodul": 313, "functionalmodulewithbuff": 313, "td_fmodul": 313, "td_function": 313, "td_state": 313, "params_repeat": 313, "td_vmap": [313, 316], "random_sampl": [313, 314], "suppli": 314, "paliat": 314, "get_median": 314, "get_mean": 314, "sample_key_nam": 314, "_log_prob": 314, "composite_lp_aggreg": 314, "clampbackward0": 314, "anihil": 314, "probabilistictensordictsequenti": [315, 324, 326, 341, 344, 346, 402, 403, 416, 439], "partial_toler": [315, 316, 432], "AND": [315, 316, 327], "tensordictsequ": 316, "safeprobabilisticmodul": [316, 415], "spec1": 316, "net1": 316, "module1": 316, "td_module1": 316, "spec2": 316, "module2": 316, "td_module2": 316, "boundari": [317, 422, 424, 433, 434], "resolut": 317, "9944": 317, "9991": 317, "3020": 317, "2299": 317, "5418": 317, "2989": 317, "6849": 317, "2690": 317, "9649": 317, "5686": 317, "8602": 317, "0315": 317, "8455": 317, "6027": 317, "4746": 317, "7843": 317, "7782": 317, "2111": 317, "5115": 317, "4687": 317, "5760": 317, "custommodul": 318, "imaginari": 319, "imagin": 319, "transition_model": 319, "get_reward_oper": 319, "get_transition_model_oper": 319, "min_val": [320, 323], "_bia": 320, "surject": 323, "expln": 323, "biased_softplu": [323, 413], "biased_softplus_": 323, "syntax": [323, 420], "add_custom_map": 323, "1602": 324, "01783v2": 324, "actor_network": [324, 325, 326, 327, 328, 330, 332, 333, 340, 341, 343, 344, 345, 346, 347, 349, 350, 416, 420, 422, 427, 433, 434], "critic_network": [324, 326, 341, 344, 346, 422, 434], "entropy_bonu": [324, 326, 341, 344, 422], "favour": [324, 326, 341, 344], "samples_mc_entropi": [324, 326, 341, 343, 344], "entropy_coef": [324, 326, 341, 344, 422, 434], "critic_coef": [324, 326, 341, 344, 422], "loss_critic_typ": [324, 326, 341, 344, 346, 422], "l1": [324, 326, 328, 329, 333, 341, 344, 345, 346, 349, 350, 353, 357, 415, 420], "l2": [324, 326, 328, 329, 330, 331, 333, 336, 337, 341, 344, 345, 346, 349, 350, 353, 357, 420, 433], "smooth_l1": [324, 325, 326, 327, 328, 329, 332, 333, 340, 341, 344, 345, 346, 347, 349, 350, 353, 357, 422], "separate_loss": [324, 326, 327, 328, 332, 333, 340, 341, 344, 345, 346, 347, 349, 350], "advantage_kei": [324, 326, 341, 344, 346, 359, 360, 361, 362], "value_target_kei": [324, 326, 341, 344, 346, 359, 360, 361, 362], "value_target": [324, 326, 341, 344, 346, 359, 360, 361, 362, 422, 434], "ddp": [324, 326, 341, 344, 346], "fsdp": [324, 326, 341, 344, 346], "divid": [324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 338, 340, 341, 343, 344, 345, 346, 347, 349, 350, 400, 420, 433, 434, 435], "clip_valu": [324, 326, 341, 344, 346], "loss_crit": [324, 344, 422, 434], "loss_entropi": [324, 344, 422, 434], "loss_object": [324, 344, 422, 434], "next_reward": [324, 325, 327, 328, 329, 331, 332, 333, 340, 344, 345, 346, 347, 349, 350, 359, 360, 361, 362], "next_don": [324, 325, 327, 328, 329, 331, 332, 333, 340, 344, 345, 346, 347, 349, 350, 359, 360, 361, 362], "next_termin": [324, 325, 327, 328, 329, 331, 332, 333, 340, 344, 345, 346, 347, 349, 350, 359, 360, 361, 362], "loss_obj": 324, "next_observ": [324, 325, 327, 328, 329, 331, 332, 333, 340, 344, 345, 346, 347, 349, 350, 432], "sacloss": [324, 339, 348, 413], "default_kei": [324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 343, 344, 345, 346, 347, 349, 350, 357, 363], "_acceptedkei": [324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 342, 343, 344, 345, 346, 347, 349, 350, 357, 363], "fraction": 324, "make_value_estim": [324, 325, 327, 328, 329, 331, 333, 334, 335, 340, 342, 344, 345, 346, 347, 349, 350, 351, 357, 416, 420, 421, 433, 434, 439], "value_typ": [324, 325, 327, 328, 329, 331, 333, 334, 335, 340, 342, 344, 345, 346, 347, 349, 350, 352, 357, 420], "valueestim": [324, 325, 327, 328, 329, 331, 333, 334, 335, 340, 342, 344, 345, 346, 347, 349, 350, 352, 357, 413, 416, 420, 433, 434], "hyperparam": [324, 325, 327, 328, 329, 331, 333, 334, 335, 340, 342, 344, 345, 346, 347, 349, 350, 357, 420], "enum": [324, 325, 327, 328, 329, 331, 333, 334, 335, 340, 342, 344, 345, 346, 347, 349, 350, 352, 357, 420], "default_value_estim": [324, 325, 327, 328, 329, 331, 333, 334, 335, 340, 342, 344, 345, 346, 347, 349, 350, 357, 420, 439], "default_value_kwarg": [324, 325, 327, 328, 329, 331, 333, 334, 335, 340, 342, 344, 345, 346, 347, 349, 350, 357, 413, 420], "dqn_loss": [324, 325, 327, 328, 329, 331, 333, 334, 335, 340, 342, 344, 345, 346, 347, 349, 350, 351, 357], "td1": [324, 325, 327, 328, 329, 331, 333, 334, 335, 340, 342, 344, 345, 346, 347, 349, 350, 357, 420], "conserv": [325, 331], "04779": [325, 331], "qvalue_network": [325, 327, 332, 333, 340, 345, 347, 349, 350], "unti": [325, 327, 340, 345, 347, 349, 350], "loss_funct": [325, 327, 328, 329, 330, 331, 332, 333, 340, 345, 347, 349, 350, 353, 357, 420, 433], "alpha_init": [325, 327, 333, 343, 345, 347], "min_alpha": [325, 327, 333, 343, 345, 347], "max_alpha": [325, 327, 333, 343, 345, 347], "fixed_alpha": [325, 327, 333, 343, 345, 347], "target_entropi": [325, 327, 333, 343, 345, 347], "prod": [325, 327, 343, 347], "delay_actor": [325, 328, 347, 349, 350], "delay_qvalu": [325, 333, 345, 347, 349, 350], "min_q_weight": 325, "max_q_backup": 325, "backup": 325, "deterministic_backup": 325, "num_random": 325, "with_lagrang": 325, "lagrang": 325, "lagrange_thresh": 325, "valueclass": [325, 327, 328, 333, 345, 347, 349, 350], "qvalu": [325, 327, 332, 333, 340, 345, 347, 349, 350], "loss_actor": [325, 327, 328, 332, 333, 340, 345, 346, 347, 349, 350, 393, 420, 433], "loss_actor_bc": 325, "loss_alpha": [325, 327, 333, 345, 347], "loss_cql": [325, 331], "loss_qvalu": [325, 327, 331, 332, 333, 340, 345, 347, 349, 350], "loss_alpha_prim": 325, "clip_epsilon": [326, 422, 434], "normalize_advantag": [326, 341, 344, 434], "normalize_advantage_exclude_dim": [326, 341, 344], "multiobject": [326, 341, 344], "value_kei": [326, 341, 344, 359, 360, 361, 362, 420], "somemodul": [326, 341, 344], "someactor": [326, 341, 344], "value_head": [326, 341, 344], "somevalu": [326, 341, 344], "loss_modul": [326, 339, 341, 342, 344, 348, 397, 406, 407, 416, 417, 420, 421, 422, 433, 434, 437], "IN": 327, "FOR": 327, "simplic": [327, 421, 422, 428, 436, 437, 439], "openreview": [327, 345], "pczqttstix": 327, "qvalue_loss": [327, 349], "actor_loss": [327, 349], "alpha_loss": 327, "num_qvalue_net": [327, 332, 333, 340, 345, 347, 349, 350], "maybe_init_target_entropi": 327, "fault_toler": 327, "target_entropy_buff": 327, "delay_valu": [328, 329, 331, 334, 346, 347, 357, 421, 423, 424, 430, 433], "loss_valu": [328, 332, 340, 346, 347, 420, 422, 433, 434], "pred_valu": [328, 331, 349, 350, 420], "pred_value_max": [328, 420], "target_valu": [328, 331, 345, 349, 350, 358, 416, 420], "target_value_max": [328, 420], "qvalueactor": [329, 331, 357, 421, 423], "double_dqn": 329, "06461": [329, 339], "mult_one_hot": [329, 332, 333, 357], "loss_val": [329, 331, 416, 420, 422, 423, 424, 427, 428, 430, 433, 434, 437], "01345": 330, "distanc": [331, 341, 353, 358, 359, 434], "dcql_loss": 331, "2110": [332, 340], "06169": [332, 340], "expectil": [332, 340], "tau": [332, 340, 348, 420, 421, 433], "antmaz": [332, 340], "sticht": [332, 340], "onehotcategor": [332, 333, 413], "target_entropy_weight": 333, "skip_done_st": [333, 347], "disctount": 334, "distributionalqvalueactor": [334, 415], "input_tensordict": [334, 420], "actor_model": 335, "value_model": [335, 337], "imagination_horizon": 335, "discount_loss": [335, 337], "lambda_kl": 336, "lambda_reco": 336, "lambda_reward": 336, "reco_loss": 336, "reward_loss": 336, "free_nat": 336, "nat": 336, "delayed_clamp": 336, "global_averag": 336, "value_loss": 337, "fake_data": 337, "1606": 338, "03476": 338, "discriminator_network": 338, "use_grad_penalti": 338, "gp_lambda": 338, "discrimin": 338, "ddpgloss": [339, 348, 407, 413, 420, 427, 433, 439], "td3loss": [339, 348, 413], "value_network_update_interv": 339, "qvalueclass": 340, "loss_value_diff": 340, "diff": 340, "old_polici": 341, "new_polici": 341, "apart": [341, 434], "dtarg": 341, "samples_mc_kl": 341, "analyt": 341, "decrement": 341, "loss_": [342, 393, 416, 420, 427], "equip": [342, 423, 424, 426], "gh": 342, "_forward_value_estimator_kei": 342, "value_estim": [342, 359, 360, 361, 362, 363, 416, 420, 434], "myloss": 342, "action2": 342, "augment": [342, 428, 430, 437], "deterministic_sampling_mod": 342, "convert_to_funct": [342, 420], "expand_dim": 342, "create_target_param": [342, 420], "compare_against": [342, 420], "_param": 342, "resampl": 342, "_target_param": 342, "network_nam": 342, "blend": 342, "add_random_modul": [342, 416], "flavor": [344, 420, 433, 434, 439], "clipppoloss": [344, 413, 422, 434], "klpenppoloss": [344, 413], "06347": 344, "gae": [344, 413, 416, 420, 422, 434], "ppo_loss": 344, "tdlambda": [344, 352, 416, 420], "base_lay": 344, "randn_lik": 344, "samplelogprob": 344, "ay8zfzm0tdd": 345, "sub_sample_len": 345, "subsampl": [345, 388, 417], "action_log_prob_actor": 345, "state_action_value_actor": [345, 349, 350], "connectionist": 346, "1992": 346, "doi": 346, "1007": 346, "bf00992696": 346, "actor_net": [346, 420, 422], "1801": 347, "01290": 347, "applic": [347, 357, 425, 426, 435], "1812": 347, "05905": 347, "redqloss": [348, 413], "math": 348, "theta_t": [348, 435], "theta_": [348, 435], "polyak": 348, "minimalist": 349, "06860": 349, "policy_nois": [349, 350], "noise_clip": [349, 350], "td3_bc": 349, "bc_loss": 349, "lmbd": 349, "td0": [351, 420, 433], "strict_shap": 353, "view_a": 353, "qmixer": [357, 413], "local_valu": 357, "visibl": [357, 434], "acceptedkei": 357, "global_valu": 357, "penultim": 357, "local_value_network": 357, "mixer_network": 357, "value_modul": [357, 422, 439], "qnet": [357, 420], "next_val_kei": 358, "pred_next_v": 358, "mse": 358, "q_valu": 358, "n_steps_to_next": 358, "value_next_st": 358, "1506": [359, 364, 372], "02438": [359, 364, 372], "exponenti": [359, 360, 361, 362, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 395], "average_ga": [359, 422], "skip_exist": [359, 360, 361, 362], "get_default_devic": [359, 360, 361, 362, 363], "auto_reset_env": 359, "next_valu": [359, 360, 361, 362, 363], "gradient_mod": 359, "value_error": [359, 360, 361, 362, 363], "target_param": [359, 360, 361, 362, 363, 420, 434], "98": [359, 360, 361, 362], "94": [359, 362], "unpack": [359, 360, 361, 362], "tensor_kei": [359, 360, 361, 362, 363], "aka": [360, 421, 433], "average_reward": [360, 361, 362], "tdestim": [360, 361, 363], "infti": 361, "valuefunctionbas": 363, "old_stat": [364, 366, 368, 370, 372, 373, 375], "new_stat": [364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376], "rolling_gamma": [368, 369, 370, 371, 373, 374, 375, 376], "g1": [368, 369, 370, 371, 373, 374, 375, 376], "g2": [368, 369, 370, 371, 373, 374, 375, 376], "g3": [368, 369, 370, 371, 373, 374, 375, 376], "g4": [368, 369, 370, 371, 373, 374, 375, 376], "v3": [368, 369, 370, 371, 373, 374, 375, 376], "preproc": [377, 424, 433], "as_non_tensor": [377, 433], "render_method": 377, "pass_tensordict": 377, "syntact": 377, "sugar": 377, "out_file_bas": 378, "skip_reset": 378, "center_crop": 379, "make_grid": 379, "log_video": 379, "csv": [379, 381, 383, 421, 429, 430], "wandb": [379, 383, 386, 429, 439], "tensorboard": [379, 383, 385, 429, 439], "log_dir": [379, 380, 381, 383, 385, 386, 421, 430], "cheetah_video": 379, "run_video": 379, "openxexperiencereplai": 379, "sec": [379, 435], "video_fp": [379, 381, 384], "cmu_stretch": 379, "run_video_0": 379, "pt": [381, 417], "cur_dir": 381, "csv_log": 381, "add_video": 381, "video_": 381, "experiment_nam": [382, 383], "uuid": [382, 421, 440], "logger_typ": 383, "logger_nam": 383, "mlflow": [383, 384], "wandb_kwarg": 383, "mlflow_kwarg": 383, "tracking_uri": 384, "uri": 384, "datastor": 384, "tb_log": 385, "tensoarboard": 385, "td_log": 385, "save_dir": 386, "resum": 386, "uncategor": 386, "my_funct": 387, "sub_traj_len": 388, "min_sub_traj_len": 388, "register_op": [388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 417, 421], "process_optim_batch": [388, 394, 395, 417], "td_out": [388, 396], "_process_optim_batch_hook": [388, 417], "batch_subsampl": 388, "clear_cuda": 389, "pre_optim_step": [389, 417], "log_pbar": [390, 391, 392, 395, 417, 421], "progress": [390, 391, 392, 397, 417, 421, 423, 440], "count_fram": 390, "pre_steps_log": [390, 391, 417], "count_frames_log": 390, "lognam": 391, "r_train": 391, "log_reward": [391, 421], "record_interv": [392, 420, 421], "record_fram": [392, 400, 420, 421], "policy_explor": [392, 407, 420, 421, 424, 426, 430], "log_kei": [392, 421], "underestim": 392, "r_evalu": [392, 420], "loss_compon": 393, "appl": 393, "optimizer_hook": 393, "flatten_tensordict": [394, 421], "max_dim": 394, "rb_trainer": 394, "batch_process": [394, 395, 396, 417], "post_loss": [394, 417], "999": [395, 421], "jitter": 395, "finfo": 395, "default_dtyp": 395, "update_reward_stat": 395, "normalize_reward": 395, "make_train": [396, 413], "_process_batch_hook": [396, 417], "select_kei": [396, 417], "versatil": [397, 425], "optim_steps_per_batch": [397, 417, 421], "clip_grad_norm": 397, "clip_norm": 397, "progress_bar": 397, "save_trainer_interv": 397, "log_interv": [397, 421], "save_trainer_fil": [397, 417], "load_from_fil": [397, 417], "update_weights_interv": [399, 421], "post_step": [399, 417, 421], "cfg": [400, 401, 402, 403, 404, 405, 406, 407, 408, 411], "dictconfig": [400, 401, 402, 403, 405, 406, 407, 408, 411], "unknowingli": 400, "annealing_fram": [400, 420], "init_env_step": [400, 401, 420], "proof_environ": [401, 420], "sta": 401, "ot": 401, "actor_model_explor": [402, 403, 420], "make_env_kwarg": [402, 403], "targetnetupdat": [404, 406, 407], "replayargsconfig": 405, "target_net_updat": [407, 420, 421], "constitu": 407, "egreedywrapp": 407, "env_proof": 407, "obs_spec": 407, "net_valu": 407, "dir": [407, 417, 421], "gettempdir": 407, "argpars": [408, 411], "namespac": [408, 411], "parser": [408, 411], "transformed_env_constructor": [408, 413], "num_env_per_collector": [409, 410], "video_tag": 411, "norm_obs_onli": 411, "use_env_cr": 411, "custom_env_mak": 411, "custom_env": 411, "return_transformed_env": 411, "action_dim_gsd": 411, "state_dim_gsd": 411, "obs_norm_state_dict": 411, "distributedsyncdatacollector": 413, "submitit_delayed_launch": 413, "remotetensordictreplaybuff": 413, "rational": 413, "footnot": 413, "binarydiscretetensorspec": 413, "boundedtensorspec": 413, "discretetensorspec": 413, "lazystackedcompositespec": 413, "lazystackedtensorspec": 413, "multidiscretetensorspec": 413, "multionehotdiscretetensorspec": 413, "nontensorspec": 413, "onehotdiscretetensorspec": 413, "unboundedcontinuoustensorspec": 413, "unboundeddiscretetensorspec": 413, "prompttensordicttoken": 413, "rolloutfrommodel": 413, "tokenizeddatasetload": 413, "create_infinite_iter": 413, "constantklcontrol": 413, "adaptiveklcontrol": 413, "densifyreward": 413, "h5combin": 413, "h5split": 413, "nested2t": 413, "check_no_exclusive_kei": 413, "consolidate_spec": 413, "contains_lazy_spec": 413, "envmetadata": 413, "chessenv": 413, "tictactoeenv": 413, "llmhashingenv": 413, "check_marl_group": 413, "get_available_librari": 413, "terminated_or_trunc": 413, "dreamerdecod": 413, "braxwrapp": 413, "dmcontrolwrapp": 413, "jumanjiwrapp": 413, "meltingpotenv": 413, "meltingpotwrapp": 413, "mogymenv": 413, "multithreadedenvwrapp": 413, "openmlenv": 413, "openspielwrapp": 413, "openspielenv": 413, "pettingzooenv": [413, 433], "robohiveenv": 413, "smacv2env": 413, "smacv2wrapp": 413, "unitymlagentsenv": 413, "unitymlagentswrapp": 413, "vmaswrapp": 413, "register_gym_spec_convers": 413, "qvaluehook": 413, "distributionalqvaluehook": 413, "reset_nois": 413, "cemplann": 413, "mpcplannerbas": 413, "mppiplann": 413, "independentnorm": 413, "truncatednorm": 413, "maskedonehotcategor": 413, "onehotordin": 413, "inv_softplu": 413, "vmapmodul": 413, "distributionaldqnloss": [413, 421], "discretesacloss": 413, "crossqloss": 413, "iqlloss": 413, "discreteiqlloss": 413, "cqlloss": 413, "discretecqlloss": 413, "gailloss": 413, "dtloss": 413, "onlinedtloss": 413, "td3bcloss": 413, "ppoloss": 413, "a2closs": 413, "reinforceloss": 413, "dreameractorloss": 413, "dreamermodelloss": 413, "dreamervalueloss": 413, "td0estim": [413, 420], "td1estim": [413, 420], "td0_return_estim": 413, "td0_advantage_estim": 413, "td1_return_estim": 413, "vec_td1_return_estim": 413, "td1_advantage_estim": 413, "vec_td1_advantage_estim": 413, "td_lambda_return_estim": 413, "vec_td_lambda_return_estim": 413, "td_lambda_advantage_estim": 413, "vec_td_lambda_advantage_estim": 413, "generalized_advantage_estim": 413, "vec_generalized_advantage_estim": 413, "hardupd": [413, 420, 427], "softupd": [413, 420, 421, 423, 424, 427, 430, 433], "distance_loss": [413, 420], "group_optim": 413, "hold_out_net": 413, "hold_out_param": [413, 420], "batchsubsampl": [413, 417], "clearcudacach": 413, "countframeslog": 413, "logscalar": [413, 417, 421], "optimizerhook": [413, 421], "logvalidationreward": [413, 417, 420, 421], "replaybuffertrain": [413, 417, 421], "rewardnorm": 413, "selectkei": [413, 417], "trainerhookbas": [413, 417, 421], "updateweight": [413, 417, 421], "make_collector_offpolici": 413, "make_collector_onpolici": 413, "make_dqn_loss": 413, "make_replay_buff": [413, 420], "make_target_updat": 413, "parallel_env_constructor": [413, 420], "sync_async_collector": 413, "sync_sync_collector": 413, "correct_for_frame_skip": 413, "get_stats_random_rollout": 413, "mlflowlogg": 413, "get_logg": 413, "generate_exp_nam": 413, "journei": 414, "textbook": 414, "highlight": [414, 433], "ever": [414, 434], "bump": 414, "benefit": [414, 425, 433, 434, 437], "pr": 414, "ground": [415, 420, 435], "recycl": [415, 437], "noisier": 415, "Their": [415, 433, 434], "sd": [415, 440], "prob_modul": 415, "uncertainti": 415, "soften": 415, "backbon": [415, 423, 426, 432, 439], "make_actor": 415, "make_valu": 415, "shared_param": 415, "make_common": 415, "reusabl": [416, 420, 437], "swappabl": [416, 420], "characterist": [416, 420, 435], "trainabl": [416, 420, 427, 436], "smth": [416, 420], "metric": [416, 420], "plenti": [416, 424], "amort": [416, 421, 422], "told": [416, 422], "pseudo": [416, 428, 435], "buri": 416, "str_valu": 416, "nutshel": [416, 420], "barto": [416, 433, 434], "chapter": [416, 429], "value_net_loss": 416, "pow": [416, 420], "room": 416, "signifi": [416, 433, 434], "underperform": 416, "thin": 416, "intric": [416, 426], "set_composite_lp_aggreg": [416, 434], "action_td": 416, "action0": 416, "f0": 416, "action1": 416, "f1": 416, "f2": 416, "legitim": [416, 440], "f3": 416, "action0_log_prob": 416, "action1_log_prob": 416, "inferior": 416, "multivari": 416, "dirichlet": 416, "prev_log_prob": 416, "new_log_prob": 416, "log_weight": 416, "appreci": [416, 425], "multihead": 416, "believ": 417, "scheme": [417, 440], "substanti": 417, "_pre_steps_log_hook": 417, "_pre_optim_hook": 417, "sub_batch": 417, "_post_loss_hook": 417, "_post_optim_hook": 417, "post_optim": [417, 421], "_post_optim_log": 417, "post_optim_log": 417, "_post_steps_hook": 417, "_post_steps_log_hook": 417, "post_steps_log": 417, "logginghook": 417, "logging_hook": 417, "save_dict": 417, "some_valu": 417, "torchsnapshot": 417, "ckpt_backend": 417, "filepath": 417, "save_train": 417, "000": [419, 438], "galleri": [419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 440], "mem": [419, 438], "mb": [419, 438], "coding_ddpg": [419, 420, 438], "coding_dqn": [419, 421, 438], "coding_ppo": [419, 422, 438], "dqn_with_rnn": [419, 423, 438], "multi_task": [419, 432, 438], "multiagent_competitive_ddpg": [419, 433, 438], "multiagent_ppo": [419, 434, 438], "pretrained_model": [419, 436, 438], "rb_tutori": [419, 437, 438], "torchrl_demo": [419, 438, 439], "torchrl_env": [419, 438, 440], "author": [420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 433, 434, 435, 437, 440], "vincent": [420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 435, 437, 440], "moen": [420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 435, 437, 440], "assembl": 420, "maxim": [420, 427, 435], "transpar": [420, 423], "bash": 420, "is_fork": [420, 421, 422, 423, 433, 434, 436], "get_start_method": [420, 421, 422, 423, 433, 434, 436], "collector_devic": 420, "loss_dict": 420, "modal": 420, "oblivi": [420, 422, 437], "elementari": 420, "didact": [420, 424], "dilut": 420, "pessimist": [420, 421, 422], "target_actor_network_param": 420, "actor_in_kei": 420, "actor_crit": 420, "compromis": 420, "hp": 420, "_value_estim": 420, "elif": [420, 421], "unknown": 420, "_loss_actor": 420, "td_copi": 420, "actor_network_param": [420, 433], "value_network_param": [420, 433], "_loss_valu": 420, "pred_val": 420, "target_value_network_param": 420, "glue": 420, "_forward": 420, "remaind": 420, "env_librari": 420, "env_task": 420, "env_arg": [420, 421], "torchr": 420, "rescal": 420, "presum": 420, "make_transformed_env": 420, "reward_sc": 420, "marker": 420, "env_per_collector": 420, "transform_state_dict": 420, "make_t_env": 420, "cheat": 420, "10m": 420, "cautiou": 420, "magnitud": [420, 433], "thousand": [420, 423], "get_env_stat": 420, "proof_env": 420, "5000": [420, 424, 430], "recal": [420, 422, 437], "ddpgmlpactor": 420, "ddpgmlpqnet": 420, "materi": 420, "ornsteinuhlenbeckprocessmodul": [420, 426], "make_ddpg_actor": 420, "q_net": 420, "tight": 420, "decoupl": [420, 427, 439], "10_000": [420, 422], "traj_len": [420, 423], "make_record": 420, "recorder_obj": 420, "pick": [420, 421, 426], "buffer_s": [420, 421], "random_crop_len": 420, "prb": 420, "buffer_scratch_dir": [420, 421, 423, 428, 436], "25": 420, "dataflow": 420, "ceil_div": 420, "utd": [420, 423], "update_to_data": 420, "realiz": 420, "_must_": 420, "001": [420, 435], "outdat": 420, "trick": [420, 421], "despit": 420, "optimizer_actor": 420, "weight_decai": [420, 421], "optimizer_valu": 420, "total_collection_step": 420, "rewards_ev": 420, "collected_fram": 420, "pbar": [420, 422, 423, 433, 434, 435], "numel": [420, 422, 423, 424, 430, 433, 436, 437], "current_fram": [420, 433], "sampled_tensordict": 420, "gn1": 420, "clip_grad_norm_": [420, 422, 433, 434, 435], "gn2": 420, "gn": [420, 435], "td_record": 420, "rn": 420, "set_descript": [420, 422, 423, 433, 434, 435], "2f": 420, "mention": [420, 423, 437, 440], "matplotlib": [420, 422, 423, 424, 433, 434, 435, 437, 440], "pyplot": [420, 422, 423, 424, 433, 434, 435, 437, 440], "plt": [420, 422, 423, 424, 433, 434, 435, 437, 440], "zip": [420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 440], "legend": [420, 433], "xlabel": [420, 423, 434, 435], "ylabel": [420, 434], "tight_layout": 420, "takeawai": [420, 421, 424], "distpatch": 420, "jupyt": [420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 440], "ipynb": [420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 439, 440], "sphinx": [420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 440], "road": 421, "aspect": [421, 427], "highest": [421, 426], "prerequisit": [421, 423], "lookup": 421, "cart": 421, "pole": 421, "un": 421, "actuat": 421, "frictionless": 421, "duelingcnndqnet": 421, "egreedymodul": [421, 423, 424, 426, 430], "is_notebook": 421, "shell": 421, "get_ipython": 421, "__class__": 421, "zmqinteractiveshel": 421, "qtconsol": 421, "terminalinteractiveshel": 421, "ipython": [421, 434, 435], "nameerror": [421, 433], "umbrella": 421, "misplac": 421, "misus": 421, "orchestr": [421, 427, 429], "five": 421, "64x64": 421, "motion": [421, 435], "obs_norm_sd": 421, "mp_context": 421, "simpler": [421, 425], "get_norm_stat": 421, "test_env": 421, "mathbb": 421, "rightarrow": 421, "make_model": 421, "dummy_env": 421, "init_bia": 421, "exploration_modul": [421, 423, 424, 426, 430], "eps_greedy_v": 421, "eps_greedy_val_env": 421, "actor_explor": 421, "get_replay_buff": 421, "n_optim": [421, 427, 428], "parametriz": 421, "get_collector": 421, "bunch": 421, "ubiquit": [421, 425], "get_loss_modul": 421, "target_updat": [421, 433], "995": 421, "hopefulli": 421, "variat": 421, "2e": [421, 435], "wd": 421, "upd": 421, "harder": [421, 439], "5_000": 421, "500000": 421, "100000": 421, "005": [421, 433], "mandatori": [421, 422, 434, 435], "fairer": 421, "budget": 421, "dqn_exp_": 421, "uuid1": [421, 440], "cumbersom": 421, "buffer_hook": 421, "weight_updat": 421, "aliv": 421, "total_reward": 421, "print_csv_files_in_fold": 421, "folder_path": 421, "csv_file": 421, "output_str": 421, "dirpath": 421, "endswith": 421, "strip": 421, "qvaluenetwork": 421, "accuraci": 421, "fanci": [421, 428], "demonstr": [422, 424, 428, 433, 434, 435, 437, 440], "talk": 422, "six": 422, "sophist": [422, 434], "invent": 422, "theta_k": 422, "pi_": 422, "exceed": 422, "discourag": [422, 435], "indispens": 422, "analyz": 422, "lingua": 422, "franca": 422, "defaultdict": [422, 435], "3e": [422, 423, 433, 434], "max_grad_norm": [422, 433, 434], "sub_batch_s": 422, "num_epoch": [422, 434], "entropy_ep": [422, 434], "charact": [422, 424], "inverteddoublependulum": 422, "transmit": 422, "stai": 422, "confid": [422, 433, 434], "ran": 422, "f_": 422, "mu_": 422, "difficulti": [422, 440], "d_ob": 422, "d_action": 422, "policy_modul": [422, 433, 434], "briefli": [422, 433, 434], "refil": [422, 434], "easiest": [422, 427, 433, 434], "mathemat": [422, 433, 434], "tradeoff": [422, 434], "advantage_modul": 422, "lr_schedul": [422, 435], "cosineannealinglr": [422, 435], "eval_str": 422, "tensordict_data": [422, 434], "data_view": [422, 434], "subdata": [422, 433, 434], "cum_reward_str": 422, "stepcount_str": 422, "param_group": [422, 433], "lr_str": 422, "eval_rollout": 422, "nice": [422, 425, 428], "cap": [422, 437], "figsiz": [422, 435], "subplot": [422, 433, 435, 440], "titl": [422, 423, 424, 434, 435], "84x84": [423, 424], "accessori": 423, "stamp": 423, "assist": 423, "n_cell": 423, "customiz": 423, "wouldn": 423, "qval": 423, "stoch_polici": 423, "opportun": [423, 433], "uniniti": 423, "again": [423, 424, 425, 426, 428, 434, 436, 437, 440], "strongli": 423, "million": 423, "sake": [423, 436, 437], "20_000": [423, 435], "longest": 423, "npai": 423, "action_spread": 423, "strong": 424, "impress": 424, "arduino": 424, "raspberri": 424, "pi": [424, 433, 434, 435], "alon": 424, "examplifi": 424, "ship": 424, "stick": 424, "nearest": 424, "value_mlp": [424, 430], "100_000": [424, 430], "init_rand_step": [424, 430], "total_count": [424, 430], "total_episod": [424, 430], "t0": [424, 430], "screen": [424, 433], "color": [424, 433], "unblock": 424, "policy_transform": 424, "fake_td": 424, "exported_polici": 424, "div": 424, "graph_modul": 424, "print_read": 424, "group0": 424, "group0_agent0_ob": 424, "collid": [424, 434], "group0_agent0": 424, "agent0_ob": 424, "comma": 424, "digress": 424, "exported_stochastic_polici": 424, "trace": 424, "batchsizetransform": 424, "hidden0": 424, "hidden1": 424, "recurrent_polici": 424, "fake_ob": 424, "fake_hidden0": 424, "fake_hidden1": 424, "fake_is_init": 424, "exported_recurrent_polici": 424, "platform": [424, 439], "aoti": 424, "_inductor": 424, "aoti_compile_and_packag": 424, "aoti_load_packag": 424, "pt2": 424, "pkg_path": 424, "package_path": 424, "compiled_modul": 424, "onnxruntim": 424, "showcas": [424, 435], "web": 424, "explain": [424, 436], "tensorrt": 424, "android": 424, "ale_pi": 424, "aleinterfac": 424, "rom": 424, "loadrom": 424, "reset_gam": 424, "screen_ob": 424, "getscreenrgb": 424, "tick_param": 424, "bottom": 424, "labelleft": 424, "labelbottom": 424, "imshow": [424, 440], "dynamo_export": 424, "onnx_policy_export": 424, "onnx_file_path": 424, "ort_sess": 424, "inferencesess": 424, "cpuexecutionprovid": 424, "onnxruntime_input": 424, "get_input": 424, "onnx_polici": 424, "lightweight": [424, 429], "onnxruntime_output": 424, "topic": [425, 426, 427], "straight": 425, "backtrack": 425, "reset_with_act": 425, "stepped_data": 425, "spatial": 425, "useless": 425, "policyless": 425, "examin": [425, 433], "tackl": 426, "delv": 426, "extractor": 426, "additivegaussianmodul": [426, 433], "exploration_polici": [426, 433], "greedili": 426, "2d": [426, 433, 434], "innov": [426, 427], "rollout_explor": 426, "sole": 427, "supervis": [427, 428, 437, 440], "n_collect": 427, "get_next_batch": 427, "concis": 427, "ddpg_loss": 427, "total_loss": 427, "prove": 427, "reliev": 427, "concern": 427, "accustom": 428, "surprisingli": 428, "fundament": 428, "art": [428, 433, 434], "countless": 428, "yourself": [428, 433, 434], "everywher": 429, "log_scalar": 429, "my_scalar": 429, "saw": [429, 435, 437], "excess": 429, "lesson": 430, "voluntarili": 430, "torchrl_logg": 430, "training_loop": 430, "video_record": 430, "arbitrarili": 430, "t1": 430, "conclud": [430, 436], "tutorials_python": 431, "tutorials_jupyt": 431, "env1_obs_kei": 432, "observation_stand": 432, "env2_obs_kei": 432, "observation_walk": 432, "tdreset1": 432, "tdreset2": 432, "lazy_stack": 432, "policy_common": 432, "policy_stand": 432, "policy_walk": 432, "But": 432, "env1_mak": 432, "env2_mak": 432, "_single_task": 432, "td_rollout": 432, "matteo": [433, 434], "bettini": [433, 434], "benchmarl": [433, 434], "simple_tag": 433, "maddpg": [433, 434], "multiagentparticleenviron": 433, "mpe": 433, "centralis": [433, 434], "tie": [433, 434], "iddpg": [433, 434], "richard": 433, "andrew": 433, "mit": 433, "press": 433, "2018": 433, "mathbf": [433, 434], "decentralis": [433, 434], "literatur": [433, 434], "overcom": [433, 434], "stationari": [433, 434], "establish": 433, "gui": [433, 434], "is_sphinx": 433, "__sphinx_build__": 433, "n_iter": [433, 434, 435], "evad": 433, "iteration_when_stop_training_evad": 433, "memory_s": 433, "n_optimiser_step": 433, "train_batch_s": 433, "polyak_tau": 433, "chaser": 433, "red": 433, "circl": [433, 434], "green": 433, "touch": [433, 435], "penal": [433, 434], "obstacl": 433, "drag": [433, 434], "elast": [433, 434], "collis": [433, 434], "imped": 433, "n_chaser": 433, "n_evad": 433, "n_obstacl": 433, "use_vma": 433, "simple_tag_v3": 433, "num_good": 433, "num_adversari": 433, "num_obstacl": 433, "max_cycl": 433, "num_vmas_env": [433, 434], "num_good_ag": 433, "num_landmark": 433, "four": [433, 434, 435], "n_agents_in_that_group": 433, "stress": [433, 434], "paramount": [433, 434], "n_rollout_step": [433, 434], "evolut": [433, 434], "group_nam": 433, "n_agents_in_group": 433, "minor": 433, "agents_exploration_polici": 433, "utilis": [433, 434], "n_obs_per_ag": [433, 434], "n_actions_per_ag": [433, 434], "share_parameters_polici": [433, 434], "policy_net": [433, 434], "_agent": 433, "grant": [433, 434], "converg": [433, 434], "share_parameters_crit": [433, 434], "obs_act": 433, "cat_modul": 433, "critic_modul": 433, "fantast": [433, 434], "reset_td": 433, "interfer": 433, "subject": [433, 435], "flatten_kei": 433, "process_batch": 433, "group_shap": 433, "get_item_shap": [433, 434], "nested_done_kei": 433, "nested_terminated_kei": 433, "desc": [433, 434], "episode_reward_mean_": 433, "episode_reward_mean_map": 433, "train_group_map": 433, "group_batch": 433, "_group": 433, "loss_nam": 433, "episode_reward_mean": [433, 434], "fig": [433, 437], "set_ylabel": 433, "axvlin": 433, "orang": 433, "set_xlabel": 433, "video_logg": 433, "vmas_log": 433, "env_with_rend": 433, "vmas_rend": 433, "print_log_dir": 433, "profici": [433, 434], "lidar": 434, "sensor": 434, "mappo": 434, "ippo": 434, "analys": 434, "visualis": 434, "vmas_devic": 434, "6_000": 434, "minibatch_s": 434, "generalis": 434, "simd": 434, "warp": 434, "todai": 434, "surround": 434, "dot": [434, 435], "scenario_nam": 434, "critic_net": 434, "minibatch": 434, "episode_reward_mean_list": 434, "critic_network_param": 434, "target_critic_network_param": 434, "xvfb": 434, "pyvirtualdisplai": 434, "1400": 434, "900": 434, "pil": 434, "rendering_callback": 434, "fromarrai": 434, "gif": 434, "save_al": 434, "append_imag": 434, "freeli": 435, "broader": 435, "wider": 435, "acquaint": 435, "avenu": 435, "_apply_to_composit": 435, "default_x": 435, "default_i": 435, "upward": 435, "angular": 435, "sin": 435, "rad": 435, "angl": 435, "deleg": 435, "new_th": 435, "new_thdot": 435, "g_forc": 435, "angle_norm": 435, "albeit": 435, "high_th": 435, "high_thdot": 435, "low_th": 435, "low_thdot": 435, "trivial": 435, "irrelev": 435, "_make_spec": 435, "td_param": 435, "render_fp": 435, "random_": 435, "_make_step": 435, "staticmethod": 435, "skeleton": 435, "unitari": 435, "sine": 435, "cosin": 435, "sintransform": 435, "costransform": 435, "t_sin": 435, "t_co": 435, "cat_transform": 435, "simple_rollout": 435, "unexplor": 435, "init_td": 435, "traj_return": 435, "last_reward": 435, "is_ipython": 435, "inlin": 435, "get_backend": 435, "ion": 435, "gcf": 435, "clear_output": 435, "r3mtransform": 436, "embodi": 436, "env_transform": [436, 440], "wiser": 436, "batteri": 437, "gc": 437, "buffer_list": 437, "lowest": 437, "medium": 437, "buffer_lazytensor": 437, "tempdir": 437, "buffer_lazymemmap": 437, "fullest": 437, "mydata": 437, "buffer_lazi": 437, "background": 437, "question": [437, 439], "_i": 437, "artifici": 437, "hamper": 437, "she": 437, "pars": 437, "proport": 437, "reappear": 437, "unfold": 437, "problemat": 437, "4th": 437, "prioritizedslicesampl": 437, "tensordictmaxvaluewrit": 437, "demo": 439, "icml": 439, "vmoen": 439, "fb": 439, "invest": 439, "media": 439, "predominantli": 439, "data2": 439, "sub_key1": 439, "scturctur": 439, "data_stack": 439, "data_sampl": 439, "_sampler": 439, "_sum_tre": 439, "modulenotfounderror": 439, "noopresetenv": [439, 440], "backbone_modul": 439, "params_expand": 439, "exec_sequ": 439, "tensordict_exp": 439, "base_modul": 439, "tensordicts_prealloc": 439, "tensordicts_stack": 439, "tensordict_rollout": [439, 440], "automatical": 439, "60": 439, "particularili": 439, "concatmodul": 439, "loss_td": 439, "contributor": 439, "curiou": 439, "nascent": 439, "unsupervis": 440, "unifi": 440, "_build_env": 440, "deserv": 440, "__episode__": 440, "__trajectory__": 440, "void": 440, "reproduct": 440, "tensordict_tprim": 440, "wrapper1": 440, "wrapper2": 440, "obviou": 440, "truth": 440, "env_transformed_bi": 440, "stanc": 440, "transformeddistribut": 440, "base_dist": 440, "concat": 440, "mofidi": 440, "transformedenviron": 440, "moderet": 440, "computation": 440, "incom": 440, "amongst": 440, "has_cuda": 440, "convention": 440, "markovian": 440, "bar_": 440, "get_someth": 440, "aargh": 440, "is_clos": 440, "foo_list": 440, "121": 440, "evolv": 440, "steadi": 440, "approx": 440, "absor": 440, "_extra_st": 440}, "objects": {"torchrl": [[12, 0, 1, "", "auto_unwrap_transformed_env"], [243, 0, 1, "", "implement_for"], [387, 0, 1, "", "set_auto_unwrap_transformed_env"]], "torchrl.collectors": [[13, 0, 1, "", "DataCollectorBase"], [14, 0, 1, "", "MultiSyncDataCollector"], [15, 0, 1, "", "MultiaSyncDataCollector"], [16, 0, 1, "", "SyncDataCollector"], [17, 0, 1, "", "WeightUpdateReceiverBase"], [18, 0, 1, "", "WeightUpdateSenderBase"], [19, 0, 1, "", "aSyncDataCollector"]], "torchrl.collectors.DataCollectorBase": [[13, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.MultiSyncDataCollector": [[14, 1, 1, "", "load_state_dict"], [14, 1, 1, "", "reset"], [14, 1, 1, "", "set_seed"], [14, 1, 1, "", "shutdown"], [14, 1, 1, "", "state_dict"], [14, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.MultiaSyncDataCollector": [[15, 1, 1, "", "load_state_dict"], [15, 1, 1, "", "reset"], [15, 1, 1, "", "set_seed"], [15, 1, 1, "", "shutdown"], [15, 1, 1, "", "state_dict"], [15, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.SyncDataCollector": [[16, 1, 1, "", "async_shutdown"], [16, 1, 1, "", "iterator"], [16, 1, 1, "", "load_state_dict"], [16, 1, 1, "", "reset"], [16, 1, 1, "", "rollout"], [16, 1, 1, "", "set_seed"], [16, 1, 1, "", "shutdown"], [16, 1, 1, "", "start"], [16, 1, 1, "", "state_dict"], [16, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.WeightUpdateReceiverBase": [[17, 1, 1, "", "register_collector"], [17, 1, 1, "", "update_weights"]], "torchrl.collectors.WeightUpdateSenderBase": [[18, 1, 1, "id0", "register_collector"], [18, 1, 1, "", "update_weights"]], "torchrl.collectors.aSyncDataCollector": [[19, 1, 1, "", "load_state_dict"], [19, 1, 1, "", "reset"], [19, 1, 1, "", "set_seed"], [19, 1, 1, "", "shutdown"], [19, 1, 1, "", "state_dict"], [19, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed": [[20, 0, 1, "", "DistributedDataCollector"], [21, 0, 1, "", "DistributedSyncDataCollector"], [22, 0, 1, "", "RPCDataCollector"], [23, 0, 1, "", "RayCollector"], [24, 0, 1, "", "submitit_delayed_launcher"]], "torchrl.collectors.distributed.DistributedDataCollector": [[20, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.DistributedSyncDataCollector": [[21, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RPCDataCollector": [[22, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RayCollector": [[23, 1, 1, "", "add_collectors"], [23, 1, 1, "", "async_shutdown"], [23, 1, 1, "", "load_state_dict"], [23, 1, 1, "", "local_policy"], [23, 2, 1, "", "remote_collectors"], [23, 1, 1, "", "set_seed"], [23, 1, 1, "", "shutdown"], [23, 1, 1, "", "start"], [23, 1, 1, "", "state_dict"], [23, 1, 1, "", "stop_remote_collectors"], [23, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.utils": [[25, 3, 1, "", "split_trajectories"]], "torchrl.data": [[26, 0, 1, "", "AdaptiveKLController"], [27, 0, 1, "", "Binary"], [28, 0, 1, "", "BinaryDiscreteTensorSpec"], [29, 0, 1, "", "BinaryToDecimal"], [30, 0, 1, "", "Bounded"], [31, 0, 1, "", "BoundedTensorSpec"], [32, 0, 1, "", "Categorical"], [33, 0, 1, "", "Composite"], [34, 0, 1, "", "CompositeSpec"], [35, 0, 1, "", "ConstantKLController"], [36, 0, 1, "", "DensifyReward"], [37, 0, 1, "", "DiscreteTensorSpec"], [38, 0, 1, "", "Flat2TED"], [39, 0, 1, "", "H5Combine"], [40, 0, 1, "", "H5Split"], [41, 0, 1, "", "HashToInt"], [42, 0, 1, "", "LazyStackedCompositeSpec"], [43, 0, 1, "", "LazyStackedTensorSpec"], [44, 0, 1, "", "MCTSForest"], [45, 0, 1, "", "MultiCategorical"], [46, 0, 1, "", "MultiDiscreteTensorSpec"], [47, 0, 1, "", "MultiOneHot"], [48, 0, 1, "", "MultiOneHotDiscreteTensorSpec"], [49, 0, 1, "", "MultiStep"], [50, 0, 1, "", "Nested2TED"], [51, 0, 1, "", "NonTensor"], [52, 0, 1, "", "NonTensorSpec"], [53, 0, 1, "", "OneHot"], [54, 0, 1, "", "OneHotDiscreteTensorSpec"], [55, 0, 1, "", "PairwiseDataset"], [56, 0, 1, "", "PrioritizedReplayBuffer"], [57, 0, 1, "", "PromptData"], [58, 0, 1, "", "PromptTensorDictTokenizer"], [59, 0, 1, "", "QueryModule"], [60, 0, 1, "", "RandomProjectionHash"], [61, 0, 1, "", "RayReplayBuffer"], [62, 0, 1, "", "RemoteTensorDictReplayBuffer"], [63, 0, 1, "", "ReplayBuffer"], [64, 0, 1, "", "RewardData"], [65, 0, 1, "", "RolloutFromModel"], [66, 0, 1, "", "SipHash"], [67, 0, 1, "", "Stacked"], [68, 0, 1, "", "StackedComposite"], [69, 0, 1, "", "TED2Flat"], [70, 0, 1, "", "TED2Nested"], [71, 0, 1, "", "TensorDictMap"], [72, 0, 1, "", "TensorDictPrioritizedReplayBuffer"], [73, 0, 1, "", "TensorDictReplayBuffer"], [74, 0, 1, "", "TensorDictTokenizer"], [75, 0, 1, "", "TensorMap"], [76, 0, 1, "", "TensorSpec"], [77, 0, 1, "", "TokenizedDatasetLoader"], [78, 0, 1, "", "Tree"], [79, 0, 1, "", "Unbounded"], [80, 0, 1, "", "UnboundedContinuous"], [81, 0, 1, "", "UnboundedContinuousTensorSpec"], [82, 0, 1, "", "UnboundedDiscrete"], [83, 0, 1, "", "UnboundedDiscreteTensorSpec"], [84, 0, 1, "", "check_no_exclusive_keys"], [85, 0, 1, "", "consolidate_spec"], [86, 0, 1, "", "contains_lazy_spec"], [87, 0, 1, "", "create_infinite_iterator"], [88, 0, 1, "", "get_dataloader"]], "torchrl.data.AdaptiveKLController": [[26, 1, 1, "", "update"]], "torchrl.data.Binary": [[27, 1, 1, "", "assert_is_in"], [27, 1, 1, "", "cardinality"], [27, 1, 1, "", "clear_device_"], [27, 1, 1, "", "clone"], [27, 1, 1, "", "contains"], [27, 1, 1, "", "cpu"], [27, 1, 1, "", "cuda"], [27, 4, 1, "", "device"], [27, 1, 1, "", "encode"], [27, 1, 1, "", "enumerate"], [27, 1, 1, "", "erase_memoize_cache"], [27, 1, 1, "", "expand"], [27, 1, 1, "", "flatten"], [27, 1, 1, "", "implements_for_spec"], [27, 1, 1, "", "index"], [27, 1, 1, "", "is_in"], [27, 1, 1, "", "make_neg_dim"], [27, 1, 1, "", "memoize_encode"], [27, 2, 1, "", "ndim"], [27, 1, 1, "", "ndimension"], [27, 1, 1, "", "one"], [27, 1, 1, "", "ones"], [27, 1, 1, "", "project"], [27, 1, 1, "", "rand"], [27, 1, 1, "", "reshape"], [27, 1, 1, "", "sample"], [27, 1, 1, "", "set_provisional_n"], [27, 1, 1, "", "squeeze"], [27, 1, 1, "", "to"], [27, 1, 1, "", "to_categorical"], [27, 1, 1, "", "to_categorical_spec"], [27, 1, 1, "", "to_numpy"], [27, 1, 1, "", "to_one_hot"], [27, 1, 1, "", "to_one_hot_spec"], [27, 1, 1, "", "type_check"], [27, 1, 1, "", "unflatten"], [27, 1, 1, "", "unsqueeze"], [27, 1, 1, "", "update_mask"], [27, 1, 1, "", "view"], [27, 1, 1, "", "zero"], [27, 1, 1, "", "zeros"]], "torchrl.data.BinaryDiscreteTensorSpec": [[28, 1, 1, "", "assert_is_in"], [28, 1, 1, "", "cardinality"], [28, 1, 1, "", "clear_device_"], [28, 1, 1, "", "clone"], [28, 1, 1, "", "contains"], [28, 1, 1, "", "cpu"], [28, 1, 1, "", "cuda"], [28, 4, 1, "", "device"], [28, 1, 1, "", "encode"], [28, 1, 1, "", "enumerate"], [28, 1, 1, "", "erase_memoize_cache"], [28, 1, 1, "", "expand"], [28, 1, 1, "", "flatten"], [28, 1, 1, "", "implements_for_spec"], [28, 1, 1, "", "index"], [28, 1, 1, "", "is_in"], [28, 1, 1, "", "make_neg_dim"], [28, 1, 1, "", "memoize_encode"], [28, 2, 1, "", "ndim"], [28, 1, 1, "", "ndimension"], [28, 1, 1, "", "one"], [28, 1, 1, "", "ones"], [28, 1, 1, "", "project"], [28, 1, 1, "", "rand"], [28, 1, 1, "", "reshape"], [28, 1, 1, "", "sample"], [28, 1, 1, "", "set_provisional_n"], [28, 1, 1, "", "squeeze"], [28, 1, 1, "", "to"], [28, 1, 1, "", "to_categorical"], [28, 1, 1, "", "to_categorical_spec"], [28, 1, 1, "", "to_numpy"], [28, 1, 1, "", "to_one_hot"], [28, 1, 1, "", "to_one_hot_spec"], [28, 1, 1, "", "type_check"], [28, 1, 1, "", "unflatten"], [28, 1, 1, "", "unsqueeze"], [28, 1, 1, "", "update_mask"], [28, 1, 1, "", "view"], [28, 1, 1, "", "zero"], [28, 1, 1, "", "zeros"]], "torchrl.data.BinaryToDecimal": [[29, 1, 1, "", "add_module"], [29, 1, 1, "", "apply"], [29, 1, 1, "", "bfloat16"], [29, 1, 1, "", "buffers"], [29, 1, 1, "", "children"], [29, 1, 1, "", "compile"], [29, 1, 1, "", "cpu"], [29, 1, 1, "", "cuda"], [29, 1, 1, "", "double"], [29, 1, 1, "", "eval"], [29, 1, 1, "", "extra_repr"], [29, 1, 1, "", "float"], [29, 1, 1, "", "forward"], [29, 1, 1, "", "get_buffer"], [29, 1, 1, "", "get_extra_state"], [29, 1, 1, "", "get_parameter"], [29, 1, 1, "", "get_submodule"], [29, 1, 1, "", "half"], [29, 1, 1, "", "ipu"], [29, 1, 1, "", "load_state_dict"], [29, 1, 1, "", "modules"], [29, 1, 1, "", "mtia"], [29, 1, 1, "", "named_buffers"], [29, 1, 1, "", "named_children"], [29, 1, 1, "", "named_modules"], [29, 1, 1, "", "named_parameters"], [29, 1, 1, "", "parameters"], [29, 1, 1, "", "register_backward_hook"], [29, 1, 1, "", "register_buffer"], [29, 1, 1, "", "register_forward_hook"], [29, 1, 1, "", "register_forward_pre_hook"], [29, 1, 1, "", "register_full_backward_hook"], [29, 1, 1, "", "register_full_backward_pre_hook"], [29, 1, 1, "", "register_load_state_dict_post_hook"], [29, 1, 1, "", "register_load_state_dict_pre_hook"], [29, 1, 1, "", "register_module"], [29, 1, 1, "", "register_parameter"], [29, 1, 1, "", "register_state_dict_post_hook"], [29, 1, 1, "", "register_state_dict_pre_hook"], [29, 1, 1, "", "requires_grad_"], [29, 1, 1, "", "set_extra_state"], [29, 1, 1, "", "set_submodule"], [29, 1, 1, "", "share_memory"], [29, 1, 1, "", "state_dict"], [29, 1, 1, "", "to"], [29, 1, 1, "", "to_empty"], [29, 1, 1, "", "train"], [29, 1, 1, "", "type"], [29, 1, 1, "", "xpu"], [29, 1, 1, "", "zero_grad"]], "torchrl.data.Bounded": [[30, 1, 1, "", "assert_is_in"], [30, 1, 1, "", "cardinality"], [30, 1, 1, "", "clear_device_"], [30, 1, 1, "", "clone"], [30, 1, 1, "", "contains"], [30, 1, 1, "", "cpu"], [30, 1, 1, "", "cuda"], [30, 2, 1, "", "device"], [30, 1, 1, "", "encode"], [30, 1, 1, "", "enumerate"], [30, 1, 1, "", "erase_memoize_cache"], [30, 1, 1, "", "expand"], [30, 1, 1, "", "flatten"], [30, 1, 1, "", "implements_for_spec"], [30, 1, 1, "", "index"], [30, 1, 1, "", "is_in"], [30, 1, 1, "", "make_neg_dim"], [30, 1, 1, "", "memoize_encode"], [30, 2, 1, "", "ndim"], [30, 1, 1, "", "ndimension"], [30, 1, 1, "", "one"], [30, 1, 1, "", "ones"], [30, 1, 1, "", "project"], [30, 1, 1, "", "rand"], [30, 1, 1, "", "reshape"], [30, 1, 1, "", "sample"], [30, 1, 1, "", "squeeze"], [30, 1, 1, "", "to"], [30, 1, 1, "", "to_numpy"], [30, 1, 1, "", "type_check"], [30, 1, 1, "", "unflatten"], [30, 1, 1, "", "unsqueeze"], [30, 1, 1, "", "view"], [30, 1, 1, "", "zero"], [30, 1, 1, "", "zeros"]], "torchrl.data.BoundedTensorSpec": [[31, 1, 1, "", "assert_is_in"], [31, 1, 1, "", "cardinality"], [31, 1, 1, "", "clear_device_"], [31, 1, 1, "", "clone"], [31, 1, 1, "", "contains"], [31, 1, 1, "", "cpu"], [31, 1, 1, "", "cuda"], [31, 2, 1, "", "device"], [31, 1, 1, "", "encode"], [31, 1, 1, "", "enumerate"], [31, 1, 1, "", "erase_memoize_cache"], [31, 1, 1, "", "expand"], [31, 1, 1, "", "flatten"], [31, 1, 1, "", "implements_for_spec"], [31, 1, 1, "", "index"], [31, 1, 1, "", "is_in"], [31, 1, 1, "", "make_neg_dim"], [31, 1, 1, "", "memoize_encode"], [31, 2, 1, "", "ndim"], [31, 1, 1, "", "ndimension"], [31, 1, 1, "", "one"], [31, 1, 1, "", "ones"], [31, 1, 1, "", "project"], [31, 1, 1, "", "rand"], [31, 1, 1, "", "reshape"], [31, 1, 1, "", "sample"], [31, 1, 1, "", "squeeze"], [31, 1, 1, "", "to"], [31, 1, 1, "", "to_numpy"], [31, 1, 1, "", "type_check"], [31, 1, 1, "", "unflatten"], [31, 1, 1, "", "unsqueeze"], [31, 1, 1, "", "view"], [31, 1, 1, "", "zero"], [31, 1, 1, "", "zeros"]], "torchrl.data.Categorical": [[32, 1, 1, "", "assert_is_in"], [32, 1, 1, "", "cardinality"], [32, 1, 1, "", "clear_device_"], [32, 1, 1, "", "clone"], [32, 1, 1, "", "contains"], [32, 1, 1, "", "cpu"], [32, 1, 1, "", "cuda"], [32, 4, 1, "", "device"], [32, 1, 1, "", "encode"], [32, 1, 1, "", "enumerate"], [32, 1, 1, "", "erase_memoize_cache"], [32, 1, 1, "", "expand"], [32, 1, 1, "", "flatten"], [32, 1, 1, "", "implements_for_spec"], [32, 1, 1, "", "index"], [32, 1, 1, "", "is_in"], [32, 1, 1, "", "make_neg_dim"], [32, 1, 1, "", "memoize_encode"], [32, 2, 1, "", "ndim"], [32, 1, 1, "", "ndimension"], [32, 1, 1, "", "one"], [32, 1, 1, "", "ones"], [32, 1, 1, "", "project"], [32, 1, 1, "", "rand"], [32, 1, 1, "", "reshape"], [32, 1, 1, "", "sample"], [32, 1, 1, "", "set_provisional_n"], [32, 1, 1, "", "squeeze"], [32, 1, 1, "", "to"], [32, 1, 1, "", "to_categorical"], [32, 1, 1, "", "to_categorical_spec"], [32, 1, 1, "", "to_numpy"], [32, 1, 1, "", "to_one_hot"], [32, 1, 1, "", "to_one_hot_spec"], [32, 1, 1, "", "type_check"], [32, 1, 1, "", "unflatten"], [32, 1, 1, "", "unsqueeze"], [32, 1, 1, "", "update_mask"], [32, 1, 1, "", "view"], [32, 1, 1, "", "zero"], [32, 1, 1, "", "zeros"]], "torchrl.data.Composite": [[33, 1, 1, "", "assert_is_in"], [33, 1, 1, "", "cardinality"], [33, 1, 1, "", "clear_device_"], [33, 1, 1, "", "clone"], [33, 1, 1, "", "contains"], [33, 1, 1, "", "cpu"], [33, 1, 1, "", "cuda"], [33, 2, 1, "", "device"], [33, 1, 1, "", "empty"], [33, 1, 1, "", "encode"], [33, 1, 1, "", "enumerate"], [33, 1, 1, "", "erase_memoize_cache"], [33, 1, 1, "", "expand"], [33, 1, 1, "", "flatten"], [33, 1, 1, "", "get"], [33, 1, 1, "", "implements_for_spec"], [33, 1, 1, "", "index"], [33, 1, 1, "", "is_empty"], [33, 1, 1, "", "is_in"], [33, 1, 1, "", "items"], [33, 1, 1, "", "keys"], [33, 1, 1, "", "lock_"], [33, 1, 1, "", "make_neg_dim"], [33, 1, 1, "", "memoize_encode"], [33, 2, 1, "", "ndim"], [33, 1, 1, "", "ndimension"], [33, 1, 1, "", "one"], [33, 1, 1, "", "ones"], [33, 1, 1, "", "pop"], [33, 1, 1, "", "project"], [33, 1, 1, "", "rand"], [33, 1, 1, "", "reshape"], [33, 1, 1, "", "sample"], [33, 1, 1, "", "separates"], [33, 1, 1, "", "set"], [33, 1, 1, "", "squeeze"], [33, 1, 1, "", "to"], [33, 1, 1, "", "to_numpy"], [33, 1, 1, "", "type_check"], [33, 1, 1, "", "unflatten"], [33, 1, 1, "", "unlock_"], [33, 1, 1, "", "unsqueeze"], [33, 1, 1, "", "values"], [33, 1, 1, "", "view"], [33, 1, 1, "", "zero"], [33, 1, 1, "", "zeros"]], "torchrl.data.CompositeSpec": [[34, 1, 1, "", "assert_is_in"], [34, 1, 1, "", "cardinality"], [34, 1, 1, "", "clear_device_"], [34, 1, 1, "", "clone"], [34, 1, 1, "", "contains"], [34, 1, 1, "", "cpu"], [34, 1, 1, "", "cuda"], [34, 2, 1, "", "device"], [34, 1, 1, "", "empty"], [34, 1, 1, "", "encode"], [34, 1, 1, "", "enumerate"], [34, 1, 1, "", "erase_memoize_cache"], [34, 1, 1, "", "expand"], [34, 1, 1, "", "flatten"], [34, 1, 1, "", "get"], [34, 1, 1, "", "implements_for_spec"], [34, 1, 1, "", "index"], [34, 1, 1, "", "is_empty"], [34, 1, 1, "", "is_in"], [34, 1, 1, "", "items"], [34, 1, 1, "", "keys"], [34, 1, 1, "", "lock_"], [34, 1, 1, "", "make_neg_dim"], [34, 1, 1, "", "memoize_encode"], [34, 2, 1, "", "ndim"], [34, 1, 1, "", "ndimension"], [34, 1, 1, "", "one"], [34, 1, 1, "", "ones"], [34, 1, 1, "", "pop"], [34, 1, 1, "", "project"], [34, 1, 1, "", "rand"], [34, 1, 1, "", "reshape"], [34, 1, 1, "", "sample"], [34, 1, 1, "", "separates"], [34, 1, 1, "", "set"], [34, 1, 1, "", "squeeze"], [34, 1, 1, "", "to"], [34, 1, 1, "", "to_numpy"], [34, 1, 1, "", "type_check"], [34, 1, 1, "", "unflatten"], [34, 1, 1, "", "unlock_"], [34, 1, 1, "", "unsqueeze"], [34, 1, 1, "", "values"], [34, 1, 1, "", "view"], [34, 1, 1, "", "zero"], [34, 1, 1, "", "zeros"]], "torchrl.data.DensifyReward": [[36, 1, 1, "", "add_module"], [36, 1, 1, "", "apply"], [36, 1, 1, "", "bfloat16"], [36, 1, 1, "", "buffers"], [36, 1, 1, "", "children"], [36, 1, 1, "", "compile"], [36, 1, 1, "", "cpu"], [36, 1, 1, "", "cuda"], [36, 1, 1, "", "double"], [36, 1, 1, "", "eval"], [36, 1, 1, "", "extra_repr"], [36, 1, 1, "", "float"], [36, 1, 1, "", "forward"], [36, 1, 1, "", "get_buffer"], [36, 1, 1, "", "get_extra_state"], [36, 1, 1, "", "get_parameter"], [36, 1, 1, "", "get_submodule"], [36, 1, 1, "", "half"], [36, 1, 1, "", "ipu"], [36, 1, 1, "", "is_tdmodule_compatible"], [36, 1, 1, "", "load_state_dict"], [36, 1, 1, "", "modules"], [36, 1, 1, "", "mtia"], [36, 1, 1, "", "named_buffers"], [36, 1, 1, "", "named_children"], [36, 1, 1, "", "named_modules"], [36, 1, 1, "", "named_parameters"], [36, 1, 1, "", "parameters"], [36, 1, 1, "", "register_backward_hook"], [36, 1, 1, "", "register_buffer"], [36, 1, 1, "", "register_forward_hook"], [36, 1, 1, "", "register_forward_pre_hook"], [36, 1, 1, "", "register_full_backward_hook"], [36, 1, 1, "", "register_full_backward_pre_hook"], [36, 1, 1, "", "register_load_state_dict_post_hook"], [36, 1, 1, "", "register_load_state_dict_pre_hook"], [36, 1, 1, "", "register_module"], [36, 1, 1, "", "register_parameter"], [36, 1, 1, "", "register_state_dict_post_hook"], [36, 1, 1, "", "register_state_dict_pre_hook"], [36, 1, 1, "", "requires_grad_"], [36, 1, 1, "", "reset_out_keys"], [36, 1, 1, "", "reset_parameters_recursive"], [36, 1, 1, "", "select_out_keys"], [36, 1, 1, "", "set_extra_state"], [36, 1, 1, "", "set_submodule"], [36, 1, 1, "", "share_memory"], [36, 1, 1, "", "state_dict"], [36, 1, 1, "", "to"], [36, 1, 1, "", "to_empty"], [36, 1, 1, "", "train"], [36, 1, 1, "", "type"], [36, 1, 1, "", "xpu"], [36, 1, 1, "", "zero_grad"]], "torchrl.data.DiscreteTensorSpec": [[37, 1, 1, "", "assert_is_in"], [37, 1, 1, "", "cardinality"], [37, 1, 1, "", "clear_device_"], [37, 1, 1, "", "clone"], [37, 1, 1, "", "contains"], [37, 1, 1, "", "cpu"], [37, 1, 1, "", "cuda"], [37, 4, 1, "", "device"], [37, 1, 1, "", "encode"], [37, 1, 1, "", "enumerate"], [37, 1, 1, "", "erase_memoize_cache"], [37, 1, 1, "", "expand"], [37, 1, 1, "", "flatten"], [37, 1, 1, "", "implements_for_spec"], [37, 1, 1, "", "index"], [37, 1, 1, "", "is_in"], [37, 1, 1, "", "make_neg_dim"], [37, 1, 1, "", "memoize_encode"], [37, 2, 1, "", "ndim"], [37, 1, 1, "", "ndimension"], [37, 1, 1, "", "one"], [37, 1, 1, "", "ones"], [37, 1, 1, "", "project"], [37, 1, 1, "", "rand"], [37, 1, 1, "", "reshape"], [37, 1, 1, "", "sample"], [37, 1, 1, "", "set_provisional_n"], [37, 1, 1, "", "squeeze"], [37, 1, 1, "", "to"], [37, 1, 1, "", "to_categorical"], [37, 1, 1, "", "to_categorical_spec"], [37, 1, 1, "", "to_numpy"], [37, 1, 1, "", "to_one_hot"], [37, 1, 1, "", "to_one_hot_spec"], [37, 1, 1, "", "type_check"], [37, 1, 1, "", "unflatten"], [37, 1, 1, "", "unsqueeze"], [37, 1, 1, "", "update_mask"], [37, 1, 1, "", "view"], [37, 1, 1, "", "zero"], [37, 1, 1, "", "zeros"]], "torchrl.data.HashToInt": [[41, 1, 1, "", "add_module"], [41, 1, 1, "", "apply"], [41, 1, 1, "", "bfloat16"], [41, 1, 1, "", "buffers"], [41, 1, 1, "", "children"], [41, 1, 1, "", "compile"], [41, 1, 1, "", "cpu"], [41, 1, 1, "", "cuda"], [41, 1, 1, "", "double"], [41, 1, 1, "", "eval"], [41, 1, 1, "", "extra_repr"], [41, 1, 1, "", "float"], [41, 1, 1, "", "forward"], [41, 1, 1, "", "get_buffer"], [41, 1, 1, "", "get_extra_state"], [41, 1, 1, "", "get_parameter"], [41, 1, 1, "", "get_submodule"], [41, 1, 1, "", "half"], [41, 1, 1, "", "ipu"], [41, 1, 1, "", "load_state_dict"], [41, 1, 1, "", "modules"], [41, 1, 1, "", "mtia"], [41, 1, 1, "", "named_buffers"], [41, 1, 1, "", "named_children"], [41, 1, 1, "", "named_modules"], [41, 1, 1, "", "named_parameters"], [41, 1, 1, "", "parameters"], [41, 1, 1, "", "register_backward_hook"], [41, 1, 1, "", "register_buffer"], [41, 1, 1, "", "register_forward_hook"], [41, 1, 1, "", "register_forward_pre_hook"], [41, 1, 1, "", "register_full_backward_hook"], [41, 1, 1, "", "register_full_backward_pre_hook"], [41, 1, 1, "", "register_load_state_dict_post_hook"], [41, 1, 1, "", "register_load_state_dict_pre_hook"], [41, 1, 1, "", "register_module"], [41, 1, 1, "", "register_parameter"], [41, 1, 1, "", "register_state_dict_post_hook"], [41, 1, 1, "", "register_state_dict_pre_hook"], [41, 1, 1, "", "requires_grad_"], [41, 1, 1, "", "set_extra_state"], [41, 1, 1, "", "set_submodule"], [41, 1, 1, "", "share_memory"], [41, 1, 1, "", "state_dict"], [41, 1, 1, "", "to"], [41, 1, 1, "", "to_empty"], [41, 1, 1, "", "train"], [41, 1, 1, "", "type"], [41, 1, 1, "", "xpu"], [41, 1, 1, "", "zero_grad"]], "torchrl.data.LazyStackedCompositeSpec": [[42, 1, 1, "", "assert_is_in"], [42, 1, 1, "", "cardinality"], [42, 1, 1, "", "clear_device_"], [42, 1, 1, "", "clone"], [42, 1, 1, "", "contains"], [42, 1, 1, "", "cpu"], [42, 1, 1, "", "cuda"], [42, 2, 1, "", "device"], [42, 1, 1, "", "empty"], [42, 1, 1, "", "encode"], [42, 1, 1, "", "enumerate"], [42, 1, 1, "", "erase_memoize_cache"], [42, 1, 1, "", "expand"], [42, 1, 1, "", "flatten"], [42, 1, 1, "", "get"], [42, 1, 1, "", "implements_for_spec"], [42, 1, 1, "", "index"], [42, 1, 1, "", "is_empty"], [42, 1, 1, "", "is_in"], [42, 1, 1, "", "items"], [42, 1, 1, "", "keys"], [42, 1, 1, "", "lock_"], [42, 1, 1, "", "make_neg_dim"], [42, 1, 1, "", "memoize_encode"], [42, 2, 1, "", "ndim"], [42, 1, 1, "", "ndimension"], [42, 1, 1, "", "one"], [42, 1, 1, "", "ones"], [42, 1, 1, "", "pop"], [42, 1, 1, "", "project"], [42, 1, 1, "", "rand"], [42, 1, 1, "", "reshape"], [42, 1, 1, "", "sample"], [42, 1, 1, "", "separates"], [42, 1, 1, "", "set"], [42, 1, 1, "", "squeeze"], [42, 1, 1, "", "to"], [42, 1, 1, "", "to_numpy"], [42, 1, 1, "", "type_check"], [42, 1, 1, "", "unflatten"], [42, 1, 1, "", "unlock_"], [42, 1, 1, "", "unsqueeze"], [42, 1, 1, "", "values"], [42, 1, 1, "", "view"], [42, 1, 1, "", "zero"], [42, 1, 1, "", "zeros"]], "torchrl.data.LazyStackedTensorSpec": [[43, 1, 1, "", "assert_is_in"], [43, 1, 1, "", "cardinality"], [43, 1, 1, "", "clear_device_"], [43, 1, 1, "", "clone"], [43, 1, 1, "", "contains"], [43, 1, 1, "", "cpu"], [43, 1, 1, "", "cuda"], [43, 2, 1, "", "device"], [43, 1, 1, "", "encode"], [43, 1, 1, "", "enumerate"], [43, 1, 1, "", "erase_memoize_cache"], [43, 1, 1, "", "expand"], [43, 1, 1, "", "flatten"], [43, 1, 1, "", "implements_for_spec"], [43, 1, 1, "", "index"], [43, 1, 1, "", "is_in"], [43, 1, 1, "", "make_neg_dim"], [43, 1, 1, "", "memoize_encode"], [43, 2, 1, "", "ndim"], [43, 1, 1, "", "ndimension"], [43, 1, 1, "", "one"], [43, 1, 1, "", "ones"], [43, 1, 1, "", "project"], [43, 1, 1, "", "rand"], [43, 1, 1, "", "reshape"], [43, 1, 1, "", "sample"], [43, 1, 1, "", "squeeze"], [43, 1, 1, "", "to"], [43, 1, 1, "", "to_numpy"], [43, 1, 1, "", "type_check"], [43, 1, 1, "", "unflatten"], [43, 1, 1, "", "unsqueeze"], [43, 1, 1, "", "view"], [43, 1, 1, "", "zero"], [43, 1, 1, "", "zeros"]], "torchrl.data.MCTSForest": [[44, 2, 1, "", "action_keys"], [44, 2, 1, "", "done_keys"], [44, 1, 1, "", "extend"], [44, 1, 1, "", "get_keys_from_env"], [44, 2, 1, "", "observation_keys"], [44, 2, 1, "", "reward_keys"], [44, 1, 1, "", "to_string"]], "torchrl.data.MultiCategorical": [[45, 1, 1, "", "assert_is_in"], [45, 1, 1, "", "cardinality"], [45, 1, 1, "", "clear_device_"], [45, 1, 1, "", "clone"], [45, 1, 1, "", "contains"], [45, 1, 1, "", "cpu"], [45, 1, 1, "", "cuda"], [45, 4, 1, "", "device"], [45, 1, 1, "", "encode"], [45, 1, 1, "", "enumerate"], [45, 1, 1, "", "erase_memoize_cache"], [45, 1, 1, "", "expand"], [45, 1, 1, "", "flatten"], [45, 1, 1, "", "implements_for_spec"], [45, 1, 1, "", "index"], [45, 1, 1, "", "is_in"], [45, 1, 1, "", "make_neg_dim"], [45, 1, 1, "", "memoize_encode"], [45, 2, 1, "", "ndim"], [45, 1, 1, "", "ndimension"], [45, 1, 1, "", "one"], [45, 1, 1, "", "ones"], [45, 1, 1, "", "project"], [45, 1, 1, "", "rand"], [45, 1, 1, "", "reshape"], [45, 1, 1, "", "sample"], [45, 1, 1, "", "set_provisional_n"], [45, 1, 1, "", "squeeze"], [45, 1, 1, "", "to"], [45, 1, 1, "", "to_categorical"], [45, 1, 1, "", "to_categorical_spec"], [45, 1, 1, "", "to_numpy"], [45, 1, 1, "", "to_one_hot"], [45, 1, 1, "", "to_one_hot_spec"], [45, 1, 1, "", "type_check"], [45, 1, 1, "", "unflatten"], [45, 1, 1, "", "unsqueeze"], [45, 1, 1, "", "update_mask"], [45, 1, 1, "", "view"], [45, 1, 1, "", "zero"], [45, 1, 1, "", "zeros"]], "torchrl.data.MultiDiscreteTensorSpec": [[46, 1, 1, "", "assert_is_in"], [46, 1, 1, "", "cardinality"], [46, 1, 1, "", "clear_device_"], [46, 1, 1, "", "clone"], [46, 1, 1, "", "contains"], [46, 1, 1, "", "cpu"], [46, 1, 1, "", "cuda"], [46, 4, 1, "", "device"], [46, 1, 1, "", "encode"], [46, 1, 1, "", "enumerate"], [46, 1, 1, "", "erase_memoize_cache"], [46, 1, 1, "", "expand"], [46, 1, 1, "", "flatten"], [46, 1, 1, "", "implements_for_spec"], [46, 1, 1, "", "index"], [46, 1, 1, "", "is_in"], [46, 1, 1, "", "make_neg_dim"], [46, 1, 1, "", "memoize_encode"], [46, 2, 1, "", "ndim"], [46, 1, 1, "", "ndimension"], [46, 1, 1, "", "one"], [46, 1, 1, "", "ones"], [46, 1, 1, "", "project"], [46, 1, 1, "", "rand"], [46, 1, 1, "", "reshape"], [46, 1, 1, "", "sample"], [46, 1, 1, "", "set_provisional_n"], [46, 1, 1, "", "squeeze"], [46, 1, 1, "", "to"], [46, 1, 1, "", "to_categorical"], [46, 1, 1, "", "to_categorical_spec"], [46, 1, 1, "", "to_numpy"], [46, 1, 1, "", "to_one_hot"], [46, 1, 1, "", "to_one_hot_spec"], [46, 1, 1, "", "type_check"], [46, 1, 1, "", "unflatten"], [46, 1, 1, "", "unsqueeze"], [46, 1, 1, "", "update_mask"], [46, 1, 1, "", "view"], [46, 1, 1, "", "zero"], [46, 1, 1, "", "zeros"]], "torchrl.data.MultiOneHot": [[47, 1, 1, "", "assert_is_in"], [47, 1, 1, "", "cardinality"], [47, 1, 1, "", "clear_device_"], [47, 1, 1, "", "clone"], [47, 1, 1, "", "contains"], [47, 1, 1, "", "cpu"], [47, 1, 1, "", "cuda"], [47, 4, 1, "", "device"], [47, 1, 1, "", "encode"], [47, 1, 1, "", "enumerate"], [47, 1, 1, "", "erase_memoize_cache"], [47, 1, 1, "", "expand"], [47, 1, 1, "", "flatten"], [47, 1, 1, "", "implements_for_spec"], [47, 1, 1, "", "index"], [47, 1, 1, "", "is_in"], [47, 1, 1, "", "make_neg_dim"], [47, 1, 1, "", "memoize_encode"], [47, 2, 1, "", "ndim"], [47, 1, 1, "", "ndimension"], [47, 1, 1, "", "one"], [47, 1, 1, "", "ones"], [47, 1, 1, "", "project"], [47, 1, 1, "", "rand"], [47, 1, 1, "", "reshape"], [47, 1, 1, "", "sample"], [47, 1, 1, "", "squeeze"], [47, 1, 1, "", "to"], [47, 1, 1, "", "to_categorical"], [47, 1, 1, "", "to_categorical_spec"], [47, 1, 1, "", "to_numpy"], [47, 1, 1, "", "to_one_hot"], [47, 1, 1, "", "to_one_hot_spec"], [47, 1, 1, "", "type_check"], [47, 1, 1, "", "unflatten"], [47, 1, 1, "", "unsqueeze"], [47, 1, 1, "", "update_mask"], [47, 1, 1, "", "view"], [47, 1, 1, "", "zero"], [47, 1, 1, "", "zeros"]], "torchrl.data.MultiOneHotDiscreteTensorSpec": [[48, 1, 1, "", "assert_is_in"], [48, 1, 1, "", "cardinality"], [48, 1, 1, "", "clear_device_"], [48, 1, 1, "", "clone"], [48, 1, 1, "", "contains"], [48, 1, 1, "", "cpu"], [48, 1, 1, "", "cuda"], [48, 4, 1, "", "device"], [48, 1, 1, "", "encode"], [48, 1, 1, "", "enumerate"], [48, 1, 1, "", "erase_memoize_cache"], [48, 1, 1, "", "expand"], [48, 1, 1, "", "flatten"], [48, 1, 1, "", "implements_for_spec"], [48, 1, 1, "", "index"], [48, 1, 1, "", "is_in"], [48, 1, 1, "", "make_neg_dim"], [48, 1, 1, "", "memoize_encode"], [48, 2, 1, "", "ndim"], [48, 1, 1, "", "ndimension"], [48, 1, 1, "", "one"], [48, 1, 1, "", "ones"], [48, 1, 1, "", "project"], [48, 1, 1, "", "rand"], [48, 1, 1, "", "reshape"], [48, 1, 1, "", "sample"], [48, 1, 1, "", "squeeze"], [48, 1, 1, "", "to"], [48, 1, 1, "", "to_categorical"], [48, 1, 1, "", "to_categorical_spec"], [48, 1, 1, "", "to_numpy"], [48, 1, 1, "", "to_one_hot"], [48, 1, 1, "", "to_one_hot_spec"], [48, 1, 1, "", "type_check"], [48, 1, 1, "", "unflatten"], [48, 1, 1, "", "unsqueeze"], [48, 1, 1, "", "update_mask"], [48, 1, 1, "", "view"], [48, 1, 1, "", "zero"], [48, 1, 1, "", "zeros"]], "torchrl.data.MultiStep": [[49, 1, 1, "", "add_module"], [49, 1, 1, "", "apply"], [49, 1, 1, "", "bfloat16"], [49, 1, 1, "", "buffers"], [49, 1, 1, "", "children"], [49, 1, 1, "", "compile"], [49, 1, 1, "", "cpu"], [49, 1, 1, "", "cuda"], [49, 1, 1, "", "double"], [49, 1, 1, "", "eval"], [49, 1, 1, "", "extra_repr"], [49, 1, 1, "", "float"], [49, 1, 1, "", "forward"], [49, 1, 1, "", "get_buffer"], [49, 1, 1, "", "get_extra_state"], [49, 1, 1, "", "get_parameter"], [49, 1, 1, "", "get_submodule"], [49, 1, 1, "", "half"], [49, 1, 1, "", "ipu"], [49, 1, 1, "", "load_state_dict"], [49, 1, 1, "", "modules"], [49, 1, 1, "", "mtia"], [49, 1, 1, "", "named_buffers"], [49, 1, 1, "", "named_children"], [49, 1, 1, "", "named_modules"], [49, 1, 1, "", "named_parameters"], [49, 1, 1, "", "parameters"], [49, 1, 1, "", "register_backward_hook"], [49, 1, 1, "", "register_buffer"], [49, 1, 1, "", "register_forward_hook"], [49, 1, 1, "", "register_forward_pre_hook"], [49, 1, 1, "", "register_full_backward_hook"], [49, 1, 1, "", "register_full_backward_pre_hook"], [49, 1, 1, "", "register_load_state_dict_post_hook"], [49, 1, 1, "", "register_load_state_dict_pre_hook"], [49, 1, 1, "", "register_module"], [49, 1, 1, "", "register_parameter"], [49, 1, 1, "", "register_state_dict_post_hook"], [49, 1, 1, "", "register_state_dict_pre_hook"], [49, 1, 1, "", "requires_grad_"], [49, 1, 1, "", "set_extra_state"], [49, 1, 1, "", "set_submodule"], [49, 1, 1, "", "share_memory"], [49, 1, 1, "", "state_dict"], [49, 1, 1, "", "to"], [49, 1, 1, "", "to_empty"], [49, 1, 1, "", "train"], [49, 1, 1, "", "type"], [49, 1, 1, "", "xpu"], [49, 1, 1, "", "zero_grad"]], "torchrl.data.NonTensor": [[51, 1, 1, "", "assert_is_in"], [51, 1, 1, "", "cardinality"], [51, 1, 1, "", "clear_device_"], [51, 1, 1, "", "clone"], [51, 1, 1, "", "contains"], [51, 1, 1, "", "cpu"], [51, 1, 1, "", "cuda"], [51, 2, 1, "", "device"], [51, 1, 1, "", "encode"], [51, 1, 1, "", "enumerate"], [51, 1, 1, "", "erase_memoize_cache"], [51, 1, 1, "", "expand"], [51, 1, 1, "", "flatten"], [51, 1, 1, "", "implements_for_spec"], [51, 1, 1, "", "index"], [51, 1, 1, "", "is_in"], [51, 1, 1, "", "make_neg_dim"], [51, 1, 1, "", "memoize_encode"], [51, 2, 1, "", "ndim"], [51, 1, 1, "", "ndimension"], [51, 1, 1, "", "one"], [51, 1, 1, "", "ones"], [51, 1, 1, "", "project"], [51, 1, 1, "", "rand"], [51, 1, 1, "", "reshape"], [51, 1, 1, "", "sample"], [51, 1, 1, "", "squeeze"], [51, 1, 1, "", "to"], [51, 1, 1, "", "to_numpy"], [51, 1, 1, "", "type_check"], [51, 1, 1, "", "unflatten"], [51, 1, 1, "", "unsqueeze"], [51, 1, 1, "", "view"], [51, 1, 1, "", "zero"], [51, 1, 1, "", "zeros"]], "torchrl.data.NonTensorSpec": [[52, 1, 1, "", "assert_is_in"], [52, 1, 1, "", "cardinality"], [52, 1, 1, "", "clear_device_"], [52, 1, 1, "", "clone"], [52, 1, 1, "", "contains"], [52, 1, 1, "", "cpu"], [52, 1, 1, "", "cuda"], [52, 2, 1, "", "device"], [52, 1, 1, "", "encode"], [52, 1, 1, "", "enumerate"], [52, 1, 1, "", "erase_memoize_cache"], [52, 1, 1, "", "expand"], [52, 1, 1, "", "flatten"], [52, 1, 1, "", "implements_for_spec"], [52, 1, 1, "", "index"], [52, 1, 1, "", "is_in"], [52, 1, 1, "", "make_neg_dim"], [52, 1, 1, "", "memoize_encode"], [52, 2, 1, "", "ndim"], [52, 1, 1, "", "ndimension"], [52, 1, 1, "", "one"], [52, 1, 1, "", "ones"], [52, 1, 1, "", "project"], [52, 1, 1, "", "rand"], [52, 1, 1, "", "reshape"], [52, 1, 1, "", "sample"], [52, 1, 1, "", "squeeze"], [52, 1, 1, "", "to"], [52, 1, 1, "", "to_numpy"], [52, 1, 1, "", "type_check"], [52, 1, 1, "", "unflatten"], [52, 1, 1, "", "unsqueeze"], [52, 1, 1, "", "view"], [52, 1, 1, "", "zero"], [52, 1, 1, "", "zeros"]], "torchrl.data.OneHot": [[53, 1, 1, "", "assert_is_in"], [53, 1, 1, "", "cardinality"], [53, 1, 1, "", "clear_device_"], [53, 1, 1, "", "clone"], [53, 1, 1, "", "contains"], [53, 1, 1, "", "cpu"], [53, 1, 1, "", "cuda"], [53, 4, 1, "", "device"], [53, 1, 1, "", "encode"], [53, 1, 1, "", "enumerate"], [53, 1, 1, "", "erase_memoize_cache"], [53, 1, 1, "", "expand"], [53, 1, 1, "", "flatten"], [53, 1, 1, "", "implements_for_spec"], [53, 1, 1, "", "index"], [53, 1, 1, "", "is_in"], [53, 1, 1, "", "make_neg_dim"], [53, 1, 1, "", "memoize_encode"], [53, 2, 1, "", "ndim"], [53, 1, 1, "", "ndimension"], [53, 1, 1, "", "one"], [53, 1, 1, "", "ones"], [53, 1, 1, "", "project"], [53, 1, 1, "", "rand"], [53, 1, 1, "", "reshape"], [53, 1, 1, "", "sample"], [53, 1, 1, "", "squeeze"], [53, 1, 1, "", "to"], [53, 1, 1, "", "to_categorical"], [53, 1, 1, "", "to_categorical_spec"], [53, 1, 1, "", "to_numpy"], [53, 1, 1, "", "to_one_hot"], [53, 1, 1, "", "to_one_hot_spec"], [53, 1, 1, "", "type_check"], [53, 1, 1, "", "unflatten"], [53, 1, 1, "", "unsqueeze"], [53, 1, 1, "", "update_mask"], [53, 1, 1, "", "view"], [53, 1, 1, "", "zero"], [53, 1, 1, "", "zeros"]], "torchrl.data.OneHotDiscreteTensorSpec": [[54, 1, 1, "", "assert_is_in"], [54, 1, 1, "", "cardinality"], [54, 1, 1, "", "clear_device_"], [54, 1, 1, "", "clone"], [54, 1, 1, "", "contains"], [54, 1, 1, "", "cpu"], [54, 1, 1, "", "cuda"], [54, 4, 1, "", "device"], [54, 1, 1, "", "encode"], [54, 1, 1, "", "enumerate"], [54, 1, 1, "", "erase_memoize_cache"], [54, 1, 1, "", "expand"], [54, 1, 1, "", "flatten"], [54, 1, 1, "", "implements_for_spec"], [54, 1, 1, "", "index"], [54, 1, 1, "", "is_in"], [54, 1, 1, "", "make_neg_dim"], [54, 1, 1, "", "memoize_encode"], [54, 2, 1, "", "ndim"], [54, 1, 1, "", "ndimension"], [54, 1, 1, "", "one"], [54, 1, 1, "", "ones"], [54, 1, 1, "", "project"], [54, 1, 1, "", "rand"], [54, 1, 1, "", "reshape"], [54, 1, 1, "", "sample"], [54, 1, 1, "", "squeeze"], [54, 1, 1, "", "to"], [54, 1, 1, "", "to_categorical"], [54, 1, 1, "", "to_categorical_spec"], [54, 1, 1, "", "to_numpy"], [54, 1, 1, "", "to_one_hot"], [54, 1, 1, "", "to_one_hot_spec"], [54, 1, 1, "", "type_check"], [54, 1, 1, "", "unflatten"], [54, 1, 1, "", "unsqueeze"], [54, 1, 1, "", "update_mask"], [54, 1, 1, "", "view"], [54, 1, 1, "", "zero"], [54, 1, 1, "", "zeros"]], "torchrl.data.PairwiseDataset": [[55, 2, 1, "", "device"], [55, 1, 1, "", "dumps"], [55, 1, 1, "", "fields"], [55, 1, 1, "", "from_dataset"], [55, 1, 1, "", "from_tensordict"], [55, 1, 1, "", "get"], [55, 1, 1, "", "load"], [55, 1, 1, "", "load_"], [55, 1, 1, "", "load_memmap"], [55, 1, 1, "", "load_state_dict"], [55, 1, 1, "", "memmap"], [55, 1, 1, "", "memmap_"], [55, 1, 1, "", "memmap_like"], [55, 1, 1, "", "memmap_refresh_"], [55, 1, 1, "", "save"], [55, 1, 1, "", "set"], [55, 1, 1, "", "state_dict"], [55, 1, 1, "", "to_tensordict"], [55, 1, 1, "", "unbind"]], "torchrl.data.PrioritizedReplayBuffer": [[56, 1, 1, "", "add"], [56, 1, 1, "", "append_transform"], [56, 1, 1, "", "as_remote"], [56, 1, 1, "", "dump"], [56, 1, 1, "", "dumps"], [56, 1, 1, "", "empty"], [56, 1, 1, "", "extend"], [56, 1, 1, "", "insert_transform"], [56, 1, 1, "", "load"], [56, 1, 1, "", "loads"], [56, 1, 1, "", "register_load_hook"], [56, 1, 1, "", "register_save_hook"], [56, 1, 1, "", "sample"], [56, 2, 1, "", "sampler"], [56, 1, 1, "", "save"], [56, 1, 1, "", "set_sampler"], [56, 1, 1, "", "set_storage"], [56, 1, 1, "", "set_writer"], [56, 2, 1, "", "storage"], [56, 2, 1, "", "write_count"], [56, 2, 1, "", "writer"]], "torchrl.data.PromptData": [[57, 2, 1, "", "device"], [57, 1, 1, "", "dumps"], [57, 1, 1, "", "fields"], [57, 1, 1, "", "from_dataset"], [57, 1, 1, "", "from_tensordict"], [57, 1, 1, "", "get"], [57, 1, 1, "", "load"], [57, 1, 1, "", "load_"], [57, 1, 1, "", "load_memmap"], [57, 1, 1, "", "load_state_dict"], [57, 1, 1, "", "memmap"], [57, 1, 1, "", "memmap_"], [57, 1, 1, "", "memmap_like"], [57, 1, 1, "", "memmap_refresh_"], [57, 1, 1, "", "save"], [57, 1, 1, "", "set"], [57, 1, 1, "", "state_dict"], [57, 1, 1, "", "to_tensordict"], [57, 1, 1, "", "unbind"]], "torchrl.data.QueryModule": [[59, 1, 1, "", "add_module"], [59, 1, 1, "", "apply"], [59, 1, 1, "", "bfloat16"], [59, 1, 1, "", "buffers"], [59, 1, 1, "", "children"], [59, 1, 1, "", "compile"], [59, 1, 1, "", "cpu"], [59, 1, 1, "", "cuda"], [59, 1, 1, "", "double"], [59, 1, 1, "", "eval"], [59, 1, 1, "", "extra_repr"], [59, 1, 1, "", "float"], [59, 1, 1, "", "forward"], [59, 1, 1, "", "get_buffer"], [59, 1, 1, "", "get_extra_state"], [59, 1, 1, "", "get_parameter"], [59, 1, 1, "", "get_submodule"], [59, 1, 1, "", "half"], [59, 1, 1, "", "ipu"], [59, 1, 1, "", "is_tdmodule_compatible"], [59, 1, 1, "", "load_state_dict"], [59, 1, 1, "", "modules"], [59, 1, 1, "", "mtia"], [59, 1, 1, "", "named_buffers"], [59, 1, 1, "", "named_children"], [59, 1, 1, "", "named_modules"], [59, 1, 1, "", "named_parameters"], [59, 1, 1, "", "parameters"], [59, 1, 1, "", "register_backward_hook"], [59, 1, 1, "", "register_buffer"], [59, 1, 1, "", "register_forward_hook"], [59, 1, 1, "", "register_forward_pre_hook"], [59, 1, 1, "", "register_full_backward_hook"], [59, 1, 1, "", "register_full_backward_pre_hook"], [59, 1, 1, "", "register_load_state_dict_post_hook"], [59, 1, 1, "", "register_load_state_dict_pre_hook"], [59, 1, 1, "", "register_module"], [59, 1, 1, "", "register_parameter"], [59, 1, 1, "", "register_state_dict_post_hook"], [59, 1, 1, "", "register_state_dict_pre_hook"], [59, 1, 1, "", "requires_grad_"], [59, 1, 1, "", "reset_out_keys"], [59, 1, 1, "", "reset_parameters_recursive"], [59, 1, 1, "", "select_out_keys"], [59, 1, 1, "", "set_extra_state"], [59, 1, 1, "", "set_submodule"], [59, 1, 1, "", "share_memory"], [59, 1, 1, "", "state_dict"], [59, 1, 1, "", "to"], [59, 1, 1, "", "to_empty"], [59, 1, 1, "", "train"], [59, 1, 1, "", "type"], [59, 1, 1, "", "xpu"], [59, 1, 1, "", "zero_grad"]], "torchrl.data.RandomProjectionHash": [[60, 1, 1, "", "add_module"], [60, 1, 1, "", "apply"], [60, 1, 1, "", "bfloat16"], [60, 1, 1, "", "buffers"], [60, 1, 1, "", "children"], [60, 1, 1, "", "compile"], [60, 1, 1, "", "cpu"], [60, 1, 1, "", "cuda"], [60, 1, 1, "", "double"], [60, 1, 1, "", "eval"], [60, 1, 1, "", "extra_repr"], [60, 1, 1, "", "fit"], [60, 1, 1, "", "float"], [60, 1, 1, "", "forward"], [60, 1, 1, "", "get_buffer"], [60, 1, 1, "", "get_extra_state"], [60, 1, 1, "", "get_parameter"], [60, 1, 1, "", "get_submodule"], [60, 1, 1, "", "half"], [60, 1, 1, "", "ipu"], [60, 1, 1, "", "load_state_dict"], [60, 1, 1, "", "modules"], [60, 1, 1, "", "mtia"], [60, 1, 1, "", "named_buffers"], [60, 1, 1, "", "named_children"], [60, 1, 1, "", "named_modules"], [60, 1, 1, "", "named_parameters"], [60, 1, 1, "", "parameters"], [60, 1, 1, "", "register_backward_hook"], [60, 1, 1, "", "register_buffer"], [60, 1, 1, "", "register_forward_hook"], [60, 1, 1, "", "register_forward_pre_hook"], [60, 1, 1, "", "register_full_backward_hook"], [60, 1, 1, "", "register_full_backward_pre_hook"], [60, 1, 1, "", "register_load_state_dict_post_hook"], [60, 1, 1, "", "register_load_state_dict_pre_hook"], [60, 1, 1, "", "register_module"], [60, 1, 1, "", "register_parameter"], [60, 1, 1, "", "register_state_dict_post_hook"], [60, 1, 1, "", "register_state_dict_pre_hook"], [60, 1, 1, "", "requires_grad_"], [60, 1, 1, "", "set_extra_state"], [60, 1, 1, "", "set_submodule"], [60, 1, 1, "", "share_memory"], [60, 1, 1, "", "state_dict"], [60, 1, 1, "", "to"], [60, 1, 1, "", "to_empty"], [60, 1, 1, "", "train"], [60, 1, 1, "", "type"], [60, 1, 1, "", "xpu"], [60, 1, 1, "", "zero_grad"]], "torchrl.data.RayReplayBuffer": [[61, 1, 1, "", "add"], [61, 1, 1, "", "append_transform"], [61, 1, 1, "", "as_remote"], [61, 1, 1, "", "dump"], [61, 1, 1, "", "dumps"], [61, 1, 1, "", "empty"], [61, 1, 1, "", "extend"], [61, 1, 1, "", "insert_transform"], [61, 1, 1, "", "load"], [61, 1, 1, "", "loads"], [61, 1, 1, "", "register_load_hook"], [61, 1, 1, "", "register_save_hook"], [61, 1, 1, "", "sample"], [61, 2, 1, "", "sampler"], [61, 1, 1, "", "save"], [61, 1, 1, "", "set_sampler"], [61, 1, 1, "", "set_storage"], [61, 1, 1, "", "set_writer"], [61, 2, 1, "", "storage"], [61, 2, 1, "", "write_count"], [61, 2, 1, "", "writer"]], "torchrl.data.RemoteTensorDictReplayBuffer": [[62, 1, 1, "", "add"], [62, 1, 1, "", "append_transform"], [62, 1, 1, "", "as_remote"], [62, 1, 1, "", "dump"], [62, 1, 1, "", "dumps"], [62, 1, 1, "", "empty"], [62, 1, 1, "", "extend"], [62, 1, 1, "", "insert_transform"], [62, 1, 1, "", "load"], [62, 1, 1, "", "loads"], [62, 1, 1, "", "register_load_hook"], [62, 1, 1, "", "register_save_hook"], [62, 1, 1, "", "sample"], [62, 2, 1, "", "sampler"], [62, 1, 1, "", "save"], [62, 1, 1, "", "set_sampler"], [62, 1, 1, "", "set_storage"], [62, 1, 1, "", "set_writer"], [62, 2, 1, "", "storage"], [62, 2, 1, "", "write_count"], [62, 2, 1, "", "writer"]], "torchrl.data.ReplayBuffer": [[63, 1, 1, "", "add"], [63, 1, 1, "", "append_transform"], [63, 1, 1, "", "as_remote"], [63, 1, 1, "", "dump"], [63, 1, 1, "", "dumps"], [63, 1, 1, "", "empty"], [63, 1, 1, "", "extend"], [63, 1, 1, "", "insert_transform"], [63, 1, 1, "", "load"], [63, 1, 1, "", "loads"], [63, 1, 1, "", "register_load_hook"], [63, 1, 1, "", "register_save_hook"], [63, 1, 1, "", "sample"], [63, 2, 1, "", "sampler"], [63, 1, 1, "", "save"], [63, 1, 1, "", "set_sampler"], [63, 1, 1, "", "set_storage"], [63, 1, 1, "", "set_writer"], [63, 2, 1, "", "storage"], [63, 2, 1, "", "write_count"], [63, 2, 1, "", "writer"]], "torchrl.data.RewardData": [[64, 2, 1, "", "device"], [64, 1, 1, "", "dumps"], [64, 1, 1, "", "fields"], [64, 1, 1, "", "from_tensordict"], [64, 1, 1, "", "get"], [64, 1, 1, "", "load"], [64, 1, 1, "", "load_"], [64, 1, 1, "", "load_memmap"], [64, 1, 1, "", "load_state_dict"], [64, 1, 1, "", "memmap"], [64, 1, 1, "", "memmap_"], [64, 1, 1, "", "memmap_like"], [64, 1, 1, "", "memmap_refresh_"], [64, 1, 1, "", "save"], [64, 1, 1, "", "set"], [64, 1, 1, "", "state_dict"], [64, 1, 1, "", "to_tensordict"], [64, 1, 1, "", "unbind"]], "torchrl.data.RolloutFromModel": [[65, 1, 1, "", "create_rollout_td"], [65, 1, 1, "", "generate"], [65, 1, 1, "", "logprobs_of_labels"]], "torchrl.data.SipHash": [[66, 1, 1, "", "add_module"], [66, 1, 1, "", "apply"], [66, 1, 1, "", "bfloat16"], [66, 1, 1, "", "buffers"], [66, 1, 1, "", "children"], [66, 1, 1, "", "compile"], [66, 1, 1, "", "cpu"], [66, 1, 1, "", "cuda"], [66, 1, 1, "", "double"], [66, 1, 1, "", "eval"], [66, 1, 1, "", "extra_repr"], [66, 1, 1, "", "float"], [66, 1, 1, "", "forward"], [66, 1, 1, "", "get_buffer"], [66, 1, 1, "", "get_extra_state"], [66, 1, 1, "", "get_parameter"], [66, 1, 1, "", "get_submodule"], [66, 1, 1, "", "half"], [66, 1, 1, "", "ipu"], [66, 1, 1, "", "load_state_dict"], [66, 1, 1, "", "modules"], [66, 1, 1, "", "mtia"], [66, 1, 1, "", "named_buffers"], [66, 1, 1, "", "named_children"], [66, 1, 1, "", "named_modules"], [66, 1, 1, "", "named_parameters"], [66, 1, 1, "", "parameters"], [66, 1, 1, "", "register_backward_hook"], [66, 1, 1, "", "register_buffer"], [66, 1, 1, "", "register_forward_hook"], [66, 1, 1, "", "register_forward_pre_hook"], [66, 1, 1, "", "register_full_backward_hook"], [66, 1, 1, "", "register_full_backward_pre_hook"], [66, 1, 1, "", "register_load_state_dict_post_hook"], [66, 1, 1, "", "register_load_state_dict_pre_hook"], [66, 1, 1, "", "register_module"], [66, 1, 1, "", "register_parameter"], [66, 1, 1, "", "register_state_dict_post_hook"], [66, 1, 1, "", "register_state_dict_pre_hook"], [66, 1, 1, "", "requires_grad_"], [66, 1, 1, "", "set_extra_state"], [66, 1, 1, "", "set_submodule"], [66, 1, 1, "", "share_memory"], [66, 1, 1, "", "state_dict"], [66, 1, 1, "", "to"], [66, 1, 1, "", "to_empty"], [66, 1, 1, "", "train"], [66, 1, 1, "", "type"], [66, 1, 1, "", "xpu"], [66, 1, 1, "", "zero_grad"]], "torchrl.data.Stacked": [[67, 1, 1, "", "assert_is_in"], [67, 1, 1, "", "cardinality"], [67, 1, 1, "", "clear_device_"], [67, 1, 1, "", "clone"], [67, 1, 1, "", "contains"], [67, 1, 1, "", "cpu"], [67, 1, 1, "", "cuda"], [67, 2, 1, "", "device"], [67, 1, 1, "", "encode"], [67, 1, 1, "", "enumerate"], [67, 1, 1, "", "erase_memoize_cache"], [67, 1, 1, "", "expand"], [67, 1, 1, "", "flatten"], [67, 1, 1, "", "implements_for_spec"], [67, 1, 1, "", "index"], [67, 1, 1, "", "is_in"], [67, 1, 1, "", "make_neg_dim"], [67, 1, 1, "", "memoize_encode"], [67, 2, 1, "", "ndim"], [67, 1, 1, "", "ndimension"], [67, 1, 1, "", "one"], [67, 1, 1, "", "ones"], [67, 1, 1, "", "project"], [67, 1, 1, "", "rand"], [67, 1, 1, "", "reshape"], [67, 1, 1, "", "sample"], [67, 1, 1, "", "squeeze"], [67, 1, 1, "", "to"], [67, 1, 1, "", "to_numpy"], [67, 1, 1, "", "type_check"], [67, 1, 1, "", "unflatten"], [67, 1, 1, "", "unsqueeze"], [67, 1, 1, "", "view"], [67, 1, 1, "", "zero"], [67, 1, 1, "", "zeros"]], "torchrl.data.StackedComposite": [[68, 1, 1, "", "assert_is_in"], [68, 1, 1, "", "cardinality"], [68, 1, 1, "", "clear_device_"], [68, 1, 1, "", "clone"], [68, 1, 1, "", "contains"], [68, 1, 1, "", "cpu"], [68, 1, 1, "", "cuda"], [68, 2, 1, "", "device"], [68, 1, 1, "", "empty"], [68, 1, 1, "", "encode"], [68, 1, 1, "", "enumerate"], [68, 1, 1, "", "erase_memoize_cache"], [68, 1, 1, "", "expand"], [68, 1, 1, "", "flatten"], [68, 1, 1, "", "get"], [68, 1, 1, "", "implements_for_spec"], [68, 1, 1, "", "index"], [68, 1, 1, "", "is_empty"], [68, 1, 1, "", "is_in"], [68, 1, 1, "", "items"], [68, 1, 1, "", "keys"], [68, 1, 1, "", "lock_"], [68, 1, 1, "", "make_neg_dim"], [68, 1, 1, "", "memoize_encode"], [68, 2, 1, "", "ndim"], [68, 1, 1, "", "ndimension"], [68, 1, 1, "", "one"], [68, 1, 1, "", "ones"], [68, 1, 1, "", "pop"], [68, 1, 1, "", "project"], [68, 1, 1, "", "rand"], [68, 1, 1, "", "reshape"], [68, 1, 1, "", "sample"], [68, 1, 1, "", "separates"], [68, 1, 1, "", "set"], [68, 1, 1, "", "squeeze"], [68, 1, 1, "", "to"], [68, 1, 1, "", "to_numpy"], [68, 1, 1, "", "type_check"], [68, 1, 1, "", "unflatten"], [68, 1, 1, "", "unlock_"], [68, 1, 1, "", "unsqueeze"], [68, 1, 1, "", "values"], [68, 1, 1, "", "view"], [68, 1, 1, "", "zero"], [68, 1, 1, "", "zeros"]], "torchrl.data.TensorDictMap": [[71, 1, 1, "", "add_module"], [71, 1, 1, "", "apply"], [71, 1, 1, "", "bfloat16"], [71, 1, 1, "", "buffers"], [71, 1, 1, "", "children"], [71, 1, 1, "", "compile"], [71, 1, 1, "", "cpu"], [71, 1, 1, "", "cuda"], [71, 1, 1, "", "double"], [71, 1, 1, "", "eval"], [71, 1, 1, "", "extra_repr"], [71, 1, 1, "", "float"], [71, 1, 1, "", "forward"], [71, 1, 1, "", "from_tensordict_pair"], [71, 1, 1, "", "get_buffer"], [71, 1, 1, "", "get_extra_state"], [71, 1, 1, "", "get_parameter"], [71, 1, 1, "", "get_submodule"], [71, 1, 1, "", "half"], [71, 1, 1, "", "ipu"], [71, 1, 1, "", "is_tdmodule_compatible"], [71, 1, 1, "", "load_state_dict"], [71, 1, 1, "", "modules"], [71, 1, 1, "", "mtia"], [71, 1, 1, "", "named_buffers"], [71, 1, 1, "", "named_children"], [71, 1, 1, "", "named_modules"], [71, 1, 1, "", "named_parameters"], [71, 1, 1, "", "parameters"], [71, 1, 1, "", "register_backward_hook"], [71, 1, 1, "", "register_buffer"], [71, 1, 1, "", "register_forward_hook"], [71, 1, 1, "", "register_forward_pre_hook"], [71, 1, 1, "", "register_full_backward_hook"], [71, 1, 1, "", "register_full_backward_pre_hook"], [71, 1, 1, "", "register_load_state_dict_post_hook"], [71, 1, 1, "", "register_load_state_dict_pre_hook"], [71, 1, 1, "", "register_module"], [71, 1, 1, "", "register_parameter"], [71, 1, 1, "", "register_state_dict_post_hook"], [71, 1, 1, "", "register_state_dict_pre_hook"], [71, 1, 1, "", "requires_grad_"], [71, 1, 1, "", "reset_out_keys"], [71, 1, 1, "", "reset_parameters_recursive"], [71, 1, 1, "", "select_out_keys"], [71, 1, 1, "", "set_extra_state"], [71, 1, 1, "", "set_submodule"], [71, 1, 1, "", "share_memory"], [71, 1, 1, "", "state_dict"], [71, 1, 1, "", "to"], [71, 1, 1, "", "to_empty"], [71, 1, 1, "", "train"], [71, 1, 1, "", "type"], [71, 1, 1, "", "xpu"], [71, 1, 1, "", "zero_grad"]], "torchrl.data.TensorDictPrioritizedReplayBuffer": [[72, 1, 1, "", "add"], [72, 1, 1, "", "append_transform"], [72, 1, 1, "", "as_remote"], [72, 1, 1, "", "dump"], [72, 1, 1, "", "dumps"], [72, 1, 1, "", "empty"], [72, 1, 1, "", "extend"], [72, 1, 1, "", "insert_transform"], [72, 1, 1, "", "load"], [72, 1, 1, "", "loads"], [72, 1, 1, "", "register_load_hook"], [72, 1, 1, "", "register_save_hook"], [72, 1, 1, "", "sample"], [72, 2, 1, "", "sampler"], [72, 1, 1, "", "save"], [72, 1, 1, "", "set_sampler"], [72, 1, 1, "", "set_storage"], [72, 1, 1, "", "set_writer"], [72, 2, 1, "", "storage"], [72, 2, 1, "", "write_count"], [72, 2, 1, "", "writer"]], "torchrl.data.TensorDictReplayBuffer": [[73, 1, 1, "", "add"], [73, 1, 1, "", "append_transform"], [73, 1, 1, "", "as_remote"], [73, 1, 1, "", "dump"], [73, 1, 1, "", "dumps"], [73, 1, 1, "", "empty"], [73, 1, 1, "", "extend"], [73, 1, 1, "", "insert_transform"], [73, 1, 1, "", "load"], [73, 1, 1, "", "loads"], [73, 1, 1, "", "register_load_hook"], [73, 1, 1, "", "register_save_hook"], [73, 1, 1, "", "sample"], [73, 2, 1, "", "sampler"], [73, 1, 1, "", "save"], [73, 1, 1, "", "set_sampler"], [73, 1, 1, "", "set_storage"], [73, 1, 1, "", "set_writer"], [73, 2, 1, "", "storage"], [73, 2, 1, "", "write_count"], [73, 2, 1, "", "writer"]], "torchrl.data.TensorSpec": [[76, 1, 1, "", "assert_is_in"], [76, 1, 1, "", "cardinality"], [76, 1, 1, "", "clear_device_"], [76, 1, 1, "", "clone"], [76, 1, 1, "", "contains"], [76, 1, 1, "", "cpu"], [76, 1, 1, "", "cuda"], [76, 2, 1, "", "device"], [76, 1, 1, "", "encode"], [76, 1, 1, "", "enumerate"], [76, 1, 1, "", "erase_memoize_cache"], [76, 1, 1, "", "expand"], [76, 1, 1, "", "flatten"], [76, 1, 1, "", "implements_for_spec"], [76, 1, 1, "", "index"], [76, 1, 1, "", "is_in"], [76, 1, 1, "", "make_neg_dim"], [76, 1, 1, "", "memoize_encode"], [76, 2, 1, "", "ndim"], [76, 1, 1, "", "ndimension"], [76, 1, 1, "", "one"], [76, 1, 1, "", "ones"], [76, 1, 1, "", "project"], [76, 1, 1, "", "rand"], [76, 1, 1, "", "reshape"], [76, 1, 1, "", "sample"], [76, 1, 1, "", "squeeze"], [76, 1, 1, "", "to"], [76, 1, 1, "", "to_numpy"], [76, 1, 1, "", "type_check"], [76, 1, 1, "", "unflatten"], [76, 1, 1, "", "unsqueeze"], [76, 1, 1, "", "view"], [76, 1, 1, "", "zero"], [76, 1, 1, "", "zeros"]], "torchrl.data.TokenizedDatasetLoader": [[77, 1, 1, "", "dataset_to_tensordict"], [77, 1, 1, "", "load"]], "torchrl.data.Tree": [[78, 2, 1, "", "branching_action"], [78, 2, 1, "", "device"], [78, 1, 1, "", "dumps"], [78, 1, 1, "", "edges"], [78, 1, 1, "", "fields"], [78, 1, 1, "", "from_tensordict"], [78, 2, 1, "", "full_action_spec"], [78, 2, 1, "", "full_done_spec"], [78, 2, 1, "", "full_observation_spec"], [78, 2, 1, "", "full_reward_spec"], [78, 2, 1, "", "full_state_spec"], [78, 1, 1, "", "fully_expanded"], [78, 1, 1, "", "get"], [78, 1, 1, "", "get_vertex_by_hash"], [78, 1, 1, "", "get_vertex_by_id"], [78, 2, 1, "", "is_terminal"], [78, 1, 1, "", "load"], [78, 1, 1, "", "load_"], [78, 1, 1, "", "load_memmap"], [78, 1, 1, "", "load_state_dict"], [78, 1, 1, "", "make_node"], [78, 1, 1, "", "max_length"], [78, 1, 1, "", "memmap"], [78, 1, 1, "", "memmap_"], [78, 1, 1, "", "memmap_like"], [78, 1, 1, "", "memmap_refresh_"], [78, 2, 1, "", "node_observation"], [78, 2, 1, "", "node_observations"], [78, 2, 1, "", "num_children"], [78, 1, 1, "", "num_vertices"], [78, 2, 1, "", "parent"], [78, 1, 1, "", "plot"], [78, 2, 1, "", "prev_action"], [78, 1, 1, "", "rollout_from_path"], [78, 1, 1, "", "save"], [78, 2, 1, "", "selected_actions"], [78, 1, 1, "", "set"], [78, 1, 1, "", "state_dict"], [78, 1, 1, "", "to_string"], [78, 1, 1, "", "to_tensordict"], [78, 1, 1, "", "unbind"], [78, 1, 1, "", "valid_paths"], [78, 1, 1, "", "vertices"], [78, 2, 1, "", "visits"]], "torchrl.data.Unbounded": [[79, 1, 1, "", "assert_is_in"], [79, 1, 1, "", "cardinality"], [79, 1, 1, "", "clear_device_"], [79, 1, 1, "", "clone"], [79, 1, 1, "", "contains"], [79, 1, 1, "", "cpu"], [79, 1, 1, "", "cuda"], [79, 2, 1, "", "device"], [79, 1, 1, "", "encode"], [79, 1, 1, "", "enumerate"], [79, 1, 1, "", "erase_memoize_cache"], [79, 1, 1, "", "expand"], [79, 1, 1, "", "flatten"], [79, 1, 1, "", "implements_for_spec"], [79, 1, 1, "", "index"], [79, 1, 1, "", "is_in"], [79, 1, 1, "", "make_neg_dim"], [79, 1, 1, "", "memoize_encode"], [79, 2, 1, "", "ndim"], [79, 1, 1, "", "ndimension"], [79, 1, 1, "", "one"], [79, 1, 1, "", "ones"], [79, 1, 1, "", "project"], [79, 1, 1, "", "rand"], [79, 1, 1, "", "reshape"], [79, 1, 1, "", "sample"], [79, 1, 1, "", "squeeze"], [79, 1, 1, "", "to"], [79, 1, 1, "", "to_numpy"], [79, 1, 1, "", "type_check"], [79, 1, 1, "", "unflatten"], [79, 1, 1, "", "unsqueeze"], [79, 1, 1, "", "view"], [79, 1, 1, "", "zero"], [79, 1, 1, "", "zeros"]], "torchrl.data.UnboundedContinuous": [[80, 1, 1, "", "assert_is_in"], [80, 1, 1, "", "cardinality"], [80, 1, 1, "", "clear_device_"], [80, 1, 1, "", "clone"], [80, 1, 1, "", "contains"], [80, 1, 1, "", "cpu"], [80, 1, 1, "", "cuda"], [80, 2, 1, "", "device"], [80, 1, 1, "", "encode"], [80, 1, 1, "", "enumerate"], [80, 1, 1, "", "erase_memoize_cache"], [80, 1, 1, "", "expand"], [80, 1, 1, "", "flatten"], [80, 1, 1, "", "implements_for_spec"], [80, 1, 1, "", "index"], [80, 1, 1, "", "is_in"], [80, 1, 1, "", "make_neg_dim"], [80, 1, 1, "", "memoize_encode"], [80, 2, 1, "", "ndim"], [80, 1, 1, "", "ndimension"], [80, 1, 1, "", "one"], [80, 1, 1, "", "ones"], [80, 1, 1, "", "project"], [80, 1, 1, "", "rand"], [80, 1, 1, "", "reshape"], [80, 1, 1, "", "sample"], [80, 1, 1, "", "squeeze"], [80, 1, 1, "", "to"], [80, 1, 1, "", "to_numpy"], [80, 1, 1, "", "type_check"], [80, 1, 1, "", "unflatten"], [80, 1, 1, "", "unsqueeze"], [80, 1, 1, "", "view"], [80, 1, 1, "", "zero"], [80, 1, 1, "", "zeros"]], "torchrl.data.UnboundedContinuousTensorSpec": [[81, 1, 1, "", "assert_is_in"], [81, 1, 1, "", "cardinality"], [81, 1, 1, "", "clear_device_"], [81, 1, 1, "", "clone"], [81, 1, 1, "", "contains"], [81, 1, 1, "", "cpu"], [81, 1, 1, "", "cuda"], [81, 2, 1, "", "device"], [81, 1, 1, "", "encode"], [81, 1, 1, "", "enumerate"], [81, 1, 1, "", "erase_memoize_cache"], [81, 1, 1, "", "expand"], [81, 1, 1, "", "flatten"], [81, 1, 1, "", "implements_for_spec"], [81, 1, 1, "", "index"], [81, 1, 1, "", "is_in"], [81, 1, 1, "", "make_neg_dim"], [81, 1, 1, "", "memoize_encode"], [81, 2, 1, "", "ndim"], [81, 1, 1, "", "ndimension"], [81, 1, 1, "", "one"], [81, 1, 1, "", "ones"], [81, 1, 1, "", "project"], [81, 1, 1, "", "rand"], [81, 1, 1, "", "reshape"], [81, 1, 1, "", "sample"], [81, 1, 1, "", "squeeze"], [81, 1, 1, "", "to"], [81, 1, 1, "", "to_numpy"], [81, 1, 1, "", "type_check"], [81, 1, 1, "", "unflatten"], [81, 1, 1, "", "unsqueeze"], [81, 1, 1, "", "view"], [81, 1, 1, "", "zero"], [81, 1, 1, "", "zeros"]], "torchrl.data.UnboundedDiscrete": [[82, 1, 1, "", "assert_is_in"], [82, 1, 1, "", "cardinality"], [82, 1, 1, "", "clear_device_"], [82, 1, 1, "", "clone"], [82, 1, 1, "", "contains"], [82, 1, 1, "", "cpu"], [82, 1, 1, "", "cuda"], [82, 2, 1, "", "device"], [82, 1, 1, "", "encode"], [82, 1, 1, "", "enumerate"], [82, 1, 1, "", "erase_memoize_cache"], [82, 1, 1, "", "expand"], [82, 1, 1, "", "flatten"], [82, 1, 1, "", "implements_for_spec"], [82, 1, 1, "", "index"], [82, 1, 1, "", "is_in"], [82, 1, 1, "", "make_neg_dim"], [82, 1, 1, "", "memoize_encode"], [82, 2, 1, "", "ndim"], [82, 1, 1, "", "ndimension"], [82, 1, 1, "", "one"], [82, 1, 1, "", "ones"], [82, 1, 1, "", "project"], [82, 1, 1, "", "rand"], [82, 1, 1, "", "reshape"], [82, 1, 1, "", "sample"], [82, 1, 1, "", "squeeze"], [82, 1, 1, "", "to"], [82, 1, 1, "", "to_numpy"], [82, 1, 1, "", "type_check"], [82, 1, 1, "", "unflatten"], [82, 1, 1, "", "unsqueeze"], [82, 1, 1, "", "view"], [82, 1, 1, "", "zero"], [82, 1, 1, "", "zeros"]], "torchrl.data.UnboundedDiscreteTensorSpec": [[83, 1, 1, "", "assert_is_in"], [83, 1, 1, "", "cardinality"], [83, 1, 1, "", "clear_device_"], [83, 1, 1, "", "clone"], [83, 1, 1, "", "contains"], [83, 1, 1, "", "cpu"], [83, 1, 1, "", "cuda"], [83, 2, 1, "", "device"], [83, 1, 1, "", "encode"], [83, 1, 1, "", "enumerate"], [83, 1, 1, "", "erase_memoize_cache"], [83, 1, 1, "", "expand"], [83, 1, 1, "", "flatten"], [83, 1, 1, "", "implements_for_spec"], [83, 1, 1, "", "index"], [83, 1, 1, "", "is_in"], [83, 1, 1, "", "make_neg_dim"], [83, 1, 1, "", "memoize_encode"], [83, 2, 1, "", "ndim"], [83, 1, 1, "", "ndimension"], [83, 1, 1, "", "one"], [83, 1, 1, "", "ones"], [83, 1, 1, "", "project"], [83, 1, 1, "", "rand"], [83, 1, 1, "", "reshape"], [83, 1, 1, "", "sample"], [83, 1, 1, "", "squeeze"], [83, 1, 1, "", "to"], [83, 1, 1, "", "to_numpy"], [83, 1, 1, "", "type_check"], [83, 1, 1, "", "unflatten"], [83, 1, 1, "", "unsqueeze"], [83, 1, 1, "", "view"], [83, 1, 1, "", "zero"], [83, 1, 1, "", "zeros"]], "torchrl.data.replay_buffers": [[89, 0, 1, "", "FlatStorageCheckpointer"], [90, 0, 1, "", "H5StorageCheckpointer"], [91, 0, 1, "", "ImmutableDatasetWriter"], [92, 0, 1, "", "LazyMemmapStorage"], [93, 0, 1, "", "LazyStackStorage"], [94, 0, 1, "", "LazyTensorStorage"], [95, 0, 1, "", "ListStorage"], [96, 0, 1, "", "ListStorageCheckpointer"], [97, 0, 1, "", "NestedStorageCheckpointer"], [98, 0, 1, "", "PrioritizedSampler"], [99, 0, 1, "", "PrioritizedSliceSampler"], [100, 0, 1, "", "RandomSampler"], [101, 0, 1, "", "ReplayBufferEnsemble"], [102, 0, 1, "", "RoundRobinWriter"], [103, 0, 1, "", "Sampler"], [104, 0, 1, "", "SamplerEnsemble"], [105, 0, 1, "", "SamplerWithoutReplacement"], [106, 0, 1, "", "SliceSampler"], [107, 0, 1, "", "SliceSamplerWithoutReplacement"], [108, 0, 1, "", "Storage"], [109, 0, 1, "", "StorageCheckpointerBase"], [110, 0, 1, "", "StorageEnsemble"], [111, 0, 1, "", "StorageEnsembleCheckpointer"], [112, 0, 1, "", "TensorDictMaxValueWriter"], [113, 0, 1, "", "TensorDictRoundRobinWriter"], [114, 0, 1, "", "TensorStorage"], [115, 0, 1, "", "TensorStorageCheckpointer"], [116, 0, 1, "", "Writer"], [117, 0, 1, "", "WriterEnsemble"]], "torchrl.data.replay_buffers.ImmutableDatasetWriter": [[91, 1, 1, "", "add"], [91, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.LazyMemmapStorage": [[92, 1, 1, "", "attach"], [92, 1, 1, "", "dump"], [92, 1, 1, "", "load"], [92, 1, 1, "", "save"]], "torchrl.data.replay_buffers.LazyStackStorage": [[93, 1, 1, "", "attach"], [93, 1, 1, "", "dump"], [93, 1, 1, "", "load"], [93, 1, 1, "", "save"]], "torchrl.data.replay_buffers.LazyTensorStorage": [[94, 1, 1, "", "attach"], [94, 1, 1, "", "dump"], [94, 1, 1, "", "load"], [94, 1, 1, "", "save"]], "torchrl.data.replay_buffers.ListStorage": [[95, 1, 1, "", "attach"], [95, 1, 1, "", "dump"], [95, 1, 1, "", "load"], [95, 1, 1, "", "save"]], "torchrl.data.replay_buffers.PrioritizedSampler": [[98, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.PrioritizedSliceSampler": [[99, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.ReplayBufferEnsemble": [[101, 1, 1, "", "add"], [101, 1, 1, "", "append_transform"], [101, 1, 1, "", "as_remote"], [101, 1, 1, "", "dump"], [101, 1, 1, "", "dumps"], [101, 1, 1, "", "empty"], [101, 1, 1, "", "extend"], [101, 1, 1, "", "insert_transform"], [101, 1, 1, "", "load"], [101, 1, 1, "", "loads"], [101, 1, 1, "", "register_load_hook"], [101, 1, 1, "", "register_save_hook"], [101, 1, 1, "", "sample"], [101, 2, 1, "", "sampler"], [101, 1, 1, "", "save"], [101, 1, 1, "", "set_sampler"], [101, 1, 1, "", "set_storage"], [101, 1, 1, "", "set_writer"], [101, 2, 1, "", "storage"], [101, 2, 1, "", "write_count"], [101, 2, 1, "", "writer"]], "torchrl.data.replay_buffers.RoundRobinWriter": [[102, 1, 1, "", "add"], [102, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.Storage": [[108, 1, 1, "", "attach"], [108, 1, 1, "", "dump"], [108, 1, 1, "", "load"], [108, 1, 1, "", "save"]], "torchrl.data.replay_buffers.StorageEnsemble": [[110, 1, 1, "", "attach"], [110, 1, 1, "", "dump"], [110, 1, 1, "", "load"], [110, 1, 1, "", "save"]], "torchrl.data.replay_buffers.TensorDictMaxValueWriter": [[112, 1, 1, "", "add"], [112, 1, 1, "", "extend"], [112, 1, 1, "", "get_insert_index"]], "torchrl.data.replay_buffers.TensorDictRoundRobinWriter": [[113, 1, 1, "", "add"], [113, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.TensorStorage": [[114, 1, 1, "", "attach"], [114, 1, 1, "", "dump"], [114, 1, 1, "", "load"], [114, 1, 1, "", "save"]], "torchrl.data.replay_buffers.Writer": [[116, 1, 1, "", "add"], [116, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.WriterEnsemble": [[117, 1, 1, "", "add"], [117, 1, 1, "", "extend"]], "torchrl.envs": [[118, 0, 1, "", "AsyncEnvPool"], [119, 3, 1, "", "BraxEnv"], [120, 3, 1, "", "BraxWrapper"], [121, 0, 1, "", "ChessEnv"], [122, 3, 1, "", "DMControlEnv"], [123, 3, 1, "", "DMControlWrapper"], [124, 0, 1, "", "EnvBase"], [125, 0, 1, "", "EnvCreator"], [126, 0, 1, "", "EnvMetaData"], [127, 3, 1, "", "GymEnv"], [128, 0, 1, "", "GymLikeEnv"], [129, 3, 1, "", "GymWrapper"], [130, 3, 1, "", "HabitatEnv"], [131, 3, 1, "", "IsaacGymEnv"], [132, 3, 1, "", "IsaacGymWrapper"], [133, 3, 1, "", "JumanjiEnv"], [134, 3, 1, "", "JumanjiWrapper"], [135, 0, 1, "", "LLMHashingEnv"], [136, 3, 1, "", "MOGymEnv"], [137, 3, 1, "", "MOGymWrapper"], [138, 3, 1, "", "MarlGroupMapType"], [139, 3, 1, "", "MeltingpotEnv"], [140, 3, 1, "", "MeltingpotWrapper"], [141, 3, 1, "", "ModelBasedEnvBase"], [142, 3, 1, "", "MultiThreadedEnv"], [143, 3, 1, "", "MultiThreadedEnvWrapper"], [144, 3, 1, "", "OpenMLEnv"], [145, 3, 1, "", "OpenSpielEnv"], [146, 3, 1, "", "OpenSpielWrapper"], [147, 0, 1, "", "ParallelEnv"], [148, 0, 1, "", "PendulumEnv"], [149, 3, 1, "", "PettingZooEnv"], [150, 3, 1, "", "PettingZooWrapper"], [151, 0, 1, "", "ProcessorAsyncEnvPool"], [152, 3, 1, "", "RandomPolicy"], [153, 3, 1, "", "RoboHiveEnv"], [154, 3, 1, "", "SMACv2Env"], [155, 3, 1, "", "SMACv2Wrapper"], [156, 0, 1, "", "SerialEnv"], [157, 0, 1, "", "ThreadingAsyncEnvPool"], [158, 0, 1, "", "TicTacToeEnv"], [159, 3, 1, "", "UnityMLAgentsEnv"], [160, 3, 1, "", "UnityMLAgentsWrapper"], [161, 3, 1, "", "VmasEnv"], [162, 3, 1, "", "VmasWrapper"], [163, 3, 1, "", "check_env_specs"], [164, 3, 1, "", "check_marl_grouping"], [165, 3, 1, "", "exploration_type"], [166, 3, 1, "", "get_available_libraries"], [167, 3, 1, "", "gym_backend"], [168, 3, 1, "", "make_composite_from_td"], [141, 1, 1, "", "rand_step"], [171, 3, 1, "", "register_gym_spec_conversion"], [141, 1, 1, "", "reset"], [141, 1, 1, "", "rollout"], [172, 3, 1, "", "set_exploration_type"], [173, 3, 1, "", "set_gym_backend"], [141, 1, 1, "", "set_seed"], [141, 1, 1, "", "step"], [174, 3, 1, "", "step_mdp"], [175, 3, 1, "", "terminated_or_truncated"]], "torchrl.envs.AsyncEnvPool": [[118, 2, 1, "", "action_key"], [118, 2, 1, "", "action_keys"], [118, 2, 1, "", "action_spec"], [118, 2, 1, "", "action_spec_unbatched"], [118, 1, 1, "", "add_module"], [118, 1, 1, "", "add_truncated_keys"], [118, 1, 1, "", "all_actions"], [118, 1, 1, "", "any_done"], [118, 1, 1, "", "append_transform"], [118, 1, 1, "", "apply"], [118, 1, 1, "", "auto_specs_"], [118, 2, 1, "", "batch_dims"], [118, 2, 1, "", "batch_locked"], [118, 2, 1, "", "batch_size"], [118, 1, 1, "", "bfloat16"], [118, 1, 1, "", "buffers"], [118, 1, 1, "", "cardinality"], [118, 1, 1, "", "check_env_specs"], [118, 1, 1, "", "children"], [118, 1, 1, "", "compile"], [118, 1, 1, "", "cpu"], [118, 1, 1, "", "cuda"], [118, 2, 1, "", "done_key"], [118, 2, 1, "", "done_keys"], [118, 2, 1, "", "done_keys_groups"], [118, 2, 1, "", "done_spec"], [118, 2, 1, "", "done_spec_unbatched"], [118, 1, 1, "", "double"], [118, 1, 1, "", "empty_cache"], [118, 1, 1, "", "eval"], [118, 1, 1, "", "extra_repr"], [118, 1, 1, "", "fake_tensordict"], [118, 1, 1, "", "float"], [118, 1, 1, "", "forward"], [118, 2, 1, "", "full_action_spec"], [118, 2, 1, "", "full_action_spec_unbatched"], [118, 2, 1, "", "full_done_spec"], [118, 2, 1, "", "full_done_spec_unbatched"], [118, 2, 1, "", "full_observation_spec_unbatched"], [118, 2, 1, "", "full_reward_spec"], [118, 2, 1, "", "full_reward_spec_unbatched"], [118, 2, 1, "", "full_state_spec"], [118, 2, 1, "", "full_state_spec_unbatched"], [118, 1, 1, "", "get_buffer"], [118, 1, 1, "", "get_extra_state"], [118, 1, 1, "", "get_parameter"], [118, 1, 1, "", "get_submodule"], [118, 1, 1, "", "half"], [118, 2, 1, "", "input_spec"], [118, 2, 1, "", "input_spec_unbatched"], [118, 1, 1, "", "ipu"], [118, 2, 1, "", "is_spec_locked"], [118, 1, 1, "", "load_state_dict"], [118, 1, 1, "", "maybe_reset"], [118, 1, 1, "", "modules"], [118, 1, 1, "", "mtia"], [118, 1, 1, "", "named_buffers"], [118, 1, 1, "", "named_children"], [118, 1, 1, "", "named_modules"], [118, 1, 1, "", "named_parameters"], [118, 2, 1, "", "observation_keys"], [118, 2, 1, "", "observation_spec"], [118, 2, 1, "", "observation_spec_unbatched"], [118, 2, 1, "", "output_spec"], [118, 2, 1, "", "output_spec_unbatched"], [118, 1, 1, "", "parameters"], [118, 1, 1, "", "rand_action"], [118, 1, 1, "", "rand_step"], [118, 1, 1, "", "register_backward_hook"], [118, 1, 1, "", "register_buffer"], [118, 1, 1, "", "register_forward_hook"], [118, 1, 1, "", "register_forward_pre_hook"], [118, 1, 1, "", "register_full_backward_hook"], [118, 1, 1, "", "register_full_backward_pre_hook"], [118, 1, 1, "", "register_gym"], [118, 1, 1, "", "register_load_state_dict_post_hook"], [118, 1, 1, "", "register_load_state_dict_pre_hook"], [118, 1, 1, "", "register_module"], [118, 1, 1, "", "register_parameter"], [118, 1, 1, "", "register_state_dict_post_hook"], [118, 1, 1, "", "register_state_dict_pre_hook"], [118, 1, 1, "", "requires_grad_"], [118, 1, 1, "", "reset"], [118, 2, 1, "", "reset_keys"], [118, 2, 1, "", "reward_key"], [118, 2, 1, "", "reward_keys"], [118, 2, 1, "", "reward_spec"], [118, 2, 1, "", "reward_spec_unbatched"], [118, 1, 1, "", "rollout"], [118, 1, 1, "", "set_extra_state"], [118, 1, 1, "", "set_seed"], [118, 1, 1, "", "set_spec_lock_"], [118, 1, 1, "", "set_submodule"], [118, 2, 1, "", "shape"], [118, 1, 1, "", "share_memory"], [118, 2, 1, "", "specs"], [118, 1, 1, "", "state_dict"], [118, 2, 1, "", "state_keys"], [118, 2, 1, "", "state_spec"], [118, 2, 1, "", "state_spec_unbatched"], [118, 1, 1, "", "step"], [118, 1, 1, "", "step_and_maybe_reset"], [118, 1, 1, "", "step_mdp"], [118, 1, 1, "", "to"], [118, 1, 1, "", "to_empty"], [118, 1, 1, "", "train"], [118, 1, 1, "", "type"], [118, 1, 1, "", "xpu"], [118, 1, 1, "", "zero_grad"]], "torchrl.envs.ChessEnv": [[121, 2, 1, "", "action_key"], [121, 2, 1, "", "action_keys"], [121, 2, 1, "", "action_spec"], [121, 2, 1, "", "action_spec_unbatched"], [121, 1, 1, "", "add_module"], [121, 1, 1, "", "add_truncated_keys"], [121, 1, 1, "", "all_actions"], [121, 1, 1, "", "any_done"], [121, 1, 1, "", "append_transform"], [121, 1, 1, "", "apply"], [121, 1, 1, "", "auto_specs_"], [121, 2, 1, "", "batch_dims"], [121, 2, 1, "", "batch_locked"], [121, 2, 1, "", "batch_size"], [121, 1, 1, "", "bfloat16"], [121, 1, 1, "", "buffers"], [121, 1, 1, "", "cardinality"], [121, 1, 1, "", "check_env_specs"], [121, 1, 1, "", "children"], [121, 1, 1, "", "compile"], [121, 1, 1, "", "cpu"], [121, 1, 1, "", "cuda"], [121, 2, 1, "", "done_key"], [121, 2, 1, "", "done_keys"], [121, 2, 1, "", "done_keys_groups"], [121, 2, 1, "", "done_spec"], [121, 2, 1, "", "done_spec_unbatched"], [121, 1, 1, "", "double"], [121, 1, 1, "", "empty_cache"], [121, 1, 1, "", "eval"], [121, 1, 1, "", "extra_repr"], [121, 1, 1, "", "fake_tensordict"], [121, 1, 1, "", "float"], [121, 1, 1, "", "forward"], [121, 2, 1, "", "full_action_spec"], [121, 2, 1, "", "full_action_spec_unbatched"], [121, 2, 1, "", "full_done_spec"], [121, 2, 1, "", "full_done_spec_unbatched"], [121, 2, 1, "", "full_observation_spec_unbatched"], [121, 2, 1, "", "full_reward_spec"], [121, 2, 1, "", "full_reward_spec_unbatched"], [121, 2, 1, "", "full_state_spec"], [121, 2, 1, "", "full_state_spec_unbatched"], [121, 1, 1, "", "get_buffer"], [121, 1, 1, "", "get_extra_state"], [121, 1, 1, "", "get_legal_moves"], [121, 1, 1, "", "get_parameter"], [121, 1, 1, "", "get_submodule"], [121, 1, 1, "", "half"], [121, 2, 1, "", "input_spec"], [121, 2, 1, "", "input_spec_unbatched"], [121, 1, 1, "", "ipu"], [121, 2, 1, "", "is_spec_locked"], [121, 1, 1, "", "load_state_dict"], [121, 1, 1, "", "maybe_reset"], [121, 1, 1, "", "modules"], [121, 1, 1, "", "mtia"], [121, 1, 1, "", "named_buffers"], [121, 1, 1, "", "named_children"], [121, 1, 1, "", "named_modules"], [121, 1, 1, "", "named_parameters"], [121, 2, 1, "", "observation_keys"], [121, 2, 1, "", "observation_spec"], [121, 2, 1, "", "observation_spec_unbatched"], [121, 2, 1, "", "output_spec"], [121, 2, 1, "", "output_spec_unbatched"], [121, 1, 1, "", "parameters"], [121, 1, 1, "", "rand_action"], [121, 1, 1, "", "rand_step"], [121, 1, 1, "", "register_backward_hook"], [121, 1, 1, "", "register_buffer"], [121, 1, 1, "", "register_forward_hook"], [121, 1, 1, "", "register_forward_pre_hook"], [121, 1, 1, "", "register_full_backward_hook"], [121, 1, 1, "", "register_full_backward_pre_hook"], [121, 1, 1, "", "register_gym"], [121, 1, 1, "", "register_load_state_dict_post_hook"], [121, 1, 1, "", "register_load_state_dict_pre_hook"], [121, 1, 1, "", "register_module"], [121, 1, 1, "", "register_parameter"], [121, 1, 1, "", "register_state_dict_post_hook"], [121, 1, 1, "", "register_state_dict_pre_hook"], [121, 1, 1, "", "requires_grad_"], [121, 1, 1, "", "reset"], [121, 2, 1, "", "reset_keys"], [121, 2, 1, "", "reward_key"], [121, 2, 1, "", "reward_keys"], [121, 2, 1, "", "reward_spec"], [121, 2, 1, "", "reward_spec_unbatched"], [121, 1, 1, "", "rollout"], [121, 1, 1, "", "set_extra_state"], [121, 1, 1, "", "set_seed"], [121, 1, 1, "", "set_spec_lock_"], [121, 1, 1, "", "set_submodule"], [121, 2, 1, "", "shape"], [121, 1, 1, "", "share_memory"], [121, 2, 1, "", "specs"], [121, 1, 1, "", "state_dict"], [121, 2, 1, "", "state_keys"], [121, 2, 1, "", "state_spec"], [121, 2, 1, "", "state_spec_unbatched"], [121, 1, 1, "", "step"], [121, 1, 1, "", "step_and_maybe_reset"], [121, 1, 1, "", "step_mdp"], [121, 1, 1, "", "to"], [121, 1, 1, "", "to_empty"], [121, 1, 1, "", "train"], [121, 1, 1, "", "type"], [121, 1, 1, "", "xpu"], [121, 1, 1, "", "zero_grad"]], "torchrl.envs.EnvBase": [[124, 2, 1, "", "action_key"], [124, 2, 1, "", "action_keys"], [124, 2, 1, "", "action_spec"], [124, 2, 1, "", "action_spec_unbatched"], [124, 1, 1, "", "add_module"], [124, 1, 1, "", "add_truncated_keys"], [124, 1, 1, "", "all_actions"], [124, 1, 1, "", "any_done"], [124, 1, 1, "", "append_transform"], [124, 1, 1, "", "apply"], [124, 1, 1, "", "auto_specs_"], [124, 2, 1, "", "batch_dims"], [124, 2, 1, "", "batch_locked"], [124, 2, 1, "", "batch_size"], [124, 1, 1, "", "bfloat16"], [124, 1, 1, "", "buffers"], [124, 1, 1, "", "cardinality"], [124, 1, 1, "", "check_env_specs"], [124, 1, 1, "", "children"], [124, 1, 1, "", "compile"], [124, 1, 1, "", "cpu"], [124, 1, 1, "", "cuda"], [124, 2, 1, "", "done_key"], [124, 2, 1, "", "done_keys"], [124, 2, 1, "", "done_keys_groups"], [124, 2, 1, "", "done_spec"], [124, 2, 1, "", "done_spec_unbatched"], [124, 1, 1, "", "double"], [124, 1, 1, "", "empty_cache"], [124, 1, 1, "", "eval"], [124, 1, 1, "", "extra_repr"], [124, 1, 1, "", "fake_tensordict"], [124, 1, 1, "", "float"], [124, 1, 1, "", "forward"], [124, 2, 1, "", "full_action_spec"], [124, 2, 1, "", "full_action_spec_unbatched"], [124, 2, 1, "", "full_done_spec"], [124, 2, 1, "", "full_done_spec_unbatched"], [124, 2, 1, "", "full_observation_spec_unbatched"], [124, 2, 1, "", "full_reward_spec"], [124, 2, 1, "", "full_reward_spec_unbatched"], [124, 2, 1, "", "full_state_spec"], [124, 2, 1, "", "full_state_spec_unbatched"], [124, 1, 1, "", "get_buffer"], [124, 1, 1, "", "get_extra_state"], [124, 1, 1, "", "get_parameter"], [124, 1, 1, "", "get_submodule"], [124, 1, 1, "", "half"], [124, 2, 1, "", "input_spec"], [124, 2, 1, "", "input_spec_unbatched"], [124, 1, 1, "", "ipu"], [124, 2, 1, "", "is_spec_locked"], [124, 1, 1, "", "load_state_dict"], [124, 1, 1, "", "maybe_reset"], [124, 1, 1, "", "modules"], [124, 1, 1, "", "mtia"], [124, 1, 1, "", "named_buffers"], [124, 1, 1, "", "named_children"], [124, 1, 1, "", "named_modules"], [124, 1, 1, "", "named_parameters"], [124, 2, 1, "", "observation_keys"], [124, 2, 1, "", "observation_spec"], [124, 2, 1, "", "observation_spec_unbatched"], [124, 2, 1, "", "output_spec"], [124, 2, 1, "", "output_spec_unbatched"], [124, 1, 1, "", "parameters"], [124, 1, 1, "", "rand_action"], [124, 1, 1, "id0", "rand_step"], [124, 1, 1, "", "register_backward_hook"], [124, 1, 1, "", "register_buffer"], [124, 1, 1, "", "register_forward_hook"], [124, 1, 1, "", "register_forward_pre_hook"], [124, 1, 1, "", "register_full_backward_hook"], [124, 1, 1, "", "register_full_backward_pre_hook"], [124, 1, 1, "", "register_gym"], [124, 1, 1, "", "register_load_state_dict_post_hook"], [124, 1, 1, "", "register_load_state_dict_pre_hook"], [124, 1, 1, "", "register_module"], [124, 1, 1, "", "register_parameter"], [124, 1, 1, "", "register_state_dict_post_hook"], [124, 1, 1, "", "register_state_dict_pre_hook"], [124, 1, 1, "", "requires_grad_"], [124, 1, 1, "id1", "reset"], [124, 2, 1, "", "reset_keys"], [124, 2, 1, "", "reward_key"], [124, 2, 1, "", "reward_keys"], [124, 2, 1, "", "reward_spec"], [124, 2, 1, "", "reward_spec_unbatched"], [124, 1, 1, "id2", "rollout"], [124, 1, 1, "", "set_extra_state"], [124, 1, 1, "id3", "set_seed"], [124, 1, 1, "", "set_spec_lock_"], [124, 1, 1, "", "set_submodule"], [124, 2, 1, "", "shape"], [124, 1, 1, "", "share_memory"], [124, 2, 1, "", "specs"], [124, 1, 1, "", "state_dict"], [124, 2, 1, "", "state_keys"], [124, 2, 1, "", "state_spec"], [124, 2, 1, "", "state_spec_unbatched"], [124, 1, 1, "id4", "step"], [124, 1, 1, "", "step_and_maybe_reset"], [124, 1, 1, "", "step_mdp"], [124, 1, 1, "", "to"], [124, 1, 1, "", "to_empty"], [124, 1, 1, "", "train"], [124, 1, 1, "", "type"], [124, 1, 1, "", "xpu"], [124, 1, 1, "", "zero_grad"]], "torchrl.envs.EnvCreator": [[125, 1, 1, "", "make_variant"]], "torchrl.envs.GymLikeEnv": [[128, 2, 1, "", "action_key"], [128, 2, 1, "", "action_keys"], [128, 2, 1, "", "action_spec"], [128, 2, 1, "", "action_spec_unbatched"], [128, 1, 1, "", "add_module"], [128, 1, 1, "", "add_truncated_keys"], [128, 1, 1, "", "all_actions"], [128, 1, 1, "", "any_done"], [128, 1, 1, "", "append_transform"], [128, 1, 1, "", "apply"], [128, 1, 1, "", "auto_register_info_dict"], [128, 1, 1, "", "auto_specs_"], [128, 2, 1, "", "batch_dims"], [128, 2, 1, "", "batch_locked"], [128, 2, 1, "", "batch_size"], [128, 1, 1, "", "bfloat16"], [128, 1, 1, "", "buffers"], [128, 1, 1, "", "cardinality"], [128, 1, 1, "", "check_env_specs"], [128, 1, 1, "", "children"], [128, 1, 1, "", "close"], [128, 1, 1, "", "compile"], [128, 1, 1, "", "cpu"], [128, 1, 1, "", "cuda"], [128, 2, 1, "", "done_key"], [128, 2, 1, "", "done_keys"], [128, 2, 1, "", "done_keys_groups"], [128, 2, 1, "", "done_spec"], [128, 2, 1, "", "done_spec_unbatched"], [128, 1, 1, "", "double"], [128, 1, 1, "", "empty_cache"], [128, 1, 1, "", "eval"], [128, 1, 1, "", "extra_repr"], [128, 1, 1, "", "fake_tensordict"], [128, 1, 1, "", "fast_encoding"], [128, 1, 1, "", "float"], [128, 1, 1, "", "forward"], [128, 2, 1, "", "full_action_spec"], [128, 2, 1, "", "full_action_spec_unbatched"], [128, 2, 1, "", "full_done_spec"], [128, 2, 1, "", "full_done_spec_unbatched"], [128, 2, 1, "", "full_observation_spec_unbatched"], [128, 2, 1, "", "full_reward_spec"], [128, 2, 1, "", "full_reward_spec_unbatched"], [128, 2, 1, "", "full_state_spec"], [128, 2, 1, "", "full_state_spec_unbatched"], [128, 1, 1, "", "get_buffer"], [128, 1, 1, "", "get_extra_state"], [128, 1, 1, "", "get_parameter"], [128, 1, 1, "", "get_submodule"], [128, 1, 1, "", "half"], [128, 2, 1, "", "input_spec"], [128, 2, 1, "", "input_spec_unbatched"], [128, 1, 1, "", "ipu"], [128, 2, 1, "", "is_spec_locked"], [128, 1, 1, "", "load_state_dict"], [128, 1, 1, "", "maybe_reset"], [128, 1, 1, "", "modules"], [128, 1, 1, "", "mtia"], [128, 1, 1, "", "named_buffers"], [128, 1, 1, "", "named_children"], [128, 1, 1, "", "named_modules"], [128, 1, 1, "", "named_parameters"], [128, 2, 1, "", "observation_keys"], [128, 2, 1, "", "observation_spec"], [128, 2, 1, "", "observation_spec_unbatched"], [128, 2, 1, "", "output_spec"], [128, 2, 1, "", "output_spec_unbatched"], [128, 1, 1, "", "parameters"], [128, 1, 1, "", "rand_action"], [128, 1, 1, "", "rand_step"], [128, 1, 1, "", "read_action"], [128, 1, 1, "", "read_done"], [128, 1, 1, "", "read_obs"], [128, 1, 1, "", "read_reward"], [128, 1, 1, "", "register_backward_hook"], [128, 1, 1, "", "register_buffer"], [128, 1, 1, "", "register_forward_hook"], [128, 1, 1, "", "register_forward_pre_hook"], [128, 1, 1, "", "register_full_backward_hook"], [128, 1, 1, "", "register_full_backward_pre_hook"], [128, 1, 1, "", "register_gym"], [128, 1, 1, "", "register_load_state_dict_post_hook"], [128, 1, 1, "", "register_load_state_dict_pre_hook"], [128, 1, 1, "", "register_module"], [128, 1, 1, "", "register_parameter"], [128, 1, 1, "", "register_state_dict_post_hook"], [128, 1, 1, "", "register_state_dict_pre_hook"], [128, 1, 1, "", "requires_grad_"], [128, 1, 1, "", "reset"], [128, 2, 1, "", "reset_keys"], [128, 2, 1, "", "reward_key"], [128, 2, 1, "", "reward_keys"], [128, 2, 1, "", "reward_spec"], [128, 2, 1, "", "reward_spec_unbatched"], [128, 1, 1, "", "rollout"], [128, 1, 1, "", "set_extra_state"], [128, 1, 1, "", "set_info_dict_reader"], [128, 1, 1, "", "set_seed"], [128, 1, 1, "", "set_spec_lock_"], [128, 1, 1, "", "set_submodule"], [128, 2, 1, "", "shape"], [128, 1, 1, "", "share_memory"], [128, 2, 1, "", "specs"], [128, 1, 1, "", "state_dict"], [128, 2, 1, "", "state_keys"], [128, 2, 1, "", "state_spec"], [128, 2, 1, "", "state_spec_unbatched"], [128, 1, 1, "", "step"], [128, 1, 1, "", "step_and_maybe_reset"], [128, 1, 1, "", "step_mdp"], [128, 1, 1, "", "to"], [128, 1, 1, "", "to_empty"], [128, 1, 1, "", "train"], [128, 1, 1, "", "type"], [128, 1, 1, "", "xpu"], [128, 1, 1, "", "zero_grad"]], "torchrl.envs.LLMHashingEnv": [[135, 2, 1, "", "action_key"], [135, 2, 1, "", "action_keys"], [135, 2, 1, "", "action_spec"], [135, 2, 1, "", "action_spec_unbatched"], [135, 1, 1, "", "add_module"], [135, 1, 1, "", "add_truncated_keys"], [135, 1, 1, "", "all_actions"], [135, 1, 1, "", "any_done"], [135, 1, 1, "", "append_transform"], [135, 1, 1, "", "apply"], [135, 1, 1, "", "auto_specs_"], [135, 2, 1, "", "batch_dims"], [135, 2, 1, "", "batch_locked"], [135, 2, 1, "", "batch_size"], [135, 1, 1, "", "bfloat16"], [135, 1, 1, "", "buffers"], [135, 1, 1, "", "cardinality"], [135, 1, 1, "", "check_env_specs"], [135, 1, 1, "", "children"], [135, 1, 1, "", "compile"], [135, 1, 1, "", "cpu"], [135, 1, 1, "", "cuda"], [135, 2, 1, "", "done_key"], [135, 2, 1, "", "done_keys"], [135, 2, 1, "", "done_keys_groups"], [135, 2, 1, "", "done_spec"], [135, 2, 1, "", "done_spec_unbatched"], [135, 1, 1, "", "double"], [135, 1, 1, "", "empty_cache"], [135, 1, 1, "", "eval"], [135, 1, 1, "", "extra_repr"], [135, 1, 1, "", "fake_tensordict"], [135, 1, 1, "", "float"], [135, 1, 1, "", "forward"], [135, 2, 1, "", "full_action_spec"], [135, 2, 1, "", "full_action_spec_unbatched"], [135, 2, 1, "", "full_done_spec"], [135, 2, 1, "", "full_done_spec_unbatched"], [135, 2, 1, "", "full_observation_spec_unbatched"], [135, 2, 1, "", "full_reward_spec"], [135, 2, 1, "", "full_reward_spec_unbatched"], [135, 2, 1, "", "full_state_spec"], [135, 2, 1, "", "full_state_spec_unbatched"], [135, 1, 1, "", "get_buffer"], [135, 1, 1, "", "get_extra_state"], [135, 1, 1, "", "get_parameter"], [135, 1, 1, "", "get_submodule"], [135, 1, 1, "", "half"], [135, 2, 1, "", "input_spec"], [135, 2, 1, "", "input_spec_unbatched"], [135, 1, 1, "", "ipu"], [135, 2, 1, "", "is_spec_locked"], [135, 1, 1, "", "load_state_dict"], [135, 1, 1, "", "make_tensordict"], [135, 1, 1, "", "maybe_reset"], [135, 1, 1, "", "modules"], [135, 1, 1, "", "mtia"], [135, 1, 1, "", "named_buffers"], [135, 1, 1, "", "named_children"], [135, 1, 1, "", "named_modules"], [135, 1, 1, "", "named_parameters"], [135, 2, 1, "", "observation_keys"], [135, 2, 1, "", "observation_spec"], [135, 2, 1, "", "observation_spec_unbatched"], [135, 2, 1, "", "output_spec"], [135, 2, 1, "", "output_spec_unbatched"], [135, 1, 1, "", "parameters"], [135, 1, 1, "", "rand_action"], [135, 1, 1, "", "rand_step"], [135, 1, 1, "", "register_backward_hook"], [135, 1, 1, "", "register_buffer"], [135, 1, 1, "", "register_forward_hook"], [135, 1, 1, "", "register_forward_pre_hook"], [135, 1, 1, "", "register_full_backward_hook"], [135, 1, 1, "", "register_full_backward_pre_hook"], [135, 1, 1, "", "register_gym"], [135, 1, 1, "", "register_load_state_dict_post_hook"], [135, 1, 1, "", "register_load_state_dict_pre_hook"], [135, 1, 1, "", "register_module"], [135, 1, 1, "", "register_parameter"], [135, 1, 1, "", "register_state_dict_post_hook"], [135, 1, 1, "", "register_state_dict_pre_hook"], [135, 1, 1, "", "requires_grad_"], [135, 1, 1, "", "reset"], [135, 2, 1, "", "reset_keys"], [135, 2, 1, "", "reward_key"], [135, 2, 1, "", "reward_keys"], [135, 2, 1, "", "reward_spec"], [135, 2, 1, "", "reward_spec_unbatched"], [135, 1, 1, "", "rollout"], [135, 1, 1, "", "set_extra_state"], [135, 1, 1, "", "set_seed"], [135, 1, 1, "", "set_spec_lock_"], [135, 1, 1, "", "set_submodule"], [135, 2, 1, "", "shape"], [135, 1, 1, "", "share_memory"], [135, 2, 1, "", "specs"], [135, 1, 1, "", "state_dict"], [135, 2, 1, "", "state_keys"], [135, 2, 1, "", "state_spec"], [135, 2, 1, "", "state_spec_unbatched"], [135, 1, 1, "", "step"], [135, 1, 1, "", "step_and_maybe_reset"], [135, 1, 1, "", "step_mdp"], [135, 1, 1, "", "to"], [135, 1, 1, "", "to_empty"], [135, 1, 1, "", "train"], [135, 1, 1, "", "type"], [135, 1, 1, "", "xpu"], [135, 1, 1, "", "zero_grad"]], "torchrl.envs.ParallelEnv": [[147, 2, 1, "", "action_key"], [147, 2, 1, "", "action_keys"], [147, 2, 1, "", "action_spec"], [147, 2, 1, "", "action_spec_unbatched"], [147, 1, 1, "", "add_module"], [147, 1, 1, "", "add_truncated_keys"], [147, 1, 1, "", "all_actions"], [147, 1, 1, "", "any_done"], [147, 1, 1, "", "append_transform"], [147, 1, 1, "", "apply"], [147, 1, 1, "", "auto_specs_"], [147, 2, 1, "", "batch_dims"], [147, 2, 1, "", "batch_locked"], [147, 2, 1, "", "batch_size"], [147, 1, 1, "", "bfloat16"], [147, 1, 1, "", "buffers"], [147, 1, 1, "", "cardinality"], [147, 1, 1, "", "check_env_specs"], [147, 1, 1, "", "children"], [147, 1, 1, "", "compile"], [147, 1, 1, "", "cpu"], [147, 1, 1, "", "cuda"], [147, 2, 1, "", "done_key"], [147, 2, 1, "", "done_keys"], [147, 2, 1, "", "done_keys_groups"], [147, 2, 1, "", "done_spec"], [147, 2, 1, "", "done_spec_unbatched"], [147, 1, 1, "", "double"], [147, 1, 1, "", "empty_cache"], [147, 1, 1, "", "eval"], [147, 1, 1, "", "extra_repr"], [147, 1, 1, "", "fake_tensordict"], [147, 1, 1, "", "float"], [147, 1, 1, "", "forward"], [147, 2, 1, "", "full_action_spec"], [147, 2, 1, "", "full_action_spec_unbatched"], [147, 2, 1, "", "full_done_spec"], [147, 2, 1, "", "full_done_spec_unbatched"], [147, 2, 1, "", "full_observation_spec_unbatched"], [147, 2, 1, "", "full_reward_spec"], [147, 2, 1, "", "full_reward_spec_unbatched"], [147, 2, 1, "", "full_state_spec"], [147, 2, 1, "", "full_state_spec_unbatched"], [147, 1, 1, "", "get_buffer"], [147, 1, 1, "", "get_extra_state"], [147, 1, 1, "", "get_parameter"], [147, 1, 1, "", "get_submodule"], [147, 1, 1, "", "half"], [147, 2, 1, "", "input_spec"], [147, 2, 1, "", "input_spec_unbatched"], [147, 1, 1, "", "ipu"], [147, 2, 1, "", "is_spec_locked"], [147, 1, 1, "", "load_state_dict"], [147, 1, 1, "", "maybe_reset"], [147, 1, 1, "", "modules"], [147, 1, 1, "", "mtia"], [147, 1, 1, "", "named_buffers"], [147, 1, 1, "", "named_children"], [147, 1, 1, "", "named_modules"], [147, 1, 1, "", "named_parameters"], [147, 2, 1, "", "observation_keys"], [147, 2, 1, "", "observation_spec"], [147, 2, 1, "", "observation_spec_unbatched"], [147, 2, 1, "", "output_spec"], [147, 2, 1, "", "output_spec_unbatched"], [147, 1, 1, "", "parameters"], [147, 1, 1, "", "rand_action"], [147, 1, 1, "", "rand_step"], [147, 1, 1, "", "register_backward_hook"], [147, 1, 1, "", "register_buffer"], [147, 1, 1, "", "register_forward_hook"], [147, 1, 1, "", "register_forward_pre_hook"], [147, 1, 1, "", "register_full_backward_hook"], [147, 1, 1, "", "register_full_backward_pre_hook"], [147, 1, 1, "", "register_gym"], [147, 1, 1, "", "register_load_state_dict_post_hook"], [147, 1, 1, "", "register_load_state_dict_pre_hook"], [147, 1, 1, "", "register_module"], [147, 1, 1, "", "register_parameter"], [147, 1, 1, "", "register_state_dict_post_hook"], [147, 1, 1, "", "register_state_dict_pre_hook"], [147, 1, 1, "", "requires_grad_"], [147, 1, 1, "", "reset"], [147, 2, 1, "", "reset_keys"], [147, 2, 1, "", "reward_key"], [147, 2, 1, "", "reward_keys"], [147, 2, 1, "", "reward_spec"], [147, 2, 1, "", "reward_spec_unbatched"], [147, 1, 1, "", "rollout"], [147, 1, 1, "", "set_extra_state"], [147, 1, 1, "", "set_seed"], [147, 1, 1, "", "set_spec_lock_"], [147, 1, 1, "", "set_submodule"], [147, 2, 1, "", "shape"], [147, 1, 1, "", "share_memory"], [147, 2, 1, "", "specs"], [147, 1, 1, "", "state_dict"], [147, 2, 1, "", "state_keys"], [147, 2, 1, "", "state_spec"], [147, 2, 1, "", "state_spec_unbatched"], [147, 1, 1, "", "step"], [147, 1, 1, "", "step_and_maybe_reset"], [147, 1, 1, "", "step_mdp"], [147, 1, 1, "", "to"], [147, 1, 1, "", "to_empty"], [147, 1, 1, "", "train"], [147, 1, 1, "", "type"], [147, 1, 1, "", "update_kwargs"], [147, 1, 1, "", "xpu"], [147, 1, 1, "", "zero_grad"]], "torchrl.envs.PendulumEnv": [[148, 2, 1, "", "action_key"], [148, 2, 1, "", "action_keys"], [148, 2, 1, "", "action_spec"], [148, 2, 1, "", "action_spec_unbatched"], [148, 1, 1, "", "add_module"], [148, 1, 1, "", "add_truncated_keys"], [148, 1, 1, "", "all_actions"], [148, 1, 1, "", "any_done"], [148, 1, 1, "", "append_transform"], [148, 1, 1, "", "apply"], [148, 1, 1, "", "auto_specs_"], [148, 2, 1, "", "batch_dims"], [148, 2, 1, "", "batch_size"], [148, 1, 1, "", "bfloat16"], [148, 1, 1, "", "buffers"], [148, 1, 1, "", "cardinality"], [148, 1, 1, "", "check_env_specs"], [148, 1, 1, "", "children"], [148, 1, 1, "", "compile"], [148, 1, 1, "", "cpu"], [148, 1, 1, "", "cuda"], [148, 2, 1, "", "done_key"], [148, 2, 1, "", "done_keys"], [148, 2, 1, "", "done_keys_groups"], [148, 2, 1, "", "done_spec"], [148, 2, 1, "", "done_spec_unbatched"], [148, 1, 1, "", "double"], [148, 1, 1, "", "empty_cache"], [148, 1, 1, "", "eval"], [148, 1, 1, "", "extra_repr"], [148, 1, 1, "", "fake_tensordict"], [148, 1, 1, "", "float"], [148, 1, 1, "", "forward"], [148, 2, 1, "", "full_action_spec"], [148, 2, 1, "", "full_action_spec_unbatched"], [148, 2, 1, "", "full_done_spec"], [148, 2, 1, "", "full_done_spec_unbatched"], [148, 2, 1, "", "full_observation_spec_unbatched"], [148, 2, 1, "", "full_reward_spec"], [148, 2, 1, "", "full_reward_spec_unbatched"], [148, 2, 1, "", "full_state_spec"], [148, 2, 1, "", "full_state_spec_unbatched"], [148, 1, 1, "", "gen_params"], [148, 1, 1, "", "get_buffer"], [148, 1, 1, "", "get_extra_state"], [148, 1, 1, "", "get_parameter"], [148, 1, 1, "", "get_submodule"], [148, 1, 1, "", "half"], [148, 2, 1, "", "input_spec"], [148, 2, 1, "", "input_spec_unbatched"], [148, 1, 1, "", "ipu"], [148, 2, 1, "", "is_spec_locked"], [148, 1, 1, "", "load_state_dict"], [148, 1, 1, "", "maybe_reset"], [148, 1, 1, "", "modules"], [148, 1, 1, "", "mtia"], [148, 1, 1, "", "named_buffers"], [148, 1, 1, "", "named_children"], [148, 1, 1, "", "named_modules"], [148, 1, 1, "", "named_parameters"], [148, 2, 1, "", "observation_keys"], [148, 2, 1, "", "observation_spec"], [148, 2, 1, "", "observation_spec_unbatched"], [148, 2, 1, "", "output_spec"], [148, 2, 1, "", "output_spec_unbatched"], [148, 1, 1, "", "parameters"], [148, 1, 1, "", "rand_action"], [148, 1, 1, "", "rand_step"], [148, 1, 1, "", "register_backward_hook"], [148, 1, 1, "", "register_buffer"], [148, 1, 1, "", "register_forward_hook"], [148, 1, 1, "", "register_forward_pre_hook"], [148, 1, 1, "", "register_full_backward_hook"], [148, 1, 1, "", "register_full_backward_pre_hook"], [148, 1, 1, "", "register_gym"], [148, 1, 1, "", "register_load_state_dict_post_hook"], [148, 1, 1, "", "register_load_state_dict_pre_hook"], [148, 1, 1, "", "register_module"], [148, 1, 1, "", "register_parameter"], [148, 1, 1, "", "register_state_dict_post_hook"], [148, 1, 1, "", "register_state_dict_pre_hook"], [148, 1, 1, "", "requires_grad_"], [148, 1, 1, "", "reset"], [148, 2, 1, "", "reset_keys"], [148, 2, 1, "", "reward_key"], [148, 2, 1, "", "reward_keys"], [148, 2, 1, "", "reward_spec"], [148, 2, 1, "", "reward_spec_unbatched"], [148, 1, 1, "", "rollout"], [148, 1, 1, "", "set_extra_state"], [148, 1, 1, "", "set_seed"], [148, 1, 1, "", "set_spec_lock_"], [148, 1, 1, "", "set_submodule"], [148, 2, 1, "", "shape"], [148, 1, 1, "", "share_memory"], [148, 2, 1, "", "specs"], [148, 1, 1, "", "state_dict"], [148, 2, 1, "", "state_keys"], [148, 2, 1, "", "state_spec"], [148, 2, 1, "", "state_spec_unbatched"], [148, 1, 1, "", "step"], [148, 1, 1, "", "step_and_maybe_reset"], [148, 1, 1, "", "step_mdp"], [148, 1, 1, "", "to"], [148, 1, 1, "", "to_empty"], [148, 1, 1, "", "train"], [148, 1, 1, "", "type"], [148, 1, 1, "", "xpu"], [148, 1, 1, "", "zero_grad"]], "torchrl.envs.ProcessorAsyncEnvPool": [[151, 1, 1, "", "_setup"], [151, 2, 1, "", "action_key"], [151, 2, 1, "", "action_keys"], [151, 2, 1, "", "action_spec"], [151, 2, 1, "", "action_spec_unbatched"], [151, 1, 1, "", "add_module"], [151, 1, 1, "", "add_truncated_keys"], [151, 1, 1, "", "all_actions"], [151, 1, 1, "", "any_done"], [151, 1, 1, "", "append_transform"], [151, 1, 1, "", "apply"], [151, 1, 1, "", "async_reset_recv"], [151, 1, 1, "", "async_reset_send"], [151, 1, 1, "", "async_step_recv"], [151, 1, 1, "", "async_step_send"], [151, 1, 1, "", "auto_specs_"], [151, 2, 1, "", "batch_dims"], [151, 2, 1, "", "batch_locked"], [151, 2, 1, "", "batch_size"], [151, 1, 1, "", "bfloat16"], [151, 1, 1, "", "buffers"], [151, 1, 1, "", "cardinality"], [151, 1, 1, "", "check_env_specs"], [151, 1, 1, "", "children"], [151, 1, 1, "", "compile"], [151, 1, 1, "", "cpu"], [151, 1, 1, "", "cuda"], [151, 2, 1, "", "done_key"], [151, 2, 1, "", "done_keys"], [151, 2, 1, "", "done_keys_groups"], [151, 2, 1, "", "done_spec"], [151, 2, 1, "", "done_spec_unbatched"], [151, 1, 1, "", "double"], [151, 1, 1, "", "empty_cache"], [151, 1, 1, "", "eval"], [151, 1, 1, "", "extra_repr"], [151, 1, 1, "", "fake_tensordict"], [151, 1, 1, "", "float"], [151, 1, 1, "", "forward"], [151, 2, 1, "", "full_action_spec"], [151, 2, 1, "", "full_action_spec_unbatched"], [151, 2, 1, "", "full_done_spec"], [151, 2, 1, "", "full_done_spec_unbatched"], [151, 2, 1, "", "full_observation_spec_unbatched"], [151, 2, 1, "", "full_reward_spec"], [151, 2, 1, "", "full_reward_spec_unbatched"], [151, 2, 1, "", "full_state_spec"], [151, 2, 1, "", "full_state_spec_unbatched"], [151, 1, 1, "", "get_buffer"], [151, 1, 1, "", "get_extra_state"], [151, 1, 1, "", "get_parameter"], [151, 1, 1, "", "get_submodule"], [151, 1, 1, "", "half"], [151, 2, 1, "", "input_spec"], [151, 2, 1, "", "input_spec_unbatched"], [151, 1, 1, "", "ipu"], [151, 2, 1, "", "is_spec_locked"], [151, 1, 1, "", "load_state_dict"], [151, 1, 1, "", "maybe_reset"], [151, 1, 1, "", "modules"], [151, 1, 1, "", "mtia"], [151, 1, 1, "", "named_buffers"], [151, 1, 1, "", "named_children"], [151, 1, 1, "", "named_modules"], [151, 1, 1, "", "named_parameters"], [151, 2, 1, "", "observation_keys"], [151, 2, 1, "", "observation_spec"], [151, 2, 1, "", "observation_spec_unbatched"], [151, 2, 1, "", "output_spec"], [151, 2, 1, "", "output_spec_unbatched"], [151, 1, 1, "", "parameters"], [151, 1, 1, "", "rand_action"], [151, 1, 1, "", "rand_step"], [151, 1, 1, "", "register_backward_hook"], [151, 1, 1, "", "register_buffer"], [151, 1, 1, "", "register_forward_hook"], [151, 1, 1, "", "register_forward_pre_hook"], [151, 1, 1, "", "register_full_backward_hook"], [151, 1, 1, "", "register_full_backward_pre_hook"], [151, 1, 1, "", "register_gym"], [151, 1, 1, "", "register_load_state_dict_post_hook"], [151, 1, 1, "", "register_load_state_dict_pre_hook"], [151, 1, 1, "", "register_module"], [151, 1, 1, "", "register_parameter"], [151, 1, 1, "", "register_state_dict_post_hook"], [151, 1, 1, "", "register_state_dict_pre_hook"], [151, 1, 1, "", "requires_grad_"], [151, 1, 1, "", "reset"], [151, 2, 1, "", "reset_keys"], [151, 2, 1, "", "reward_key"], [151, 2, 1, "", "reward_keys"], [151, 2, 1, "", "reward_spec"], [151, 2, 1, "", "reward_spec_unbatched"], [151, 1, 1, "", "rollout"], [151, 1, 1, "", "set_extra_state"], [151, 1, 1, "", "set_seed"], [151, 1, 1, "", "set_spec_lock_"], [151, 1, 1, "", "set_submodule"], [151, 2, 1, "", "shape"], [151, 1, 1, "", "share_memory"], [151, 1, 1, "", "shutdown"], [151, 2, 1, "", "specs"], [151, 1, 1, "", "state_dict"], [151, 2, 1, "", "state_keys"], [151, 2, 1, "", "state_spec"], [151, 2, 1, "", "state_spec_unbatched"], [151, 1, 1, "", "step"], [151, 1, 1, "", "step_and_maybe_reset"], [151, 1, 1, "", "step_mdp"], [151, 1, 1, "", "to"], [151, 1, 1, "", "to_empty"], [151, 1, 1, "", "train"], [151, 1, 1, "", "type"], [151, 1, 1, "", "xpu"], [151, 1, 1, "", "zero_grad"]], "torchrl.envs.SerialEnv": [[156, 2, 1, "", "action_key"], [156, 2, 1, "", "action_keys"], [156, 2, 1, "", "action_spec"], [156, 2, 1, "", "action_spec_unbatched"], [156, 1, 1, "", "add_module"], [156, 1, 1, "", "add_truncated_keys"], [156, 1, 1, "", "all_actions"], [156, 1, 1, "", "any_done"], [156, 1, 1, "", "append_transform"], [156, 1, 1, "", "apply"], [156, 1, 1, "", "auto_specs_"], [156, 2, 1, "", "batch_dims"], [156, 2, 1, "", "batch_locked"], [156, 2, 1, "", "batch_size"], [156, 1, 1, "", "bfloat16"], [156, 1, 1, "", "buffers"], [156, 1, 1, "", "cardinality"], [156, 1, 1, "", "check_env_specs"], [156, 1, 1, "", "children"], [156, 1, 1, "", "compile"], [156, 1, 1, "", "cpu"], [156, 1, 1, "", "cuda"], [156, 2, 1, "", "done_key"], [156, 2, 1, "", "done_keys"], [156, 2, 1, "", "done_keys_groups"], [156, 2, 1, "", "done_spec"], [156, 2, 1, "", "done_spec_unbatched"], [156, 1, 1, "", "double"], [156, 1, 1, "", "empty_cache"], [156, 1, 1, "", "eval"], [156, 1, 1, "", "extra_repr"], [156, 1, 1, "", "fake_tensordict"], [156, 1, 1, "", "float"], [156, 1, 1, "", "forward"], [156, 2, 1, "", "full_action_spec"], [156, 2, 1, "", "full_action_spec_unbatched"], [156, 2, 1, "", "full_done_spec"], [156, 2, 1, "", "full_done_spec_unbatched"], [156, 2, 1, "", "full_observation_spec_unbatched"], [156, 2, 1, "", "full_reward_spec"], [156, 2, 1, "", "full_reward_spec_unbatched"], [156, 2, 1, "", "full_state_spec"], [156, 2, 1, "", "full_state_spec_unbatched"], [156, 1, 1, "", "get_buffer"], [156, 1, 1, "", "get_extra_state"], [156, 1, 1, "", "get_parameter"], [156, 1, 1, "", "get_submodule"], [156, 1, 1, "", "half"], [156, 2, 1, "", "input_spec"], [156, 2, 1, "", "input_spec_unbatched"], [156, 1, 1, "", "ipu"], [156, 2, 1, "", "is_spec_locked"], [156, 1, 1, "", "load_state_dict"], [156, 1, 1, "", "maybe_reset"], [156, 1, 1, "", "modules"], [156, 1, 1, "", "mtia"], [156, 1, 1, "", "named_buffers"], [156, 1, 1, "", "named_children"], [156, 1, 1, "", "named_modules"], [156, 1, 1, "", "named_parameters"], [156, 2, 1, "", "observation_keys"], [156, 2, 1, "", "observation_spec"], [156, 2, 1, "", "observation_spec_unbatched"], [156, 2, 1, "", "output_spec"], [156, 2, 1, "", "output_spec_unbatched"], [156, 1, 1, "", "parameters"], [156, 1, 1, "", "rand_action"], [156, 1, 1, "", "rand_step"], [156, 1, 1, "", "register_backward_hook"], [156, 1, 1, "", "register_buffer"], [156, 1, 1, "", "register_forward_hook"], [156, 1, 1, "", "register_forward_pre_hook"], [156, 1, 1, "", "register_full_backward_hook"], [156, 1, 1, "", "register_full_backward_pre_hook"], [156, 1, 1, "", "register_gym"], [156, 1, 1, "", "register_load_state_dict_post_hook"], [156, 1, 1, "", "register_load_state_dict_pre_hook"], [156, 1, 1, "", "register_module"], [156, 1, 1, "", "register_parameter"], [156, 1, 1, "", "register_state_dict_post_hook"], [156, 1, 1, "", "register_state_dict_pre_hook"], [156, 1, 1, "", "requires_grad_"], [156, 1, 1, "", "reset"], [156, 2, 1, "", "reset_keys"], [156, 2, 1, "", "reward_key"], [156, 2, 1, "", "reward_keys"], [156, 2, 1, "", "reward_spec"], [156, 2, 1, "", "reward_spec_unbatched"], [156, 1, 1, "", "rollout"], [156, 1, 1, "", "set_extra_state"], [156, 1, 1, "", "set_seed"], [156, 1, 1, "", "set_spec_lock_"], [156, 1, 1, "", "set_submodule"], [156, 2, 1, "", "shape"], [156, 1, 1, "", "share_memory"], [156, 2, 1, "", "specs"], [156, 1, 1, "", "state_dict"], [156, 2, 1, "", "state_keys"], [156, 2, 1, "", "state_spec"], [156, 2, 1, "", "state_spec_unbatched"], [156, 1, 1, "", "step"], [156, 1, 1, "", "step_and_maybe_reset"], [156, 1, 1, "", "step_mdp"], [156, 1, 1, "", "to"], [156, 1, 1, "", "to_empty"], [156, 1, 1, "", "train"], [156, 1, 1, "", "type"], [156, 1, 1, "", "update_kwargs"], [156, 1, 1, "", "xpu"], [156, 1, 1, "", "zero_grad"]], "torchrl.envs.ThreadingAsyncEnvPool": [[157, 1, 1, "", "_setup"], [157, 2, 1, "", "action_key"], [157, 2, 1, "", "action_keys"], [157, 2, 1, "", "action_spec"], [157, 2, 1, "", "action_spec_unbatched"], [157, 1, 1, "", "add_module"], [157, 1, 1, "", "add_truncated_keys"], [157, 1, 1, "", "all_actions"], [157, 1, 1, "", "any_done"], [157, 1, 1, "", "append_transform"], [157, 1, 1, "", "apply"], [157, 1, 1, "", "async_reset_recv"], [157, 1, 1, "", "async_reset_send"], [157, 1, 1, "", "async_step_recv"], [157, 1, 1, "", "async_step_send"], [157, 1, 1, "", "auto_specs_"], [157, 2, 1, "", "batch_dims"], [157, 2, 1, "", "batch_locked"], [157, 2, 1, "", "batch_size"], [157, 1, 1, "", "bfloat16"], [157, 1, 1, "", "buffers"], [157, 1, 1, "", "cardinality"], [157, 1, 1, "", "check_env_specs"], [157, 1, 1, "", "children"], [157, 1, 1, "", "compile"], [157, 1, 1, "", "cpu"], [157, 1, 1, "", "cuda"], [157, 2, 1, "", "done_key"], [157, 2, 1, "", "done_keys"], [157, 2, 1, "", "done_keys_groups"], [157, 2, 1, "", "done_spec"], [157, 2, 1, "", "done_spec_unbatched"], [157, 1, 1, "", "double"], [157, 1, 1, "", "empty_cache"], [157, 1, 1, "", "eval"], [157, 1, 1, "", "extra_repr"], [157, 1, 1, "", "fake_tensordict"], [157, 1, 1, "", "float"], [157, 1, 1, "", "forward"], [157, 2, 1, "", "full_action_spec"], [157, 2, 1, "", "full_action_spec_unbatched"], [157, 2, 1, "", "full_done_spec"], [157, 2, 1, "", "full_done_spec_unbatched"], [157, 2, 1, "", "full_observation_spec_unbatched"], [157, 2, 1, "", "full_reward_spec"], [157, 2, 1, "", "full_reward_spec_unbatched"], [157, 2, 1, "", "full_state_spec"], [157, 2, 1, "", "full_state_spec_unbatched"], [157, 1, 1, "", "get_buffer"], [157, 1, 1, "", "get_extra_state"], [157, 1, 1, "", "get_parameter"], [157, 1, 1, "", "get_submodule"], [157, 1, 1, "", "half"], [157, 2, 1, "", "input_spec"], [157, 2, 1, "", "input_spec_unbatched"], [157, 1, 1, "", "ipu"], [157, 2, 1, "", "is_spec_locked"], [157, 1, 1, "", "load_state_dict"], [157, 1, 1, "", "maybe_reset"], [157, 1, 1, "", "modules"], [157, 1, 1, "", "mtia"], [157, 1, 1, "", "named_buffers"], [157, 1, 1, "", "named_children"], [157, 1, 1, "", "named_modules"], [157, 1, 1, "", "named_parameters"], [157, 2, 1, "", "observation_keys"], [157, 2, 1, "", "observation_spec"], [157, 2, 1, "", "observation_spec_unbatched"], [157, 2, 1, "", "output_spec"], [157, 2, 1, "", "output_spec_unbatched"], [157, 1, 1, "", "parameters"], [157, 1, 1, "", "rand_action"], [157, 1, 1, "", "rand_step"], [157, 1, 1, "", "register_backward_hook"], [157, 1, 1, "", "register_buffer"], [157, 1, 1, "", "register_forward_hook"], [157, 1, 1, "", "register_forward_pre_hook"], [157, 1, 1, "", "register_full_backward_hook"], [157, 1, 1, "", "register_full_backward_pre_hook"], [157, 1, 1, "", "register_gym"], [157, 1, 1, "", "register_load_state_dict_post_hook"], [157, 1, 1, "", "register_load_state_dict_pre_hook"], [157, 1, 1, "", "register_module"], [157, 1, 1, "", "register_parameter"], [157, 1, 1, "", "register_state_dict_post_hook"], [157, 1, 1, "", "register_state_dict_pre_hook"], [157, 1, 1, "", "requires_grad_"], [157, 1, 1, "", "reset"], [157, 2, 1, "", "reset_keys"], [157, 2, 1, "", "reward_key"], [157, 2, 1, "", "reward_keys"], [157, 2, 1, "", "reward_spec"], [157, 2, 1, "", "reward_spec_unbatched"], [157, 1, 1, "", "rollout"], [157, 1, 1, "", "set_extra_state"], [157, 1, 1, "", "set_seed"], [157, 1, 1, "", "set_spec_lock_"], [157, 1, 1, "", "set_submodule"], [157, 2, 1, "", "shape"], [157, 1, 1, "", "share_memory"], [157, 1, 1, "", "shutdown"], [157, 2, 1, "", "specs"], [157, 1, 1, "", "state_dict"], [157, 2, 1, "", "state_keys"], [157, 2, 1, "", "state_spec"], [157, 2, 1, "", "state_spec_unbatched"], [157, 1, 1, "", "step"], [157, 1, 1, "", "step_and_maybe_reset"], [157, 1, 1, "", "step_mdp"], [157, 1, 1, "", "to"], [157, 1, 1, "", "to_empty"], [157, 1, 1, "", "train"], [157, 1, 1, "", "type"], [157, 1, 1, "", "xpu"], [157, 1, 1, "", "zero_grad"]], "torchrl.envs.TicTacToeEnv": [[158, 2, 1, "", "action_key"], [158, 2, 1, "", "action_keys"], [158, 2, 1, "", "action_spec"], [158, 2, 1, "", "action_spec_unbatched"], [158, 1, 1, "", "add_module"], [158, 1, 1, "", "add_truncated_keys"], [158, 1, 1, "", "all_actions"], [158, 1, 1, "", "any_done"], [158, 1, 1, "", "append_transform"], [158, 1, 1, "", "apply"], [158, 1, 1, "", "auto_specs_"], [158, 2, 1, "", "batch_dims"], [158, 2, 1, "", "batch_size"], [158, 1, 1, "", "bfloat16"], [158, 1, 1, "", "buffers"], [158, 1, 1, "", "cardinality"], [158, 1, 1, "", "check_env_specs"], [158, 1, 1, "", "children"], [158, 1, 1, "", "compile"], [158, 1, 1, "", "cpu"], [158, 1, 1, "", "cuda"], [158, 2, 1, "", "done_key"], [158, 2, 1, "", "done_keys"], [158, 2, 1, "", "done_keys_groups"], [158, 2, 1, "", "done_spec"], [158, 2, 1, "", "done_spec_unbatched"], [158, 1, 1, "", "double"], [158, 1, 1, "", "empty_cache"], [158, 1, 1, "", "eval"], [158, 1, 1, "", "extra_repr"], [158, 1, 1, "", "fake_tensordict"], [158, 1, 1, "", "float"], [158, 1, 1, "", "forward"], [158, 2, 1, "", "full_action_spec"], [158, 2, 1, "", "full_action_spec_unbatched"], [158, 2, 1, "", "full_done_spec"], [158, 2, 1, "", "full_done_spec_unbatched"], [158, 2, 1, "", "full_observation_spec_unbatched"], [158, 2, 1, "", "full_reward_spec"], [158, 2, 1, "", "full_reward_spec_unbatched"], [158, 2, 1, "", "full_state_spec"], [158, 2, 1, "", "full_state_spec_unbatched"], [158, 1, 1, "", "get_buffer"], [158, 1, 1, "", "get_extra_state"], [158, 1, 1, "", "get_parameter"], [158, 1, 1, "", "get_submodule"], [158, 1, 1, "", "half"], [158, 2, 1, "", "input_spec"], [158, 2, 1, "", "input_spec_unbatched"], [158, 1, 1, "", "ipu"], [158, 2, 1, "", "is_spec_locked"], [158, 1, 1, "", "load_state_dict"], [158, 1, 1, "", "maybe_reset"], [158, 1, 1, "", "modules"], [158, 1, 1, "", "mtia"], [158, 1, 1, "", "named_buffers"], [158, 1, 1, "", "named_children"], [158, 1, 1, "", "named_modules"], [158, 1, 1, "", "named_parameters"], [158, 2, 1, "", "observation_keys"], [158, 2, 1, "", "observation_spec"], [158, 2, 1, "", "observation_spec_unbatched"], [158, 2, 1, "", "output_spec"], [158, 2, 1, "", "output_spec_unbatched"], [158, 1, 1, "", "parameters"], [158, 1, 1, "", "rand_action"], [158, 1, 1, "", "rand_step"], [158, 1, 1, "", "register_backward_hook"], [158, 1, 1, "", "register_buffer"], [158, 1, 1, "", "register_forward_hook"], [158, 1, 1, "", "register_forward_pre_hook"], [158, 1, 1, "", "register_full_backward_hook"], [158, 1, 1, "", "register_full_backward_pre_hook"], [158, 1, 1, "", "register_gym"], [158, 1, 1, "", "register_load_state_dict_post_hook"], [158, 1, 1, "", "register_load_state_dict_pre_hook"], [158, 1, 1, "", "register_module"], [158, 1, 1, "", "register_parameter"], [158, 1, 1, "", "register_state_dict_post_hook"], [158, 1, 1, "", "register_state_dict_pre_hook"], [158, 1, 1, "", "requires_grad_"], [158, 1, 1, "", "reset"], [158, 2, 1, "", "reset_keys"], [158, 2, 1, "", "reward_key"], [158, 2, 1, "", "reward_keys"], [158, 2, 1, "", "reward_spec"], [158, 2, 1, "", "reward_spec_unbatched"], [158, 1, 1, "", "rollout"], [158, 1, 1, "", "set_extra_state"], [158, 1, 1, "", "set_seed"], [158, 1, 1, "", "set_spec_lock_"], [158, 1, 1, "", "set_submodule"], [158, 2, 1, "", "shape"], [158, 1, 1, "", "share_memory"], [158, 2, 1, "", "specs"], [158, 1, 1, "", "state_dict"], [158, 2, 1, "", "state_keys"], [158, 2, 1, "", "state_spec"], [158, 2, 1, "", "state_spec_unbatched"], [158, 1, 1, "", "step"], [158, 1, 1, "", "step_and_maybe_reset"], [158, 1, 1, "", "step_mdp"], [158, 1, 1, "", "to"], [158, 1, 1, "", "to_empty"], [158, 1, 1, "", "train"], [158, 1, 1, "", "type"], [158, 1, 1, "", "xpu"], [158, 1, 1, "", "zero_grad"]], "torchrl.envs.model_based.dreamer": [[169, 3, 1, "", "DreamerDecoder"], [170, 3, 1, "", "DreamerEnv"]], "torchrl.envs.transforms": [[176, 0, 1, "", "ActionDiscretizer"], [177, 0, 1, "", "ActionMask"], [178, 0, 1, "", "AutoResetEnv"], [179, 0, 1, "", "AutoResetTransform"], [180, 0, 1, "", "BatchSizeTransform"], [181, 0, 1, "", "BinarizeReward"], [182, 0, 1, "", "BurnInTransform"], [183, 0, 1, "", "CatFrames"], [184, 0, 1, "", "CatTensors"], [185, 0, 1, "", "CenterCrop"], [186, 0, 1, "", "ClipTransform"], [187, 0, 1, "", "Compose"], [188, 0, 1, "", "ConditionalSkip"], [189, 0, 1, "", "Crop"], [190, 0, 1, "", "DTypeCastTransform"], [191, 0, 1, "", "DeviceCastTransform"], [192, 0, 1, "", "DiscreteActionProjection"], [193, 0, 1, "", "DoubleToFloat"], [194, 0, 1, "", "EndOfLifeTransform"], [195, 0, 1, "", "ExcludeTransform"], [196, 0, 1, "", "FiniteTensorDictCheck"], [197, 0, 1, "", "FlattenObservation"], [198, 0, 1, "", "FrameSkipTransform"], [199, 0, 1, "", "GrayScale"], [200, 0, 1, "", "Hash"], [201, 0, 1, "", "InitTracker"], [202, 0, 1, "", "KLRewardTransform"], [203, 0, 1, "", "LineariseRewards"], [204, 0, 1, "", "MultiAction"], [205, 0, 1, "", "NoopResetEnv"], [206, 0, 1, "", "ObservationNorm"], [207, 0, 1, "", "ObservationTransform"], [208, 0, 1, "", "PermuteTransform"], [209, 0, 1, "", "PinMemoryTransform"], [210, 0, 1, "", "R3MTransform"], [211, 0, 1, "", "RandomCropTensorDict"], [212, 0, 1, "", "RemoveEmptySpecs"], [213, 0, 1, "", "RenameTransform"], [214, 0, 1, "", "Resize"], [215, 0, 1, "", "Reward2GoTransform"], [216, 0, 1, "", "RewardClipping"], [217, 0, 1, "", "RewardScaling"], [218, 0, 1, "", "RewardSum"], [219, 0, 1, "", "SelectTransform"], [220, 0, 1, "", "SignTransform"], [221, 0, 1, "", "SqueezeTransform"], [222, 0, 1, "", "Stack"], [223, 0, 1, "", "StepCounter"], [224, 0, 1, "", "TargetReturn"], [225, 0, 1, "", "TensorDictPrimer"], [226, 0, 1, "", "TimeMaxPool"], [227, 0, 1, "", "Timer"], [228, 0, 1, "", "ToTensorImage"], [229, 0, 1, "", "Tokenizer"], [230, 0, 1, "", "TrajCounter"], [231, 0, 1, "", "Transform"], [232, 0, 1, "", "TransformedEnv"], [233, 0, 1, "", "UnaryTransform"], [234, 0, 1, "", "UnsqueezeTransform"], [235, 0, 1, "", "VC1Transform"], [236, 0, 1, "", "VIPRewardTransform"], [237, 0, 1, "", "VIPTransform"], [238, 0, 1, "", "VecGymEnvTransform"], [239, 0, 1, "", "VecNorm"], [240, 0, 1, "", "VecNormV2"], [241, 0, 1, "", "gSDENoise"]], "torchrl.envs.transforms.ActionDiscretizer": [[176, 0, 1, "", "SamplingStrategy"], [176, 1, 1, "", "inv"], [176, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.ActionMask": [[177, 1, 1, "", "forward"]], "torchrl.envs.transforms.AutoResetEnv": [[178, 1, 1, "", "insert_transform"]], "torchrl.envs.transforms.AutoResetTransform": [[179, 1, 1, "", "forward"]], "torchrl.envs.transforms.BatchSizeTransform": [[180, 1, 1, "", "forward"], [180, 1, 1, "", "transform_env_batch_size"], [180, 1, 1, "", "transform_input_spec"], [180, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.BinarizeReward": [[181, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.BurnInTransform": [[182, 1, 1, "", "forward"]], "torchrl.envs.transforms.CatFrames": [[183, 1, 1, "", "forward"], [183, 1, 1, "", "make_rb_transform_and_sampler"], [183, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CatTensors": [[184, 1, 1, "", "forward"], [184, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CenterCrop": [[185, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ClipTransform": [[186, 1, 1, "", "transform_observation_spec"], [186, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.Compose": [[187, 1, 1, "", "append"], [187, 1, 1, "", "forward"], [187, 1, 1, "", "init"], [187, 1, 1, "", "insert"], [187, 1, 1, "", "to"], [187, 1, 1, "", "transform_action_spec"], [187, 1, 1, "", "transform_env_batch_size"], [187, 1, 1, "", "transform_env_device"], [187, 1, 1, "", "transform_input_spec"], [187, 1, 1, "", "transform_observation_spec"], [187, 1, 1, "", "transform_output_spec"], [187, 1, 1, "", "transform_reward_spec"], [187, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.ConditionalSkip": [[188, 1, 1, "", "forward"]], "torchrl.envs.transforms.Crop": [[189, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.DTypeCastTransform": [[190, 1, 1, "", "forward"], [190, 1, 1, "", "transform_input_spec"], [190, 1, 1, "", "transform_observation_spec"], [190, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.DeviceCastTransform": [[191, 1, 1, "", "forward"], [191, 1, 1, "", "transform_action_spec"], [191, 1, 1, "", "transform_done_spec"], [191, 1, 1, "", "transform_env_device"], [191, 1, 1, "", "transform_input_spec"], [191, 1, 1, "", "transform_observation_spec"], [191, 1, 1, "", "transform_output_spec"], [191, 1, 1, "", "transform_reward_spec"], [191, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.DiscreteActionProjection": [[192, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.EndOfLifeTransform": [[194, 1, 1, "", "forward"], [194, 1, 1, "", "register_keys"], [194, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ExcludeTransform": [[195, 1, 1, "", "forward"], [195, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.FiniteTensorDictCheck": [[196, 1, 1, "", "forward"]], "torchrl.envs.transforms.FlattenObservation": [[197, 1, 1, "", "forward"], [197, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.FrameSkipTransform": [[198, 1, 1, "", "forward"]], "torchrl.envs.transforms.GrayScale": [[199, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Hash": [[200, 1, 1, "", "get_input_from_hash"], [200, 1, 1, "", "reproducible_hash"], [200, 1, 1, "", "state_dict"]], "torchrl.envs.transforms.InitTracker": [[201, 1, 1, "", "forward"], [201, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.KLRewardTransform": [[202, 1, 1, "", "forward"], [202, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.LineariseRewards": [[203, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.MultiAction": [[204, 1, 1, "", "transform_input_spec"], [204, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.ObservationNorm": [[206, 1, 1, "", "init_stats"], [206, 1, 1, "", "transform_action_spec"], [206, 1, 1, "", "transform_observation_spec"], [206, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.PermuteTransform": [[208, 1, 1, "", "transform_input_spec"], [208, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PinMemoryTransform": [[209, 1, 1, "", "forward"]], "torchrl.envs.transforms.R3MTransform": [[210, 1, 1, "", "to"]], "torchrl.envs.transforms.RandomCropTensorDict": [[211, 1, 1, "", "forward"]], "torchrl.envs.transforms.RemoveEmptySpecs": [[212, 1, 1, "", "forward"], [212, 1, 1, "", "transform_input_spec"], [212, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.RenameTransform": [[213, 1, 1, "", "forward"], [213, 1, 1, "", "transform_input_spec"], [213, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.Resize": [[214, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Reward2GoTransform": [[215, 1, 1, "", "forward"]], "torchrl.envs.transforms.RewardClipping": [[216, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardScaling": [[217, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardSum": [[218, 1, 1, "", "forward"], [218, 1, 1, "", "transform_input_spec"], [218, 1, 1, "", "transform_observation_spec"], [218, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.SelectTransform": [[219, 1, 1, "", "forward"], [219, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.SignTransform": [[220, 1, 1, "", "transform_observation_spec"], [220, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.Stack": [[222, 1, 1, "", "forward"], [222, 1, 1, "", "transform_done_spec"], [222, 1, 1, "", "transform_input_spec"], [222, 1, 1, "", "transform_observation_spec"], [222, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.StepCounter": [[223, 1, 1, "", "forward"], [223, 1, 1, "", "transform_input_spec"], [223, 1, 1, "", "transform_observation_spec"], [223, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.TargetReturn": [[224, 1, 1, "", "forward"], [224, 1, 1, "", "transform_input_spec"], [224, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TensorDictPrimer": [[225, 1, 1, "", "forward"], [225, 1, 1, "", "to"], [225, 1, 1, "", "transform_input_spec"], [225, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TimeMaxPool": [[226, 1, 1, "", "forward"], [226, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Timer": [[227, 1, 1, "", "forward"], [227, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ToTensorImage": [[228, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Tokenizer": [[229, 1, 1, "", "forward"], [229, 1, 1, "", "transform_done_spec"], [229, 1, 1, "", "transform_input_spec"], [229, 1, 1, "", "transform_observation_spec"], [229, 1, 1, "", "transform_output_spec"], [229, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.TrajCounter": [[230, 1, 1, "", "forward"], [230, 1, 1, "", "load_state_dict"], [230, 1, 1, "", "state_dict"], [230, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Transform": [[231, 1, 1, "", "clone"], [231, 2, 1, "", "container"], [231, 1, 1, "", "forward"], [231, 1, 1, "", "init"], [231, 1, 1, "", "inv"], [231, 2, 1, "", "parent"], [231, 1, 1, "", "reset_parent"], [231, 1, 1, "", "set_container"], [231, 1, 1, "", "to"], [231, 1, 1, "", "transform_action_spec"], [231, 1, 1, "", "transform_done_spec"], [231, 1, 1, "", "transform_env_batch_size"], [231, 1, 1, "", "transform_env_device"], [231, 1, 1, "", "transform_input_spec"], [231, 1, 1, "", "transform_observation_spec"], [231, 1, 1, "", "transform_output_spec"], [231, 1, 1, "", "transform_reward_spec"], [231, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.TransformedEnv": [[232, 1, 1, "", "add_truncated_keys"], [232, 1, 1, "", "append_transform"], [232, 2, 1, "", "batch_locked"], [232, 2, 1, "", "batch_size"], [232, 1, 1, "", "empty_cache"], [232, 1, 1, "", "eval"], [232, 2, 1, "", "input_spec"], [232, 1, 1, "", "insert_transform"], [232, 1, 1, "", "load_state_dict"], [232, 2, 1, "", "output_spec"], [232, 1, 1, "", "rand_action"], [232, 1, 1, "", "set_missing_tolerance"], [232, 1, 1, "", "set_seed"], [232, 1, 1, "", "state_dict"], [232, 1, 1, "", "to"], [232, 1, 1, "", "train"]], "torchrl.envs.transforms.UnaryTransform": [[233, 1, 1, "", "transform_action_spec"], [233, 1, 1, "", "transform_done_spec"], [233, 1, 1, "", "transform_input_spec"], [233, 1, 1, "", "transform_observation_spec"], [233, 1, 1, "", "transform_output_spec"], [233, 1, 1, "", "transform_reward_spec"], [233, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.UnsqueezeTransform": [[234, 1, 1, "", "transform_action_spec"], [234, 1, 1, "", "transform_observation_spec"], [234, 1, 1, "", "transform_reward_spec"], [234, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.VC1Transform": [[235, 1, 1, "", "forward"], [235, 1, 1, "", "make_noload_model"], [235, 1, 1, "", "to"], [235, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VIPRewardTransform": [[236, 1, 1, "", "forward"], [236, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.VIPTransform": [[237, 1, 1, "", "to"]], "torchrl.envs.transforms.VecGymEnvTransform": [[238, 1, 1, "", "forward"], [238, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VecNorm": [[239, 1, 1, "", "build_td_for_shared_vecnorm"], [239, 1, 1, "", "forward"], [239, 1, 1, "", "freeze"], [239, 1, 1, "", "frozen_copy"], [239, 1, 1, "", "get_extra_state"], [239, 2, 1, "", "loc"], [239, 2, 1, "", "scale"], [239, 1, 1, "", "set_extra_state"], [239, 2, 1, "", "standard_normal"], [239, 1, 1, "", "to_observation_norm"], [239, 1, 1, "", "transform_observation_spec"], [239, 1, 1, "", "unfreeze"]], "torchrl.envs.transforms.VecNormV2": [[240, 1, 1, "", "clone"], [240, 1, 1, "id0", "freeze"], [240, 1, 1, "id1", "frozen_copy"], [240, 1, 1, "id2", "get_extra_state"], [240, 2, 1, "id3", "loc"], [240, 2, 1, "id4", "scale"], [240, 1, 1, "id5", "set_extra_state"], [240, 2, 1, "id6", "standard_normal"], [240, 1, 1, "", "to_observation_norm"], [240, 1, 1, "id7", "transform_observation_spec"], [240, 1, 1, "id8", "transform_output_spec"], [240, 1, 1, "id9", "transform_reward_spec"], [240, 1, 1, "id10", "unfreeze"]], "torchrl.envs.transforms.rb_transforms": [[242, 0, 1, "", "MultiStepTransform"]], "torchrl.envs.transforms.rb_transforms.MultiStepTransform": [[242, 1, 1, "", "add_module"], [242, 1, 1, "", "apply"], [242, 1, 1, "", "bfloat16"], [242, 1, 1, "", "buffers"], [242, 1, 1, "", "children"], [242, 1, 1, "", "compile"], [242, 2, 1, "", "container"], [242, 1, 1, "", "cpu"], [242, 1, 1, "", "cuda"], [242, 1, 1, "", "double"], [242, 1, 1, "", "eval"], [242, 1, 1, "", "extra_repr"], [242, 1, 1, "", "float"], [242, 1, 1, "", "forward"], [242, 1, 1, "", "get_buffer"], [242, 1, 1, "", "get_extra_state"], [242, 1, 1, "", "get_parameter"], [242, 1, 1, "", "get_submodule"], [242, 1, 1, "", "half"], [242, 1, 1, "", "init"], [242, 1, 1, "", "inv"], [242, 1, 1, "", "ipu"], [242, 1, 1, "", "load_state_dict"], [242, 1, 1, "", "modules"], [242, 1, 1, "", "mtia"], [242, 2, 1, "", "n_steps"], [242, 1, 1, "", "named_buffers"], [242, 1, 1, "", "named_children"], [242, 1, 1, "", "named_modules"], [242, 1, 1, "", "named_parameters"], [242, 1, 1, "", "parameters"], [242, 2, 1, "", "parent"], [242, 1, 1, "", "register_backward_hook"], [242, 1, 1, "", "register_buffer"], [242, 1, 1, "", "register_forward_hook"], [242, 1, 1, "", "register_forward_pre_hook"], [242, 1, 1, "", "register_full_backward_hook"], [242, 1, 1, "", "register_full_backward_pre_hook"], [242, 1, 1, "", "register_load_state_dict_post_hook"], [242, 1, 1, "", "register_load_state_dict_pre_hook"], [242, 1, 1, "", "register_module"], [242, 1, 1, "", "register_parameter"], [242, 1, 1, "", "register_state_dict_post_hook"], [242, 1, 1, "", "register_state_dict_pre_hook"], [242, 1, 1, "", "requires_grad_"], [242, 1, 1, "", "set_extra_state"], [242, 1, 1, "", "set_submodule"], [242, 1, 1, "", "share_memory"], [242, 1, 1, "", "state_dict"], [242, 1, 1, "", "to"], [242, 1, 1, "", "to_empty"], [242, 1, 1, "", "train"], [242, 1, 1, "", "transform_action_spec"], [242, 1, 1, "", "transform_done_spec"], [242, 1, 1, "", "transform_env_batch_size"], [242, 1, 1, "", "transform_env_device"], [242, 1, 1, "", "transform_input_spec"], [242, 1, 1, "", "transform_observation_spec"], [242, 1, 1, "", "transform_output_spec"], [242, 1, 1, "", "transform_reward_spec"], [242, 1, 1, "", "transform_state_spec"], [242, 1, 1, "", "type"], [242, 1, 1, "", "xpu"], [242, 1, 1, "", "zero_grad"]], "torchrl.implement_for": [[243, 1, 1, "", "get_class_that_defined_method"], [243, 1, 1, "", "import_module"], [243, 1, 1, "", "module_set"], [243, 1, 1, "", "reset"]], "torchrl.modules": [[244, 0, 1, "", "AdditiveGaussianModule"], [245, 0, 1, "", "BatchRenorm1d"], [246, 0, 1, "", "CEMPlanner"], [247, 0, 1, "", "ConsistentDropout"], [248, 0, 1, "", "ConsistentDropoutModule"], [249, 0, 1, "", "Conv3dNet"], [250, 0, 1, "", "ConvNet"], [251, 0, 1, "", "DTActor"], [252, 0, 1, "", "DdpgCnnActor"], [253, 0, 1, "", "DdpgCnnQNet"], [254, 0, 1, "", "DdpgMlpActor"], [255, 0, 1, "", "DdpgMlpQNet"], [256, 0, 1, "", "DecisionTransformer"], [257, 0, 1, "", "Delta"], [258, 0, 1, "", "DistributionalDQNnet"], [259, 0, 1, "", "DistributionalQValueHook"], [260, 0, 1, "", "DreamerActor"], [261, 0, 1, "", "DuelingCnnDQNet"], [262, 0, 1, "", "EGreedyModule"], [263, 0, 1, "", "GRU"], [264, 0, 1, "", "GRUCell"], [265, 0, 1, "", "GRUModule"], [266, 0, 1, "", "IndependentNormal"], [267, 0, 1, "", "LSTM"], [268, 0, 1, "", "LSTMCell"], [269, 0, 1, "", "LSTMModule"], [270, 0, 1, "", "MLP"], [271, 0, 1, "", "MPCPlannerBase"], [272, 0, 1, "", "MPPIPlanner"], [273, 0, 1, "", "MaskedCategorical"], [274, 0, 1, "", "MaskedOneHotCategorical"], [275, 0, 1, "", "MultiAgentConvNet"], [276, 0, 1, "", "MultiAgentMLP"], [277, 0, 1, "", "MultiAgentNetBase"], [278, 0, 1, "", "NoisyLazyLinear"], [279, 0, 1, "", "NoisyLinear"], [280, 0, 1, "", "ObsDecoder"], [281, 0, 1, "", "ObsEncoder"], [282, 0, 1, "", "OneHotCategorical"], [283, 0, 1, "", "OneHotOrdinal"], [284, 0, 1, "", "OnlineDTActor"], [285, 0, 1, "", "Ordinal"], [286, 0, 1, "", "OrnsteinUhlenbeckProcessModule"], [287, 0, 1, "", "QMixer"], [288, 0, 1, "", "QValueHook"], [289, 0, 1, "", "RSSMPosterior"], [290, 0, 1, "", "RSSMPrior"], [291, 0, 1, "", "Squeeze2dLayer"], [292, 0, 1, "", "SqueezeLayer"], [293, 0, 1, "", "TanhDelta"], [294, 0, 1, "", "TanhNormal"], [295, 0, 1, "", "TruncatedNormal"], [296, 0, 1, "", "VDNMixer"], [297, 0, 1, "", "VmapModule"], [298, 0, 1, "", "recurrent_mode"], [299, 0, 1, "", "reset_noise"], [300, 0, 1, "", "set_recurrent_mode"]], "torchrl.modules.AdditiveGaussianModule": [[244, 1, 1, "", "forward"], [244, 1, 1, "", "step"]], "torchrl.modules.BatchRenorm1d": [[245, 1, 1, "", "forward"]], "torchrl.modules.CEMPlanner": [[246, 1, 1, "", "planning"]], "torchrl.modules.ConsistentDropout": [[247, 1, 1, "", "forward"]], "torchrl.modules.ConsistentDropoutModule": [[248, 1, 1, "", "forward"], [248, 1, 1, "", "make_tensordict_primer"]], "torchrl.modules.Conv3dNet": [[249, 1, 1, "", "forward"]], "torchrl.modules.ConvNet": [[250, 1, 1, "", "default_atari_dqn"], [250, 1, 1, "", "forward"]], "torchrl.modules.DTActor": [[251, 1, 1, "", "default_config"], [251, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnActor": [[252, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnQNet": [[253, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpActor": [[254, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpQNet": [[255, 1, 1, "", "forward"]], "torchrl.modules.DecisionTransformer": [[256, 0, 1, "", "DTConfig"], [256, 1, 1, "", "forward"]], "torchrl.modules.Delta": [[257, 1, 1, "", "expand"], [257, 1, 1, "", "log_prob"], [257, 2, 1, "", "mean"], [257, 2, 1, "", "mode"], [257, 1, 1, "", "rsample"], [257, 1, 1, "", "sample"]], "torchrl.modules.DistributionalDQNnet": [[258, 1, 1, "", "forward"]], "torchrl.modules.DreamerActor": [[260, 1, 1, "", "forward"]], "torchrl.modules.DuelingCnnDQNet": [[261, 1, 1, "", "forward"]], "torchrl.modules.EGreedyModule": [[262, 1, 1, "", "forward"], [262, 1, 1, "", "step"]], "torchrl.modules.GRU": [[263, 1, 1, "", "forward"]], "torchrl.modules.GRUCell": [[264, 1, 1, "", "forward"]], "torchrl.modules.GRUModule": [[265, 1, 1, "", "forward"], [265, 1, 1, "", "make_cudnn_based"], [265, 1, 1, "", "make_python_based"], [265, 1, 1, "id0", "make_tensordict_primer"], [265, 1, 1, "", "set_recurrent_mode"]], "torchrl.modules.IndependentNormal": [[266, 2, 1, "", "mode"]], "torchrl.modules.LSTM": [[267, 1, 1, "", "forward"]], "torchrl.modules.LSTMCell": [[268, 1, 1, "", "forward"]], "torchrl.modules.LSTMModule": [[269, 1, 1, "", "forward"], [269, 1, 1, "", "make_cudnn_based"], [269, 1, 1, "", "make_python_based"], [269, 1, 1, "id0", "make_tensordict_primer"], [269, 1, 1, "", "set_recurrent_mode"]], "torchrl.modules.MLP": [[270, 1, 1, "", "forward"]], "torchrl.modules.MPCPlannerBase": [[271, 1, 1, "", "forward"], [271, 1, 1, "", "planning"]], "torchrl.modules.MPPIPlanner": [[272, 1, 1, "", "planning"]], "torchrl.modules.MaskedCategorical": [[273, 1, 1, "", "log_prob"], [273, 1, 1, "", "sample"]], "torchrl.modules.MaskedOneHotCategorical": [[274, 1, 1, "", "log_prob"], [274, 2, 1, "", "mode"], [274, 1, 1, "", "rsample"], [274, 1, 1, "", "sample"]], "torchrl.modules.MultiAgentNetBase": [[277, 1, 1, "", "forward"], [277, 1, 1, "", "from_stateful_net"], [277, 1, 1, "", "get_stateful_net"], [277, 1, 1, "", "reset_parameters"]], "torchrl.modules.NoisyLazyLinear": [[278, 1, 1, "", "initialize_parameters"]], "torchrl.modules.ObsDecoder": [[280, 1, 1, "", "forward"]], "torchrl.modules.ObsEncoder": [[281, 1, 1, "", "forward"]], "torchrl.modules.OneHotCategorical": [[282, 1, 1, "", "entropy"], [282, 1, 1, "", "log_prob"], [282, 2, 1, "", "mode"], [282, 1, 1, "", "rsample"], [282, 1, 1, "", "sample"]], "torchrl.modules.OnlineDTActor": [[284, 1, 1, "", "default_config"], [284, 1, 1, "", "forward"]], "torchrl.modules.OrnsteinUhlenbeckProcessModule": [[286, 1, 1, "", "forward"], [286, 1, 1, "", "step"]], "torchrl.modules.QMixer": [[287, 1, 1, "", "mix"]], "torchrl.modules.RSSMPosterior": [[289, 1, 1, "", "forward"]], "torchrl.modules.RSSMPrior": [[290, 1, 1, "", "forward"]], "torchrl.modules.SqueezeLayer": [[292, 1, 1, "", "forward"]], "torchrl.modules.TanhDelta": [[293, 2, 1, "", "mean"], [293, 2, 1, "", "mode"]], "torchrl.modules.TanhNormal": [[294, 1, 1, "", "get_mode"], [294, 2, 1, "", "mean"], [294, 2, 1, "", "mode"], [294, 2, 1, "", "support"]], "torchrl.modules.TruncatedNormal": [[295, 1, 1, "", "log_prob"], [295, 2, 1, "", "mode"]], "torchrl.modules.VDNMixer": [[296, 1, 1, "", "mix"]], "torchrl.modules.VmapModule": [[297, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module": [[301, 0, 1, "", "Actor"], [302, 0, 1, "", "ActorCriticOperator"], [303, 0, 1, "", "ActorCriticWrapper"], [304, 0, 1, "", "ActorValueOperator"], [305, 0, 1, "", "DecisionTransformerInferenceWrapper"], [306, 0, 1, "", "DistributionalQValueActor"], [307, 0, 1, "", "DistributionalQValueModule"], [308, 0, 1, "", "LMHeadActorValueOperator"], [309, 0, 1, "", "MultiStepActorWrapper"], [310, 0, 1, "", "ProbabilisticActor"], [311, 0, 1, "", "QValueActor"], [312, 0, 1, "", "QValueModule"], [313, 0, 1, "", "SafeModule"], [314, 0, 1, "", "SafeProbabilisticModule"], [315, 0, 1, "", "SafeProbabilisticTensorDictSequential"], [316, 0, 1, "", "SafeSequential"], [317, 0, 1, "", "TanhModule"], [318, 0, 1, "", "ValueOperator"], [319, 0, 1, "", "WorldModelWrapper"]], "torchrl.modules.tensordict_module.ActorCriticOperator": [[302, 1, 1, "", "get_critic_operator"], [302, 1, 1, "", "get_policy_head"], [302, 1, 1, "", "get_value_head"], [302, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorCriticWrapper": [[303, 1, 1, "", "get_policy_head"], [303, 1, 1, "", "get_policy_operator"], [303, 1, 1, "", "get_value_head"], [303, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorValueOperator": [[304, 1, 1, "", "get_policy_head"], [304, 1, 1, "", "get_policy_operator"], [304, 1, 1, "", "get_value_head"], [304, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper": [[305, 1, 1, "", "forward"], [305, 1, 1, "", "mask_context"], [305, 1, 1, "", "set_tensor_keys"]], "torchrl.modules.tensordict_module.DistributionalQValueModule": [[307, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.MultiStepActorWrapper": [[309, 1, 1, "", "forward"], [309, 2, 1, "", "init_key"]], "torchrl.modules.tensordict_module.QValueModule": [[312, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.SafeModule": [[313, 1, 1, "", "random"], [313, 1, 1, "", "random_sample"], [313, 1, 1, "", "to"]], "torchrl.modules.tensordict_module.SafeProbabilisticModule": [[314, 1, 1, "", "random"], [314, 1, 1, "", "random_sample"]], "torchrl.modules.tensordict_module.TanhModule": [[317, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.WorldModelWrapper": [[319, 1, 1, "", "get_reward_operator"], [319, 1, 1, "", "get_transition_model_operator"]], "torchrl.modules.utils": [[320, 0, 1, "", "biased_softplus"], [321, 0, 1, "", "get_primers_from_module"], [322, 0, 1, "", "inv_softplus"], [323, 0, 1, "", "mappings"]], "torchrl.modules.utils.biased_softplus": [[320, 1, 1, "", "forward"]], "torchrl.objectives": [[324, 0, 1, "", "A2CLoss"], [325, 0, 1, "", "CQLLoss"], [326, 0, 1, "", "ClipPPOLoss"], [327, 0, 1, "", "CrossQLoss"], [328, 0, 1, "", "DDPGLoss"], [329, 0, 1, "", "DQNLoss"], [330, 0, 1, "", "DTLoss"], [331, 0, 1, "", "DiscreteCQLLoss"], [332, 0, 1, "", "DiscreteIQLLoss"], [333, 0, 1, "", "DiscreteSACLoss"], [334, 0, 1, "", "DistributionalDQNLoss"], [335, 0, 1, "", "DreamerActorLoss"], [336, 0, 1, "", "DreamerModelLoss"], [337, 0, 1, "", "DreamerValueLoss"], [338, 0, 1, "", "GAILLoss"], [339, 0, 1, "", "HardUpdate"], [340, 0, 1, "", "IQLLoss"], [341, 0, 1, "", "KLPENPPOLoss"], [342, 0, 1, "", "LossModule"], [343, 0, 1, "", "OnlineDTLoss"], [344, 0, 1, "", "PPOLoss"], [345, 0, 1, "", "REDQLoss"], [346, 0, 1, "", "ReinforceLoss"], [347, 0, 1, "", "SACLoss"], [348, 0, 1, "", "SoftUpdate"], [349, 0, 1, "", "TD3BCLoss"], [350, 0, 1, "", "TD3Loss"], [351, 0, 1, "", "ValueEstimators"], [352, 0, 1, "", "default_value_kwargs"], [353, 0, 1, "", "distance_loss"], [354, 0, 1, "", "group_optimizers"], [355, 0, 1, "", "hold_out_net"], [356, 0, 1, "", "hold_out_params"], [358, 0, 1, "", "next_state_value"]], "torchrl.objectives.A2CLoss": [[324, 4, 1, "", "default_keys"], [324, 1, 1, "", "forward"], [324, 2, 1, "", "functional"], [324, 1, 1, "", "loss_critic"], [324, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.CQLLoss": [[325, 4, 1, "", "default_keys"], [325, 1, 1, "", "forward"], [325, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ClipPPOLoss": [[326, 1, 1, "", "forward"]], "torchrl.objectives.CrossQLoss": [[327, 1, 1, "", "actor_loss"], [327, 1, 1, "", "alpha_loss"], [327, 4, 1, "", "default_keys"], [327, 1, 1, "", "forward"], [327, 1, 1, "", "load_state_dict"], [327, 1, 1, "", "make_value_estimator"], [327, 1, 1, "", "maybe_init_target_entropy"], [327, 1, 1, "", "qvalue_loss"], [327, 1, 1, "", "set_keys"], [327, 1, 1, "", "state_dict"], [327, 2, 1, "", "target_entropy_buffer"]], "torchrl.objectives.DDPGLoss": [[328, 4, 1, "", "default_keys"], [328, 1, 1, "", "forward"], [328, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DQNLoss": [[329, 4, 1, "", "default_keys"], [329, 1, 1, "", "forward"], [329, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DTLoss": [[330, 4, 1, "", "default_keys"], [330, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteCQLLoss": [[331, 4, 1, "", "default_keys"], [331, 1, 1, "", "forward"], [331, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DiscreteIQLLoss": [[332, 4, 1, "", "default_keys"], [332, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteSACLoss": [[333, 4, 1, "", "default_keys"], [333, 1, 1, "", "forward"], [333, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DistributionalDQNLoss": [[334, 4, 1, "", "default_keys"], [334, 1, 1, "", "forward"], [334, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerActorLoss": [[335, 4, 1, "", "default_keys"], [335, 1, 1, "", "forward"], [335, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerModelLoss": [[336, 4, 1, "", "default_keys"], [336, 1, 1, "", "forward"]], "torchrl.objectives.DreamerValueLoss": [[337, 4, 1, "", "default_keys"], [337, 1, 1, "", "forward"]], "torchrl.objectives.GAILLoss": [[338, 4, 1, "", "default_keys"], [338, 1, 1, "", "forward"]], "torchrl.objectives.IQLLoss": [[340, 4, 1, "", "default_keys"], [340, 1, 1, "", "forward"], [340, 1, 1, "", "loss_value_diff"], [340, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.KLPENPPOLoss": [[341, 1, 1, "", "forward"]], "torchrl.objectives.LossModule": [[342, 1, 1, "", "convert_to_functional"], [342, 1, 1, "", "forward"], [342, 1, 1, "", "from_stateful_net"], [342, 2, 1, "", "functional"], [342, 1, 1, "", "get_stateful_net"], [342, 1, 1, "", "make_value_estimator"], [342, 1, 1, "", "named_parameters"], [342, 1, 1, "", "parameters"], [342, 1, 1, "", "reset_parameters_recursive"], [342, 1, 1, "", "set_keys"], [342, 2, 1, "", "value_estimator"], [342, 2, 1, "", "vmap_randomness"]], "torchrl.objectives.OnlineDTLoss": [[343, 4, 1, "", "default_keys"], [343, 1, 1, "", "forward"]], "torchrl.objectives.PPOLoss": [[344, 4, 1, "", "default_keys"], [344, 1, 1, "", "forward"], [344, 2, 1, "", "functional"], [344, 1, 1, "", "loss_critic"], [344, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.REDQLoss": [[345, 4, 1, "", "default_keys"], [345, 1, 1, "", "forward"], [345, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ReinforceLoss": [[346, 4, 1, "", "default_keys"], [346, 1, 1, "", "forward"], [346, 2, 1, "", "functional"], [346, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.SACLoss": [[347, 4, 1, "", "default_keys"], [347, 1, 1, "", "forward"], [347, 1, 1, "", "load_state_dict"], [347, 1, 1, "", "make_value_estimator"], [347, 1, 1, "", "state_dict"]], "torchrl.objectives.TD3BCLoss": [[349, 1, 1, "", "actor_loss"], [349, 4, 1, "", "default_keys"], [349, 1, 1, "", "forward"], [349, 1, 1, "", "make_value_estimator"], [349, 1, 1, "", "qvalue_loss"]], "torchrl.objectives.TD3Loss": [[350, 4, 1, "", "default_keys"], [350, 1, 1, "", "forward"], [350, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.multiagent": [[357, 0, 1, "", "QMixerLoss"]], "torchrl.objectives.multiagent.QMixerLoss": [[357, 4, 1, "", "default_keys"], [357, 1, 1, "", "forward"], [357, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.value": [[359, 0, 1, "", "GAE"], [360, 0, 1, "", "TD0Estimator"], [361, 0, 1, "", "TD1Estimator"], [362, 0, 1, "", "TDLambdaEstimator"], [363, 0, 1, "", "ValueEstimatorBase"]], "torchrl.objectives.value.GAE": [[359, 1, 1, "", "forward"], [359, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD0Estimator": [[360, 1, 1, "", "forward"], [360, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD1Estimator": [[361, 1, 1, "", "forward"], [361, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TDLambdaEstimator": [[362, 1, 1, "", "forward"], [362, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.ValueEstimatorBase": [[363, 4, 1, "", "default_keys"], [363, 1, 1, "", "forward"], [363, 1, 1, "", "set_keys"], [363, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.functional": [[364, 0, 1, "", "generalized_advantage_estimate"], [365, 0, 1, "", "reward2go"], [366, 0, 1, "", "td0_advantage_estimate"], [367, 0, 1, "", "td0_return_estimate"], [368, 0, 1, "", "td1_advantage_estimate"], [369, 0, 1, "", "td1_return_estimate"], [370, 0, 1, "", "td_lambda_advantage_estimate"], [371, 0, 1, "", "td_lambda_return_estimate"], [372, 0, 1, "", "vec_generalized_advantage_estimate"], [373, 0, 1, "", "vec_td1_advantage_estimate"], [374, 0, 1, "", "vec_td1_return_estimate"], [375, 0, 1, "", "vec_td_lambda_advantage_estimate"], [376, 0, 1, "", "vec_td_lambda_return_estimate"]], "torchrl.record": [[377, 3, 1, "", "PixelRenderTransform"], [378, 3, 1, "", "TensorDictRecorder"], [379, 3, 1, "", "VideoRecorder"]], "torchrl.record.loggers": [[380, 3, 1, "", "Logger"], [382, 3, 1, "", "generate_exp_name"], [383, 3, 1, "", "get_logger"]], "torchrl.record.loggers.csv": [[381, 3, 1, "", "CSVLogger"]], "torchrl.record.loggers.mlflow": [[384, 3, 1, "", "MLFlowLogger"]], "torchrl.record.loggers.tensorboard": [[385, 3, 1, "", "TensorboardLogger"]], "torchrl.record.loggers.wandb": [[386, 3, 1, "", "WandbLogger"]], "torchrl.trainers": [[388, 0, 1, "", "BatchSubSampler"], [389, 0, 1, "", "ClearCudaCache"], [390, 0, 1, "", "CountFramesLog"], [391, 0, 1, "", "LogScalar"], [392, 0, 1, "", "LogValidationReward"], [393, 0, 1, "", "OptimizerHook"], [394, 0, 1, "", "ReplayBufferTrainer"], [395, 0, 1, "", "RewardNormalizer"], [396, 0, 1, "", "SelectKeys"], [397, 0, 1, "", "Trainer"], [398, 0, 1, "", "TrainerHookBase"], [399, 0, 1, "", "UpdateWeights"]], "torchrl.trainers.BatchSubSampler": [[388, 1, 1, "", "register"]], "torchrl.trainers.ClearCudaCache": [[389, 1, 1, "", "register"]], "torchrl.trainers.CountFramesLog": [[390, 1, 1, "", "register"]], "torchrl.trainers.LogScalar": [[391, 1, 1, "", "register"]], "torchrl.trainers.LogValidationReward": [[392, 1, 1, "", "register"]], "torchrl.trainers.OptimizerHook": [[393, 1, 1, "", "register"]], "torchrl.trainers.ReplayBufferTrainer": [[394, 1, 1, "", "register"]], "torchrl.trainers.RewardNormalizer": [[395, 1, 1, "", "register"]], "torchrl.trainers.SelectKeys": [[396, 1, 1, "", "register"]], "torchrl.trainers.Trainer": [[397, 1, 1, "", "load_from_file"]], "torchrl.trainers.TrainerHookBase": [[398, 1, 1, "", "register"]], "torchrl.trainers.UpdateWeights": [[399, 1, 1, "", "register"]], "torchrl.trainers.helpers": [[400, 3, 1, "", "correct_for_frame_skip"], [401, 3, 1, "", "get_stats_random_rollout"], [402, 3, 1, "", "make_collector_offpolicy"], [403, 3, 1, "", "make_collector_onpolicy"], [404, 3, 1, "", "make_dqn_loss"], [405, 3, 1, "", "make_replay_buffer"], [406, 3, 1, "", "make_target_updater"], [407, 3, 1, "", "make_trainer"], [408, 3, 1, "", "parallel_env_constructor"], [409, 3, 1, "", "sync_async_collector"], [410, 3, 1, "", "sync_sync_collector"], [411, 3, 1, "", "transformed_env_constructor"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:property", "3": "py:function", "4": "py:attribute"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "property", "Python property"], "3": ["py", "function", "Python function"], "4": ["py", "attribute", "Python attribute"]}, "titleterms": {"torchrl": [0, 1, 2, 3, 6, 9, 415, 416, 417, 418, 420, 421, 422, 424, 426, 433, 434, 435, 439, 440], "instal": [0, 6, 7, 439], "get": [0, 425, 426, 427, 428, 429, 430], "start": [0, 425, 426, 427, 428, 429, 430], "tutori": [0, 422, 433, 434], "basic": [0, 437], "intermedi": [0, 8], "advanc": 0, "refer": [0, 413], "knowledg": [0, 414], "base": [0, 2, 7, 414, 424], "indic": 0, "tabl": 0, "collector": [1, 420, 421, 422, 423, 428, 430, 433, 434, 439], "packag": [1, 2, 3, 415, 416, 417, 418], "batch": [1, 3, 420, 435, 437], "size": [1, 3, 420, 437], "polici": [1, 2, 4, 416, 420, 422, 423, 424, 426, 430, 432, 433, 434, 435], "copi": 1, "weight": 1, "synchron": 1, "distribut": [1, 415], "environ": [1, 3, 4, 6, 7, 420, 421, 422, 423, 425, 430, 432, 433, 434, 435, 439, 440], "local": 1, "remot": 1, "updat": [1, 420], "extend": 1, "class": [1, 3, 435, 439], "default": 1, "implement": [1, 4], "practic": 1, "consider": [1, 427], "replai": [1, 2, 3, 420, 421, 422, 423, 428, 430, 433, 434, 437, 439], "buffer": [1, 2, 3, 420, 421, 422, 423, 428, 430, 433, 434, 437, 439], "interoper": 1, "singl": [1, 4], "node": 1, "data": [1, 2, 4, 420, 421, 422, 428, 430, 433, 434, 439], "helper": [1, 3], "function": [1, 4, 416, 421, 422, 427, 433, 434, 439], "compos": [2, 187], "support": 2, "type": 2, "choos": 2, "storag": [2, 108, 420, 428, 437], "sampl": [2, 437], "index": 2, "share": 2, "across": 2, "process": 2, "store": [2, 421, 437], "trajectori": [2, 437], "checkpoint": [2, 417], "episod": [2, 4], "format": 2, "ted": [2, 425], "The": [2, 420], "rational": 2, "behind": 2, "structur": [2, 437], "A": [2, 421, 437], "note": 2, "singleton": [2, 4], "dimens": 2, "flatten": 2, "reduc": 2, "memori": 2, "consumpt": 2, "dimension": [2, 4], "tensordict": [2, 415, 437, 439], "special": [2, 426, 439], "case": 2, "footnot": 2, "multi": [2, 3, 415, 416, 432, 433, 434], "agent": [2, 3, 4, 415, 416, 433, 434], "present": 2, "rnn": 2, "transform": [2, 3, 231, 420, 422, 425, 433, 434, 435, 437, 439, 440], "step": [2, 3, 420, 422, 425, 428, 433, 434, 437, 440], "what": [2, 5], "about": 2, "requir": 2, "dataset": 2, "tensorspec": [2, 76], "numer": 2, "subclass": [2, 3], "categor": [2, 32], "tree": [2, 78], "forest": 2, "tensordictmap": [2, 71], "mctsforest": [2, 44], "larg": 2, "languag": 2, "model": [2, 4, 415, 420, 421, 423, 424, 427, 436, 439], "reinforc": [2, 416, 422, 433, 434], "learn": [2, 4, 415, 422, 433, 434], "from": [2, 6, 7], "human": 2, "feedback": 2, "rlhf": 2, "util": [2, 415, 416, 417, 433], "env": [3, 435, 439, 440], "spec": [3, 435, 440], "lock": 3, "method": [3, 420], "partial": 3, "reset": [3, 435, 440], "vector": [3, 439], "async": [3, 439], "exampl": [3, 11, 421, 437], "custom": [3, 11, 435, 437], "nativ": 3, "auto": 3, "dynam": [3, 4, 437], "forward": [3, 4, 420], "invers": 3, "understand": 3, "kei": 3, "tensor": [3, 437], "expos": 3, "outsid": 3, "world": 3, "design": [3, 430], "your": [3, 4, 6, 420, 424, 430, 435], "own": [3, 430], "tip": 3, "us": [3, 4, 6, 9, 416, 423, 436, 437, 439], "clone": [3, 7], "mask": 3, "action": [3, 4, 416, 423, 435], "record": [3, 417, 420, 429], "video": [3, 11, 429], "domain": [3, 415], "specif": [3, 415, 432], "librari": [3, 439], "thing": [4, 420, 435], "consid": 4, "when": [4, 7], "debug": 4, "rl": [4, 9, 425, 427, 439], "gener": [4, 11, 415], "have": 4, "you": 4, "valid": 4, "algorithm": [4, 415], "few": 4, "small": 4, "toi": 4, "problem": 4, "known": 4, "optim": [4, 420, 421, 427, 430], "return": [4, 416], "e": 4, "g": 4, "gridworld": 4, "mountaincar": 4, "visual": 4, "Be": 4, "veri": 4, "care": 4, "ani": 4, "augment": 4, "doe": 4, "entropi": 4, "converg": 4, "too": [4, 8], "quickli": 4, "slowli": 4, "chang": [4, 439], "drastic": 4, "reward": 4, "beyond": 4, "go": 4, "up": [4, 6], "Is": 4, "favor": 4, "compon": 4, "i": 4, "veloc": 4, "vs": 4, "l2": 4, "magnitud": 4, "task": [4, 432], "horizon": 4, "extrem": 4, "long": 4, "ar": 4, "normal": [4, 420, 421, 422], "standard": 4, "explor": [4, 415, 420, 421, 426], "valu": [4, 415, 416, 420, 422, 423, 426], "loss": [4, 420, 421, 422, 423, 430, 433, 434], "earli": 4, "train": [4, 8, 416, 420, 422, 423, 424, 427, 430, 433, 434, 435], "roughli": 4, "uniformli": 4, "random": [4, 416, 433, 434], "intrins": 4, "decai": 4, "progress": 4, "remain": 4, "constant": [4, 421], "increas": 4, "an": [4, 422, 423, 425, 435], "can": 4, "low": 4, "also": 4, "offlin": 4, "observ": [4, 420], "space": 4, "effect": [4, 435], "dramat": 4, "dure": [4, 7], "high": 4, "work": [5, 6, 7, 424], "gym": [5, 439, 440], "openai": 5, "version": [5, 7, 10], "habitat": 6, "lab": 6, "set": [6, 11], "pip": [6, 7], "common": [6, 7, 8], "issu": [6, 7, 10], "mujoco": 7, "prerequisit": [7, 420], "render": [7, 11, 430, 433, 434, 440], "all": 7, "new": 7, "bindindg": 7, "2": 7, "1": 7, "old": 7, "bind": 7, "py": 7, "option": 7, "repo": [7, 9], "import": [7, 420], "pytorch": [8, 9, 10, 424], "error": 8, "solut": 8, "gradient": 8, "relat": 8, "newcom": 8, "my": 8, "slow": 8, "bug": 8, "resourc": 9, "paper": 9, "document": 9, "functorch": 9, "blog": 9, "websit": 9, "educ": 9, "forum": 9, "how": 10, "reproduc": [10, 435], "workaround": 10, "customis": 11, "tweak": 11, "principl": 11, "auto_unwrap_transformed_env": 12, "datacollectorbas": 13, "multisyncdatacollector": 14, "multiasyncdatacollector": 15, "syncdatacollector": 16, "weightupdatereceiverbas": 17, "weightupdatesenderbas": 18, "asyncdatacollector": 19, "distributeddatacollector": 20, "distributedsyncdatacollector": 21, "rpcdatacollector": 22, "raycollector": 23, "submitit_delayed_launch": 24, "split_trajectori": 25, "adaptiveklcontrol": 26, "binari": [27, 424], "binarydiscretetensorspec": 28, "binarytodecim": 29, "bound": 30, "boundedtensorspec": 31, "composit": 33, "compositespec": 34, "constantklcontrol": 35, "densifyreward": 36, "discretetensorspec": 37, "flat2t": 38, "h5combin": 39, "h5split": 40, "hashtoint": 41, "lazystackedcompositespec": 42, "lazystackedtensorspec": 43, "multicategor": 45, "multidiscretetensorspec": 46, "multionehot": 47, "multionehotdiscretetensorspec": 48, "multistep": 49, "nested2t": 50, "nontensor": 51, "nontensorspec": 52, "onehot": 53, "onehotdiscretetensorspec": 54, "pairwisedataset": 55, "prioritizedreplaybuff": 56, "promptdata": 57, "prompttensordicttoken": 58, "querymodul": 59, "randomprojectionhash": 60, "rayreplaybuff": 61, "remotetensordictreplaybuff": 62, "replaybuff": 63, "rewarddata": 64, "rolloutfrommodel": 65, "siphash": 66, "stack": [67, 222], "stackedcomposit": 68, "ted2flat": 69, "ted2nest": 70, "tensordictprioritizedreplaybuff": 72, "tensordictreplaybuff": 73, "tensordicttoken": 74, "tensormap": 75, "tokenizeddatasetload": 77, "unbound": 79, "unboundedcontinu": 80, "unboundedcontinuoustensorspec": 81, "unboundeddiscret": 82, "unboundeddiscretetensorspec": 83, "check_no_exclusive_kei": 84, "consolidate_spec": 85, "contains_lazy_spec": 86, "create_infinite_iter": 87, "get_dataload": 88, "flatstoragecheckpoint": 89, "h5storagecheckpoint": 90, "immutabledatasetwrit": 91, "lazymemmapstorag": 92, "lazystackstorag": 93, "lazytensorstorag": 94, "liststorag": 95, "liststoragecheckpoint": 96, "nestedstoragecheckpoint": 97, "prioritizedsampl": 98, "prioritizedslicesampl": 99, "randomsampl": 100, "replaybufferensembl": 101, "roundrobinwrit": 102, "sampler": 103, "samplerensembl": 104, "samplerwithoutreplac": 105, "slicesampl": 106, "slicesamplerwithoutreplac": 107, "storagecheckpointerbas": 109, "storageensembl": 110, "storageensemblecheckpoint": 111, "tensordictmaxvaluewrit": 112, "tensordictroundrobinwrit": 113, "tensorstorag": 114, "tensorstoragecheckpoint": 115, "writer": 116, "writerensembl": 117, "asyncenvpool": 118, "braxenv": 119, "braxwrapp": 120, "chessenv": 121, "dmcontrolenv": 122, "dmcontrolwrapp": 123, "envbas": [124, 435], "envcreat": 125, "envmetadata": 126, "gymenv": 127, "gymlikeenv": 128, "gymwrapp": 129, "habitatenv": 130, "isaacgymenv": 131, "isaacgymwrapp": 132, "jumanjienv": 133, "jumanjiwrapp": 134, "llmhashingenv": 135, "mogymenv": 136, "mogymwrapp": 137, "marlgroupmaptyp": 138, "meltingpotenv": 139, "meltingpotwrapp": 140, "modelbasedenvbas": 141, "multithreadedenv": 142, "multithreadedenvwrapp": 143, "openmlenv": 144, "openspielenv": 145, "openspielwrapp": 146, "parallelenv": 147, "pendulumenv": 148, "pettingzooenv": 149, "pettingzoowrapp": 150, "processorasyncenvpool": 151, "randompolici": 152, "robohiveenv": 153, "smacv2env": 154, "smacv2wrapp": 155, "serialenv": 156, "threadingasyncenvpool": 157, "tictactoeenv": 158, "unitymlagentsenv": 159, "unitymlagentswrapp": 160, "vmasenv": 161, "vmaswrapp": 162, "check_env_spec": 163, "check_marl_group": 164, "exploration_typ": 165, "get_available_librari": 166, "gym_backend": 167, "make_composite_from_td": 168, "dreamerdecod": 169, "dreamerenv": 170, "register_gym_spec_convers": 171, "set_exploration_typ": 172, "set_gym_backend": 173, "step_mdp": 174, "terminated_or_trunc": 175, "actiondiscret": 176, "actionmask": 177, "autoresetenv": 178, "autoresettransform": 179, "batchsizetransform": 180, "binarizereward": 181, "burnintransform": 182, "catfram": [183, 437], "cattensor": 184, "centercrop": 185, "cliptransform": 186, "conditionalskip": 188, "crop": 189, "dtypecasttransform": 190, "devicecasttransform": 191, "discreteactionproject": 192, "doubletofloat": 193, "endoflifetransform": 194, "excludetransform": 195, "finitetensordictcheck": 196, "flattenobserv": 197, "frameskiptransform": 198, "grayscal": 199, "hash": 200, "inittrack": 201, "klrewardtransform": 202, "linearisereward": 203, "multiact": 204, "noopresetenv": 205, "observationnorm": 206, "observationtransform": 207, "permutetransform": 208, "pinmemorytransform": 209, "r3mtransform": 210, "randomcroptensordict": 211, "removeemptyspec": 212, "renametransform": 213, "resiz": 214, "reward2gotransform": 215, "rewardclip": 216, "rewardsc": 217, "rewardsum": 218, "selecttransform": 219, "signtransform": 220, "squeezetransform": 221, "stepcount": 223, "targetreturn": 224, "tensordictprim": 225, "timemaxpool": 226, "timer": 227, "totensorimag": 228, "token": 229, "trajcount": 230, "transformedenv": 232, "unarytransform": 233, "unsqueezetransform": 234, "vc1transform": 235, "viprewardtransform": 236, "viptransform": 237, "vecgymenvtransform": 238, "vecnorm": [239, 440], "vecnormv2": 240, "gsdenois": 241, "multisteptransform": 242, "implement_for": 243, "additivegaussianmodul": 244, "batchrenorm1d": 245, "cemplann": 246, "consistentdropout": 247, "consistentdropoutmodul": 248, "conv3dnet": 249, "convnet": 250, "dtactor": 251, "ddpgcnnactor": 252, "ddpgcnnqnet": 253, "ddpgmlpactor": 254, "ddpgmlpqnet": 255, "decisiontransform": 256, "delta": 257, "distributionaldqnnet": 258, "distributionalqvaluehook": 259, "dreameractor": 260, "duelingcnndqnet": 261, "egreedymodul": 262, "gru": 263, "grucel": 264, "grumodul": 265, "independentnorm": 266, "lstm": [267, 423], "lstmcell": 268, "lstmmodul": 269, "mlp": [270, 423], "mpcplannerbas": 271, "mppiplann": 272, "maskedcategor": 273, "maskedonehotcategor": 274, "multiagentconvnet": 275, "multiagentmlp": 276, "multiagentnetbas": 277, "noisylazylinear": 278, "noisylinear": 279, "obsdecod": 280, "obsencod": 281, "onehotcategor": 282, "onehotordin": 283, "onlinedtactor": 284, "ordin": 285, "ornsteinuhlenbeckprocessmodul": 286, "qmixer": [287, 416], "qvaluehook": 288, "rssmposterior": 289, "rssmprior": 290, "squeeze2dlay": 291, "squeezelay": 292, "tanhdelta": 293, "tanhnorm": 294, "truncatednorm": 295, "vdnmixer": 296, "vmapmodul": 297, "recurrent_mod": 298, "reset_nois": 299, "set_recurrent_mod": 300, "actor": [301, 415, 420, 426], "actorcriticoper": 302, "actorcriticwrapp": 303, "actorvalueoper": 304, "decisiontransformerinferencewrapp": 305, "distributionalqvalueactor": 306, "distributionalqvaluemodul": 307, "lmheadactorvalueoper": 308, "multistepactorwrapp": 309, "probabilisticactor": 310, "qvalueactor": [311, 415], "qvaluemodul": 312, "safemodul": [313, 415], "safeprobabilisticmodul": 314, "safeprobabilistictensordictsequenti": 315, "safesequenti": 316, "tanhmodul": 317, "valueoper": 318, "worldmodelwrapp": 319, "biased_softplu": 320, "get_primers_from_modul": 321, "inv_softplu": 322, "map": [323, 433], "a2closs": 324, "cqlloss": 325, "clipppoloss": 326, "crossqloss": 327, "ddpgloss": 328, "dqnloss": 329, "dtloss": 330, "discretecqlloss": 331, "discreteiqlloss": 332, "discretesacloss": 333, "distributionaldqnloss": 334, "dreameractorloss": 335, "dreamermodelloss": 336, "dreamervalueloss": 337, "gailloss": 338, "hardupd": 339, "iqlloss": 340, "klpenppoloss": 341, "lossmodul": [342, 420, 427], "onlinedtloss": 343, "ppoloss": 344, "redqloss": 345, "reinforceloss": 346, "sacloss": 347, "softupd": 348, "td3bcloss": 349, "td3loss": 350, "valueestim": 351, "default_value_kwarg": 352, "distance_loss": 353, "group_optim": 354, "hold_out_net": 355, "hold_out_param": 356, "qmixerloss": 357, "next_state_valu": 358, "gae": 359, "td0estim": 360, "td1estim": 361, "tdlambdaestim": 362, "valueestimatorbas": 363, "generalized_advantage_estim": 364, "reward2go": 365, "td0_advantage_estim": 366, "td0_return_estim": 367, "td1_advantage_estim": 368, "td1_return_estim": 369, "td_lambda_advantage_estim": 370, "td_lambda_return_estim": 371, "vec_generalized_advantage_estim": 372, "vec_td1_advantage_estim": 373, "vec_td1_return_estim": 374, "vec_td_lambda_advantage_estim": 375, "vec_td_lambda_return_estim": 376, "pixelrendertransform": 377, "tensordictrecord": 378, "videorecord": 379, "logger": [380, 417, 429, 430], "csvlogger": 381, "generate_exp_nam": 382, "get_logg": 383, "mlflowlogg": 384, "tensorboardlogg": 385, "wandblogg": 386, "set_auto_unwrap_transformed_env": 387, "batchsubsampl": 388, "clearcudacach": 389, "countframeslog": 390, "logscalar": 391, "logvalidationreward": 392, "optimizerhook": 393, "replaybuffertrain": 394, "rewardnorm": 395, "selectkei": 396, "trainer": [397, 417, 421], "trainerhookbas": 398, "updateweight": 399, "correct_for_frame_skip": 400, "get_stats_random_rollout": 401, "make_collector_offpolici": 402, "make_collector_onpolici": 403, "make_dqn_loss": 404, "make_replay_buff": 405, "make_target_updat": 406, "make_train": 407, "parallel_env_constructor": 408, "sync_async_collector": 409, "sync_sync_collector": 410, "transformed_env_constructor": 411, "readm": [412, 431], "tuto": [412, 431], "api": 413, "contribut": [414, 439], "content": 414, "modul": [415, 420, 423, 424, 426, 430, 439], "tensordictmodul": [415, 424, 426, 439], "wrapper": [415, 426], "probabilist": [415, 426], "q": [415, 421, 423, 426], "oper": 415, "join": 415, "hook": [415, 417, 421], "regular": 415, "planner": 415, "object": [416, 420, 427, 439], "torch": 416, "vmap": [416, 439], "dqn": [416, 421, 423], "ddpg": [416, 420, 433], "sac": 416, "redq": 416, "crossq": 416, "iql": 416, "cql": 416, "gail": 416, "dt": 416, "td3": 416, "bc": 416, "ppo": [416, 422, 434], "head": 416, "a2c": 416, "dreamer": 416, "builder": 417, "_util": 418, "comput": [419, 421, 435, 438], "time": [419, 420, 438], "code": [420, 435], "overview": [420, 423], "setup": [420, 423], "__init__": 420, "estim": 420, "put": 420, "togeth": [420, 435], "call": 420, "parallel": [420, 432, 440], "execut": [420, 432, 435], "stat": 420, "build": [420, 421, 430, 437], "evalu": 420, "construct": 420, "target": [420, 421, 427], "network": [420, 421, 422, 423, 426, 433, 434], "experi": [420, 435], "result": [420, 422, 433, 434], "conclus": [420, 421, 422, 423, 424, 433, 434, 435, 437], "next": [420, 422, 425, 428, 433, 434, 437], "deep": 421, "collect": [421, 422, 428], "paramet": [421, 422, 427], "hyperparamet": [421, 422, 433, 434], "regist": 421, "possibl": 421, "improv": 421, "defin": [422, 433, 434], "loop": [422, 423, 424, 430, 433, 434, 435], "recurr": [423, 424], "convolut": 423, "select": 423, "further": [423, 427], "read": 423, "export": 424, "introduct": [424, 439], "fast": 424, "recap": 424, "simpl": [424, 435], "stochast": 424, "aotinductor": 424, "free": 424, "c": 424, "onnx": 424, "run": [424, 425, 440], "rollout": [424, 425, 432, 433, 434, 435, 440], "creat": 425, "s": [426, 427], "output": 427, "log": 429, "first": 430, "divers": 432, "competit": 433, "group": 433, "critic": [433, 434], "pendulum": 435, "write": 435, "_step": 435, "simul": 435, "_reset": 435, "metadata": 435, "_spec": 435, "shape": 435, "seed": [435, 440], "wrap": 435, "test": 435, "our": 435, "pretrain": 436, "vanilla": 437, "integr": 437, "tensorclass": 437, "other": 437, "pytre": 437, "iter": 437, "over": 437, "fix": 437, "priorit": 437, "save": 437, "raw": 437, "imag": 437, "more": 437, "complex": 437, "config": 439, "sequenc": 439, "program": 439, "ensembl": 439, "meta": 439, "sync": 439, "multiprocess": 439, "frame_skip": 440, "deepmind": 440, "control": 440, "devic": 440, "close": 440, "access": 440, "attribut": 440, "kwarg": 440}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 56}})