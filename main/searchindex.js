Search.setIndex({"docnames": ["index", "reference/collectors", "reference/data", "reference/envs", "reference/generated/knowledge_base/DEBUGGING_RL", "reference/generated/knowledge_base/GYM", "reference/generated/knowledge_base/HABITAT", "reference/generated/knowledge_base/MUJOCO_INSTALLATION", "reference/generated/knowledge_base/PRO-TIPS", "reference/generated/knowledge_base/RESOURCES", "reference/generated/knowledge_base/VERSIONING_ISSUES", "reference/generated/knowledge_base/VIDEO_CUSTOMISATION", "reference/generated/torchrl.auto_unwrap_transformed_env", "reference/generated/torchrl.collectors.DataCollectorBase", "reference/generated/torchrl.collectors.LocalWeightUpdaterBase", "reference/generated/torchrl.collectors.MultiProcessedRemoteWeightUpdate", "reference/generated/torchrl.collectors.MultiSyncDataCollector", "reference/generated/torchrl.collectors.MultiaSyncDataCollector", "reference/generated/torchrl.collectors.RayRemoteWeightUpdater", "reference/generated/torchrl.collectors.RemoteWeightUpdaterBase", "reference/generated/torchrl.collectors.SyncDataCollector", "reference/generated/torchrl.collectors.VanillaLocalWeightUpdater", "reference/generated/torchrl.collectors.aSyncDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector", "reference/generated/torchrl.collectors.distributed.RPCDataCollector", "reference/generated/torchrl.collectors.distributed.RayCollector", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher", "reference/generated/torchrl.collectors.utils.split_trajectories", "reference/generated/torchrl.data.AdaptiveKLController", "reference/generated/torchrl.data.Binary", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec", "reference/generated/torchrl.data.BinaryToDecimal", "reference/generated/torchrl.data.Bounded", "reference/generated/torchrl.data.BoundedTensorSpec", "reference/generated/torchrl.data.Categorical", "reference/generated/torchrl.data.Composite", "reference/generated/torchrl.data.CompositeSpec", "reference/generated/torchrl.data.ConstantKLController", "reference/generated/torchrl.data.DensifyReward", "reference/generated/torchrl.data.DiscreteTensorSpec", "reference/generated/torchrl.data.Flat2TED", "reference/generated/torchrl.data.H5Combine", "reference/generated/torchrl.data.H5Split", "reference/generated/torchrl.data.HashToInt", "reference/generated/torchrl.data.History", "reference/generated/torchrl.data.LLMData", "reference/generated/torchrl.data.LLMInput", "reference/generated/torchrl.data.LLMOutput", "reference/generated/torchrl.data.LazyStackedCompositeSpec", "reference/generated/torchrl.data.LazyStackedTensorSpec", "reference/generated/torchrl.data.MCTSForest", "reference/generated/torchrl.data.MultiCategorical", "reference/generated/torchrl.data.MultiDiscreteTensorSpec", "reference/generated/torchrl.data.MultiOneHot", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec", "reference/generated/torchrl.data.MultiStep", "reference/generated/torchrl.data.Nested2TED", "reference/generated/torchrl.data.NonTensor", "reference/generated/torchrl.data.NonTensorSpec", "reference/generated/torchrl.data.OneHot", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec", "reference/generated/torchrl.data.PairwiseDataset", "reference/generated/torchrl.data.PrioritizedReplayBuffer", "reference/generated/torchrl.data.PromptData", "reference/generated/torchrl.data.PromptTensorDictTokenizer", "reference/generated/torchrl.data.QueryModule", "reference/generated/torchrl.data.RandomProjectionHash", "reference/generated/torchrl.data.RayReplayBuffer", "reference/generated/torchrl.data.RemoteTensorDictReplayBuffer", "reference/generated/torchrl.data.ReplayBuffer", "reference/generated/torchrl.data.RewardData", "reference/generated/torchrl.data.RolloutFromModel", "reference/generated/torchrl.data.SipHash", "reference/generated/torchrl.data.Stacked", "reference/generated/torchrl.data.StackedComposite", "reference/generated/torchrl.data.TED2Flat", "reference/generated/torchrl.data.TED2Nested", "reference/generated/torchrl.data.TensorDictMap", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer", "reference/generated/torchrl.data.TensorDictReplayBuffer", "reference/generated/torchrl.data.TensorDictTokenizer", "reference/generated/torchrl.data.TensorMap", "reference/generated/torchrl.data.TensorSpec", "reference/generated/torchrl.data.TokenizedDatasetLoader", "reference/generated/torchrl.data.Tree", "reference/generated/torchrl.data.Unbounded", "reference/generated/torchrl.data.UnboundedContinuous", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec", "reference/generated/torchrl.data.UnboundedDiscrete", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec", "reference/generated/torchrl.data.check_no_exclusive_keys", "reference/generated/torchrl.data.consolidate_spec", "reference/generated/torchrl.data.contains_lazy_spec", "reference/generated/torchrl.data.create_infinite_iterator", "reference/generated/torchrl.data.get_dataloader", "reference/generated/torchrl.data.replay_buffers.FlatStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.H5StorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.ImmutableDatasetWriter", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage", "reference/generated/torchrl.data.replay_buffers.LazyStackStorage", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage", "reference/generated/torchrl.data.replay_buffers.ListStorage", "reference/generated/torchrl.data.replay_buffers.ListStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.NestedStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler", "reference/generated/torchrl.data.replay_buffers.PrioritizedSliceSampler", "reference/generated/torchrl.data.replay_buffers.RandomSampler", "reference/generated/torchrl.data.replay_buffers.ReplayBufferEnsemble", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.Sampler", "reference/generated/torchrl.data.replay_buffers.SamplerEnsemble", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.SliceSampler", "reference/generated/torchrl.data.replay_buffers.SliceSamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.Storage", "reference/generated/torchrl.data.replay_buffers.StorageCheckpointerBase", "reference/generated/torchrl.data.replay_buffers.StorageEnsemble", "reference/generated/torchrl.data.replay_buffers.StorageEnsembleCheckpointer", "reference/generated/torchrl.data.replay_buffers.TensorDictMaxValueWriter", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.TensorStorage", "reference/generated/torchrl.data.replay_buffers.TensorStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.Writer", "reference/generated/torchrl.data.replay_buffers.WriterEnsemble", "reference/generated/torchrl.envs.AsyncEnvPool", "reference/generated/torchrl.envs.BraxEnv", "reference/generated/torchrl.envs.BraxWrapper", "reference/generated/torchrl.envs.ChessEnv", "reference/generated/torchrl.envs.DMControlEnv", "reference/generated/torchrl.envs.DMControlWrapper", "reference/generated/torchrl.envs.EnvBase", "reference/generated/torchrl.envs.EnvCreator", "reference/generated/torchrl.envs.EnvMetaData", "reference/generated/torchrl.envs.GymEnv", "reference/generated/torchrl.envs.GymLikeEnv", "reference/generated/torchrl.envs.GymWrapper", "reference/generated/torchrl.envs.HabitatEnv", "reference/generated/torchrl.envs.IsaacGymEnv", "reference/generated/torchrl.envs.IsaacGymWrapper", "reference/generated/torchrl.envs.JumanjiEnv", "reference/generated/torchrl.envs.JumanjiWrapper", "reference/generated/torchrl.envs.LLMEnv", "reference/generated/torchrl.envs.LLMHashingEnv", "reference/generated/torchrl.envs.MOGymEnv", "reference/generated/torchrl.envs.MOGymWrapper", "reference/generated/torchrl.envs.MarlGroupMapType", "reference/generated/torchrl.envs.MeltingpotEnv", "reference/generated/torchrl.envs.MeltingpotWrapper", "reference/generated/torchrl.envs.ModelBasedEnvBase", "reference/generated/torchrl.envs.MultiThreadedEnv", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper", "reference/generated/torchrl.envs.OpenMLEnv", "reference/generated/torchrl.envs.OpenSpielEnv", "reference/generated/torchrl.envs.OpenSpielWrapper", "reference/generated/torchrl.envs.ParallelEnv", "reference/generated/torchrl.envs.PendulumEnv", "reference/generated/torchrl.envs.PettingZooEnv", "reference/generated/torchrl.envs.PettingZooWrapper", "reference/generated/torchrl.envs.ProcessorAsyncEnvPool", "reference/generated/torchrl.envs.RandomPolicy", "reference/generated/torchrl.envs.RoboHiveEnv", "reference/generated/torchrl.envs.SMACv2Env", "reference/generated/torchrl.envs.SMACv2Wrapper", "reference/generated/torchrl.envs.SerialEnv", "reference/generated/torchrl.envs.ThreadingAsyncEnvPool", "reference/generated/torchrl.envs.TicTacToeEnv", "reference/generated/torchrl.envs.UnityMLAgentsEnv", "reference/generated/torchrl.envs.UnityMLAgentsWrapper", "reference/generated/torchrl.envs.VmasEnv", "reference/generated/torchrl.envs.VmasWrapper", "reference/generated/torchrl.envs.check_env_specs", "reference/generated/torchrl.envs.check_marl_grouping", "reference/generated/torchrl.envs.exploration_type", "reference/generated/torchrl.envs.get_available_libraries", "reference/generated/torchrl.envs.gym_backend", "reference/generated/torchrl.envs.make_composite_from_td", "reference/generated/torchrl.envs.model_based.dreamer.DreamerDecoder", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv", "reference/generated/torchrl.envs.register_gym_spec_conversion", "reference/generated/torchrl.envs.set_exploration_type", "reference/generated/torchrl.envs.set_gym_backend", "reference/generated/torchrl.envs.step_mdp", "reference/generated/torchrl.envs.terminated_or_truncated", "reference/generated/torchrl.envs.transforms.ActionDiscretizer", "reference/generated/torchrl.envs.transforms.ActionMask", "reference/generated/torchrl.envs.transforms.AutoResetEnv", "reference/generated/torchrl.envs.transforms.AutoResetTransform", "reference/generated/torchrl.envs.transforms.BatchSizeTransform", "reference/generated/torchrl.envs.transforms.BinarizeReward", "reference/generated/torchrl.envs.transforms.BurnInTransform", "reference/generated/torchrl.envs.transforms.CatFrames", "reference/generated/torchrl.envs.transforms.CatTensors", "reference/generated/torchrl.envs.transforms.CenterCrop", "reference/generated/torchrl.envs.transforms.ClipTransform", "reference/generated/torchrl.envs.transforms.Compose", "reference/generated/torchrl.envs.transforms.ConditionalSkip", "reference/generated/torchrl.envs.transforms.Crop", "reference/generated/torchrl.envs.transforms.DTypeCastTransform", "reference/generated/torchrl.envs.transforms.DataLoadingPrimer", "reference/generated/torchrl.envs.transforms.DeviceCastTransform", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection", "reference/generated/torchrl.envs.transforms.DoubleToFloat", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform", "reference/generated/torchrl.envs.transforms.ExcludeTransform", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck", "reference/generated/torchrl.envs.transforms.FlattenObservation", "reference/generated/torchrl.envs.transforms.FrameSkipTransform", "reference/generated/torchrl.envs.transforms.GrayScale", "reference/generated/torchrl.envs.transforms.Hash", "reference/generated/torchrl.envs.transforms.InitTracker", "reference/generated/torchrl.envs.transforms.KLRewardTransform", "reference/generated/torchrl.envs.transforms.LineariseRewards", "reference/generated/torchrl.envs.transforms.MultiAction", "reference/generated/torchrl.envs.transforms.NoopResetEnv", "reference/generated/torchrl.envs.transforms.ObservationNorm", "reference/generated/torchrl.envs.transforms.ObservationTransform", "reference/generated/torchrl.envs.transforms.PermuteTransform", "reference/generated/torchrl.envs.transforms.PinMemoryTransform", "reference/generated/torchrl.envs.transforms.R3MTransform", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict", "reference/generated/torchrl.envs.transforms.RemoveEmptySpecs", "reference/generated/torchrl.envs.transforms.RenameTransform", "reference/generated/torchrl.envs.transforms.Resize", "reference/generated/torchrl.envs.transforms.Reward2GoTransform", "reference/generated/torchrl.envs.transforms.RewardClipping", "reference/generated/torchrl.envs.transforms.RewardScaling", "reference/generated/torchrl.envs.transforms.RewardSum", "reference/generated/torchrl.envs.transforms.SelectTransform", "reference/generated/torchrl.envs.transforms.SignTransform", "reference/generated/torchrl.envs.transforms.SqueezeTransform", "reference/generated/torchrl.envs.transforms.Stack", "reference/generated/torchrl.envs.transforms.StepCounter", "reference/generated/torchrl.envs.transforms.TargetReturn", "reference/generated/torchrl.envs.transforms.TensorDictPrimer", "reference/generated/torchrl.envs.transforms.TimeMaxPool", "reference/generated/torchrl.envs.transforms.Timer", "reference/generated/torchrl.envs.transforms.ToTensorImage", "reference/generated/torchrl.envs.transforms.Tokenizer", "reference/generated/torchrl.envs.transforms.TrajCounter", "reference/generated/torchrl.envs.transforms.Transform", "reference/generated/torchrl.envs.transforms.TransformedEnv", "reference/generated/torchrl.envs.transforms.UnaryTransform", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform", "reference/generated/torchrl.envs.transforms.VC1Transform", "reference/generated/torchrl.envs.transforms.VIPRewardTransform", "reference/generated/torchrl.envs.transforms.VIPTransform", "reference/generated/torchrl.envs.transforms.VecGymEnvTransform", "reference/generated/torchrl.envs.transforms.VecNorm", "reference/generated/torchrl.envs.transforms.VecNormV2", "reference/generated/torchrl.envs.transforms.gSDENoise", "reference/generated/torchrl.envs.transforms.rb_transforms.MultiStepTransform", "reference/generated/torchrl.implement_for", "reference/generated/torchrl.modules.AdditiveGaussianModule", "reference/generated/torchrl.modules.BatchRenorm1d", "reference/generated/torchrl.modules.CEMPlanner", "reference/generated/torchrl.modules.ConsistentDropout", "reference/generated/torchrl.modules.ConsistentDropoutModule", "reference/generated/torchrl.modules.Conv3dNet", "reference/generated/torchrl.modules.ConvNet", "reference/generated/torchrl.modules.DTActor", "reference/generated/torchrl.modules.DdpgCnnActor", "reference/generated/torchrl.modules.DdpgCnnQNet", "reference/generated/torchrl.modules.DdpgMlpActor", "reference/generated/torchrl.modules.DdpgMlpQNet", "reference/generated/torchrl.modules.DecisionTransformer", "reference/generated/torchrl.modules.Delta", "reference/generated/torchrl.modules.DistributionalDQNnet", "reference/generated/torchrl.modules.DistributionalQValueHook", "reference/generated/torchrl.modules.DreamerActor", "reference/generated/torchrl.modules.DuelingCnnDQNet", "reference/generated/torchrl.modules.EGreedyModule", "reference/generated/torchrl.modules.GRU", "reference/generated/torchrl.modules.GRUCell", "reference/generated/torchrl.modules.GRUModule", "reference/generated/torchrl.modules.IndependentNormal", "reference/generated/torchrl.modules.LSTM", "reference/generated/torchrl.modules.LSTMCell", "reference/generated/torchrl.modules.LSTMModule", "reference/generated/torchrl.modules.MLP", "reference/generated/torchrl.modules.MPCPlannerBase", "reference/generated/torchrl.modules.MPPIPlanner", "reference/generated/torchrl.modules.MaskedCategorical", "reference/generated/torchrl.modules.MaskedOneHotCategorical", "reference/generated/torchrl.modules.MultiAgentConvNet", "reference/generated/torchrl.modules.MultiAgentMLP", "reference/generated/torchrl.modules.MultiAgentNetBase", "reference/generated/torchrl.modules.NoisyLazyLinear", "reference/generated/torchrl.modules.NoisyLinear", "reference/generated/torchrl.modules.ObsDecoder", "reference/generated/torchrl.modules.ObsEncoder", "reference/generated/torchrl.modules.OneHotCategorical", "reference/generated/torchrl.modules.OneHotOrdinal", "reference/generated/torchrl.modules.OnlineDTActor", "reference/generated/torchrl.modules.Ordinal", "reference/generated/torchrl.modules.OrnsteinUhlenbeckProcessModule", "reference/generated/torchrl.modules.QMixer", "reference/generated/torchrl.modules.QValueHook", "reference/generated/torchrl.modules.RSSMPosterior", "reference/generated/torchrl.modules.RSSMPrior", "reference/generated/torchrl.modules.Squeeze2dLayer", "reference/generated/torchrl.modules.SqueezeLayer", "reference/generated/torchrl.modules.TanhDelta", "reference/generated/torchrl.modules.TanhNormal", "reference/generated/torchrl.modules.TruncatedNormal", "reference/generated/torchrl.modules.VDNMixer", "reference/generated/torchrl.modules.VmapModule", "reference/generated/torchrl.modules.recurrent_mode", "reference/generated/torchrl.modules.reset_noise", "reference/generated/torchrl.modules.set_recurrent_mode", "reference/generated/torchrl.modules.tensordict_module.Actor", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.MultiStepActorWrapper", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor", "reference/generated/torchrl.modules.tensordict_module.QValueActor", "reference/generated/torchrl.modules.tensordict_module.QValueModule", "reference/generated/torchrl.modules.tensordict_module.SafeModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential", "reference/generated/torchrl.modules.tensordict_module.SafeSequential", "reference/generated/torchrl.modules.tensordict_module.TanhModule", "reference/generated/torchrl.modules.tensordict_module.ValueOperator", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper", "reference/generated/torchrl.modules.utils.biased_softplus", "reference/generated/torchrl.modules.utils.get_primers_from_module", "reference/generated/torchrl.modules.utils.inv_softplus", "reference/generated/torchrl.modules.utils.mappings", "reference/generated/torchrl.objectives.A2CLoss", "reference/generated/torchrl.objectives.CQLLoss", "reference/generated/torchrl.objectives.ClipPPOLoss", "reference/generated/torchrl.objectives.CrossQLoss", "reference/generated/torchrl.objectives.DDPGLoss", "reference/generated/torchrl.objectives.DQNLoss", "reference/generated/torchrl.objectives.DTLoss", "reference/generated/torchrl.objectives.DiscreteCQLLoss", "reference/generated/torchrl.objectives.DiscreteIQLLoss", "reference/generated/torchrl.objectives.DiscreteSACLoss", "reference/generated/torchrl.objectives.DistributionalDQNLoss", "reference/generated/torchrl.objectives.DreamerActorLoss", "reference/generated/torchrl.objectives.DreamerModelLoss", "reference/generated/torchrl.objectives.DreamerValueLoss", "reference/generated/torchrl.objectives.GAILLoss", "reference/generated/torchrl.objectives.HardUpdate", "reference/generated/torchrl.objectives.IQLLoss", "reference/generated/torchrl.objectives.KLPENPPOLoss", "reference/generated/torchrl.objectives.LossModule", "reference/generated/torchrl.objectives.OnlineDTLoss", "reference/generated/torchrl.objectives.PPOLoss", "reference/generated/torchrl.objectives.REDQLoss", "reference/generated/torchrl.objectives.ReinforceLoss", "reference/generated/torchrl.objectives.SACLoss", "reference/generated/torchrl.objectives.SoftUpdate", "reference/generated/torchrl.objectives.TD3BCLoss", "reference/generated/torchrl.objectives.TD3Loss", "reference/generated/torchrl.objectives.ValueEstimators", "reference/generated/torchrl.objectives.default_value_kwargs", "reference/generated/torchrl.objectives.distance_loss", "reference/generated/torchrl.objectives.group_optimizers", "reference/generated/torchrl.objectives.hold_out_net", "reference/generated/torchrl.objectives.hold_out_params", "reference/generated/torchrl.objectives.multiagent.QMixerLoss", "reference/generated/torchrl.objectives.next_state_value", "reference/generated/torchrl.objectives.value.GAE", "reference/generated/torchrl.objectives.value.TD0Estimator", "reference/generated/torchrl.objectives.value.TD1Estimator", "reference/generated/torchrl.objectives.value.TDLambdaEstimator", "reference/generated/torchrl.objectives.value.ValueEstimatorBase", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.reward2go", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate", "reference/generated/torchrl.record.PixelRenderTransform", "reference/generated/torchrl.record.TensorDictRecorder", "reference/generated/torchrl.record.VideoRecorder", "reference/generated/torchrl.record.loggers.Logger", "reference/generated/torchrl.record.loggers.csv.CSVLogger", "reference/generated/torchrl.record.loggers.generate_exp_name", "reference/generated/torchrl.record.loggers.get_logger", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger", "reference/generated/torchrl.record.loggers.wandb.WandbLogger", "reference/generated/torchrl.set_auto_unwrap_transformed_env", "reference/generated/torchrl.trainers.BatchSubSampler", "reference/generated/torchrl.trainers.ClearCudaCache", "reference/generated/torchrl.trainers.CountFramesLog", "reference/generated/torchrl.trainers.LogScalar", "reference/generated/torchrl.trainers.LogValidationReward", "reference/generated/torchrl.trainers.OptimizerHook", "reference/generated/torchrl.trainers.ReplayBufferTrainer", "reference/generated/torchrl.trainers.RewardNormalizer", "reference/generated/torchrl.trainers.SelectKeys", "reference/generated/torchrl.trainers.Trainer", "reference/generated/torchrl.trainers.TrainerHookBase", "reference/generated/torchrl.trainers.UpdateWeights", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy", "reference/generated/torchrl.trainers.helpers.make_dqn_loss", "reference/generated/torchrl.trainers.helpers.make_replay_buffer", "reference/generated/torchrl.trainers.helpers.make_target_updater", "reference/generated/torchrl.trainers.helpers.make_trainer", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor", "reference/generated/torchrl.trainers.helpers.sync_async_collector", "reference/generated/torchrl.trainers.helpers.sync_sync_collector", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor", "reference/generated/tutorials/README", "reference/index", "reference/knowledge_base", "reference/modules", "reference/objectives", "reference/trainers", "reference/utils", "sg_execution_times", "tutorials/coding_ddpg", "tutorials/coding_dqn", "tutorials/coding_ppo", "tutorials/dqn_with_rnn", "tutorials/export", "tutorials/getting-started-0", "tutorials/getting-started-1", "tutorials/getting-started-2", "tutorials/getting-started-3", "tutorials/getting-started-4", "tutorials/getting-started-5", "tutorials/index", "tutorials/multi_task", "tutorials/multiagent_competitive_ddpg", "tutorials/multiagent_ppo", "tutorials/pendulum", "tutorials/pretrained_models", "tutorials/rb_tutorial", "tutorials/sg_execution_times", "tutorials/torchrl_demo", "tutorials/torchrl_envs"], "filenames": ["index.rst", "reference/collectors.rst", "reference/data.rst", "reference/envs.rst", "reference/generated/knowledge_base/DEBUGGING_RL.rst", "reference/generated/knowledge_base/GYM.rst", "reference/generated/knowledge_base/HABITAT.rst", "reference/generated/knowledge_base/MUJOCO_INSTALLATION.rst", "reference/generated/knowledge_base/PRO-TIPS.rst", "reference/generated/knowledge_base/RESOURCES.rst", "reference/generated/knowledge_base/VERSIONING_ISSUES.rst", "reference/generated/knowledge_base/VIDEO_CUSTOMISATION.rst", "reference/generated/torchrl.auto_unwrap_transformed_env.rst", "reference/generated/torchrl.collectors.DataCollectorBase.rst", "reference/generated/torchrl.collectors.LocalWeightUpdaterBase.rst", "reference/generated/torchrl.collectors.MultiProcessedRemoteWeightUpdate.rst", "reference/generated/torchrl.collectors.MultiSyncDataCollector.rst", "reference/generated/torchrl.collectors.MultiaSyncDataCollector.rst", "reference/generated/torchrl.collectors.RayRemoteWeightUpdater.rst", "reference/generated/torchrl.collectors.RemoteWeightUpdaterBase.rst", "reference/generated/torchrl.collectors.SyncDataCollector.rst", "reference/generated/torchrl.collectors.VanillaLocalWeightUpdater.rst", "reference/generated/torchrl.collectors.aSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RPCDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RayCollector.rst", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher.rst", "reference/generated/torchrl.collectors.utils.split_trajectories.rst", "reference/generated/torchrl.data.AdaptiveKLController.rst", "reference/generated/torchrl.data.Binary.rst", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec.rst", "reference/generated/torchrl.data.BinaryToDecimal.rst", "reference/generated/torchrl.data.Bounded.rst", "reference/generated/torchrl.data.BoundedTensorSpec.rst", "reference/generated/torchrl.data.Categorical.rst", "reference/generated/torchrl.data.Composite.rst", "reference/generated/torchrl.data.CompositeSpec.rst", "reference/generated/torchrl.data.ConstantKLController.rst", "reference/generated/torchrl.data.DensifyReward.rst", "reference/generated/torchrl.data.DiscreteTensorSpec.rst", "reference/generated/torchrl.data.Flat2TED.rst", "reference/generated/torchrl.data.H5Combine.rst", "reference/generated/torchrl.data.H5Split.rst", "reference/generated/torchrl.data.HashToInt.rst", "reference/generated/torchrl.data.History.rst", "reference/generated/torchrl.data.LLMData.rst", "reference/generated/torchrl.data.LLMInput.rst", "reference/generated/torchrl.data.LLMOutput.rst", "reference/generated/torchrl.data.LazyStackedCompositeSpec.rst", "reference/generated/torchrl.data.LazyStackedTensorSpec.rst", "reference/generated/torchrl.data.MCTSForest.rst", "reference/generated/torchrl.data.MultiCategorical.rst", "reference/generated/torchrl.data.MultiDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiOneHot.rst", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiStep.rst", "reference/generated/torchrl.data.Nested2TED.rst", "reference/generated/torchrl.data.NonTensor.rst", "reference/generated/torchrl.data.NonTensorSpec.rst", "reference/generated/torchrl.data.OneHot.rst", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.PairwiseDataset.rst", "reference/generated/torchrl.data.PrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.PromptData.rst", "reference/generated/torchrl.data.PromptTensorDictTokenizer.rst", "reference/generated/torchrl.data.QueryModule.rst", "reference/generated/torchrl.data.RandomProjectionHash.rst", "reference/generated/torchrl.data.RayReplayBuffer.rst", "reference/generated/torchrl.data.RemoteTensorDictReplayBuffer.rst", "reference/generated/torchrl.data.ReplayBuffer.rst", "reference/generated/torchrl.data.RewardData.rst", "reference/generated/torchrl.data.RolloutFromModel.rst", "reference/generated/torchrl.data.SipHash.rst", "reference/generated/torchrl.data.Stacked.rst", "reference/generated/torchrl.data.StackedComposite.rst", "reference/generated/torchrl.data.TED2Flat.rst", "reference/generated/torchrl.data.TED2Nested.rst", "reference/generated/torchrl.data.TensorDictMap.rst", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictTokenizer.rst", "reference/generated/torchrl.data.TensorMap.rst", "reference/generated/torchrl.data.TensorSpec.rst", "reference/generated/torchrl.data.TokenizedDatasetLoader.rst", "reference/generated/torchrl.data.Tree.rst", "reference/generated/torchrl.data.Unbounded.rst", "reference/generated/torchrl.data.UnboundedContinuous.rst", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec.rst", "reference/generated/torchrl.data.UnboundedDiscrete.rst", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec.rst", "reference/generated/torchrl.data.check_no_exclusive_keys.rst", "reference/generated/torchrl.data.consolidate_spec.rst", "reference/generated/torchrl.data.contains_lazy_spec.rst", "reference/generated/torchrl.data.create_infinite_iterator.rst", "reference/generated/torchrl.data.get_dataloader.rst", "reference/generated/torchrl.data.replay_buffers.FlatStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.H5StorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.ImmutableDatasetWriter.rst", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage.rst", "reference/generated/torchrl.data.replay_buffers.LazyStackStorage.rst", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.ListStorage.rst", "reference/generated/torchrl.data.replay_buffers.ListStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.NestedStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSliceSampler.rst", "reference/generated/torchrl.data.replay_buffers.RandomSampler.rst", "reference/generated/torchrl.data.replay_buffers.ReplayBufferEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.Sampler.rst", "reference/generated/torchrl.data.replay_buffers.SamplerEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.SliceSampler.rst", "reference/generated/torchrl.data.replay_buffers.SliceSamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.Storage.rst", "reference/generated/torchrl.data.replay_buffers.StorageCheckpointerBase.rst", "reference/generated/torchrl.data.replay_buffers.StorageEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.StorageEnsembleCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictMaxValueWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.TensorStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.Writer.rst", "reference/generated/torchrl.data.replay_buffers.WriterEnsemble.rst", "reference/generated/torchrl.envs.AsyncEnvPool.rst", "reference/generated/torchrl.envs.BraxEnv.rst", "reference/generated/torchrl.envs.BraxWrapper.rst", "reference/generated/torchrl.envs.ChessEnv.rst", "reference/generated/torchrl.envs.DMControlEnv.rst", "reference/generated/torchrl.envs.DMControlWrapper.rst", "reference/generated/torchrl.envs.EnvBase.rst", "reference/generated/torchrl.envs.EnvCreator.rst", "reference/generated/torchrl.envs.EnvMetaData.rst", "reference/generated/torchrl.envs.GymEnv.rst", "reference/generated/torchrl.envs.GymLikeEnv.rst", "reference/generated/torchrl.envs.GymWrapper.rst", "reference/generated/torchrl.envs.HabitatEnv.rst", "reference/generated/torchrl.envs.IsaacGymEnv.rst", "reference/generated/torchrl.envs.IsaacGymWrapper.rst", "reference/generated/torchrl.envs.JumanjiEnv.rst", "reference/generated/torchrl.envs.JumanjiWrapper.rst", "reference/generated/torchrl.envs.LLMEnv.rst", "reference/generated/torchrl.envs.LLMHashingEnv.rst", "reference/generated/torchrl.envs.MOGymEnv.rst", "reference/generated/torchrl.envs.MOGymWrapper.rst", "reference/generated/torchrl.envs.MarlGroupMapType.rst", "reference/generated/torchrl.envs.MeltingpotEnv.rst", "reference/generated/torchrl.envs.MeltingpotWrapper.rst", "reference/generated/torchrl.envs.ModelBasedEnvBase.rst", "reference/generated/torchrl.envs.MultiThreadedEnv.rst", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper.rst", "reference/generated/torchrl.envs.OpenMLEnv.rst", "reference/generated/torchrl.envs.OpenSpielEnv.rst", "reference/generated/torchrl.envs.OpenSpielWrapper.rst", "reference/generated/torchrl.envs.ParallelEnv.rst", "reference/generated/torchrl.envs.PendulumEnv.rst", "reference/generated/torchrl.envs.PettingZooEnv.rst", "reference/generated/torchrl.envs.PettingZooWrapper.rst", "reference/generated/torchrl.envs.ProcessorAsyncEnvPool.rst", "reference/generated/torchrl.envs.RandomPolicy.rst", "reference/generated/torchrl.envs.RoboHiveEnv.rst", "reference/generated/torchrl.envs.SMACv2Env.rst", "reference/generated/torchrl.envs.SMACv2Wrapper.rst", "reference/generated/torchrl.envs.SerialEnv.rst", "reference/generated/torchrl.envs.ThreadingAsyncEnvPool.rst", "reference/generated/torchrl.envs.TicTacToeEnv.rst", "reference/generated/torchrl.envs.UnityMLAgentsEnv.rst", "reference/generated/torchrl.envs.UnityMLAgentsWrapper.rst", "reference/generated/torchrl.envs.VmasEnv.rst", "reference/generated/torchrl.envs.VmasWrapper.rst", "reference/generated/torchrl.envs.check_env_specs.rst", "reference/generated/torchrl.envs.check_marl_grouping.rst", "reference/generated/torchrl.envs.exploration_type.rst", "reference/generated/torchrl.envs.get_available_libraries.rst", "reference/generated/torchrl.envs.gym_backend.rst", "reference/generated/torchrl.envs.make_composite_from_td.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerDecoder.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv.rst", "reference/generated/torchrl.envs.register_gym_spec_conversion.rst", "reference/generated/torchrl.envs.set_exploration_type.rst", "reference/generated/torchrl.envs.set_gym_backend.rst", "reference/generated/torchrl.envs.step_mdp.rst", "reference/generated/torchrl.envs.terminated_or_truncated.rst", "reference/generated/torchrl.envs.transforms.ActionDiscretizer.rst", "reference/generated/torchrl.envs.transforms.ActionMask.rst", "reference/generated/torchrl.envs.transforms.AutoResetEnv.rst", "reference/generated/torchrl.envs.transforms.AutoResetTransform.rst", "reference/generated/torchrl.envs.transforms.BatchSizeTransform.rst", "reference/generated/torchrl.envs.transforms.BinarizeReward.rst", "reference/generated/torchrl.envs.transforms.BurnInTransform.rst", "reference/generated/torchrl.envs.transforms.CatFrames.rst", "reference/generated/torchrl.envs.transforms.CatTensors.rst", "reference/generated/torchrl.envs.transforms.CenterCrop.rst", "reference/generated/torchrl.envs.transforms.ClipTransform.rst", "reference/generated/torchrl.envs.transforms.Compose.rst", "reference/generated/torchrl.envs.transforms.ConditionalSkip.rst", "reference/generated/torchrl.envs.transforms.Crop.rst", "reference/generated/torchrl.envs.transforms.DTypeCastTransform.rst", "reference/generated/torchrl.envs.transforms.DataLoadingPrimer.rst", "reference/generated/torchrl.envs.transforms.DeviceCastTransform.rst", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection.rst", "reference/generated/torchrl.envs.transforms.DoubleToFloat.rst", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform.rst", "reference/generated/torchrl.envs.transforms.ExcludeTransform.rst", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck.rst", "reference/generated/torchrl.envs.transforms.FlattenObservation.rst", "reference/generated/torchrl.envs.transforms.FrameSkipTransform.rst", "reference/generated/torchrl.envs.transforms.GrayScale.rst", "reference/generated/torchrl.envs.transforms.Hash.rst", "reference/generated/torchrl.envs.transforms.InitTracker.rst", "reference/generated/torchrl.envs.transforms.KLRewardTransform.rst", "reference/generated/torchrl.envs.transforms.LineariseRewards.rst", "reference/generated/torchrl.envs.transforms.MultiAction.rst", "reference/generated/torchrl.envs.transforms.NoopResetEnv.rst", "reference/generated/torchrl.envs.transforms.ObservationNorm.rst", "reference/generated/torchrl.envs.transforms.ObservationTransform.rst", "reference/generated/torchrl.envs.transforms.PermuteTransform.rst", "reference/generated/torchrl.envs.transforms.PinMemoryTransform.rst", "reference/generated/torchrl.envs.transforms.R3MTransform.rst", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict.rst", "reference/generated/torchrl.envs.transforms.RemoveEmptySpecs.rst", "reference/generated/torchrl.envs.transforms.RenameTransform.rst", "reference/generated/torchrl.envs.transforms.Resize.rst", "reference/generated/torchrl.envs.transforms.Reward2GoTransform.rst", "reference/generated/torchrl.envs.transforms.RewardClipping.rst", "reference/generated/torchrl.envs.transforms.RewardScaling.rst", "reference/generated/torchrl.envs.transforms.RewardSum.rst", "reference/generated/torchrl.envs.transforms.SelectTransform.rst", "reference/generated/torchrl.envs.transforms.SignTransform.rst", "reference/generated/torchrl.envs.transforms.SqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.Stack.rst", "reference/generated/torchrl.envs.transforms.StepCounter.rst", "reference/generated/torchrl.envs.transforms.TargetReturn.rst", "reference/generated/torchrl.envs.transforms.TensorDictPrimer.rst", "reference/generated/torchrl.envs.transforms.TimeMaxPool.rst", "reference/generated/torchrl.envs.transforms.Timer.rst", "reference/generated/torchrl.envs.transforms.ToTensorImage.rst", "reference/generated/torchrl.envs.transforms.Tokenizer.rst", "reference/generated/torchrl.envs.transforms.TrajCounter.rst", "reference/generated/torchrl.envs.transforms.Transform.rst", "reference/generated/torchrl.envs.transforms.TransformedEnv.rst", "reference/generated/torchrl.envs.transforms.UnaryTransform.rst", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.VC1Transform.rst", "reference/generated/torchrl.envs.transforms.VIPRewardTransform.rst", "reference/generated/torchrl.envs.transforms.VIPTransform.rst", "reference/generated/torchrl.envs.transforms.VecGymEnvTransform.rst", "reference/generated/torchrl.envs.transforms.VecNorm.rst", "reference/generated/torchrl.envs.transforms.VecNormV2.rst", "reference/generated/torchrl.envs.transforms.gSDENoise.rst", "reference/generated/torchrl.envs.transforms.rb_transforms.MultiStepTransform.rst", "reference/generated/torchrl.implement_for.rst", "reference/generated/torchrl.modules.AdditiveGaussianModule.rst", "reference/generated/torchrl.modules.BatchRenorm1d.rst", "reference/generated/torchrl.modules.CEMPlanner.rst", "reference/generated/torchrl.modules.ConsistentDropout.rst", "reference/generated/torchrl.modules.ConsistentDropoutModule.rst", "reference/generated/torchrl.modules.Conv3dNet.rst", "reference/generated/torchrl.modules.ConvNet.rst", "reference/generated/torchrl.modules.DTActor.rst", "reference/generated/torchrl.modules.DdpgCnnActor.rst", "reference/generated/torchrl.modules.DdpgCnnQNet.rst", "reference/generated/torchrl.modules.DdpgMlpActor.rst", "reference/generated/torchrl.modules.DdpgMlpQNet.rst", "reference/generated/torchrl.modules.DecisionTransformer.rst", "reference/generated/torchrl.modules.Delta.rst", "reference/generated/torchrl.modules.DistributionalDQNnet.rst", "reference/generated/torchrl.modules.DistributionalQValueHook.rst", "reference/generated/torchrl.modules.DreamerActor.rst", "reference/generated/torchrl.modules.DuelingCnnDQNet.rst", "reference/generated/torchrl.modules.EGreedyModule.rst", "reference/generated/torchrl.modules.GRU.rst", "reference/generated/torchrl.modules.GRUCell.rst", "reference/generated/torchrl.modules.GRUModule.rst", "reference/generated/torchrl.modules.IndependentNormal.rst", "reference/generated/torchrl.modules.LSTM.rst", "reference/generated/torchrl.modules.LSTMCell.rst", "reference/generated/torchrl.modules.LSTMModule.rst", "reference/generated/torchrl.modules.MLP.rst", "reference/generated/torchrl.modules.MPCPlannerBase.rst", "reference/generated/torchrl.modules.MPPIPlanner.rst", "reference/generated/torchrl.modules.MaskedCategorical.rst", "reference/generated/torchrl.modules.MaskedOneHotCategorical.rst", "reference/generated/torchrl.modules.MultiAgentConvNet.rst", "reference/generated/torchrl.modules.MultiAgentMLP.rst", "reference/generated/torchrl.modules.MultiAgentNetBase.rst", "reference/generated/torchrl.modules.NoisyLazyLinear.rst", "reference/generated/torchrl.modules.NoisyLinear.rst", "reference/generated/torchrl.modules.ObsDecoder.rst", "reference/generated/torchrl.modules.ObsEncoder.rst", "reference/generated/torchrl.modules.OneHotCategorical.rst", "reference/generated/torchrl.modules.OneHotOrdinal.rst", "reference/generated/torchrl.modules.OnlineDTActor.rst", "reference/generated/torchrl.modules.Ordinal.rst", "reference/generated/torchrl.modules.OrnsteinUhlenbeckProcessModule.rst", "reference/generated/torchrl.modules.QMixer.rst", "reference/generated/torchrl.modules.QValueHook.rst", "reference/generated/torchrl.modules.RSSMPosterior.rst", "reference/generated/torchrl.modules.RSSMPrior.rst", "reference/generated/torchrl.modules.Squeeze2dLayer.rst", "reference/generated/torchrl.modules.SqueezeLayer.rst", "reference/generated/torchrl.modules.TanhDelta.rst", "reference/generated/torchrl.modules.TanhNormal.rst", "reference/generated/torchrl.modules.TruncatedNormal.rst", "reference/generated/torchrl.modules.VDNMixer.rst", "reference/generated/torchrl.modules.VmapModule.rst", "reference/generated/torchrl.modules.recurrent_mode.rst", "reference/generated/torchrl.modules.reset_noise.rst", "reference/generated/torchrl.modules.set_recurrent_mode.rst", "reference/generated/torchrl.modules.tensordict_module.Actor.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.MultiStepActorWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential.rst", "reference/generated/torchrl.modules.tensordict_module.SafeSequential.rst", "reference/generated/torchrl.modules.tensordict_module.TanhModule.rst", "reference/generated/torchrl.modules.tensordict_module.ValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper.rst", "reference/generated/torchrl.modules.utils.biased_softplus.rst", "reference/generated/torchrl.modules.utils.get_primers_from_module.rst", "reference/generated/torchrl.modules.utils.inv_softplus.rst", "reference/generated/torchrl.modules.utils.mappings.rst", "reference/generated/torchrl.objectives.A2CLoss.rst", "reference/generated/torchrl.objectives.CQLLoss.rst", "reference/generated/torchrl.objectives.ClipPPOLoss.rst", "reference/generated/torchrl.objectives.CrossQLoss.rst", "reference/generated/torchrl.objectives.DDPGLoss.rst", "reference/generated/torchrl.objectives.DQNLoss.rst", "reference/generated/torchrl.objectives.DTLoss.rst", "reference/generated/torchrl.objectives.DiscreteCQLLoss.rst", "reference/generated/torchrl.objectives.DiscreteIQLLoss.rst", "reference/generated/torchrl.objectives.DiscreteSACLoss.rst", "reference/generated/torchrl.objectives.DistributionalDQNLoss.rst", "reference/generated/torchrl.objectives.DreamerActorLoss.rst", "reference/generated/torchrl.objectives.DreamerModelLoss.rst", "reference/generated/torchrl.objectives.DreamerValueLoss.rst", "reference/generated/torchrl.objectives.GAILLoss.rst", "reference/generated/torchrl.objectives.HardUpdate.rst", "reference/generated/torchrl.objectives.IQLLoss.rst", "reference/generated/torchrl.objectives.KLPENPPOLoss.rst", "reference/generated/torchrl.objectives.LossModule.rst", "reference/generated/torchrl.objectives.OnlineDTLoss.rst", "reference/generated/torchrl.objectives.PPOLoss.rst", "reference/generated/torchrl.objectives.REDQLoss.rst", "reference/generated/torchrl.objectives.ReinforceLoss.rst", "reference/generated/torchrl.objectives.SACLoss.rst", "reference/generated/torchrl.objectives.SoftUpdate.rst", "reference/generated/torchrl.objectives.TD3BCLoss.rst", "reference/generated/torchrl.objectives.TD3Loss.rst", "reference/generated/torchrl.objectives.ValueEstimators.rst", "reference/generated/torchrl.objectives.default_value_kwargs.rst", "reference/generated/torchrl.objectives.distance_loss.rst", "reference/generated/torchrl.objectives.group_optimizers.rst", "reference/generated/torchrl.objectives.hold_out_net.rst", "reference/generated/torchrl.objectives.hold_out_params.rst", "reference/generated/torchrl.objectives.multiagent.QMixerLoss.rst", "reference/generated/torchrl.objectives.next_state_value.rst", "reference/generated/torchrl.objectives.value.GAE.rst", "reference/generated/torchrl.objectives.value.TD0Estimator.rst", "reference/generated/torchrl.objectives.value.TD1Estimator.rst", "reference/generated/torchrl.objectives.value.TDLambdaEstimator.rst", "reference/generated/torchrl.objectives.value.ValueEstimatorBase.rst", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.reward2go.rst", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate.rst", "reference/generated/torchrl.record.PixelRenderTransform.rst", "reference/generated/torchrl.record.TensorDictRecorder.rst", "reference/generated/torchrl.record.VideoRecorder.rst", "reference/generated/torchrl.record.loggers.Logger.rst", "reference/generated/torchrl.record.loggers.csv.CSVLogger.rst", "reference/generated/torchrl.record.loggers.generate_exp_name.rst", "reference/generated/torchrl.record.loggers.get_logger.rst", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger.rst", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger.rst", "reference/generated/torchrl.record.loggers.wandb.WandbLogger.rst", "reference/generated/torchrl.set_auto_unwrap_transformed_env.rst", "reference/generated/torchrl.trainers.BatchSubSampler.rst", "reference/generated/torchrl.trainers.ClearCudaCache.rst", "reference/generated/torchrl.trainers.CountFramesLog.rst", "reference/generated/torchrl.trainers.LogScalar.rst", "reference/generated/torchrl.trainers.LogValidationReward.rst", "reference/generated/torchrl.trainers.OptimizerHook.rst", "reference/generated/torchrl.trainers.ReplayBufferTrainer.rst", "reference/generated/torchrl.trainers.RewardNormalizer.rst", "reference/generated/torchrl.trainers.SelectKeys.rst", "reference/generated/torchrl.trainers.Trainer.rst", "reference/generated/torchrl.trainers.TrainerHookBase.rst", "reference/generated/torchrl.trainers.UpdateWeights.rst", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip.rst", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout.rst", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_loss.rst", "reference/generated/torchrl.trainers.helpers.make_replay_buffer.rst", "reference/generated/torchrl.trainers.helpers.make_target_updater.rst", "reference/generated/torchrl.trainers.helpers.make_trainer.rst", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor.rst", "reference/generated/torchrl.trainers.helpers.sync_async_collector.rst", "reference/generated/torchrl.trainers.helpers.sync_sync_collector.rst", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor.rst", "reference/generated/tutorials/README.rst", "reference/index.rst", "reference/knowledge_base.rst", "reference/modules.rst", "reference/objectives.rst", "reference/trainers.rst", "reference/utils.rst", "sg_execution_times.rst", "tutorials/coding_ddpg.rst", "tutorials/coding_dqn.rst", "tutorials/coding_ppo.rst", "tutorials/dqn_with_rnn.rst", "tutorials/export.rst", "tutorials/getting-started-0.rst", "tutorials/getting-started-1.rst", "tutorials/getting-started-2.rst", "tutorials/getting-started-3.rst", "tutorials/getting-started-4.rst", "tutorials/getting-started-5.rst", "tutorials/index.rst", "tutorials/multi_task.rst", "tutorials/multiagent_competitive_ddpg.rst", "tutorials/multiagent_ppo.rst", "tutorials/pendulum.rst", "tutorials/pretrained_models.rst", "tutorials/rb_tutorial.rst", "tutorials/sg_execution_times.rst", "tutorials/torchrl_demo.rst", "tutorials/torchrl_envs.rst"], "titles": ["TorchRL", "torchrl.collectors package", "torchrl.data package", "torchrl.envs package", "Things to consider when debugging RL", "Working with gym", "Working with <code class=\"docutils literal notranslate\"><span class=\"pre\">habitat-lab</span></code>", "Working with MuJoCo-based environments", "Common PyTorch errors and solutions", "Useful resources", "Versioning Issues", "Customising Video Renders", "auto_unwrap_transformed_env", "DataCollectorBase", "LocalWeightUpdaterBase", "MultiProcessedRemoteWeightUpdate", "MultiSyncDataCollector", "MultiaSyncDataCollector", "RayRemoteWeightUpdater", "RemoteWeightUpdaterBase", "SyncDataCollector", "VanillaLocalWeightUpdater", "aSyncDataCollector", "DistributedDataCollector", "DistributedSyncDataCollector", "RPCDataCollector", "RayCollector", "submitit_delayed_launcher", "split_trajectories", "AdaptiveKLController", "Binary", "BinaryDiscreteTensorSpec", "BinaryToDecimal", "Bounded", "BoundedTensorSpec", "Categorical", "Composite", "CompositeSpec", "ConstantKLController", "DensifyReward", "DiscreteTensorSpec", "Flat2TED", "H5Combine", "H5Split", "HashToInt", "History", "LLMData", "LLMInput", "LLMOutput", "LazyStackedCompositeSpec", "LazyStackedTensorSpec", "MCTSForest", "MultiCategorical", "MultiDiscreteTensorSpec", "MultiOneHot", "MultiOneHotDiscreteTensorSpec", "MultiStep", "Nested2TED", "NonTensor", "NonTensorSpec", "OneHot", "OneHotDiscreteTensorSpec", "PairwiseDataset", "PrioritizedReplayBuffer", "PromptData", "PromptTensorDictTokenizer", "QueryModule", "RandomProjectionHash", "RayReplayBuffer", "RemoteTensorDictReplayBuffer", "ReplayBuffer", "RewardData", "RolloutFromModel", "SipHash", "Stacked", "StackedComposite", "TED2Flat", "TED2Nested", "TensorDictMap", "TensorDictPrioritizedReplayBuffer", "TensorDictReplayBuffer", "TensorDictTokenizer", "TensorMap", "TensorSpec", "TokenizedDatasetLoader", "Tree", "Unbounded", "UnboundedContinuous", "UnboundedContinuousTensorSpec", "UnboundedDiscrete", "UnboundedDiscreteTensorSpec", "check_no_exclusive_keys", "consolidate_spec", "contains_lazy_spec", "create_infinite_iterator", "get_dataloader", "FlatStorageCheckpointer", "H5StorageCheckpointer", "ImmutableDatasetWriter", "LazyMemmapStorage", "LazyStackStorage", "LazyTensorStorage", "ListStorage", "ListStorageCheckpointer", "NestedStorageCheckpointer", "PrioritizedSampler", "PrioritizedSliceSampler", "RandomSampler", "ReplayBufferEnsemble", "RoundRobinWriter", "Sampler", "SamplerEnsemble", "SamplerWithoutReplacement", "SliceSampler", "SliceSamplerWithoutReplacement", "Storage", "StorageCheckpointerBase", "StorageEnsemble", "StorageEnsembleCheckpointer", "TensorDictMaxValueWriter", "TensorDictRoundRobinWriter", "TensorStorage", "TensorStorageCheckpointer", "Writer", "WriterEnsemble", "AsyncEnvPool", "BraxEnv", "BraxWrapper", "ChessEnv", "DMControlEnv", "DMControlWrapper", "EnvBase", "EnvCreator", "EnvMetaData", "GymEnv", "GymLikeEnv", "GymWrapper", "HabitatEnv", "IsaacGymEnv", "IsaacGymWrapper", "JumanjiEnv", "JumanjiWrapper", "LLMEnv", "LLMHashingEnv", "MOGymEnv", "MOGymWrapper", "MarlGroupMapType", "MeltingpotEnv", "MeltingpotWrapper", "ModelBasedEnvBase", "MultiThreadedEnv", "MultiThreadedEnvWrapper", "OpenMLEnv", "OpenSpielEnv", "OpenSpielWrapper", "ParallelEnv", "PendulumEnv", "PettingZooEnv", "PettingZooWrapper", "ProcessorAsyncEnvPool", "RandomPolicy", "RoboHiveEnv", "SMACv2Env", "SMACv2Wrapper", "SerialEnv", "ThreadingAsyncEnvPool", "TicTacToeEnv", "UnityMLAgentsEnv", "UnityMLAgentsWrapper", "VmasEnv", "VmasWrapper", "check_env_specs", "check_marl_grouping", "exploration_type", "get_available_libraries", "gym_backend", "make_composite_from_td", "DreamerDecoder", "DreamerEnv", "register_gym_spec_conversion", "set_exploration_type", "set_gym_backend", "step_mdp", "terminated_or_truncated", "ActionDiscretizer", "ActionMask", "AutoResetEnv", "AutoResetTransform", "BatchSizeTransform", "BinarizeReward", "BurnInTransform", "CatFrames", "CatTensors", "CenterCrop", "ClipTransform", "Compose", "ConditionalSkip", "Crop", "DTypeCastTransform", "DataLoadingPrimer", "DeviceCastTransform", "DiscreteActionProjection", "DoubleToFloat", "EndOfLifeTransform", "ExcludeTransform", "FiniteTensorDictCheck", "FlattenObservation", "FrameSkipTransform", "GrayScale", "Hash", "InitTracker", "KLRewardTransform", "LineariseRewards", "MultiAction", "NoopResetEnv", "ObservationNorm", "ObservationTransform", "PermuteTransform", "PinMemoryTransform", "R3MTransform", "RandomCropTensorDict", "RemoveEmptySpecs", "RenameTransform", "Resize", "Reward2GoTransform", "RewardClipping", "RewardScaling", "RewardSum", "SelectTransform", "SignTransform", "SqueezeTransform", "Stack", "StepCounter", "TargetReturn", "TensorDictPrimer", "TimeMaxPool", "Timer", "ToTensorImage", "Tokenizer", "TrajCounter", "Transform", "TransformedEnv", "UnaryTransform", "UnsqueezeTransform", "VC1Transform", "VIPRewardTransform", "VIPTransform", "VecGymEnvTransform", "VecNorm", "VecNormV2", "gSDENoise", "MultiStepTransform", "implement_for", "AdditiveGaussianModule", "BatchRenorm1d", "CEMPlanner", "ConsistentDropout", "ConsistentDropoutModule", "Conv3dNet", "ConvNet", "DTActor", "DdpgCnnActor", "DdpgCnnQNet", "DdpgMlpActor", "DdpgMlpQNet", "DecisionTransformer", "Delta", "DistributionalDQNnet", "DistributionalQValueHook", "DreamerActor", "DuelingCnnDQNet", "EGreedyModule", "GRU", "GRUCell", "GRUModule", "IndependentNormal", "LSTM", "LSTMCell", "LSTMModule", "MLP", "MPCPlannerBase", "MPPIPlanner", "MaskedCategorical", "MaskedOneHotCategorical", "MultiAgentConvNet", "MultiAgentMLP", "MultiAgentNetBase", "NoisyLazyLinear", "NoisyLinear", "ObsDecoder", "ObsEncoder", "OneHotCategorical", "OneHotOrdinal", "OnlineDTActor", "Ordinal", "OrnsteinUhlenbeckProcessModule", "QMixer", "QValueHook", "RSSMPosterior", "RSSMPrior", "Squeeze2dLayer", "SqueezeLayer", "TanhDelta", "TanhNormal", "TruncatedNormal", "VDNMixer", "VmapModule", "recurrent_mode", "reset_noise", "set_recurrent_mode", "Actor", "ActorCriticOperator", "ActorCriticWrapper", "ActorValueOperator", "DecisionTransformerInferenceWrapper", "DistributionalQValueActor", "DistributionalQValueModule", "LMHeadActorValueOperator", "MultiStepActorWrapper", "ProbabilisticActor", "QValueActor", "QValueModule", "SafeModule", "SafeProbabilisticModule", "SafeProbabilisticTensorDictSequential", "SafeSequential", "TanhModule", "ValueOperator", "WorldModelWrapper", "biased_softplus", "get_primers_from_module", "inv_softplus", "mappings", "A2CLoss", "CQLLoss", "ClipPPOLoss", "CrossQLoss", "DDPGLoss", "DQNLoss", "DTLoss", "DiscreteCQLLoss", "DiscreteIQLLoss", "DiscreteSACLoss", "DistributionalDQNLoss", "DreamerActorLoss", "DreamerModelLoss", "DreamerValueLoss", "GAILLoss", "HardUpdate", "IQLLoss", "KLPENPPOLoss", "LossModule", "OnlineDTLoss", "PPOLoss", "REDQLoss", "ReinforceLoss", "SACLoss", "SoftUpdate", "TD3BCLoss", "TD3Loss", "ValueEstimators", "default_value_kwargs", "distance_loss", "group_optimizers", "hold_out_net", "hold_out_params", "QMixerLoss", "next_state_value", "GAE", "TD0Estimator", "TD1Estimator", "TDLambdaEstimator", "ValueEstimatorBase", "generalized_advantage_estimate", "reward2go", "td0_advantage_estimate", "td0_return_estimate", "td1_advantage_estimate", "td1_return_estimate", "td_lambda_advantage_estimate", "td_lambda_return_estimate", "vec_generalized_advantage_estimate", "vec_td1_advantage_estimate", "vec_td1_return_estimate", "vec_td_lambda_advantage_estimate", "vec_td_lambda_return_estimate", "PixelRenderTransform", "TensorDictRecorder", "VideoRecorder", "Logger", "CSVLogger", "generate_exp_name", "get_logger", "MLFlowLogger", "TensorboardLogger", "WandbLogger", "set_auto_unwrap_transformed_env", "BatchSubSampler", "ClearCudaCache", "CountFramesLog", "LogScalar", "LogValidationReward", "OptimizerHook", "ReplayBufferTrainer", "RewardNormalizer", "SelectKeys", "Trainer", "TrainerHookBase", "UpdateWeights", "correct_for_frame_skip", "get_stats_random_rollout", "make_collector_offpolicy", "make_collector_onpolicy", "make_dqn_loss", "make_replay_buffer", "make_target_updater", "make_trainer", "parallel_env_constructor", "sync_async_collector", "sync_sync_collector", "transformed_env_constructor", "README Tutos", "API Reference", "Knowledge Base", "torchrl.modules package", "torchrl.objectives package", "torchrl.trainers package", "torchrl._utils package", "Computation times", "TorchRL objectives: Coding a DDPG loss", "TorchRL trainer: A DQN example", "Reinforcement Learning (PPO) with TorchRL Tutorial", "Recurrent DQN: Training recurrent policies", "Exporting TorchRL modules", "Get started with Environments, TED and transforms", "Get started with TorchRL\u2019s modules", "Getting started with model optimization", "Get started with data collection and storage", "Get started with logging", "Get started with your own first training loop", "README Tutos", "Task-specific policy in multi-task environments", "Competitive Multi-Agent Reinforcement Learning (DDPG) with TorchRL Tutorial", "Multi-Agent Reinforcement Learning (PPO) with TorchRL Tutorial", "Pendulum: Writing your environment and transforms with TorchRL", "Using pretrained models", "Using Replay Buffers", "Computation times", "Introduction to TorchRL", "TorchRL envs"], "terms": {"an": [0, 1, 2, 3, 5, 8, 9, 10, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 78, 79, 80, 82, 83, 85, 86, 87, 88, 89, 90, 94, 98, 99, 100, 101, 102, 106, 108, 109, 111, 113, 114, 115, 117, 119, 120, 121, 123, 124, 125, 128, 129, 130, 131, 132, 134, 135, 136, 137, 141, 142, 143, 149, 150, 152, 155, 156, 157, 158, 159, 161, 164, 165, 166, 167, 171, 172, 184, 185, 187, 188, 190, 191, 193, 198, 199, 201, 202, 205, 209, 214, 215, 219, 220, 221, 222, 224, 233, 234, 235, 236, 237, 239, 240, 241, 244, 247, 248, 249, 251, 254, 258, 259, 261, 262, 263, 264, 266, 271, 272, 274, 276, 278, 279, 280, 284, 285, 287, 295, 300, 301, 303, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 323, 324, 328, 332, 333, 334, 335, 336, 338, 341, 342, 343, 344, 345, 346, 349, 350, 351, 353, 354, 355, 356, 359, 366, 368, 369, 370, 371, 372, 386, 388, 391, 395, 401, 402, 406, 407, 410, 417, 418, 419, 420, 423, 424, 425, 429, 430, 433, 435, 436, 437, 438, 439, 441, 442, 443, 445, 446, 448, 449], "open": [0, 5, 7, 45, 46, 47, 48, 62, 64, 71, 85, 99, 252, 430, 442, 443, 448], "sourc": [0, 1, 4, 7, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449], "reinforc": [0, 1, 3, 9, 147, 148, 191, 249, 256, 261, 262, 263, 264, 268, 295, 316, 333, 334, 336, 339, 340, 341, 343, 348, 349, 355, 356, 357, 358, 422, 428, 430, 434, 435, 440, 444, 447, 448], "learn": [0, 1, 3, 7, 8, 9, 23, 56, 131, 147, 148, 152, 155, 164, 191, 249, 256, 261, 262, 263, 264, 268, 281, 288, 294, 295, 316, 333, 334, 336, 339, 340, 341, 343, 347, 348, 349, 354, 355, 356, 357, 358, 422, 425, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 444, 446, 447, 448, 449], "rl": [0, 1, 2, 3, 5, 8, 10, 16, 17, 20, 22, 149, 191, 233, 288, 310, 319, 327, 333, 335, 350, 351, 353, 355, 397, 421, 423, 424, 425, 426, 429, 430, 431, 437, 440, 442, 443, 445, 446, 449], "librari": [0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 16, 17, 23, 24, 25, 65, 81, 128, 129, 130, 139, 150, 174, 422, 423, 424, 425, 427, 429, 430, 431, 433, 434, 435, 437, 442, 443, 444, 449], "pytorch": [0, 1, 2, 3, 28, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 169, 170, 171, 191, 236, 237, 256, 272, 276, 287, 288, 406, 421, 423, 424, 426, 429, 431, 432, 436, 440, 442, 443, 444, 448, 449], "you": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 16, 17, 32, 39, 44, 56, 66, 67, 73, 78, 81, 125, 128, 131, 135, 139, 142, 143, 146, 147, 148, 155, 156, 157, 158, 159, 162, 163, 164, 165, 166, 169, 170, 181, 191, 212, 240, 248, 249, 251, 256, 276, 294, 323, 395, 396, 423, 424, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 448, 449], "can": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 99, 100, 105, 106, 108, 112, 113, 114, 119, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 139, 140, 141, 142, 143, 146, 147, 148, 153, 154, 155, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 169, 170, 171, 179, 181, 183, 184, 185, 187, 188, 190, 191, 194, 195, 196, 198, 199, 201, 202, 203, 206, 209, 213, 214, 215, 219, 220, 224, 227, 231, 232, 233, 234, 238, 239, 240, 241, 242, 244, 246, 248, 249, 251, 252, 255, 257, 258, 259, 261, 271, 272, 274, 275, 276, 278, 280, 281, 282, 284, 285, 286, 288, 295, 304, 306, 310, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 349, 350, 351, 353, 354, 355, 356, 358, 359, 366, 367, 368, 369, 370, 371, 372, 386, 388, 395, 396, 401, 418, 419, 420, 423, 424, 425, 426, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 448, 449], "directli": [0, 4, 8, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 28, 108, 125, 126, 127, 128, 131, 134, 135, 142, 143, 149, 155, 156, 159, 164, 165, 166, 184, 185, 187, 188, 190, 191, 192, 195, 196, 200, 203, 204, 205, 207, 209, 210, 211, 215, 218, 220, 221, 222, 224, 227, 228, 231, 232, 233, 234, 235, 236, 238, 239, 240, 242, 244, 245, 247, 248, 249, 251, 323, 351, 358, 420, 430, 431, 433, 434, 442, 443, 444, 446], "from": [0, 1, 3, 4, 5, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 95, 99, 100, 101, 102, 105, 106, 108, 111, 112, 113, 114, 115, 117, 119, 121, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 140, 141, 142, 143, 146, 147, 148, 149, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 176, 181, 182, 183, 184, 185, 187, 188, 190, 191, 192, 194, 196, 198, 199, 200, 201, 202, 203, 204, 209, 210, 211, 212, 215, 217, 219, 220, 221, 222, 223, 224, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 246, 247, 248, 249, 251, 252, 254, 255, 256, 257, 258, 261, 262, 263, 264, 265, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 291, 293, 294, 295, 296, 297, 303, 304, 305, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 330, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 349, 350, 351, 353, 354, 355, 356, 358, 359, 361, 366, 367, 368, 369, 370, 371, 374, 386, 387, 388, 397, 403, 406, 409, 410, 414, 416, 417, 420, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449], "pypi": [0, 2, 448], "see": [0, 1, 2, 3, 6, 7, 8, 9, 16, 17, 20, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 67, 68, 69, 70, 73, 74, 75, 78, 79, 80, 81, 83, 85, 86, 87, 88, 89, 90, 95, 100, 106, 108, 113, 114, 125, 128, 131, 135, 138, 141, 142, 143, 147, 148, 150, 153, 154, 155, 156, 157, 158, 159, 161, 164, 165, 166, 167, 168, 169, 170, 191, 195, 196, 199, 213, 219, 234, 237, 239, 240, 241, 244, 246, 248, 249, 250, 251, 256, 257, 258, 259, 272, 274, 275, 276, 278, 279, 285, 286, 287, 294, 296, 304, 305, 309, 311, 313, 319, 322, 323, 336, 347, 351, 358, 388, 395, 403, 424, 425, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 442, 443, 444, 446, 448, 449], "more": [0, 1, 2, 3, 4, 6, 8, 9, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 67, 68, 69, 70, 73, 74, 75, 78, 79, 80, 81, 83, 85, 86, 87, 88, 89, 90, 106, 108, 119, 125, 128, 131, 134, 135, 136, 138, 139, 141, 142, 143, 147, 148, 153, 154, 155, 156, 157, 158, 159, 161, 164, 165, 166, 167, 168, 169, 170, 191, 237, 240, 244, 250, 251, 252, 253, 254, 257, 268, 276, 279, 287, 310, 315, 316, 322, 323, 327, 333, 343, 351, 353, 368, 373, 381, 395, 402, 423, 424, 425, 426, 429, 430, 431, 432, 433, 434, 435, 436, 437, 441, 442, 443, 444, 445, 448, 449], "about": [0, 3, 5, 7, 9, 23, 24, 25, 30, 31, 33, 34, 35, 36, 37, 40, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 81, 83, 86, 87, 88, 89, 90, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 424, 425, 429, 430, 431, 433, 434, 435, 436, 437, 438, 439, 442, 443, 444, 446, 448, 449], "instruct": [0, 6, 7, 10, 27, 201, 203, 425, 429, 430, 431, 432, 442, 443, 446], "dedic": [0, 1, 2, 3, 23, 24, 25, 26, 51, 70, 79, 80, 108, 155, 164, 311, 312, 313, 424, 429, 434, 436, 437, 439, 441, 443], "section": [0, 2, 3, 4, 29, 131, 272, 276, 430, 433, 434, 439, 442, 443], "below": [0, 2, 3, 7, 16, 17, 20, 22, 23, 24, 25, 26, 32, 39, 44, 56, 66, 67, 70, 73, 78, 79, 80, 86, 95, 114, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 195, 196, 199, 213, 219, 234, 239, 240, 241, 244, 246, 251, 258, 259, 272, 275, 276, 279, 285, 304, 319, 322, 403, 429, 430, 431, 432, 433, 434, 442, 444], "pip": [0, 10, 433, 434, 435, 436, 437, 438, 439, 443, 448, 449], "provid": [0, 1, 2, 3, 5, 8, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 36, 37, 38, 39, 44, 45, 46, 47, 48, 49, 51, 52, 54, 56, 60, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 75, 78, 79, 80, 84, 85, 92, 95, 99, 100, 102, 106, 107, 108, 111, 113, 114, 122, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 140, 141, 142, 143, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 161, 164, 165, 166, 167, 168, 182, 183, 184, 188, 190, 191, 192, 193, 194, 197, 198, 202, 206, 209, 214, 215, 217, 219, 220, 223, 224, 227, 228, 233, 234, 235, 238, 239, 241, 243, 244, 246, 247, 248, 249, 251, 252, 258, 259, 265, 266, 268, 271, 272, 273, 274, 276, 277, 278, 279, 280, 282, 283, 284, 285, 306, 310, 314, 316, 318, 319, 320, 321, 323, 326, 333, 334, 335, 336, 337, 338, 340, 342, 343, 344, 349, 350, 351, 353, 354, 355, 356, 358, 359, 366, 367, 368, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 392, 397, 403, 410, 416, 423, 424, 425, 426, 429, 430, 431, 432, 433, 434, 435, 437, 438, 441, 442, 443, 444, 445, 446, 448, 449], "python": [0, 3, 5, 6, 7, 10, 16, 17, 26, 63, 68, 69, 70, 73, 78, 79, 80, 85, 108, 151, 167, 168, 181, 272, 273, 274, 276, 277, 278, 282, 283, 426, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449], "first": [0, 1, 2, 3, 4, 5, 7, 8, 13, 16, 17, 20, 22, 23, 24, 25, 26, 30, 31, 33, 34, 35, 36, 37, 40, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 66, 74, 75, 83, 85, 86, 87, 88, 89, 90, 99, 101, 106, 113, 114, 119, 121, 125, 128, 131, 134, 135, 136, 141, 142, 143, 155, 156, 159, 164, 165, 166, 187, 188, 191, 192, 196, 206, 213, 215, 219, 220, 236, 237, 241, 244, 249, 252, 259, 266, 272, 274, 276, 278, 279, 282, 283, 285, 287, 290, 310, 314, 315, 316, 319, 320, 322, 323, 335, 345, 350, 351, 353, 387, 388, 405, 424, 428, 429, 430, 431, 432, 433, 434, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449], "low": [0, 3, 33, 36, 67, 78, 83, 86, 106, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 176, 184, 194, 201, 209, 212, 234, 242, 302, 303, 304, 314, 316, 319, 323, 326, 429, 430, 431, 433, 442, 443, 444, 448], "high": [0, 3, 9, 33, 36, 45, 46, 47, 48, 62, 64, 71, 79, 85, 86, 106, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 176, 184, 194, 201, 209, 212, 214, 234, 242, 302, 303, 304, 314, 316, 319, 323, 326, 368, 373, 381, 429, 430, 431, 442, 443, 444, 446, 448], "level": [0, 2, 3, 4, 27, 36, 37, 49, 63, 68, 69, 70, 75, 79, 80, 108, 134, 136, 191, 232, 240, 274, 278, 350, 429, 430, 433, 437, 448], "abstract": [0, 1, 3, 8, 14, 19, 82, 83, 123, 131, 216, 280, 372, 398, 407, 426, 431, 433, 444, 448], "ar": [0, 1, 2, 3, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 95, 96, 97, 99, 100, 101, 102, 104, 108, 111, 112, 113, 114, 115, 117, 119, 121, 125, 128, 131, 132, 134, 135, 136, 141, 142, 143, 146, 147, 148, 149, 152, 155, 156, 157, 158, 159, 161, 164, 165, 166, 167, 168, 169, 170, 176, 182, 183, 184, 186, 187, 188, 190, 191, 194, 195, 196, 198, 199, 200, 201, 202, 203, 205, 206, 209, 211, 212, 213, 214, 217, 219, 224, 227, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 251, 253, 255, 256, 264, 266, 271, 272, 273, 274, 276, 277, 278, 280, 282, 283, 284, 285, 286, 288, 291, 296, 299, 309, 314, 315, 318, 319, 320, 322, 323, 324, 325, 326, 330, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 353, 354, 355, 356, 358, 359, 362, 363, 366, 367, 368, 369, 370, 371, 372, 386, 395, 396, 403, 406, 416, 420, 424, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 448, 449], "intend": [0, 7, 16, 17, 20, 22, 23, 24, 25, 26, 30, 31, 33, 34, 35, 36, 37, 40, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 84, 86, 87, 88, 89, 90, 190, 201, 306, 351, 424, 448], "effici": [0, 1, 2, 4, 8, 18, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 272, 288, 336, 424, 429, 430, 431, 432, 433, 436, 437, 439, 441, 442, 443, 445, 446, 448], "modular": [0, 325, 433, 446, 448], "document": [0, 2, 5, 7, 11, 23, 24, 26, 32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 153, 154, 155, 156, 159, 164, 165, 166, 167, 168, 241, 251, 421, 430, 432, 433, 434, 437, 440, 448], "properli": [0, 1, 3, 86, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 182, 196, 274, 278, 431, 438, 442, 443, 444, 448], "test": [0, 3, 5, 125, 126, 127, 128, 131, 135, 140, 141, 142, 143, 147, 148, 155, 156, 159, 164, 165, 166, 171, 199, 239, 244, 274, 278, 401, 416, 431, 432, 433, 445, 448], "The": [0, 1, 3, 4, 5, 7, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 95, 97, 105, 106, 108, 111, 113, 114, 115, 119, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 139, 140, 141, 142, 143, 150, 151, 153, 154, 155, 156, 157, 158, 159, 161, 164, 165, 166, 167, 169, 170, 171, 179, 182, 183, 184, 187, 188, 190, 191, 195, 196, 198, 199, 202, 203, 204, 209, 212, 213, 215, 217, 219, 224, 226, 227, 228, 231, 232, 233, 234, 236, 239, 240, 241, 244, 246, 247, 248, 249, 251, 253, 254, 255, 256, 261, 262, 263, 264, 265, 268, 272, 273, 274, 276, 277, 278, 280, 281, 282, 283, 284, 288, 292, 294, 295, 297, 298, 299, 309, 310, 311, 314, 315, 316, 318, 319, 320, 321, 322, 323, 325, 327, 328, 329, 330, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 353, 354, 355, 356, 358, 359, 366, 367, 368, 369, 370, 371, 372, 374, 386, 388, 390, 393, 394, 395, 396, 397, 402, 416, 418, 419, 422, 424, 425, 426, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 442, 443, 444, 445, 446, 448, 449], "code": [0, 3, 5, 7, 8, 16, 17, 67, 73, 125, 128, 131, 135, 141, 142, 143, 155, 156, 159, 164, 165, 166, 219, 241, 244, 254, 272, 273, 274, 276, 277, 278, 319, 323, 325, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449], "aim": [0, 2, 3, 7, 51, 74, 75, 219, 244, 246, 279, 409, 423, 424, 425, 429, 430, 448], "support": [0, 1, 3, 13, 16, 17, 20, 22, 23, 24, 25, 26, 39, 45, 46, 47, 48, 62, 64, 66, 71, 78, 85, 95, 99, 101, 115, 117, 121, 122, 124, 125, 126, 127, 128, 134, 136, 140, 150, 152, 155, 157, 161, 174, 188, 191, 203, 209, 215, 234, 235, 238, 242, 268, 292, 294, 303, 306, 315, 316, 319, 322, 325, 343, 351, 368, 369, 370, 371, 393, 422, 424, 426, 431, 432, 434, 435, 443, 444, 446, 448], "research": [0, 7, 9, 147, 148, 254, 448], "most": [0, 1, 2, 3, 7, 8, 16, 17, 56, 58, 113, 114, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 171, 201, 247, 429, 431, 433, 434, 435, 436, 437, 438, 439, 444, 448, 449], "written": [0, 1, 2, 3, 41, 45, 46, 47, 48, 62, 63, 64, 66, 68, 69, 70, 71, 76, 79, 80, 84, 85, 97, 99, 106, 108, 113, 114, 125, 128, 129, 130, 131, 134, 135, 136, 137, 142, 143, 155, 156, 159, 161, 164, 165, 166, 182, 183, 184, 191, 203, 206, 211, 212, 227, 232, 235, 236, 241, 247, 251, 252, 257, 295, 310, 319, 322, 323, 327, 333, 335, 350, 353, 355, 367, 386, 387, 388, 424, 425, 426, 429, 432, 433, 435, 441, 444, 448], "highli": [0, 2, 434, 448, 449], "wai": [0, 1, 2, 3, 4, 108, 119, 139, 191, 219, 222, 239, 240, 246, 247, 274, 276, 278, 353, 368, 369, 370, 371, 424, 429, 430, 431, 433, 434, 436, 437, 441, 442, 443, 444, 445, 446, 448, 449], "easili": [0, 1, 2, 3, 7, 30, 31, 33, 34, 35, 36, 37, 40, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 425, 429, 430, 431, 434, 435, 436, 439, 442, 443, 448, 449], "swap": [0, 1, 3, 134, 247, 431, 433, 445, 448], "compon": [0, 1, 2, 3, 63, 67, 68, 69, 70, 79, 80, 99, 100, 101, 102, 108, 115, 117, 121, 268, 297, 315, 316, 321, 333, 334, 335, 341, 342, 343, 344, 345, 346, 349, 350, 351, 353, 354, 355, 356, 359, 366, 402, 406, 429, 430, 431, 432, 433, 435, 436, 439, 441, 442, 443, 444, 445, 448], "transform": [0, 1, 4, 8, 14, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 39, 45, 51, 56, 63, 65, 68, 69, 70, 72, 79, 80, 81, 96, 97, 104, 108, 117, 122, 125, 128, 131, 132, 135, 142, 143, 147, 148, 155, 156, 157, 158, 159, 164, 165, 166, 169, 170, 177, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 257, 260, 261, 265, 268, 269, 274, 278, 293, 296, 297, 303, 305, 314, 317, 318, 326, 329, 330, 332, 339, 352, 386, 388, 403, 420, 422, 428, 430, 432, 433, 435, 437, 438, 439, 440, 445, 447], "them": [0, 2, 3, 7, 9, 11, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 32, 36, 37, 39, 44, 49, 63, 65, 66, 67, 68, 69, 70, 73, 75, 78, 79, 80, 108, 119, 124, 125, 128, 131, 132, 135, 139, 142, 143, 146, 147, 148, 155, 156, 157, 158, 159, 164, 165, 166, 169, 170, 198, 202, 209, 212, 234, 238, 241, 242, 248, 249, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 286, 289, 290, 293, 295, 298, 299, 301, 305, 306, 314, 316, 318, 321, 326, 329, 350, 388, 429, 430, 432, 433, 434, 435, 437, 438, 441, 442, 443, 444, 445, 446, 448, 449], "write": [0, 2, 3, 8, 28, 45, 46, 47, 48, 51, 56, 62, 63, 64, 65, 68, 69, 70, 71, 79, 80, 84, 85, 106, 108, 113, 117, 124, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 183, 185, 187, 188, 190, 191, 192, 194, 195, 196, 200, 203, 204, 205, 207, 210, 211, 217, 218, 220, 221, 222, 224, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 247, 248, 251, 310, 322, 323, 325, 327, 336, 337, 338, 340, 341, 342, 349, 354, 356, 358, 359, 367, 372, 388, 424, 426, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449], "new": [0, 1, 2, 3, 4, 8, 16, 17, 20, 22, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 105, 106, 108, 112, 125, 128, 131, 135, 142, 143, 150, 155, 156, 159, 162, 163, 164, 165, 166, 182, 183, 188, 227, 231, 240, 241, 248, 249, 251, 266, 272, 274, 278, 295, 322, 323, 328, 333, 334, 335, 338, 341, 342, 343, 344, 345, 346, 349, 350, 351, 353, 354, 355, 356, 359, 366, 395, 425, 429, 431, 434, 436, 442, 443, 444, 448, 449], "ones": [0, 2, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 67, 70, 73, 74, 75, 78, 79, 80, 83, 86, 87, 88, 89, 90, 113, 114, 125, 128, 131, 135, 142, 143, 155, 156, 157, 158, 159, 160, 164, 165, 166, 192, 195, 198, 200, 202, 215, 219, 224, 231, 234, 240, 241, 244, 246, 251, 256, 282, 283, 294, 306, 322, 333, 334, 336, 337, 349, 353, 354, 356, 358, 359, 374, 429, 431, 433, 442, 443, 444, 446, 448, 449], "littl": [0, 1, 3, 81, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 241, 256, 333, 335, 350, 353, 355, 431, 432, 433, 437, 446, 448, 449], "effort": [0, 3, 444, 446, 448], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 96, 97, 99, 100, 101, 102, 104, 105, 106, 108, 111, 112, 113, 114, 115, 117, 119, 121, 122, 124, 125, 126, 127, 128, 131, 132, 134, 135, 136, 137, 140, 141, 142, 143, 146, 147, 148, 149, 152, 155, 156, 157, 158, 159, 160, 164, 165, 166, 167, 169, 170, 171, 179, 181, 182, 183, 184, 185, 187, 188, 190, 191, 192, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 207, 209, 210, 211, 213, 215, 218, 219, 220, 221, 222, 224, 227, 228, 229, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 297, 298, 299, 301, 303, 304, 306, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 326, 328, 329, 330, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 366, 368, 369, 370, 371, 372, 386, 387, 395, 396, 397, 399, 401, 403, 406, 408, 409, 410, 416, 420, 423, 424, 425, 426, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 448, 449], "repo": [0, 6, 191, 235, 244, 423, 443, 448], "attempt": [0, 13, 16, 17, 20, 22, 23, 24, 25, 26, 32, 39, 44, 56, 66, 67, 73, 78, 113, 114, 125, 128, 129, 130, 131, 134, 135, 136, 137, 142, 143, 155, 156, 159, 161, 164, 165, 166, 182, 199, 251, 256, 323, 338, 341, 349, 366, 425, 436, 448], "align": [0, 272, 276, 448], "exist": [0, 1, 2, 3, 4, 23, 26, 32, 39, 44, 45, 46, 47, 48, 51, 56, 62, 64, 66, 67, 71, 73, 78, 84, 85, 99, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 192, 200, 239, 241, 251, 252, 266, 323, 336, 356, 410, 420, 442, 443, 448, 449], "ecosystem": [0, 433, 437, 448], "ha": [0, 1, 2, 3, 4, 5, 7, 8, 10, 12, 16, 17, 20, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 99, 101, 108, 111, 113, 119, 121, 125, 128, 131, 132, 135, 139, 142, 143, 147, 148, 155, 156, 159, 164, 165, 166, 169, 170, 188, 191, 199, 213, 232, 233, 234, 235, 236, 238, 239, 240, 241, 251, 253, 272, 274, 276, 278, 284, 286, 303, 316, 318, 323, 333, 336, 350, 351, 353, 355, 388, 425, 429, 430, 431, 432, 433, 434, 437, 438, 441, 442, 443, 444, 445, 446, 448, 449], "dataset": [0, 43, 45, 46, 47, 48, 51, 62, 63, 64, 65, 70, 71, 72, 77, 79, 80, 84, 85, 95, 98, 106, 108, 111, 113, 114, 142, 152, 199, 248, 388, 422, 429, 430, 434, 445, 446, 448, 449], "pillar": [0, 448], "environ": [0, 2, 5, 8, 10, 15, 16, 17, 20, 22, 23, 24, 25, 26, 30, 31, 33, 34, 35, 36, 37, 40, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 67, 68, 73, 74, 75, 83, 85, 86, 87, 88, 89, 90, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 178, 184, 185, 187, 188, 190, 191, 192, 196, 198, 199, 200, 201, 202, 207, 213, 214, 215, 219, 220, 221, 224, 227, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 244, 247, 248, 249, 252, 255, 257, 274, 278, 280, 281, 318, 340, 344, 368, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 396, 397, 399, 401, 409, 410, 411, 412, 416, 417, 418, 419, 420, 422, 423, 424, 425, 428, 433, 435, 436, 437, 438, 440, 445, 446, 447], "model": [0, 1, 3, 8, 9, 16, 17, 20, 22, 23, 24, 25, 26, 29, 32, 38, 39, 44, 45, 46, 47, 48, 56, 62, 64, 66, 67, 71, 72, 73, 78, 84, 85, 125, 128, 131, 135, 142, 143, 149, 155, 156, 159, 164, 165, 166, 191, 198, 219, 234, 244, 246, 250, 251, 258, 259, 260, 265, 267, 274, 278, 279, 280, 281, 285, 286, 293, 296, 305, 311, 312, 313, 317, 322, 328, 330, 333, 334, 335, 336, 338, 339, 340, 341, 344, 345, 346, 349, 350, 351, 353, 354, 355, 356, 366, 406, 411, 412, 413, 422, 423, 425, 426, 428, 431, 434, 437, 440, 442, 443, 444, 446, 447, 449], "data": [0, 3, 8, 13, 15, 16, 17, 18, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 140, 141, 142, 143, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 171, 176, 183, 185, 188, 190, 191, 198, 199, 200, 202, 204, 206, 209, 211, 215, 221, 224, 231, 232, 238, 240, 241, 242, 247, 249, 251, 255, 256, 268, 271, 274, 278, 281, 284, 285, 295, 297, 306, 309, 310, 315, 318, 319, 320, 322, 323, 325, 326, 327, 333, 334, 336, 337, 338, 340, 341, 342, 349, 353, 354, 355, 356, 358, 359, 366, 368, 369, 370, 371, 372, 386, 388, 395, 397, 403, 406, 408, 411, 416, 418, 419, 420, 422, 424, 425, 426, 428, 432, 433, 434, 435, 436, 440, 444, 445, 446, 447, 449], "util": [0, 3, 16, 17, 20, 22, 23, 24, 25, 26, 27, 28, 32, 39, 44, 56, 66, 67, 70, 72, 73, 78, 113, 114, 125, 126, 127, 128, 131, 135, 140, 141, 142, 143, 148, 155, 156, 157, 158, 159, 164, 165, 166, 172, 191, 219, 224, 234, 246, 251, 254, 257, 258, 259, 265, 272, 274, 276, 278, 329, 330, 331, 332, 351, 416, 422, 427, 429, 431, 433, 435, 436, 437, 443, 444, 446, 448, 449], "e": [0, 1, 2, 3, 7, 8, 10, 16, 17, 20, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 66, 67, 71, 73, 74, 75, 78, 83, 85, 86, 87, 88, 89, 90, 99, 101, 105, 106, 119, 121, 125, 128, 131, 132, 135, 142, 143, 155, 156, 159, 164, 165, 166, 169, 171, 188, 190, 192, 195, 196, 197, 199, 206, 209, 212, 213, 215, 219, 227, 234, 236, 239, 240, 241, 244, 246, 251, 252, 272, 274, 275, 276, 278, 281, 285, 297, 303, 304, 309, 314, 316, 318, 319, 321, 322, 323, 333, 335, 336, 337, 341, 342, 349, 350, 353, 354, 355, 356, 358, 359, 367, 368, 369, 370, 371, 386, 397, 409, 419, 424, 425, 430, 431, 433, 435, 436, 438, 442, 443, 445, 446, 448, 449], "g": [0, 1, 2, 3, 7, 8, 10, 16, 17, 20, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 66, 67, 71, 73, 74, 75, 78, 83, 85, 86, 87, 88, 89, 90, 119, 125, 128, 131, 132, 135, 142, 143, 155, 156, 159, 164, 165, 166, 169, 171, 188, 190, 192, 195, 199, 206, 209, 212, 215, 219, 227, 234, 236, 239, 240, 241, 244, 246, 251, 252, 272, 274, 275, 276, 277, 278, 281, 285, 303, 304, 314, 319, 322, 323, 336, 356, 367, 377, 378, 379, 380, 382, 383, 384, 385, 386, 419, 424, 425, 430, 431, 433, 435, 438, 442, 443, 444, 445, 446, 448, 449], "collector": [0, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 41, 56, 63, 68, 69, 70, 72, 76, 79, 80, 108, 113, 114, 125, 128, 131, 135, 142, 143, 155, 156, 159, 160, 164, 165, 166, 188, 191, 224, 232, 251, 256, 274, 278, 295, 403, 406, 408, 411, 412, 416, 418, 419, 422, 425, 426, 433, 446, 449], "contain": [0, 2, 3, 7, 13, 16, 17, 20, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 93, 98, 105, 106, 108, 109, 111, 113, 114, 115, 120, 123, 124, 125, 128, 131, 135, 142, 143, 149, 155, 156, 159, 164, 165, 166, 182, 183, 184, 191, 195, 198, 202, 209, 219, 231, 234, 239, 240, 241, 244, 246, 247, 248, 249, 251, 255, 258, 259, 272, 273, 276, 277, 279, 281, 284, 285, 310, 315, 316, 319, 321, 322, 323, 327, 330, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 349, 350, 351, 353, 354, 355, 356, 358, 359, 366, 367, 368, 369, 370, 371, 372, 374, 392, 397, 409, 416, 417, 418, 419, 420, 424, 425, 426, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 442, 443, 444, 445, 446, 448, 449], "etc": [0, 2, 3, 7, 8, 32, 39, 44, 51, 56, 66, 67, 73, 78, 83, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 211, 231, 241, 251, 252, 279, 285, 303, 425, 430, 431, 437, 446, 448, 449], "have": [0, 1, 2, 3, 5, 6, 7, 8, 9, 16, 17, 22, 23, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 44, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 67, 68, 69, 70, 72, 73, 74, 75, 78, 79, 80, 83, 84, 86, 87, 88, 89, 90, 108, 112, 115, 125, 128, 131, 135, 142, 143, 155, 156, 157, 158, 159, 164, 165, 166, 171, 176, 179, 183, 184, 187, 191, 198, 199, 202, 203, 211, 214, 215, 231, 232, 234, 238, 239, 240, 241, 248, 251, 253, 256, 258, 259, 279, 284, 285, 286, 295, 306, 318, 324, 325, 333, 335, 350, 353, 355, 358, 362, 363, 366, 368, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 388, 397, 406, 424, 425, 426, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 448, 449], "few": [0, 2, 8, 114, 135, 388, 397, 431, 432, 435, 442, 443, 446, 448, 449], "depend": [0, 1, 2, 3, 4, 7, 8, 13, 16, 17, 20, 22, 23, 24, 25, 26, 33, 62, 64, 86, 125, 128, 131, 134, 135, 136, 137, 142, 143, 155, 156, 159, 161, 164, 165, 166, 169, 170, 198, 202, 323, 327, 353, 390, 424, 429, 431, 432, 442, 443, 444, 448, 449], "possibl": [0, 1, 2, 3, 4, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 66, 67, 73, 74, 75, 78, 83, 86, 87, 88, 89, 90, 100, 106, 113, 119, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 184, 195, 219, 234, 239, 240, 241, 244, 246, 251, 258, 259, 272, 273, 276, 277, 322, 386, 401, 406, 424, 429, 431, 432, 433, 435, 437, 438, 442, 443, 444, 446, 448, 449], "standard": [0, 2, 3, 58, 128, 215, 226, 248, 249, 253, 254, 255, 269, 281, 287, 288, 293, 314, 335, 350, 353, 358, 359, 368, 369, 370, 371, 429, 430, 434, 435, 443, 446, 448], "numpi": [0, 3, 30, 31, 33, 34, 35, 36, 37, 40, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 125, 128, 131, 135, 136, 142, 143, 155, 156, 159, 164, 165, 166, 209, 237, 242, 252, 406, 433, 444, 446, 448, 449], "common": [0, 1, 2, 3, 4, 83, 125, 135, 140, 185, 203, 311, 312, 313, 317, 333, 334, 335, 336, 341, 342, 349, 350, 353, 354, 355, 356, 358, 359, 416, 423, 424, 425, 426, 429, 431, 435, 438, 441, 442, 443, 444, 445, 448, 449], "openai": [0, 7, 29, 134, 136, 143, 161, 431, 444, 448, 449], "gym": [0, 1, 3, 4, 8, 16, 17, 20, 22, 26, 27, 68, 125, 128, 131, 132, 134, 135, 136, 137, 139, 142, 143, 147, 148, 150, 151, 155, 156, 159, 161, 164, 165, 166, 169, 170, 175, 179, 181, 187, 191, 194, 203, 210, 211, 215, 217, 222, 224, 227, 234, 240, 247, 248, 251, 252, 416, 423, 429, 430, 431, 432, 434, 438, 439, 444, 445, 446], "onli": [0, 1, 2, 3, 4, 7, 16, 17, 20, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 67, 68, 69, 70, 73, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 99, 101, 105, 106, 108, 113, 114, 121, 125, 128, 129, 130, 131, 134, 135, 136, 137, 139, 141, 142, 143, 150, 151, 155, 156, 157, 158, 159, 161, 164, 165, 166, 184, 187, 191, 192, 194, 195, 196, 198, 199, 201, 202, 206, 209, 213, 215, 219, 220, 224, 231, 232, 233, 234, 235, 239, 240, 241, 244, 246, 248, 249, 251, 252, 256, 276, 278, 284, 285, 310, 314, 315, 319, 320, 322, 323, 324, 325, 333, 335, 336, 337, 341, 342, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 368, 369, 370, 371, 372, 388, 395, 410, 425, 426, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 441, 442, 443, 444, 446, 448, 449], "option": [0, 1, 2, 3, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 95, 99, 100, 101, 102, 105, 106, 107, 108, 109, 111, 112, 113, 114, 117, 121, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 140, 141, 142, 143, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 164, 165, 166, 167, 168, 169, 170, 171, 176, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 197, 198, 199, 201, 202, 203, 204, 206, 207, 209, 210, 211, 212, 213, 214, 215, 219, 220, 222, 223, 226, 227, 228, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 274, 275, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 295, 297, 298, 299, 302, 303, 304, 306, 310, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 326, 327, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 366, 367, 368, 369, 370, 371, 372, 374, 377, 378, 379, 380, 382, 383, 384, 385, 386, 388, 390, 393, 395, 397, 399, 400, 401, 402, 403, 404, 406, 410, 416, 418, 419, 420, 424, 432, 434, 437, 442, 443, 444, 446, 448], "On": [0, 3, 7, 23, 24, 25, 26, 36, 273, 277, 424, 430, 442, 443], "end": [0, 2, 3, 16, 17, 22, 32, 39, 44, 51, 56, 63, 66, 67, 68, 69, 70, 73, 78, 79, 80, 85, 97, 106, 108, 112, 113, 114, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 203, 209, 217, 232, 233, 239, 241, 251, 258, 259, 272, 273, 276, 277, 280, 318, 336, 356, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 448, 449], "come": [0, 1, 2, 3, 8, 16, 17, 20, 22, 23, 24, 25, 26, 51, 56, 119, 125, 128, 131, 135, 141, 142, 143, 146, 155, 156, 159, 164, 165, 166, 198, 202, 309, 310, 311, 312, 313, 319, 327, 333, 335, 350, 353, 355, 388, 429, 430, 431, 432, 436, 437, 438, 439, 442, 443, 446, 448, 449], "set": [0, 1, 2, 3, 7, 9, 12, 16, 17, 20, 22, 23, 24, 25, 26, 30, 31, 32, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 78, 79, 80, 85, 99, 100, 101, 108, 112, 115, 121, 125, 128, 131, 133, 135, 136, 141, 142, 143, 147, 148, 149, 155, 156, 157, 158, 159, 164, 165, 166, 169, 170, 171, 180, 181, 183, 185, 187, 188, 191, 192, 195, 198, 199, 202, 209, 210, 211, 212, 219, 224, 232, 233, 234, 235, 239, 240, 241, 244, 246, 248, 249, 251, 252, 272, 274, 276, 278, 280, 284, 285, 292, 294, 295, 303, 309, 314, 322, 323, 335, 336, 342, 347, 350, 351, 353, 356, 372, 388, 396, 397, 401, 403, 412, 420, 423, 424, 425, 427, 429, 430, 431, 432, 433, 435, 436, 437, 441, 442, 443, 444, 445, 446, 448, 449], "re": [0, 2, 3, 8, 32, 39, 44, 51, 56, 63, 66, 67, 68, 69, 70, 73, 78, 79, 80, 85, 108, 112, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 206, 251, 278, 282, 283, 286, 319, 323, 395, 426, 429, 431, 432, 434, 436, 441, 442, 444, 448, 449], "usabl": [0, 426, 432, 448], "function": [0, 2, 3, 8, 14, 16, 17, 20, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 99, 100, 101, 102, 108, 115, 117, 121, 125, 128, 131, 132, 135, 136, 142, 143, 155, 156, 159, 164, 165, 166, 171, 179, 181, 182, 183, 187, 188, 198, 199, 202, 209, 211, 238, 239, 241, 242, 248, 249, 251, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 282, 283, 284, 285, 286, 289, 290, 291, 293, 295, 298, 299, 301, 304, 306, 311, 312, 313, 314, 316, 318, 319, 321, 322, 323, 325, 326, 327, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 349, 350, 351, 353, 354, 355, 356, 358, 359, 360, 361, 362, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 406, 416, 422, 424, 429, 432, 433, 434, 435, 438, 441, 444, 446, 449], "cost": [0, 2, 35, 100, 333, 335, 350, 353, 355, 425, 429, 430, 433, 442, 443, 444, 446], "return": [0, 2, 3, 7, 8, 12, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 95, 98, 100, 106, 108, 109, 111, 113, 114, 117, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 140, 141, 142, 143, 147, 148, 149, 150, 151, 152, 155, 156, 157, 158, 159, 161, 164, 165, 166, 169, 170, 173, 174, 175, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 255, 256, 259, 260, 261, 262, 263, 264, 266, 268, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 291, 293, 296, 298, 299, 302, 303, 304, 305, 307, 310, 311, 312, 313, 314, 318, 319, 321, 322, 323, 327, 328, 329, 330, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 353, 354, 355, 356, 358, 359, 362, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 388, 392, 396, 406, 409, 411, 416, 417, 418, 419, 420, 422, 424, 426, 429, 430, 431, 433, 435, 436, 438, 441, 442, 443, 444, 445, 446, 448, 449], "process": [0, 1, 3, 4, 5, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 32, 39, 44, 45, 46, 47, 48, 56, 62, 63, 64, 66, 67, 70, 71, 73, 78, 79, 80, 81, 84, 85, 101, 105, 106, 109, 113, 121, 125, 128, 131, 132, 135, 139, 142, 143, 146, 150, 155, 156, 157, 158, 159, 164, 165, 166, 190, 191, 198, 202, 209, 234, 237, 239, 248, 249, 251, 274, 278, 284, 285, 295, 316, 321, 422, 426, 429, 430, 432, 433, 434, 442, 443, 444, 445, 446, 448, 449], "good": [0, 1, 4, 9, 155, 429, 431, 432, 433, 435, 443, 448, 449], "runtim": [0, 2, 3, 28, 32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251, 444], "perform": [0, 1, 2, 3, 4, 8, 13, 16, 17, 20, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 66, 67, 72, 73, 74, 75, 78, 83, 84, 86, 87, 88, 89, 90, 125, 128, 129, 130, 131, 134, 135, 136, 137, 141, 142, 143, 155, 156, 159, 161, 164, 165, 166, 169, 170, 172, 198, 202, 209, 214, 236, 239, 241, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 286, 289, 290, 293, 294, 295, 298, 299, 301, 306, 314, 316, 318, 321, 326, 329, 335, 336, 345, 353, 356, 401, 406, 425, 429, 430, 431, 432, 433, 434, 437, 439, 441, 442, 443, 444, 449], "To": [0, 1, 2, 3, 4, 6, 7, 8, 9, 14, 16, 17, 19, 23, 24, 25, 32, 39, 44, 56, 63, 66, 67, 68, 69, 70, 72, 73, 78, 79, 80, 97, 106, 108, 113, 114, 117, 124, 125, 126, 127, 128, 131, 134, 135, 136, 140, 141, 142, 143, 146, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 169, 191, 196, 232, 234, 248, 251, 257, 274, 278, 295, 311, 312, 313, 323, 336, 342, 347, 351, 358, 388, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 424, 425, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 442, 443, 444, 445, 446, 448, 449], "read": [0, 2, 3, 7, 28, 36, 37, 41, 49, 63, 65, 68, 69, 70, 72, 75, 76, 79, 80, 99, 100, 101, 102, 105, 108, 115, 117, 121, 125, 128, 131, 134, 135, 136, 142, 143, 155, 156, 159, 164, 165, 166, 183, 184, 185, 187, 188, 190, 191, 192, 194, 195, 196, 198, 200, 201, 203, 204, 205, 206, 207, 210, 211, 217, 218, 220, 221, 222, 224, 227, 228, 229, 231, 232, 233, 234, 235, 236, 238, 239, 240, 243, 244, 245, 247, 248, 251, 257, 291, 310, 311, 312, 313, 315, 318, 319, 322, 323, 325, 327, 328, 333, 334, 335, 341, 342, 343, 344, 345, 346, 349, 350, 351, 353, 354, 355, 356, 359, 366, 368, 369, 370, 371, 372, 388, 401, 406, 424, 429, 430, 431, 433, 434, 435, 441, 442, 443, 444, 445, 448, 449], "philosophi": [0, 9], "capabl": [0, 1, 3, 7, 9, 11, 18, 26, 28, 426, 429, 434, 437, 441, 445, 449], "beyond": [0, 51, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 433], "api": [0, 1, 2, 3, 5, 16, 17, 28, 36, 37, 39, 49, 51, 66, 75, 78, 83, 128, 131, 157, 158, 161, 219, 246, 248, 249, 256, 424, 425, 426, 433, 434, 435, 436, 437, 438, 442, 443, 444, 446, 448, 449], "check": [0, 2, 3, 4, 5, 6, 7, 9, 23, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 66, 67, 70, 73, 74, 75, 78, 83, 86, 87, 88, 89, 90, 91, 93, 96, 97, 104, 113, 125, 128, 131, 132, 134, 135, 136, 142, 143, 149, 155, 156, 159, 164, 165, 166, 171, 172, 191, 192, 196, 205, 211, 220, 234, 237, 241, 251, 252, 266, 274, 278, 310, 315, 316, 319, 320, 321, 322, 323, 336, 347, 358, 388, 421, 424, 425, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449], "paper": [0, 126, 127, 129, 130, 137, 140, 141, 147, 148, 150, 151, 161, 169, 170, 219, 244, 246, 259, 272, 296, 305, 340, 348, 358, 429, 431, 442, 443], "releas": [0, 4, 7, 10, 32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 209, 239, 241, 251, 336, 356], "sync": [0, 1, 16, 17, 22, 23, 24, 25, 26, 125, 408, 416, 426, 429], "so": [0, 2, 3, 4, 6, 7, 10, 11, 32, 39, 44, 45, 46, 47, 48, 51, 56, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 78, 79, 80, 85, 108, 125, 128, 131, 135, 142, 143, 147, 148, 155, 156, 159, 164, 165, 166, 209, 234, 239, 248, 251, 256, 324, 325, 388, 429, 431, 432, 436, 439, 442, 443, 444, 449], "make": [0, 2, 3, 4, 7, 11, 32, 39, 44, 45, 46, 47, 48, 51, 56, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 78, 79, 80, 83, 85, 108, 111, 115, 117, 124, 125, 128, 131, 135, 136, 139, 141, 142, 143, 145, 151, 155, 156, 159, 164, 165, 166, 171, 182, 184, 196, 204, 212, 215, 219, 220, 224, 228, 232, 236, 240, 244, 251, 254, 257, 272, 273, 274, 276, 277, 278, 284, 285, 287, 315, 323, 333, 335, 350, 353, 355, 368, 369, 370, 371, 386, 403, 412, 420, 424, 425, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 441, 442, 443, 444, 445, 446, 448, 449], "sure": [0, 3, 4, 7, 39, 115, 128, 135, 139, 196, 224, 315, 420, 424, 429, 431, 432, 433, 436, 442, 443, 444, 446, 448, 449], "alwai": [0, 2, 3, 16, 17, 25, 32, 33, 39, 44, 56, 66, 67, 73, 78, 83, 86, 95, 96, 97, 104, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 211, 214, 236, 248, 249, 251, 343, 351, 424, 425, 430, 431, 432, 433, 442, 443, 444, 446], "enjoi": [0, 2, 3, 437], "latest": [0, 1, 2, 3, 10, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 150, 153, 154, 157, 158, 403, 431, 442, 443, 444, 448], "featur": [0, 2, 3, 4, 16, 17, 20, 22, 23, 24, 25, 26, 28, 32, 39, 60, 66, 78, 83, 84, 106, 113, 114, 125, 128, 131, 135, 142, 143, 146, 155, 156, 157, 158, 159, 162, 163, 164, 165, 166, 171, 188, 191, 206, 209, 211, 217, 234, 235, 243, 248, 254, 258, 259, 269, 270, 272, 273, 274, 276, 277, 278, 279, 284, 287, 288, 323, 330, 333, 335, 350, 353, 355, 368, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 420, 424, 425, 429, 430, 431, 432, 433, 435, 436, 437, 439, 444, 446, 448, 449], "recent": [0, 7, 247, 252, 449], "version": [0, 1, 2, 3, 6, 31, 32, 34, 37, 39, 40, 44, 49, 50, 53, 55, 56, 59, 61, 62, 64, 66, 67, 72, 73, 78, 87, 88, 89, 90, 113, 125, 128, 131, 134, 135, 136, 137, 142, 143, 150, 151, 155, 156, 157, 159, 161, 164, 165, 166, 169, 170, 182, 191, 238, 247, 248, 249, 251, 252, 254, 274, 278, 286, 292, 313, 333, 335, 350, 351, 353, 355, 356, 368, 371, 423, 424, 425, 429, 431, 432, 433, 434, 436, 439, 442, 443, 444, 445, 449], "although": [0, 1, 3, 8, 26, 32, 39, 44, 66, 67, 73, 78, 86, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 286, 289, 290, 293, 295, 298, 299, 301, 306, 314, 316, 318, 321, 326, 329, 425, 426, 429, 430, 437, 446], "core": [0, 2, 3, 8, 63, 68, 69, 70, 79, 80, 108, 426, 432, 435, 448], "guarante": [0, 2, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 66, 67, 71, 73, 74, 75, 78, 83, 85, 86, 87, 88, 89, 90, 99, 100, 101, 102, 115, 117, 121, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 239, 248, 249, 251, 323, 437], "backward": [0, 8, 32, 39, 44, 56, 66, 67, 73, 78, 125, 126, 127, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 248, 249, 251, 272, 273, 276, 277, 294, 323, 333, 334, 336, 337, 341, 342, 349, 353, 354, 355, 356, 358, 359, 429, 431, 432, 433, 436, 437, 439, 442, 443, 444], "compat": [0, 2, 3, 7, 16, 17, 20, 28, 32, 39, 44, 56, 66, 67, 73, 78, 100, 108, 111, 113, 114, 115, 119, 125, 128, 131, 135, 137, 142, 143, 152, 155, 156, 159, 164, 165, 166, 191, 232, 244, 248, 249, 251, 252, 272, 273, 274, 276, 277, 278, 320, 333, 334, 336, 337, 338, 340, 341, 342, 349, 351, 353, 354, 355, 356, 358, 359, 362, 429, 432, 446], "2": [0, 1, 2, 3, 8, 9, 10, 16, 17, 20, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 44, 49, 51, 52, 53, 54, 55, 56, 60, 61, 63, 64, 65, 66, 67, 68, 70, 73, 75, 76, 78, 79, 80, 81, 84, 85, 95, 99, 101, 105, 106, 108, 113, 114, 119, 121, 125, 126, 127, 128, 131, 132, 135, 140, 141, 142, 143, 146, 152, 153, 154, 155, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 169, 170, 176, 183, 187, 188, 190, 192, 195, 196, 198, 200, 201, 202, 211, 212, 215, 217, 219, 221, 224, 227, 231, 232, 233, 234, 239, 240, 241, 244, 246, 248, 251, 252, 257, 258, 259, 260, 261, 262, 263, 264, 265, 268, 270, 271, 272, 273, 274, 276, 277, 278, 279, 282, 283, 284, 285, 286, 293, 294, 295, 303, 306, 314, 315, 316, 318, 322, 326, 327, 333, 334, 335, 336, 337, 341, 342, 349, 350, 353, 354, 355, 356, 358, 359, 367, 368, 369, 370, 371, 373, 374, 377, 378, 379, 380, 381, 382, 383, 384, 385, 388, 397, 424, 425, 428, 429, 430, 431, 432, 433, 435, 436, 441, 442, 443, 444, 446, 447, 448, 449], "0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 16, 17, 18, 22, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 92, 95, 99, 100, 101, 105, 106, 108, 113, 114, 121, 125, 126, 127, 128, 131, 134, 135, 137, 138, 140, 141, 142, 143, 149, 150, 151, 153, 154, 155, 156, 159, 161, 162, 163, 164, 165, 166, 184, 185, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 199, 200, 201, 203, 204, 205, 207, 210, 211, 212, 213, 214, 215, 218, 219, 220, 221, 222, 224, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 287, 288, 291, 294, 295, 298, 299, 302, 303, 304, 306, 310, 314, 316, 321, 322, 323, 325, 326, 329, 330, 333, 334, 335, 336, 337, 338, 340, 342, 343, 344, 345, 346, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 366, 367, 368, 369, 370, 371, 374, 375, 376, 397, 404, 416, 420, 425, 426, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449], "nightli": [0, 6], "via": [0, 1, 3, 4, 7, 8, 25, 39, 63, 66, 70, 78, 79, 80, 100, 135, 142, 155, 164, 212, 219, 222, 246, 336, 339, 351, 425, 426, 429, 430, 431, 432, 435, 437, 446, 448, 449], "tensordict": [0, 1, 3, 13, 16, 17, 20, 22, 23, 24, 25, 26, 28, 30, 31, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 96, 97, 99, 100, 101, 102, 104, 105, 106, 108, 111, 113, 114, 119, 120, 121, 122, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 146, 147, 148, 149, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 176, 182, 183, 184, 185, 187, 188, 190, 191, 192, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 213, 215, 217, 218, 219, 220, 221, 222, 224, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 255, 256, 257, 267, 268, 271, 274, 278, 280, 281, 284, 285, 295, 296, 297, 305, 306, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 366, 367, 368, 369, 370, 371, 372, 386, 387, 397, 401, 402, 403, 405, 406, 422, 425, 426, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 449], "git": [0, 6, 7, 10], "clone": [0, 2, 4, 8, 30, 31, 33, 34, 35, 36, 37, 39, 40, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 66, 73, 74, 75, 78, 83, 85, 86, 87, 88, 89, 90, 99, 211, 221, 239, 240, 249, 311, 312, 313, 322, 341, 349, 358, 422, 429, 442, 444, 448], "willing": 0, "contribut": [0, 2], "cd": [0, 7], "path": [0, 3, 6, 7, 32, 39, 44, 45, 46, 47, 48, 51, 56, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 78, 79, 80, 84, 85, 95, 97, 99, 108, 116, 122, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 167, 181, 219, 246, 251, 281, 390, 395, 406, 426, 430, 433, 439, 442], "root": [0, 2, 3, 36, 37, 49, 51, 63, 68, 69, 70, 75, 79, 80, 85, 96, 97, 104, 108, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 182, 191, 213, 235, 236, 274, 275, 278, 303, 304, 425, 432, 434, 442, 443, 444, 446, 449], "http": [0, 2, 5, 6, 7, 10, 16, 17, 23, 24, 25, 29, 63, 81, 105, 106, 126, 127, 129, 130, 137, 139, 140, 141, 147, 148, 150, 151, 152, 153, 154, 157, 158, 161, 167, 168, 169, 170, 191, 219, 244, 254, 260, 261, 262, 263, 264, 265, 268, 269, 270, 276, 281, 282, 283, 288, 289, 290, 294, 295, 296, 298, 299, 305, 316, 333, 334, 336, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 352, 353, 354, 355, 356, 357, 358, 368, 373, 381, 421, 440, 445, 448], "github": [0, 2, 5, 6, 7, 10, 23, 24, 25, 29, 126, 127, 129, 130, 134, 137, 140, 141, 147, 148, 150, 151, 153, 154, 157, 158, 161, 167, 168, 169, 170, 188, 191, 244, 254, 435, 439, 442, 443, 448], "com": [0, 2, 5, 6, 7, 10, 23, 24, 25, 29, 126, 127, 129, 130, 137, 139, 140, 141, 147, 148, 150, 151, 153, 154, 157, 158, 161, 167, 168, 169, 170, 191, 254, 448], "setup": [0, 1, 7, 126, 127, 139, 140, 141, 167], "py": [0, 3, 29, 134, 136, 181, 191, 266, 296, 305, 426, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449], "develop": [0, 3, 4, 7, 51, 139, 429, 448], "A": [0, 1, 3, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 98, 99, 100, 101, 102, 103, 106, 107, 108, 109, 110, 112, 113, 115, 119, 120, 121, 122, 123, 125, 128, 131, 133, 135, 137, 138, 142, 143, 155, 156, 159, 160, 161, 164, 165, 166, 171, 177, 182, 184, 186, 187, 188, 190, 191, 194, 196, 199, 201, 207, 211, 213, 219, 220, 222, 229, 234, 236, 239, 240, 241, 244, 245, 247, 248, 249, 250, 251, 252, 253, 255, 257, 258, 259, 268, 271, 272, 273, 274, 276, 277, 278, 279, 281, 282, 283, 285, 286, 288, 294, 306, 314, 315, 316, 318, 319, 320, 323, 325, 326, 329, 330, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 362, 366, 368, 369, 370, 371, 372, 374, 386, 389, 390, 393, 395, 396, 399, 406, 408, 416, 422, 425, 428, 429, 431, 433, 435, 436, 437, 440, 444, 447, 449], "seri": [0, 2, 3, 7, 8, 60, 98, 109, 119, 120, 123, 124, 164, 214, 240, 388, 424, 425, 429, 430, 431, 438, 439, 442, 443, 446, 449], "quick": [0, 433], "ramp": 0, "up": [0, 1, 2, 3, 8, 9, 15, 16, 17, 18, 20, 22, 23, 24, 25, 26, 35, 51, 72, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 187, 190, 209, 212, 235, 240, 251, 254, 353, 423, 424, 425, 429, 430, 431, 432, 435, 439, 442, 443, 444, 446, 448, 449], "If": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 95, 99, 100, 101, 102, 106, 108, 109, 111, 112, 113, 114, 119, 121, 125, 128, 129, 130, 131, 132, 134, 135, 136, 137, 139, 141, 142, 143, 147, 148, 149, 150, 151, 155, 156, 157, 158, 159, 161, 164, 165, 166, 167, 168, 169, 170, 171, 175, 179, 182, 183, 184, 187, 188, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 204, 206, 209, 211, 212, 213, 214, 215, 219, 220, 223, 224, 227, 228, 233, 234, 235, 236, 237, 238, 239, 241, 242, 244, 246, 248, 251, 252, 257, 258, 259, 271, 272, 273, 274, 276, 277, 278, 279, 282, 283, 284, 285, 286, 295, 306, 310, 314, 315, 316, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 332, 333, 334, 335, 336, 337, 338, 340, 342, 343, 344, 345, 347, 349, 350, 351, 353, 354, 355, 356, 358, 359, 366, 367, 368, 369, 370, 371, 372, 382, 383, 384, 385, 386, 392, 395, 396, 402, 403, 406, 408, 410, 416, 420, 423, 425, 429, 430, 431, 432, 433, 434, 436, 438, 439, 441, 442, 443, 444, 446, 448, 449], "hurri": [0, 434], "last": [0, 1, 2, 3, 4, 16, 17, 20, 22, 28, 30, 31, 32, 33, 34, 35, 36, 37, 40, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 65, 66, 74, 75, 83, 85, 86, 87, 88, 89, 90, 112, 113, 114, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 140, 141, 142, 143, 150, 151, 155, 156, 159, 161, 164, 165, 166, 176, 184, 187, 190, 206, 213, 215, 220, 233, 235, 237, 252, 253, 258, 259, 271, 272, 274, 276, 278, 279, 282, 283, 289, 300, 303, 306, 314, 318, 323, 336, 368, 370, 371, 430, 431, 432, 433, 434, 435, 442, 443, 444, 445, 446, 448, 449], "item": [0, 2, 3, 8, 16, 30, 31, 33, 34, 35, 36, 37, 40, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 63, 68, 69, 70, 74, 75, 78, 79, 80, 83, 84, 86, 87, 88, 89, 90, 95, 100, 106, 108, 112, 119, 142, 184, 199, 205, 240, 282, 283, 337, 338, 340, 397, 425, 426, 429, 431, 432, 436, 437, 442, 443, 444, 446], "navig": [0, 443], "previou": [0, 3, 4, 10, 56, 63, 68, 69, 70, 72, 79, 80, 108, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 183, 206, 234, 251, 272, 276, 299, 314, 431, 432, 433, 434, 435, 439, 444, 449], "whenev": [0, 1, 2, 3, 16, 17, 20, 22, 23, 24, 25, 26, 28, 39, 56, 63, 66, 70, 78, 79, 80, 85, 105, 106, 113, 114, 129, 130, 134, 136, 137, 147, 148, 161, 169, 170, 181, 199, 206, 210, 241, 247, 351, 368, 369, 370, 371, 386, 408, 424, 438, 446], "want": [0, 2, 3, 6, 7, 8, 39, 66, 78, 114, 191, 215, 294, 333, 334, 336, 337, 338, 340, 342, 343, 344, 349, 351, 353, 354, 355, 356, 358, 359, 366, 424, 429, 430, 431, 432, 433, 434, 436, 437, 438, 442, 443, 444, 445, 446, 448, 449], "ted": [0, 41, 57, 76, 77, 96, 97, 104, 422, 428, 440, 447], "s": [0, 1, 2, 3, 6, 7, 8, 11, 13, 16, 17, 18, 20, 22, 23, 24, 25, 26, 32, 36, 39, 44, 45, 46, 47, 48, 51, 56, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 78, 79, 80, 83, 85, 108, 113, 114, 119, 125, 126, 127, 128, 131, 135, 139, 140, 141, 142, 143, 147, 148, 150, 155, 156, 157, 158, 159, 164, 165, 166, 169, 170, 171, 191, 195, 199, 209, 213, 219, 232, 234, 237, 238, 239, 240, 241, 244, 246, 248, 249, 251, 253, 256, 258, 259, 266, 271, 274, 278, 283, 284, 285, 288, 294, 296, 303, 305, 311, 313, 316, 318, 319, 322, 323, 326, 334, 336, 341, 347, 349, 351, 356, 358, 368, 369, 370, 371, 372, 386, 424, 425, 428, 429, 430, 431, 432, 433, 434, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449], "modul": [0, 2, 3, 4, 8, 11, 16, 17, 20, 22, 23, 24, 25, 26, 29, 32, 38, 39, 44, 56, 66, 67, 72, 73, 78, 119, 125, 126, 127, 128, 131, 135, 142, 143, 146, 149, 152, 155, 156, 159, 164, 165, 166, 181, 190, 195, 199, 201, 203, 209, 211, 219, 220, 233, 234, 239, 240, 241, 244, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 348, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 364, 366, 368, 369, 370, 371, 372, 386, 406, 413, 416, 422, 425, 426, 428, 430, 431, 434, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447], "optim": [0, 1, 2, 8, 32, 39, 44, 56, 66, 67, 72, 73, 78, 125, 126, 127, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 239, 241, 251, 255, 281, 287, 288, 294, 303, 334, 336, 351, 352, 353, 356, 363, 401, 402, 406, 416, 425, 426, 428, 431, 432, 433, 434, 435, 437, 440, 442, 443, 444, 447], "collect": [0, 1, 2, 3, 4, 8, 16, 17, 20, 22, 23, 24, 25, 26, 27, 51, 56, 63, 68, 69, 70, 79, 80, 108, 112, 125, 128, 131, 135, 142, 143, 155, 156, 159, 161, 164, 165, 166, 171, 188, 191, 199, 206, 215, 219, 246, 295, 318, 334, 337, 340, 342, 354, 356, 358, 359, 388, 397, 403, 406, 408, 409, 410, 416, 426, 428, 429, 432, 433, 434, 435, 436, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449], "storag": [0, 1, 8, 32, 39, 41, 44, 45, 46, 47, 48, 51, 56, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 76, 78, 79, 80, 82, 85, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 108, 112, 113, 114, 116, 117, 118, 119, 121, 122, 125, 128, 131, 133, 135, 142, 143, 155, 156, 159, 164, 165, 166, 190, 191, 198, 202, 224, 251, 422, 426, 428, 430, 431, 432, 433, 434, 436, 439, 440, 442, 443, 445, 447], "log": [0, 3, 4, 8, 11, 72, 266, 267, 268, 282, 283, 291, 303, 304, 315, 316, 319, 323, 333, 334, 335, 336, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 353, 354, 355, 356, 359, 366, 395, 399, 400, 401, 406, 416, 424, 425, 426, 428, 429, 430, 431, 434, 435, 439, 440, 442, 443, 444, 447, 448], "your": [0, 1, 2, 7, 8, 10, 11, 15, 16, 17, 18, 21, 23, 32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 139, 142, 143, 146, 155, 156, 157, 158, 159, 164, 165, 166, 248, 249, 251, 323, 396, 420, 422, 423, 424, 425, 428, 430, 431, 432, 434, 435, 436, 437, 438, 440, 442, 443, 446, 447, 448], "own": [0, 1, 16, 17, 22, 26, 27, 32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 157, 158, 159, 164, 165, 166, 251, 388, 422, 425, 428, 430, 431, 434, 440, 442, 443, 444, 447], "train": [0, 1, 2, 3, 13, 16, 17, 20, 22, 23, 24, 25, 26, 27, 29, 32, 35, 39, 44, 45, 46, 47, 48, 56, 62, 64, 66, 67, 71, 72, 73, 78, 84, 85, 95, 125, 128, 131, 135, 142, 143, 147, 148, 155, 156, 157, 158, 159, 164, 165, 166, 171, 198, 207, 219, 233, 238, 241, 244, 246, 251, 253, 254, 256, 261, 263, 271, 274, 278, 295, 333, 334, 335, 336, 337, 341, 342, 343, 344, 345, 346, 349, 350, 351, 353, 354, 355, 356, 358, 359, 366, 368, 406, 408, 416, 422, 424, 426, 428, 430, 434, 437, 438, 440, 445, 446, 447, 448, 449], "loop": [0, 8, 45, 46, 47, 48, 62, 64, 71, 85, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 253, 271, 294, 295, 353, 406, 425, 426, 428, 429, 430, 434, 436, 437, 438, 440, 441, 446, 447, 448], "ppo": [0, 4, 8, 319, 323, 335, 350, 353, 422, 424, 428, 429, 430, 433, 435, 436, 440, 442, 447], "pendulum": [0, 3, 16, 17, 20, 22, 26, 27, 68, 119, 125, 128, 129, 130, 131, 132, 134, 135, 136, 142, 143, 150, 155, 156, 159, 164, 165, 166, 191, 194, 195, 196, 204, 210, 211, 215, 222, 224, 228, 229, 232, 234, 235, 236, 239, 240, 241, 242, 248, 251, 257, 274, 278, 416, 424, 428, 430, 431, 434, 435, 436, 440, 447, 448, 449], "introduct": [0, 425, 428, 434, 440, 442, 443, 447, 449], "multi": [0, 1, 7, 9, 32, 39, 44, 56, 63, 66, 67, 70, 73, 74, 75, 78, 79, 80, 96, 97, 104, 125, 128, 131, 135, 142, 143, 147, 148, 155, 156, 159, 162, 163, 164, 165, 166, 212, 241, 251, 272, 274, 276, 278, 279, 284, 285, 286, 318, 323, 366, 368, 369, 370, 371, 422, 428, 429, 430, 431, 432, 434, 435, 440, 444, 447, 448], "agent": [0, 9, 69, 74, 75, 146, 147, 148, 153, 154, 157, 158, 162, 163, 167, 168, 169, 170, 172, 212, 231, 232, 233, 282, 283, 284, 285, 286, 288, 296, 305, 335, 350, 353, 366, 422, 428, 434, 440, 444, 447], "env": [0, 1, 2, 5, 6, 7, 8, 11, 16, 17, 20, 22, 23, 24, 25, 26, 27, 32, 36, 39, 41, 44, 51, 56, 66, 67, 68, 72, 73, 76, 78, 85, 108, 119, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 255, 257, 274, 278, 280, 281, 318, 322, 351, 386, 387, 388, 396, 410, 411, 412, 416, 418, 419, 420, 422, 424, 425, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447], "us": [0, 1, 2, 5, 7, 8, 10, 11, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 99, 100, 104, 105, 106, 107, 108, 113, 114, 119, 121, 125, 126, 127, 128, 131, 132, 134, 135, 136, 137, 140, 141, 142, 143, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 180, 181, 182, 183, 184, 185, 187, 188, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 209, 210, 211, 212, 213, 215, 218, 219, 220, 221, 222, 224, 227, 228, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 265, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 291, 293, 294, 295, 296, 297, 303, 304, 305, 306, 309, 310, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 326, 327, 328, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 353, 354, 355, 356, 358, 359, 362, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 381, 386, 388, 391, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 414, 416, 420, 422, 423, 424, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 447, 449], "pretrain": [0, 428, 440, 447], "recurr": [0, 2, 190, 272, 273, 274, 276, 278, 299, 309, 428, 430, 435, 440, 446, 447], "dqn": [0, 2, 184, 203, 259, 268, 315, 316, 333, 334, 336, 337, 338, 340, 342, 343, 344, 348, 349, 351, 353, 354, 355, 356, 357, 358, 359, 366, 413, 422, 424, 428, 433, 435, 436, 439, 440, 447], "polici": [0, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 41, 56, 68, 76, 125, 126, 127, 128, 131, 135, 142, 143, 149, 155, 156, 159, 160, 164, 165, 166, 180, 201, 211, 213, 233, 236, 253, 256, 257, 268, 271, 274, 278, 284, 285, 288, 295, 297, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 326, 333, 334, 335, 336, 337, 341, 342, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 401, 408, 411, 412, 416, 418, 419, 422, 424, 426, 428, 430, 434, 436, 437, 440, 445, 446, 447, 448, 449], "replai": [0, 8, 20, 26, 56, 63, 68, 69, 70, 79, 80, 105, 106, 107, 108, 109, 110, 112, 114, 115, 117, 119, 120, 124, 190, 191, 201, 220, 224, 234, 240, 251, 336, 337, 338, 340, 341, 342, 349, 354, 356, 358, 359, 403, 406, 414, 416, 422, 425, 426, 428, 433, 440, 444, 445, 447], "buffer": [0, 4, 8, 16, 17, 20, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 119, 120, 121, 124, 125, 128, 131, 135, 142, 143, 149, 155, 156, 159, 164, 165, 166, 190, 191, 195, 199, 201, 209, 219, 220, 224, 234, 239, 240, 241, 244, 246, 251, 253, 295, 314, 322, 325, 336, 337, 338, 340, 341, 342, 349, 354, 356, 358, 359, 368, 369, 370, 371, 372, 403, 406, 414, 416, 422, 425, 426, 428, 433, 438, 440, 444, 445, 447, 449], "export": [0, 6, 7, 428, 440, 447], "competit": [0, 3, 147, 148, 428, 440, 443, 447], "ddpg": [0, 261, 262, 263, 264, 337, 348, 357, 422, 424, 428, 430, 436, 440, 443, 447], "task": [0, 2, 3, 9, 72, 74, 75, 84, 125, 128, 129, 130, 131, 135, 138, 142, 143, 147, 148, 155, 156, 157, 158, 159, 161, 164, 165, 166, 169, 170, 219, 232, 241, 244, 246, 341, 349, 428, 429, 430, 431, 432, 434, 435, 440, 442, 443, 444, 447, 449], "specif": [0, 1, 2, 5, 8, 13, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 30, 31, 33, 34, 35, 36, 37, 40, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 79, 80, 83, 86, 87, 88, 89, 90, 125, 128, 131, 135, 142, 143, 153, 154, 155, 156, 159, 164, 165, 166, 169, 179, 199, 213, 234, 249, 265, 274, 278, 314, 333, 351, 353, 355, 388, 406, 422, 425, 426, 428, 431, 432, 434, 435, 436, 437, 438, 439, 440, 442, 443, 446, 447, 448], "object": [0, 2, 3, 4, 6, 7, 16, 17, 18, 20, 22, 23, 24, 25, 26, 29, 32, 36, 39, 44, 45, 46, 47, 48, 56, 58, 62, 64, 66, 67, 71, 73, 78, 83, 84, 85, 99, 100, 101, 102, 108, 111, 115, 117, 121, 124, 125, 128, 131, 135, 140, 142, 143, 155, 156, 159, 160, 164, 165, 166, 184, 198, 202, 203, 209, 212, 215, 219, 239, 240, 241, 244, 248, 249, 251, 274, 278, 281, 284, 285, 296, 303, 305, 310, 311, 319, 322, 323, 324, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 388, 410, 411, 412, 415, 416, 420, 422, 424, 426, 428, 430, 431, 432, 433, 437, 439, 440, 442, 443, 444, 446, 447, 449], "loss": [0, 3, 8, 64, 203, 282, 294, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 362, 366, 367, 368, 402, 406, 413, 416, 425, 426, 428, 433, 434, 436, 437, 438, 440, 444, 446, 447], "trainer": [0, 333, 334, 335, 341, 342, 343, 344, 345, 346, 349, 350, 351, 353, 354, 355, 356, 359, 366, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 428, 429, 440, 447], "exampl": [0, 1, 2, 4, 9, 10, 16, 17, 20, 22, 23, 26, 27, 28, 30, 31, 32, 33, 35, 36, 37, 39, 40, 41, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 78, 79, 80, 81, 84, 85, 86, 95, 99, 100, 101, 105, 106, 108, 113, 114, 119, 121, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 175, 176, 177, 181, 182, 183, 184, 185, 187, 188, 190, 191, 192, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 207, 209, 210, 211, 212, 215, 217, 218, 219, 220, 221, 222, 223, 224, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 251, 252, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 270, 271, 272, 273, 274, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 291, 293, 294, 295, 296, 297, 305, 306, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 325, 326, 327, 330, 333, 334, 336, 337, 338, 340, 341, 342, 343, 344, 349, 351, 353, 354, 355, 356, 358, 359, 360, 361, 366, 368, 369, 370, 371, 374, 386, 388, 396, 397, 398, 399, 400, 402, 403, 404, 405, 408, 416, 422, 424, 425, 426, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449], "packag": [0, 6, 7, 10, 181, 422, 423, 449], "batch": [0, 2, 16, 17, 18, 20, 22, 23, 24, 25, 26, 28, 36, 56, 58, 60, 63, 65, 68, 69, 70, 72, 79, 80, 81, 83, 95, 99, 100, 101, 102, 106, 107, 108, 112, 113, 114, 119, 121, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 140, 141, 142, 143, 149, 150, 152, 153, 154, 155, 156, 159, 164, 165, 166, 167, 168, 169, 170, 183, 188, 191, 195, 196, 199, 206, 213, 215, 217, 220, 224, 231, 234, 236, 240, 241, 243, 247, 248, 251, 254, 266, 272, 273, 274, 276, 277, 278, 282, 283, 284, 285, 286, 287, 291, 295, 296, 302, 306, 309, 318, 322, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 349, 350, 351, 353, 354, 355, 356, 358, 359, 366, 368, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 397, 400, 403, 404, 405, 406, 408, 418, 419, 420, 422, 424, 425, 426, 430, 431, 432, 433, 434, 437, 439, 441, 442, 443, 445, 448, 449], "size": [0, 2, 16, 17, 20, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 95, 99, 100, 101, 102, 105, 106, 107, 108, 112, 113, 114, 115, 121, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 140, 141, 142, 143, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 176, 182, 184, 188, 190, 191, 192, 195, 197, 198, 199, 202, 203, 204, 206, 209, 212, 213, 217, 219, 221, 222, 224, 228, 230, 231, 232, 234, 236, 237, 240, 241, 242, 243, 246, 248, 249, 251, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 276, 277, 278, 279, 281, 282, 283, 284, 285, 291, 292, 293, 294, 295, 296, 297, 298, 299, 302, 305, 306, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 325, 327, 330, 333, 334, 336, 337, 338, 340, 341, 342, 349, 351, 353, 354, 355, 356, 358, 359, 366, 367, 368, 369, 370, 371, 372, 388, 397, 403, 422, 424, 425, 430, 431, 432, 433, 434, 435, 437, 442, 443, 444, 449], "copi": [0, 2, 3, 15, 18, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 39, 40, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 66, 67, 71, 72, 73, 74, 78, 83, 84, 85, 86, 87, 88, 89, 90, 99, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 182, 187, 191, 209, 222, 233, 239, 240, 241, 248, 249, 251, 252, 274, 278, 286, 314, 336, 351, 356, 386, 422, 425, 429, 430, 432, 434, 442, 446, 448], "interoper": [0, 16, 17, 422], "singl": [0, 2, 3, 16, 17, 20, 22, 23, 24, 25, 26, 32, 36, 37, 39, 42, 44, 45, 46, 47, 48, 49, 51, 54, 56, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 75, 78, 79, 80, 81, 85, 100, 108, 114, 119, 125, 128, 131, 134, 135, 142, 143, 147, 148, 155, 156, 159, 164, 165, 166, 169, 170, 184, 191, 192, 199, 212, 219, 224, 234, 239, 241, 246, 251, 258, 259, 272, 273, 274, 276, 277, 278, 279, 285, 321, 325, 334, 335, 336, 338, 340, 342, 343, 349, 350, 353, 354, 356, 358, 359, 363, 368, 369, 370, 371, 377, 378, 379, 380, 382, 383, 384, 385, 386, 420, 422, 424, 425, 429, 430, 431, 432, 433, 434, 435, 436, 437, 441, 442, 443, 444, 445, 446, 448], "node": [0, 2, 19, 23, 24, 25, 26, 27, 36, 37, 45, 46, 47, 48, 49, 51, 62, 64, 71, 75, 85, 143, 239, 422, 437, 448], "distribut": [0, 2, 3, 4, 9, 10, 15, 18, 19, 23, 24, 25, 26, 27, 63, 68, 69, 70, 79, 80, 108, 128, 157, 158, 211, 215, 249, 253, 255, 266, 267, 268, 269, 275, 281, 282, 283, 291, 292, 293, 294, 298, 299, 302, 303, 304, 314, 315, 316, 319, 323, 324, 333, 334, 335, 336, 341, 342, 343, 349, 350, 353, 354, 355, 356, 358, 359, 422, 425, 426, 430, 431, 433, 435, 437, 442, 443, 444, 448, 449], "helper": [0, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 429, 430, 432, 442, 444], "compos": [0, 3, 32, 39, 44, 56, 63, 66, 67, 70, 73, 78, 79, 80, 107, 108, 109, 110, 119, 120, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 191, 196, 209, 223, 239, 240, 241, 248, 251, 317, 318, 336, 345, 356, 388, 422, 429, 430, 431, 432, 433, 437, 441, 443, 445, 446, 448, 449], "episod": [0, 3, 51, 106, 113, 114, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 182, 187, 224, 227, 233, 255, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 422, 430, 434, 439, 442, 443, 446], "format": [0, 3, 32, 39, 41, 44, 45, 54, 55, 56, 57, 60, 61, 66, 67, 73, 76, 77, 78, 85, 96, 97, 104, 111, 119, 125, 128, 131, 135, 142, 143, 155, 156, 157, 159, 164, 165, 166, 191, 195, 219, 234, 240, 241, 244, 246, 251, 322, 388, 422, 429, 430, 433, 434, 436, 438, 448, 449], "tensorspec": [0, 3, 30, 31, 33, 34, 35, 36, 37, 40, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 86, 87, 88, 89, 90, 91, 92, 93, 125, 128, 131, 135, 142, 143, 149, 155, 156, 159, 160, 164, 165, 166, 169, 170, 183, 184, 188, 189, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 203, 204, 206, 208, 210, 211, 212, 213, 215, 217, 221, 222, 223, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 251, 253, 271, 295, 299, 310, 314, 315, 316, 319, 320, 321, 322, 323, 324, 326, 334, 336, 338, 341, 342, 354, 356, 358, 359, 366, 422, 444], "tree": [0, 1, 45, 46, 47, 48, 51, 62, 64, 71, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 191, 422, 442, 446], "forest": [0, 51, 85, 422], "larg": [0, 1, 3, 4, 35, 45, 46, 47, 48, 62, 64, 71, 85, 113, 114, 198, 202, 244, 333, 335, 350, 353, 355, 422, 430, 431, 442, 443, 446], "languag": [0, 29, 72, 142, 422], "human": [0, 29, 422, 444], "feedback": [0, 422, 439, 448], "rlhf": [0, 211, 422, 424], "spec": [0, 1, 2, 16, 17, 20, 26, 30, 31, 33, 34, 35, 36, 37, 40, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 125, 126, 127, 128, 131, 133, 134, 135, 136, 137, 140, 141, 142, 143, 149, 150, 151, 153, 154, 155, 156, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 176, 179, 182, 183, 184, 185, 188, 189, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 206, 208, 210, 211, 212, 213, 215, 217, 219, 221, 222, 223, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 251, 253, 268, 271, 274, 278, 295, 297, 299, 310, 314, 315, 316, 319, 320, 321, 322, 323, 325, 326, 333, 334, 336, 337, 338, 340, 341, 342, 349, 353, 354, 355, 356, 358, 359, 366, 422, 424, 425, 429, 430, 431, 432, 433, 434, 435, 439, 441, 442, 443, 448], "lock": [0, 36, 37, 45, 46, 47, 48, 49, 62, 64, 71, 75, 85, 125, 128, 131, 135, 141, 142, 143, 155, 156, 159, 164, 165, 166, 188, 196, 234, 248, 249, 422, 425, 444], "method": [0, 1, 2, 4, 13, 14, 16, 17, 19, 20, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 95, 99, 100, 101, 102, 105, 106, 108, 113, 114, 115, 116, 117, 119, 121, 125, 128, 131, 134, 135, 136, 137, 141, 142, 143, 155, 156, 159, 160, 161, 164, 165, 166, 179, 184, 185, 187, 188, 190, 191, 192, 195, 196, 198, 199, 200, 203, 204, 205, 206, 207, 210, 211, 213, 215, 218, 219, 220, 221, 222, 223, 224, 227, 228, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 251, 252, 253, 255, 256, 257, 266, 271, 274, 278, 284, 285, 286, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 330, 333, 334, 336, 337, 338, 340, 341, 342, 343, 344, 347, 349, 351, 353, 354, 355, 356, 358, 359, 366, 372, 386, 387, 417, 422, 425, 426, 427, 430, 431, 432, 433, 434, 435, 436, 437, 438, 442, 444, 446, 449], "partial": [0, 2, 16, 17, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 190, 191, 199, 233, 234, 235, 319, 406, 422, 432], "step": [0, 1, 4, 8, 16, 17, 20, 22, 23, 24, 25, 26, 39, 51, 56, 72, 85, 96, 97, 104, 106, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 140, 141, 142, 143, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 161, 164, 165, 166, 167, 168, 182, 183, 185, 187, 188, 190, 191, 192, 195, 196, 200, 203, 204, 205, 206, 207, 210, 211, 213, 215, 218, 220, 221, 222, 224, 227, 228, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 244, 245, 247, 248, 251, 253, 254, 255, 269, 271, 272, 274, 276, 278, 280, 281, 294, 295, 318, 319, 323, 333, 344, 353, 367, 368, 369, 370, 371, 374, 375, 376, 387, 390, 397, 401, 406, 422, 426, 430, 432, 433, 435, 436, 438, 439, 441, 444, 445, 448], "reset": [0, 1, 2, 8, 16, 17, 20, 22, 23, 24, 25, 26, 32, 39, 44, 51, 56, 63, 66, 67, 68, 69, 70, 73, 78, 79, 80, 108, 114, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 140, 141, 142, 143, 146, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 164, 165, 166, 167, 168, 171, 183, 186, 187, 188, 191, 199, 203, 206, 210, 214, 219, 227, 232, 233, 234, 235, 236, 239, 240, 241, 244, 247, 248, 251, 252, 257, 272, 274, 278, 286, 295, 308, 318, 351, 387, 422, 425, 429, 430, 431, 432, 434, 437, 441, 442, 443, 448], "vector": [0, 1, 8, 30, 60, 126, 127, 136, 140, 141, 146, 157, 158, 161, 169, 170, 201, 247, 249, 261, 263, 272, 273, 276, 277, 279, 368, 371, 381, 382, 383, 384, 385, 422, 424, 425, 429, 430, 432, 441, 442, 443, 444, 445, 449], "async": [0, 16, 17, 22, 23, 24, 25, 26, 68, 125, 159, 165, 247, 422], "custom": [0, 1, 2, 5, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 32, 39, 44, 56, 66, 67, 73, 78, 85, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 244, 251, 284, 285, 326, 332, 343, 353, 360, 420, 422, 424, 429, 430, 431, 432, 435, 436, 438, 442, 443], "nativ": [0, 1, 7, 9, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 191, 388, 422, 432, 446], "auto": [0, 101, 121, 131, 186, 187, 241, 247, 295, 334, 336, 342, 352, 354, 356, 358, 359, 422, 425, 442, 443], "dynam": [0, 2, 7, 16, 17, 20, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 171, 176, 251, 341, 349, 422, 431, 434, 444], "mask": [0, 1, 4, 28, 30, 31, 33, 34, 35, 36, 37, 40, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 125, 128, 131, 135, 142, 143, 155, 156, 157, 158, 159, 164, 165, 166, 185, 220, 251, 256, 257, 268, 271, 282, 283, 297, 314, 315, 316, 320, 321, 342, 356, 403, 422, 430, 432, 433, 449], "action": [0, 2, 8, 9, 16, 17, 20, 22, 26, 41, 51, 60, 68, 72, 76, 78, 85, 105, 106, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 169, 170, 176, 182, 184, 185, 188, 194, 195, 198, 199, 200, 201, 202, 203, 204, 206, 207, 209, 211, 213, 214, 215, 217, 221, 222, 224, 228, 232, 234, 238, 240, 241, 242, 243, 247, 251, 253, 255, 257, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 271, 274, 278, 279, 280, 281, 282, 283, 284, 293, 295, 296, 297, 299, 302, 303, 305, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 323, 326, 327, 333, 334, 336, 337, 338, 340, 341, 342, 349, 351, 353, 354, 355, 356, 358, 359, 366, 368, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 416, 420, 422, 424, 426, 429, 430, 431, 433, 434, 435, 436, 441, 442, 443, 445, 448, 449], "record": [0, 2, 11, 32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 177, 184, 211, 251, 353, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 401, 416, 422, 430, 431, 435, 439, 442], "domain": [0, 2, 8, 30, 31, 33, 34, 35, 36, 37, 40, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 176, 201, 209, 234, 242, 310, 315, 316, 319, 320, 321, 322, 323, 324, 325, 330, 422, 431, 436, 442, 443, 444, 448, 449], "actor": [0, 3, 4, 26, 160, 211, 255, 260, 261, 263, 268, 269, 271, 281, 293, 295, 297, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 347, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 366, 422, 425, 430, 432, 434, 436, 439, 442, 445, 448], "explor": [0, 1, 250, 253, 256, 271, 288, 295, 310, 315, 316, 319, 320, 321, 322, 323, 333, 351, 401, 411, 412, 416, 422, 431, 432, 433, 434, 436, 437, 439, 442, 443, 444], "valu": [0, 1, 2, 3, 8, 16, 17, 20, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 95, 105, 106, 108, 113, 114, 119, 125, 128, 131, 135, 142, 143, 146, 155, 156, 159, 164, 165, 166, 171, 176, 181, 182, 183, 184, 187, 189, 191, 192, 194, 196, 198, 199, 200, 201, 202, 203, 209, 214, 215, 219, 220, 223, 224, 225, 227, 229, 231, 234, 235, 240, 241, 246, 248, 249, 251, 252, 253, 254, 257, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 274, 275, 278, 279, 281, 282, 283, 284, 285, 287, 288, 291, 295, 296, 297, 302, 303, 304, 305, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 326, 327, 329, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 388, 396, 397, 399, 400, 401, 402, 403, 406, 416, 422, 426, 430, 433, 436, 437, 438, 441, 442, 443, 444, 446, 448, 449], "gener": [0, 1, 2, 3, 7, 8, 9, 16, 17, 20, 22, 23, 24, 25, 26, 30, 31, 33, 34, 35, 36, 37, 40, 45, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 63, 66, 70, 72, 74, 75, 79, 80, 83, 85, 86, 87, 88, 89, 90, 108, 110, 112, 125, 128, 131, 132, 135, 142, 143, 147, 148, 149, 152, 155, 156, 157, 158, 159, 162, 163, 164, 165, 166, 183, 188, 195, 196, 198, 199, 200, 204, 209, 211, 213, 215, 221, 222, 227, 228, 232, 234, 238, 240, 242, 247, 249, 251, 256, 257, 266, 274, 278, 282, 283, 291, 310, 319, 323, 327, 328, 347, 354, 361, 368, 373, 381, 391, 406, 422, 425, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449], "hook": [0, 2, 32, 39, 41, 44, 56, 63, 66, 67, 68, 69, 70, 73, 76, 78, 79, 80, 108, 122, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 286, 289, 290, 293, 295, 297, 298, 299, 301, 306, 314, 316, 318, 321, 326, 329, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 422], "planner": [0, 255, 281, 422], "torch": [0, 1, 2, 3, 8, 9, 10, 13, 15, 16, 17, 20, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 95, 99, 100, 101, 105, 106, 108, 109, 112, 113, 114, 119, 120, 121, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 176, 182, 183, 184, 185, 187, 188, 189, 190, 192, 195, 196, 198, 199, 200, 201, 202, 203, 204, 209, 211, 212, 215, 217, 219, 221, 222, 224, 226, 227, 228, 229, 231, 232, 233, 234, 235, 237, 240, 241, 242, 244, 246, 248, 249, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 287, 288, 291, 292, 293, 294, 295, 296, 297, 302, 303, 304, 305, 306, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 326, 327, 330, 331, 333, 334, 336, 337, 338, 340, 341, 342, 343, 344, 349, 351, 353, 354, 355, 356, 358, 359, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 390, 397, 404, 405, 416, 422, 424, 426, 429, 430, 431, 432, 433, 435, 436, 437, 439, 441, 442, 443, 444, 445, 446, 448, 449], "vmap": [0, 272, 273, 276, 277, 286, 306, 322, 325, 351, 422, 424], "random": [0, 1, 3, 16, 17, 20, 22, 23, 24, 25, 26, 30, 31, 33, 34, 35, 36, 37, 40, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 67, 72, 74, 75, 83, 86, 87, 88, 89, 90, 107, 119, 125, 128, 131, 135, 142, 143, 149, 155, 156, 159, 160, 164, 165, 166, 171, 184, 199, 201, 214, 215, 234, 241, 257, 271, 272, 274, 276, 278, 319, 322, 323, 330, 334, 351, 354, 401, 410, 422, 424, 429, 430, 431, 433, 434, 435, 437, 444, 445, 446, 448, 449], "sac": [0, 342, 354, 356, 422], "redq": [0, 354, 422], "crossq": [0, 336, 422], "iql": [0, 341, 349, 422, 429, 442, 443], "cql": [0, 334, 340, 422], "gail": [0, 347, 422], "dt": [0, 156, 295, 422, 444], "td3": [0, 358, 359, 422], "bc": [0, 5, 358, 422], "a2c": [0, 333, 422], "dreamer": [0, 177, 178, 269, 344, 345, 346, 422, 424], "checkpoint": [0, 70, 97, 99, 103, 115, 116, 118, 122, 422, 446], "builder": [0, 422, 430, 449], "logger": [0, 3, 11, 386, 388, 390, 391, 392, 393, 394, 395, 400, 406, 416, 420, 422, 430, 442], "_util": [0, 3, 155, 252, 422, 433, 439], "implement_for": [0, 3, 422], "set_auto_unwrap_transformed_env": [0, 12, 241, 422], "auto_unwrap_transformed_env": [0, 396, 422], "thing": [0, 3, 7, 8, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 240, 284, 285, 342, 356, 423, 431, 432, 433, 434, 435, 436, 437, 438, 442, 443, 446, 449], "consid": [0, 1, 2, 3, 8, 15, 16, 17, 18, 20, 21, 23, 25, 26, 32, 36, 37, 39, 44, 49, 56, 63, 66, 67, 70, 73, 75, 78, 79, 80, 99, 101, 113, 114, 121, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 191, 201, 248, 251, 266, 284, 285, 302, 334, 336, 349, 354, 356, 358, 359, 368, 370, 371, 423, 425, 429, 434, 435, 436, 444, 446], "when": [0, 1, 2, 3, 5, 8, 13, 16, 17, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 44, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 67, 68, 69, 70, 73, 74, 75, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 112, 113, 114, 115, 117, 121, 125, 128, 131, 132, 134, 135, 136, 141, 142, 143, 146, 147, 148, 150, 152, 155, 156, 157, 158, 159, 164, 165, 166, 169, 170, 180, 182, 185, 187, 190, 191, 195, 198, 199, 201, 202, 211, 212, 214, 215, 219, 220, 227, 234, 236, 239, 240, 241, 244, 246, 247, 248, 249, 251, 252, 254, 255, 266, 268, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 294, 297, 303, 318, 319, 322, 323, 325, 329, 334, 335, 336, 338, 342, 343, 349, 350, 351, 353, 354, 356, 358, 359, 360, 366, 367, 368, 369, 370, 371, 386, 387, 388, 390, 393, 395, 403, 420, 423, 424, 425, 426, 429, 430, 431, 432, 433, 435, 437, 438, 442, 443, 444, 445, 446, 448, 449], "debug": [0, 6, 8, 51, 72, 85, 236, 423, 449], "work": [0, 1, 2, 3, 4, 8, 32, 39, 44, 56, 66, 67, 70, 73, 78, 99, 106, 111, 113, 114, 117, 124, 125, 128, 131, 134, 135, 136, 139, 142, 143, 155, 156, 159, 161, 164, 165, 166, 179, 182, 184, 185, 187, 188, 190, 191, 192, 195, 196, 200, 203, 204, 205, 207, 210, 211, 218, 219, 220, 221, 222, 224, 227, 228, 231, 232, 233, 234, 235, 236, 238, 239, 240, 244, 245, 247, 248, 249, 251, 252, 258, 259, 279, 316, 321, 326, 335, 350, 353, 406, 423, 424, 429, 430, 431, 432, 434, 437, 441, 442, 443, 444, 445, 446, 448, 449], "habitat": [0, 3, 137, 423, 445], "lab": [0, 3, 129, 130, 137, 423], "mujoco": [0, 6, 8, 161, 423, 429, 431, 432], "error": [0, 1, 3, 7, 10, 30, 31, 32, 35, 39, 40, 44, 45, 46, 47, 48, 52, 53, 54, 55, 56, 60, 61, 62, 64, 66, 67, 71, 73, 74, 78, 85, 99, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 167, 171, 172, 220, 239, 251, 252, 351, 423, 425, 429, 431, 442, 443, 449], "solut": [0, 2, 3, 6, 7, 9, 26, 113, 423, 424, 426, 433, 448], "resourc": [0, 1, 26, 137, 423, 429, 431, 433, 442, 443], "issu": [0, 2, 3, 4, 5, 8, 68, 97, 99, 101, 113, 121, 125, 128, 131, 134, 135, 139, 142, 143, 155, 156, 159, 164, 165, 166, 182, 191, 220, 235, 310, 315, 316, 319, 320, 321, 322, 323, 423, 448], "customis": [0, 423, 430, 438], "video": [0, 4, 9, 388, 390, 393, 395, 401, 420, 422, 423, 439, 442, 443], "render": [0, 3, 8, 141, 169, 386, 388, 401, 423, 429, 430, 431, 433, 434, 438], "index": [0, 3, 7, 8, 10, 20, 30, 31, 33, 34, 35, 36, 37, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 74, 75, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 98, 99, 100, 101, 105, 106, 108, 109, 111, 113, 117, 119, 120, 121, 123, 124, 125, 128, 131, 135, 142, 143, 147, 148, 153, 154, 155, 156, 159, 164, 165, 166, 169, 170, 182, 186, 191, 195, 201, 241, 282, 283, 318, 422, 434, 441, 442, 443, 446, 448], "search": [0, 2, 36, 37, 49, 75, 85, 152, 183, 430], "page": [0, 7, 29, 395, 436], "somewhat": [1, 2, 199, 425, 435, 449], "equival": [1, 3, 26, 30, 31, 32, 35, 36, 39, 40, 44, 45, 46, 47, 48, 52, 53, 54, 55, 56, 60, 61, 62, 63, 64, 66, 67, 70, 71, 73, 78, 79, 80, 84, 85, 95, 125, 126, 127, 128, 131, 134, 135, 136, 137, 140, 141, 142, 143, 150, 151, 153, 154, 155, 156, 159, 161, 164, 165, 166, 167, 168, 188, 200, 203, 234, 236, 241, 251, 268, 276, 279, 297, 315, 316, 320, 321, 353, 403, 437, 448, 449], "dataload": [1, 95, 112, 114, 142, 199, 430, 437, 446], "except": [1, 2, 3, 16, 17, 20, 22, 23, 24, 25, 27, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 66, 67, 71, 73, 74, 75, 78, 83, 85, 86, 87, 88, 89, 90, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 191, 205, 224, 233, 234, 235, 239, 241, 251, 253, 271, 272, 274, 276, 278, 291, 295, 333, 336, 351, 353, 356, 388, 424, 429, 430, 434, 442, 446, 448, 449], "1": [1, 2, 3, 4, 8, 10, 16, 17, 20, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 99, 100, 101, 105, 106, 108, 113, 114, 119, 121, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 140, 141, 142, 143, 146, 147, 148, 149, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 169, 170, 176, 182, 184, 185, 187, 188, 189, 190, 191, 192, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 207, 209, 211, 212, 213, 215, 217, 219, 220, 221, 222, 224, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 244, 246, 248, 251, 252, 253, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 287, 288, 291, 293, 294, 295, 296, 298, 299, 301, 302, 303, 304, 305, 310, 311, 312, 313, 314, 316, 318, 319, 320, 321, 322, 323, 325, 326, 327, 329, 330, 333, 334, 335, 336, 337, 338, 340, 341, 342, 345, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 366, 367, 368, 369, 370, 371, 374, 376, 377, 378, 382, 383, 385, 386, 388, 397, 401, 403, 404, 416, 420, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 435, 436, 437, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449], "thei": [1, 2, 3, 4, 8, 9, 16, 17, 20, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 106, 108, 125, 128, 131, 134, 135, 136, 142, 143, 146, 147, 148, 155, 156, 157, 158, 159, 164, 165, 166, 169, 170, 187, 190, 205, 211, 219, 228, 236, 240, 241, 246, 251, 278, 333, 334, 335, 336, 341, 342, 343, 344, 345, 346, 349, 350, 351, 353, 354, 355, 356, 358, 359, 366, 403, 406, 424, 425, 426, 429, 430, 431, 432, 433, 436, 441, 442, 443, 444, 445, 446, 448, 449], "over": [1, 2, 3, 4, 8, 16, 17, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 66, 67, 70, 73, 74, 75, 78, 79, 80, 81, 83, 84, 86, 87, 88, 89, 90, 94, 106, 108, 112, 113, 114, 125, 128, 131, 135, 142, 143, 147, 148, 155, 156, 159, 164, 165, 166, 182, 184, 199, 201, 215, 227, 235, 251, 291, 294, 303, 306, 325, 343, 345, 351, 374, 386, 409, 424, 426, 429, 430, 431, 433, 434, 435, 436, 437, 442, 443, 444, 449], "non": [1, 2, 3, 8, 16, 17, 20, 22, 23, 24, 25, 26, 30, 32, 33, 34, 36, 37, 39, 44, 45, 46, 47, 48, 49, 50, 56, 58, 59, 62, 63, 64, 66, 67, 71, 73, 74, 75, 78, 83, 85, 86, 87, 88, 89, 90, 100, 102, 125, 128, 131, 135, 142, 143, 155, 156, 157, 158, 159, 164, 165, 166, 182, 188, 189, 191, 195, 199, 206, 219, 231, 234, 240, 241, 242, 243, 244, 246, 251, 257, 272, 274, 276, 278, 284, 322, 323, 333, 334, 336, 337, 338, 340, 341, 342, 343, 344, 345, 349, 351, 353, 354, 355, 356, 358, 359, 366, 368, 369, 370, 371, 424, 429, 432, 433, 442, 443, 444, 446, 449], "static": [1, 39, 66, 72, 78, 84, 106, 113, 114, 137, 156, 248, 252, 349, 434, 444, 446], "like": [1, 2, 3, 4, 7, 11, 26, 32, 36, 37, 39, 44, 49, 51, 56, 58, 63, 66, 67, 70, 73, 75, 78, 79, 80, 84, 102, 108, 114, 125, 128, 131, 132, 135, 137, 142, 143, 146, 155, 156, 157, 158, 159, 164, 165, 166, 171, 191, 199, 203, 234, 237, 251, 272, 276, 285, 317, 323, 333, 335, 350, 353, 354, 355, 424, 425, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 442, 443, 444, 445, 446, 448, 449], "being": [1, 2, 3, 7, 8, 16, 17, 20, 22, 23, 24, 25, 26, 32, 39, 44, 56, 66, 67, 73, 74, 78, 95, 100, 119, 122, 125, 128, 131, 134, 135, 136, 137, 141, 142, 143, 155, 156, 159, 161, 164, 165, 166, 180, 190, 198, 201, 202, 209, 214, 222, 234, 239, 240, 241, 251, 271, 274, 278, 295, 335, 336, 350, 351, 353, 356, 388, 403, 408, 418, 419, 420, 424, 425, 429, 430, 431, 432, 437, 442, 443, 444, 446], "accept": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 32, 39, 44, 45, 46, 47, 48, 56, 62, 64, 66, 67, 70, 71, 73, 78, 85, 86, 95, 125, 128, 131, 135, 142, 143, 149, 155, 156, 159, 164, 165, 166, 186, 191, 195, 206, 209, 219, 227, 231, 234, 239, 240, 241, 242, 243, 244, 246, 251, 279, 306, 322, 323, 324, 336, 356, 388, 426, 431, 433, 434, 438, 446, 448, 449], "two": [1, 2, 3, 4, 8, 10, 32, 39, 44, 51, 52, 53, 54, 55, 56, 63, 66, 67, 70, 72, 73, 78, 79, 80, 85, 108, 112, 113, 114, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 188, 215, 219, 239, 246, 251, 264, 272, 274, 276, 278, 284, 285, 300, 303, 323, 350, 358, 362, 401, 406, 425, 429, 430, 431, 432, 433, 434, 435, 437, 438, 441, 442, 443, 444, 446, 448, 449], "main": [1, 2, 3, 5, 16, 17, 25, 27, 28, 68, 132, 191, 323, 406, 424, 425, 429, 430, 441, 448, 449], "argument": [1, 2, 3, 11, 16, 17, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 95, 97, 99, 100, 101, 105, 106, 108, 111, 112, 113, 114, 117, 119, 121, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 140, 141, 142, 143, 147, 148, 150, 151, 153, 154, 155, 156, 157, 159, 161, 164, 165, 166, 167, 168, 169, 170, 176, 182, 184, 185, 187, 188, 190, 191, 192, 194, 195, 196, 199, 200, 203, 204, 205, 207, 209, 210, 211, 213, 218, 219, 220, 221, 222, 224, 227, 228, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 257, 258, 259, 271, 272, 274, 276, 278, 279, 282, 283, 284, 285, 287, 295, 306, 310, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 326, 327, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 347, 348, 349, 350, 352, 353, 354, 355, 356, 358, 359, 361, 366, 368, 369, 370, 371, 372, 376, 386, 387, 388, 393, 395, 399, 406, 409, 416, 417, 420, 429, 430, 431, 432, 433, 434, 435, 437, 442, 443, 444, 446, 448, 449], "list": [1, 2, 3, 6, 7, 8, 9, 13, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 67, 68, 69, 70, 73, 74, 75, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 92, 100, 102, 108, 111, 112, 113, 114, 115, 117, 125, 128, 129, 130, 131, 134, 135, 136, 137, 142, 143, 147, 148, 149, 152, 153, 154, 155, 156, 157, 158, 159, 161, 164, 165, 166, 167, 168, 169, 170, 172, 182, 189, 190, 194, 198, 199, 200, 202, 211, 212, 215, 217, 219, 227, 229, 237, 238, 239, 240, 241, 243, 244, 246, 248, 249, 251, 257, 258, 259, 261, 267, 270, 274, 278, 279, 282, 283, 289, 297, 316, 318, 320, 321, 323, 325, 326, 327, 334, 336, 349, 351, 354, 356, 358, 359, 365, 368, 371, 386, 387, 401, 403, 418, 419, 425, 429, 431, 434, 435, 436, 437, 441, 442, 444, 445, 446, 448, 449], "constructor": [1, 2, 3, 16, 17, 20, 23, 24, 25, 26, 68, 70, 79, 80, 84, 105, 119, 125, 128, 131, 135, 142, 143, 150, 155, 156, 159, 164, 165, 166, 169, 187, 191, 239, 258, 259, 279, 309, 319, 323, 333, 334, 336, 337, 338, 340, 342, 343, 344, 349, 351, 353, 354, 355, 356, 358, 359, 366, 368, 369, 370, 371, 372, 417, 420, 424, 429, 430, 431, 434, 437, 442, 443, 446, 448], "iter": [1, 2, 3, 17, 20, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 67, 68, 69, 70, 73, 74, 75, 78, 79, 80, 83, 86, 87, 88, 89, 90, 94, 95, 102, 108, 112, 125, 126, 127, 128, 131, 135, 140, 141, 142, 143, 155, 156, 159, 164, 165, 166, 199, 204, 215, 228, 251, 252, 254, 256, 257, 258, 259, 279, 284, 285, 301, 310, 315, 319, 320, 322, 324, 325, 327, 351, 365, 401, 405, 406, 425, 426, 429, 431, 432, 437, 439, 442, 443, 444], "execut": [1, 2, 3, 6, 7, 8, 13, 16, 17, 20, 22, 23, 24, 25, 26, 32, 39, 44, 56, 63, 65, 66, 67, 68, 69, 70, 73, 78, 79, 80, 83, 99, 100, 108, 113, 114, 125, 126, 127, 128, 131, 132, 135, 136, 137, 139, 140, 141, 142, 143, 149, 150, 155, 156, 159, 161, 164, 165, 166, 167, 185, 196, 213, 236, 241, 251, 271, 272, 274, 276, 278, 286, 309, 318, 324, 325, 351, 358, 410, 420, 424, 425, 426, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 442, 443, 446, 447, 448, 449], "queri": [1, 2, 3, 16, 32, 39, 44, 45, 46, 47, 48, 51, 56, 62, 64, 66, 67, 71, 73, 78, 85, 100, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 219, 244, 248, 251, 325, 425, 429, 436, 444, 448], "defin": [1, 2, 3, 14, 19, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 66, 67, 68, 73, 74, 75, 78, 83, 85, 86, 87, 88, 89, 90, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 220, 233, 251, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 284, 286, 289, 290, 293, 294, 295, 298, 299, 301, 306, 314, 316, 318, 321, 326, 329, 330, 338, 340, 351, 368, 369, 370, 371, 372, 387, 417, 424, 429, 430, 432, 436, 439, 444, 446, 449], "number": [1, 2, 3, 8, 16, 17, 18, 20, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 95, 99, 100, 101, 102, 105, 106, 108, 111, 113, 114, 121, 125, 126, 127, 128, 131, 134, 135, 136, 140, 141, 142, 143, 149, 150, 151, 152, 155, 156, 157, 158, 159, 164, 165, 166, 169, 170, 184, 185, 187, 188, 190, 191, 192, 195, 196, 199, 200, 201, 203, 204, 205, 207, 210, 211, 214, 215, 218, 220, 221, 222, 224, 226, 227, 228, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 244, 245, 247, 248, 251, 253, 254, 255, 258, 259, 266, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 284, 285, 289, 290, 295, 296, 298, 299, 302, 303, 304, 305, 310, 314, 318, 319, 322, 323, 327, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 347, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 393, 395, 397, 399, 401, 406, 408, 409, 410, 418, 419, 420, 424, 425, 429, 430, 431, 432, 434, 435, 437, 439, 442, 443, 444, 445, 446, 449], "befor": [1, 2, 3, 4, 6, 7, 10, 13, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 30, 31, 32, 35, 39, 40, 44, 51, 52, 53, 56, 66, 67, 73, 78, 84, 85, 112, 114, 119, 125, 128, 131, 135, 136, 142, 143, 155, 156, 159, 164, 165, 166, 171, 184, 188, 189, 191, 192, 193, 194, 195, 197, 198, 200, 201, 202, 203, 204, 206, 208, 209, 210, 211, 212, 213, 214, 215, 217, 221, 222, 223, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 247, 248, 249, 251, 256, 272, 274, 278, 279, 287, 288, 333, 334, 335, 336, 341, 342, 343, 344, 345, 346, 349, 350, 351, 353, 354, 355, 356, 358, 359, 366, 369, 370, 371, 403, 429, 431, 432, 433, 437, 438, 442, 443, 444, 446, 449], "deliv": [1, 2, 3, 20, 199, 429, 430, 434, 437, 448], "stack": [1, 2, 3, 7, 8, 16, 17, 20, 23, 25, 26, 30, 31, 33, 34, 35, 36, 37, 40, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 68, 69, 70, 71, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 93, 100, 105, 108, 125, 128, 131, 134, 135, 136, 142, 143, 146, 155, 156, 157, 158, 159, 164, 165, 166, 191, 199, 213, 248, 272, 274, 276, 277, 278, 318, 324, 325, 334, 336, 349, 354, 356, 358, 359, 387, 397, 422, 430, 433, 434, 441, 442, 444, 448], "user": [1, 2, 3, 5, 8, 13, 16, 17, 20, 22, 23, 24, 25, 26, 28, 32, 39, 44, 51, 56, 66, 67, 73, 78, 85, 106, 114, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 167, 171, 192, 209, 233, 239, 241, 251, 265, 336, 353, 356, 358, 388, 417, 425, 426, 429, 430, 434, 436, 437, 444, 448, 449], "reach": [1, 3, 16, 17, 20, 22, 23, 24, 25, 26, 27, 72, 112, 125, 128, 131, 135, 141, 142, 143, 147, 148, 155, 156, 159, 164, 165, 166, 169, 170, 213, 232, 253, 271, 295, 429, 431, 439, 442, 443, 448, 449], "done": [1, 2, 3, 4, 7, 8, 16, 17, 20, 22, 27, 28, 30, 31, 33, 34, 35, 36, 37, 39, 40, 41, 43, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 72, 74, 75, 76, 78, 83, 85, 86, 87, 88, 89, 90, 96, 97, 104, 106, 108, 113, 114, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 182, 183, 184, 185, 187, 188, 191, 198, 199, 200, 202, 203, 204, 209, 213, 214, 215, 217, 221, 222, 224, 226, 228, 231, 232, 234, 235, 238, 239, 240, 241, 242, 248, 251, 255, 272, 274, 278, 281, 303, 318, 333, 334, 335, 336, 337, 338, 340, 341, 342, 349, 350, 353, 354, 355, 356, 358, 359, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 424, 425, 429, 431, 432, 433, 434, 436, 437, 439, 441, 442, 443, 444, 446, 448, 449], "state": [1, 2, 3, 4, 16, 17, 20, 22, 32, 39, 41, 44, 51, 56, 63, 66, 67, 68, 69, 70, 72, 73, 76, 78, 79, 80, 85, 96, 97, 104, 108, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 140, 141, 142, 143, 149, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 171, 182, 183, 187, 190, 191, 192, 194, 195, 196, 199, 200, 203, 206, 209, 213, 215, 222, 232, 233, 238, 239, 240, 241, 242, 243, 248, 249, 251, 255, 260, 265, 269, 272, 273, 274, 276, 277, 278, 279, 281, 286, 289, 293, 296, 298, 299, 305, 311, 318, 322, 328, 333, 335, 336, 340, 342, 350, 351, 353, 354, 355, 356, 366, 367, 368, 369, 370, 371, 372, 406, 420, 424, 425, 429, 430, 431, 432, 433, 434, 435, 436, 437, 442, 443, 444, 449], "after": [1, 2, 3, 8, 16, 17, 22, 23, 25, 26, 32, 39, 41, 44, 45, 46, 47, 48, 56, 62, 64, 66, 67, 71, 72, 73, 78, 85, 101, 108, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 139, 140, 141, 142, 143, 150, 151, 153, 154, 155, 156, 159, 161, 164, 165, 166, 167, 168, 182, 184, 185, 187, 188, 189, 191, 192, 193, 194, 195, 197, 198, 200, 201, 203, 204, 206, 208, 209, 210, 211, 212, 213, 214, 215, 217, 221, 222, 223, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 251, 253, 254, 271, 272, 274, 278, 287, 315, 320, 336, 345, 356, 358, 430, 431, 432, 433, 434, 435, 437, 439, 442, 443, 444, 445, 446, 449], "predefin": [1, 388, 430, 432, 437, 446, 448], "becaus": [1, 2, 3, 4, 7, 32, 39, 44, 45, 46, 47, 48, 56, 62, 64, 66, 67, 71, 72, 73, 78, 85, 100, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 203, 211, 232, 247, 251, 264, 285, 310, 315, 316, 318, 319, 320, 321, 322, 323, 333, 353, 424, 429, 430, 432, 433, 435, 436, 437, 441, 442, 443, 444, 446, 449], "potenti": [1, 2, 30, 31, 33, 34, 35, 36, 37, 40, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 444, 446], "comput": [1, 3, 4, 8, 16, 18, 20, 26, 32, 35, 39, 44, 56, 66, 67, 72, 73, 78, 125, 126, 127, 128, 131, 135, 140, 141, 142, 143, 155, 156, 159, 164, 165, 166, 183, 215, 229, 241, 245, 251, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 289, 290, 291, 293, 295, 298, 299, 301, 303, 304, 306, 311, 314, 316, 318, 319, 321, 323, 326, 329, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 362, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 410, 425, 429, 431, 432, 433, 434, 435, 441, 442, 443, 445, 446], "heavi": [1, 8, 446], "crucial": [1, 2, 3, 253, 271, 295, 341, 349, 351, 429, 430, 431, 432, 434, 436, 438, 442, 443, 444, 448, 449], "configur": [1, 8, 13, 16, 17, 20, 22, 23, 24, 25, 26, 27, 72, 128, 211, 260, 265, 293, 351, 353, 424, 429, 430, 431, 436, 442, 443, 444], "hyperparamet": [1, 111, 251, 333, 334, 336, 337, 338, 340, 341, 342, 343, 344, 349, 351, 353, 354, 355, 356, 358, 359, 366, 429, 438, 444, 446], "appropri": [1, 3, 4, 7, 98, 109, 119, 120, 123, 124, 143, 155, 164, 203, 417, 420, 429, 438, 446], "paramet": [1, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 99, 100, 101, 102, 105, 106, 107, 108, 109, 111, 112, 115, 117, 119, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 140, 141, 142, 143, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 172, 175, 176, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 416, 417, 418, 419, 420, 424, 425, 429, 432, 433, 435, 439, 442, 443, 444, 445, 448], "take": [1, 2, 3, 8, 28, 32, 39, 44, 51, 66, 67, 72, 73, 78, 116, 122, 125, 126, 127, 128, 131, 135, 140, 141, 142, 143, 155, 156, 159, 164, 165, 166, 194, 232, 235, 236, 240, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 284, 286, 289, 290, 293, 295, 298, 299, 301, 306, 314, 316, 317, 318, 319, 321, 323, 326, 329, 332, 353, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 388, 397, 408, 424, 426, 429, 430, 431, 433, 434, 435, 436, 442, 443, 444, 446, 449], "whether": [1, 2, 3, 14, 16, 17, 18, 20, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 78, 79, 80, 81, 83, 85, 86, 87, 88, 89, 90, 99, 101, 108, 109, 121, 125, 128, 131, 135, 141, 142, 143, 147, 148, 149, 155, 156, 157, 158, 159, 164, 165, 166, 169, 170, 183, 187, 196, 198, 199, 202, 233, 239, 241, 248, 249, 251, 258, 259, 274, 278, 279, 318, 323, 327, 333, 334, 335, 336, 337, 338, 340, 342, 343, 347, 350, 351, 353, 354, 355, 356, 358, 359, 366, 368, 371, 396, 420, 429, 430, 431, 433, 434, 442, 443, 444, 448, 449], "should": [1, 2, 3, 4, 5, 7, 8, 11, 13, 16, 17, 19, 20, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 99, 102, 106, 108, 113, 114, 115, 119, 122, 125, 128, 129, 130, 131, 134, 135, 136, 137, 141, 142, 143, 146, 149, 155, 156, 157, 158, 159, 164, 165, 166, 169, 170, 171, 182, 183, 184, 187, 188, 191, 194, 195, 198, 200, 203, 204, 206, 211, 212, 213, 215, 220, 221, 222, 224, 227, 228, 232, 233, 235, 238, 240, 241, 242, 247, 248, 249, 251, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 284, 285, 286, 289, 290, 293, 295, 298, 299, 301, 306, 314, 316, 318, 319, 321, 322, 323, 326, 329, 333, 335, 336, 342, 348, 350, 351, 353, 354, 355, 356, 357, 358, 367, 368, 369, 370, 371, 372, 388, 390, 396, 401, 402, 403, 406, 416, 418, 419, 420, 424, 425, 426, 429, 430, 431, 432, 433, 435, 437, 438, 441, 442, 443, 444, 445, 446, 448, 449], "occur": [1, 8, 17, 39, 66, 74, 75, 78, 85, 125, 128, 131, 135, 137, 142, 143, 155, 156, 159, 164, 165, 166, 183, 192, 204, 215, 220, 247, 254, 310, 315, 316, 319, 320, 321, 322, 323, 345, 433, 446, 449], "serial": [1, 2, 3, 16, 17, 20, 22, 23, 24, 25, 26, 32, 39, 44, 56, 63, 66, 67, 68, 69, 70, 73, 76, 78, 79, 80, 108, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 239, 248, 249, 251], "parallel": [1, 3, 8, 125, 128, 131, 134, 135, 136, 142, 143, 155, 156, 157, 158, 159, 164, 165, 166, 171, 241, 247, 274, 278, 333, 417, 418, 419, 420, 430, 431, 442, 443, 448], "syncdatacollector": [1, 2, 3, 16, 17, 21, 22, 23, 24, 25, 26, 41, 56, 76, 188, 191, 224, 256, 274, 278, 416, 419, 422, 429, 430, 431, 432, 433, 437, 439, 442, 443, 446], "worker": [1, 2, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 45, 46, 47, 48, 62, 64, 71, 83, 84, 85, 95, 132, 150, 155, 164, 239, 248, 418, 419, 420, 429, 430, 431, 448, 449], "multisyncdatacollector": [1, 17, 23, 24, 25, 26, 256, 419, 422, 431, 437, 448], "split": [1, 16, 17, 20, 22, 23, 24, 25, 26, 36, 37, 43, 49, 62, 64, 75, 84, 95, 106, 113, 114, 146, 157, 158, 272, 276, 333, 334, 335, 341, 342, 343, 344, 345, 346, 349, 350, 351, 353, 354, 355, 356, 359, 366, 424, 426, 431, 435, 446, 448], "workload": 1, "across": [1, 3, 8, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 58, 63, 67, 70, 73, 79, 80, 106, 113, 114, 126, 127, 129, 130, 134, 136, 137, 139, 140, 141, 150, 151, 155, 161, 166, 239, 248, 249, 251, 274, 278, 284, 294, 295, 351, 408, 422, 424, 425, 429, 434, 438, 442, 443, 444], "aggreg": [1, 3, 32, 66, 106, 119, 157, 158, 183, 212, 258, 259, 261, 262, 325, 425, 443], "result": [1, 2, 3, 7, 16, 17, 20, 22, 23, 24, 25, 26, 28, 32, 33, 39, 44, 45, 46, 47, 48, 56, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 78, 79, 80, 85, 86, 106, 108, 112, 113, 114, 125, 128, 131, 132, 135, 142, 143, 155, 156, 159, 164, 165, 166, 171, 182, 183, 184, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 203, 204, 206, 208, 209, 210, 211, 212, 213, 214, 215, 217, 221, 222, 223, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 251, 253, 256, 271, 272, 274, 276, 278, 279, 284, 297, 303, 314, 316, 321, 333, 334, 336, 337, 338, 340, 342, 343, 344, 349, 351, 353, 354, 355, 356, 358, 359, 366, 368, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 387, 408, 425, 430, 432, 434, 435, 438, 439, 444, 445, 448, 449], "final": [1, 2, 3, 4, 26, 45, 46, 47, 48, 51, 62, 64, 71, 72, 85, 234, 247, 253, 271, 272, 274, 276, 278, 284, 295, 317, 324, 368, 401, 424, 429, 430, 431, 433, 438, 439, 442, 443, 444, 449], "multiasyncdatacollector": [1, 16, 22, 23, 24, 25, 26, 256, 418, 422, 429, 430, 431, 437, 448], "sever": [1, 2, 3, 8, 32, 39, 44, 52, 56, 66, 67, 73, 78, 84, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 192, 194, 212, 241, 251, 353, 429, 431, 433, 438, 439, 446, 449], "gather": [1, 3, 23, 25, 26, 51, 84, 95, 99, 101, 106, 113, 121, 213, 220, 283, 286, 291, 351, 367, 410, 423, 430, 431, 432, 437, 442, 443, 444, 446, 448, 449], "continu": [1, 2, 3, 9, 33, 36, 45, 51, 86, 87, 88, 114, 125, 128, 131, 135, 142, 143, 155, 156, 157, 158, 159, 164, 165, 166, 169, 170, 176, 184, 209, 234, 242, 261, 262, 263, 264, 294, 295, 325, 330, 334, 357, 368, 373, 381, 424, 429, 431, 435, 442, 443, 446], "concomitantli": [1, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "network": [1, 4, 8, 32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 146, 155, 156, 157, 158, 159, 164, 165, 166, 251, 258, 259, 261, 262, 263, 264, 267, 269, 270, 276, 279, 284, 285, 286, 288, 289, 290, 292, 294, 296, 298, 299, 300, 305, 311, 312, 313, 314, 322, 326, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 348, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 364, 366, 368, 369, 370, 371, 372, 415, 416, 424, 425, 426, 433, 436, 439, 441, 444, 449], "impli": [1, 85, 449], "mai": [1, 2, 3, 4, 5, 7, 8, 16, 17, 20, 22, 23, 24, 25, 26, 28, 32, 39, 44, 45, 46, 47, 48, 56, 62, 64, 66, 67, 71, 73, 74, 75, 78, 83, 85, 97, 100, 106, 113, 125, 128, 131, 134, 135, 136, 137, 142, 143, 155, 156, 159, 161, 164, 165, 166, 171, 199, 211, 215, 228, 239, 241, 243, 248, 249, 251, 254, 274, 278, 279, 284, 323, 335, 342, 350, 353, 356, 424, 425, 426, 429, 430, 431, 432, 433, 434, 435, 436, 437, 442, 443, 444, 445, 446, 449], "slightli": [1, 28, 425, 432, 433, 442, 444, 445, 446, 449], "lag": [1, 429, 430, 431], "therefor": [1, 2, 3, 7, 63, 70, 79, 80, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 224, 353, 366, 433, 436, 442, 449], "fastest": 1, "price": [1, 2], "suitabl": [1, 2, 191], "where": [1, 2, 3, 4, 7, 8, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 30, 32, 39, 41, 43, 44, 45, 46, 47, 48, 51, 56, 57, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 95, 97, 99, 101, 106, 108, 113, 114, 119, 121, 122, 125, 128, 131, 135, 142, 143, 146, 149, 152, 155, 156, 157, 158, 159, 164, 165, 166, 179, 182, 183, 184, 185, 188, 191, 199, 203, 211, 219, 224, 227, 232, 233, 234, 235, 236, 240, 241, 243, 246, 247, 251, 253, 271, 272, 273, 274, 276, 277, 278, 282, 283, 284, 292, 294, 295, 314, 319, 322, 323, 332, 333, 334, 335, 336, 341, 342, 343, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 367, 368, 369, 370, 371, 372, 373, 374, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 425, 426, 429, 430, 431, 433, 434, 441, 442, 443, 444, 446, 449], "asynchron": [1, 3, 9, 17, 26, 32, 39, 44, 45, 46, 47, 48, 56, 62, 64, 66, 67, 71, 73, 78, 85, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 195, 219, 234, 240, 241, 244, 246, 251, 322, 333, 418, 429, 430, 431], "off": [1, 2, 4, 275, 304, 315, 356, 386, 401, 411, 424, 426, 429, 430, 431, 435, 436, 442, 443, 445, 448, 449], "curriculum": [1, 4], "For": [1, 2, 3, 4, 7, 8, 9, 10, 11, 16, 17, 20, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 39, 40, 44, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 67, 68, 69, 70, 73, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 99, 101, 106, 108, 113, 121, 125, 128, 131, 134, 135, 136, 141, 142, 143, 155, 156, 157, 158, 159, 164, 165, 166, 167, 169, 171, 191, 198, 202, 206, 215, 233, 240, 241, 247, 251, 268, 272, 274, 276, 278, 282, 285, 287, 311, 313, 314, 316, 320, 333, 341, 343, 349, 353, 401, 424, 425, 426, 429, 430, 431, 432, 434, 435, 437, 438, 442, 443, 444, 445, 446, 449], "rollout": [1, 2, 3, 11, 16, 17, 20, 22, 26, 28, 51, 72, 78, 85, 119, 125, 126, 127, 128, 131, 135, 137, 138, 140, 141, 142, 143, 147, 148, 149, 150, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 169, 170, 171, 184, 185, 187, 188, 191, 194, 196, 198, 199, 202, 203, 204, 209, 211, 212, 217, 221, 222, 227, 228, 229, 232, 233, 235, 236, 239, 242, 248, 251, 255, 256, 257, 274, 278, 281, 295, 318, 333, 386, 388, 410, 424, 429, 431, 432, 435, 436, 437, 438, 439, 445, 446, 448], "necessari": [1, 4, 6, 8, 16, 17, 20, 22, 23, 24, 25, 26, 125, 128, 131, 135, 142, 143, 147, 148, 155, 156, 159, 164, 165, 166, 169, 170, 199, 228, 354, 368, 369, 370, 371, 372, 425, 429, 431, 435, 436, 437], "synchronis": [1, 132, 442, 443], "either": [1, 2, 5, 27, 30, 32, 39, 44, 56, 63, 66, 67, 68, 69, 70, 72, 73, 78, 79, 80, 85, 95, 108, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 209, 213, 232, 233, 249, 251, 328, 351, 358, 359, 392, 426, 429, 430, 432, 442, 445, 446, 448, 449], "update_policy_weights_": [1, 13, 14, 16, 17, 19, 20, 22, 23, 24, 25, 26, 429, 443, 448], "update_at_each_batch": [1, 16, 17, 22], "true": [1, 2, 3, 4, 8, 11, 12, 16, 17, 20, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 99, 100, 101, 105, 106, 108, 109, 111, 112, 113, 114, 121, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 140, 141, 142, 143, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 176, 182, 183, 184, 185, 187, 188, 190, 191, 192, 195, 196, 199, 201, 204, 206, 209, 210, 211, 212, 213, 214, 215, 219, 220, 222, 223, 226, 227, 228, 231, 232, 234, 237, 238, 239, 240, 241, 242, 243, 244, 246, 248, 249, 251, 252, 253, 254, 255, 258, 259, 261, 262, 263, 264, 270, 272, 273, 274, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 287, 288, 294, 295, 302, 303, 304, 309, 310, 311, 312, 313, 315, 316, 319, 320, 321, 322, 323, 324, 325, 326, 333, 334, 335, 336, 337, 338, 340, 341, 342, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 362, 368, 369, 370, 371, 374, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 395, 396, 399, 400, 401, 403, 406, 420, 424, 425, 426, 429, 430, 431, 432, 433, 435, 438, 439, 441, 442, 443, 444, 445, 446, 448, 449], "second": [1, 2, 3, 8, 28, 51, 52, 53, 54, 55, 119, 155, 188, 236, 272, 274, 276, 278, 316, 335, 350, 353, 356, 388, 390, 393, 395, 405, 429, 431, 437, 442, 443, 444, 446, 448, 449], "devic": [1, 2, 3, 7, 8, 13, 15, 16, 17, 20, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 95, 99, 100, 101, 105, 113, 114, 121, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 176, 179, 182, 184, 188, 195, 198, 199, 200, 202, 203, 204, 209, 211, 212, 217, 218, 219, 221, 222, 224, 228, 231, 232, 234, 237, 240, 241, 242, 244, 246, 248, 251, 253, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 270, 271, 272, 273, 274, 276, 277, 278, 279, 281, 284, 285, 287, 288, 293, 295, 296, 297, 305, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 325, 327, 330, 333, 334, 336, 337, 338, 340, 341, 342, 349, 353, 354, 355, 356, 358, 359, 366, 368, 369, 370, 371, 372, 386, 403, 408, 414, 424, 429, 430, 431, 432, 433, 442, 443, 444, 445, 448], "oper": [1, 2, 3, 4, 7, 8, 16, 17, 20, 22, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 66, 67, 71, 73, 74, 75, 78, 83, 84, 85, 86, 87, 88, 89, 90, 100, 106, 113, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 188, 206, 211, 236, 238, 242, 249, 251, 267, 268, 273, 277, 311, 312, 313, 315, 316, 317, 322, 328, 333, 335, 337, 338, 343, 350, 353, 355, 366, 367, 368, 369, 370, 371, 406, 422, 425, 426, 429, 430, 431, 432, 433, 434, 435, 441, 442, 443, 444, 449], "instanc": [1, 2, 3, 4, 7, 8, 12, 16, 17, 20, 22, 23, 24, 25, 26, 32, 33, 39, 44, 45, 46, 47, 48, 56, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 78, 79, 80, 81, 83, 84, 85, 86, 96, 97, 99, 100, 101, 104, 106, 108, 113, 114, 121, 125, 128, 130, 131, 132, 134, 135, 136, 142, 143, 149, 155, 156, 159, 164, 165, 166, 171, 176, 183, 215, 234, 241, 248, 251, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 284, 285, 286, 289, 290, 293, 295, 298, 299, 301, 306, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 329, 334, 336, 338, 341, 342, 349, 351, 354, 356, 358, 359, 366, 368, 369, 370, 371, 386, 388, 392, 396, 401, 410, 411, 412, 416, 418, 419, 424, 425, 426, 429, 431, 432, 433, 434, 435, 444, 446, 449], "cpu": [1, 2, 3, 8, 10, 16, 17, 20, 22, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 95, 99, 100, 101, 105, 108, 113, 121, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 169, 170, 176, 182, 184, 188, 195, 198, 199, 200, 202, 203, 204, 209, 212, 217, 219, 221, 222, 224, 228, 231, 232, 234, 240, 241, 242, 244, 246, 251, 255, 257, 267, 272, 273, 274, 276, 277, 278, 281, 287, 288, 295, 296, 297, 305, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 325, 327, 330, 333, 334, 336, 337, 338, 340, 341, 342, 349, 353, 354, 355, 356, 358, 359, 366, 386, 424, 429, 430, 431, 432, 442, 443, 444, 445, 448], "slower": [1, 442], "than": [1, 2, 3, 4, 8, 16, 17, 20, 22, 23, 24, 25, 26, 29, 30, 32, 66, 85, 106, 113, 114, 117, 119, 125, 128, 131, 135, 139, 142, 143, 153, 154, 155, 156, 159, 161, 164, 165, 166, 199, 212, 213, 222, 253, 264, 274, 276, 278, 279, 306, 310, 315, 322, 323, 327, 351, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 423, 424, 425, 429, 430, 431, 433, 434, 436, 442, 443, 444, 446, 448, 449], "one": [1, 2, 3, 4, 5, 7, 8, 16, 17, 20, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 96, 97, 98, 99, 104, 105, 106, 108, 109, 113, 114, 115, 117, 119, 120, 123, 124, 125, 126, 127, 128, 131, 132, 134, 135, 136, 137, 139, 140, 141, 142, 143, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 164, 165, 166, 167, 168, 169, 170, 184, 185, 188, 191, 194, 196, 198, 200, 201, 202, 209, 212, 214, 215, 219, 224, 227, 230, 231, 233, 234, 235, 240, 241, 243, 246, 248, 251, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 285, 286, 289, 290, 291, 292, 293, 295, 297, 298, 299, 301, 306, 310, 314, 315, 316, 318, 319, 320, 321, 322, 323, 326, 327, 329, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 363, 366, 368, 369, 370, 371, 375, 376, 388, 390, 399, 401, 402, 406, 410, 420, 423, 425, 426, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 441, 442, 443, 444, 445, 446, 449], "cuda": [1, 2, 3, 7, 16, 17, 20, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 66, 67, 73, 74, 75, 78, 83, 86, 87, 88, 89, 90, 125, 126, 127, 128, 131, 135, 137, 138, 139, 142, 143, 155, 156, 159, 164, 165, 166, 195, 211, 218, 219, 234, 240, 241, 244, 246, 251, 272, 273, 276, 277, 322, 398, 429, 430, 431, 432, 442, 443, 445, 449], "multipl": [1, 2, 3, 5, 8, 15, 16, 17, 20, 22, 23, 24, 25, 26, 54, 66, 70, 79, 80, 81, 85, 101, 108, 109, 121, 125, 126, 127, 140, 141, 142, 155, 164, 166, 192, 194, 199, 201, 210, 213, 214, 224, 227, 231, 232, 239, 248, 272, 276, 278, 284, 287, 288, 310, 315, 319, 320, 322, 323, 326, 335, 342, 350, 353, 363, 374, 420, 424, 425, 426, 429, 430, 431, 434, 436, 437, 442, 443, 444, 446, 448], "infer": [1, 3, 14, 15, 16, 17, 18, 19, 20, 23, 25, 26, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 191, 248, 274, 278, 287, 314, 319, 323, 340, 386, 429, 431, 433, 437, 439, 446, 448], "run": [1, 2, 3, 4, 5, 6, 7, 8, 10, 15, 16, 17, 20, 22, 26, 32, 39, 44, 56, 66, 67, 68, 73, 78, 106, 113, 114, 125, 126, 127, 128, 129, 130, 131, 134, 135, 140, 141, 142, 143, 149, 150, 151, 155, 156, 159, 164, 165, 166, 171, 195, 209, 214, 215, 231, 239, 240, 241, 248, 251, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 286, 289, 290, 293, 295, 298, 299, 301, 306, 314, 316, 318, 321, 323, 324, 325, 326, 329, 336, 342, 356, 388, 395, 401, 418, 419, 420, 423, 424, 425, 426, 429, 430, 431, 432, 435, 436, 437, 438, 439, 442, 443, 444, 448], "dispatch": [1, 3, 23, 24, 25, 26, 39, 66, 78, 184, 185, 187, 188, 190, 191, 192, 195, 196, 200, 203, 204, 205, 207, 210, 211, 218, 220, 221, 222, 224, 227, 228, 231, 232, 233, 234, 235, 236, 238, 239, 240, 244, 245, 247, 248, 251, 306, 318, 388, 429, 449], "avail": [1, 2, 3, 4, 6, 13, 16, 17, 20, 22, 23, 24, 25, 26, 63, 70, 79, 80, 106, 112, 113, 114, 126, 127, 129, 130, 139, 140, 141, 147, 148, 153, 154, 155, 157, 158, 161, 167, 168, 169, 170, 184, 187, 190, 209, 211, 268, 297, 319, 323, 351, 388, 418, 419, 429, 430, 431, 432, 433, 434, 435, 442, 443, 444, 446, 449], "speed": [1, 2, 3, 4, 8, 35, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 425, 429, 430, 431, 432, 442, 443, 444, 446, 448], "avoid": [1, 2, 3, 32, 39, 44, 56, 66, 67, 73, 78, 99, 101, 113, 121, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 181, 191, 209, 239, 241, 248, 249, 251, 254, 303, 310, 322, 327, 335, 336, 350, 353, 356, 409, 431, 433, 443], "oom": [1, 3, 45, 46, 47, 48, 62, 64, 71, 85, 99, 101, 121], "choic": [1, 2, 58, 155, 199, 424, 425, 429, 430, 436, 442, 443], "pass": [1, 2, 3, 4, 16, 17, 20, 22, 23, 24, 25, 26, 27, 30, 32, 36, 37, 39, 44, 49, 56, 58, 63, 66, 67, 68, 70, 72, 73, 75, 78, 79, 80, 83, 84, 97, 99, 101, 106, 108, 113, 114, 119, 121, 125, 128, 131, 132, 133, 135, 136, 142, 143, 146, 150, 155, 156, 157, 158, 159, 164, 165, 166, 169, 187, 188, 191, 196, 198, 199, 202, 212, 213, 222, 239, 243, 248, 251, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 284, 285, 286, 287, 289, 290, 293, 295, 296, 298, 299, 301, 305, 306, 310, 314, 315, 316, 318, 319, 320, 321, 322, 323, 325, 326, 327, 329, 334, 335, 336, 349, 350, 351, 353, 354, 356, 358, 359, 368, 369, 370, 371, 372, 386, 403, 406, 418, 419, 420, 424, 429, 430, 431, 432, 433, 434, 435, 436, 437, 441, 442, 443, 444, 446, 448, 449], "ie": [1, 2, 3, 23, 25, 27, 30, 31, 33, 34, 35, 36, 37, 39, 40, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 74, 75, 78, 79, 83, 84, 86, 87, 88, 89, 90, 105, 114, 125, 128, 131, 135, 139, 142, 143, 152, 155, 156, 159, 164, 165, 166, 183, 184, 191, 206, 231, 234, 243, 248, 274, 278, 314, 322, 424, 425, 430, 443], "store": [1, 3, 8, 16, 17, 18, 20, 22, 23, 24, 25, 26, 32, 36, 39, 42, 43, 44, 45, 46, 47, 48, 51, 56, 58, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 78, 79, 80, 81, 84, 85, 95, 97, 99, 100, 101, 102, 105, 106, 108, 113, 119, 121, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 191, 199, 209, 236, 247, 248, 249, 251, 253, 255, 256, 281, 295, 333, 334, 336, 337, 338, 340, 342, 343, 344, 349, 351, 353, 354, 355, 356, 358, 359, 366, 395, 422, 426, 429, 431, 432, 435, 437, 439, 442, 443, 445, 449], "while": [1, 2, 3, 7, 8, 28, 32, 39, 44, 56, 66, 67, 68, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 224, 251, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 286, 289, 290, 293, 295, 298, 299, 301, 306, 314, 316, 318, 321, 326, 329, 341, 349, 350, 353, 424, 425, 429, 431, 432, 435, 437, 438, 442, 443, 444, 445, 446, 448], "wait": [1, 24, 26, 27, 68, 167, 432, 444], "also": [1, 2, 3, 8, 9, 11, 16, 17, 28, 30, 31, 32, 35, 39, 40, 44, 45, 46, 47, 48, 52, 53, 54, 55, 56, 60, 61, 62, 64, 66, 67, 70, 71, 73, 78, 79, 80, 83, 85, 95, 99, 100, 101, 106, 108, 113, 114, 119, 121, 125, 128, 131, 135, 141, 142, 143, 147, 148, 155, 156, 157, 158, 159, 164, 165, 166, 169, 170, 179, 181, 182, 184, 185, 187, 188, 190, 191, 192, 195, 196, 200, 201, 203, 204, 205, 207, 209, 210, 211, 215, 218, 220, 221, 222, 224, 227, 228, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 244, 245, 247, 248, 251, 252, 258, 259, 272, 276, 279, 299, 318, 319, 324, 325, 326, 333, 334, 336, 337, 338, 340, 341, 342, 347, 349, 353, 356, 358, 368, 375, 376, 386, 388, 424, 425, 426, 429, 430, 431, 432, 433, 434, 435, 436, 437, 441, 442, 443, 444, 446, 448, 449], "impact": [1, 2, 3, 141, 198, 202, 254, 333, 335, 350, 353, 355, 430, 432, 442, 443], "memori": [1, 3, 8, 26, 32, 35, 39, 44, 45, 46, 47, 48, 56, 62, 64, 66, 67, 68, 71, 73, 78, 84, 85, 97, 99, 100, 104, 125, 128, 131, 132, 135, 139, 142, 143, 155, 156, 159, 164, 165, 166, 191, 195, 219, 234, 240, 241, 244, 246, 248, 251, 266, 276, 277, 322, 420, 422, 426, 429, 430, 432, 442, 446, 448], "manag": [1, 3, 8, 18, 26, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 256, 274, 278, 309, 364, 365, 368, 369, 370, 371, 396, 401, 424, 432, 433, 436, 448], "kei": [1, 2, 7, 16, 17, 20, 22, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 105, 106, 108, 111, 113, 114, 119, 125, 128, 131, 135, 140, 141, 142, 143, 155, 156, 157, 158, 159, 164, 165, 166, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 215, 218, 219, 220, 221, 222, 224, 227, 228, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 251, 253, 255, 257, 267, 268, 271, 274, 278, 280, 281, 295, 297, 310, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 353, 354, 355, 356, 358, 359, 366, 367, 368, 369, 370, 371, 372, 386, 388, 400, 401, 402, 404, 405, 406, 410, 425, 426, 429, 431, 432, 433, 434, 436, 441, 442, 443, 444, 446, 448, 449], "control": [1, 3, 5, 8, 20, 28, 29, 36, 37, 38, 49, 70, 75, 79, 80, 106, 108, 113, 125, 128, 129, 130, 131, 135, 141, 142, 143, 146, 155, 156, 157, 158, 159, 164, 165, 166, 182, 201, 261, 262, 263, 264, 274, 278, 280, 281, 295, 299, 306, 322, 323, 324, 333, 335, 336, 350, 351, 353, 357, 368, 373, 381, 386, 396, 424, 426, 429, 430, 431, 432, 433, 434, 435, 436, 442, 443, 444, 446, 448], "which": [1, 2, 3, 4, 7, 8, 13, 15, 16, 17, 20, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 100, 108, 111, 112, 119, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 139, 140, 141, 142, 143, 147, 148, 150, 151, 153, 154, 155, 156, 159, 161, 164, 165, 166, 167, 168, 169, 170, 171, 191, 192, 198, 202, 207, 209, 211, 212, 214, 215, 219, 220, 222, 232, 234, 235, 238, 240, 241, 242, 244, 248, 251, 252, 267, 272, 273, 274, 275, 276, 277, 278, 282, 283, 284, 285, 286, 292, 294, 304, 311, 312, 313, 314, 318, 319, 322, 323, 324, 325, 333, 334, 335, 336, 338, 341, 342, 343, 344, 345, 346, 349, 350, 351, 353, 354, 355, 356, 358, 359, 362, 366, 368, 369, 370, 371, 386, 388, 397, 402, 424, 425, 426, 429, 430, 431, 432, 433, 434, 435, 436, 437, 441, 442, 443, 444, 445, 446, 449], "storing_devic": [1, 16, 17, 20, 22, 23, 24, 25, 26, 430, 443], "dure": [1, 2, 3, 13, 16, 17, 20, 22, 23, 24, 25, 26, 30, 31, 35, 40, 52, 53, 54, 55, 60, 61, 63, 64, 67, 68, 69, 70, 72, 73, 79, 80, 84, 95, 97, 102, 106, 108, 111, 113, 125, 128, 131, 132, 135, 141, 142, 143, 155, 156, 157, 158, 159, 164, 165, 166, 187, 188, 191, 194, 198, 199, 202, 204, 206, 207, 209, 213, 217, 229, 231, 234, 236, 238, 239, 241, 242, 243, 248, 249, 251, 254, 256, 257, 274, 278, 285, 318, 368, 370, 371, 401, 406, 425, 429, 430, 431, 432, 435, 436, 437, 439, 442, 443, 444, 446, 449], "heurist": [1, 4, 30, 31, 33, 34, 35, 36, 37, 40, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 253, 318, 323, 429, 433, 437, 449], "usual": [1, 2, 3, 4, 6, 7, 8, 16, 17, 20, 22, 23, 24, 25, 26, 111, 119, 125, 126, 127, 128, 131, 135, 140, 141, 142, 143, 155, 156, 159, 164, 165, 166, 239, 288, 353, 358, 367, 368, 369, 370, 371, 372, 387, 423, 424, 425, 426, 429, 430, 431, 432, 435, 437, 438, 443, 446, 449], "same": [1, 2, 3, 4, 20, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 66, 67, 71, 73, 74, 75, 78, 81, 83, 84, 85, 86, 87, 88, 89, 90, 112, 113, 114, 117, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 140, 141, 142, 143, 146, 150, 151, 155, 156, 157, 158, 159, 161, 164, 165, 166, 184, 191, 198, 199, 201, 202, 207, 209, 212, 213, 214, 215, 231, 239, 240, 241, 248, 251, 252, 258, 259, 273, 274, 277, 278, 279, 282, 283, 284, 285, 295, 303, 314, 326, 334, 336, 349, 351, 354, 356, 358, 359, 363, 425, 429, 430, 431, 434, 435, 437, 441, 442, 443, 445, 446, 449], "behavior": [1, 2, 3, 4, 16, 17, 26, 32, 39, 44, 56, 66, 67, 73, 78, 83, 85, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 182, 192, 198, 202, 215, 220, 233, 241, 249, 251, 254, 274, 275, 278, 304, 341, 349, 358, 386, 396, 401, 424, 430, 432, 442, 443, 444, 446], "besid": 1, "those": [1, 2, 3, 5, 7, 30, 31, 33, 34, 35, 36, 37, 40, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 191, 198, 202, 209, 215, 234, 235, 238, 242, 278, 294, 319, 323, 324, 325, 408, 418, 419, 424, 429, 430, 434, 435, 443, 444, 449], "choos": [1, 3, 11, 58, 125, 128, 146, 274, 278, 353, 422, 425, 429, 430, 431, 433, 442, 443, 446, 448], "follow": [1, 2, 3, 6, 7, 8, 11, 14, 19, 32, 39, 44, 45, 46, 47, 48, 51, 56, 62, 64, 65, 66, 67, 71, 72, 73, 78, 83, 85, 106, 113, 114, 125, 126, 127, 128, 131, 134, 135, 136, 140, 141, 142, 143, 149, 152, 155, 156, 157, 158, 159, 162, 163, 164, 165, 166, 169, 170, 179, 187, 191, 211, 219, 244, 248, 249, 251, 258, 259, 272, 274, 276, 278, 279, 316, 319, 320, 321, 332, 333, 334, 335, 336, 337, 341, 342, 349, 350, 353, 354, 355, 356, 358, 359, 388, 406, 424, 425, 426, 429, 430, 431, 432, 433, 436, 437, 441, 442, 443, 444, 446, 448, 449], "max_frames_per_traj": [1, 16, 17, 20, 22, 23, 24, 25, 26, 409, 429, 431, 448], "frame": [1, 2, 11, 16, 17, 20, 22, 23, 24, 25, 26, 56, 191, 207, 251, 253, 271, 295, 318, 387, 388, 390, 393, 395, 399, 401, 406, 409, 410, 429, 430, 431, 432, 435, 442, 443, 446, 448, 449], "call": [1, 2, 3, 7, 8, 11, 16, 17, 19, 20, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 92, 95, 99, 100, 101, 102, 106, 107, 108, 112, 113, 115, 117, 121, 122, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 140, 141, 142, 143, 150, 151, 152, 153, 154, 155, 156, 159, 161, 164, 165, 166, 167, 168, 171, 180, 183, 184, 185, 187, 188, 190, 191, 192, 194, 195, 196, 199, 200, 201, 203, 204, 205, 206, 207, 209, 210, 211, 213, 215, 217, 218, 219, 220, 221, 222, 224, 227, 228, 229, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 281, 285, 286, 287, 289, 290, 293, 295, 298, 299, 301, 306, 314, 316, 318, 321, 322, 323, 325, 326, 329, 335, 336, 350, 351, 353, 356, 358, 367, 368, 369, 370, 371, 386, 387, 390, 401, 425, 426, 430, 431, 432, 433, 434, 435, 437, 438, 442, 443, 444, 446, 448, 449], "frames_per_batch": [1, 2, 16, 17, 20, 22, 23, 24, 25, 26, 41, 56, 68, 76, 188, 191, 224, 274, 278, 409, 429, 430, 431, 432, 433, 437, 439, 442, 443, 446, 448], "each": [1, 2, 3, 4, 7, 8, 15, 16, 17, 18, 20, 22, 23, 24, 25, 26, 28, 32, 36, 37, 39, 43, 44, 49, 51, 52, 54, 56, 57, 66, 67, 70, 72, 73, 75, 77, 78, 79, 85, 106, 108, 111, 113, 114, 116, 119, 125, 128, 131, 132, 135, 142, 143, 147, 148, 155, 156, 157, 158, 159, 164, 165, 166, 169, 170, 184, 199, 210, 212, 213, 219, 224, 227, 232, 233, 234, 235, 239, 240, 246, 248, 249, 251, 252, 253, 268, 271, 272, 273, 274, 276, 278, 284, 285, 289, 296, 297, 305, 309, 315, 316, 321, 323, 325, 374, 377, 378, 379, 380, 382, 383, 384, 385, 388, 401, 403, 418, 419, 425, 429, 430, 431, 432, 435, 436, 437, 439, 442, 443, 444, 445, 446, 448, 449], "init_random_fram": [1, 16, 17, 20, 22, 23, 24, 25, 26, 409, 429, 430, 433, 439], "rand_step": [1, 2, 3, 41, 76, 125, 128, 129, 130, 131, 132, 134, 135, 136, 142, 143, 144, 145, 149, 150, 151, 155, 156, 159, 164, 165, 166, 210, 234, 248, 444, 448, 449], "reset_at_each_it": [1, 16, 17, 20, 22, 23, 24, 25, 26, 429], "split_traj": [1, 16, 17, 20, 22, 23, 24, 25, 26, 429, 430, 431], "trajectori": [1, 3, 16, 17, 20, 22, 23, 24, 25, 26, 28, 39, 42, 43, 56, 57, 77, 79, 85, 105, 106, 113, 114, 119, 125, 126, 127, 128, 131, 135, 140, 141, 142, 143, 155, 156, 159, 164, 165, 166, 191, 220, 232, 239, 251, 255, 278, 281, 295, 353, 368, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 397, 422, 425, 429, 430, 431, 432, 434, 437, 439, 444, 448, 449], "pad": [1, 2, 3, 28, 45, 65, 81, 191, 199, 238, 258, 259, 261, 262, 278, 282, 283, 284, 403], "along": [1, 2, 3, 16, 17, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 66, 67, 71, 72, 73, 74, 75, 78, 83, 84, 85, 86, 87, 88, 89, 90, 101, 106, 108, 113, 114, 119, 121, 125, 128, 131, 134, 135, 136, 142, 143, 155, 156, 159, 164, 165, 166, 176, 190, 191, 192, 213, 215, 217, 220, 227, 231, 237, 251, 278, 279, 282, 283, 288, 315, 319, 322, 323, 336, 351, 358, 429, 430, 432, 434, 436, 442, 443, 444, 446, 448], "point": [1, 2, 3, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 66, 67, 68, 73, 74, 75, 78, 83, 85, 86, 87, 88, 89, 90, 98, 105, 106, 109, 119, 120, 123, 124, 125, 128, 131, 132, 135, 142, 143, 155, 156, 159, 164, 165, 166, 184, 185, 187, 188, 190, 191, 192, 195, 196, 200, 203, 204, 205, 207, 210, 211, 218, 219, 220, 221, 222, 224, 227, 228, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 251, 280, 322, 332, 343, 406, 423, 430, 431, 441, 442, 443, 444, 446, 448, 449], "boolean": [1, 3, 16, 17, 20, 22, 23, 24, 25, 26, 28, 30, 31, 33, 34, 35, 36, 37, 40, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 72, 74, 75, 83, 86, 87, 88, 89, 90, 106, 113, 114, 135, 183, 187, 220, 232, 282, 283, 295, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 426, 432], "repres": [1, 2, 3, 16, 17, 20, 22, 23, 24, 25, 26, 36, 37, 41, 49, 51, 58, 75, 76, 78, 79, 85, 100, 125, 128, 129, 130, 131, 134, 135, 136, 142, 143, 155, 156, 159, 164, 165, 166, 169, 170, 207, 220, 236, 248, 251, 268, 282, 283, 297, 303, 315, 316, 320, 321, 362, 368, 403, 424, 429, 431, 432, 433, 434, 435, 436, 442, 443], "valid": [1, 2, 3, 28, 62, 64, 65, 84, 85, 95, 119, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 172, 187, 220, 239, 241, 251, 253, 258, 259, 279, 282, 283, 295, 335, 342, 350, 353, 356, 368, 369, 370, 371, 403, 426, 433, 449], "exploration_typ": [1, 16, 17, 20, 22, 23, 24, 25, 26, 401, 422, 424, 429, 430], "strategi": [1, 2, 3, 20, 45, 111, 146, 184, 271, 283, 291, 424, 426, 429, 430, 433, 435, 442, 443, 446, 448], "reset_when_don": [1, 16, 17, 20, 22], "its": [1, 2, 3, 4, 5, 7, 9, 11, 15, 16, 17, 20, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 66, 67, 70, 71, 73, 74, 75, 78, 79, 83, 85, 86, 87, 88, 89, 90, 92, 101, 108, 113, 114, 125, 128, 131, 135, 141, 142, 143, 149, 155, 156, 157, 158, 159, 164, 165, 166, 169, 172, 188, 190, 191, 196, 203, 211, 232, 233, 234, 239, 241, 247, 248, 249, 251, 252, 253, 258, 259, 274, 278, 282, 283, 284, 285, 294, 315, 319, 320, 323, 326, 333, 334, 335, 336, 341, 342, 343, 344, 345, 346, 349, 350, 351, 352, 353, 354, 355, 356, 359, 366, 388, 406, 416, 424, 425, 426, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 442, 443, 444, 445, 446, 448, 449], "organ": [1, 2, 444, 446], "within": [1, 2, 3, 16, 17, 22, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 66, 67, 71, 73, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 100, 105, 106, 114, 125, 128, 131, 134, 135, 136, 142, 143, 155, 156, 159, 161, 164, 165, 166, 183, 185, 187, 188, 190, 191, 192, 195, 196, 198, 200, 202, 203, 204, 205, 207, 210, 211, 218, 220, 221, 222, 224, 227, 228, 231, 232, 233, 234, 235, 236, 238, 239, 240, 244, 245, 247, 248, 249, 251, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 286, 289, 290, 293, 295, 298, 299, 301, 306, 309, 314, 316, 318, 321, 323, 326, 329, 330, 338, 343, 358, 366, 386, 388, 424, 425, 430, 433, 434, 435, 436, 437, 438, 439, 442, 444, 448], "differ": [1, 2, 3, 4, 16, 17, 20, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 66, 67, 70, 72, 73, 74, 75, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 108, 111, 125, 126, 127, 128, 131, 132, 135, 140, 141, 142, 143, 146, 155, 156, 157, 158, 159, 164, 165, 166, 187, 191, 199, 200, 201, 212, 215, 222, 231, 239, 241, 243, 251, 252, 268, 272, 273, 274, 276, 277, 278, 279, 281, 284, 285, 286, 297, 323, 349, 351, 353, 362, 368, 369, 370, 374, 375, 376, 401, 406, 408, 418, 419, 424, 425, 426, 429, 430, 431, 433, 434, 436, 438, 441, 442, 443, 444, 445, 446, 448, 449], "how": [1, 2, 3, 11, 14, 19, 23, 24, 25, 29, 32, 39, 44, 56, 63, 66, 67, 73, 78, 79, 105, 106, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 140, 141, 142, 143, 147, 148, 150, 151, 153, 154, 155, 156, 157, 158, 159, 161, 164, 165, 166, 167, 168, 169, 170, 184, 199, 212, 251, 286, 319, 333, 335, 348, 350, 351, 353, 388, 390, 406, 423, 424, 429, 430, 431, 432, 433, 434, 435, 437, 438, 441, 442, 443, 444, 445, 446, 448, 449], "tabl": [1, 32, 424, 430, 435], "summar": [1, 3, 444], "what": [1, 3, 8, 11, 38, 39, 63, 83, 106, 113, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 171, 182, 203, 234, 239, 320, 336, 347, 351, 358, 423, 424, 425, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 442, 443, 444, 445, 446, 448, 449], "expect": [1, 2, 3, 4, 7, 32, 36, 39, 44, 51, 56, 66, 67, 70, 73, 78, 83, 84, 106, 112, 113, 125, 128, 131, 135, 142, 143, 149, 152, 155, 156, 159, 164, 165, 166, 171, 184, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 203, 204, 206, 208, 210, 211, 212, 213, 215, 217, 219, 221, 222, 223, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 251, 272, 273, 274, 276, 277, 278, 284, 285, 295, 316, 322, 325, 333, 334, 335, 336, 337, 338, 340, 341, 342, 347, 349, 350, 351, 353, 354, 355, 356, 358, 359, 363, 366, 410, 423, 424, 425, 426, 429, 431, 432, 434, 435, 436, 437, 442, 443, 444, 446, 449], "n": [1, 2, 3, 6, 7, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 66, 67, 72, 73, 74, 75, 78, 83, 86, 87, 88, 89, 90, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 191, 201, 206, 243, 251, 272, 273, 276, 281, 292, 294, 295, 318, 323, 333, 334, 342, 351, 367, 403, 426, 430, 432, 433, 446, 448, 449], "b": [1, 2, 3, 7, 8, 28, 36, 37, 39, 45, 46, 47, 48, 49, 62, 64, 66, 70, 71, 72, 73, 75, 78, 79, 80, 85, 99, 100, 119, 128, 209, 242, 272, 273, 276, 277, 284, 285, 287, 288, 296, 305, 326, 368, 369, 370, 371, 372, 374, 388, 430, 446], "cat_result": [1, 16, 17], "na": 1, "t": [1, 2, 3, 4, 6, 7, 8, 16, 17, 20, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 96, 105, 106, 108, 112, 113, 114, 119, 125, 128, 131, 132, 134, 135, 142, 143, 150, 151, 155, 156, 159, 164, 165, 166, 171, 182, 184, 185, 187, 188, 190, 191, 192, 195, 196, 198, 200, 202, 203, 204, 205, 207, 209, 210, 211, 218, 219, 220, 221, 222, 223, 224, 227, 228, 231, 232, 233, 234, 235, 236, 238, 239, 240, 244, 245, 246, 247, 248, 251, 252, 272, 274, 276, 278, 295, 315, 322, 333, 357, 368, 369, 370, 371, 372, 374, 388, 395, 406, 408, 420, 423, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 441, 442, 443, 444, 445, 446, 448, 449], "p": [1, 2, 4, 108, 111, 132, 162, 163, 256, 257], "In": [1, 2, 3, 4, 5, 7, 8, 10, 11, 16, 17, 20, 22, 23, 24, 25, 26, 27, 32, 39, 44, 56, 66, 67, 73, 78, 114, 125, 126, 127, 128, 131, 135, 140, 141, 142, 143, 155, 156, 157, 158, 159, 164, 165, 166, 195, 198, 200, 202, 210, 219, 224, 228, 233, 234, 237, 239, 240, 241, 244, 246, 247, 249, 251, 252, 272, 275, 276, 279, 284, 299, 303, 304, 322, 323, 325, 332, 333, 334, 336, 337, 338, 340, 341, 342, 349, 351, 353, 354, 355, 356, 358, 359, 408, 418, 419, 420, 424, 425, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 442, 443, 444, 445, 446, 449], "case": [1, 3, 4, 5, 7, 8, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 30, 31, 33, 34, 35, 36, 37, 40, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 68, 69, 70, 71, 74, 75, 79, 80, 83, 85, 86, 87, 88, 89, 90, 96, 97, 104, 105, 106, 108, 119, 125, 128, 131, 134, 135, 142, 143, 155, 156, 159, 164, 165, 166, 171, 198, 199, 200, 202, 210, 215, 234, 237, 241, 242, 252, 278, 279, 285, 286, 319, 322, 323, 325, 326, 332, 333, 334, 336, 337, 338, 340, 341, 342, 349, 351, 353, 354, 355, 356, 358, 359, 368, 369, 370, 371, 388, 397, 408, 418, 419, 420, 422, 424, 425, 426, 429, 430, 431, 432, 433, 434, 435, 437, 438, 442, 443, 444, 446, 448, 449], "dimens": [1, 3, 16, 17, 20, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 70, 71, 72, 74, 75, 83, 84, 85, 86, 87, 88, 89, 90, 99, 100, 101, 106, 113, 114, 119, 121, 125, 128, 129, 130, 131, 134, 135, 136, 137, 142, 143, 155, 156, 159, 164, 165, 166, 169, 170, 176, 184, 190, 191, 192, 206, 213, 215, 217, 220, 227, 230, 231, 234, 237, 243, 248, 258, 259, 260, 265, 266, 274, 276, 278, 279, 282, 283, 284, 287, 288, 293, 296, 300, 301, 302, 303, 306, 315, 318, 333, 334, 335, 341, 342, 343, 344, 345, 346, 349, 350, 351, 353, 354, 355, 356, 359, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 420, 422, 425, 429, 430, 431, 432, 434, 442, 443, 444, 446], "time": [1, 2, 3, 4, 7, 8, 16, 17, 20, 23, 24, 25, 26, 28, 32, 39, 44, 56, 63, 66, 67, 68, 69, 70, 72, 73, 78, 79, 80, 85, 96, 99, 108, 119, 125, 126, 127, 128, 131, 132, 135, 140, 141, 142, 143, 146, 152, 155, 156, 157, 158, 159, 161, 164, 165, 166, 181, 182, 190, 191, 192, 199, 213, 220, 227, 234, 235, 236, 239, 241, 248, 251, 257, 269, 272, 276, 278, 295, 309, 318, 323, 334, 335, 336, 342, 345, 349, 350, 351, 353, 354, 356, 358, 359, 368, 369, 370, 371, 372, 373, 374, 377, 378, 379, 380, 381, 382, 383, 384, 385, 406, 425, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 442, 443, 444, 446, 448, 449], "adapt": [1, 29, 185, 213, 232, 248, 254, 350, 429, 433, 444], "equal": [1, 16, 17, 22, 32, 85, 106, 113, 114, 128, 142, 150, 153, 154, 155, 164, 214, 215, 258, 259, 272, 274, 276, 278, 279, 282, 283, 285, 357, 362, 397, 418, 419, 429, 431, 445], "introduc": [1, 2, 155, 164, 272, 274, 276, 278, 295, 429, 442], "some": [1, 2, 3, 4, 7, 8, 9, 27, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 66, 67, 68, 70, 73, 74, 75, 78, 83, 84, 85, 86, 87, 88, 89, 90, 99, 101, 108, 119, 121, 125, 126, 127, 128, 131, 134, 135, 136, 140, 141, 142, 143, 147, 148, 155, 156, 157, 158, 159, 164, 165, 166, 169, 170, 171, 187, 219, 234, 241, 244, 251, 261, 274, 278, 301, 323, 324, 325, 388, 397, 409, 424, 425, 426, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 442, 443, 444, 446, 448, 449], "confus": [1, 30, 32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 241, 251], "other": [1, 2, 3, 4, 7, 8, 11, 16, 17, 20, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 71, 73, 74, 75, 78, 83, 84, 85, 86, 87, 88, 89, 90, 99, 100, 101, 102, 108, 111, 112, 113, 114, 115, 117, 121, 125, 128, 131, 134, 135, 136, 142, 143, 149, 155, 156, 159, 164, 165, 166, 194, 200, 201, 221, 228, 234, 237, 244, 248, 249, 251, 256, 271, 272, 274, 278, 288, 309, 314, 316, 321, 323, 333, 334, 335, 341, 342, 343, 344, 345, 346, 349, 350, 351, 353, 354, 355, 356, 359, 366, 368, 386, 403, 418, 419, 424, 425, 426, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 442, 443, 444, 445, 448, 449], "better": [1, 3, 8, 9, 16, 17, 28, 141, 274, 278, 425, 431, 434, 444, 448], "consist": [1, 2, 3, 32, 36, 37, 39, 44, 49, 56, 63, 66, 67, 70, 73, 75, 78, 79, 80, 85, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 211, 247, 251, 256, 259, 279, 429, 430, 431, 444, 445, 449], "interact": [1, 2, 3, 4, 5, 7, 8, 16, 17, 20, 22, 23, 24, 25, 26, 125, 128, 131, 135, 142, 143, 147, 148, 155, 156, 159, 164, 165, 166, 241, 319, 323, 429, 431, 433, 434, 435, 437, 442, 443, 444, 449], "keep": [1, 2, 3, 4, 7, 8, 17, 63, 70, 79, 80, 108, 112, 119, 128, 155, 164, 182, 215, 219, 246, 248, 249, 251, 295, 318, 388, 399, 406, 429, 430, 431, 432, 437, 438, 439, 443, 444, 446, 449], "separ": [1, 2, 4, 8, 16, 17, 22, 23, 25, 26, 28, 36, 37, 49, 70, 75, 79, 80, 191, 219, 246, 334, 337, 340, 342, 354, 356, 358, 359, 425, 429, 430, 435, 436, 442, 443, 446, 449], "interchang": [1, 284, 285, 431, 434, 438, 445, 446], "between": [1, 2, 3, 4, 5, 16, 17, 18, 22, 26, 29, 32, 39, 44, 45, 46, 47, 48, 56, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 78, 79, 80, 85, 101, 106, 108, 109, 112, 113, 114, 121, 125, 128, 131, 135, 142, 143, 147, 148, 155, 156, 159, 164, 165, 166, 169, 170, 171, 201, 214, 225, 236, 239, 241, 248, 251, 258, 259, 267, 272, 274, 278, 279, 284, 285, 316, 319, 323, 333, 335, 336, 337, 340, 341, 342, 345, 346, 349, 350, 351, 353, 354, 355, 356, 358, 359, 362, 368, 401, 406, 425, 429, 430, 432, 433, 437, 442, 443, 444, 446, 449], "wherea": [1, 2, 27, 32, 39, 44, 56, 66, 67, 73, 78, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 140, 141, 142, 143, 150, 151, 155, 156, 159, 161, 164, 165, 166, 201, 239, 241, 251, 336, 351, 356, 426, 438], "correspond": [1, 2, 3, 4, 16, 17, 20, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 71, 73, 74, 75, 78, 79, 83, 85, 86, 87, 88, 89, 90, 105, 106, 125, 128, 131, 135, 142, 143, 149, 155, 156, 159, 164, 165, 166, 191, 209, 219, 234, 239, 241, 246, 248, 249, 251, 256, 271, 274, 276, 278, 282, 283, 295, 319, 323, 336, 338, 341, 342, 356, 366, 368, 369, 370, 371, 372, 424, 429, 430, 431, 433, 434, 436, 437, 438, 442, 443, 444, 445], "sub": [1, 2, 3, 16, 17, 22, 23, 24, 25, 26, 32, 36, 37, 39, 44, 49, 56, 66, 67, 73, 75, 78, 106, 113, 119, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 220, 239, 251, 324, 325, 397, 406, 424, 425, 429, 430, 431, 437, 441, 448, 449], "doesn": [1, 4, 32, 39, 44, 56, 66, 67, 73, 78, 119, 125, 128, 131, 135, 142, 143, 150, 155, 156, 159, 164, 165, 166, 198, 202, 251, 252, 433, 434], "understood": [1, 429], "serv": [1, 3, 23, 25, 26, 137, 446, 448, 449], "basi": [1, 119, 284, 446, 448], "we": [1, 2, 3, 5, 7, 9, 11, 28, 29, 32, 36, 39, 44, 51, 56, 63, 66, 67, 70, 72, 73, 78, 79, 80, 99, 112, 114, 119, 125, 126, 127, 128, 131, 132, 135, 139, 140, 141, 142, 143, 155, 156, 159, 164, 165, 166, 171, 191, 199, 211, 219, 222, 228, 239, 244, 247, 248, 249, 251, 252, 255, 278, 284, 285, 286, 333, 334, 336, 337, 338, 340, 342, 343, 344, 349, 351, 353, 354, 355, 356, 358, 359, 366, 388, 423, 424, 425, 426, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 448, 449], "anoth": [1, 2, 3, 8, 14, 15, 18, 19, 21, 51, 78, 83, 100, 106, 113, 125, 128, 131, 134, 135, 136, 139, 142, 143, 155, 156, 159, 164, 165, 166, 188, 196, 198, 200, 202, 234, 240, 279, 319, 333, 334, 335, 341, 342, 343, 344, 345, 346, 349, 350, 351, 353, 354, 355, 356, 359, 366, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 425, 429, 431, 432, 433, 435, 436, 441, 442, 443, 444, 449], "wise": [1, 213], "requir": [1, 3, 4, 7, 8, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 70, 73, 74, 75, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 100, 105, 106, 113, 114, 125, 128, 131, 135, 139, 142, 143, 150, 155, 156, 159, 161, 164, 165, 166, 188, 191, 195, 209, 219, 231, 234, 239, 240, 241, 244, 246, 249, 251, 256, 274, 278, 279, 286, 306, 322, 323, 324, 325, 333, 334, 335, 336, 341, 342, 343, 344, 345, 346, 349, 350, 351, 353, 354, 355, 356, 358, 359, 366, 386, 388, 390, 424, 426, 429, 430, 431, 432, 434, 435, 436, 438, 442, 443, 444, 446, 448, 449], "op": [1, 15, 18, 21, 30, 31, 33, 34, 35, 40, 52, 53, 54, 55, 58, 59, 60, 61, 83, 86, 87, 88, 89, 90, 214, 247, 253, 256, 271, 388, 408], "sinc": [1, 2, 3, 4, 5, 7, 11, 28, 32, 39, 44, 51, 56, 63, 66, 67, 70, 73, 78, 79, 80, 105, 106, 114, 119, 125, 128, 131, 135, 142, 143, 155, 156, 157, 158, 159, 161, 164, 165, 166, 171, 182, 196, 251, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 284, 286, 289, 290, 293, 295, 298, 299, 301, 306, 314, 315, 316, 318, 320, 321, 326, 329, 386, 388, 425, 429, 430, 431, 432, 434, 435, 436, 442, 444, 445, 446, 448, 449], "goal": [1, 3, 4, 143, 233, 429, 430, 431, 432, 443, 444], "policy_devic": [1, 16, 17, 20, 22, 23, 24, 25, 26, 430], "explicitli": [1, 2, 3, 4, 35, 84, 96, 97, 104, 108, 187, 294, 319, 396, 425, 430, 432, 437, 442, 443, 446], "do": [1, 2, 3, 4, 7, 58, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 169, 170, 182, 184, 220, 234, 239, 247, 248, 274, 278, 285, 287, 312, 323, 351, 368, 388, 424, 425, 426, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 446, 448, 449], "deepcopi": [1, 286, 351, 442], "structur": [1, 3, 7, 45, 46, 47, 48, 51, 58, 62, 63, 64, 70, 71, 72, 79, 80, 83, 84, 85, 100, 119, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 183, 198, 202, 234, 284, 295, 333, 342, 353, 356, 368, 369, 370, 371, 372, 422, 425, 429, 431, 432, 434, 437, 442, 443, 444, 445], "place": [1, 2, 3, 29, 32, 38, 39, 44, 45, 46, 47, 48, 56, 62, 64, 66, 67, 71, 73, 78, 85, 99, 101, 108, 111, 113, 121, 125, 128, 131, 132, 135, 142, 143, 155, 156, 159, 164, 165, 166, 169, 170, 183, 187, 195, 203, 219, 234, 240, 241, 244, 246, 247, 248, 251, 286, 314, 318, 322, 403, 408, 409, 425, 430, 431, 435, 438, 442, 443, 444, 446], "instanti": [1, 2, 3, 16, 17, 26, 45, 46, 47, 48, 62, 63, 64, 68, 69, 70, 71, 79, 80, 83, 85, 105, 106, 108, 139, 141, 187, 209, 234, 285, 368, 369, 370, 371, 372, 386, 429, 430, 435, 436, 438, 442, 443, 444, 446, 449], "all": [1, 2, 3, 4, 8, 11, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 92, 108, 125, 128, 129, 130, 131, 132, 134, 135, 136, 137, 141, 142, 143, 147, 148, 149, 153, 154, 155, 156, 157, 158, 159, 164, 165, 166, 169, 170, 172, 174, 176, 180, 182, 184, 190, 191, 194, 195, 198, 199, 200, 202, 205, 211, 214, 215, 219, 227, 229, 231, 234, 235, 240, 241, 244, 246, 248, 251, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 284, 285, 286, 289, 290, 293, 295, 298, 299, 301, 306, 309, 314, 316, 318, 321, 322, 323, 325, 326, 329, 330, 333, 334, 336, 345, 349, 351, 353, 354, 355, 356, 358, 359, 363, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 388, 402, 406, 409, 418, 419, 420, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 446, 448, 449], "graph": [1, 3, 4, 8, 39, 66, 78, 126, 127, 140, 141, 364, 365, 429, 433, 444], "reli": [1, 2, 3, 11, 28, 67, 73, 234, 272, 273, 274, 276, 277, 278, 333, 353, 425, 429, 431, 433, 435, 437, 444, 449], "third": [1, 215, 236, 316, 442, 443], "parti": 1, "try": [1, 2, 4, 7, 8, 9, 16, 17, 20, 22, 23, 24, 25, 26, 36, 37, 45, 46, 47, 48, 49, 62, 64, 71, 75, 85, 429, 430, 431, 432, 433, 436, 437, 442, 443, 444, 448, 449], "limit": [1, 2, 30, 31, 33, 34, 35, 36, 37, 40, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 72, 74, 75, 83, 86, 87, 88, 89, 90, 125, 128, 131, 135, 142, 143, 149, 155, 156, 159, 164, 165, 166, 191, 211, 333, 335, 350, 351, 353, 355, 425, 429, 430, 432, 442, 443, 444], "chart": 1, "show": [1, 2, 11, 32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251, 285, 388, 429, 431, 432, 433, 442, 443, 444, 446, 448], "decis": [1, 2, 3, 260, 265, 293, 314, 339, 352, 424, 432, 434, 435, 442, 443, 446, 449], "multiprocess": [1, 2, 3, 15, 16, 17, 23, 24, 25, 70, 79, 80, 100, 108, 125, 132, 133, 155, 159, 164, 248, 249, 429, 430, 431, 432, 437, 442, 443, 444, 445, 449], "ensur": [1, 2, 3, 13, 16, 17, 20, 22, 23, 24, 25, 26, 32, 39, 44, 56, 63, 66, 67, 73, 78, 79, 85, 105, 106, 112, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 184, 191, 199, 219, 232, 241, 244, 248, 249, 251, 274, 278, 315, 424, 430, 431, 444, 446], "flexibl": [1, 3, 9, 150, 360, 425, 426, 429, 433, 446, 449], "extens": [1, 2, 63, 70, 79, 80, 114, 256, 426, 446], "mechan": [1, 4, 15, 18, 21, 32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 241, 251, 430, 436, 444], "accommod": [1, 2, 3, 13, 16, 17, 20, 22, 23, 24, 25, 26, 434, 435], "variou": [1, 2, 3, 15, 128, 240, 274, 278, 333, 334, 335, 341, 342, 343, 344, 345, 346, 349, 350, 351, 353, 354, 355, 356, 359, 360, 366, 388, 418, 419, 429, 430, 431, 433, 434, 435, 436, 438, 442, 443, 446, 449], "deploy": [1, 433], "scenario": [1, 2, 21, 147, 148, 155, 169, 170, 239, 386, 429, 435, 442, 443, 444], "facilit": [1, 2, 3, 7, 218, 219, 234, 244, 246, 311, 312, 313, 424, 429, 432, 435, 444], "localweightupdaterbas": [1, 13, 16, 17, 20, 21, 22, 23, 24, 25, 26], "remoteweightupdaterbas": [1, 13, 15, 16, 17, 18, 20, 22, 23, 24, 25, 26], "These": [1, 2, 7, 51, 72, 122, 169, 219, 246, 249, 424, 425, 429, 431, 442, 443, 444, 446, 449], "base": [1, 3, 4, 8, 9, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 32, 51, 63, 70, 73, 79, 80, 84, 110, 116, 119, 120, 122, 123, 125, 126, 127, 128, 131, 135, 139, 140, 141, 142, 143, 149, 150, 151, 155, 156, 159, 164, 165, 166, 169, 182, 200, 224, 238, 240, 244, 245, 274, 278, 284, 286, 311, 317, 333, 334, 336, 337, 338, 340, 341, 342, 344, 349, 353, 354, 355, 356, 358, 359, 395, 406, 424, 425, 426, 429, 430, 432, 434, 435, 436, 438, 442, 443, 444, 446, 449], "interfac": [1, 3, 14, 19, 125, 138, 152, 279, 287, 424, 425, 429, 431, 433, 438, 444, 446], "logic": [1, 3, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 442], "allow": [1, 2, 3, 16, 17, 20, 22, 23, 24, 25, 26, 29, 32, 36, 37, 39, 44, 45, 46, 47, 48, 49, 56, 58, 60, 62, 64, 66, 67, 70, 71, 73, 74, 75, 78, 79, 80, 85, 100, 106, 108, 111, 113, 114, 125, 126, 127, 128, 131, 135, 140, 141, 142, 143, 155, 156, 159, 164, 165, 166, 182, 187, 188, 222, 249, 251, 252, 279, 333, 334, 336, 337, 338, 340, 342, 343, 344, 349, 351, 353, 354, 355, 356, 358, 359, 360, 362, 366, 424, 426, 429, 431, 432, 433, 434, 435, 436, 442, 443, 444, 446, 448, 449], "tailor": [1, 142, 448], "need": [1, 2, 3, 4, 7, 8, 10, 13, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 29, 32, 38, 39, 44, 56, 62, 64, 66, 67, 73, 78, 83, 115, 119, 125, 128, 131, 135, 139, 142, 143, 146, 155, 156, 157, 158, 159, 164, 165, 166, 191, 194, 196, 199, 206, 212, 219, 222, 235, 239, 240, 241, 246, 248, 249, 251, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 286, 287, 289, 290, 293, 295, 298, 299, 301, 306, 314, 316, 318, 319, 320, 321, 322, 326, 329, 332, 342, 355, 356, 367, 372, 388, 406, 420, 424, 425, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 442, 443, 444, 446, 448, 449], "respons": [1, 2, 3, 8, 14, 16, 17, 19, 20, 23, 25, 26, 106, 113, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 406, 436, 437, 449], "It": [1, 2, 3, 4, 7, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 65, 66, 67, 72, 73, 74, 75, 78, 79, 81, 83, 84, 86, 87, 88, 89, 90, 100, 108, 111, 119, 124, 125, 128, 131, 135, 137, 142, 143, 149, 150, 155, 156, 157, 158, 159, 164, 165, 166, 169, 170, 171, 182, 188, 190, 191, 203, 209, 211, 215, 220, 233, 239, 241, 247, 249, 251, 253, 261, 263, 269, 271, 284, 285, 294, 295, 296, 298, 299, 305, 306, 316, 318, 321, 323, 333, 334, 335, 336, 341, 342, 343, 344, 345, 346, 349, 350, 351, 353, 354, 355, 356, 357, 359, 366, 367, 368, 386, 395, 401, 423, 424, 425, 429, 430, 432, 433, 434, 442, 443, 444, 445, 446, 448, 449], "particularli": [1, 2, 3, 16, 17, 433, 448, 449], "machin": [1, 2, 7, 23, 24, 25, 56, 139, 442, 443, 448], "fetch": [1, 13, 14, 16, 17, 20, 21, 22, 23, 24, 25, 26, 45, 46, 47, 48, 62, 64, 71, 85, 126, 127, 129, 130, 211, 435, 445, 446], "server": [1, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26], "appli": [1, 2, 3, 4, 15, 18, 20, 21, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 67, 68, 69, 70, 73, 74, 75, 78, 79, 80, 81, 83, 86, 87, 88, 89, 90, 108, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 184, 185, 187, 188, 190, 191, 192, 195, 196, 198, 200, 201, 203, 204, 205, 206, 207, 210, 211, 212, 214, 218, 220, 221, 222, 224, 227, 228, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 244, 245, 247, 248, 251, 256, 272, 276, 286, 303, 315, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 347, 349, 350, 352, 353, 354, 355, 356, 358, 359, 368, 386, 402, 426, 429, 430, 431, 437, 442, 444, 448, 449], "ask": [1, 2, 3, 8, 106, 113, 114, 199, 388, 431, 432, 434, 435, 442, 443, 445, 449], "contrast": [1, 3, 272, 294, 348, 446], "situat": [1, 2, 142, 147, 148, 199], "decid": [1, 63, 70, 79, 80, 442, 448], "handl": [1, 2, 3, 15, 16, 17, 23, 25, 26, 32, 39, 44, 56, 58, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 247, 248, 249, 251, 278, 279, 333, 351, 353, 406, 418, 419, 429, 430, 431, 432, 434, 436, 443, 446], "essenti": [1, 2, 3, 333, 334, 335, 341, 342, 343, 344, 345, 346, 349, 350, 351, 353, 354, 355, 356, 359, 366, 430, 434, 442, 444, 446], "system": [1, 4, 5, 97, 431, 442, 443, 444], "kept": [1, 3, 28, 112, 114, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 171, 182, 201, 228, 275, 303, 304, 436, 442], "central": [1, 2, 15, 19, 284, 285, 286, 429, 430, 434, 442, 443, 446], "divers": [1, 4, 155, 164], "benefici": [1, 2], "involv": [1, 134, 136, 137, 147, 148, 161, 188, 191, 239, 274, 278, 434, 436], "complex": [1, 2, 3, 15, 18, 21, 32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 195, 219, 234, 240, 241, 244, 246, 251, 322, 429, 430, 434, 435], "architectur": [1, 4, 265, 436, 442, 443, 448], "special": [1, 3, 87, 89, 422, 429, 432, 433, 449], "hardwar": [1, 3, 433], "By": [1, 2, 3, 36, 37, 49, 60, 75, 125, 128, 129, 130, 131, 134, 135, 136, 137, 142, 143, 147, 148, 155, 156, 157, 158, 159, 161, 164, 165, 166, 169, 170, 184, 185, 187, 188, 190, 191, 192, 195, 196, 200, 203, 204, 205, 207, 210, 211, 213, 218, 220, 221, 222, 224, 227, 228, 231, 232, 233, 234, 235, 236, 238, 239, 240, 244, 245, 247, 248, 251, 306, 323, 351, 396, 401, 420, 425, 429, 432, 442, 445, 446, 449], "retriev": [1, 3, 14, 15, 18, 19, 21, 45, 46, 47, 48, 51, 62, 63, 64, 66, 68, 69, 70, 71, 79, 80, 85, 108, 111, 113, 114, 125, 128, 131, 134, 135, 136, 142, 143, 155, 156, 159, 164, 165, 166, 182, 192, 200, 203, 215, 255, 258, 281, 318, 319, 323, 326, 330, 333, 334, 335, 336, 338, 350, 353, 354, 356, 358, 359, 366, 368, 369, 370, 371, 420, 426, 430, 431, 435, 444, 449], "seamless": [1, 2, 279], "integr": [1, 2, 32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 195, 219, 234, 240, 241, 244, 246, 251, 264, 274, 278, 281, 322, 424, 434, 435, 437, 442, 443, 444, 445], "infrastructur": [1, 3, 442, 443], "vanillalocalweightupdat": [1, 20], "multiprocessedremoteweightupd": [1, 16, 17], "rayremoteweightupdat": [1, 26], "rpcremoteweightupdat": [1, 25], "distributedremoteweightupdat": [1, 23], "cover": [1, 3, 134, 136, 423, 431, 434, 437, 438, 444, 448], "rang": [1, 2, 3, 4, 8, 63, 68, 69, 70, 72, 79, 80, 99, 101, 108, 119, 125, 128, 131, 132, 135, 142, 143, 147, 148, 155, 156, 159, 164, 165, 166, 199, 224, 237, 248, 251, 252, 273, 277, 294, 350, 358, 359, 425, 426, 429, 431, 432, 433, 436, 437, 439, 442, 443, 444, 446, 448], "typic": [1, 2, 3, 4, 8, 15, 18, 20, 21, 23, 25, 26, 32, 39, 44, 56, 66, 67, 73, 78, 85, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 199, 203, 233, 251, 292, 294, 319, 334, 336, 351, 353, 356, 424, 425, 426, 431, 433, 434, 436, 437, 442, 443, 444], "scale": [1, 3, 4, 29, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 191, 211, 215, 226, 233, 237, 248, 249, 254, 269, 275, 298, 299, 303, 304, 311, 312, 313, 319, 323, 325, 333, 334, 336, 349, 353, 354, 355, 356, 404, 410, 420, 424, 429, 430, 431, 432, 435, 443, 448], "design": [1, 15, 32, 39, 44, 56, 58, 60, 66, 67, 73, 78, 111, 117, 124, 125, 128, 131, 135, 142, 143, 147, 148, 155, 156, 159, 164, 165, 166, 184, 191, 209, 220, 239, 241, 249, 251, 314, 333, 334, 335, 336, 341, 342, 343, 344, 345, 346, 349, 350, 351, 353, 354, 355, 356, 359, 366, 422, 429, 430, 431, 432, 434, 435, 436, 441, 442, 443, 444, 446, 448, 449], "leverag": [1, 18, 26, 125, 128, 131, 135, 142, 143, 146, 155, 156, 157, 158, 159, 164, 165, 166, 429, 443, 449], "latenc": [1, 2, 3], "account": [1, 2, 99, 101, 121, 125, 128, 131, 134, 135, 136, 142, 143, 155, 156, 159, 164, 165, 166, 187, 196, 282, 283, 424, 430, 432, 446, 449], "delai": [1, 27, 358, 436], "transfer": [1, 13, 16, 17, 20, 22, 23, 24, 25, 26, 323], "receiv": [1, 2, 3, 16, 17, 18, 32, 39, 44, 56, 66, 67, 72, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 240, 241, 251, 279, 374, 425, 429, 431, 436, 441, 444], "manner": [1, 2, 135, 219, 244, 424, 429, 430, 431, 437, 441, 444, 446], "maintain": [1, 3, 5, 9, 38, 58, 191, 249, 444], "import": [1, 2, 3, 4, 6, 10, 11, 16, 17, 20, 22, 26, 27, 28, 30, 31, 33, 34, 35, 36, 37, 39, 40, 41, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 95, 99, 100, 101, 105, 106, 108, 113, 114, 119, 121, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 140, 141, 142, 143, 145, 147, 148, 149, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 172, 175, 176, 181, 182, 183, 184, 185, 187, 188, 190, 191, 194, 196, 199, 203, 204, 209, 210, 211, 212, 215, 217, 219, 221, 222, 223, 224, 227, 228, 229, 231, 232, 233, 234, 235, 236, 239, 240, 242, 246, 248, 251, 252, 255, 257, 261, 262, 263, 264, 267, 268, 270, 271, 272, 273, 274, 276, 277, 278, 279, 281, 284, 285, 286, 295, 296, 297, 305, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 325, 326, 327, 330, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 349, 351, 353, 354, 355, 356, 358, 359, 366, 368, 369, 370, 371, 386, 388, 399, 401, 416, 424, 425, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 448, 449], "stale": 1, "lead": [1, 2, 3, 4, 8, 10, 28, 36, 37, 49, 56, 63, 70, 75, 85, 112, 125, 128, 129, 130, 131, 134, 135, 136, 137, 142, 143, 155, 156, 159, 164, 165, 166, 234, 252, 275, 296, 303, 304, 309, 429, 432, 433, 442, 443, 444, 446, 448], "suboptim": 1, "scalabl": 1, "As": [1, 2, 3, 4, 56, 70, 79, 80, 83, 108, 125, 128, 131, 135, 142, 143, 146, 155, 156, 157, 158, 159, 164, 165, 166, 224, 266, 323, 368, 424, 429, 430, 431, 432, 433, 434, 436, 437, 442, 443, 444, 445, 446, 448, 449], "grow": [1, 3, 100], "overhead": [1, 2, 125, 126, 127, 128, 131, 135, 140, 141, 142, 143, 155, 156, 159, 164, 165, 166, 182, 323], "broadcast": [1, 2, 30, 31, 33, 34, 35, 36, 37, 40, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 266, 342, 356], "minim": [1, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 390, 446], "bottleneck": [1, 3, 8, 106, 113, 114], "achiev": [1, 2, 3, 4, 32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 139, 142, 143, 155, 156, 159, 164, 165, 166, 183, 233, 251, 257, 319, 403, 426, 429, 430, 431, 432, 433, 442, 443, 444, 446, 448, 449], "robust": [1, 220, 254], "varieti": [1, 3, 11], "remain": [1, 112, 190, 200, 201, 211, 233, 288, 436], "date": [1, 15, 18, 128, 190, 391], "simplest": [1, 39, 66, 78, 119, 326, 429, 431, 432, 435, 442, 443, 446, 449], "transit": [1, 32, 39, 44, 56, 66, 67, 73, 78, 106, 114, 119, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251, 254, 256, 328, 429, 432, 434, 435, 437, 442, 444, 446], "sampl": [1, 4, 8, 9, 30, 31, 33, 34, 35, 36, 37, 39, 40, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 66, 68, 69, 70, 72, 74, 75, 78, 79, 80, 83, 86, 87, 88, 89, 90, 95, 99, 100, 101, 105, 106, 107, 108, 111, 112, 113, 114, 117, 119, 121, 125, 128, 131, 135, 142, 143, 149, 152, 155, 156, 159, 164, 165, 166, 173, 180, 184, 185, 187, 188, 190, 191, 192, 195, 196, 199, 200, 203, 204, 205, 207, 210, 211, 218, 220, 221, 222, 224, 227, 228, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 244, 245, 247, 248, 251, 253, 255, 266, 271, 275, 281, 282, 283, 291, 293, 294, 295, 298, 303, 304, 307, 310, 315, 316, 317, 319, 320, 321, 322, 323, 333, 334, 335, 336, 337, 338, 340, 350, 352, 353, 358, 359, 397, 403, 406, 409, 422, 424, 425, 429, 430, 431, 432, 433, 434, 435, 437, 439, 442, 443, 445, 448, 449], "attent": [1, 2, 8, 142, 191, 429, 432, 449], "given": [1, 2, 3, 16, 17, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 67, 68, 69, 70, 72, 73, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 91, 92, 106, 108, 113, 114, 125, 128, 131, 135, 142, 143, 149, 153, 154, 155, 156, 159, 164, 165, 166, 167, 168, 182, 195, 199, 201, 209, 215, 219, 234, 238, 240, 241, 242, 244, 246, 248, 249, 251, 253, 255, 257, 268, 269, 271, 272, 274, 276, 278, 281, 286, 297, 301, 310, 315, 316, 318, 321, 322, 323, 324, 325, 327, 332, 337, 338, 340, 351, 367, 368, 369, 370, 371, 372, 374, 398, 401, 416, 424, 425, 426, 429, 430, 431, 434, 435, 436, 437, 438, 443, 444, 449], "built": [1, 2, 3, 5, 7, 108, 126, 127, 134, 140, 141, 152, 153, 333, 334, 336, 337, 338, 340, 342, 343, 344, 349, 351, 353, 354, 355, 356, 358, 359, 360, 366, 414, 416, 417, 420, 429, 430, 431, 432, 433, 436, 438, 444, 446, 449], "flatten": [1, 30, 31, 33, 34, 35, 36, 37, 40, 41, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 62, 64, 71, 74, 75, 83, 85, 86, 87, 88, 89, 90, 119, 188, 206, 403, 422, 432, 443], "suffici": [1, 3, 4, 429], "preprocess": [1, 2, 84, 240, 430, 433], "popul": [1, 2, 3, 16, 17, 20, 26, 63, 68, 69, 70, 77, 79, 80, 108, 142, 210, 234, 266, 286, 351, 429, 431, 432, 435, 437, 444, 446], "replaybuff": [1, 2, 3, 16, 17, 20, 26, 41, 63, 68, 69, 76, 79, 80, 99, 100, 105, 106, 107, 108, 113, 114, 123, 191, 220, 224, 251, 338, 343, 366, 414, 416, 422, 431, 433, 437, 439, 442, 443, 445, 446, 448], "lazytensorstorag": [1, 2, 63, 70, 78, 79, 80, 105, 113, 114, 119, 224, 251, 431, 433, 439, 442, 443, 446], "lambda": [1, 2, 16, 17, 20, 22, 26, 27, 39, 51, 66, 70, 78, 85, 119, 125, 128, 131, 132, 135, 142, 143, 155, 156, 159, 164, 165, 166, 181, 188, 196, 209, 211, 234, 242, 251, 252, 257, 306, 315, 318, 319, 320, 344, 346, 347, 358, 368, 371, 379, 380, 384, 385, 386, 416, 425, 429, 430, 433, 442, 443, 445, 446, 448, 449], "reshap": [1, 2, 30, 31, 33, 34, 35, 36, 37, 40, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 113, 119, 188, 274, 278, 279, 294, 386, 431, 442, 443], "slice": [1, 2, 3, 30, 31, 33, 34, 35, 36, 37, 40, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 63, 68, 69, 70, 74, 75, 79, 80, 83, 86, 87, 88, 89, 90, 106, 108, 113, 114, 184, 190, 191, 446], "recommend": [1, 2, 4, 7, 16, 17, 20, 22, 23, 24, 25, 26, 45, 46, 47, 48, 62, 63, 64, 70, 71, 79, 80, 85, 113, 119, 139, 191, 286, 425, 437, 442, 443], "creat": [1, 2, 3, 4, 5, 6, 7, 10, 16, 17, 20, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 95, 100, 102, 108, 119, 125, 128, 131, 132, 135, 139, 142, 143, 155, 156, 157, 159, 164, 165, 166, 169, 170, 176, 182, 188, 191, 199, 209, 219, 239, 240, 241, 244, 247, 248, 251, 258, 259, 261, 262, 263, 264, 265, 266, 270, 274, 278, 279, 280, 284, 285, 314, 322, 323, 330, 336, 338, 343, 354, 356, 366, 388, 403, 410, 411, 412, 416, 418, 419, 424, 429, 430, 431, 432, 433, 435, 438, 442, 443, 444, 445, 446, 448, 449], "multidimension": [1, 2, 79, 105, 106, 446], "slicesampl": [1, 2, 106, 114, 191, 446], "sampler": [1, 2, 63, 68, 69, 70, 79, 80, 99, 100, 101, 102, 105, 106, 107, 108, 111, 112, 113, 114, 115, 117, 119, 121, 191, 220, 294, 338, 343, 366, 429, 431, 442, 443, 446], "One": [1, 2, 3, 4, 8, 30, 31, 35, 36, 37, 40, 49, 54, 55, 60, 61, 75, 84, 119, 125, 126, 127, 155, 159, 164, 165, 191, 224, 244, 253, 291, 322, 326, 357, 362, 392, 429, 430, 446, 449], "must": [1, 2, 3, 7, 11, 13, 16, 17, 20, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 44, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 67, 68, 69, 70, 72, 73, 74, 75, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 95, 99, 100, 101, 102, 106, 108, 113, 114, 115, 116, 117, 119, 121, 125, 126, 128, 131, 132, 135, 140, 142, 143, 153, 155, 156, 157, 158, 159, 161, 164, 165, 166, 167, 169, 179, 184, 187, 188, 191, 194, 196, 199, 203, 207, 209, 211, 213, 215, 217, 228, 231, 233, 234, 235, 238, 239, 241, 242, 243, 248, 251, 258, 259, 268, 274, 278, 279, 282, 283, 284, 285, 297, 310, 315, 316, 318, 319, 320, 321, 322, 323, 326, 327, 333, 334, 336, 337, 338, 340, 341, 342, 343, 344, 349, 351, 353, 354, 355, 356, 357, 358, 359, 366, 368, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 390, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 425, 429, 430, 431, 432, 435, 441, 444, 446], "shape": [1, 2, 3, 16, 17, 20, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 66, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 95, 99, 100, 101, 105, 108, 113, 119, 121, 125, 128, 129, 130, 131, 134, 135, 136, 140, 141, 142, 143, 146, 147, 148, 152, 153, 154, 155, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 169, 170, 171, 176, 182, 184, 188, 190, 192, 198, 199, 202, 203, 204, 209, 211, 212, 215, 217, 221, 222, 224, 228, 231, 232, 234, 237, 242, 248, 249, 250, 251, 255, 257, 260, 261, 262, 263, 264, 265, 266, 267, 270, 272, 273, 274, 276, 277, 278, 279, 281, 282, 283, 284, 285, 287, 291, 292, 293, 294, 295, 296, 297, 302, 303, 305, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 325, 326, 327, 330, 333, 334, 336, 337, 338, 340, 341, 342, 349, 353, 354, 355, 356, 358, 359, 362, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 397, 403, 406, 416, 424, 425, 429, 430, 431, 432, 433, 435, 436, 439, 441, 442, 443, 445, 446, 448, 449], "clearli": [1, 2], "dimension": [1, 63, 67, 70, 78, 79, 80, 201, 274, 278, 368, 373, 381, 425, 443], "num_slic": [1, 2, 106, 113, 114, 446], "4": [1, 2, 3, 7, 30, 32, 36, 37, 41, 49, 51, 54, 55, 56, 60, 63, 66, 68, 69, 70, 72, 73, 75, 76, 78, 79, 80, 99, 100, 101, 108, 113, 114, 121, 125, 126, 127, 128, 129, 130, 131, 135, 140, 141, 142, 143, 144, 145, 146, 149, 151, 155, 156, 159, 162, 163, 164, 165, 166, 184, 185, 187, 188, 191, 196, 203, 224, 231, 232, 233, 239, 248, 249, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 268, 269, 270, 271, 272, 273, 276, 277, 279, 281, 282, 283, 284, 285, 289, 290, 291, 293, 294, 295, 296, 297, 305, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 325, 327, 333, 334, 336, 337, 338, 340, 341, 342, 343, 344, 349, 351, 353, 354, 355, 356, 358, 359, 366, 386, 387, 424, 428, 429, 430, 431, 432, 438, 442, 443, 444, 446, 447, 448, 449], "trajectory_kei": [1, 28, 113, 114], "traj_id": [1, 2, 3, 16, 17, 20, 28, 41, 76, 188, 224, 437, 446], "total_fram": [1, 2, 16, 17, 20, 22, 23, 24, 25, 26, 41, 56, 68, 76, 188, 191, 224, 406, 409, 416, 426, 429, 430, 431, 432, 433, 437, 439, 442, 443, 446, 448], "dim": [1, 2, 30, 31, 33, 34, 35, 36, 37, 40, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 70, 71, 74, 75, 79, 80, 83, 85, 86, 87, 88, 89, 90, 113, 191, 192, 213, 217, 230, 231, 234, 243, 248, 277, 301, 306, 318, 420, 425, 430, 431, 433, 442, 444, 446], "ndim": [1, 2, 30, 31, 33, 34, 35, 36, 37, 40, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 63, 70, 74, 75, 79, 80, 83, 86, 87, 88, 89, 90, 99, 101, 105, 106, 119, 121, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 213, 251, 318], "parallelenv": [1, 2, 3, 16, 17, 20, 22, 25, 119, 125, 128, 131, 135, 142, 143, 150, 156, 157, 158, 159, 161, 164, 165, 166, 239, 274, 278, 386, 417, 422, 429, 430, 431, 434, 441, 448, 449], "make_env": [1, 3, 155, 164, 170, 239, 248, 386, 411, 412, 429, 430, 448, 449], "regular": [1, 2, 3, 16, 17, 20, 22, 23, 24, 25, 26, 45, 46, 47, 48, 62, 64, 71, 85, 105, 111, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 184, 185, 187, 188, 190, 191, 192, 195, 196, 200, 203, 204, 205, 207, 210, 211, 218, 220, 221, 222, 224, 227, 228, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 244, 245, 247, 248, 251, 254, 256, 267, 274, 278, 297, 316, 320, 321, 322, 323, 343, 353, 408, 422, 426, 429, 430, 433, 434, 435, 439, 446, 449], "behav": [1, 3, 137, 149, 272, 276, 291, 341, 349, 351, 433, 445], "accordingli": [1, 2, 3, 106, 196, 213, 232, 233, 276, 320, 432], "3": [1, 2, 3, 6, 7, 10, 11, 16, 17, 20, 22, 26, 30, 31, 32, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 58, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 75, 78, 79, 80, 85, 99, 101, 106, 108, 113, 114, 119, 121, 125, 128, 129, 130, 131, 134, 135, 136, 137, 138, 142, 143, 146, 147, 148, 150, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 176, 185, 187, 188, 191, 195, 196, 199, 201, 203, 204, 209, 211, 215, 217, 219, 221, 222, 224, 227, 228, 231, 232, 233, 234, 237, 239, 240, 241, 242, 244, 246, 251, 252, 254, 255, 257, 258, 259, 261, 262, 263, 265, 268, 270, 272, 273, 274, 276, 277, 278, 279, 281, 282, 284, 285, 286, 291, 294, 296, 306, 310, 311, 312, 313, 315, 316, 319, 321, 322, 325, 326, 327, 333, 334, 336, 337, 338, 340, 341, 342, 343, 344, 345, 349, 351, 353, 354, 355, 356, 358, 359, 366, 368, 369, 370, 371, 374, 377, 378, 379, 380, 382, 383, 384, 385, 386, 388, 405, 424, 426, 428, 429, 430, 431, 432, 434, 435, 437, 438, 442, 443, 444, 446, 447, 448, 449], "isn": [1, 2, 3, 8, 16, 17, 20, 22, 23, 24, 25, 26, 45, 46, 47, 48, 62, 64, 71, 85, 105, 119, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 171, 187, 203, 209, 315, 322, 435, 436, 438, 442, 443], "current": [1, 2, 3, 12, 14, 15, 16, 17, 18, 21, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 103, 106, 108, 114, 125, 128, 131, 135, 137, 142, 143, 150, 153, 154, 155, 156, 159, 164, 165, 166, 173, 182, 187, 188, 191, 209, 220, 233, 234, 235, 239, 240, 241, 249, 251, 269, 295, 299, 303, 307, 318, 333, 335, 336, 343, 350, 353, 355, 356, 391, 426, 429, 430, 431, 432, 436, 442, 443, 444, 446, 449], "fulli": [1, 8, 32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251, 273, 277, 430, 433, 436, 444, 446], "ani": [1, 2, 3, 5, 8, 11, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 97, 98, 99, 100, 101, 102, 108, 109, 112, 114, 115, 117, 119, 120, 121, 123, 124, 125, 128, 131, 132, 135, 142, 143, 150, 155, 156, 157, 158, 159, 164, 165, 166, 167, 169, 170, 171, 183, 185, 187, 188, 190, 191, 192, 195, 196, 199, 200, 203, 204, 205, 206, 207, 209, 210, 211, 218, 219, 220, 221, 222, 224, 227, 228, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 244, 245, 247, 248, 249, 251, 257, 258, 259, 265, 266, 279, 288, 294, 314, 318, 322, 323, 324, 325, 333, 334, 336, 337, 338, 340, 341, 342, 349, 351, 353, 354, 355, 356, 358, 359, 368, 370, 371, 386, 388, 393, 406, 423, 425, 429, 430, 431, 432, 433, 435, 436, 442, 443, 444, 446, 448, 449], "consecut": [1, 3, 112, 139, 278, 295, 388, 432, 434, 437, 443, 446, 449], "won": [1, 3, 4, 16, 17, 20, 22, 23, 24, 25, 26, 32, 39, 44, 45, 46, 47, 48, 56, 62, 64, 66, 67, 71, 73, 78, 85, 125, 128, 131, 132, 134, 135, 142, 143, 150, 151, 155, 156, 159, 164, 165, 166, 219, 246, 251, 333, 406, 420, 430, 431, 434, 435], "therebi": [1, 29, 386, 425, 429, 430], "interrupt": [1, 2, 135, 318, 374], "tool": [1, 2, 3, 5, 424, 425, 432, 434, 442, 444, 446, 449], "backend": [1, 3, 7, 23, 24, 26, 27, 85, 125, 128, 131, 134, 135, 142, 143, 155, 156, 159, 164, 165, 166, 175, 181, 252, 426, 429, 431, 432, 433, 434, 437, 438, 444], "gloo": [1, 23, 24, 27], "nccl": [1, 23, 24], "mpi": [1, 23, 24], "distributeddatacollector": [1, 27, 422], "rpc": [1, 25, 27, 69], "rpcdatacollector": [1, 27, 422], "launcher": [1, 23, 24, 25, 27], "rai": [1, 18, 26, 63, 68, 69, 70, 79, 80, 108], "submitit": [1, 23, 24, 25, 27], "mode": [1, 3, 6, 16, 17, 20, 22, 23, 24, 25, 26, 32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 150, 155, 156, 159, 164, 165, 166, 198, 202, 233, 241, 248, 249, 251, 256, 266, 274, 275, 278, 283, 291, 302, 303, 304, 309, 319, 323, 351, 386, 396, 401, 424, 425, 429, 430, 442, 443, 448, 449], "find": [1, 4, 6, 7, 23, 24, 25, 63, 65, 81, 113, 114, 253, 276, 295, 400, 404, 429, 430, 433, 435, 436, 442, 443], "folder": [1, 2, 45, 46, 47, 48, 62, 64, 71, 85, 169, 191, 430], "wonder": 1, "why": [1, 2, 3, 182, 425, 442, 444, 449], "instead": [1, 2, 3, 4, 7, 8, 16, 17, 20, 22, 23, 24, 25, 26, 30, 32, 35, 39, 44, 56, 66, 67, 68, 73, 78, 82, 85, 125, 128, 131, 135, 141, 142, 143, 155, 156, 159, 164, 165, 166, 191, 206, 251, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 286, 289, 290, 293, 295, 298, 299, 301, 306, 314, 316, 318, 321, 322, 326, 329, 333, 335, 336, 338, 341, 342, 343, 349, 350, 353, 354, 355, 356, 366, 368, 372, 376, 420, 425, 433, 434, 435, 439, 444, 446, 449], "lower": [1, 2, 3, 26, 32, 33, 194, 248, 298, 299, 326, 431, 442, 444], "io": [1, 11, 140, 141, 150, 153, 154, 167, 168, 276, 277, 433], "footprint": [1, 2, 446], "commun": [1, 2, 3, 143, 155, 159, 164, 423, 431, 449], "yet": [1, 126, 127, 140, 445], "plai": [1, 3, 157, 158, 166, 191, 430, 431, 436, 446, 449], "role": [1, 3, 45, 148, 430, 436, 449], "opposit": [1, 442], "direct": [1, 2, 32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251, 272, 276, 351, 430, 436], "faster": [1, 2, 4, 28, 30, 31, 33, 34, 35, 36, 37, 40, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 150, 282, 368, 369, 370, 371, 432, 433, 442, 443], "share": [1, 3, 6, 8, 28, 45, 46, 47, 48, 62, 64, 70, 71, 79, 80, 83, 85, 97, 99, 100, 101, 102, 106, 108, 109, 113, 115, 117, 121, 132, 155, 164, 231, 239, 248, 249, 274, 278, 284, 285, 311, 312, 313, 333, 334, 335, 336, 337, 341, 342, 349, 350, 353, 354, 355, 356, 358, 359, 420, 422, 424, 425, 431, 433, 439, 441, 442, 443, 448, 449], "among": [1, 3, 58, 157, 158, 239, 342, 356, 425, 442, 443], "prohibit": [1, 3, 119], "slow": [1, 3, 4, 11, 45, 46, 47, 48, 62, 64, 71, 85, 100, 113, 114], "compar": [1, 3, 119, 334, 336, 349, 354, 356, 358, 359, 401, 425, 429, 431, 433, 435, 436, 442, 443, 446, 449], "gpu": [1, 7, 8, 32, 39, 44, 56, 66, 67, 73, 78, 99, 101, 121, 125, 128, 131, 135, 136, 139, 142, 143, 155, 156, 159, 164, 165, 166, 251, 429, 431, 432, 442, 443, 449], "driver": [1, 7], "mean": [1, 2, 3, 4, 7, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 45, 46, 47, 48, 62, 64, 71, 79, 83, 85, 100, 105, 106, 113, 114, 119, 125, 126, 127, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 187, 215, 239, 248, 249, 253, 254, 255, 266, 269, 272, 274, 276, 278, 281, 293, 294, 302, 303, 319, 323, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 347, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 368, 369, 370, 371, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 424, 425, 429, 430, 431, 433, 435, 442, 443, 444, 446, 449], "keyword": [1, 2, 3, 11, 16, 17, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 95, 97, 99, 100, 101, 105, 106, 108, 111, 113, 114, 117, 121, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 140, 141, 142, 143, 147, 148, 150, 151, 153, 154, 155, 156, 159, 161, 164, 165, 166, 167, 168, 169, 170, 176, 184, 185, 187, 188, 190, 191, 192, 194, 195, 196, 199, 200, 203, 204, 205, 207, 209, 210, 211, 213, 218, 219, 220, 221, 222, 224, 227, 228, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 257, 271, 274, 278, 282, 283, 284, 285, 295, 310, 314, 315, 318, 319, 320, 322, 323, 326, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 347, 348, 349, 350, 352, 353, 354, 355, 356, 358, 359, 361, 366, 368, 369, 370, 371, 372, 376, 386, 388, 393, 395, 406, 417, 429, 430, 431, 433, 435, 438, 442, 443, 446, 448, 449], "build": [1, 2, 3, 7, 28, 32, 36, 39, 44, 56, 63, 66, 67, 68, 69, 70, 73, 78, 79, 80, 83, 108, 125, 126, 127, 128, 131, 135, 136, 137, 140, 141, 142, 143, 147, 148, 150, 153, 154, 155, 156, 159, 161, 164, 165, 166, 167, 168, 169, 170, 224, 248, 249, 251, 255, 274, 278, 281, 317, 319, 323, 406, 413, 414, 415, 424, 425, 426, 431, 432, 433, 435, 436, 437, 438, 442, 443, 444, 445, 448, 449], "mani": [1, 2, 3, 4, 70, 126, 127, 129, 130, 131, 134, 136, 137, 140, 141, 142, 150, 151, 161, 199, 234, 333, 335, 342, 350, 353, 424, 429, 430, 431, 433, 434, 435, 437, 439, 442, 443, 444, 446, 448, 449], "eg": [1, 2, 3, 30, 31, 33, 34, 35, 36, 37, 40, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 62, 64, 71, 74, 75, 83, 85, 86, 87, 88, 89, 90, 99, 100, 101, 102, 115, 117, 121, 125, 128, 129, 130, 131, 134, 135, 136, 137, 139, 142, 143, 155, 156, 159, 161, 164, 165, 166, 201, 232, 241, 252, 284, 314, 388], "gymnasium": [1, 2, 3, 5, 78, 125, 128, 131, 134, 135, 136, 142, 143, 144, 145, 155, 156, 159, 164, 165, 166, 175, 181, 204, 228, 232, 247, 252, 430, 431, 433, 444, 448], "warn": [1, 3, 67, 73, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 248, 253, 271, 295, 396, 430], "quickli": [1, 3, 430, 442, 443, 449], "becom": [1, 2, 3, 4, 26, 272, 276, 442, 443, 449], "quit": [1, 3, 11, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 429, 430, 431, 433, 435, 442, 443, 449], "annoi": [1, 3], "filter": [1, 2, 3, 4, 84, 106, 113, 114, 333, 334, 336, 337, 341, 342, 349, 353, 354, 356, 434], "out": [1, 2, 3, 4, 5, 9, 26, 32, 39, 44, 45, 46, 47, 48, 51, 56, 62, 64, 66, 67, 71, 73, 78, 84, 85, 97, 106, 113, 114, 125, 128, 131, 135, 142, 143, 155, 156, 157, 158, 159, 164, 165, 166, 171, 199, 231, 234, 251, 253, 272, 273, 276, 282, 283, 286, 287, 288, 310, 314, 315, 316, 319, 320, 321, 322, 323, 351, 364, 365, 425, 426, 429, 430, 431, 432, 433, 434, 435, 437, 442, 443, 444, 446, 448, 449], "still": [1, 2, 3, 9, 39, 66, 78, 85, 86, 125, 126, 127, 128, 131, 135, 140, 141, 142, 143, 155, 156, 159, 164, 165, 166, 239, 295, 350, 351, 425, 429, 430, 432, 441, 444, 446, 449], "wish": [1, 3, 11, 16, 17, 22, 181, 436, 446], "displai": [1, 3, 7, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 406, 426, 429, 430, 443, 444], "filter_warnings_subprocess": [1, 3], "fals": [1, 2, 3, 11, 12, 16, 17, 20, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 108, 109, 111, 112, 113, 114, 115, 120, 121, 123, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 176, 182, 183, 184, 185, 187, 188, 191, 192, 195, 196, 198, 199, 202, 203, 204, 206, 209, 210, 211, 213, 214, 215, 217, 219, 220, 221, 222, 224, 226, 227, 228, 231, 232, 234, 237, 238, 239, 240, 241, 242, 243, 244, 246, 248, 249, 251, 252, 253, 254, 255, 257, 258, 259, 261, 267, 268, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 295, 296, 297, 303, 304, 305, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 325, 326, 327, 333, 334, 335, 336, 337, 338, 340, 341, 342, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 362, 366, 368, 369, 370, 371, 377, 378, 379, 380, 382, 383, 384, 385, 386, 388, 395, 396, 399, 400, 401, 403, 404, 406, 420, 424, 425, 426, 429, 430, 431, 433, 438, 439, 441, 442, 443, 444, 445, 448, 449], "part": [2, 3, 4, 8, 32, 39, 44, 56, 66, 67, 72, 73, 78, 85, 125, 126, 128, 131, 135, 140, 142, 143, 153, 155, 156, 159, 164, 165, 166, 182, 190, 215, 224, 227, 251, 274, 278, 327, 397, 420, 425, 429, 431, 432, 433, 439, 442, 444, 449], "algorithm": [2, 3, 8, 9, 149, 184, 231, 333, 353, 354, 356, 422, 425, 426, 429, 430, 431, 432, 433, 435, 436, 437, 438, 442, 443, 445, 446, 448], "implement": [2, 3, 9, 14, 15, 16, 17, 18, 19, 20, 21, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 66, 67, 68, 73, 74, 75, 78, 82, 83, 86, 87, 88, 89, 90, 103, 115, 116, 125, 128, 131, 135, 142, 143, 149, 150, 155, 156, 159, 164, 165, 166, 188, 195, 198, 200, 204, 207, 211, 213, 221, 222, 228, 232, 238, 240, 241, 242, 248, 249, 251, 252, 256, 258, 272, 273, 274, 275, 276, 277, 278, 302, 303, 304, 333, 334, 336, 339, 340, 341, 347, 349, 351, 352, 353, 355, 356, 358, 386, 397, 411, 422, 424, 426, 429, 430, 431, 432, 433, 442, 443, 444, 448], "wide": [2, 3, 5, 448], "give": [2, 3, 7, 79, 125, 128, 131, 135, 142, 143, 149, 155, 156, 159, 164, 165, 166, 191, 199, 423, 425, 429, 430, 433, 442, 443, 444, 445, 448], "abil": [2, 351, 444, 446], "panel": [2, 431], "usag": [2, 3, 5, 7, 16, 17, 20, 22, 23, 24, 25, 26, 39, 66, 78, 97, 119, 188, 191, 203, 256, 274, 278, 336, 341, 349, 356, 360, 424, 429, 431, 432, 435, 436, 438, 442, 443, 446], "includ": [2, 3, 4, 7, 9, 26, 32, 39, 44, 56, 66, 67, 73, 78, 83, 85, 96, 97, 99, 100, 101, 102, 104, 115, 117, 121, 125, 128, 131, 135, 142, 143, 149, 153, 154, 155, 156, 159, 164, 165, 166, 206, 209, 233, 239, 241, 248, 249, 251, 274, 278, 333, 336, 351, 356, 409, 424, 426, 429, 430, 431, 432, 433, 442, 443, 444, 446, 449], "almost": [2, 249, 282, 283, 432], "physic": [2, 6, 7, 97, 155, 156, 161, 426, 429, 442, 443, 444], "theori": 2, "crude": 2, "made": [2, 3, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 66, 67, 70, 73, 74, 75, 78, 83, 86, 87, 88, 89, 90, 99, 100, 101, 102, 115, 117, 121, 125, 128, 131, 134, 135, 136, 142, 143, 155, 156, 159, 164, 165, 166, 234, 251, 286, 295, 338, 351, 366, 429, 430, 432, 442, 443, 445, 446, 448], "liststorag": [2, 51, 63, 68, 69, 70, 78, 79, 80, 100, 108, 446], "veri": [2, 3, 140, 141, 430, 434, 437, 442, 444, 446, 448, 449], "ineffici": [2, 4], "tensor": [2, 8, 16, 17, 20, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 95, 97, 98, 99, 100, 101, 102, 104, 105, 106, 108, 109, 111, 113, 114, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 140, 141, 142, 143, 146, 147, 148, 149, 152, 153, 154, 155, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 169, 170, 176, 182, 183, 184, 185, 187, 188, 190, 191, 192, 195, 196, 198, 199, 201, 202, 203, 204, 206, 209, 210, 212, 215, 217, 219, 220, 221, 222, 224, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 246, 248, 249, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 287, 291, 292, 293, 294, 295, 296, 297, 300, 301, 302, 303, 304, 305, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 325, 326, 327, 329, 331, 333, 334, 336, 337, 338, 340, 341, 342, 345, 346, 349, 351, 353, 354, 355, 356, 358, 359, 362, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 424, 425, 426, 429, 430, 431, 432, 433, 434, 435, 442, 443, 444, 448, 449], "contigu": [2, 3, 8, 33, 36, 44, 86, 100, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 176, 209, 212, 234, 242, 444, 446, 448], "tensorstorag": [2, 70, 78, 99, 105, 106, 119, 122, 437, 446], "lazymemmapstorag": [2, 41, 63, 68, 69, 70, 76, 79, 80, 106, 108, 113, 114, 190, 191, 429, 430, 432, 437, 442, 445, 446], "class": [2, 5, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 128, 131, 132, 133, 134, 135, 136, 137, 141, 142, 143, 146, 149, 152, 155, 156, 157, 158, 159, 161, 164, 165, 166, 167, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 387, 388, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 418, 419, 420, 422, 424, 425, 426, 429, 430, 431, 432, 434, 435, 436, 437, 438, 442, 443, 446, 449], "citizen": 2, "pytre": [2, 63, 68, 69, 70, 79, 80, 102, 108, 122], "tupl": [2, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 97, 102, 106, 108, 113, 117, 119, 125, 128, 129, 130, 131, 134, 135, 136, 142, 143, 155, 156, 159, 164, 165, 166, 191, 209, 211, 215, 251, 257, 261, 267, 268, 274, 277, 278, 279, 286, 293, 296, 297, 315, 316, 320, 321, 326, 333, 334, 335, 336, 337, 341, 342, 344, 349, 350, 351, 353, 354, 355, 356, 358, 359, 368, 369, 370, 371, 400, 401, 404, 413, 446, 448], "dictionari": [2, 15, 16, 17, 20, 22, 23, 24, 25, 26, 32, 36, 39, 44, 45, 46, 47, 48, 56, 62, 64, 66, 67, 71, 73, 78, 84, 85, 106, 111, 113, 114, 125, 128, 131, 134, 135, 136, 142, 143, 147, 148, 155, 156, 159, 164, 165, 166, 169, 170, 209, 234, 239, 241, 249, 251, 319, 323, 336, 356, 358, 401, 418, 419, 420, 426, 430, 431, 434, 436, 442, 444, 449], "nest": [2, 3, 28, 32, 36, 37, 39, 41, 43, 44, 45, 46, 47, 48, 49, 56, 57, 62, 64, 66, 67, 70, 71, 73, 75, 76, 77, 78, 85, 91, 99, 100, 101, 104, 108, 121, 125, 128, 131, 134, 135, 136, 142, 143, 155, 156, 159, 164, 165, 166, 183, 191, 232, 235, 239, 251, 318, 368, 369, 370, 371, 372, 386, 396, 426, 430, 431, 433, 443, 444, 446, 448], "construct": [2, 3, 5, 28, 32, 39, 44, 56, 63, 66, 67, 70, 73, 78, 79, 80, 83, 108, 125, 128, 131, 132, 134, 135, 142, 143, 155, 156, 157, 159, 164, 165, 166, 171, 198, 202, 249, 251, 274, 278, 299, 323, 406, 424, 430, 431, 432, 435, 442, 444, 446, 449], "ram": [2, 134, 136, 438, 446], "prealloc": [2, 3, 155, 164, 444], "ve": [2, 72, 429, 432, 439], "been": [2, 3, 5, 7, 8, 12, 23, 25, 26, 30, 31, 33, 34, 35, 36, 37, 40, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 72, 74, 75, 83, 86, 87, 88, 89, 90, 108, 112, 125, 128, 131, 135, 139, 142, 143, 147, 148, 155, 156, 159, 164, 165, 166, 211, 232, 233, 240, 241, 272, 274, 276, 278, 286, 318, 333, 351, 353, 355, 429, 430, 431, 432, 441, 442, 443, 444, 446, 448, 449], "extend": [2, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 41, 51, 63, 66, 68, 69, 70, 76, 79, 80, 85, 98, 99, 102, 105, 106, 108, 109, 113, 114, 117, 119, 120, 123, 124, 184, 190, 224, 240, 251, 254, 351, 403, 422, 425, 426, 429, 430, 431, 432, 433, 437, 439, 442, 443, 445, 446, 448], "here": [2, 3, 4, 7, 8, 9, 10, 16, 17, 26, 119, 125, 128, 129, 130, 131, 135, 139, 142, 143, 155, 156, 157, 158, 159, 164, 165, 166, 191, 239, 286, 395, 424, 425, 426, 429, 430, 431, 432, 433, 434, 435, 437, 439, 442, 443, 444, 446, 448, 449], "start": [2, 3, 4, 5, 16, 26, 29, 51, 68, 83, 84, 85, 106, 113, 114, 125, 128, 131, 132, 135, 142, 143, 146, 155, 156, 159, 164, 165, 166, 182, 197, 402, 428, 429, 430, 433, 440, 443, 444, 446, 447, 449], "replay_buff": [2, 8, 16, 17, 20, 26, 63, 68, 69, 70, 79, 80, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 191, 403, 416, 429, 430, 431, 437, 442, 443, 446], "rb": [2, 41, 63, 68, 69, 70, 76, 79, 80, 100, 105, 106, 108, 113, 114, 119, 191, 224, 251, 430, 432, 433, 437, 439, 443, 445, 446, 448], "10": [2, 3, 7, 27, 28, 30, 31, 32, 35, 39, 40, 51, 52, 56, 63, 68, 69, 70, 72, 78, 79, 80, 81, 84, 85, 99, 100, 101, 105, 108, 113, 114, 119, 121, 125, 126, 127, 128, 131, 132, 135, 140, 141, 142, 143, 149, 155, 156, 157, 158, 159, 162, 163, 164, 165, 166, 169, 170, 184, 185, 188, 190, 191, 196, 199, 233, 235, 236, 237, 248, 249, 251, 255, 257, 260, 261, 263, 265, 267, 271, 272, 273, 274, 276, 277, 278, 281, 282, 283, 293, 295, 306, 319, 323, 326, 330, 334, 338, 340, 347, 353, 354, 355, 359, 366, 368, 369, 370, 371, 374, 388, 397, 426, 429, 430, 431, 432, 433, 434, 435, 439, 442, 444, 446, 448, 449], "add": [2, 3, 4, 6, 26, 32, 36, 37, 39, 44, 45, 49, 51, 56, 63, 66, 67, 68, 69, 70, 73, 75, 78, 79, 80, 98, 100, 105, 108, 109, 119, 120, 123, 124, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 191, 209, 211, 238, 241, 251, 274, 278, 287, 317, 333, 402, 431, 432, 433, 434, 435, 436, 437, 438, 439, 442, 443, 444, 446, 448], "string": [2, 23, 24, 25, 32, 39, 44, 51, 56, 58, 65, 66, 67, 73, 78, 84, 85, 95, 100, 125, 128, 131, 135, 142, 143, 147, 153, 155, 156, 159, 164, 165, 166, 181, 199, 209, 219, 232, 238, 246, 251, 274, 278, 315, 318, 319, 320, 332, 387, 405, 425, 429, 431, 432, 446], "element": [2, 3, 16, 17, 20, 22, 23, 24, 25, 26, 28, 30, 45, 46, 47, 48, 51, 52, 54, 60, 62, 63, 64, 68, 69, 70, 71, 78, 79, 80, 83, 85, 99, 100, 101, 102, 105, 106, 108, 113, 114, 119, 121, 125, 128, 131, 135, 142, 143, 152, 155, 156, 159, 164, 165, 166, 184, 191, 196, 199, 220, 229, 233, 234, 253, 258, 259, 272, 273, 276, 309, 310, 315, 318, 322, 323, 327, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 347, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 397, 425, 429, 431, 435, 437, 446, 449], "30": [2, 3, 70, 78, 113, 114, 187, 214, 298, 299, 386, 390, 393, 395, 437, 443, 444, 446], "none": [2, 3, 8, 12, 13, 15, 16, 17, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 108, 111, 113, 114, 115, 117, 119, 121, 125, 128, 131, 132, 134, 135, 142, 143, 146, 147, 148, 149, 153, 154, 155, 156, 157, 158, 159, 164, 165, 166, 167, 168, 169, 170, 171, 173, 175, 176, 177, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 202, 206, 208, 209, 211, 212, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 246, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 295, 296, 297, 303, 305, 306, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 325, 326, 327, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 366, 367, 368, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393, 394, 400, 401, 402, 403, 404, 405, 406, 410, 411, 412, 413, 415, 416, 418, 419, 420, 424, 426, 429, 430, 432, 433, 444, 446, 448], "int": [2, 3, 13, 16, 17, 18, 20, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 95, 98, 99, 100, 101, 102, 105, 106, 107, 108, 109, 111, 113, 114, 115, 119, 120, 121, 123, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 140, 141, 142, 143, 147, 148, 149, 150, 151, 155, 156, 157, 158, 159, 161, 164, 165, 166, 169, 170, 171, 176, 184, 186, 187, 188, 190, 191, 192, 193, 195, 197, 199, 201, 206, 207, 209, 213, 214, 215, 217, 219, 220, 223, 230, 231, 232, 235, 238, 239, 241, 243, 246, 251, 253, 254, 255, 258, 259, 260, 261, 263, 265, 266, 268, 269, 270, 271, 272, 273, 275, 276, 277, 279, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 293, 295, 296, 297, 298, 299, 301, 302, 303, 305, 306, 314, 315, 316, 318, 319, 321, 323, 333, 334, 335, 342, 344, 345, 350, 351, 352, 353, 354, 358, 359, 368, 370, 371, 373, 374, 377, 378, 379, 380, 381, 382, 383, 384, 385, 387, 388, 390, 393, 395, 397, 398, 399, 401, 403, 406, 408, 418, 419, 420, 433, 444, 446], "entri": [2, 3, 16, 17, 22, 28, 32, 36, 37, 39, 41, 44, 45, 46, 47, 48, 49, 51, 56, 62, 64, 65, 66, 67, 71, 73, 75, 76, 78, 84, 85, 92, 113, 114, 125, 128, 129, 130, 131, 134, 135, 136, 137, 142, 143, 147, 148, 155, 156, 159, 161, 164, 165, 166, 169, 170, 182, 183, 187, 191, 193, 194, 196, 197, 198, 200, 202, 203, 206, 210, 212, 213, 215, 217, 219, 222, 224, 227, 229, 231, 232, 233, 234, 236, 239, 241, 243, 246, 248, 251, 274, 282, 283, 314, 315, 318, 320, 321, 334, 336, 356, 368, 369, 370, 371, 424, 429, 431, 432, 434, 435, 436, 438, 442, 443, 444, 445, 446, 448, 449], "onto": [2, 8, 45, 46, 47, 48, 60, 62, 64, 71, 85, 176, 200, 253, 295, 310, 315, 316, 319, 320, 321, 322, 323, 432, 444], "__setitem__": 2, "indic": [2, 3, 8, 16, 17, 18, 20, 22, 23, 24, 25, 26, 28, 30, 31, 33, 34, 35, 36, 37, 40, 41, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 68, 69, 70, 71, 72, 74, 75, 76, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 95, 98, 105, 106, 108, 109, 111, 112, 113, 114, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 140, 141, 142, 143, 150, 151, 155, 156, 159, 161, 164, 165, 166, 169, 170, 183, 184, 191, 192, 232, 233, 234, 235, 241, 249, 251, 252, 258, 259, 279, 282, 283, 285, 295, 318, 320, 321, 329, 333, 334, 336, 337, 338, 340, 342, 343, 344, 349, 351, 353, 354, 355, 356, 358, 359, 366, 410, 420, 423, 426, 431, 432, 433, 437, 438, 439, 444, 446, 449], "without": [2, 3, 7, 9, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 66, 67, 71, 72, 73, 74, 75, 78, 83, 85, 86, 87, 88, 89, 90, 113, 114, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 169, 170, 185, 187, 198, 202, 237, 240, 251, 272, 273, 276, 277, 312, 313, 333, 334, 336, 337, 338, 340, 341, 342, 349, 353, 354, 355, 356, 358, 359, 367, 368, 369, 370, 371, 372, 416, 423, 424, 429, 430, 431, 433, 434, 435, 436, 437, 442, 443, 444, 446, 449], "updat": [2, 3, 4, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 32, 38, 39, 44, 45, 46, 47, 48, 51, 56, 62, 63, 64, 66, 67, 71, 72, 73, 78, 79, 85, 105, 106, 125, 128, 131, 135, 142, 143, 149, 155, 156, 157, 158, 159, 164, 165, 166, 167, 168, 183, 185, 187, 188, 198, 201, 202, 209, 221, 232, 233, 239, 241, 245, 248, 249, 251, 253, 255, 256, 271, 272, 274, 278, 281, 286, 295, 319, 320, 321, 322, 323, 333, 334, 335, 336, 337, 338, 340, 342, 343, 344, 348, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 366, 368, 369, 370, 371, 372, 401, 406, 408, 411, 412, 415, 416, 422, 426, 430, 431, 432, 433, 436, 439, 442, 443, 444, 446, 449], "length": [2, 25, 30, 31, 32, 33, 34, 35, 36, 37, 40, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 64, 65, 66, 72, 74, 75, 81, 83, 84, 85, 86, 87, 88, 89, 90, 95, 106, 113, 114, 117, 125, 128, 131, 135, 140, 141, 142, 143, 155, 156, 159, 164, 165, 166, 184, 191, 199, 212, 220, 248, 255, 258, 259, 261, 263, 265, 272, 276, 279, 281, 284, 285, 310, 322, 327, 397, 403, 429, 431, 432, 437, 439, 444, 446, 449], "cursor": [2, 63, 68, 69, 70, 79, 80, 108], "afterward": [2, 32, 39, 44, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 286, 289, 290, 293, 295, 298, 299, 301, 306, 314, 316, 318, 321, 326, 329, 442, 449], "tell": [2, 3, 4, 7, 125, 157, 158, 239, 429, 432, 437, 442, 443], "our": [2, 3, 7, 8, 11, 23, 51, 70, 191, 388, 425, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 445, 446, 448], "far": [2, 63, 68, 69, 70, 72, 79, 80, 108, 275, 303, 304, 439, 444, 449], "restrict": [2, 3, 425, 430, 445, 446, 449], "empti": [2, 3, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 102, 108, 125, 128, 131, 135, 141, 142, 143, 152, 155, 156, 159, 164, 165, 166, 176, 198, 199, 202, 219, 221, 235, 241, 244, 246, 249, 251, 322, 392, 429, 444], "64": [2, 3, 45, 46, 47, 48, 62, 64, 71, 85, 108, 191, 223, 261, 262, 270, 274, 278, 285, 286, 296, 366, 429, 430, 431, 432, 433, 435, 439, 441, 444, 446, 448, 449], "dtype": [2, 3, 16, 17, 20, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 95, 99, 100, 101, 105, 106, 113, 114, 121, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 140, 141, 142, 143, 146, 147, 148, 149, 152, 153, 154, 155, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 169, 170, 171, 176, 179, 182, 183, 184, 185, 188, 189, 195, 198, 199, 200, 201, 202, 203, 204, 209, 211, 212, 215, 217, 219, 221, 222, 224, 228, 231, 232, 234, 236, 237, 240, 241, 242, 244, 246, 251, 255, 257, 267, 268, 272, 273, 274, 276, 277, 278, 281, 287, 288, 295, 296, 297, 305, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 325, 327, 330, 333, 334, 336, 337, 338, 340, 341, 342, 349, 353, 354, 355, 356, 358, 359, 366, 368, 369, 370, 371, 374, 424, 433, 441, 444, 446, 448, 449], "unit8": 2, "img": 2, "randint": [2, 84, 108, 199, 237, 446], "255": [2, 108, 237, 446], "uint8": [2, 3, 36, 45, 46, 47, 48, 62, 64, 71, 85, 129, 130, 147, 148, 203, 209, 217, 237, 430, 446], "next": [2, 3, 4, 8, 16, 17, 20, 28, 36, 37, 39, 41, 43, 49, 51, 56, 63, 68, 69, 70, 72, 75, 76, 78, 79, 80, 85, 95, 96, 97, 104, 106, 108, 113, 114, 119, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 140, 141, 142, 143, 147, 148, 149, 153, 154, 155, 156, 159, 162, 163, 164, 165, 166, 167, 169, 170, 176, 182, 184, 187, 188, 190, 191, 196, 198, 199, 202, 203, 204, 209, 210, 211, 212, 213, 217, 221, 222, 224, 227, 228, 232, 234, 236, 239, 242, 247, 248, 251, 255, 273, 274, 277, 278, 281, 299, 318, 328, 330, 333, 334, 336, 337, 338, 340, 341, 342, 343, 349, 353, 354, 355, 356, 358, 359, 366, 367, 368, 369, 370, 371, 372, 388, 400, 401, 404, 430, 432, 433, 435, 439, 444, 445, 448, 449], "automat": [2, 3, 5, 12, 19, 33, 51, 83, 86, 99, 101, 108, 114, 121, 125, 128, 131, 134, 135, 136, 142, 143, 155, 156, 157, 158, 159, 164, 165, 166, 187, 198, 202, 215, 234, 247, 249, 258, 274, 278, 310, 318, 319, 323, 386, 396, 424, 429, 431, 434, 435, 442, 443, 444, 446, 448], "hand": [2, 3, 7, 26, 36, 442, 443, 444], "look": [2, 3, 5, 7, 8, 32, 39, 44, 56, 66, 67, 73, 78, 106, 125, 128, 131, 135, 142, 143, 146, 155, 156, 157, 158, 159, 164, 165, 166, 209, 219, 220, 244, 251, 256, 319, 323, 324, 325, 425, 431, 432, 433, 434, 435, 436, 437, 438, 439, 442, 443, 444, 445, 446, 448, 449], "assum": [2, 3, 6, 15, 16, 17, 18, 20, 21, 30, 31, 33, 34, 35, 36, 37, 40, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 72, 73, 74, 75, 79, 80, 83, 86, 87, 88, 89, 90, 96, 97, 104, 113, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 176, 190, 193, 197, 199, 206, 219, 220, 227, 234, 241, 244, 246, 257, 274, 278, 306, 309, 326, 338, 342, 343, 356, 366, 377, 378, 379, 380, 382, 383, 384, 385, 388, 429, 431, 441, 444], "leav": [2, 30, 31, 33, 34, 35, 36, 37, 40, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 62, 64, 70, 71, 74, 75, 83, 85, 86, 87, 88, 89, 90, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 171, 183, 228, 425, 429, 437, 446], "match": [2, 3, 6, 8, 14, 16, 17, 20, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 65, 66, 67, 68, 69, 70, 73, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 96, 108, 117, 125, 128, 129, 130, 131, 132, 134, 135, 136, 137, 142, 143, 155, 156, 159, 164, 165, 166, 184, 188, 189, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 203, 204, 206, 208, 210, 211, 212, 213, 215, 217, 221, 222, 223, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 251, 258, 259, 266, 274, 278, 279, 284, 285, 302, 310, 314, 315, 319, 320, 322, 323, 326, 327, 334, 336, 342, 350, 352, 354, 356, 403, 408, 424, 425, 429, 431, 433, 441, 443, 444, 446, 449], "don": [2, 3, 4, 6, 7, 30, 31, 33, 34, 35, 36, 37, 40, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 191, 240, 430, 431, 433, 437, 446, 448, 449], "throw": [2, 32, 39, 44, 45, 46, 47, 48, 56, 62, 64, 66, 67, 71, 73, 78, 85, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251, 449], "rb_td": 2, "batch_siz": [2, 3, 8, 16, 17, 20, 28, 36, 39, 41, 45, 46, 47, 48, 51, 58, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 76, 78, 79, 80, 81, 84, 85, 95, 99, 100, 101, 105, 106, 107, 108, 113, 114, 119, 121, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 179, 182, 183, 184, 188, 190, 191, 195, 198, 199, 202, 203, 204, 209, 217, 221, 222, 224, 228, 231, 232, 234, 240, 241, 242, 251, 255, 257, 265, 266, 267, 268, 271, 274, 278, 281, 295, 296, 297, 305, 306, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 325, 326, 327, 333, 334, 336, 337, 338, 340, 341, 342, 349, 353, 354, 355, 356, 358, 359, 366, 388, 397, 403, 424, 425, 429, 430, 431, 432, 437, 442, 443, 444, 446, 448, 449], "max": [2, 28, 60, 64, 79, 84, 95, 105, 106, 119, 141, 201, 235, 295, 334, 335, 336, 342, 352, 354, 356, 429, 431, 432, 433, 439], "label": [2, 64, 65, 72, 84, 85, 429, 442, 446], "100": [2, 16, 17, 20, 22, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 67, 68, 69, 70, 73, 74, 75, 78, 79, 80, 81, 83, 86, 87, 88, 89, 90, 99, 101, 108, 113, 114, 119, 125, 126, 127, 128, 131, 135, 140, 141, 142, 143, 155, 156, 159, 164, 165, 166, 194, 199, 203, 215, 224, 229, 232, 251, 282, 283, 284, 316, 318, 388, 398, 416, 430, 431, 433, 434, 436, 439, 441, 442, 443, 444, 446, 448, 449], "rb_pytre": 2, "randn": [2, 3, 63, 66, 68, 69, 70, 79, 80, 99, 100, 101, 106, 108, 113, 114, 121, 125, 176, 190, 215, 257, 260, 261, 265, 267, 268, 272, 273, 276, 277, 282, 283, 284, 291, 293, 297, 310, 311, 312, 313, 314, 315, 319, 320, 322, 325, 326, 327, 333, 334, 336, 337, 338, 340, 341, 342, 349, 351, 353, 354, 355, 356, 358, 359, 368, 369, 370, 371, 405, 424, 433, 446, 448, 449], "c": [2, 3, 6, 7, 36, 39, 45, 46, 47, 48, 62, 64, 66, 70, 71, 78, 79, 80, 85, 100, 215, 237, 242, 276, 277, 430, 446], "zero": [2, 3, 4, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 99, 101, 108, 113, 114, 119, 121, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 176, 182, 188, 190, 192, 198, 199, 201, 202, 215, 221, 224, 231, 249, 251, 254, 255, 262, 263, 264, 270, 271, 272, 273, 274, 276, 277, 278, 282, 283, 285, 286, 295, 296, 305, 321, 323, 329, 333, 334, 336, 337, 338, 340, 341, 342, 349, 353, 354, 355, 356, 358, 359, 366, 368, 369, 370, 371, 374, 432, 433, 446, 448, 449], "assert": [2, 3, 6, 20, 28, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 66, 68, 69, 70, 71, 73, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 108, 119, 125, 128, 131, 135, 138, 142, 143, 155, 156, 159, 164, 165, 166, 171, 176, 181, 184, 188, 191, 194, 198, 202, 211, 222, 229, 241, 248, 257, 285, 306, 368, 369, 370, 371, 396, 397, 405, 437, 441, 446, 449], "len": [2, 30, 31, 33, 34, 35, 36, 37, 40, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 63, 68, 69, 70, 74, 75, 79, 80, 83, 86, 87, 88, 89, 90, 99, 101, 108, 121, 199, 217, 258, 259, 279, 285, 429, 433, 437, 439, 442, 444, 445, 446, 448], "ambigu": [2, 63, 68, 69, 70, 79, 80, 108], "signatur": [2, 16, 17, 20, 22, 23, 24, 25, 26, 32, 39, 44, 51, 56, 63, 66, 67, 68, 69, 70, 73, 78, 79, 80, 85, 108, 117, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 179, 188, 195, 209, 219, 234, 240, 241, 244, 246, 251, 322, 425, 429, 433, 434, 444], "deal": [2, 3, 63, 68, 69, 70, 79, 80, 108, 351, 425, 429, 431, 443, 446], "interpret": [2, 3, 63, 68, 69, 70, 79, 80, 108, 430], "put": [2, 63, 68, 69, 70, 79, 80, 108, 135, 147, 148, 166, 169, 170, 199, 248, 395, 420, 424, 430, 431, 432, 434, 442, 444], "solv": [2, 4, 7, 9, 10, 63, 68, 69, 70, 79, 80, 108, 423, 429, 430, 431, 437, 439, 442, 443, 444, 446], "clear": [2, 3, 11, 32, 36, 37, 39, 44, 49, 50, 56, 63, 66, 67, 68, 69, 70, 73, 74, 75, 78, 79, 80, 108, 125, 128, 131, 135, 139, 142, 143, 155, 156, 159, 164, 165, 166, 251, 398, 434, 437], "cut": [2, 63, 68, 69, 70, 79, 80, 108], "distinct": [2, 3, 63, 68, 69, 70, 79, 80, 108, 188, 191, 436, 441], "view": [2, 3, 8, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 43, 44, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 67, 68, 69, 70, 73, 74, 75, 78, 79, 80, 83, 86, 87, 88, 89, 90, 108, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 185, 251, 268, 272, 276, 279, 434, 444, 446, 448, 449], "through": [2, 3, 4, 5, 8, 16, 17, 20, 22, 23, 25, 26, 36, 37, 49, 63, 67, 68, 69, 70, 73, 75, 79, 80, 85, 108, 125, 126, 127, 128, 131, 134, 135, 136, 139, 140, 141, 142, 143, 146, 155, 156, 157, 158, 159, 164, 165, 166, 187, 196, 198, 199, 202, 220, 252, 257, 279, 296, 318, 319, 323, 324, 325, 329, 332, 351, 368, 369, 370, 371, 396, 424, 425, 429, 430, 431, 434, 436, 441, 442, 443, 444, 445, 446, 449], "collate_fn": [2, 63, 68, 69, 70, 78, 79, 80, 108, 446, 448], "__init__": [2, 3, 7, 131, 149, 167, 181, 185, 187, 188, 190, 191, 192, 195, 196, 198, 199, 200, 202, 203, 204, 205, 207, 210, 211, 218, 220, 221, 222, 224, 227, 228, 231, 232, 233, 234, 235, 236, 238, 239, 240, 244, 245, 247, 248, 251, 255, 266, 268, 272, 276, 281, 327, 334, 336, 337, 342, 349, 354, 356, 358, 359, 426, 444, 449], "default": [2, 3, 10, 11, 12, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 97, 99, 100, 101, 105, 106, 108, 109, 111, 112, 113, 114, 119, 121, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 140, 141, 142, 143, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 164, 165, 166, 167, 168, 169, 170, 171, 176, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 224, 226, 227, 228, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 293, 295, 297, 298, 299, 301, 302, 303, 304, 309, 310, 314, 315, 316, 318, 319, 320, 321, 322, 323, 326, 327, 329, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 361, 362, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 416, 420, 422, 425, 426, 429, 430, 431, 432, 435, 442, 445, 446, 448, 449], "major": 2, "worri": [2, 81, 449], "even": [2, 3, 4, 8, 11, 17, 23, 24, 25, 26, 30, 31, 33, 34, 35, 36, 37, 40, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 78, 83, 86, 87, 88, 89, 90, 99, 100, 101, 102, 106, 113, 115, 117, 121, 125, 128, 131, 132, 135, 139, 142, 143, 155, 156, 159, 164, 165, 166, 183, 187, 429, 431, 434, 442, 443, 444, 449], "though": [2, 4, 11, 30, 31, 33, 34, 35, 36, 37, 40, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 279, 431, 442, 443], "too": [2, 7, 16, 17, 20, 22, 23, 24, 25, 26, 30, 31, 33, 34, 35, 36, 37, 39, 40, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 65, 66, 72, 74, 75, 78, 83, 86, 87, 88, 89, 90, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 185, 187, 188, 190, 191, 192, 195, 196, 200, 203, 204, 205, 207, 210, 211, 214, 218, 220, 221, 222, 224, 227, 228, 231, 232, 233, 234, 235, 236, 238, 239, 240, 244, 245, 247, 248, 251, 275, 303, 304, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 349, 350, 351, 353, 354, 355, 356, 358, 359, 366, 368, 369, 370, 371, 430, 435, 438, 444, 446, 449], "latter": [2, 23, 24, 25, 32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 286, 289, 290, 293, 295, 298, 299, 301, 306, 314, 316, 318, 321, 326, 329, 353, 418, 419], "inv": [2, 3, 184, 194, 201, 204, 209, 217, 224, 229, 231, 236, 240, 243, 251, 444], "obvious": [2, 433], "ignor": [2, 16, 17, 20, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 65, 66, 67, 73, 74, 75, 78, 81, 83, 86, 87, 88, 89, 90, 97, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 201, 204, 228, 237, 251, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 282, 283, 286, 289, 290, 293, 295, 298, 299, 301, 306, 314, 316, 318, 321, 326, 329, 368, 446], "multithread": [2, 3, 63, 70, 79, 80, 95, 150, 151, 437, 446], "thread": [2, 3, 16, 17, 22, 45, 46, 47, 48, 62, 64, 71, 85, 125, 126, 127, 140, 141, 155, 164, 165, 249], "prefetch": [2, 63, 70, 79, 80, 95, 429, 430, 432, 446], "advis": [2, 11, 438, 449], "benchmark": [2, 3, 9, 126, 127, 140, 141], "techniqu": [2, 8, 155, 164, 430, 433, 437, 446], "real": [2, 5, 323, 425, 432, 433, 444, 445], "life": [2, 203, 445], "adopt": [2, 3, 5, 429, 449], "throughput": [2, 9, 141, 429], "practic": [2, 3, 4, 5, 8, 58, 240, 275, 303, 304, 332, 422, 423, 429, 430, 431, 432, 433, 436, 442, 443, 445, 449], "constant": [2, 11, 38, 191, 215, 233, 426, 429, 431, 432, 449], "throughout": [2, 3, 333, 334, 335, 341, 342, 343, 344, 345, 346, 349, 350, 351, 353, 354, 355, 356, 359, 366, 431, 442, 449], "further": [2, 3, 5, 29, 429, 431, 433, 434], "refin": [2, 333, 334, 336, 337, 338, 340, 342, 343, 344, 349, 351, 353, 354, 355, 356, 358, 359, 366], "coupl": [2, 432, 435, 436, 444, 446], "get": [2, 3, 4, 6, 7, 8, 9, 12, 36, 37, 39, 45, 46, 47, 48, 49, 51, 62, 63, 64, 66, 67, 70, 71, 73, 75, 78, 85, 99, 101, 106, 113, 114, 115, 117, 119, 121, 125, 128, 131, 132, 135, 142, 143, 155, 156, 159, 164, 165, 166, 185, 190, 192, 198, 201, 202, 211, 215, 220, 233, 234, 237, 241, 248, 249, 271, 310, 319, 320, 323, 330, 368, 369, 370, 371, 372, 388, 392, 424, 425, 428, 429, 430, 431, 432, 433, 440, 442, 443, 444, 446, 447, 448, 449], "first_elt": 2, "128": [2, 114, 126, 127, 140, 141, 262, 265, 430, 432, 433, 439, 442, 445, 446], "wa": [2, 3, 5, 7, 36, 37, 39, 49, 51, 63, 66, 68, 69, 70, 75, 78, 79, 80, 85, 106, 108, 112, 113, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 171, 183, 191, 209, 241, 276, 333, 335, 348, 350, 353, 355, 357, 374, 425, 430, 431, 434, 435, 441, 442, 446, 448], "print": [2, 3, 6, 7, 16, 17, 20, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 73, 74, 75, 76, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 95, 105, 106, 108, 113, 114, 119, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 152, 153, 154, 155, 156, 157, 158, 159, 162, 163, 164, 165, 166, 169, 170, 175, 176, 181, 182, 183, 184, 187, 188, 191, 192, 196, 198, 199, 200, 201, 202, 210, 215, 221, 222, 224, 227, 232, 234, 235, 236, 237, 248, 251, 258, 259, 261, 262, 263, 264, 265, 268, 270, 271, 274, 278, 279, 282, 283, 284, 285, 291, 294, 295, 297, 310, 311, 312, 313, 314, 315, 318, 319, 320, 322, 323, 325, 327, 330, 351, 386, 416, 424, 426, 430, 431, 432, 433, 434, 435, 436, 437, 438, 441, 442, 443, 444, 445, 446, 448, 449], "influenti": 2, "especi": [2, 3, 7, 8, 192], "larger": [2, 4, 78, 274, 278, 341, 349, 448], "volum": 2, "due": [2, 3, 5, 28, 436, 445, 446, 449], "memorymappedtensor": [2, 41, 62, 64, 76, 84, 99, 390, 437], "well": [2, 3, 8, 26, 28, 32, 39, 44, 56, 63, 65, 66, 67, 70, 73, 78, 79, 80, 83, 106, 111, 115, 122, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 240, 241, 251, 252, 256, 261, 276, 298, 299, 323, 351, 353, 358, 372, 424, 429, 430, 432, 433, 434, 435, 436, 438, 445, 446, 448, 449], "specifi": [2, 12, 13, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 67, 68, 69, 70, 73, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 108, 125, 128, 131, 135, 142, 143, 147, 148, 155, 156, 157, 158, 159, 164, 165, 166, 167, 168, 169, 170, 197, 198, 200, 202, 227, 230, 233, 238, 242, 243, 251, 252, 255, 276, 322, 323, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 395, 424, 429, 431, 432, 433, 437, 442], "file": [2, 6, 7, 8, 45, 46, 47, 48, 62, 64, 71, 85, 97, 169, 387, 388, 390, 406, 426, 428, 430, 442, 446, 447], "locat": [2, 7, 45, 46, 47, 48, 62, 64, 71, 84, 85, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 179, 197, 203, 215, 226, 249, 275, 303, 304, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 429, 430, 431, 438, 442, 443, 446], "improv": [2, 4, 11, 207, 333, 425, 433, 442, 443, 446], "failur": [2, 4], "recoveri": 2, "were": [2, 7, 16, 17, 20, 22, 23, 24, 25, 26, 155, 164, 209, 431, 442, 446], "found": [2, 3, 6, 7, 10, 16, 17, 20, 22, 26, 28, 32, 36, 37, 39, 44, 45, 46, 47, 48, 49, 51, 56, 62, 64, 66, 67, 71, 73, 75, 78, 84, 85, 113, 114, 125, 128, 129, 130, 131, 134, 135, 136, 139, 142, 143, 155, 156, 159, 164, 165, 166, 183, 185, 191, 212, 224, 227, 235, 248, 249, 251, 271, 284, 285, 319, 323, 350, 351, 353, 425, 429, 430, 432, 433, 434, 436, 438, 444, 446, 448], "rough": 2, "1x": 2, "83x": 2, "44x": 2, "long": [2, 3, 16, 17, 20, 22, 23, 24, 25, 26, 30, 31, 33, 34, 35, 36, 37, 40, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 65, 74, 75, 83, 86, 87, 88, 89, 90, 99, 106, 153, 154, 201, 239, 254, 276, 277, 341, 432, 433, 437, 446], "sharabl": [2, 155, 164], "collabor": 2, "rather": [2, 4, 117, 142, 153, 154, 199, 222, 249, 424, 425, 429, 430, 431, 434, 436, 442, 443, 446], "incur": [2, 126, 127, 140, 141], "transmiss": 2, "content": [2, 3, 8, 20, 36, 37, 45, 46, 47, 48, 49, 62, 63, 64, 70, 71, 75, 79, 80, 85, 112, 113, 114, 125, 128, 131, 134, 135, 136, 142, 143, 150, 155, 156, 159, 164, 165, 166, 221, 258, 259, 279, 284, 285, 319, 351, 431, 444, 448], "map": [2, 3, 8, 14, 15, 18, 21, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 70, 71, 73, 74, 75, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 95, 97, 99, 104, 105, 106, 125, 128, 131, 135, 142, 143, 146, 147, 148, 155, 156, 157, 158, 159, 162, 163, 164, 165, 166, 169, 170, 172, 176, 184, 188, 189, 191, 192, 193, 194, 195, 197, 198, 200, 201, 202, 203, 204, 206, 208, 209, 210, 211, 212, 213, 215, 217, 221, 222, 223, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 247, 248, 249, 251, 268, 310, 311, 312, 313, 315, 319, 320, 322, 323, 325, 326, 327, 328, 336, 356, 366, 401, 422, 424, 425, 429, 430, 431, 432, 435, 436, 445], "writer": [2, 63, 68, 69, 70, 79, 80, 98, 101, 106, 108, 109, 113, 119, 120, 121, 124, 431, 446], "tensordictroundrobinwrit": [2, 80, 108], "goe": [2, 4, 85, 157, 158, 429, 431, 442, 443, 449], "prioritizedsampl": [2, 63, 68, 69, 70, 79, 80, 106, 108, 338, 343, 366, 429, 446], "access": [2, 3, 7, 8, 11, 14, 21, 32, 39, 44, 56, 63, 66, 67, 73, 78, 100, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 179, 191, 219, 240, 244, 251, 420, 423, 429, 434, 442, 443, 444, 446, 448], "tensordictreplaybuff": [2, 63, 68, 69, 70, 79, 105, 106, 108, 113, 114, 119, 190, 191, 403, 416, 422, 429, 430, 432, 446], "mp": [2, 23, 24, 25, 132, 248, 249], "def": [2, 3, 27, 32, 39, 44, 56, 63, 66, 67, 68, 69, 70, 73, 78, 79, 80, 108, 125, 128, 131, 132, 135, 142, 143, 149, 155, 156, 159, 164, 165, 166, 179, 181, 185, 187, 188, 190, 191, 192, 195, 196, 198, 199, 200, 202, 203, 204, 205, 207, 210, 211, 218, 220, 221, 222, 224, 227, 228, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 244, 245, 247, 248, 251, 252, 255, 268, 272, 273, 276, 277, 281, 286, 318, 319, 327, 334, 336, 337, 342, 349, 351, 354, 356, 358, 359, 386, 396, 425, 426, 429, 430, 433, 441, 442, 443, 444, 446, 448, 449], "td": [2, 3, 16, 17, 20, 22, 23, 24, 25, 26, 36, 39, 41, 45, 46, 47, 48, 51, 62, 63, 64, 66, 68, 69, 70, 71, 76, 78, 79, 80, 85, 99, 108, 119, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 140, 141, 142, 143, 144, 145, 153, 154, 155, 156, 159, 160, 164, 165, 166, 167, 168, 182, 185, 188, 190, 192, 196, 198, 199, 200, 201, 202, 210, 211, 212, 213, 215, 224, 227, 231, 234, 237, 241, 248, 255, 257, 267, 268, 271, 274, 278, 280, 281, 295, 296, 297, 305, 310, 311, 312, 313, 314, 315, 319, 320, 322, 325, 327, 366, 369, 370, 371, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 387, 397, 405, 424, 425, 429, 430, 432, 443, 444, 445, 448], "__name__": [2, 3, 16, 17, 27, 68, 132, 386, 430, 448], "__main__": [2, 3, 16, 17, 27, 68, 132, 386, 448], "21": [2, 51, 85, 113, 114, 155, 157, 158, 164], "proc": 2, "target": [2, 4, 8, 26, 29, 32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 132, 135, 142, 143, 155, 156, 159, 164, 165, 166, 233, 251, 294, 322, 323, 333, 334, 335, 336, 337, 338, 340, 342, 343, 346, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 366, 367, 368, 369, 370, 371, 372, 409, 415, 416, 425, 426, 432, 433, 439, 442, 444], "arg": [2, 3, 16, 17, 20, 22, 23, 24, 25, 26, 31, 32, 33, 34, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 53, 55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 77, 78, 79, 80, 85, 86, 87, 88, 89, 90, 99, 100, 101, 102, 106, 108, 113, 114, 115, 117, 121, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 178, 184, 185, 186, 187, 188, 190, 191, 192, 195, 196, 199, 200, 203, 204, 205, 207, 209, 210, 211, 213, 218, 219, 220, 221, 222, 224, 227, 228, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 251, 253, 255, 257, 258, 259, 266, 267, 271, 274, 278, 279, 280, 281, 295, 306, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 366, 368, 369, 370, 371, 372, 395, 399, 403, 406, 420, 430, 433], "join": [2, 132, 199, 422, 430, 431, 433, 442], "now": [2, 3, 7, 63, 70, 79, 80, 108, 153, 154, 155, 191, 228, 285, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 441, 442, 443, 445, 446, 449], "20": [2, 51, 78, 84, 85, 113, 114, 119, 125, 128, 131, 135, 139, 142, 143, 153, 154, 155, 156, 159, 164, 165, 166, 233, 251, 270, 272, 273, 276, 277, 294, 314, 397, 432, 446, 449], "_data": [2, 444], "remot": [2, 13, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 63, 68, 69, 70, 79, 80, 108, 155, 164, 422, 449], "difficult": [2, 4, 155, 438], "pai": [2, 8, 191, 429], "word": [2, 3, 11, 72, 351, 429, 437, 444, 449], "1m": [2, 409, 429, 431, 432], "doe": [2, 3, 21, 23, 32, 39, 44, 45, 46, 47, 48, 56, 62, 63, 64, 66, 67, 71, 73, 78, 79, 84, 85, 96, 97, 104, 105, 106, 113, 115, 117, 124, 125, 128, 131, 135, 142, 143, 147, 148, 155, 156, 159, 164, 165, 166, 169, 170, 184, 185, 187, 188, 190, 191, 192, 195, 196, 199, 200, 203, 204, 205, 207, 210, 211, 218, 220, 221, 222, 224, 227, 228, 231, 232, 233, 234, 235, 236, 238, 239, 240, 244, 245, 247, 248, 249, 251, 256, 265, 266, 272, 273, 274, 276, 277, 278, 287, 294, 306, 314, 324, 325, 333, 335, 343, 350, 351, 353, 367, 406, 425, 426, 429, 430, 431, 432, 434, 437, 442, 444, 446, 449], "howev": [2, 3, 5, 7, 32, 39, 44, 56, 66, 67, 73, 78, 113, 114, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 185, 187, 188, 190, 191, 192, 195, 196, 200, 203, 204, 205, 207, 209, 210, 211, 218, 220, 221, 222, 224, 227, 228, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 244, 245, 247, 248, 251, 333, 335, 336, 350, 353, 355, 356, 424, 429, 430, 432, 433, 436, 444, 446, 449], "capac": [2, 63, 70, 79, 80, 99, 101, 105, 113, 121, 431, 437], "There": [2, 3, 10, 108, 240, 256, 274, 278, 333, 353, 424, 425, 426, 431, 432, 433, 435, 437, 442, 443, 444, 446, 448, 449], "circumv": 2, "save": [2, 3, 8, 32, 39, 44, 45, 46, 47, 48, 56, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 76, 78, 79, 80, 85, 96, 97, 99, 100, 101, 102, 104, 108, 115, 116, 117, 121, 122, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 247, 251, 387, 388, 390, 395, 406, 426, 433, 437, 438, 439, 442, 443], "convent": [2, 3, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 169, 170, 425, 429, 432, 442, 443, 444], "overridden": [2, 3, 32, 39, 44, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 286, 289, 290, 293, 295, 298, 299, 301, 306, 314, 316, 318, 321, 326, 329, 368, 370, 371, 432, 442], "dim_extend": [2, 63, 70, 79, 80], "obtain": [2, 3, 7, 30, 31, 33, 34, 35, 36, 37, 40, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 72, 74, 75, 83, 86, 87, 88, 89, 90, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 190, 219, 233, 246, 255, 257, 294, 296, 403, 429, 431, 434, 435, 436, 442, 443], "counterpart": [2, 3, 191], "desir": [2, 3, 11, 32, 35, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 180, 186, 188, 195, 196, 215, 217, 219, 220, 234, 240, 241, 244, 246, 251, 258, 259, 266, 279, 285, 310, 315, 316, 319, 320, 321, 322, 323, 424, 429, 433, 442, 443, 444, 446], "diversifi": 2, "offer": [2, 3, 7, 125, 126, 127, 128, 131, 135, 140, 141, 142, 143, 147, 148, 155, 156, 159, 164, 165, 166, 239, 386, 424, 429, 430, 433, 434, 436, 437, 442, 444, 446, 449], "accomplish": [2, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 171, 434], "__especially__": 2, "offlin": [2, 8, 16, 17, 20, 22, 23, 24, 25, 26, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 171, 185, 187, 188, 190, 191, 192, 195, 196, 200, 203, 204, 205, 207, 210, 211, 218, 220, 221, 222, 224, 227, 228, 231, 232, 233, 234, 235, 236, 238, 239, 240, 244, 245, 247, 248, 251, 334, 340, 341, 349, 358, 395, 426, 434, 445, 446], "docstr": [2, 32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251, 434, 435], "detail": [2, 3, 5, 6, 7, 16, 17, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 66, 67, 73, 74, 75, 78, 83, 86, 87, 88, 89, 90, 125, 128, 131, 135, 142, 143, 155, 156, 157, 158, 159, 164, 165, 166, 237, 241, 251, 256, 268, 272, 276, 286, 294, 316, 333, 343, 351, 353, 423, 426, 430, 433, 437, 441, 446], "happi": [2, 433], "concaten": [2, 8, 16, 17, 26, 51, 52, 54, 85, 142, 191, 192, 215, 231, 276, 279, 325, 429, 430, 435, 442, 443, 444, 446, 449], "schedul": [2, 4, 7, 72, 401, 431, 444], "transformedenv": [2, 3, 11, 12, 56, 125, 128, 131, 132, 135, 142, 143, 155, 156, 159, 164, 165, 166, 184, 185, 188, 191, 194, 195, 196, 198, 202, 203, 204, 210, 211, 212, 214, 215, 217, 221, 222, 223, 224, 227, 228, 229, 232, 233, 234, 235, 239, 240, 248, 251, 274, 278, 318, 388, 396, 429, 430, 431, 432, 433, 434, 438, 439, 441, 442, 443, 444, 445, 446, 448, 449], "stepcount": [2, 51, 56, 125, 128, 131, 135, 142, 143, 147, 148, 155, 156, 159, 164, 165, 166, 169, 170, 196, 239, 240, 241, 251, 257, 429, 430, 431, 432, 433, 434, 439, 442, 443, 448], "gymenv": [2, 3, 5, 11, 16, 17, 20, 22, 26, 27, 41, 51, 56, 68, 76, 78, 119, 125, 128, 131, 132, 135, 137, 142, 143, 155, 156, 159, 164, 165, 166, 184, 187, 188, 191, 194, 195, 196, 203, 209, 210, 211, 215, 217, 222, 223, 224, 227, 229, 233, 234, 235, 236, 239, 240, 241, 242, 248, 251, 257, 274, 278, 318, 386, 388, 416, 422, 424, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 445, 446, 448, 449], "randompolici": [2, 16, 17, 20, 22, 23, 24, 25, 26, 27, 56, 191, 224, 422, 437, 446], "cartpol": [2, 3, 11, 41, 56, 76, 78, 125, 128, 129, 130, 131, 132, 135, 142, 143, 155, 156, 159, 164, 165, 166, 187, 188, 191, 227, 233, 248, 251, 318, 386, 430, 432, 435, 437, 438, 439, 446, 449], "v1": [2, 3, 11, 16, 17, 20, 22, 26, 27, 41, 56, 68, 76, 78, 119, 125, 128, 131, 132, 134, 135, 136, 140, 141, 142, 143, 150, 155, 156, 159, 164, 165, 166, 187, 188, 191, 194, 196, 204, 210, 211, 215, 222, 224, 227, 228, 229, 232, 233, 234, 235, 236, 239, 240, 242, 248, 251, 257, 274, 278, 318, 362, 377, 378, 379, 380, 382, 383, 384, 385, 386, 424, 430, 432, 434, 435, 436, 437, 438, 439, 444, 446, 448, 449], "action_spec": [2, 3, 16, 17, 20, 22, 23, 24, 25, 26, 56, 125, 126, 127, 128, 131, 135, 140, 141, 142, 143, 149, 155, 156, 157, 158, 159, 160, 164, 165, 166, 184, 185, 188, 191, 195, 198, 200, 202, 211, 215, 221, 224, 240, 241, 242, 243, 251, 255, 268, 281, 297, 299, 310, 315, 319, 320, 334, 336, 338, 340, 354, 356, 358, 359, 416, 424, 429, 430, 431, 432, 433, 435, 436, 437, 439, 441, 442, 443, 444, 445, 446, 448, 449], "8": [2, 3, 6, 7, 36, 37, 45, 46, 47, 48, 49, 56, 62, 64, 70, 71, 75, 78, 85, 105, 106, 113, 114, 125, 126, 127, 128, 129, 130, 131, 135, 142, 143, 153, 154, 155, 156, 159, 164, 165, 166, 167, 184, 187, 196, 233, 236, 242, 258, 259, 261, 262, 270, 279, 311, 312, 313, 319, 322, 325, 349, 429, 430, 444, 446, 448], "traj_kei": [2, 106, 113, 114, 446], "truncated_kei": [2, 106, 113, 114, 224, 232], "strict_length": [2, 106, 113, 114, 388], "i": [2, 3, 16, 17, 20, 22, 23, 24, 25, 26, 32, 36, 37, 39, 41, 44, 49, 56, 63, 66, 67, 70, 73, 75, 76, 78, 80, 81, 85, 99, 101, 105, 106, 113, 114, 121, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 196, 197, 199, 213, 219, 224, 227, 239, 241, 246, 251, 273, 274, 277, 278, 297, 309, 316, 318, 319, 321, 322, 323, 333, 335, 336, 337, 341, 342, 349, 350, 353, 354, 355, 356, 358, 359, 368, 369, 370, 371, 397, 409, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 442, 443, 444, 446, 448, 449], "enumer": [2, 16, 17, 20, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 66, 67, 70, 73, 74, 75, 76, 78, 80, 83, 86, 87, 88, 89, 90, 114, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251, 360, 425, 429, 430, 431, 432, 439, 442, 446, 448], "break": [2, 5, 16, 17, 20, 26, 32, 39, 44, 56, 66, 67, 68, 70, 73, 78, 80, 95, 106, 113, 114, 119, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 188, 191, 224, 248, 249, 251, 274, 278, 303, 388, 430, 433, 437, 439, 446, 448], "step_count": [2, 16, 17, 20, 56, 125, 128, 131, 135, 140, 141, 142, 143, 155, 156, 159, 164, 165, 166, 196, 232, 251, 431, 432, 433, 434, 439], "32": [2, 27, 36, 63, 68, 69, 70, 79, 80, 108, 114, 141, 162, 163, 169, 170, 191, 209, 258, 259, 260, 261, 262, 264, 265, 270, 279, 284, 285, 289, 290, 293, 296, 305, 366, 386, 430, 432, 433, 435, 436, 444, 445, 446, 448, 449], "33": [2, 32, 36, 39, 44, 56, 66, 67, 73, 78, 108, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251, 258, 259, 279], "34": [2, 258, 259, 279], "35": [2, 258, 259, 279], "36": 2, "37": [2, 190], "38": [2, 7, 51], "39": [2, 140, 141], "40": [2, 78, 140, 141], "41": [2, 113], "11": [2, 10, 28, 51, 60, 78, 84, 85, 99, 100, 101, 105, 114, 121, 132, 184, 237, 251, 255, 281], "12": [2, 7, 10, 51, 78, 99, 101, 114, 121, 140, 141, 155, 162, 163, 164, 251, 388, 446], "13": [2, 5, 78, 113, 114, 161, 247, 251, 252], "14": [2, 6, 78, 113, 114, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 215, 251, 252], "15": [2, 28, 114, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251, 295, 314, 344, 446], "16": [2, 3, 32, 39, 44, 56, 66, 67, 73, 78, 106, 114, 125, 126, 127, 128, 131, 135, 140, 141, 142, 143, 155, 156, 159, 164, 165, 166, 191, 251, 432, 446], "17": [2, 11, 113, 114, 135, 155, 184, 251], "could": [2, 3, 4, 6, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 66, 67, 73, 74, 75, 78, 83, 86, 87, 88, 89, 90, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251, 323, 430, 431, 438, 442, 443, 445, 449], "sai": [2, 32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251, 284, 442, 445, 449], "interleav": 2, "cannot": [2, 3, 4, 7, 16, 17, 20, 22, 23, 24, 25, 26, 27, 36, 54, 60, 70, 79, 80, 101, 102, 106, 109, 113, 114, 121, 125, 128, 131, 134, 135, 136, 139, 142, 143, 155, 156, 159, 164, 165, 166, 198, 202, 220, 227, 239, 284, 285, 320, 333, 336, 353, 430, 431, 432, 433, 442, 443, 444], "suggest": [2, 366, 429, 443], "serialenv": [2, 3, 125, 128, 131, 135, 142, 143, 155, 156, 159, 165, 166, 234, 251, 257, 318, 422, 448, 449], "squeez": [2, 3, 30, 31, 33, 34, 35, 36, 37, 40, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 187, 188, 191, 230, 233, 258, 259, 300, 301, 429, 433, 444, 446], "6": [2, 3, 7, 16, 17, 20, 22, 28, 51, 56, 70, 73, 78, 85, 106, 114, 129, 130, 135, 155, 162, 163, 184, 187, 196, 215, 217, 233, 239, 257, 258, 259, 261, 262, 263, 266, 270, 273, 279, 284, 285, 286, 289, 302, 318, 319, 327, 430, 433, 448], "5": [2, 3, 16, 17, 28, 35, 36, 37, 49, 51, 52, 53, 54, 55, 56, 60, 63, 68, 70, 73, 75, 78, 79, 80, 108, 113, 114, 119, 125, 128, 131, 132, 135, 140, 141, 142, 143, 147, 148, 150, 155, 156, 159, 162, 163, 164, 165, 166, 169, 170, 184, 187, 188, 190, 196, 212, 224, 231, 232, 233, 239, 251, 254, 255, 256, 257, 258, 259, 261, 262, 267, 268, 269, 270, 272, 275, 276, 279, 281, 284, 285, 289, 294, 297, 303, 304, 314, 315, 318, 320, 326, 350, 353, 355, 358, 359, 386, 424, 428, 429, 430, 433, 435, 439, 442, 443, 444, 446, 447, 448, 449], "7": [2, 3, 6, 10, 39, 51, 56, 60, 63, 70, 78, 79, 106, 114, 125, 128, 131, 135, 142, 143, 147, 148, 155, 156, 159, 164, 165, 166, 184, 187, 196, 233, 236, 255, 257, 258, 259, 262, 279, 281, 284, 374, 429, 446, 448], "9": [2, 3, 7, 28, 32, 51, 56, 63, 70, 78, 79, 85, 106, 114, 119, 129, 130, 146, 157, 158, 166, 184, 187, 196, 233, 236, 241, 248, 251, 282, 283, 333, 334, 336, 337, 338, 340, 342, 343, 344, 349, 351, 353, 354, 355, 356, 358, 359, 360, 366, 396, 425, 429, 430, 442, 443], "18": [2, 51, 113, 114, 162, 163, 169, 170, 239, 251, 285], "19": [2, 113, 114, 119, 251, 428, 447], "independ": [2, 16, 17, 20, 22, 23, 24, 25, 26, 155, 164, 206, 213, 234, 243, 256, 285, 309, 333, 353, 425, 426, 429, 430, 443, 446, 448], "congruent": 2, "name": [2, 3, 6, 7, 20, 32, 36, 37, 39, 44, 45, 46, 47, 48, 49, 56, 62, 64, 66, 67, 71, 73, 75, 78, 84, 85, 95, 125, 126, 128, 129, 131, 135, 140, 142, 143, 146, 147, 148, 150, 153, 155, 156, 157, 158, 159, 161, 164, 165, 166, 169, 170, 172, 179, 183, 184, 185, 187, 188, 190, 191, 192, 195, 196, 200, 201, 203, 204, 205, 207, 209, 210, 211, 218, 220, 221, 222, 224, 227, 228, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 244, 245, 247, 248, 251, 252, 274, 278, 315, 320, 333, 334, 335, 336, 341, 342, 343, 344, 345, 346, 349, 350, 351, 353, 354, 355, 356, 359, 366, 368, 370, 371, 372, 386, 390, 392, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 426, 429, 430, 431, 432, 433, 436, 437, 438, 442, 443, 444, 445, 449], "randomcroptensordict": [2, 429], "unlik": [2, 30, 70, 79, 80, 112, 135, 147, 148, 169, 170, 254, 256, 318, 343, 353, 388, 424, 430, 433, 435, 437, 448], "stop": [2, 3, 20, 26, 72, 106, 113, 114, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 431, 437, 442, 443, 448, 449], "signal": [2, 3, 16, 17, 20, 22, 28, 51, 106, 113, 114, 119, 125, 128, 131, 135, 142, 143, 147, 148, 155, 156, 159, 164, 165, 166, 169, 170, 183, 191, 196, 203, 212, 232, 235, 425, 429, 431, 442, 443, 446, 449], "disk": [2, 3, 45, 46, 47, 48, 51, 62, 63, 64, 68, 69, 70, 71, 79, 80, 85, 99, 108, 406, 426, 429, 430, 432, 433, 437, 438, 442, 446], "dump": [2, 3, 11, 41, 45, 46, 47, 48, 62, 63, 64, 68, 69, 70, 71, 76, 79, 80, 85, 97, 99, 100, 101, 102, 108, 115, 117, 121, 386, 387, 388, 438, 439, 442], "load": [2, 6, 7, 16, 17, 20, 22, 32, 39, 41, 44, 45, 46, 47, 48, 56, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 76, 78, 79, 80, 84, 85, 97, 99, 100, 101, 102, 108, 115, 116, 117, 121, 122, 125, 128, 130, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 167, 181, 199, 248, 249, 251, 406, 420, 426, 429, 431, 433, 446], "json": 2, "metadata": [2, 30, 31, 33, 34, 35, 36, 37, 40, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 125, 128, 131, 132, 135, 142, 143, 155, 156, 159, 164, 165, 166, 336, 358, 431, 434, 436, 437, 442, 443, 449], "anticip": [2, 198, 202], "compli": [2, 256, 424], "back": [2, 29, 30, 31, 33, 34, 35, 36, 37, 40, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 63, 74, 75, 83, 86, 87, 88, 89, 90, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 171, 238, 247, 286, 310, 315, 316, 319, 320, 321, 322, 323, 431, 433, 442, 443, 444, 446], "exact": [2, 3, 28, 155, 276], "statu": [2, 3, 131], "prioriti": [2, 4, 63, 79, 80, 99, 100, 101, 102, 105, 106, 115, 117, 121, 336, 337, 338, 340, 341, 342, 343, 349, 354, 356, 358, 359, 366, 426, 429, 430, 446], "heap": 2, "under": [2, 3, 4, 26, 32, 39, 44, 51, 56, 66, 67, 72, 73, 78, 125, 128, 129, 130, 131, 134, 135, 136, 137, 142, 143, 155, 156, 159, 161, 164, 165, 166, 185, 187, 188, 190, 191, 192, 195, 196, 200, 203, 204, 205, 207, 210, 211, 212, 218, 220, 221, 222, 224, 227, 228, 231, 232, 233, 234, 235, 236, 238, 239, 240, 244, 245, 247, 248, 251, 256, 310, 315, 316, 319, 320, 321, 322, 323, 351, 368, 369, 370, 371, 372, 388, 425, 429, 430, 435, 442, 444, 449], "hood": [2, 3, 26, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 256, 444], "naiv": [2, 244, 434], "just": [2, 3, 4, 85, 117, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 140, 141, 142, 143, 146, 150, 151, 153, 154, 155, 156, 157, 158, 159, 161, 164, 165, 166, 167, 168, 183, 187, 194, 234, 252, 285, 397, 426, 429, 430, 431, 432, 433, 434, 435, 437, 442, 443, 444, 446, 448, 449], "public": [2, 69, 116, 219, 246], "serializ": 2, "consum": [2, 112, 114, 318, 430, 431, 437, 443, 446], "much": [2, 3, 8, 16, 17, 22, 63, 79, 105, 106, 155, 164, 350, 353, 431, 433, 434, 438, 442, 443, 444, 446, 449], "duplic": [2, 32, 39, 44, 56, 66, 67, 73, 78, 112, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251, 334, 336, 338, 343, 349, 351, 354, 356, 358, 359, 366], "observ": [2, 3, 8, 16, 17, 20, 22, 26, 29, 41, 51, 56, 68, 76, 78, 85, 96, 97, 104, 106, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 169, 170, 177, 182, 184, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 203, 204, 206, 208, 209, 210, 211, 213, 215, 216, 217, 221, 222, 223, 224, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 251, 257, 260, 261, 262, 263, 264, 265, 268, 271, 274, 278, 284, 289, 290, 293, 294, 295, 297, 298, 310, 311, 312, 313, 314, 315, 318, 319, 320, 327, 328, 333, 334, 335, 336, 337, 338, 340, 341, 342, 345, 349, 350, 353, 354, 355, 356, 358, 359, 366, 368, 369, 370, 371, 372, 386, 388, 416, 424, 425, 426, 430, 431, 432, 433, 434, 435, 436, 438, 439, 441, 442, 443, 444, 446, 448, 449], "plu": [2, 16, 17, 22, 72, 155, 164, 444], "enabl": [2, 7, 8, 99, 101, 112, 121, 188, 274, 278, 295, 318, 386, 388, 401, 431, 434, 442, 443, 444, 446], "three": [2, 30, 31, 35, 40, 52, 53, 54, 55, 60, 61, 66, 95, 336, 424, 426, 431, 433, 434, 435, 442, 443, 444, 446, 449], "flatstoragecheckpoint": 2, "discard": [2, 3, 84, 135, 182, 244, 387, 446, 449], "compress": 2, "At": [2, 236, 271, 280, 430, 431, 432, 437, 441, 444, 445], "correct": [2, 4, 45, 46, 47, 48, 62, 64, 71, 85, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 191, 211, 409, 431, 432], "addit": [2, 3, 4, 15, 18, 21, 32, 39, 44, 56, 58, 66, 67, 73, 78, 85, 125, 128, 131, 132, 135, 142, 143, 155, 156, 159, 164, 165, 166, 169, 191, 195, 219, 234, 238, 240, 241, 244, 246, 251, 253, 272, 314, 318, 322, 332, 351, 368, 386, 388, 425, 429, 430, 433, 434, 442, 443, 446], "nestedstoragecheckpoint": 2, "represent": [2, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 66, 67, 73, 74, 75, 78, 83, 85, 86, 87, 88, 89, 90, 100, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 219, 244, 246, 251, 333, 353, 429, 444, 445, 449], "appar": [2, 3, 399], "h5storagecheckpoint": 2, "h5db": 2, "space": [2, 9, 30, 31, 33, 34, 35, 36, 37, 40, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 96, 97, 104, 125, 128, 131, 134, 135, 136, 142, 143, 155, 156, 159, 164, 165, 166, 176, 179, 184, 194, 201, 209, 212, 234, 242, 253, 259, 265, 268, 284, 290, 295, 297, 310, 315, 316, 319, 320, 321, 322, 323, 325, 326, 327, 330, 333, 338, 340, 341, 342, 353, 358, 359, 366, 424, 425, 430, 431, 432, 433, 434, 435, 436, 442, 443, 444, 449], "assumpt": [2, 3, 83, 444, 446], "accur": [2, 7, 430, 444, 446], "truncat": [2, 3, 16, 17, 20, 22, 41, 43, 45, 51, 56, 57, 65, 76, 78, 81, 84, 96, 97, 104, 106, 113, 114, 125, 128, 129, 130, 131, 134, 135, 136, 142, 143, 147, 148, 155, 156, 157, 158, 159, 164, 165, 166, 167, 169, 170, 183, 184, 199, 203, 204, 209, 214, 221, 224, 228, 232, 234, 241, 242, 251, 274, 278, 304, 318, 374, 429, 431, 434, 442, 449], "marl": [2, 146, 172, 191, 231, 235, 284, 285, 286, 342, 356, 425, 434, 442, 443], "extra": [2, 10, 32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 182, 191, 248, 249, 251, 395, 424, 431, 432, 446], "fail": [2, 7, 27, 30, 31, 33, 34, 35, 36, 37, 40, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 171, 185], "concret": [2, 429, 431], "set_se": [2, 3, 16, 17, 20, 22, 26, 41, 51, 56, 76, 78, 125, 126, 127, 128, 131, 135, 140, 141, 142, 143, 149, 155, 156, 159, 164, 165, 166, 187, 196, 215, 222, 227, 233, 235, 241, 251, 433, 437, 439, 444, 448, 449], "manual_se": [2, 3, 30, 41, 52, 53, 63, 70, 76, 78, 79, 80, 100, 113, 114, 125, 126, 127, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 185, 187, 196, 201, 215, 224, 227, 233, 235, 251, 271, 282, 283, 291, 294, 295, 310, 316, 323, 326, 333, 334, 336, 337, 341, 349, 356, 433, 437, 439, 442, 443, 444, 448, 449], "200": [2, 16, 17, 20, 26, 32, 39, 41, 44, 56, 66, 67, 68, 73, 76, 78, 125, 128, 131, 134, 135, 136, 142, 143, 155, 156, 159, 164, 165, 166, 169, 170, 224, 251, 261, 262, 269, 298, 299, 386, 388, 429, 432, 433, 437, 439, 446], "22": [2, 113, 114, 247], "rb_test": 2, "_storag": [2, 445, 446], "max_siz": [2, 51, 63, 70, 78, 79, 80, 99, 100, 101, 102, 113, 114, 115, 119, 121, 431, 437], "102": 2, "path_to_save_dir": 2, "assert_allclose_td": 2, "altern": [2, 4, 35, 45, 46, 47, 48, 62, 64, 71, 85, 150, 239, 265, 282, 283, 284, 332, 336, 386, 429, 431, 433, 442, 443], "state_dict": [2, 16, 17, 20, 22, 26, 32, 39, 44, 45, 46, 47, 48, 56, 62, 64, 66, 67, 71, 73, 78, 85, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 209, 239, 241, 248, 249, 251, 284, 285, 336, 356, 420, 426, 429, 430, 449], "load_state_dict": [2, 16, 17, 20, 22, 26, 32, 39, 44, 45, 46, 47, 48, 56, 62, 64, 66, 67, 71, 73, 78, 85, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 239, 241, 248, 249, 251, 336, 356, 426, 429], "drawback": 2, "struggl": 2, "big": [2, 431, 437, 446, 449], "sequenti": [2, 9, 32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 190, 211, 251, 309, 311, 312, 313, 319, 324, 325, 330, 333, 334, 336, 342, 349, 353, 354, 355, 356, 358, 424, 431, 432, 435, 443, 444, 445, 448, 449], "known": [2, 3, 5, 7, 8, 78, 135, 234, 375, 376, 429, 430, 434], "indiffer": 2, "heavili": [2, 11], "smooth": [2, 254, 429, 430, 436], "understand": [2, 8, 39, 429, 430, 433, 434, 435, 442, 443], "purpos": [2, 3, 7, 11, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 191, 272, 333, 335, 347, 350, 353, 355, 416, 429, 431, 432, 433, 436, 438, 442, 443, 445, 449], "guid": [2, 11, 157, 158, 162, 163, 233, 423, 429, 443, 448], "explan": [2, 32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251, 256], "effect": [2, 3, 32, 36, 39, 44, 56, 63, 66, 67, 70, 73, 78, 79, 80, 106, 108, 111, 113, 114, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 187, 191, 196, 241, 251, 256, 406, 424, 429, 435, 442, 446, 449], "realm": [2, 435], "practition": 2, "often": [2, 3, 8, 286, 348, 351, 406, 429, 430, 434, 436, 444, 446, 449], "encount": [2, 4, 213, 318, 423, 430, 435, 444], "sometim": [2, 3, 83, 432, 449], "variabl": [2, 3, 4, 7, 8, 14, 19, 30, 31, 33, 34, 35, 36, 37, 40, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 67, 73, 74, 75, 83, 86, 87, 88, 89, 90, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 140, 141, 142, 143, 147, 148, 151, 152, 153, 154, 155, 156, 159, 161, 164, 165, 166, 167, 168, 169, 170, 199, 236, 240, 249, 272, 273, 274, 276, 277, 278, 281, 311, 312, 313, 351, 354, 396, 426, 430], "immedi": [2, 32, 36, 37, 39, 44, 49, 56, 66, 67, 73, 75, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251, 367, 442, 443], "199": 2, "info": [2, 3, 16, 17, 63, 68, 69, 70, 79, 80, 85, 105, 106, 108, 111, 113, 114, 125, 128, 129, 130, 131, 134, 135, 136, 137, 142, 143, 147, 148, 153, 154, 155, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 209, 242, 244, 247, 250, 395, 434, 439, 442, 443, 446, 448], "glanc": [2, 434], "seem": [2, 429, 432, 434], "togeth": [2, 3, 11, 16, 17, 20, 22, 23, 24, 25, 26, 51, 66, 72, 74, 75, 100, 125, 128, 131, 135, 142, 143, 146, 155, 156, 157, 158, 159, 164, 165, 166, 191, 220, 231, 240, 272, 274, 276, 278, 305, 311, 312, 313, 328, 424, 430, 432, 434, 442], "less": [2, 150, 306, 418, 419, 425, 431, 432, 446, 448], "omit": [2, 143, 253, 271, 295, 402, 431, 436, 444, 446], "proper": [2, 3, 4, 6, 7, 368, 369, 370, 371, 430, 431, 442, 443, 444, 446], "imposs": [2, 3, 70, 79, 80, 119, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 171, 333, 335, 350, 353, 355], "determin": [2, 3, 18, 51, 63, 79, 85, 105, 106, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 169, 170, 171, 219, 246, 284, 295, 336, 430, 435, 442, 443], "complic": [2, 39, 66, 78, 444, 446, 449], "matter": [2, 38, 437], "inconsist": [2, 449], "miss": [2, 3, 4, 6, 7, 32, 36, 39, 44, 51, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 182, 209, 239, 241, 251, 252, 324, 325, 333, 336, 356, 423, 429, 432], "primari": [2, 30, 31, 33, 34, 35, 36, 37, 40, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 143, 437], "elimin": [2, 3, 434], "upon": [2, 3, 8, 19, 442, 444], "canon": 2, "definit": [2, 60, 115, 284], "markov": [2, 3, 434, 449], "mdp": [2, 182, 434, 444], "context": [2, 3, 5, 8, 13, 16, 17, 20, 22, 23, 24, 25, 26, 32, 39, 44, 56, 66, 67, 73, 78, 114, 125, 128, 131, 132, 135, 142, 143, 152, 155, 156, 159, 164, 165, 166, 234, 243, 251, 256, 274, 278, 285, 287, 309, 314, 364, 365, 368, 369, 370, 371, 373, 381, 388, 396, 401, 424, 425, 429, 430, 431, 432, 433, 442, 443, 444, 445, 446, 448], "condit": [2, 30, 31, 33, 34, 35, 36, 37, 40, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 84, 86, 87, 88, 89, 90, 142, 196, 233, 248, 315, 316, 318, 320, 321, 332, 425, 429, 442, 444, 446], "complet": [2, 7, 9, 112, 125, 128, 131, 134, 135, 136, 142, 143, 155, 156, 159, 164, 165, 166, 191, 232, 423, 425, 429, 431, 434, 441], "termin": [2, 3, 7, 16, 17, 20, 22, 41, 43, 51, 56, 57, 72, 76, 78, 96, 97, 104, 113, 125, 128, 129, 130, 131, 134, 135, 136, 140, 141, 142, 143, 147, 148, 153, 154, 155, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 169, 170, 183, 184, 187, 188, 199, 203, 209, 221, 234, 242, 251, 255, 274, 278, 281, 318, 324, 333, 334, 336, 337, 338, 340, 341, 342, 349, 353, 354, 355, 356, 358, 359, 366, 368, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 429, 430, 431, 442, 443, 444, 448, 449], "reward": [2, 3, 16, 17, 20, 38, 39, 41, 43, 51, 56, 57, 62, 71, 72, 76, 78, 84, 85, 95, 105, 106, 119, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 140, 141, 142, 143, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 159, 161, 162, 163, 164, 165, 166, 167, 169, 170, 176, 182, 184, 185, 188, 189, 194, 195, 198, 200, 202, 203, 204, 209, 211, 212, 213, 217, 221, 222, 224, 225, 226, 227, 228, 229, 231, 232, 233, 238, 240, 241, 242, 243, 245, 246, 248, 249, 251, 255, 274, 281, 314, 318, 328, 333, 334, 336, 337, 338, 340, 341, 342, 345, 349, 351, 353, 354, 355, 356, 358, 359, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 399, 400, 401, 404, 420, 425, 426, 429, 430, 431, 432, 433, 434, 438, 442, 443, 444, 448, 449], "imit": [2, 3, 347], "inform": [2, 3, 4, 16, 17, 20, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 66, 67, 71, 73, 74, 75, 78, 81, 83, 85, 86, 87, 88, 89, 90, 125, 128, 131, 132, 135, 138, 141, 142, 143, 155, 156, 159, 164, 165, 166, 251, 257, 258, 259, 279, 285, 424, 425, 426, 429, 430, 431, 432, 433, 434, 442, 443, 444, 446, 448], "stateless": [2, 3, 51, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 188, 196, 249, 351, 386, 429, 434, 444, 449], "simul": [2, 3, 5, 7, 8, 83, 126, 127, 128, 137, 140, 141, 161, 169, 170, 178, 255, 281, 424, 429, 431, 433, 434, 438, 442, 443], "furthermor": [2, 442, 443], "certain": [2, 4, 23, 24, 25, 26, 32, 39, 44, 56, 66, 67, 73, 78, 84, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 181, 196, 207, 232, 241, 251, 271, 273, 277, 350, 429, 430, 431, 433, 439, 442, 443, 449], "composit": [2, 3, 30, 31, 33, 34, 35, 37, 40, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 85, 86, 87, 88, 89, 90, 92, 111, 117, 124, 125, 128, 131, 133, 135, 142, 143, 149, 155, 156, 159, 164, 165, 166, 176, 183, 185, 188, 198, 199, 200, 201, 202, 204, 209, 211, 213, 221, 222, 228, 232, 234, 238, 239, 240, 242, 249, 251, 253, 255, 281, 310, 319, 323, 325, 326, 330, 333, 353, 422, 429, 431, 435, 444], "uniform": [2, 63, 79, 105, 106, 442], "unambigu": 2, "distinguish": [2, 3, 70, 79, 80, 147, 148, 169, 170], "happen": [2, 3, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 252, 295, 430, 433, 436, 437, 438, 445, 449], "everyth": [2, 430, 431, 432, 438, 439], "belong": [2, 30, 31, 33, 34, 35, 36, 37, 40, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 247, 248, 323, 429, 437, 443], "rule": [2, 78, 155, 198, 202, 323, 424, 431], "field": [2, 3, 16, 17, 20, 22, 28, 32, 36, 39, 41, 44, 45, 46, 47, 48, 51, 56, 62, 64, 65, 66, 67, 71, 72, 73, 76, 78, 79, 80, 81, 83, 84, 85, 99, 100, 101, 105, 113, 121, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 140, 141, 142, 143, 146, 147, 148, 149, 152, 153, 154, 155, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 169, 170, 182, 184, 188, 198, 199, 202, 203, 204, 209, 217, 221, 222, 224, 228, 231, 232, 234, 239, 241, 242, 251, 255, 257, 267, 268, 274, 278, 281, 295, 296, 297, 305, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 325, 327, 333, 334, 336, 337, 338, 340, 341, 342, 349, 353, 354, 355, 356, 358, 359, 366, 410, 423, 424, 430, 444], "taken": [2, 3, 30, 31, 35, 40, 52, 53, 54, 55, 60, 61, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 184, 223, 282, 283, 425, 429, 431, 432, 435, 442, 443, 444], "is_shar": [2, 3, 16, 17, 20, 28, 36, 39, 41, 45, 46, 47, 48, 51, 62, 64, 65, 66, 71, 72, 76, 78, 79, 80, 81, 84, 85, 95, 99, 100, 101, 105, 113, 121, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 140, 141, 142, 143, 146, 147, 148, 149, 152, 153, 154, 155, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 169, 170, 182, 184, 188, 198, 199, 202, 203, 204, 209, 217, 221, 222, 224, 228, 231, 232, 234, 242, 248, 255, 257, 267, 268, 274, 278, 281, 295, 296, 297, 305, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 325, 327, 333, 334, 336, 337, 338, 340, 341, 342, 349, 353, 354, 355, 356, 358, 359, 366, 424, 444], "envbas": [2, 3, 16, 17, 20, 22, 23, 24, 25, 26, 51, 85, 125, 128, 132, 135, 142, 143, 155, 156, 159, 164, 165, 166, 171, 182, 185, 188, 198, 202, 214, 221, 222, 240, 241, 248, 251, 255, 274, 278, 280, 281, 318, 401, 410, 411, 412, 416, 418, 419, 420, 422, 434], "brought": [2, 431, 432, 435], "step_mdp": [2, 3, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 274, 278, 422, 432, 434, 444, 448, 449], "count": [2, 3, 51, 56, 85, 131, 132, 232, 239, 249, 295, 401, 406, 409, 429, 430, 431, 432, 446, 449], "trigger": [2, 7, 39, 66, 78, 142, 249], "turn": [2, 23, 24, 25, 26, 36, 37, 45, 46, 47, 48, 49, 62, 64, 67, 71, 73, 75, 85, 128, 141, 155, 166, 208, 240, 243, 247, 315, 386, 401, 425, 429, 430, 432, 435, 444, 445], "retain": [2, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "consider": [2, 3, 8, 134, 136, 240, 422, 430, 442, 443, 446], "regard": [2, 268, 316, 333, 343, 353, 429, 431, 444], "expand": [2, 8, 30, 31, 33, 34, 35, 36, 37, 40, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 62, 64, 71, 74, 75, 83, 85, 86, 87, 88, 89, 90, 99, 113, 114, 188, 234, 266, 322, 325, 334, 336, 349, 351, 354, 356, 358, 359, 442, 443, 444, 446, 448], "recur": [2, 333, 334, 336, 337, 338, 340, 341, 342, 349, 353, 354, 355, 356, 358, 359, 368, 369, 370, 371, 372, 435], "anyth": [2, 4, 16, 17, 20, 22, 23, 24, 25, 26, 425], "els": [2, 126, 127, 188, 199, 272, 273, 276, 277, 289, 424, 426, 429, 430, 431, 432, 442, 443, 444, 445], "repetit": [2, 431, 434, 437], "embed": [2, 219, 244, 245, 246, 261, 296, 310, 311, 312, 313, 322, 323, 327, 445], "strictli": [2, 3, 8, 32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 212, 239, 241, 251, 336, 356, 429, 431], "enforc": [2, 32, 36, 39, 44, 56, 66, 67, 73, 78, 112, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 209, 239, 241, 251, 324, 336, 356, 444], "n_action": [2, 318, 334, 336, 338, 340, 352, 356], "rightmost": [2, 425], "n_ob": [2, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 211, 318, 333, 334, 336, 337, 338, 340, 341, 342, 349, 353, 354, 355, 356, 358, 359, 436], "estim": [2, 4, 106, 113, 114, 142, 199, 203, 211, 261, 303, 311, 312, 313, 333, 334, 335, 336, 337, 338, 340, 342, 343, 344, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 366, 368, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 425, 430, 431, 435, 436, 442, 443], "subsequ": [2, 32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 187, 251, 432, 442], "proce": [2, 442], "state_valu": [2, 312, 313, 327, 335, 341, 349, 350, 353, 354, 356, 368, 369, 370, 371, 373, 375, 377, 379, 381, 382, 384, 424, 429, 443], "f": [2, 126, 127, 135, 140, 141, 236, 252, 277, 332, 368, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 429, 430, 431, 432, 439, 442, 443, 444, 446, 449], "next_state_valu": [2, 358, 359, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 422], "left": [2, 16, 17, 58, 106, 113, 142, 188, 195, 197, 198, 199, 200, 204, 211, 213, 219, 221, 222, 228, 232, 235, 238, 240, 242, 244, 246, 249, 251, 271, 284, 430, 431, 433, 437, 438], "would": [2, 3, 32, 39, 44, 56, 66, 67, 72, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251, 272, 274, 276, 278, 279, 284, 323, 425, 426, 430, 431, 432, 434, 436, 437, 444, 446, 448, 449], "best": [2, 5, 9, 139, 274, 278, 442, 443, 446, 448], "bug": [2, 4], "worst": [2, 430], "twice": [2, 8, 114], "feasibl": 2, "mostli": [2, 3, 22, 294, 388, 425, 438, 446, 449], "eas": [2, 3, 442, 443], "flat": [2, 119], "ted2flat": [2, 41, 422], "flat2t": [2, 422], "unflatten": [2, 30, 31, 33, 34, 35, 36, 37, 40, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 188, 318], "deseri": [2, 3, 41], "posit": [2, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 67, 68, 69, 70, 73, 74, 75, 78, 79, 80, 83, 86, 87, 88, 89, 90, 108, 125, 128, 129, 130, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 206, 207, 209, 230, 231, 232, 235, 239, 241, 243, 251, 336, 356, 425, 431, 442, 443, 444, 446], "both": [2, 3, 7, 13, 16, 17, 20, 22, 23, 24, 25, 26, 32, 39, 44, 56, 63, 66, 67, 70, 73, 78, 79, 80, 125, 128, 131, 132, 134, 135, 142, 143, 147, 148, 155, 156, 157, 158, 159, 164, 165, 166, 167, 171, 183, 184, 191, 209, 222, 238, 239, 241, 251, 258, 259, 274, 277, 278, 279, 284, 285, 311, 312, 313, 316, 321, 333, 335, 336, 337, 341, 342, 349, 350, 351, 353, 354, 355, 356, 358, 359, 401, 424, 429, 431, 433, 434, 436, 442, 443, 444, 445, 446, 449], "mark": [2, 3, 20, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 236, 274, 278, 368, 370, 371, 437, 446], "identifi": [2, 13, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 65, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "abov": [2, 3, 7, 32, 39, 44, 56, 66, 67, 73, 78, 86, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 240, 251, 275, 303, 304, 332, 425, 426, 429, 431, 433, 434, 435, 442, 443, 444, 449], "output": [2, 3, 4, 16, 17, 20, 22, 23, 24, 25, 26, 32, 39, 44, 45, 51, 56, 63, 66, 67, 70, 73, 78, 79, 80, 83, 85, 106, 113, 114, 125, 128, 129, 130, 131, 134, 135, 136, 137, 141, 142, 143, 147, 148, 149, 152, 153, 154, 155, 156, 157, 158, 159, 161, 164, 165, 166, 167, 168, 169, 170, 171, 183, 188, 189, 191, 194, 195, 196, 197, 198, 199, 200, 202, 204, 206, 209, 211, 213, 215, 219, 221, 222, 227, 228, 231, 232, 235, 236, 238, 240, 241, 242, 244, 246, 247, 249, 251, 253, 258, 259, 260, 261, 262, 265, 267, 268, 269, 272, 273, 274, 276, 277, 278, 279, 284, 285, 292, 294, 295, 297, 306, 310, 311, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 330, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 366, 368, 369, 370, 371, 372, 386, 388, 397, 424, 425, 429, 430, 431, 432, 433, 434, 435, 438, 441, 442, 443, 444, 445, 448, 449], "adjust": [2, 11, 234, 429, 442, 443, 444], "grumodul": [2, 190, 234, 309, 330, 432], "lstmmodul": [2, 274, 309, 432, 433], "skip": [2, 3, 18, 32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 171, 196, 207, 209, 213, 239, 241, 251, 319, 323, 336, 351, 356, 368, 369, 370, 371, 387, 388, 399, 401, 429, 430, 444], "accumul": [2, 8, 251], "upcom": [2, 351, 377, 378, 379, 380, 382, 383, 384, 385, 429], "popular": [2, 3, 424, 432, 436, 443], "rainbow": 2, "multistep": [2, 16, 17, 20, 22, 23, 24, 25, 26, 251, 422, 430], "shift": [2, 41, 43, 56, 57, 76, 96, 97, 104, 329, 368, 369, 370, 371, 431], "approxim": [2, 443, 449], "intens": [2, 3, 8], "ataridqnexperiencereplai": 2, "onlin": [2, 8, 16, 22, 191, 265, 293, 333, 339, 352, 353, 397, 420, 431, 432, 443, 446], "2x": 2, "small": [2, 114, 244, 249, 254, 429, 431, 433, 442, 443, 449], "clearer": [2, 433, 435], "lazi": [2, 3, 74, 75, 92, 93, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 169, 170, 219, 244, 258, 284, 287, 324, 325, 429, 430, 435, 437, 441, 446, 449], "certainli": 2, "welcom": [2, 434], "wrapper": [2, 3, 22, 45, 46, 47, 48, 62, 64, 71, 72, 79, 80, 85, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 175, 199, 247, 252, 256, 257, 306, 314, 318, 323, 328, 368, 393, 394, 395, 420, 422, 431, 432, 434, 442, 443, 445, 448, 449], "around": [2, 5, 7, 22, 79, 80, 125, 128, 131, 135, 142, 143, 149, 155, 156, 159, 160, 164, 165, 166, 199, 256, 294, 318, 323, 368, 429, 430, 443, 449], "selecttransform": [2, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "excludetransform": [2, 228, 446], "promptli": 2, "virtual": [2, 3, 134], "instal": [2, 3, 5, 10, 23, 24, 25, 67, 78, 125, 128, 131, 135, 142, 143, 155, 156, 157, 158, 159, 162, 163, 164, 165, 166, 390, 406, 423, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 442, 443, 449], "d4rl": 2, "repositori": [2, 7, 169, 170, 442, 443], "wheel": [2, 431], "publish": 2, "openml": [2, 152], "scikit": [2, 152], "panda": 2, "raw": [2, 3, 4, 72, 209, 238, 242, 275, 303, 304, 430, 433, 437, 444], "go": [2, 3, 7, 100, 146, 155, 196, 220, 224, 314, 374, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 448, 449], "natur": [2, 3, 429, 435, 436, 437, 446], "modifi": [2, 3, 7, 8, 32, 39, 44, 56, 66, 67, 73, 78, 84, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 188, 191, 195, 196, 206, 209, 211, 219, 234, 240, 241, 244, 246, 249, 251, 286, 295, 314, 322, 323, 409, 425, 429, 430, 431, 433, 434, 442, 443, 444], "fly": [2, 191, 248, 350, 425, 431, 444, 446, 449], "least": [2, 30, 31, 33, 34, 35, 36, 37, 40, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 66, 74, 75, 83, 86, 87, 88, 89, 90, 106, 113, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 194, 438, 449], "pre": [2, 7, 27, 32, 39, 44, 56, 66, 67, 73, 78, 84, 101, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 219, 238, 244, 246, 251, 449], "conisder": 2, "per": [2, 3, 4, 16, 17, 20, 22, 23, 24, 25, 26, 106, 113, 119, 139, 140, 141, 155, 157, 158, 194, 213, 227, 258, 259, 269, 271, 284, 285, 318, 388, 390, 393, 395, 406, 418, 419, 429, 430, 431, 432, 433, 435, 436, 439, 442, 443, 446, 448], "pipelin": [2, 3, 7, 424, 425, 431], "replac": [2, 3, 6, 7, 32, 39, 44, 56, 66, 67, 73, 78, 106, 113, 114, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 182, 187, 201, 203, 210, 248, 249, 251, 271, 424, 442, 446, 448], "onc": [2, 3, 7, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 32, 39, 44, 45, 46, 47, 48, 56, 62, 64, 66, 67, 71, 73, 78, 85, 108, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 187, 213, 224, 234, 241, 251, 253, 295, 318, 404, 424, 426, 430, 431, 432, 435, 438, 444, 446, 449], "produc": [2, 3, 36, 37, 49, 51, 75, 113, 184, 187, 188, 258, 259, 279, 285, 291, 311, 313, 314, 323, 388, 431, 432, 433, 434, 435, 437, 446, 449], "unless": [2, 3, 16, 17, 20, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 66, 67, 73, 74, 75, 78, 83, 86, 87, 88, 89, 90, 96, 112, 125, 128, 131, 135, 142, 143, 155, 156, 157, 158, 159, 164, 165, 166, 239, 241, 249, 251, 256, 333, 334, 336, 349, 351, 353, 354, 355, 356, 358, 359, 431], "download": [2, 7, 10, 13, 14, 16, 17, 20, 22, 23, 24, 25, 26, 139, 219, 246, 388, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449], "forc": [2, 3, 6, 7, 16, 17, 22, 23, 24, 25, 26, 156, 430, 442, 443, 444], "robosetexperiencereplai": [2, 113, 114], "fk1": 2, "v4": [2, 135, 155, 184, 223, 377, 378, 379, 380, 382, 383, 384, 385, 429, 431, 445, 448], "expert": 2, "fk1_microopenrandom_v2d": 2, "func": [2, 16, 17, 250], "obs_norm": 2, "norm": [2, 4, 8, 126, 127, 254, 406, 429, 430, 431, 442, 443, 444], "num_work": [2, 62, 64, 84, 95, 150, 155, 164, 429, 430], "os": [2, 64, 84, 95, 430], "cpu_count": [2, 64, 84, 95], "num_chunk": 2, "1000": [2, 4, 16, 17, 51, 70, 78, 99, 100, 105, 113, 114, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 191, 248, 253, 271, 294, 295, 319, 323, 348, 429, 430, 431, 432, 433, 435, 437, 439, 444, 445, 446], "mp_start_method": [2, 155, 164, 239, 430, 448], "fork": [2, 5, 429, 430, 431, 432, 442, 443, 445, 448], "recreat": [2, 444], "customari": 2, "moreov": [2, 3], "fine": [2, 3, 29, 70, 79, 80, 106, 108, 113, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 188, 211, 433, 437, 445], "grain": [2, 3, 70, 79, 80, 106, 108, 113, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 188], "nomenclatur": 2, "compact": [2, 51, 76, 96, 97, 104], "propos": [2, 191, 203, 256, 280, 348, 357, 424, 432, 446], "replaybufferensembl": [2, 111, 117, 124], "primit": [2, 3, 4, 333, 334, 336, 337, 338, 340, 341, 342, 349, 353, 354, 355, 356, 358, 359], "individu": [2, 4, 23, 24, 25, 26, 32, 39, 44, 56, 66, 67, 73, 78, 84, 106, 108, 119, 125, 128, 131, 135, 142, 143, 147, 148, 155, 156, 159, 164, 165, 166, 251, 429, 443], "dummi": [2, 3, 166, 199, 386, 429, 433, 437, 449], "semant": [2, 74, 75, 134, 136, 445], "ident": [2, 3, 16, 17, 20, 45, 46, 47, 48, 56, 62, 64, 70, 71, 78, 79, 80, 85, 99, 108, 113, 125, 128, 131, 134, 135, 136, 142, 143, 150, 155, 156, 159, 164, 165, 166, 203, 231, 240, 254, 284, 285, 334, 336, 349, 354, 356, 358, 359, 368, 369, 370, 371, 418, 419, 430, 434, 442, 443], "another_kei": [2, 108], "renam": [2, 3, 45, 46, 47, 48, 62, 64, 71, 85, 108, 182, 222, 224, 429], "resiz": [2, 3, 108, 191, 430, 432, 433, 434, 446, 449], "imag": [2, 3, 4, 7, 11, 191, 193, 197, 219, 237, 246, 279, 386, 388, 429, 430, 433, 434, 438, 443, 445, 449], "comops": 2, "totensorimag": [2, 3, 108, 191, 223, 430, 432, 433, 446, 448, 449], "renametransform": [2, 3, 108, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 191], "rb0": [2, 108], "in_kei": [2, 3, 16, 17, 20, 22, 23, 24, 25, 26, 39, 51, 66, 68, 78, 108, 125, 126, 127, 128, 131, 135, 142, 143, 149, 155, 156, 159, 164, 165, 166, 177, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 255, 257, 267, 274, 278, 281, 296, 305, 306, 310, 311, 312, 313, 314, 315, 318, 319, 320, 322, 323, 325, 326, 327, 330, 333, 334, 335, 336, 337, 338, 340, 341, 342, 347, 349, 350, 353, 354, 355, 356, 358, 359, 366, 368, 369, 370, 371, 387, 388, 416, 424, 429, 430, 431, 432, 433, 435, 436, 439, 441, 442, 443, 444, 445, 446, 448, 449], "pixel": [2, 3, 7, 36, 108, 128, 129, 130, 134, 136, 137, 161, 191, 193, 197, 203, 206, 208, 215, 217, 219, 223, 237, 244, 246, 261, 289, 290, 386, 388, 429, 430, 432, 433, 438, 442, 445, 446, 448, 449], "rb1": [2, 108], "out_kei": [2, 3, 16, 17, 20, 22, 23, 24, 25, 26, 39, 51, 66, 68, 78, 108, 125, 126, 127, 128, 131, 135, 142, 143, 149, 155, 156, 159, 164, 165, 166, 177, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 251, 255, 257, 267, 268, 274, 278, 281, 296, 297, 305, 306, 310, 311, 312, 313, 314, 316, 318, 319, 320, 321, 322, 323, 325, 326, 327, 330, 333, 334, 335, 336, 341, 342, 347, 349, 350, 353, 354, 355, 356, 358, 366, 368, 369, 370, 371, 386, 388, 401, 416, 424, 429, 430, 431, 432, 433, 435, 439, 441, 442, 443, 444, 445, 446, 448, 449], "pixels33": [2, 108], "data0": [2, 100, 108], "244": [2, 108, 219, 246], "data1": [2, 100, 108, 448], "_": [2, 8, 63, 68, 69, 70, 79, 80, 100, 108, 128, 132, 139, 169, 170, 192, 198, 199, 201, 202, 211, 215, 222, 237, 248, 251, 294, 310, 322, 323, 327, 332, 333, 334, 336, 337, 341, 342, 349, 353, 354, 356, 358, 359, 368, 369, 370, 371, 390, 429, 430, 431, 432, 433, 439, 442, 443, 444, 446, 448], "parent": [2, 3, 26, 32, 39, 43, 44, 56, 58, 66, 67, 73, 78, 83, 85, 108, 117, 124, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 184, 188, 191, 192, 195, 196, 199, 200, 203, 206, 207, 213, 215, 219, 227, 232, 233, 234, 235, 239, 240, 243, 244, 251, 274, 278, 311, 330, 351, 353, 372, 386, 388, 429, 437, 444, 448, 449], "basic": [2, 3, 21, 149, 424, 431, 436, 437, 439, 442, 448, 449], "properti": [2, 3, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 108, 125, 128, 131, 135, 142, 143, 149, 155, 156, 159, 164, 165, 166, 187, 239, 240, 241, 248, 249, 251, 266, 275, 283, 287, 291, 302, 303, 304, 318, 333, 336, 351, 353, 355, 356, 435, 437, 444, 446], "input": [2, 3, 4, 16, 17, 20, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 66, 67, 71, 72, 73, 74, 75, 78, 81, 83, 85, 86, 87, 88, 89, 90, 116, 122, 125, 128, 131, 135, 142, 143, 147, 148, 149, 152, 153, 154, 155, 156, 157, 158, 159, 164, 165, 166, 167, 168, 169, 170, 171, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 213, 217, 218, 219, 220, 221, 222, 224, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 254, 256, 257, 258, 259, 261, 262, 263, 264, 267, 268, 271, 272, 273, 274, 276, 277, 278, 279, 284, 285, 286, 287, 288, 295, 297, 298, 299, 300, 301, 303, 306, 310, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 330, 332, 333, 334, 335, 336, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 353, 354, 355, 356, 358, 359, 366, 367, 368, 369, 370, 371, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 400, 404, 409, 416, 424, 425, 426, 429, 430, 431, 432, 433, 434, 442, 443, 444, 448, 449], "send": [2, 3, 8, 159, 165, 395, 448], "spawn": [2, 3, 4, 23, 27, 139, 150, 155, 164, 239, 430, 442, 443], "check_env_spec": [2, 3, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 184, 209, 221, 242, 386, 422, 431, 442, 443, 444], "saniti": [2, 3, 7, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 171, 431], "make_composite_from_td": [2, 83, 422, 444], "fall": [2, 4], "categori": [2, 36, 424, 426], "bound": [2, 3, 4, 26, 32, 34, 36, 39, 44, 56, 66, 67, 73, 78, 86, 125, 128, 131, 135, 142, 143, 155, 156, 159, 160, 164, 165, 166, 194, 214, 248, 251, 253, 271, 295, 298, 299, 310, 315, 316, 319, 320, 321, 322, 323, 326, 333, 334, 336, 337, 349, 353, 354, 356, 358, 359, 422, 424, 429, 430, 431, 433, 442, 444, 448, 449], "unbound": [2, 3, 30, 31, 33, 34, 35, 36, 37, 40, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 68, 69, 70, 71, 74, 75, 79, 80, 83, 85, 87, 88, 89, 90, 108, 125, 128, 131, 135, 142, 143, 149, 155, 156, 159, 164, 165, 166, 176, 185, 188, 198, 199, 202, 221, 234, 255, 281, 310, 322, 325, 327, 355, 422, 444, 446], "boundeddiscret": [2, 33, 36], "boundedcontinu": [2, 27, 33, 36, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 209, 212, 242], "unboundeddiscret": [2, 86, 156, 209, 422], "unboundedcontinu": [2, 86, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 176, 221, 234, 325, 330, 422], "implicitli": 2, "onehot": [2, 30, 31, 33, 34, 35, 36, 37, 40, 49, 50, 52, 53, 54, 55, 58, 59, 61, 74, 75, 83, 86, 87, 88, 89, 90, 126, 127, 134, 136, 137, 140, 141, 150, 151, 153, 154, 161, 167, 168, 268, 297, 315, 320, 338, 340, 341, 342, 366, 422, 424], "multionehot": [2, 52, 53, 55, 338, 341, 342, 366, 422], "multicategor": [2, 53, 54, 55, 422], "binari": [2, 3, 7, 31, 32, 60, 167, 185, 189, 268, 297, 315, 316, 320, 321, 338, 341, 342, 366, 422], "concept": [2, 3, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 294, 430, 446], "arbitrari": [2, 3, 30, 60, 70, 125, 128, 131, 135, 141, 142, 143, 155, 156, 159, 164, 165, 166, 187, 425, 429, 430, 444, 446], "combin": [2, 4, 42, 67, 358, 430, 433, 438, 446, 448], "relat": [2, 3, 4, 10, 63, 155, 206, 333, 334, 336, 337, 338, 340, 341, 342, 349, 353, 354, 355, 356, 358, 359, 430, 439, 444], "nevertheless": [2, 3, 431, 434, 446], "otherwis": [2, 3, 12, 16, 17, 20, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 95, 106, 108, 113, 114, 125, 126, 127, 128, 131, 134, 135, 136, 137, 140, 141, 142, 143, 146, 147, 148, 150, 151, 153, 154, 155, 156, 157, 158, 159, 161, 164, 165, 166, 167, 168, 169, 170, 191, 192, 196, 201, 209, 215, 233, 234, 235, 239, 240, 241, 248, 251, 252, 254, 256, 272, 275, 276, 284, 285, 303, 304, 309, 315, 320, 323, 326, 334, 336, 345, 351, 352, 356, 368, 370, 371, 401, 403, 425, 426, 429, 430, 431, 432, 444, 449], "similarli": [2, 3, 26, 32, 39, 44, 56, 66, 67, 73, 78, 112, 117, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 213, 251, 284, 324, 325, 341, 349, 449], "possess": [2, 83], "unsqueez": [2, 30, 31, 33, 34, 35, 36, 37, 40, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 85, 86, 87, 88, 89, 90, 106, 176, 185, 188, 191, 192, 237, 243, 429, 432, 433, 442, 443, 444], "move": [2, 4, 32, 39, 44, 56, 66, 67, 73, 78, 83, 125, 128, 131, 135, 136, 142, 143, 155, 156, 159, 164, 165, 166, 182, 184, 195, 200, 219, 234, 240, 241, 244, 246, 248, 251, 279, 322, 404, 429, 430, 432, 434, 449], "unbind": [2, 45, 46, 47, 48, 62, 63, 64, 70, 71, 79, 80, 85, 213, 274, 278, 318], "said": [2, 431], "neg": [2, 8, 16, 17, 20, 22, 23, 24, 25, 26, 63, 66, 79, 83, 105, 106, 191, 206, 220, 231, 243, 335, 344, 350, 353, 368, 370, 371, 425, 431, 442, 443, 444], "seen": [2, 3, 23, 24, 25, 26, 36, 37, 49, 75, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 200, 425, 429, 430, 432, 436, 442, 443, 446], "predict": [2, 3, 56, 72, 267, 269, 280, 281, 314, 328, 333, 335, 340, 343, 345, 346, 350, 353, 355, 367, 429, 430, 436], "deprec": [2, 28, 31, 32, 34, 37, 39, 40, 44, 49, 50, 53, 55, 56, 59, 61, 66, 67, 73, 78, 88, 90, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 209, 239, 241, 248, 251, 274, 278, 333, 335, 336, 338, 341, 342, 343, 349, 350, 353, 354, 355, 356, 366, 368, 369, 370, 371, 376, 449], "mont": [2, 142, 199, 333, 335, 350, 353, 429], "carlo": [2, 142, 199, 333, 335, 350, 353, 429], "mct": [2, 51], "act": [2, 3, 4, 113, 114, 157, 158, 241, 267, 285, 334, 336, 337, 349, 354, 356, 358, 359, 432, 433, 442, 443, 446, 448], "tradit": [2, 436, 442], "integ": [2, 16, 17, 20, 22, 28, 44, 52, 54, 56, 60, 66, 67, 72, 73, 85, 106, 113, 114, 115, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 184, 187, 203, 207, 215, 232, 249, 258, 259, 279, 284, 285, 336, 341, 349, 356, 425, 433, 446], "advanc": [2, 3, 26, 63, 70, 79, 80, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 434, 437, 446], "rebuild": [2, 51], "initi": [2, 4, 7, 13, 16, 17, 20, 22, 23, 24, 25, 26, 29, 30, 31, 32, 35, 39, 40, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 78, 79, 80, 85, 108, 119, 125, 128, 131, 135, 142, 143, 153, 154, 155, 156, 159, 164, 165, 166, 167, 190, 199, 209, 215, 219, 234, 241, 244, 249, 250, 251, 252, 253, 254, 255, 271, 272, 273, 276, 277, 281, 284, 285, 286, 287, 288, 295, 318, 333, 334, 336, 337, 338, 340, 342, 343, 344, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 366, 420, 424, 425, 429, 430, 432, 434, 435, 437, 442, 444, 449], "pair": [2, 3, 45, 46, 47, 48, 56, 62, 64, 66, 71, 78, 85, 125, 128, 129, 130, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 224, 234, 239, 274, 311, 319, 323, 351, 368, 369, 370, 371, 372, 424, 425, 429, 430, 431, 435, 436, 441, 444, 449], "term": [2, 72, 100, 211, 276, 277, 287, 288, 332, 333, 342, 408, 430, 431, 434, 435, 443], "pseudocod": [2, 3], "next_stat": [2, 425], "associ": [2, 3, 32, 36, 37, 39, 44, 45, 46, 47, 48, 49, 51, 56, 62, 64, 66, 67, 71, 73, 75, 78, 85, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 239, 251, 298, 420, 429, 446], "sens": [2, 4, 45, 46, 47, 48, 62, 64, 71, 85, 191, 199, 437, 444], "hard": [2, 3, 7, 119, 129, 130, 155, 348, 430, 449], "let": [2, 3, 6, 7, 11, 28, 32, 39, 44, 51, 56, 63, 66, 67, 70, 73, 78, 79, 80, 81, 125, 128, 131, 135, 142, 143, 155, 156, 157, 158, 159, 164, 165, 166, 191, 251, 274, 278, 284, 285, 315, 401, 425, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 441, 442, 443, 444, 445, 446, 448, 449], "know": [2, 3, 4, 9, 63, 70, 79, 80, 134, 136, 253, 351, 354, 401, 429, 430, 431, 432, 433, 434, 435, 436, 437, 442, 443, 446], "next_td": 2, "Of": [2, 3, 7, 423, 444, 449], "cours": [2, 3, 4, 423, 444, 449], "handi": [2, 3, 16, 17, 20, 22, 23, 24, 25, 26, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 438], "undertaken": [2, 85, 425, 444], "link": [2, 6, 7, 131, 430, 439], "hash": [2, 44, 51, 66, 67, 73, 78, 85, 128, 143], "past": [2, 4, 142, 191, 318, 430, 446], "node_map": [2, 51], "_index": [2, 66, 78], "Then": [2, 7, 16, 17, 20, 22, 23, 24, 25, 26, 247, 431, 441], "track": [2, 3, 4, 16, 17, 20, 22, 23, 24, 25, 26, 80, 105, 106, 112, 128, 142, 227, 236, 248, 249, 251, 295, 318, 393, 399, 430, 432, 434, 437, 443, 444, 446], "next_data": [2, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "data_map": [2, 51], "form": [2, 16, 17, 22, 32, 39, 44, 56, 63, 66, 67, 70, 73, 78, 79, 80, 96, 97, 104, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 248, 249, 251, 272, 274, 276, 278, 323, 332, 333, 335, 350, 353, 406, 424, 435, 443], "figur": [2, 3, 85, 143, 199, 429, 431, 432, 443, 444, 449], "flowchart": 2, "o": [2, 32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251, 277], "get_tre": [2, 51, 85], "vertex": [2, 85], "longer": [2, 85, 252, 430, 439, 442, 443, 446], "vertic": [2, 85], "branch": [2, 51, 85], "repeat": [2, 85, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 140, 141, 142, 143, 150, 151, 155, 156, 159, 161, 164, 165, 166, 199, 239, 255, 266, 431, 442, 443, 444], "depth": [2, 70, 83, 125, 128, 131, 135, 142, 143, 149, 155, 156, 159, 161, 164, 165, 166, 255, 258, 259, 261, 262, 263, 264, 269, 270, 279, 281, 284, 285, 286, 289, 290, 315, 424, 430, 434, 436, 437, 441, 442, 443, 446], "until": [2, 3, 7, 26, 141, 235, 240, 251, 396, 431, 432, 439, 442, 443], "anymor": [2, 45, 46, 47, 48, 62, 64, 71, 85, 241, 322], "utmost": 2, "llm": [2, 72, 84, 95, 142, 199], "post": [2, 16, 17, 20, 22, 23, 24, 25, 26, 32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251], "grpo": [2, 142, 199], "commonli": [2, 106, 113, 114, 449], "emploi": [2, 288], "scarc": 2, "address": [2, 446], "subdomain": 2, "extern": [2, 3, 198, 202, 249, 442, 449], "token": [2, 45, 46, 47, 48, 64, 65, 72, 81, 84, 95, 142, 143], "dm": [3, 429, 449], "abl": [3, 51, 125, 146, 157, 158, 159, 165, 274, 278, 429, 431, 432, 435, 441, 442, 443, 444, 446], "experi": [3, 63, 70, 79, 80, 105, 106, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 171, 390, 391, 392, 393, 394, 395, 423, 430, 431, 433, 437, 438, 442, 443, 446], "box": [3, 30, 31, 33, 34, 35, 36, 37, 40, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 85, 86, 87, 88, 89, 90, 134, 136, 286, 351], "lib": [3, 5, 6, 7, 9, 10, 16, 17, 20, 22, 26, 27, 68, 125, 128, 131, 132, 135, 142, 143, 147, 148, 155, 156, 157, 158, 159, 162, 163, 164, 165, 166, 191, 194, 203, 210, 211, 215, 217, 222, 224, 227, 234, 240, 247, 248, 251, 386, 416, 429, 430, 431, 432, 441, 443, 445, 446, 448, 449], "hope": [3, 11], "nn": [3, 16, 17, 20, 22, 23, 24, 25, 26, 29, 32, 38, 39, 44, 56, 66, 67, 68, 72, 73, 78, 125, 126, 127, 128, 131, 135, 142, 143, 149, 155, 156, 159, 164, 165, 166, 195, 201, 203, 211, 219, 234, 240, 241, 244, 246, 251, 255, 257, 258, 259, 261, 262, 263, 264, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 281, 283, 284, 285, 286, 295, 296, 297, 305, 310, 311, 312, 313, 314, 315, 318, 319, 320, 322, 323, 324, 325, 327, 330, 332, 333, 334, 336, 337, 338, 340, 341, 342, 343, 344, 349, 351, 353, 354, 355, 356, 358, 359, 366, 368, 369, 370, 371, 416, 424, 425, 429, 430, 431, 432, 433, 435, 436, 439, 441, 442, 443, 444, 445, 448], "organis": [3, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 241, 430], "attribut": [3, 4, 7, 16, 17, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 66, 67, 71, 73, 74, 75, 76, 78, 83, 84, 85, 86, 87, 88, 89, 90, 125, 128, 131, 134, 135, 136, 141, 142, 143, 155, 156, 159, 164, 165, 166, 184, 199, 203, 213, 219, 241, 244, 248, 249, 251, 274, 278, 323, 333, 334, 336, 337, 338, 340, 342, 343, 344, 347, 349, 351, 353, 354, 355, 356, 358, 359, 366, 429, 432, 444], "live": [3, 32, 39, 44, 56, 63, 66, 67, 68, 69, 70, 73, 78, 79, 80, 108, 125, 128, 131, 135, 142, 143, 149, 155, 156, 159, 164, 165, 166, 203, 251], "actual": [3, 4, 7, 30, 31, 33, 34, 35, 36, 37, 40, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 62, 64, 71, 74, 75, 83, 85, 86, 87, 88, 89, 90, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 247, 409, 425, 429, 431, 433, 442, 443, 444], "care": [3, 8, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 66, 67, 73, 74, 75, 78, 83, 86, 87, 88, 89, 90, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 286, 289, 290, 293, 295, 298, 299, 301, 306, 314, 316, 318, 321, 326, 329, 388, 429, 431, 433, 442, 443, 444, 446], "parametr": [3, 288, 323, 334, 336, 341, 349, 356, 429, 431], "observation_spec": [3, 51, 125, 128, 131, 135, 142, 143, 149, 155, 156, 159, 164, 165, 166, 185, 188, 191, 192, 193, 194, 195, 197, 198, 200, 202, 203, 206, 208, 209, 210, 211, 215, 217, 219, 221, 223, 227, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 247, 248, 249, 251, 255, 274, 278, 281, 410, 416, 429, 431, 436, 441, 442, 443, 444, 449], "state_spec": [3, 125, 128, 131, 135, 142, 143, 149, 155, 156, 159, 164, 165, 166, 185, 195, 200, 215, 240, 242, 243, 251, 255, 281, 444, 449], "reward_spec": [3, 125, 128, 131, 135, 142, 143, 149, 155, 156, 159, 164, 165, 166, 185, 188, 189, 194, 195, 198, 200, 202, 212, 221, 225, 226, 227, 229, 231, 238, 240, 242, 243, 249, 251, 255, 281, 431, 442, 443, 444, 449], "done_spec": [3, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 183, 198, 200, 202, 203, 221, 231, 238, 240, 242, 251, 442, 443, 444, 449], "flag": [3, 8, 39, 63, 68, 69, 70, 79, 80, 108, 125, 128, 131, 135, 142, 143, 147, 148, 155, 156, 159, 164, 165, 166, 169, 170, 210, 295, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 424, 442, 443, 444, 445], "input_spec": [3, 85, 125, 128, 131, 135, 142, 143, 149, 155, 156, 159, 164, 165, 166, 184, 188, 195, 198, 200, 201, 213, 217, 221, 222, 227, 228, 231, 232, 233, 234, 238, 240, 241, 242, 245, 251, 431, 444], "full_action_spec": [3, 85, 125, 128, 131, 135, 142, 143, 153, 154, 155, 156, 159, 164, 165, 166, 167, 168, 184, 200, 255, 281, 442, 443], "full_state_spec": [3, 51, 85, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 184, 200, 255, 281], "output_spec": [3, 85, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 188, 195, 198, 200, 204, 211, 213, 221, 222, 228, 232, 238, 240, 241, 242, 249, 251, 444], "full_observation_spec": [3, 85, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 255, 281], "full_reward_spec": [3, 85, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 188, 200, 221, 442, 443], "full_done_spec": [3, 85, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 183, 188, 200, 221, 442, 443], "carri": [3, 26, 54, 84, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 234, 351, 430, 432, 442, 443, 444, 446], "nontensor": [3, 59, 209, 242, 422], "spec_lock": [3, 131], "modif": [3, 5, 32, 36, 37, 39, 44, 49, 56, 66, 67, 73, 75, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 183, 206, 209, 251, 351, 425, 431, 444], "children": [3, 13, 16, 17, 20, 22, 23, 24, 25, 26, 32, 36, 37, 39, 44, 49, 56, 66, 67, 73, 75, 78, 85, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251], "unlock": [3, 36, 37, 45, 46, 47, 48, 49, 62, 64, 71, 75, 85, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "set_spec_lock_": [3, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "reason": [3, 4, 8, 32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 157, 158, 159, 164, 165, 166, 219, 244, 251, 278, 425, 429, 430, 431, 436, 437, 442, 444, 446], "easi": [3, 5, 11, 125, 128, 129, 130, 131, 135, 140, 141, 142, 143, 155, 156, 159, 164, 165, 166, 253, 271, 295, 424, 425, 429, 430, 431, 443, 445, 446, 448, 449], "cach": [3, 14, 62, 64, 84, 95, 106, 113, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 182, 187, 198, 202, 219, 240, 241, 246, 256, 398], "principl": 3, "new_spec": 3, "eras": [3, 30, 31, 33, 34, 35, 40, 52, 53, 54, 55, 58, 59, 60, 61, 83, 86, 87, 88, 89, 90, 106, 113, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 241], "relock": 3, "previous": [3, 4, 51, 431, 449], "importantli": [3, 319, 323], "action_s": 3, "help": [3, 4, 32, 39, 44, 56, 66, 67, 73, 78, 83, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 191, 203, 251, 333, 335, 350, 353, 355, 423, 425, 429, 430, 431, 432, 442, 443], "With": [3, 140, 141, 146, 233, 426, 430, 441, 442, 443, 446, 449], "necessarili": [3, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 449], "present": [3, 32, 39, 44, 45, 46, 47, 48, 56, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 78, 79, 80, 83, 85, 105, 106, 108, 112, 125, 128, 131, 134, 135, 142, 143, 155, 156, 159, 164, 165, 166, 182, 183, 199, 204, 224, 228, 234, 239, 241, 251, 259, 260, 261, 262, 263, 264, 270, 274, 276, 278, 288, 293, 295, 318, 322, 323, 324, 325, 333, 334, 335, 336, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 366, 368, 369, 370, 371, 372, 420, 426, 429, 439, 441, 442, 443, 446, 448], "0s": [3, 234, 432], "step_and_maybe_reset": [3, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 434], "done_kei": [3, 28, 39, 41, 43, 51, 57, 76, 96, 97, 104, 113, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 182, 187, 191, 203, 224, 232, 251, 442, 443], "assign": [3, 4, 16, 17, 22, 32, 33, 39, 44, 45, 46, 47, 48, 56, 62, 64, 66, 67, 71, 73, 78, 85, 86, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 239, 241, 251, 336, 337, 338, 340, 356, 431, 435, 442, 443, 446], "_reset": [3, 125, 128, 131, 135, 142, 143, 149, 155, 156, 159, 164, 165, 166, 183, 185, 187, 188, 191, 198, 202, 210, 221, 236, 255, 281, 442], "data_": [3, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "append": [3, 8, 11, 45, 51, 63, 68, 69, 70, 79, 80, 108, 125, 128, 131, 132, 135, 142, 143, 155, 156, 159, 164, 165, 166, 187, 194, 195, 199, 213, 224, 234, 241, 247, 273, 274, 277, 278, 315, 320, 429, 430, 431, 432, 433, 442, 443, 444, 445, 446, 448], "seed": [3, 16, 17, 20, 22, 26, 70, 79, 80, 108, 125, 128, 131, 135, 142, 143, 149, 155, 156, 157, 158, 159, 164, 165, 166, 169, 170, 171, 185, 188, 198, 202, 209, 221, 241, 386, 406, 442], "determinist": [3, 16, 17, 20, 22, 23, 24, 25, 26, 32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 180, 195, 219, 234, 240, 241, 244, 246, 251, 260, 269, 289, 299, 310, 319, 322, 323, 326, 334, 351, 401, 424, 429, 430, 431, 432, 433, 435, 436, 439, 442, 444, 448, 449], "preced": [3, 56, 128, 191, 432], "risk": [3, 220], "overlap": [3, 79, 119], "reproduc": [3, 67, 73, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 171, 191, 209, 429, 431, 433, 443], "maximum": [3, 4, 16, 17, 18, 20, 22, 23, 24, 25, 26, 30, 56, 62, 64, 65, 72, 78, 81, 84, 85, 86, 95, 99, 100, 101, 102, 105, 106, 121, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 199, 201, 225, 232, 233, 235, 254, 302, 303, 304, 326, 334, 336, 341, 342, 349, 351, 352, 356, 388, 403, 424, 429, 430, 431, 432, 435, 442, 443, 446], "max_step": [3, 11, 119, 125, 128, 131, 135, 142, 143, 147, 148, 149, 155, 156, 159, 164, 165, 166, 169, 170, 232, 239, 251, 386, 434, 435, 436, 438, 439, 442, 443, 448, 449], "tensordictmodul": [3, 16, 17, 20, 22, 23, 24, 25, 26, 39, 66, 68, 72, 78, 125, 126, 127, 128, 131, 135, 142, 143, 149, 155, 156, 159, 164, 165, 166, 190, 211, 257, 268, 274, 278, 281, 296, 297, 305, 306, 311, 312, 313, 314, 315, 318, 319, 320, 321, 322, 324, 325, 326, 328, 330, 334, 336, 337, 341, 342, 344, 345, 346, 347, 349, 351, 354, 356, 358, 359, 366, 367, 368, 369, 370, 371, 401, 416, 422, 429, 431, 432, 436, 439, 441, 442, 443, 444, 445, 449], "trail": [3, 248], "treat": [3, 56, 425, 435, 436], "brief": [3, 431, 434, 436, 446], "deliveri": 3, "metaclass": [3, 131], "everi": [3, 8, 18, 32, 36, 37, 39, 44, 49, 56, 60, 63, 66, 67, 68, 69, 70, 73, 75, 78, 79, 80, 85, 108, 115, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 176, 232, 233, 248, 251, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 284, 285, 286, 289, 290, 293, 295, 298, 299, 301, 306, 314, 316, 318, 321, 326, 329, 351, 406, 426, 429, 430, 431, 432, 434, 435, 442, 443, 444], "flank": [3, 425, 432], "dual": 3, "refer": [3, 7, 8, 9, 11, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 66, 67, 72, 73, 74, 75, 78, 83, 86, 87, 88, 89, 90, 125, 128, 131, 134, 135, 136, 142, 143, 155, 156, 159, 164, 165, 166, 191, 209, 239, 241, 248, 251, 255, 268, 269, 281, 282, 283, 284, 285, 286, 289, 290, 298, 299, 313, 316, 333, 336, 343, 344, 345, 346, 353, 356, 368, 373, 381, 428, 429, 431, 433, 435, 436, 437, 438, 442, 443, 446], "union": [3, 25, 32, 36, 37, 39, 44, 49, 50, 54, 55, 56, 58, 60, 61, 66, 67, 73, 74, 75, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251, 284, 305, 340, 342, 354, 417, 420], "assess": [3, 16, 17, 20, 22, 23, 24, 25, 26, 36, 37, 49, 75, 147, 148, 172, 429], "split_trajectori": [3, 16, 17, 20, 22, 23, 24, 25, 26, 106, 113, 114, 422], "adjac": [3, 28, 206, 318], "junction": 3, "inittrack": [3, 274, 278, 318, 429, 432], "tutori": [3, 156, 421, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 444, 445, 446, 447, 449], "scratch": [3, 8, 430, 444], "mere": [3, 22, 433], "batch_lock": [3, 125, 128, 131, 133, 135, 142, 143, 155, 159, 164, 165, 188, 234, 241, 444], "notabl": 3, "braxenv": [3, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 222, 422, 434], "jumanjienv": [3, 422], "straightforward": [3, 21, 429, 430, 434, 435, 436, 437, 446], "merg": [3, 63, 70, 79, 80, 444], "correctli": [3, 7, 32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251], "silent": [3, 32, 39, 44, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 286, 289, 290, 293, 295, 298, 299, 301, 306, 314, 316, 318, 321, 326, 329], "_step": [3, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 185, 187, 188, 190, 191, 192, 195, 196, 198, 200, 202, 203, 204, 205, 206, 207, 210, 211, 218, 220, 221, 222, 224, 227, 228, 231, 232, 233, 234, 235, 236, 238, 239, 240, 244, 245, 247, 248, 251], "temporari": [3, 429], "hold": [3, 240, 364, 365, 444, 446], "arm": 3, "unbatch": [3, 272, 276], "captur": [3, 253, 271, 295, 433], "base_env": [3, 125, 127, 128, 131, 135, 136, 141, 142, 143, 154, 155, 156, 159, 164, 165, 166, 168, 184, 185, 188, 194, 196, 198, 201, 202, 211, 217, 221, 223, 229, 232, 234, 235, 239, 241, 251, 388, 396, 429, 430, 431, 433, 442, 445, 448, 449], "break_when_all_don": [3, 125, 128, 131, 135, 141, 142, 143, 155, 156, 159, 164, 165, 166], "conditionalskip": 3, "programmat": 3, "pretti": [3, 429, 434, 438, 446], "likewis": 3, "break_when_any_don": [3, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 171, 187, 239, 251, 257, 318, 443], "te": 3, "paragraph": 3, "deep": [3, 9, 191, 212, 261, 262, 263, 264, 267, 295, 333, 336, 348, 356, 357, 429, 442], "dive": 3, "gym3": 3, "envpool": [3, 150, 151], "simultan": [3, 25, 141, 150, 151, 155, 164, 444], "advantag": [3, 8, 142, 199, 270, 333, 335, 350, 353, 355, 368, 369, 370, 371, 372, 373, 375, 377, 379, 381, 382, 384, 425, 426, 429, 430, 431, 432, 443, 444, 449], "inherit": [3, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 280, 284, 285, 351, 426, 431, 442, 443], "from_pixel": [3, 11, 126, 127, 129, 130, 134, 136, 137, 140, 141, 161, 191, 223, 386, 388, 429, 430, 432, 434, 438, 439, 445, 446, 448, 449], "81": [3, 113], "simpli": [3, 6, 45, 46, 47, 48, 62, 64, 71, 84, 85, 117, 119, 124, 204, 228, 247, 351, 368, 424, 425, 429, 431, 436, 442, 443, 449], "d": [3, 39, 63, 66, 70, 78, 79, 80, 95, 105, 106, 254, 272, 276, 319, 323, 448], "privat": [3, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 247, 444, 449], "absenc": 3, "total": [3, 16, 17, 20, 22, 23, 24, 25, 26, 30, 45, 46, 47, 48, 52, 54, 60, 62, 63, 64, 68, 69, 70, 71, 79, 80, 85, 108, 114, 119, 335, 350, 353, 397, 399, 401, 406, 409, 410, 428, 429, 430, 431, 432, 436, 442, 443, 445, 446, 447, 448], "accord": [3, 16, 17, 20, 22, 23, 24, 25, 26, 45, 46, 47, 48, 51, 62, 64, 71, 72, 85, 108, 111, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 167, 168, 215, 226, 275, 287, 298, 303, 304, 366, 424, 425, 435, 436, 442, 444, 446], "inner": [3, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 201, 241, 426, 430, 431, 443, 449], "mind": [3, 106, 113, 114, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 442, 443], "wherev": 3, "lost": [3, 8, 247], "intern": [3, 51, 82, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 249, 427], "face": [3, 5, 8, 9, 434, 449], "NOT": [3, 96, 97, 104, 114, 220], "right": [3, 6, 7, 28, 72, 106, 113, 430, 431, 433, 443, 444, 449], "preliminari": 3, "warranti": 3, "affect": [3, 8, 32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 171, 196, 241, 249, 251, 368, 369, 370, 371, 442], "preclud": 3, "presenc": [3, 39, 66, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 171, 436], "annihil": 3, "supersed": [3, 28], "pettingzoowrapp": [3, 422], "group": [3, 30, 31, 33, 34, 35, 36, 37, 40, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 66, 74, 75, 83, 86, 87, 88, 89, 90, 125, 128, 131, 135, 142, 143, 146, 147, 148, 153, 154, 155, 156, 157, 158, 159, 164, 165, 166, 167, 168, 169, 170, 172, 199, 212, 231, 363, 424, 430, 435, 437, 443, 446], "__not__": [3, 319, 334, 336, 349, 354, 356, 358, 359], "constrain": [3, 211, 274, 278, 353, 449], "li": 3, "fact": [3, 7, 8, 429, 431, 434, 442, 443, 444, 445, 446, 449], "meaning": [3, 30, 31, 33, 34, 35, 36, 37, 40, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90], "perfectli": [3, 426, 429, 433, 444], "meaningless": 3, "val": [3, 30, 31, 33, 34, 35, 36, 37, 40, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 396, 436, 448], "agent0": [3, 433], "agent1": 3, "overrid": [3, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 66, 67, 70, 73, 74, 75, 78, 83, 86, 87, 88, 89, 90, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 187, 251, 266, 388, 420, 424], "bool": [3, 12, 14, 16, 17, 20, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 98, 99, 100, 101, 102, 105, 106, 108, 109, 111, 112, 113, 114, 115, 120, 121, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 176, 182, 183, 184, 185, 187, 188, 191, 192, 196, 198, 199, 201, 202, 203, 204, 206, 209, 211, 213, 214, 215, 217, 219, 221, 222, 224, 226, 227, 228, 231, 232, 234, 237, 238, 239, 241, 242, 243, 244, 246, 248, 249, 251, 252, 253, 254, 255, 257, 258, 259, 261, 262, 272, 273, 274, 275, 276, 277, 278, 279, 281, 282, 284, 285, 286, 287, 288, 302, 303, 304, 309, 310, 315, 316, 318, 319, 320, 321, 322, 323, 324, 326, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 362, 366, 368, 369, 370, 371, 374, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 395, 396, 399, 400, 401, 403, 404, 406, 420, 430, 431, 433, 444, 448, 449], "500": [3, 429, 430], "note": [3, 4, 16, 17, 20, 22, 23, 24, 25, 26, 32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 179, 183, 198, 202, 239, 248, 249, 251, 256, 272, 274, 276, 278, 295, 319, 323, 343, 422, 425, 430, 433, 435, 441, 442, 443, 449], "launch": [3, 16, 17, 22, 23, 24, 25, 27, 155, 164], "great": [3, 7, 8, 433, 442, 448], "speedup": [3, 8, 442, 449], "precis": [3, 30, 31, 33, 34, 35, 36, 37, 40, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 182, 198, 202, 273, 277, 429, 431], "misspecifi": 3, "caus": [3, 7, 8, 16, 17, 20, 99, 101, 121, 125, 128, 131, 135, 139, 142, 143, 155, 156, 159, 164, 165, 166, 220, 449], "breakag": 3, "rais": [3, 13, 16, 17, 20, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 66, 67, 71, 73, 74, 75, 78, 83, 85, 86, 87, 88, 89, 90, 99, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 167, 171, 172, 191, 205, 214, 224, 233, 234, 235, 239, 241, 248, 251, 253, 271, 295, 336, 351, 356, 396, 429, 431, 442, 443, 446], "mismatch": [3, 66, 430], "subprocess": [3, 16, 17, 22, 132, 155, 164], "multithreadedenv": [3, 422], "underneath": 3, "higher": [3, 4, 106, 194, 326, 429, 430, 431, 442, 446, 449], "type": [3, 12, 16, 17, 20, 22, 23, 24, 25, 26, 32, 33, 36, 37, 39, 44, 45, 46, 47, 48, 49, 51, 56, 58, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 75, 78, 79, 80, 81, 84, 85, 86, 95, 108, 125, 128, 131, 135, 142, 143, 146, 149, 152, 155, 156, 157, 158, 159, 164, 165, 166, 173, 179, 180, 182, 188, 191, 195, 198, 200, 203, 204, 209, 211, 213, 219, 221, 222, 228, 232, 234, 238, 239, 240, 241, 242, 244, 246, 248, 249, 251, 253, 258, 259, 279, 284, 285, 288, 296, 305, 307, 315, 319, 322, 323, 330, 333, 334, 336, 337, 338, 340, 342, 343, 344, 349, 351, 353, 354, 355, 356, 358, 359, 361, 363, 366, 374, 386, 418, 422, 424, 429, 430, 431, 433, 437, 442, 443, 444, 446, 449], "atari": [3, 4, 191, 259, 388, 433, 438, 449], "classic": [3, 149, 158, 430], "benchmark_batched_env": 3, "significantli": [3, 113, 114, 191, 425, 429, 430, 436, 443], "asyncenvpool": [3, 159, 165], "pool": [3, 125, 159, 165, 235], "concurr": [3, 125, 442, 443], "contrari": [3, 425], "permit": [3, 194, 206, 231, 243, 333, 335, 350, 353, 355], "job": [3, 7, 23, 24, 25, 27, 70, 79, 80, 108, 446, 448], "famili": 3, "interest": [3, 319, 323, 424, 430, 431, 434, 443, 444, 449], "prefer": [3, 16, 17, 22, 25, 28, 29, 63, 70, 79, 80, 113, 114, 125, 159, 165, 220, 228, 353, 358, 403, 424, 431, 442, 443, 446, 448], "pleas": [3, 32, 39, 44, 56, 66, 67, 73, 78, 82, 125, 128, 131, 134, 135, 142, 143, 155, 156, 157, 158, 159, 164, 165, 166, 188, 191, 209, 235, 239, 241, 251, 284, 285, 286, 336, 356, 423], "lifecycl": 3, "processorasyncenvpool": 3, "inter": [3, 155, 159], "threadingasyncenvpool": 3, "executor": [3, 23, 24, 25, 165], "functool": [3, 16, 17, 125], "synchron": [3, 13, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 45, 46, 47, 48, 62, 64, 71, 85, 150, 418, 419, 422, 430, 431, 442], "s0": [3, 125], "clamp": [3, 125, 323, 326, 345, 406, 425, 442, 444], "env_index": [3, 125], "async_step_send": [3, 125, 159, 165], "s0_result": [3, 125], "async_step_recv": [3, 125, 159, 165], "close": [3, 20, 125, 135, 150, 211, 333, 335, 350, 353, 386, 429, 430, 434, 441, 442, 444, 448], "seamlessli": [3, 444], "paradigm": [3, 22, 443], "decpodp": 3, "game": [3, 4, 5, 128, 147, 148, 153, 154, 259, 388, 433, 438], "thank": [3, 429, 433, 434, 448], "carrier": [3, 431, 432, 434, 446], "particular": [3, 32, 39, 44, 56, 66, 67, 73, 78, 84, 85, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 209, 241, 251, 425, 426, 430, 432, 434, 441, 443, 446], "thu": [3, 350, 443], "vma": [3, 169, 170, 386, 442, 443], "robot": [3, 5, 7, 219, 244, 246, 433, 443], "vmasenv": [3, 386, 422, 442, 443], "balanc": [3, 129, 130, 429, 430], "num_env": [3, 26, 125, 134, 138, 151, 169, 170, 386, 442, 443], "n_agent": [3, 169, 170, 284, 285, 286, 296, 305, 366, 386, 425, 442, 443], "ground_rew": 3, "pos_rew": 3, "style": [3, 63, 70, 79, 80], "vari": [3, 134, 136, 137, 157, 158, 161, 169, 220, 425, 433, 443], "creation": [3, 155, 164, 449], "info_spec": [3, 155], "agent_i_action_spec": 3, "agent_i_reward_spec": 3, "agent_i_observation_spec": 3, "categor": [3, 30, 31, 33, 34, 36, 37, 40, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 125, 126, 127, 128, 131, 134, 135, 136, 137, 140, 141, 142, 143, 147, 148, 150, 151, 153, 154, 155, 156, 157, 158, 159, 161, 164, 165, 166, 167, 168, 169, 170, 183, 184, 185, 203, 221, 268, 291, 294, 297, 315, 316, 319, 320, 321, 338, 341, 342, 366, 422, 432], "simpl": [3, 9, 21, 32, 39, 44, 56, 60, 66, 67, 73, 78, 83, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251, 261, 318, 323, 338, 340, 351, 355, 425, 429, 430, 431, 434, 435, 436, 442, 443, 446, 449], "prefix": [3, 28, 32, 39, 44, 45, 46, 47, 48, 56, 62, 64, 66, 67, 71, 73, 78, 84, 85, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 209, 236, 239, 241, 251, 319, 336, 351, 356, 387, 432, 436, 449], "exactli": [3, 32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 137, 142, 143, 155, 156, 159, 164, 165, 166, 239, 241, 251, 272, 276, 291, 336, 356, 429, 432, 437, 442, 443], "action_kei": [3, 16, 17, 20, 22, 23, 24, 25, 26, 51, 125, 128, 131, 135, 142, 143, 155, 156, 159, 160, 164, 165, 166, 182, 184, 185, 201, 211, 213, 253, 255, 271, 280, 281, 295, 318, 425, 442, 443], "reward_kei": [3, 39, 41, 43, 51, 57, 76, 96, 97, 104, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 182, 251, 255, 281, 400, 404, 442, 443], "set_kei": [3, 203, 333, 335, 336, 338, 341, 342, 343, 349, 350, 351, 353, 354, 355, 356, 366, 372, 429, 442, 443], "awai": [3, 431, 434, 442, 443, 448], "leaf": [3, 16, 17, 20, 22, 23, 24, 25, 26, 30, 31, 33, 34, 35, 36, 37, 40, 49, 51, 52, 53, 54, 55, 58, 59, 60, 61, 75, 83, 85, 86, 87, 88, 89, 90, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 210, 232, 234, 240, 323], "full": [3, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 256, 274, 278, 316, 323, 397, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 448, 449], "autoresettransform": 3, "invalid": [3, 32, 39, 44, 56, 66, 67, 73, 78, 119, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 172, 251, 282, 283], "nan": [3, 187, 247], "auto_reset": [3, 51, 125, 128, 131, 135, 141, 142, 143, 155, 156, 159, 164, 165, 166, 187, 199, 251, 444], "auto_reset_replac": [3, 187], "placehold": [3, 137, 203, 241], "set_gym_backend": [3, 125, 128, 131, 134, 135, 142, 143, 155, 156, 159, 164, 165, 166, 175, 187, 422, 434, 448], "autoresettinggymenv": [3, 187], "self": [3, 16, 17, 20, 22, 23, 24, 25, 26, 29, 32, 36, 37, 39, 44, 45, 46, 47, 48, 49, 56, 62, 64, 66, 67, 71, 73, 75, 78, 85, 125, 128, 131, 135, 142, 143, 149, 155, 156, 159, 164, 165, 166, 185, 187, 188, 190, 191, 192, 195, 196, 198, 199, 200, 202, 203, 204, 205, 207, 210, 211, 218, 219, 220, 221, 222, 224, 227, 228, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 244, 245, 246, 247, 248, 251, 252, 253, 255, 268, 271, 274, 278, 281, 284, 285, 296, 305, 319, 322, 327, 333, 334, 336, 337, 338, 340, 342, 343, 344, 349, 351, 353, 354, 355, 356, 358, 359, 366, 368, 369, 370, 371, 372, 426, 429, 444, 448], "super": [3, 149, 185, 187, 188, 190, 191, 192, 195, 196, 198, 200, 202, 203, 204, 205, 207, 210, 211, 218, 220, 221, 222, 224, 227, 228, 231, 232, 233, 234, 235, 236, 238, 239, 240, 244, 245, 247, 248, 251, 255, 268, 281, 327, 334, 336, 337, 342, 349, 354, 356, 358, 359, 429, 444, 448], "td_reset": [3, 187], "exclud": [3, 8, 30, 31, 33, 34, 35, 36, 37, 40, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 78, 83, 86, 87, 88, 89, 90, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 182, 187, 191, 204, 296, 335, 350, 353, 442, 443, 446], "r": [3, 4, 51, 56, 128, 184, 185, 187, 194, 196, 215, 229, 236, 239, 248, 254, 257, 273, 323, 332, 367, 386, 430, 444, 449], "3633e": [3, 187], "02": [3, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 187, 430, 439], "4877e": [3, 187], "01": [3, 187, 215, 254, 295, 329, 333, 335, 350, 353], "2849e": [3, 187], "7584e": [3, 187], "6609e": [3, 187], "6166e": [3, 187], "8366e": [3, 187], "2761e": [3, 187], "5685e": [3, 187], "4102e": [3, 187], "8111e": [3, 187], "9959e": [3, 187], "0865e": [3, 187], "5644e": [3, 187], "2119e": [3, 187], "2542e": [3, 187], "03": [3, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 187, 215, 236], "9952e": [3, 187], "4059e": [3, 187], "2094e": [3, 187], "9009e": [3, 187], "5140e": [3, 187], "3554e": [3, 187], "2920e": [3, 187], "7893e": [3, 187], "6429e": [3, 187], "3057e": [3, 187], "2867e": [3, 187], "6963e": [3, 187], "3818e": [3, 187], "2576e": [3, 187], "2679e": [3, 187], "1640e": [3, 187], "00": [3, 126, 127, 187, 428, 447], "6972e": [3, 187], "0212e": [3, 187], "5959e": [3, 187], "4637e": [3, 187], "3121e": [3, 187], "2168e": [3, 187], "5232e": [3, 187], "7704e": [3, 187], "7457e": [3, 187], "4127e": [3, 187], "1064e": [3, 187], "0854e": [3, 187], "5712e": [3, 187], "2189e": [3, 187], "5235e": [3, 187], "8289e": [3, 187], "0009e": [3, 187], "0257e": [3, 187], "8893e": [3, 187], "5872e": [3, 187], "9405e": [3, 187], "7766e": [3, 187], "0403e": [3, 187], "0626e": [3, 187], "2959e": [3, 187], "7263e": [3, 187], "2775e": [3, 187], "9564e": [3, 187], "0411e": [3, 187], "6769e": [3, 187], "6354e": [3, 187], "8698e": [3, 187], "1765e": [3, 187], "6292e": [3, 187], "5375e": [3, 187], "1820e": [3, 187], "7023e": [3, 187], "5836e": [3, 187], "9016e": [3, 187], "4826e": [3, 187], "6191e": [3, 187], "6387e": [3, 187], "8667e": [3, 187], "2056e": [3, 187], "1147e": [3, 187], "5991e": [3, 187], "0278e": [3, 187], "5219e": [3, 187], "3067e": [3, 187], "6617e": [3, 187], "3322e": [3, 187], "2629e": [3, 187], "4599e": [3, 187], "7298e": [3, 187], "5848e": [3, 187], "0148e": [3, 187], "5745e": [3, 187], "6982e": [3, 187], "7877e": [3, 187], "3527e": [3, 187], "7285e": [3, 187], "6668e": [3, 187], "0583e": [3, 187], "6956e": [3, 187], "3962e": [3, 187], "9845e": [3, 187], "5015e": [3, 187], "5903e": [3, 187], "9993e": [3, 187], "9418e": [3, 187], "0196e": [3, 187], "6557e": [3, 187], "2109e": [3, 187], "8997e": [3, 187], "1507e": [3, 187], "7363e": [3, 187], "0310e": [3, 187], "9574e": [3, 187], "8980e": [3, 187], "0090e": [3, 187], "forecast": 3, "awar": [3, 7, 99, 100, 101, 102, 115, 117, 121, 274, 278, 430, 432], "detect": [3, 351, 425], "return_contigu": [3, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 171, 441], "tensordictbas": [3, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 28, 30, 31, 33, 34, 35, 36, 37, 39, 40, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 66, 69, 71, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 119, 125, 128, 131, 133, 135, 142, 143, 155, 156, 159, 164, 165, 166, 171, 182, 183, 185, 187, 188, 190, 191, 192, 195, 196, 198, 200, 203, 204, 205, 206, 207, 210, 211, 218, 220, 221, 222, 224, 227, 228, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 244, 245, 247, 248, 249, 251, 253, 255, 271, 274, 278, 280, 281, 295, 314, 316, 318, 321, 322, 323, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 347, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 366, 367, 368, 369, 370, 371, 372, 406, 429, 442, 444], "envwithdynamicspec": 3, "max_count": 3, "float": [3, 16, 17, 22, 29, 32, 33, 36, 38, 39, 44, 56, 60, 63, 66, 67, 72, 73, 78, 79, 86, 105, 106, 108, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 184, 187, 191, 195, 198, 202, 211, 212, 215, 219, 224, 225, 226, 233, 234, 237, 240, 241, 244, 246, 249, 251, 253, 254, 256, 257, 266, 269, 272, 275, 276, 279, 282, 283, 287, 288, 294, 298, 299, 302, 304, 322, 326, 329, 331, 332, 333, 334, 335, 336, 340, 341, 342, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 367, 373, 374, 375, 376, 377, 378, 379, 380, 381, 404, 429, 430, 446, 449], "_set_se": [3, 185, 188, 198, 202, 221, 444], "lazystackedtensordict": [3, 51, 75, 100, 125, 128, 131, 135, 142, 143, 149, 155, 156, 159, 164, 165, 166, 199, 441], "float32": [3, 16, 17, 20, 33, 36, 39, 41, 45, 46, 47, 48, 51, 62, 63, 64, 66, 71, 72, 76, 78, 79, 80, 83, 84, 85, 86, 99, 100, 101, 105, 106, 113, 121, 125, 126, 127, 128, 131, 134, 135, 136, 140, 141, 142, 143, 149, 152, 153, 154, 155, 156, 159, 162, 163, 164, 165, 166, 167, 169, 170, 176, 182, 184, 188, 198, 202, 203, 204, 209, 212, 215, 217, 221, 222, 224, 228, 231, 232, 234, 237, 242, 255, 257, 267, 268, 274, 278, 281, 295, 296, 297, 305, 310, 311, 312, 313, 314, 315, 318, 319, 320, 321, 322, 325, 327, 330, 333, 334, 336, 337, 338, 340, 341, 342, 349, 353, 354, 355, 356, 358, 359, 366, 424, 444], "exclusive_field": [3, 51, 100, 125, 199], "stack_dim": [3, 51, 100, 125, 199], "dramat": 3, "carefulli": [3, 442, 443, 449], "against": [3, 5, 7, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 66, 67, 73, 74, 75, 78, 83, 86, 87, 88, 89, 90, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 171, 251, 310, 315, 316, 319, 320, 321, 322, 323, 334, 336, 349, 354, 356, 358, 359, 431, 442, 443], "plain": [3, 8, 142, 434], "expens": [3, 106, 113, 114, 386, 446], "absent": [3, 36, 37, 49, 75, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 228, 241], "torchvis": [3, 11, 219, 246, 390, 442, 448, 449], "callabl": [3, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 67, 68, 69, 70, 73, 74, 75, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 108, 125, 128, 131, 132, 135, 142, 143, 149, 155, 156, 159, 164, 165, 166, 181, 186, 188, 195, 196, 199, 203, 209, 234, 241, 242, 251, 252, 258, 259, 279, 286, 323, 332, 351, 386, 411, 412, 418, 419, 420, 430, 446], "bring": [3, 431, 434, 449], "signific": [3, 5, 8, 431, 448, 449], "kind": [3, 70, 83, 436, 442, 446], "consult": 3, "resize_par": 3, "revers": [3, 276], "order": [3, 11, 20, 32, 39, 44, 56, 60, 63, 66, 67, 68, 69, 70, 73, 78, 79, 80, 108, 112, 114, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 192, 198, 199, 202, 209, 217, 231, 239, 241, 251, 294, 310, 315, 322, 324, 325, 327, 333, 334, 336, 337, 341, 342, 349, 353, 354, 355, 356, 358, 359, 430, 442, 443], "chain": [3, 45, 46, 47, 48, 62, 63, 64, 70, 71, 79, 80, 85, 142, 143, 195, 201, 258, 259, 325, 449], "in_keys_inv": [3, 177, 194, 198, 200, 202, 209, 215, 216, 217, 221, 222, 224, 229, 238, 240, 242, 243, 429, 441, 444, 449], "append_transform": [3, 51, 63, 68, 69, 70, 79, 80, 108, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 177, 184, 185, 187, 188, 190, 191, 192, 195, 196, 199, 200, 203, 204, 205, 207, 209, 210, 211, 218, 219, 220, 221, 222, 224, 227, 228, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 244, 245, 247, 248, 251, 257, 274, 278, 386, 429, 432, 442, 444, 446, 448, 449], "doubletofloat": [3, 429, 431, 441], "float64": [3, 32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 129, 130, 131, 135, 142, 143, 147, 148, 155, 156, 159, 164, 165, 166, 184, 195, 198, 202, 219, 234, 240, 241, 244, 246, 251, 322], "think": [3, 423, 431, 442, 443, 449], "in_": 3, "out_": 3, "perspect": [3, 268, 316, 343, 431, 433], "outer": [3, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 241, 426, 429, 430, 449], "ob": [3, 4, 8, 28, 36, 37, 49, 51, 63, 68, 69, 70, 75, 78, 79, 80, 85, 105, 108, 113, 114, 119, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 176, 182, 185, 187, 198, 200, 202, 215, 229, 231, 237, 261, 262, 263, 264, 284, 285, 286, 320, 327, 334, 336, 337, 342, 349, 354, 356, 358, 359, 368, 369, 370, 371, 430, 433, 441, 442, 444, 446, 448, 449], "obs_standard": 3, "out_keys_inv": [3, 177, 194, 198, 200, 202, 209, 215, 216, 217, 221, 222, 229, 231, 238, 240, 242, 243, 444], "illustr": [3, 429, 430, 435, 446], "chang": [3, 5, 7, 11, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 67, 70, 73, 74, 75, 78, 79, 80, 83, 86, 87, 88, 89, 90, 99, 100, 101, 102, 106, 112, 113, 115, 117, 121, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 188, 195, 198, 200, 202, 204, 211, 213, 221, 222, 228, 232, 238, 240, 241, 242, 248, 249, 251, 276, 333, 334, 336, 337, 338, 340, 342, 343, 344, 349, 351, 353, 354, 355, 356, 358, 359, 366, 425, 429, 432, 442, 443, 444, 445, 446, 449], "schemat": [3, 425], "outermost": 3, "innermost": 3, "similar": [3, 32, 39, 44, 45, 46, 47, 48, 56, 58, 62, 64, 66, 67, 70, 71, 73, 78, 85, 125, 128, 131, 135, 142, 143, 155, 156, 157, 158, 159, 164, 165, 166, 195, 199, 219, 234, 240, 241, 244, 245, 246, 248, 249, 251, 311, 313, 319, 322, 323, 425, 429, 430, 431, 432, 433, 435, 436, 437, 438, 444, 446, 448, 449], "transform_action_spec": [3, 195, 200, 215, 240, 242, 243, 251], "spec_from_random_valu": 3, "_apply_transform": [3, 185, 187, 188, 190, 191, 192, 195, 196, 200, 203, 204, 205, 207, 210, 211, 218, 220, 221, 222, 224, 227, 228, 231, 232, 233, 234, 235, 236, 238, 239, 240, 244, 245, 247, 248, 251, 444, 449], "rand": [3, 30, 31, 33, 34, 35, 36, 37, 40, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 63, 68, 69, 70, 74, 75, 79, 80, 83, 86, 87, 88, 89, 90, 100, 108, 126, 127, 140, 141, 149, 153, 154, 160, 167, 168, 185, 188, 198, 202, 221, 231, 255, 281, 319, 333, 334, 336, 337, 338, 340, 341, 342, 349, 351, 353, 354, 356, 358, 359, 444, 448, 449], "approach": [3, 63, 70, 79, 80, 191, 215, 254, 284, 285, 358, 429, 431, 436, 437, 442, 449], "insid": [3, 45, 46, 47, 48, 62, 64, 71, 85, 155, 449], "did": [3, 70, 247, 374, 430, 431, 437, 446, 449], "_inv_apply_transform": [3, 184, 240, 251, 444, 449], "actiondiscret": 3, "rand_act": [3, 125, 128, 131, 135, 142, 143, 146, 155, 156, 157, 158, 159, 164, 165, 166, 188, 199, 241, 434], "action_discret": 3, "addonetoob": 3, "Is": [3, 240], "rewrit": [3, 240], "_call": [3, 185, 187, 188, 190, 191, 192, 195, 196, 200, 201, 203, 204, 205, 206, 207, 210, 211, 218, 220, 221, 222, 224, 227, 228, 231, 232, 233, 234, 235, 236, 238, 239, 240, 244, 245, 247, 248, 251, 444], "_inv_cal": [3, 184, 240, 251], "overwrit": [3, 240], "till": [3, 240, 247], "encapsul": [3, 240, 434, 435, 436], "forget": [3, 240, 276], "edit": [3, 240, 251, 437], "top": [3, 4, 119, 126, 127, 140, 141, 197, 240, 255, 281, 435], "transform_output_spec": [3, 188, 195, 198, 200, 204, 211, 213, 221, 222, 228, 232, 238, 240, 242, 249, 251], "transform_input_spec": [3, 184, 188, 195, 198, 200, 201, 213, 217, 221, 222, 227, 231, 232, 233, 234, 238, 240, 242, 245, 251], "transform_observation_spec": [3, 188, 191, 192, 193, 194, 195, 197, 198, 200, 203, 204, 206, 208, 210, 211, 213, 215, 217, 221, 222, 223, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 247, 248, 249, 251, 444], "transform_state_spec": [3, 195, 200, 215, 240, 242, 243, 251], "transform_reward_spec": [3, 188, 189, 194, 195, 198, 200, 204, 211, 212, 213, 221, 222, 225, 226, 227, 228, 229, 231, 232, 238, 240, 242, 243, 249, 251], "rewardsum": [3, 182, 240, 251, 442, 443], "undo": 3, "addonetoact": 3, "subtract": [3, 233], "regist": [3, 14, 15, 18, 19, 21, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 67, 68, 69, 70, 73, 74, 75, 78, 79, 80, 83, 86, 87, 88, 89, 90, 108, 125, 128, 131, 134, 135, 136, 142, 143, 155, 156, 159, 164, 165, 166, 167, 168, 179, 182, 198, 202, 203, 227, 239, 241, 251, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 286, 289, 290, 293, 295, 298, 299, 301, 306, 314, 316, 318, 321, 326, 329, 333, 334, 336, 337, 338, 340, 342, 343, 344, 349, 351, 353, 354, 355, 356, 358, 359, 366, 386, 388, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 426, 429, 431, 434, 446], "manipul": [3, 4, 8, 129, 130, 219, 240, 244], "third_transform": 3, "unexpect": [3, 16, 17, 20, 32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251, 449], "behviour": 3, "fortun": [3, 432, 433, 434, 435, 438], "alreadi": [3, 8, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 66, 67, 71, 73, 74, 75, 78, 83, 84, 85, 86, 87, 88, 89, 90, 99, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 183, 234, 251, 252, 323, 368, 369, 370, 371, 429, 431, 438, 442, 443], "catfram": [3, 318, 430], "notic": [3, 119, 191, 425, 431, 439, 444], "parenthood": 3, "henc": [3, 63, 183, 220, 284, 429, 431, 442, 443, 444], "transform1": 3, "transform2": 3, "transform3": 3, "last_two": 3, "isinst": [3, 155, 164, 241, 386, 396, 444], "discret": [3, 30, 31, 33, 34, 35, 36, 37, 40, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 125, 128, 131, 134, 135, 136, 142, 143, 147, 148, 155, 156, 157, 158, 159, 164, 165, 166, 169, 170, 184, 201, 209, 291, 294, 297, 340, 341, 342, 343, 424, 430, 435, 443], "might": [3, 45, 46, 47, 48, 62, 64, 65, 71, 85, 392, 423, 429, 434, 449], "action_mask": [3, 128, 140, 141, 157, 158, 162, 163, 185], "unavail": [3, 157, 158], "probabl": [3, 4, 8, 72, 108, 111, 256, 257, 266, 268, 271, 272, 274, 276, 278, 279, 282, 283, 291, 303, 304, 319, 323, 336, 353, 424, 425, 430, 433, 435, 448], "probabilistictensordictmodul": [3, 211, 323, 324, 425, 448], "tensordictsequenti": [3, 39, 66, 78, 257, 271, 274, 278, 295, 315, 318, 324, 325, 330, 424, 429, 430, 432, 433, 435, 439, 441, 442, 445, 448], "maskedcategor": [3, 283, 422], "linear": [3, 16, 17, 20, 22, 26, 32, 39, 44, 56, 66, 67, 68, 73, 78, 125, 126, 127, 128, 131, 135, 142, 143, 149, 155, 156, 159, 164, 165, 166, 195, 211, 219, 234, 240, 241, 244, 246, 251, 255, 257, 258, 259, 261, 262, 263, 264, 268, 270, 271, 279, 281, 284, 285, 287, 288, 295, 297, 298, 299, 310, 311, 312, 313, 317, 318, 319, 320, 322, 325, 327, 333, 334, 336, 337, 338, 340, 341, 342, 343, 344, 349, 351, 353, 354, 355, 356, 358, 359, 366, 368, 369, 370, 371, 416, 424, 430, 441, 445, 448], "in_feat": 3, "out_feat": 3, "logit": [3, 46, 48, 64, 72, 267, 282, 283, 291, 294, 316, 319, 341, 342, 424], "dist": [3, 10, 282, 283, 291, 323, 425, 435], "distribution_class": [3, 211, 311, 312, 313, 314, 319, 323, 325, 333, 334, 336, 341, 342, 349, 353, 354, 355, 356, 424, 429, 431, 435, 442, 443, 448], "wrap": [3, 5, 16, 17, 20, 22, 23, 24, 25, 26, 29, 32, 38, 39, 44, 56, 66, 67, 72, 73, 78, 125, 126, 127, 128, 131, 135, 136, 140, 141, 142, 143, 148, 151, 153, 154, 155, 156, 157, 158, 159, 164, 165, 166, 168, 170, 171, 179, 196, 239, 241, 251, 252, 274, 278, 306, 311, 312, 313, 318, 320, 323, 328, 351, 366, 424, 429, 430, 431, 432, 436, 439, 442, 443, 449], "actionmask": [3, 128], "your_base_env": 3, "mask_kei": [3, 28, 185, 220, 251], "itself": [3, 32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 175, 187, 251, 351, 358, 431, 434], "ey": 3, "report": [3, 126, 127, 140, 141, 438], "foremost": 3, "callback": [3, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 443], "ad": [3, 4, 20, 28, 32, 39, 44, 51, 56, 63, 66, 67, 68, 69, 70, 73, 78, 79, 80, 92, 105, 106, 108, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 191, 209, 227, 239, 241, 251, 254, 287, 288, 295, 332, 333, 335, 336, 338, 343, 350, 353, 356, 366, 430, 432, 433, 435, 442, 446, 448, 449], "tensordictrecord": [3, 422], "videorecord": [3, 11, 386, 422, 431, 438, 439, 442], "csvlogger": [3, 11, 386, 388, 422, 430, 438, 439, 442], "wandblogg": [3, 422, 438], "tensorboardlogg": [3, 416, 422, 438], "tag": [3, 7, 11, 386, 388, 390, 393, 420, 438, 439, 442], "mp4": [3, 386, 388, 390, 439, 442], "video_format": [3, 386, 388, 390, 439, 442], "whc": 3, "cwh": 3, "exp": [3, 332, 425], "al": [3, 29, 134, 136, 203, 217, 255, 433, 449], "pong": [3, 151, 217, 433, 449], "v5": [3, 134, 136, 151, 203, 217, 433, 449], "tediou": [3, 434], "workspac": [3, 85, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 209], "pixelrendertransform": [3, 422, 442], "stream": 3, "alik": [3, 386], "envcreat": [3, 20, 27, 155, 164, 239, 386, 416, 417, 420, 422, 429, 430, 448, 449], "render_mod": [3, 386, 444], "rgb_arrai": [3, 386, 442, 443, 444], "uncom": [3, 438], "line": [3, 7, 32, 39, 44, 51, 56, 66, 67, 73, 78, 85, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251, 430, 438, 442, 443], "comment": [3, 426, 430, 448], "pixels_record": [3, 386], "mission": 3, "irrespect": [3, 322, 323], "dmcontrol": [3, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "jumanji": [3, 125, 128, 131, 135, 140, 141, 142, 143, 155, 156, 159, 164, 165, 166], "framework": [3, 4, 9, 27, 125, 126, 127, 128, 131, 135, 140, 141, 142, 143, 149, 155, 156, 159, 164, 165, 166, 272, 448, 449], "Its": [3, 32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 195, 219, 234, 240, 241, 244, 246, 248, 251, 322, 372], "success": [3, 142, 191, 199, 236, 271, 336, 358, 430, 437, 439, 444, 446, 448], "foundat": [3, 5, 157, 158, 431, 443], "inspir": [3, 433, 444], "gone": [3, 4, 5, 318], "concomittantli": 3, "problem": [3, 7, 8, 9, 20, 430, 431, 432, 437, 442, 443, 444, 446, 449], "decor": [3, 8, 179, 181, 252, 274, 278, 309, 351, 368, 369, 370, 371, 396, 432, 448], "relev": [3, 13, 16, 17, 20, 22, 23, 24, 25, 26, 72, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 368, 369, 370, 371, 372, 395, 433, 444], "gym_backend": [3, 181, 422], "env1": [3, 257, 441], "venv": 3, "python3": [3, 6, 7, 10], "site": [3, 6, 7, 128, 181], "env2": [3, 441], "_env": [3, 6, 134, 449], "classic_control": 3, "pendulumenv": [3, 51, 422, 444], "0x15147e190": 3, "0x1629916a0": 3, "mo_gymnasium": [3, 145, 175, 212], "side": [3, 4, 449], "v0": [3, 16, 17, 36, 37, 45, 46, 47, 48, 49, 62, 64, 71, 75, 85, 125, 128, 131, 135, 137, 140, 141, 142, 143, 144, 145, 155, 156, 159, 164, 165, 166, 195, 212, 241, 248, 249, 396, 416], "26": [3, 114, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "fun": [3, 181, 252, 431, 442, 443], "reveal": 4, "curv": 4, "exploit": [4, 435], "cv": 4, "flip": [4, 141], "correspondingli": 4, "invers": [4, 30, 31, 33, 34, 35, 36, 37, 40, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 63, 68, 69, 70, 74, 75, 79, 80, 83, 86, 87, 88, 89, 90, 108, 184, 191, 198, 202, 204, 209, 215, 222, 224, 236, 238, 240, 242, 251, 331, 341, 349, 422, 444], "prescript": 4, "tune": [4, 29, 211, 442, 443, 445], "coeffici": [4, 29, 38, 72, 211, 443], "bonu": [4, 333, 335, 350, 353], "beta": [4, 63, 79, 105, 106, 341, 349, 350, 429, 430, 446, 448], "reduc": [4, 6, 35, 119, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 182, 191, 196, 233, 254, 256, 303, 422, 430, 442], "downstream": [4, 425, 429], "formul": [4, 442, 443], "rate": [4, 11, 248, 249, 367, 430, 431, 442, 443], "gradient": [4, 32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 241, 251, 256, 275, 283, 288, 291, 303, 304, 323, 333, 335, 336, 337, 341, 342, 347, 349, 350, 351, 353, 354, 355, 356, 358, 359, 367, 368, 369, 370, 371, 406, 429, 431, 442, 443, 444], "easier": [4, 67, 424, 429, 448], "local": [4, 7, 10, 13, 14, 16, 17, 20, 21, 22, 23, 24, 25, 26, 32, 39, 44, 56, 66, 67, 69, 73, 78, 106, 113, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 241, 251, 284, 285, 296, 305, 366, 393, 395, 422, 433, 438, 439, 442, 443], "optima": 4, "product": [4, 9, 30, 31, 33, 34, 35, 36, 37, 40, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 272, 273, 276, 277, 418, 419], "sum": [4, 26, 32, 39, 54, 60, 78, 119, 126, 127, 129, 130, 134, 136, 137, 140, 141, 150, 151, 161, 190, 212, 227, 282, 283, 303, 305, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 347, 349, 350, 352, 353, 354, 355, 356, 358, 359, 367, 374, 425, 429, 430, 431, 432, 433, 436, 439, 442, 443, 444, 449], "stat": [4, 215, 248, 249, 410, 420, 430, 431], "w": [4, 108, 128, 153, 154, 191, 193, 197, 223, 237, 272, 295, 388, 430, 446], "yield": [4, 16, 17, 20, 26, 32, 39, 44, 56, 66, 67, 73, 78, 85, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 199, 251, 351, 429, 436], "insight": [4, 433], "auxiliari": [4, 436], "weight": [4, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 32, 39, 44, 56, 63, 66, 67, 72, 73, 78, 106, 108, 111, 125, 126, 127, 128, 131, 135, 142, 143, 155, 156, 159, 162, 163, 164, 165, 166, 195, 209, 212, 219, 234, 239, 240, 241, 244, 246, 251, 272, 273, 274, 276, 277, 278, 284, 286, 288, 322, 333, 334, 335, 336, 342, 345, 356, 358, 408, 415, 422, 424, 426, 429, 430, 431, 441, 444, 446, 448], "credit": 4, "futur": [4, 28, 32, 39, 44, 45, 46, 47, 48, 56, 62, 64, 66, 67, 71, 73, 78, 85, 96, 97, 104, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 209, 219, 239, 241, 246, 251, 279, 333, 334, 336, 337, 338, 340, 342, 343, 344, 349, 351, 353, 354, 355, 356, 358, 359, 366, 423], "spars": [4, 39, 432], "intermedi": [4, 16, 17, 39, 51, 66, 78, 190, 257, 274, 278, 316, 429, 433, 445], "instrument": 4, "greatli": 4, "soccer": 4, "kick": 4, "ball": 4, "likelihood": [4, 429], "discov": 4, "score": [4, 72, 292, 294], "undesir": 4, "unintention": 4, "valuabl": 4, "idiosyncrat": 4, "subtask": 4, "hierarch": 4, "select": [4, 39, 63, 66, 68, 69, 70, 78, 79, 80, 85, 108, 128, 147, 148, 157, 158, 160, 169, 170, 184, 185, 187, 188, 190, 191, 192, 195, 196, 198, 200, 202, 203, 204, 205, 206, 207, 210, 211, 213, 214, 218, 220, 221, 222, 224, 227, 228, 231, 232, 233, 234, 235, 236, 238, 239, 240, 244, 245, 247, 248, 251, 255, 274, 278, 315, 320, 405, 424, 425, 429, 433, 434, 442, 446], "explicit": [4, 16, 17, 20, 252, 446], "curios": 4, "magnitudin": 4, "domin": 4, "smaller": [4, 29, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 276, 341, 349, 431, 443], "addition": [4, 266], "timestep": [4, 72, 224, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 442, 443], "realli": 4, "huge": [4, 285, 432], "std": [4, 215, 248, 253, 293, 429, 449], "torchrlunseen": [4, 142], "extrins": 4, "wrong": [4, 106, 113], "bonus": 4, "denser": 4, "prior": [4, 73, 299, 345, 443], "freshli": 4, "drop": [4, 112, 114, 182, 249], "meant": [4, 56, 142, 149], "encourag": [4, 155, 294, 429, 430, 446], "measur": [4, 99, 101, 121, 126, 127, 140, 141, 185, 187, 188, 190, 191, 192, 195, 196, 200, 203, 204, 205, 207, 210, 211, 218, 220, 221, 222, 224, 227, 228, 231, 232, 233, 234, 235, 236, 238, 239, 240, 244, 245, 247, 248, 251, 431, 437], "novelti": 4, "revisit": 4, "diminish": 4, "decreas": [4, 29, 435], "ideal": [4, 215, 444], "down": [4, 16, 17, 20, 22, 159, 165, 425, 432, 434], "distil": 4, "nois": [4, 250, 288, 295, 308, 354, 358, 359, 401, 420, 429, 442], "exploratori": [4, 333, 335, 350, 353], "misalign": 4, "trade": [4, 435], "unavoid": 4, "bootstrap": [4, 343, 369, 375, 376, 429, 432], "noisi": [4, 287, 288, 308, 424], "unstabl": [4, 275, 303, 304], "inher": [4, 333, 353], "stochast": [4, 211, 269, 288, 289, 299, 334, 336, 339, 341, 342, 347, 349, 352, 354, 356, 424, 431, 435, 443], "enemi": 4, "pomdp": [4, 446], "loos": [4, 323, 424, 430, 431], "nonexist": 4, "sequenc": [4, 16, 17, 20, 22, 29, 36, 37, 39, 49, 52, 54, 62, 63, 64, 65, 66, 70, 72, 75, 78, 81, 84, 85, 95, 98, 108, 109, 111, 117, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 140, 141, 142, 143, 150, 151, 155, 156, 159, 161, 164, 165, 166, 177, 189, 190, 191, 192, 193, 197, 198, 201, 202, 206, 208, 209, 212, 215, 216, 220, 221, 222, 223, 224, 225, 226, 227, 231, 233, 235, 236, 237, 238, 240, 242, 248, 249, 258, 259, 266, 268, 272, 276, 279, 282, 283, 284, 285, 291, 297, 301, 314, 324, 325, 339, 387, 388, 401, 402, 403, 405, 406, 424, 429, 431, 432, 433, 441, 442, 443, 449], "lstm": [4, 234, 277, 278, 433], "rel": [4, 108, 234, 266, 302, 429, 430, 442, 443, 446], "tend": 4, "stabl": [4, 9, 10, 152], "compens": 4, "descent": [4, 288], "minimum": [4, 86, 125, 155, 164, 225, 269, 302, 303, 304, 326, 329, 332, 334, 336, 342, 351, 352, 356, 397, 425, 429, 431, 439, 442, 443], "manual": [4, 11, 23, 25, 26, 51, 63, 68, 69, 70, 79, 80, 108, 135, 136, 429, 432, 446], "deviat": [4, 215, 248, 249, 253, 255, 269, 281, 287, 288, 293, 294, 353, 358, 359, 429, 435, 443], "radic": 4, "begin": [4, 16, 17, 20, 22, 23, 24, 25, 26, 106, 113, 187, 272, 273, 276, 277, 332, 396, 425, 433, 434, 435, 436, 437, 438, 439], "stabil": [4, 207, 256, 333, 335, 350, 353, 355], "stage": [4, 429, 444], "never": [4, 16, 17, 22, 33, 86, 106, 236, 437, 448], "prevent": [4, 30, 31, 35, 36, 37, 40, 49, 52, 53, 54, 55, 60, 61, 68, 75, 97, 248, 249, 275, 303, 304, 333, 335, 350, 353, 355, 404, 438, 446], "entir": [4, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 191, 284, 431, 434, 444, 446], "submit": [4, 134, 188, 423, 448], "adequ": [4, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 171, 431, 442, 443], "infeas": 4, "allevi": [4, 424], "prune": [4, 143], "fire": [4, 32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251], "illeg": 4, "chess": [4, 128, 153, 154], "grasp": 4, "wherein": 4, "cumul": [4, 39, 227, 233, 255, 374, 431], "q": [4, 9, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 261, 262, 263, 264, 267, 268, 270, 296, 297, 305, 313, 316, 320, 321, 334, 336, 337, 338, 340, 341, 342, 343, 348, 349, 354, 356, 358, 359, 366, 422, 429, 436], "flow": [4, 429, 431, 442, 443, 444, 446], "reparameter": [4, 266, 283, 291], "soft": [4, 348, 356, 357, 442], "critic": [4, 8, 311, 317, 333, 335, 336, 337, 341, 342, 349, 350, 353, 354, 355, 356, 358, 359, 429, 436], "clip": [4, 72, 194, 225, 333, 335, 350, 353, 355, 358, 359, 406, 431, 443, 444], "oppos": [4, 84], "incorrect": [4, 113], "thought": [4, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "region": 4, "squash": [4, 432, 448], "tanh": [4, 258, 259, 272, 273, 275, 276, 277, 279, 285, 302, 303, 304, 326, 431, 435, 442, 443, 444, 445], "prob": [4, 282, 283, 291, 294, 431, 443], "rememb": [4, 442], "remap": 4, "origin": [4, 8, 39, 45, 46, 47, 48, 62, 64, 65, 66, 71, 72, 78, 81, 85, 139, 200, 201, 211, 219, 241, 246, 251, 272, 319, 322, 323, 334, 336, 348, 349, 351, 353, 354, 356, 358, 359, 429, 433, 441, 444, 449], "world": [5, 149, 328, 345, 433, 438, 442, 443, 444, 449], "histor": 5, "ceas": 5, "farama": [5, 144, 145, 157, 158, 431, 444], "gymwrapp": [5, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 204, 228, 232, 247, 422, 431, 448], "feel": [5, 423, 439, 448], "free": [5, 7, 182, 198, 202, 333, 345, 353, 426, 431, 439, 443, 448], "gladli": 5, "prepar": [6, 43, 431], "conda": [6, 7, 423], "cmake": 6, "activ": [6, 7, 9, 51, 258, 259, 265, 269, 279, 284, 285, 335, 350, 353, 424, 444, 448], "sim": 6, "bullet": 6, "headless": [6, 7], "cluster": [6, 7, 8, 23, 26, 423], "withbullet": 6, "forg": [6, 7], "aihabitat": [6, 137], "y": [6, 7, 39, 66, 70, 78, 152, 270, 284, 306, 429, 443, 446], "facebookresearch": [6, 137], "subdirectori": 6, "verbos": [6, 439], "magnum_log": 6, "quiet": 6, "habitat_sim_log": 6, "remov": [6, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 66, 67, 71, 73, 74, 75, 78, 83, 85, 86, 87, 88, 89, 90, 92, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 221, 230, 251, 351, 442, 443, 448, 449], "command": [6, 7, 10, 159, 165, 166, 431, 442, 443, 444, 449], "readm": [6, 7, 169, 448], "md": [6, 7], "habitatenv": [6, 422], "_has_habitat": 6, "available_env": [6, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 140, 141, 142, 143, 144, 147, 148, 152, 153, 154, 155, 156, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 449], "startswith": [6, 257, 425, 429, 436], "oserror": 6, "libllvmlit": 6, "ionstal": 6, "pointer": [6, 132, 351, 429], "env_nam": [6, 125, 126, 128, 129, 131, 132, 134, 135, 137, 140, 142, 143, 144, 150, 155, 156, 159, 161, 164, 165, 166, 429, 431, 449], "llvmlite": 6, "config": [6, 7, 219, 246, 260, 265, 293, 410, 411, 412, 414, 417], "var": [6, 7, 32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 209, 239, 241, 249, 251, 336, 351, 356], "ld_preload": [6, 7], "bind": 6, "deactiv": [6, 7, 315, 351], "importerror": [6, 7, 10], "usr": [6, 7, 10], "x86_64": [6, 7], "linux": [6, 7], "gnu": [6, 7], "libopengl": [6, 7], "undefin": [6, 7, 10, 32, 35, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 209, 239, 241, 251, 336, 351, 356, 433, 446], "symbol": [6, 7, 10], "_glapi_tls_curr": [6, 7], "mujoco_env": [6, 7], "libglvnd": [6, 7], "glx": [6, 7], "cos7": [6, 7], "reinstal": [6, 7], "xvfbwrapper": [6, 7], "sysroot": [6, 7], "lib64": [6, 7], "libgldispatch": [6, 7], "offici": [7, 433], "stand": [7, 42, 129, 130, 155, 164, 441, 444], "joint": [7, 430], "contact": [7, 65, 442], "engin": [7, 161, 444], "biomechan": 7, "graphic": 7, "anim": [7, 443], "area": 7, "demand": [7, 438, 449], "fast": [7, 9, 100, 126, 127, 182, 222, 354, 429, 430, 431, 448], "articul": 7, "acquir": [7, 431], "deepmind": [7, 8, 9, 125, 128, 129, 130, 131, 135, 142, 143, 147, 148, 153, 154, 155, 156, 159, 164, 165, 166, 203, 431, 434], "whomev": 7, "licenc": 7, "incorpor": [7, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 253, 271, 295, 358, 432, 435, 444], "relianc": 7, "obsolet": 7, "legaci": [7, 28], "pro": [7, 423], "tip": [7, 423], "glfw": [7, 429], "osmesa": 7, "egl": 7, "advic": [7, 449], "sudo": [7, 423], "apt": [7, 443], "libglfw3": 7, "libglew2": 7, "libgl1": 7, "mesa": 7, "libosmesa6": 7, "workflow": [7, 143, 311, 312, 313], "glew": 7, "mesalib": 7, "anaconda": 7, "libgl": 7, "cos6": 7, "menpo": 7, "glfw3": 7, "mujoco_gl": 7, "pyopengl_platform": 7, "mkdir": 7, "earlier": [7, 425, 429, 431, 432, 442, 443, 446], "roboti": 7, "html": [7, 16, 17, 150, 152, 153, 154], "wget": 7, "mujoco210": 7, "tar": 7, "gz": 7, "xf": 7, "charg": [7, 16, 17, 22, 155, 164], "mjkei": 7, "txt": 7, "mjlib_path": 7, "home": [7, 62, 64, 84, 95], "bin": [7, 268, 294, 316, 424], "libmujoco210": 7, "ld_library_path": 7, "mujoco_py_mujoco_path": 7, "mujoco_py_mjkey_path": 7, "reload": 7, "later": [7, 264, 319, 323, 429, 431, 433, 446], "nvidia": [7, 139, 433], "older": [7, 252], "hack": [7, 429], "adatp": 7, "script": [7, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 171, 396, 416, 420, 424, 425, 426, 429, 430, 433, 438, 442, 443, 444, 446], "unnot": [7, 220], "mujoco_pi": 7, "cymj": 7, "linuxgpuextensionbuild": 7, "filenam": [7, 97, 430, 446], "troubleshoot": 7, "gl": 7, "h": [7, 108, 191, 193, 197, 223, 237, 272, 273, 274, 276, 277, 278, 281, 388, 430, 446], "eglshim": 7, "fatal": 7, "No": [7, 16, 17, 20, 22, 23, 24, 25, 26, 30, 31, 35, 40, 54, 55, 60, 61], "directori": [7, 45, 46, 47, 48, 62, 64, 71, 84, 85, 99, 393, 395, 425, 426, 429, 435, 438, 442], "devel": 7, "ubuntu": [7, 139], "libglew": 7, "dev": 7, "cento": 7, "yum": 7, "glu": 7, "disappear": [7, 430, 432, 441], "libstdc": 7, "glibcxx_3": 7, "29": [7, 113, 114], "compil": [7, 16, 17, 20, 28, 32, 39, 44, 56, 66, 67, 70, 73, 78, 79, 80, 98, 99, 100, 101, 102, 106, 109, 113, 114, 115, 120, 121, 123, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251, 252, 272, 273, 276, 277, 303, 368], "libosmesa": 7, "libgcc": 7, "filenotfounderror": 7, "errno": 7, "patchelf": 7, "fatalerror": 7, "gladloadgl": 7, "mj_env": 7, "912": 7, "glfwerror": 7, "65537": 7, "myscript": 7, "runtimeerror": [7, 8, 32, 35, 36, 37, 39, 44, 49, 56, 66, 67, 73, 75, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 214, 239, 241, 251, 336, 356, 425, 449], "slurm": 7, "mjrendercontext": 7, "pyx": 7, "46": [7, 113, 126, 127], "114": 7, "_setup_opengl_context": 7, "opengl_context": 7, "130": 7, "offscreenopenglcontext": 7, "opengl": [7, 442, 443], "global": [7, 32, 39, 44, 56, 66, 67, 70, 73, 78, 79, 80, 108, 125, 128, 131, 135, 142, 143, 155, 156, 157, 158, 159, 164, 165, 166, 239, 251, 296, 305, 319, 323, 366, 426, 429, 442, 443], "cuda_visible_devic": 7, "id": [7, 28, 72, 85, 106, 108, 113, 114, 125, 128, 131, 134, 135, 142, 143, 155, 156, 159, 164, 165, 166, 167, 168, 295, 336, 354, 391, 395, 437, 446], "slurm_step_gpu": 7, "black": [7, 128, 442], "onscreen": 7, "101": 7, "lgl": 7, "libegl": 7, "x11": [7, 443], "xlib": 7, "libx11": 7, "xorg": 7, "attributeerror": [7, 32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251], "nonetyp": 7, "glgeterror": 7, "this_dir": 7, "pwd": 7, "ln": 7, "libglut": 7, "sketch": [8, 426], "n_training_step": 8, "datapoint": [8, 84, 446], "n_data_per_train": 8, "no_grad": [8, 32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 211, 251, 256, 272, 273, 276, 277, 368, 369, 370, 371, 431, 432, 433, 443], "loss_fn": [8, 432, 436, 437, 448], "zero_grad": [8, 32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251, 294, 426, 429, 431, 432, 433, 436, 439, 442, 443, 444], "backpropag": [8, 126, 127, 140, 141, 155, 333, 334, 335, 341, 342, 343, 344, 345, 346, 349, 350, 351, 353, 354, 355, 356, 359, 366, 436, 443, 444], "differenti": [8, 84, 126, 127, 211, 336, 358, 368, 369, 370, 371, 432, 435, 436, 442, 443, 444], "denomin": 8, "artifact": 8, "numer": [8, 70, 135, 248, 275, 303, 304, 310, 315, 316, 319, 320, 321, 322, 323, 404, 431, 446, 449], "misconcept": 8, "freed": 8, "appear": [8, 11, 33, 60, 85, 86, 106, 113, 114, 131, 142, 199, 425, 444, 446], "compuat": 8, "fix": [8, 38, 155, 234, 334, 336, 352, 356, 430, 439, 444, 449], "retain_graph": [8, 126, 127], "discuss": [8, 9, 437, 442, 443], "inplac": [8, 32, 39, 44, 45, 46, 47, 48, 51, 56, 62, 64, 66, 67, 71, 73, 78, 85, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251, 322, 429], "forward": [8, 16, 17, 20, 22, 23, 24, 25, 26, 32, 39, 44, 56, 63, 66, 67, 68, 69, 70, 73, 78, 79, 80, 108, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 185, 187, 188, 190, 191, 192, 195, 196, 198, 200, 201, 202, 203, 204, 205, 206, 207, 210, 211, 215, 218, 219, 220, 221, 222, 224, 227, 228, 231, 232, 233, 234, 235, 236, 238, 239, 240, 244, 245, 247, 248, 251, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 284, 285, 286, 287, 289, 290, 293, 295, 296, 298, 299, 301, 305, 306, 314, 316, 318, 319, 321, 322, 323, 326, 327, 329, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 366, 368, 369, 370, 371, 372, 422, 425, 432, 444, 448], "submodul": [8, 32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 175, 234, 251, 274, 278, 330, 351], "param": [8, 32, 39, 44, 56, 66, 67, 72, 73, 78, 125, 128, 131, 135, 142, 143, 149, 155, 156, 159, 164, 165, 166, 188, 195, 198, 200, 204, 211, 213, 221, 222, 228, 232, 238, 240, 242, 249, 251, 266, 268, 284, 285, 286, 302, 314, 319, 322, 325, 351, 361, 365, 368, 369, 370, 371, 372, 429, 433, 439, 442, 443, 444, 445, 448], "grad": [8, 32, 39, 44, 56, 66, 67, 73, 78, 125, 126, 127, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251, 323, 429, 431], "whose": [8, 14, 19, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 66, 67, 72, 73, 74, 75, 78, 83, 86, 87, 88, 89, 90, 125, 128, 131, 135, 142, 143, 155, 156, 157, 158, 159, 164, 165, 166, 195, 219, 234, 240, 241, 244, 246, 251, 296, 322], "factor": [8, 11, 29, 39, 56, 224, 251, 253, 254, 271, 275, 288, 295, 303, 304, 334, 340, 343, 344, 346, 357, 374, 429, 430, 433, 435, 439, 442, 443, 446, 449], "fit": [8, 67, 215, 234, 252, 425, 426, 429], "brax": [8, 125, 126, 127, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 222, 434, 449], "jax": [8, 126, 127, 140, 141, 252], "improperli": 8, "underli": [8, 125, 128, 131, 132, 135, 142, 143, 155, 156, 159, 164, 165, 166, 351, 432, 434, 436, 438, 444], "tedeiou": 8, "priorit": [8, 63, 79, 105, 106, 336, 337, 338, 340, 341, 342, 349, 354, 356, 358, 359, 429, 430, 437, 448], "amount": [8, 155, 295, 430, 446], "costli": [8, 444], "constitut": [8, 430, 443, 444], "profil": 8, "frequent": [8, 51, 446], "program": [8, 341, 349, 433, 449], "functorch": [8, 10], "incl": 8, "suit": [8, 130, 431, 434, 448, 449], "mujoco_instal": 8, "valueerror": [8, 32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251], "bad": 8, "fds_to_keep": 8, "new_shap": 8, "permut": [8, 112, 217, 237, 433, 448, 449], "idea": [9, 354, 426, 432, 435, 442, 443], "introductori": 9, "intro": [9, 431, 432], "dai": [9, 448], "2022": [9, 10, 256, 448], "spin": [9, 129, 130], "hug": 9, "syllabu": 9, "lectur": 9, "awesom": 9, "curat": 9, "succinct": [9, 435], "summari": [9, 215, 248, 429, 430, 431, 432], "reddit": 9, "reagent": 9, "orient": [9, 449], "baselines3": 9, "tf": 9, "bandit": [9, 152], "tensorflow": [9, 282, 283], "kera": 9, "acm": 9, "dopamin": 9, "prototyp": [9, 433, 439], "salina": 9, "tianshou": 9, "eleg": 9, "rlpyt": 9, "rllib": 9, "industri": [9, 448], "grade": 9, "factori": [9, 16, 17, 20, 22, 23, 24, 25, 26, 68, 70, 79, 80, 81, 429], "cherri": 9, "jaxrl": 9, "mbrl": [9, 149, 424], "rlmeta": 9, "light": 9, "elegantrl": 9, "cloud": 9, "mtrl": 9, "baselin": 9, "689": 10, "_torchrl": 10, "_zn8pybind116detail11type_casterin2at6tensoreve4loadens_6handleeb": 10, "colab": [10, 431, 432, 442, 443], "notebook": [10, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449], "24": [10, 114, 134, 150, 151, 294, 318, 388, 442], "pip3": [10, 429, 431, 432, 442, 443], "url": [10, 137], "org": [10, 16, 17, 29, 63, 105, 106, 126, 127, 129, 130, 137, 140, 141, 147, 148, 150, 151, 152, 161, 169, 170, 191, 219, 244, 254, 260, 261, 262, 263, 264, 265, 268, 269, 270, 276, 281, 282, 283, 288, 289, 290, 294, 295, 296, 298, 299, 305, 316, 333, 334, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 352, 353, 355, 356, 357, 358, 368, 373, 381, 421, 440, 445], "whl": 10, "u": [10, 272, 273, 276, 277, 444], "upgrad": 10, "lib_version_her": 10, "pyav": 11, "conveni": [11, 191, 431, 442, 443, 444, 446], "power": [11, 430], "knob": 11, "dispos": 11, "clarifi": 11, "behind": [11, 228, 422], "ultim": [11, 275, 303, 304], "ffmpeg": 11, "whatev": [11, 425, 429], "fed": [11, 443, 446], "feed": [11, 219, 246, 351, 424, 429, 442, 443, 446], "suppos": [11, 155, 401, 426, 449], "snippet": [11, 219, 244, 429], "gave": 11, "extrem": [11, 155, 164, 333, 335, 350, 353, 355], "blurri": [11, 433], "stitch": 11, "exp_nam": [11, 388, 389, 390, 393, 394, 395, 416, 430, 438, 439], "my_exp": [11, 438], "pixels_onli": [11, 129, 130, 134, 136, 137, 161, 429, 430, 438, 439, 448, 449], "my_video": [11, 438], "record_env": [11, 438, 439], "codec": 11, "h264": 11, "crf": 11, "preset": 11, "qualiti": [11, 313, 424], "allow_non": 12, "unwrap": [12, 203, 241, 396], "seealso": 12, "policy_weight": [13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26], "worker_id": [13, 16, 17, 20, 22, 23, 24, 25, 26], "kwarg": [13, 16, 17, 20, 22, 23, 25, 26, 31, 32, 33, 34, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 53, 55, 56, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 77, 78, 79, 80, 85, 86, 87, 88, 89, 90, 97, 99, 100, 101, 102, 104, 105, 106, 108, 113, 114, 115, 117, 119, 121, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 178, 179, 185, 186, 188, 195, 219, 221, 230, 234, 239, 240, 241, 243, 245, 246, 248, 250, 251, 253, 255, 257, 258, 259, 261, 262, 263, 264, 267, 270, 271, 274, 275, 278, 279, 280, 281, 284, 285, 286, 291, 295, 304, 306, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 361, 366, 367, 368, 369, 370, 371, 372, 386, 388, 392, 393, 395, 399, 406, 411, 412, 417, 418, 419, 425, 431, 433, 443], "upload": [13, 16, 17, 19, 20, 22, 23, 24, 25, 26], "typeerror": [13, 16, 17, 20, 22, 23, 24, 25, 26], "remote_weight_updat": [13, 16, 17, 20, 22, 23, 24, 25, 26], "local_weight_updat": [13, 16, 17, 20, 22, 23, 24, 25, 26], "overwritten": [13, 16, 17, 20, 22, 23, 24, 25, 26, 51, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 206], "localweightsupdaterbas": [13, 16, 17, 19, 20, 22, 23, 24, 25, 26], "remoteweightsupdaterbas": [13, 14, 16, 17, 20, 22, 23, 24, 25, 26], "decentr": [14, 284], "_get_server_weight": [14, 15, 18, 19, 21], "_get_local_weight": [14, 21], "_maybe_map_weight": [14, 15, 18, 19, 21], "get_weights_from_polici": 14, "extract": [14, 36, 37, 49, 75, 187, 209, 238, 242, 317, 429, 431, 448], "get_weights_from_serv": 14, "weight_map_fn": 14, "cache_policy_weight": 14, "update_weight": [14, 19, 408], "register_collector": [14, 15, 18, 19, 21], "datacollectorbas": [14, 15, 16, 18, 19, 21, 24, 319, 323, 408, 411, 412, 416, 422], "get_server_weight": 15, "dict": [15, 16, 17, 20, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 56, 58, 59, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 97, 106, 108, 113, 114, 125, 128, 131, 132, 133, 134, 135, 136, 142, 143, 147, 148, 150, 153, 154, 155, 156, 157, 158, 159, 164, 165, 166, 167, 168, 169, 170, 172, 209, 211, 234, 239, 241, 247, 248, 249, 251, 252, 258, 259, 260, 261, 262, 263, 264, 265, 270, 279, 293, 319, 323, 336, 356, 358, 388, 392, 393, 401, 406, 411, 412, 418, 419, 420, 424, 429, 430, 431, 446, 448, 449], "all_worker_id": [15, 18, 19], "_sync_weights_with_work": [15, 18, 19], "create_env_fn": [16, 17, 20, 22, 23, 24, 25, 26, 132, 155, 164, 429, 448], "policy_factori": [16, 17, 20, 22, 23, 24, 25, 26], "device_typ": [16, 20, 22, 30, 31, 33, 34, 35, 36, 37, 40, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 219, 244, 246, 258, 259, 260, 261, 262, 263, 264, 270, 279, 284, 285, 287, 288, 293, 296, 322, 403, 414], "env_devic": [16, 17, 20, 22, 23, 24, 25, 26, 430], "create_env_kwarg": [16, 17, 20, 22, 26, 132, 150, 155, 164, 239, 429, 449], "collector_class": [16, 17, 23, 24, 25, 26], "postproc": [16, 17, 20, 22, 23, 24, 25, 26, 56, 224, 430, 446], "explorationtyp": [16, 17, 20, 22, 23, 24, 25, 26, 319, 351, 401, 424, 429, 430, 431, 432, 435, 442, 448], "interactiontyp": [16, 20, 22, 23, 24, 25, 26, 173, 180, 319, 323, 401], "preemptive_threshold": [16, 17, 22], "num_thread": [16, 17, 22, 45, 46, 47, 48, 62, 64, 71, 85, 155, 164], "num_sub_thread": [16, 17, 22, 155, 164], "str": [16, 17, 20, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 95, 97, 99, 105, 106, 108, 119, 125, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 140, 142, 143, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 161, 164, 165, 166, 167, 168, 169, 170, 171, 172, 175, 180, 183, 187, 191, 199, 203, 209, 210, 211, 219, 223, 232, 233, 236, 238, 239, 241, 242, 244, 246, 247, 248, 251, 252, 255, 267, 268, 274, 278, 280, 281, 284, 285, 286, 296, 297, 305, 310, 315, 316, 319, 320, 321, 322, 323, 326, 327, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 362, 366, 367, 368, 369, 370, 371, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 420, 430, 431, 433], "set_trunc": [16, 17, 20, 22, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "use_buff": [16, 17, 20, 155, 164, 199], "replay_buffer_chunk": 16, "trust_polici": [16, 17, 20, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "compile_polici": [16, 17, 20], "cudagraph_polici": [16, 17, 20], "no_cuda_sync": [16, 17, 20], "datacollector": [16, 17, 20, 22, 26, 56, 353, 431, 437, 446], "recept": 16, "safe": [16, 17, 30, 31, 33, 34, 35, 36, 37, 40, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 62, 64, 71, 74, 75, 83, 85, 86, 87, 88, 89, 90, 106, 113, 253, 295, 302, 303, 310, 315, 316, 319, 320, 321, 322, 323, 325, 424, 448], "sota": [16, 17, 149, 207, 355, 397, 411, 429, 430, 448], "guard": [16, 17], "doc": [16, 17, 81, 137, 140, 141, 152, 161, 395, 425, 430, 442, 443, 446], "env_mak": [16, 17, 20, 26, 68, 125, 416, 449], "2000": [16, 17, 20, 56, 84, 138, 294, 388, 446], "50": [16, 17, 20, 26, 30, 31, 33, 34, 35, 36, 37, 40, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 65, 72, 74, 75, 83, 86, 87, 88, 89, 90, 113, 114, 147, 148, 251, 432, 446], "shutdown": [16, 17, 20, 22, 26, 159, 165, 188, 429, 430, 446, 448], "del": [16, 17, 20, 429, 430, 431, 441, 442, 446, 448, 449], "int64": [16, 17, 20, 28, 30, 31, 35, 40, 41, 45, 46, 47, 48, 51, 52, 53, 54, 55, 60, 61, 62, 64, 65, 66, 71, 72, 76, 79, 81, 84, 85, 95, 105, 113, 125, 128, 131, 135, 142, 143, 146, 147, 148, 152, 153, 154, 155, 156, 157, 158, 159, 162, 163, 164, 165, 166, 184, 188, 199, 203, 217, 224, 232, 268, 295, 297, 315, 316, 319, 320, 321, 424, 444], "subclass": [16, 17, 20, 22, 23, 24, 25, 26, 32, 33, 36, 39, 44, 66, 67, 73, 78, 86, 108, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 171, 186, 187, 240, 247, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 286, 289, 290, 293, 295, 298, 299, 301, 306, 314, 316, 318, 321, 322, 323, 324, 326, 329, 351, 353, 430, 432, 437, 444, 446], "tensordictmodulebas": [16, 17, 20, 22, 23, 24, 25, 26, 39, 66, 78, 190, 306, 315, 318, 320, 432], "undergon": [16, 17, 20, 22, 23, 24, 25, 26, 84], "env_obs_kei": [16, 17, 20, 22, 23, 24, 25, 26], "mustn": [16, 17, 20, 22, 23, 24, 25, 26], "pickl": [16, 17, 20, 22, 23, 24, 25, 26, 32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 248, 249, 251], "exclus": [16, 17, 20, 22, 23, 24, 25, 26, 70, 79, 80, 91, 92, 106, 113, 114, 188, 204, 206, 272, 274, 276, 278, 282, 283, 315, 316, 320, 321, 357, 358, 359, 368, 369, 370, 371, 372, 395, 420, 424], "lifespan": [16, 17, 20, 22, 23, 24, 25, 430], "divis": [16, 17, 20, 22, 23, 24, 25, 32, 106, 113, 114, 249, 254, 443], "endless": [16, 17, 20, 22, 23, 24, 25, 199], "fill": [16, 17, 20, 22, 23, 24, 25, 26, 30, 31, 33, 34, 35, 36, 37, 40, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 135, 187, 234, 247, 278, 432, 444, 445], "sit": [16, 17, 20, 22, 23, 24, 25, 26, 408, 430], "cast": [16, 17, 20, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 66, 67, 71, 73, 74, 75, 78, 83, 85, 86, 87, 88, 89, 90, 95, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 140, 141, 142, 143, 150, 151, 153, 154, 155, 156, 159, 161, 164, 165, 166, 167, 168, 184, 185, 187, 188, 190, 191, 192, 195, 196, 198, 200, 202, 203, 204, 205, 207, 210, 211, 218, 219, 220, 221, 222, 224, 227, 228, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 251, 322, 442, 449], "deriv": [16, 17, 23, 24, 25, 26, 82, 266, 406], "span": [16, 17, 20, 22, 23, 24, 25, 26, 106, 113, 114], "n_step": [16, 17, 20, 22, 23, 24, 25, 26, 56, 251, 318, 430, 431, 442, 443], "mainli": [16, 17, 20, 22, 23, 24, 25, 26, 72, 395, 424, 442, 443, 444], "round": [16, 17, 20, 22, 23, 24, 25, 26, 128], "closest": [16, 17, 20, 22, 23, 24, 25, 26], "boolm": [16, 17, 22], "update_policy_weight_": [16, 17, 22], "ratio": [16, 17, 22, 72, 429, 431], "finish": [16, 17, 22, 26, 135, 224, 449], "rest": [16, 17, 22, 39, 256, 424, 431, 432, 442, 444, 448], "earli": [16, 17, 22, 56, 135, 232, 448], "safeti": [16, 17, 22, 149, 155, 164, 249], "harm": [16, 17, 22, 155, 164], "add_truncated_kei": [16, 17, 20, 22, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 241], "trust": [16, 17, 20, 125, 128, 131, 135, 142, 143, 147, 148, 155, 156, 159, 164, 165, 166, 196, 278], "cudagraphmodul": [16, 17, 20, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "behaviour": [16, 17, 20, 39, 66, 78, 432, 433, 448], "bypass": [16, 17, 20, 435], "isaaclab": [16, 17, 20, 136], "maniskil": [16, 17, 20], "crash": [16, 17, 20, 224], "unus": [16, 17, 179], "worker_collector": [16, 17], "worker_weight_updater_receiv": [16, 17], "sender": [16, 17], "server_collector": [16, 17], "server_weight_updater_send": [16, 17], "ordereddict": [16, 17, 20, 22, 26, 32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 209, 239, 241, 248, 249, 251, 336, 356], "worker0": [16, 17, 22], "state_dict0": [16, 17, 22], "worker1": [16, 17, 22], "state_dict1": [16, 17, 22], "reset_idx": [16, 17, 22], "static_se": [16, 17, 20, 22, 26, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 241], "increment": [16, 17, 20, 22, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 215, 350], "env_fn": [16, 17, 20, 22, 132, 418, 419], "env_fn_parallel": [16, 17, 20, 22], "300": [16, 17, 20, 22, 113, 114, 263, 264], "out_se": [16, 17, 20, 22, 449], "shut": [16, 17, 20, 22, 159, 165], "irrevers": [16, 17, 22], "remote_collector": [18, 26], "max_interv": 18, "_skip_upd": 18, "interv": [18, 184, 236, 387, 388, 398, 408, 430, 444], "raycollector": [18, 68, 422], "registr": [19, 430], "return_same_td": 20, "interruptor": 20, "cautious": [20, 353], "whole": [20, 32, 36, 37, 39, 44, 49, 56, 66, 67, 73, 75, 78, 84, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 209, 239, 241, 251, 319, 336, 356, 397, 429, 431], "_interruptor": 20, "outsid": [20, 200, 239, 425, 438, 442, 443, 444], "start_collect": 20, "stop_collect": 20, "preeptiv": 20, "chunk": [20, 435], "policy_state_dict": 20, "env_state_dict": 20, "weight_gett": 21, "_map_weight": 21, "_update_local_weight": 21, "exporationtyp": [23, 24, 25], "collector_kwarg": [23, 24, 25, 26], "num_workers_per_collector": [23, 24, 25, 26], "slurm_kwarg": [23, 24, 25], "update_after_each_batch": [23, 24, 25, 26], "max_weight_update_interv": [23, 24, 25, 26], "tcp_port": [23, 24, 25, 27], "respect": [23, 24, 25, 32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 189, 195, 198, 202, 213, 219, 220, 229, 234, 240, 241, 244, 246, 251, 272, 276, 284, 299, 322, 327, 333, 335, 350, 353, 355, 368, 370, 371, 402, 425, 431, 432, 442, 443], "subnod": [23, 24, 25, 26], "readi": [23, 25, 26, 423, 430, 431, 433, 435, 438, 446, 448], "fashion": [23, 25, 26, 45, 46, 47, 48, 62, 64, 71, 85, 114], "distributed_back": [23, 24], "ucc": [23, 24], "submitit_delai": [23, 27], "former": [23, 24, 25, 28, 32, 39, 44, 63, 66, 67, 70, 73, 78, 79, 80, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 286, 289, 290, 293, 295, 298, 299, 301, 306, 314, 316, 318, 321, 326, 329, 429], "whilst": [23, 24, 25], "homonym": [23, 24, 25, 444], "visit": [23, 24, 25, 85], "facebookincub": [23, 24, 25], "tcp": [23, 24, 25, 27], "port": [23, 24, 25, 27, 167], "10003": [23, 24, 25, 27], "focus": [23, 25, 26, 429, 436], "liter": [24, 85, 125, 142, 199, 309], "update_interv": 24, "frequenc": [24, 294, 429], "visible_devic": 25, "tensorpipe_opt": 25, "experiment": [25, 28, 60, 319, 323], "tensorpiperpcbackendopt": 25, "ray_init_config": [26, 68], "remote_config": [26, 63, 68, 69, 70, 79, 80, 108], "num_collector": [26, 418, 419, 429, 430], "coordin": [26, 197], "init": [26, 32, 39, 44, 56, 66, 67, 68, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 195, 240, 248, 251, 284, 285, 286, 395, 430, 431], "autodetect": 26, "num_cpu": [26, 68], "num_gpu": [26, 68], "1024": [26, 68, 265, 446], "equat": [26, 66, 85, 135, 199, 248, 249, 295, 332, 335, 357, 431, 434, 444], "exce": [26, 446], "indefinit": [26, 94], "rayreplaybuff": [26, 422], "enfoc": 26, "distributed_collector": [26, 68], "10000": [26, 155, 254, 406, 432], "add_collector": 26, "async_shutdown": [26, 68], "local_polici": 26, "stop_remote_collector": 26, "num_job": 27, "tcpport": 27, "submitit_main_conf": 27, "slurm_cpus_per_task": 27, "slurm_gpus_per_nod": 27, "slurm_partit": 27, "timeout_min": 27, "submitit_collection_conf": 27, "jump": [27, 434], "host": [27, 32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 195, 219, 234, 240, 241, 244, 246, 251, 322], "satellit": 27, "rendezv": 27, "hang": 27, "forev": 27, "default_config": [27, 260, 265, 293, 314], "default_slurm_conf_main": 27, "default_slurm_conf": 27, "rollout_tensordict": 28, "nestedkei": [28, 30, 31, 33, 34, 35, 36, 37, 39, 40, 41, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 64, 66, 71, 74, 75, 76, 78, 83, 84, 85, 86, 87, 88, 89, 90, 106, 113, 114, 125, 128, 131, 135, 142, 143, 155, 156, 159, 160, 164, 165, 166, 177, 182, 183, 184, 185, 189, 190, 191, 192, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 206, 208, 209, 210, 211, 212, 215, 216, 217, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 248, 249, 251, 253, 257, 268, 271, 295, 297, 314, 318, 323, 338, 366, 386, 388], "as_nest": 28, "x": [28, 39, 56, 66, 67, 70, 72, 73, 78, 114, 143, 209, 211, 237, 242, 252, 254, 256, 257, 259, 268, 270, 272, 273, 274, 276, 277, 278, 279, 281, 284, 285, 306, 315, 319, 320, 329, 332, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 406, 429, 433, 442, 444, 446, 448], "durat": [28, 443], "meta": [28, 45, 46, 47, 48, 62, 64, 71, 83, 85, 133, 137, 333, 335, 350, 353, 355, 426, 431, 442, 443, 446], "aren": [28, 233, 432], "eventu": [28, 296, 432, 444], "recov": [28, 113, 114, 324, 341, 349, 441], "layout": 28, "to_padded_tensor": 28, "nested_tensor": [28, 134, 136], "stride": [28, 32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251, 258, 259, 261, 262, 270, 284, 430, 442, 448], "jag": 28, "focu": [28, 429, 430, 431, 433, 435, 436, 437, 442], "team": [28, 442, 443, 448], "cat": [28, 51, 199, 327, 334, 336, 337, 349, 354, 356, 358, 359, 442, 446, 448], "arang": [28, 30, 31, 33, 34, 35, 36, 37, 40, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 106, 113, 114, 184, 268, 282, 283, 315, 397, 424, 446], "obs_": 28, "trajectory_id": 28, "int32": [28, 32, 33, 51, 80, 86, 113, 140, 141, 153, 154, 166, 176, 318], "data_split": 28, "got": [28, 437], "init_kl_coef": 29, "horizon": [29, 147, 148, 169, 170, 255, 281, 431], "kl": [29, 38, 72, 211, 345, 350], "describ": [29, 45, 46, 47, 48, 62, 64, 71, 83, 85, 160, 192, 302, 303, 338, 391, 425, 429, 431, 442, 443, 444, 449], "ziegler": 29, "et": [29, 255], "relax": [29, 386], "penalti": [29, 72, 347, 350], "strai": [29, 72], "greater": [29, 106, 113, 114, 199, 212, 213, 274, 278, 336, 429, 430], "increas": [29, 97, 191, 235, 256, 295, 442, 443], "pull": [29, 51, 85, 446], "toward": [29, 246], "aggress": 29, "kl_coef": [29, 38, 72], "arxiv": [29, 63, 105, 106, 126, 127, 129, 130, 140, 141, 147, 148, 150, 151, 161, 169, 170, 191, 219, 244, 254, 260, 261, 262, 263, 264, 265, 268, 269, 270, 276, 281, 288, 289, 290, 294, 295, 296, 298, 299, 305, 316, 333, 334, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 352, 353, 356, 357, 358, 368, 373, 381, 445], "pdf": [29, 191, 260, 261, 262, 263, 264, 268, 294, 295, 316, 336, 343, 347, 354, 357, 358, 368, 373, 381], "1909": 29, "08593": 29, "lm": 29, "blob": 29, "master": [29, 442, 443], "lm_human_prefer": 29, "train_polici": 29, "kl_valu": 29, "coef": [29, 211], "newest": 29, "int8": [30, 131, 146, 157, 158, 189], "encod": [30, 31, 32, 33, 34, 35, 36, 37, 40, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 63, 74, 75, 83, 86, 87, 88, 89, 90, 126, 127, 131, 134, 136, 137, 140, 141, 150, 151, 153, 154, 161, 167, 168, 184, 201, 290, 291, 294, 298, 332, 430, 431, 432, 435, 444, 446], "null": [30, 33, 34, 36, 37, 39, 49, 50, 58, 59, 63, 74, 75, 79, 83, 86, 87, 88, 89, 90, 105, 106, 189, 209], "denot": [30, 443], "clariti": [30, 51], "assert_is_in": [30, 31, 33, 34, 35, 36, 37, 40, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90], "cardin": [30, 31, 33, 34, 35, 36, 37, 40, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 85, 86, 87, 88, 89, 90, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 268, 297, 315, 316, 321, 431], "outcom": [30, 31, 33, 34, 35, 36, 37, 40, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 266, 282, 283, 302, 351, 442], "cartesian": [30, 31, 33, 34, 35, 36, 37, 40, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90], "clear_device_": [30, 31, 33, 34, 35, 36, 37, 40, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90], "is_in": [30, 31, 33, 34, 35, 36, 37, 40, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 449], "np": [30, 31, 33, 34, 35, 36, 37, 40, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 135, 326, 386, 433, 442, 444], "ndarrai": [30, 31, 33, 34, 35, 36, 37, 40, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 135, 295, 326, 386, 433, 442], "ignore_devic": [30, 31, 33, 34, 35, 36, 37, 40, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90], "arrai": [30, 31, 33, 34, 35, 36, 37, 40, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 63, 72, 74, 75, 83, 86, 87, 88, 89, 90, 105, 125, 128, 131, 135, 136, 142, 143, 155, 156, 159, 164, 165, 166, 199, 203, 272, 273, 276, 277, 429, 442], "use_mask": [30, 31, 33, 34, 35, 36, 37, 40, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 157, 158], "compliant": [30, 31, 33, 34, 35, 36, 37, 40, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90], "singleton": [30, 31, 33, 34, 35, 36, 37, 40, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 258, 259, 279, 300, 301, 422, 425], "start_dim": [30, 31, 33, 34, 35, 36, 37, 40, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90], "end_dim": [30, 31, 33, 34, 35, 36, 37, 40, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90], "classmethod": [30, 31, 33, 34, 35, 36, 37, 40, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 68, 69, 70, 71, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 108, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 209, 244, 252, 259, 260, 293], "implements_for_spec": [30, 31, 33, 34, 35, 36, 37, 40, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90], "torch_funct": [30, 31, 33, 34, 35, 36, 37, 40, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90], "index_typ": [30, 31, 33, 34, 35, 36, 37, 40, 49, 50, 52, 53, 58, 59, 74, 75, 83, 86, 87, 88, 89, 90], "tensor_to_index": [30, 31, 33, 34, 35, 36, 37, 40, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90], "exanpl": [30, 31, 33, 34, 35, 36, 37, 40, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90], "one_hot": [30, 31, 33, 34, 35, 36, 37, 40, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 268, 283, 297], "categ": [30, 31, 33, 34, 35, 36, 37, 40, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 319], "to_categorical_spec": [30, 31, 33, 34, 35, 36, 37, 40, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90], "idx_one_hot": [30, 31, 33, 34, 35, 36, 37, 40, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90], "idx_categ": [30, 31, 33, 34, 35, 36, 37, 40, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90], "to_categor": [30, 31, 33, 34, 35, 36, 37, 40, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90], "make_neg_dim": [30, 31, 33, 34, 35, 36, 37, 40, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90], "convert": [30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 66, 67, 71, 73, 74, 75, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 125, 126, 127, 128, 131, 134, 135, 136, 137, 140, 141, 142, 143, 150, 151, 153, 154, 155, 156, 159, 161, 164, 165, 166, 167, 168, 195, 198, 199, 202, 219, 234, 240, 241, 244, 246, 248, 249, 251, 322, 332, 351, 429, 430, 431, 444, 446], "shortcut": [30, 31, 33, 34, 35, 36, 37, 40, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 444, 449], "ndimens": [30, 31, 33, 34, 35, 36, 37, 40, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 429], "violat": [30, 31, 33, 34, 35, 36, 37, 40, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 424], "proxi": [30, 31, 33, 34, 35, 36, 37, 40, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 62, 64, 71, 74, 75, 83, 85, 86, 87, 88, 89, 90, 283, 291, 319, 425], "project": [30, 31, 33, 34, 35, 36, 37, 40, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 67, 74, 75, 83, 86, 87, 88, 89, 90, 201, 253, 276, 295, 310, 315, 316, 319, 320, 321, 322, 323, 395, 424, 448, 449], "uniformli": [30, 31, 33, 34, 35, 36, 37, 40, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 107, 351, 449], "normal": [30, 31, 33, 34, 35, 36, 37, 40, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 69, 74, 75, 83, 86, 87, 88, 89, 90, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 215, 248, 249, 253, 254, 258, 259, 275, 279, 282, 283, 303, 304, 319, 323, 335, 336, 350, 353, 401, 404, 420, 424, 426, 432, 435, 443, 449], "drawn": [30, 31, 33, 34, 35, 36, 37, 40, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 234, 271, 319, 323, 431, 442, 443], "set_provisional_n": [30, 31, 35, 40, 52, 53], "temporarili": [30, 31, 35, 40, 52, 53, 97, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 171, 437, 446], "dest": [30, 31, 33, 34, 35, 36, 37, 40, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 78, 83, 86, 87, 88, 89, 90, 219, 244, 246, 322], "to_numpi": [30, 31, 33, 34, 35, 36, 37, 40, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "transformed_in": [30, 31, 33, 34, 35, 36, 37, 40, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 241, 302, 420], "check_spec_encod": [30, 31, 33, 34, 35, 36, 37, 40, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90], "to_one_hot": [30, 31, 35, 40, 52, 53, 54, 55, 60, 61], "hot": [30, 31, 35, 40, 52, 53, 54, 55, 60, 61, 126, 127, 134, 136, 137, 140, 141, 147, 148, 150, 151, 153, 154, 157, 158, 161, 167, 168, 169, 170, 184, 185, 201, 268, 291, 292, 297, 315, 316, 320, 321, 333, 334, 336, 337, 338, 340, 341, 342, 343, 344, 349, 351, 353, 354, 355, 356, 358, 359, 366, 432], "categ_sampl": [30, 31, 35, 40, 54, 55, 60, 61], "onehot_sampl": [30, 31, 35, 40, 54, 55], "to_one_hot_spec": [30, 31, 35, 40, 52, 53, 54, 55, 60, 61], "categoricalbox": [30, 31, 35, 40, 54, 55, 60, 61, 156], "type_check": [30, 31, 33, 34, 35, 36, 37, 40, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90], "update_mask": [30, 31, 35, 40, 52, 53, 54, 55, 60, 61], "disabl": [30, 31, 32, 35, 39, 40, 44, 52, 53, 54, 55, 56, 60, 61, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 241, 251, 275, 304, 386, 429, 442, 443], "unmask": [30, 31, 35, 40, 52, 53, 54, 55, 60, 61], "ts": [30, 31, 35, 40, 52, 53, 54, 55, 60, 61], "num_bit": 32, "convert_to_binari": 32, "decim": 32, "1001": 32, "bit": [32, 209, 431, 432, 434, 442, 443, 446], "heavysid": 32, "binary_to_decim": 32, "add_modul": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251], "child": [32, 39, 44, 51, 56, 66, 67, 73, 78, 85, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251, 430], "fn": [32, 39, 44, 56, 65, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 209, 242, 251, 418, 419], "recurs": [32, 36, 37, 39, 44, 49, 56, 66, 67, 73, 75, 78, 91, 92, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251, 351, 433], "init_weight": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251], "m": [32, 39, 44, 52, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 201, 251, 257, 323, 430, 444], "fill_": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251, 430, 432], "net": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251, 262, 264, 267, 270, 285, 333, 334, 336, 342, 349, 353, 354, 355, 356, 416, 430, 444, 445, 448], "in_featur": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 195, 219, 234, 240, 241, 244, 246, 251, 258, 259, 261, 262, 263, 264, 270, 279, 284, 285, 287, 288, 311, 322, 330, 338, 340, 433, 435, 436], "out_featur": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 149, 155, 156, 159, 164, 165, 166, 195, 219, 234, 240, 241, 244, 246, 251, 255, 258, 259, 261, 262, 263, 264, 269, 270, 274, 278, 279, 281, 284, 285, 287, 288, 311, 315, 322, 330, 338, 340, 424, 429, 432, 433, 435, 436, 439, 448], "bia": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 195, 209, 219, 234, 239, 240, 241, 244, 246, 251, 254, 258, 259, 261, 262, 263, 264, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 285, 287, 288, 295, 322, 329, 331, 332, 336, 351, 356, 425, 429, 430, 431, 432, 443], "requires_grad": [32, 39, 44, 56, 66, 67, 73, 78, 125, 126, 127, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 211, 239, 241, 251, 294, 323, 336, 356], "bfloat16": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251], "datatyp": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251, 446], "member": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251, 351, 388], "xdoctest": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 195, 209, 219, 234, 239, 240, 241, 244, 246, 251, 322, 336, 351, 356], "buf": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251], "20l": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251, 351], "1l": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251, 351], "5l": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251, 351], "__call__": [32, 39, 44, 56, 65, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251, 323, 426], "doubl": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 195, 198, 200, 202, 219, 234, 240, 241, 244, 246, 251, 322, 338, 343, 348, 354, 357, 366, 429, 430, 431, 432, 449], "eval": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 241, 248, 251, 256, 424, 429, 430, 431], "evalu": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 136, 142, 143, 147, 148, 155, 156, 159, 164, 165, 166, 241, 251, 256, 266, 282, 283, 291, 304, 354, 411, 412, 430, 431, 439], "dropout": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 241, 251, 256, 257, 272, 274, 276, 278, 279, 424, 432], "batchnorm": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 241, 251, 254], "comparison": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 241, 251, 351, 429, 430], "extra_repr": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251], "recip": [32, 39, 44, 65, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 286, 289, 290, 293, 295, 298, 299, 301, 306, 314, 316, 318, 321, 326, 329], "get_buff": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251], "get_submodul": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251], "qualifi": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251], "referenc": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251], "resolv": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251], "someth": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 146, 155, 156, 159, 164, 165, 166, 251, 423, 430, 431, 444, 449], "get_extra_st": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 248, 249, 251], "set_extra_st": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 248, 249, 251], "picklabl": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 248, 249, 251], "get_paramet": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251], "net_b": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251], "net_c": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251], "conv": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251, 258, 259, 430], "conv2d": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251, 259, 261, 262, 270, 284], "kernel_s": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251, 258, 259, 261, 262, 270, 284, 289, 430, 448], "diagram": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251], "degre": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 196, 251], "named_modul": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251], "half": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 195, 219, 234, 240, 241, 244, 246, 251, 322, 429], "ipu": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251], "strict": [32, 39, 44, 45, 46, 47, 48, 56, 62, 64, 66, 67, 71, 73, 78, 85, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 239, 241, 251, 336, 356, 433], "descend": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 239, 241, 251, 336, 356], "get_swap_module_params_on_convers": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 239, 241, 251, 336, 356], "persist": [32, 39, 42, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 182, 209, 239, 241, 251, 336, 356], "preserv": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 239, 241, 251, 322, 336, 356], "missing_kei": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 239, 241, 251, 336, 356], "unexpected_kei": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 239, 241, 251, 336, 356], "namedtupl": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 239, 241, 251, 336, 356], "l": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251, 272, 276, 367, 431, 444], "idx": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251], "mtia": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251], "named_buff": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251], "remove_dupl": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251, 351], "prepend": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251, 351, 433], "running_var": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251], "named_children": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251], "conv4": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251], "conv5": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251], "memo": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251], "named_paramet": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 211, 251, 351], "register_backward_hook": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251], "removablehandl": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251], "favor": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 248, 251, 431], "register_full_backward_hook": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251], "register_buff": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251], "running_mean": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251], "alongsid": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251, 438], "num_featur": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251, 254], "register_forward_hook": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251, 268, 297], "with_kwarg": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251], "always_cal": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251], "register_module_forward_hook": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251], "regardless": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251, 335, 350, 353], "register_forward_pre_hook": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251], "invok": [32, 39, 44, 56, 66, 67, 69, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251], "And": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251, 436], "forward_pr": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251], "register_module_forward_pre_hook": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251], "grad_input": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251], "grad_output": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251], "technic": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251, 430, 432, 433, 435], "caller": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251], "register_module_full_backward_hook": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251], "register_full_backward_pre_hook": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251], "backward_pr": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251], "register_module_full_backward_pre_hook": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251], "register_load_state_dict_post_hook": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251], "incompatible_kei": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251], "thrown": [32, 39, 44, 56, 66, 67, 73, 74, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251, 446], "register_load_state_dict_pre_hook": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251], "local_metadata": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251], "error_msg": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251], "noqa": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251], "b950": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251], "register_modul": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251, 426], "alia": [32, 39, 44, 56, 63, 66, 67, 68, 69, 70, 73, 78, 79, 80, 85, 99, 100, 101, 102, 108, 115, 117, 121, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 352, 353, 354, 355, 356, 358, 359, 366, 372], "register_paramet": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251], "register_state_dict_post_hook": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251], "register_state_dict_pre_hook": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251], "keep_var": [32, 39, 44, 45, 46, 47, 48, 56, 62, 64, 66, 67, 71, 73, 78, 85, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 209, 239, 241, 251, 336, 356], "requires_grad_": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251, 433], "autograd": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 209, 239, 241, 251, 336, 356], "freez": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 248, 249, 251], "finetun": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251], "gan": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251], "set_submodul": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251], "share_memori": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 132, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251, 429], "share_memory_": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251, 448], "destin": [32, 39, 44, 45, 46, 47, 48, 56, 62, 64, 66, 67, 71, 73, 78, 85, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 182, 190, 198, 200, 202, 209, 239, 241, 244, 248, 251, 336, 356, 388], "averag": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 209, 239, 241, 248, 251, 295, 336, 344, 345, 356, 404, 429, 431], "shallow": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 209, 239, 241, 251, 336, 356, 432], "detach": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 209, 239, 241, 251, 336, 347, 351, 356, 358, 368, 369, 370, 371, 429], "non_block": [32, 39, 44, 45, 46, 47, 48, 56, 62, 64, 66, 67, 71, 73, 78, 85, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 195, 219, 234, 240, 241, 244, 246, 251, 322, 432], "memory_format": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 195, 219, 234, 240, 241, 244, 246, 251, 322], "channels_last": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 195, 219, 234, 240, 241, 244, 246, 251, 322], "unchang": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 195, 201, 219, 234, 240, 241, 244, 246, 251, 271, 322, 388, 403, 429, 446], "tri": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 195, 219, 234, 240, 241, 244, 246, 251, 322, 438], "pin": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 195, 219, 234, 240, 241, 244, 246, 251, 322], "4d": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 195, 219, 234, 240, 241, 244, 246, 251, 322], "ignore_w": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 195, 219, 234, 240, 241, 244, 246, 251, 322], "1913": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 195, 219, 234, 240, 241, 244, 246, 251, 322], "3420": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 195, 219, 234, 240, 241, 244, 246, 251, 322], "5113": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 195, 219, 234, 240, 241, 244, 246, 251, 322], "2325": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 195, 219, 234, 240, 241, 244, 246, 251, 322], "torch_doctest_cuda1": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 195, 219, 234, 240, 241, 244, 246, 251, 322], "gpu1": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 195, 219, 234, 240, 241, 244, 246, 251, 322], "1914": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 195, 219, 234, 240, 241, 244, 246, 251, 322], "5112": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 195, 219, 234, 240, 241, 244, 246, 251, 322], "2324": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 195, 219, 234, 240, 241, 244, 246, 251, 322], "float16": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 195, 219, 234, 240, 241, 244, 246, 251, 273, 277, 322], "cdoubl": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 195, 219, 234, 240, 241, 244, 246, 251, 322], "3741": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 195, 219, 234, 240, 241, 244, 246, 251, 322], "j": [32, 39, 44, 56, 63, 66, 67, 73, 78, 105, 106, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 195, 219, 234, 240, 241, 244, 246, 251, 322, 426, 436], "2382": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 195, 219, 234, 240, 241, 244, 246, 251, 322], "5593": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 195, 219, 234, 240, 241, 244, 246, 251, 322], "4443": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 195, 219, 234, 240, 241, 244, 246, 251, 322], "complex128": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 195, 219, 234, 240, 241, 244, 246, 251, 322], "6122": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 195, 219, 234, 240, 241, 244, 246, 251, 322], "1150": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 195, 219, 234, 240, 241, 244, 246, 251, 322], "to_empti": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251], "dst_type": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251], "xpu": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251], "set_to_non": [32, 39, 44, 56, 66, 67, 73, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 251], "upper": [33, 111, 214], "continuousbox": [33, 36, 86, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 176, 209, 212, 234, 242], "provision": 35, "descript": [36, 169, 187, 430, 431], "akin": 36, "unnam": 36, "compositespec": [36, 422, 444, 449], "constraint": [36, 149, 303, 431, 442, 443], "data_cl": 36, "tensorclass": [36, 45, 46, 47, 48, 62, 64, 71, 85, 95, 99, 101, 121], "pixels_spec": 36, "observation_vector_spec": 36, "composite_spec": 36, "observation_vector": [36, 192, 429], "_nodefault": [36, 37, 49, 75], "is_empti": [36, 37, 49, 75, 444], "include_nest": [36, 37, 49, 75], "leaves_onli": [36, 37, 49, 75], "is_leaf": [36, 37, 49, 75], "_compositespecitemsview": [36, 37, 49, 75], "_compositespeckeysview": [36, 37, 49, 75], "reflect": [36, 37, 49, 75, 136, 157, 158, 182, 209, 247, 351, 409, 430, 431, 432, 443], "lock_": [36, 37, 49, 75], "propag": [36, 37, 49, 75, 333, 335, 336, 337, 341, 342, 349, 350, 353, 354, 355, 356, 358, 359, 368, 369, 370, 371, 431, 442, 443], "succeed": [36, 37, 49, 75, 209, 242], "pop": [36, 37, 49, 75], "keyerror": [36, 37, 49, 75, 241], "selected_kei": [36, 37, 49, 75, 228, 429], "unlock_": [36, 37, 49, 75], "_compositespecvaluesview": [36, 37, 49, 75], "multipli": [38, 142, 199, 256, 272, 276, 333, 334, 335, 336, 342, 350, 352, 353, 354, 356, 404, 429, 442], "calcul": [38, 72, 224, 272, 333, 335, 340, 350, 353, 355, 358], "reassign": 39, "reward2go": [39, 422], "reward_key_out": 39, "time_dim": [39, 368, 370, 371, 373, 374, 377, 378, 379, 380, 381, 382, 383, 384, 385], "unrol": [39, 344, 373, 374, 377, 378, 379, 380, 381, 382, 383, 384, 385], "discount": [39, 56, 132, 224, 251, 334, 340, 343, 344, 346, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 425, 430, 431, 442, 443], "lastrewardtotraj": 39, "last_reward_to_traj": 39, "new_tensordict": 39, "is_tdmodule_compat": [39, 66, 78], "reset_out_kei": [39, 66, 78], "orign": [39, 66, 78], "mod": [39, 66, 78, 211, 257, 274, 278, 318, 323, 326, 432, 433, 439], "select_out_kei": [39, 66, 78, 333, 334, 336, 337, 341, 342, 349, 353, 354, 356, 358, 359, 433], "reset_parameters_recurs": [39, 66, 78, 351], "relu": [39, 66, 78, 149, 255, 265, 281, 332], "old_param": [39, 66, 78], "bork": [39, 66, 78], "dork": [39, 66, 78], "reset_paramet": [39, 66, 78, 286], "from_modul": [39, 66, 78, 268, 322, 325, 448], "rid": [39, 66, 78], "out_keys_sourc": [39, 66, 78], "rubric": [39, 66, 78, 215, 325], "revert": [39, 66, 78, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 171, 435, 446], "seq": [39, 66, 78, 257, 272, 274, 276, 278, 318, 432, 433, 439, 441], "z": [39, 66, 78, 273], "shift_kei": [41, 43, 57, 76], "is_full_kei": [41, 43, 57, 76], "is_ful": [41, 43, 57, 76], "tempfil": [41, 45, 46, 47, 48, 62, 63, 64, 68, 69, 70, 71, 76, 79, 80, 84, 85, 99, 108, 416, 429, 430, 432, 433, 437, 442, 445, 446], "register_save_hook": [41, 63, 68, 69, 70, 76, 79, 80, 108], "temporarydirectori": [41, 45, 46, 47, 48, 62, 63, 64, 68, 69, 70, 71, 76, 79, 80, 84, 85, 108, 429, 430, 432, 433, 437, 442, 445, 446], "tmpdir": [41, 63, 68, 69, 70, 76, 79, 80, 84, 108, 429, 430, 433, 442], "rb_load": [41, 63, 68, 69, 70, 79, 80, 108], "register_load_hook": [41, 63, 68, 69, 70, 79, 80, 108], "filesystem": [42, 446], "ted2nest": [43, 422], "apply_chat_templ": 45, "pretrainedtoken": 45, "add_generation_prompt": 45, "chat_templ": 45, "messag": 45, "im_start": 45, "im_end": 45, "endfor": 45, "assist": [45, 432], "endif": 45, "continue_final_messag": 45, "return_tensor": 45, "pt": [45, 390, 426], "chat": 45, "templat": [45, 58, 389], "prompt": [45, 65, 72, 142, 199], "_templat": 45, "chatml_format": 45, "copy_exist": [45, 46, 47, 48, 62, 64, 71, 85], "return_earli": [45, 46, 47, 48, 62, 64, 71, 85], "share_non_tensor": [45, 46, 47, 48, 62, 64, 71, 85], "memmap": [45, 46, 47, 48, 62, 64, 71, 85, 99, 155, 164, 248, 388, 390, 403], "dataclass": [45, 46, 47, 48, 62, 64, 71, 83, 85, 351], "from_tensordict": [45, 46, 47, 48, 62, 64, 71, 85], "non_tensordict": [45, 46, 47, 48, 62, 64, 71, 85], "getattr": [45, 46, 47, 48, 62, 64, 71, 85], "load_memmap": [45, 46, 47, 48, 62, 64, 71, 85], "load_": [45, 46, 47, 48, 62, 64, 71, 85], "load_memmap_": [45, 46, 47, 48, 62, 64, 71, 85], "fromkei": [45, 46, 47, 48, 62, 64, 71, 85], "saved_td": [45, 46, 47, 48, 62, 64, 71, 85], "td_load": [45, 46, 47, 48, 62, 64, 71, 85], "fake": [45, 46, 47, 48, 62, 64, 71, 85, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 429, 430, 433], "_subclass": [45, 46, 47, 48, 62, 64, 71, 85], "faketensormod": [45, 46, 47, 48, 62, 64, 71, 85], "faketensor": [45, 46, 47, 48, 62, 64, 71, 85], "from_flatten": [45, 46, 47, 48, 62, 64, 71, 85], "attemptedli": [45, 46, 47, 48, 62, 64, 71, 85], "existsok": [45, 46, 47, 48, 62, 64, 71, 85, 99], "mimic": [45, 46, 47, 48, 62, 64, 71, 85, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "cross": [45, 46, 47, 48, 62, 64, 71, 85, 255], "tensordictfutur": [45, 46, 47, 48, 62, 64, 71, 85], "serialis": [45, 46, 47, 48, 62, 64, 71, 85], "deepli": [45, 46, 47, 48, 62, 64, 71, 85], "memmap_": [45, 46, 47, 48, 62, 64, 71, 85, 248], "memmap_lik": [45, 46, 47, 48, 62, 64, 71, 85], "contentless": [45, 46, 47, 48, 62, 64, 71, 85], "1_000_000": [45, 46, 47, 48, 62, 63, 64, 68, 69, 70, 71, 79, 80, 85, 108, 113, 429, 432, 442], "alloc": [45, 46, 47, 48, 62, 64, 71, 85, 101, 266, 282, 283, 429], "memmap_refresh_": [45, 46, 47, 48, 62, 64, 71, 85], "refresh": [45, 46, 47, 48, 62, 64, 71, 85, 439, 442, 443], "saved_path": [45, 46, 47, 48, 62, 64, 71, 85], "setattr": [45, 46, 47, 48, 62, 64, 71, 85], "tent": [45, 46, 47, 48, 62, 64, 71, 84, 85], "to_tensordict": [45, 46, 47, 48, 62, 64, 71, 85, 432], "retain_non": [45, 46, 47, 48, 62, 64, 71, 85], "discrard": [45, 46, 47, 48, 62, 64, 71, 85], "switch": [45, 46, 47, 48, 62, 64, 71, 85, 241, 249, 275, 304, 386], "tokens_respons": [46, 48, 142], "attention_mask": [46, 47, 62, 64, 65, 71, 72, 81, 84, 95, 142], "token_list": [46, 47, 48], "tokens_response_list": [46, 48], "log_prob": [46, 48, 72, 266, 282, 283, 291, 294, 304, 323, 336, 425], "text": [46, 47, 48, 65, 72, 81, 142, 143, 272, 273, 276, 277, 295, 431], "text_respons": [46, 142], "stackedcomposit": [49, 422], "tensordictmap": [51, 422], "observation_kei": [51, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "excluded_kei": [51, 204], "consolid": [51, 78, 92, 101], "lazili": [51, 100, 285, 444], "from_tensordict_pair": [51, 78], "querymodul": [51, 78], "get_keys_from_env": 51, "cattensor": [51, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 429, 441, 444, 449], "unsqueezetransform": [51, 191, 444, 446], "oracl": 51, "obs_kei": 51, "state_kei": [51, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "reset_st": 51, "rollout0": 51, "rollout1": 51, "rollout1b": 51, "collaps": 51, "max_length": [51, 62, 64, 65, 81, 84, 85, 95, 199, 238, 433, 439], "valid_path": [51, 85], "assert_clos": [51, 274, 278], "subtre": [51, 85], "intersect": [51, 252], "Or": [51, 162, 163, 284], "rollout_from_path": [51, 85], "plot": [51, 85, 429, 431, 432, 442, 443, 444], "_nestedkei": [51, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "return_nod": 51, "diverg": [51, 211, 274, 278, 319, 323, 345, 350], "endpoint": 51, "noth": [51, 143, 429, 431], "r0": [51, 429], "123": [51, 85], "392": [51, 85], "989": [51, 85], "809": [51, 85], "847": [51, 85], "r1": 51, "235": 51, "td_root": [51, 85], "node_data": [51, 85], "node_id": [51, 85], "nontensordata": [51, 58, 128, 153, 154, 199, 209, 238, 242, 386], "_parent": [51, 85], "nontensorstack": [51, 58, 100, 125, 128, 143, 199, 209, 238, 242], "weakref": [51, 85], "0x716eeb78fbf0": 51, "0x": 51, "4341220243998689835": 51, "6745467818783115365": 51, "win": [51, 85], "to_str": [51, 85], "node_format_fn": [51, 85], "indent": [51, 85], "rollouts_data": [51, 85], "456": [51, 85], "359": [51, 85], "3094": [51, 85], "75": [51, 85, 113], "948": [51, 85], "68": [51, 85, 113], "9045": [51, 85], "rollout_data": [51, 85], "nvec": [52, 54], "remove_singleton": 52, "ax": [52, 287, 288, 442], "Not": [52, 53, 70, 126, 127, 140, 239, 274, 278], "neither": [52, 53, 54, 55, 167, 444], "use_regist": [54, 60], "mone_hot": [54, 55], "boxlist": [54, 55], "gamma": [56, 224, 251, 281, 333, 334, 336, 337, 338, 340, 342, 343, 344, 346, 349, 351, 353, 354, 355, 356, 358, 359, 360, 361, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 416, 425, 429, 430, 431, 442, 443, 448], "sutton": [56, 425, 442, 443], "1988": 56, "tempor": [56, 274, 278, 281, 369, 370, 375, 376], "44": [56, 113], "ahead": [56, 251, 449], "bias": [56, 272, 273, 276, 277, 329, 425, 429], "mitig": [56, 191], "multisteptransform": [56, 422], "99": [56, 224, 248, 281, 346, 361, 367, 374, 416, 429, 430, 431, 433, 436, 439, 442, 443, 448], "nontermin": 56, "original_reward": 56, "newli": [56, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "OR": 56, "row": [57, 77, 140, 141, 212], "example_data": [58, 142, 199], "conform": 58, "randomli": [58, 112, 166, 214, 215, 234, 271, 319, 323, 435, 442, 443, 444, 446], "unidimension": 60, "action_valu": [60, 267, 268, 297, 315, 316, 320, 321, 336, 342, 351, 366, 424, 432, 433, 435, 439], "keepdim": 60, "chosen_action_valu": [60, 296, 297, 305, 320, 321, 366, 424, 432, 435], "priori": 60, "uniqu": [60, 85, 113, 114, 143, 147, 148, 191, 203, 233, 234, 235, 239, 318, 395, 437, 446], "tensor_spec": [60, 160, 183, 185, 341, 342, 353, 355], "one_hot_sampl": [60, 61], "chosen_data": [62, 95], "rewarddata": [62, 95, 422], "rejected_data": [62, 95], "from_dataset": [62, 64, 95], "dataset_nam": [62, 64, 72, 84, 95, 152], "550": [62, 64, 72, 84, 95, 113, 114], "root_dir": [62, 64, 84, 95], "from_disk": [62, 64, 84, 95], "carperai": [62, 64, 72, 84], "openai_summarize_comparison": [62, 64, 84], "load_from_disk": [62, 64, 84, 95], "load_dataset": [62, 64, 84, 95], "92534": 62, "input_id": [62, 64, 65, 71, 72, 81, 84, 95, 142, 143], "end_scor": [62, 71, 72, 95], "sub_data": [62, 64], "alpha": [63, 79, 105, 106, 258, 259, 261, 262, 263, 264, 270, 284, 334, 336, 342, 352, 354, 356, 358, 429, 446, 448], "ep": [63, 79, 105, 106, 215, 248, 249, 254, 295, 335, 357, 404, 425, 429, 430, 432, 433, 436, 439], "1e": [63, 79, 105, 106, 215, 248, 249, 254, 266, 269, 302, 429, 430, 431, 443], "08": [63, 79, 105, 106], "pin_memori": [63, 70, 79, 80, 218, 429, 448], "schaul": [63, 105, 106], "quan": [63, 105, 106], "antonogl": [63, 105, 106], "silver": [63, 105, 106], "2015": [63, 105, 106], "ab": [63, 105, 106, 126, 127, 129, 130, 140, 141, 147, 148, 150, 151, 161, 169, 170, 190, 219, 244, 248, 254, 260, 265, 269, 270, 276, 281, 288, 289, 290, 296, 298, 299, 305, 333, 334, 338, 339, 340, 341, 344, 345, 346, 348, 349, 352, 353, 356, 445], "1511": [63, 105, 106, 270], "05952": [63, 105, 106], "expon": [63, 79, 105, 106], "\u03b1": [63, 79, 105, 106], "delta": [63, 79, 105, 106, 272, 276, 302, 319, 323, 422, 425, 442], "1_000": [63, 70, 79, 80, 442, 446], "mini": [63, 70, 79, 80, 443], "incompat": [63, 70, 79, 80, 355, 446], "drop_last": [63, 70, 79, 80, 112, 114], "notion": [63, 70, 79, 80, 294], "caution": [63, 70, 79, 80, 112, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 171, 449], "codebas": [63, 70, 79, 80, 444], "return_info": [63, 68, 69, 70, 79, 80, 105, 106, 108, 446], "tensordictprioritizedreplaybuff": [63, 422, 448], "simplifi": [63, 179, 435, 444, 446], "_weight": [63, 79, 105, 106], "update_prior": [63, 105, 106, 403, 426, 430, 446, 448], "36278465": 63, "invert": [63, 68, 69, 70, 79, 80, 108, 331, 431], "as_remot": [63, 68, 69, 70, 79, 80, 108], "cl": [63, 68, 69, 70, 79, 80, 108, 430], "quantiti": [63, 68, 69, 70, 79, 80, 108], "reserv": [63, 68, 69, 70, 79, 80, 108, 426], "default_remote_class_config": [63, 68, 69, 70, 79, 80, 108], "tqdm": [63, 68, 69, 70, 79, 80, 108, 406, 429, 431, 432, 442, 443, 444], "randomsampl": [63, 68, 69, 70, 79, 80, 108, 429, 442], "td_error": [63, 68, 69, 70, 79, 80, 108, 336, 337, 338, 340, 341, 342, 343, 349, 351, 354, 356, 358, 359, 366, 429, 446, 448], "update_tensordict_prior": [63, 68, 69, 70, 79, 80, 108, 429, 446, 448], "insert_transform": [63, 68, 69, 70, 79, 80, 108, 186, 241], "insert": [63, 68, 69, 70, 79, 80, 98, 108, 109, 119, 120, 123, 124, 186, 191, 195, 231, 241, 243], "set_sampl": [63, 68, 69, 70, 79, 80, 108], "set_storag": [63, 68, 69, 70, 79, 80, 108], "set_writ": [63, 68, 69, 70, 79, 80, 108], "write_count": [63, 68, 69, 70, 79, 80, 108], "prompt_rindex": [64, 65, 72], "promptdatatldr": 64, "116722": 64, "return_tensordict": [65, 81], "tensodict": [65, 81], "valid_sampl": 65, "eough": 65, "toknen": 65, "meet": 65, "criterion": 65, "autotoken": [65, 81, 84], "from_pretrain": [65, 72, 81, 143], "gpt2": [65, 72, 81, 84, 143, 260, 265, 293], "pad_token": [65, 81], "eos_token": 65, "enough": [65, 446], "inde": [65, 201, 431, 433, 444], "index_kei": [66, 78], "hash_kei": 66, "_hash": 66, "hash_modul": [66, 73, 78], "siphash": [66, 67, 78, 143], "hash_to_int": 66, "hashtoint": 66, "query_modul": [66, 78], "key1": [66, 78, 192, 231, 397, 405, 448], "key2": [66, 78, 192, 231, 397, 405, 448], "write_hash": 66, "n_compon": 67, "dtype_cast": 67, "as_tensor": [67, 73, 433], "init_method": 67, "emb": [67, 432], "sklearn": [67, 152], "byte": [67, 73, 185, 187, 188, 190, 191, 192, 195, 196, 200, 203, 204, 205, 207, 210, 211, 218, 220, 221, 222, 224, 227, 228, 231, 232, 233, 234, 235, 236, 238, 239, 240, 244, 245, 247, 248, 251], "builtin": [67, 73], "pythonhashse": [67, 73], "todo": 67, "optiona": 68, "transform_factori": [68, 70, 79, 80], "asyncio": [68, 125], "ray_buff": 68, "object_store_memori": 68, "600": [68, 72], "await": 68, "sleep": [68, 132, 449], "invoc": 69, "friendli": [69, 429], "include_info": [69, 79, 80], "storagecheckpointerbas": [70, 115], "roundrobinwrit": 70, "_pytre": [70, 446], "tree_map": [70, 446], "assert0": [70, 446], "ref_model": 72, "reward_model": [72, 328], "max_new_token": 72, "score_clip": 72, "kl_schedul": 72, "klcontrollerbas": 72, "num_step": [72, 433], "causal": 72, "sentenc": 72, "frozen": [72, 211, 248, 249], "gpt2rewardmodel": 72, "get_dataload": [72, 422], "promptdata": [72, 422], "gpt2lmheadmodel": 72, "dl": [72, 199], "block_siz": [72, 95], "tensorclass_typ": [72, 95], "openai_summarize_tldr": 72, "config_class": 72, "model_path": 72, "rollout_from_model": 72, "rollout_from_data": 72, "reward_kl": [72, 211], "reward_raw": 72, "sample_log_prob": [72, 211, 311, 312, 313, 319, 323, 325, 353], "create_rollout_td": 72, "log_ratio": 72, "replic": [72, 425], "rindex": 72, "eo": 72, "generation_config": 72, "generationconfig": 72, "ti": [72, 377, 378, 379, 380, 382, 383, 384, 385, 430], "log_probs_gen": 72, "logprobs_of_label": 72, "hash_a": 73, "4669941682990263259": 73, "3778166555168484291": 73, "9122128731510687521": 73, "hash_b": 73, "heterogen": [74, 75, 100, 125, 128, 131, 135, 142, 143, 146, 155, 156, 157, 158, 159, 164, 165, 166, 171, 284, 285, 429, 430], "220": 76, "resembl": 78, "tensormap": 78, "collat": [78, 108], "subtyp": 78, "embedding_storag": 78, "tensor_dict_storag": 78, "new_index": 78, "key3": 78, "retrieve_valu": 78, "storage_constructor": 78, "write_fn": 78, "tensordictstorag": 78, "thumb": [78, 155, 431], "lazydynamicstorag": 78, "fixedstorag": 78, "randomprojectionhash": 78, "priority_kei": [79, 80, 105, 336, 338, 341, 342, 343, 349, 351, 354, 356, 358, 359, 366, 446, 448], "reduct": [79, 105, 106, 119, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 347, 349, 350, 352, 353, 354, 355, 356, 358, 359], "prioritizedreplaybuff": [79, 422, 448], "min": [79, 105, 106, 119, 295, 334, 335, 336, 342, 352, 354, 356, 430, 431], "median": [79, 105, 106, 119, 140, 141, 184, 319, 323], "huggingfac": [81, 317], "co": [81, 203, 444], "pad_trunc": 81, "am": 81, "me": 81, "reassur": 81, "ok": 81, "primarili": [83, 220, 435], "educ": 83, "guess": 83, "knowledg": [83, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 436, 438], "tokenizer_fn": 84, "tensordicttoken": [84, 422], "pre_tokenization_hook": 84, "valid_s": 84, "tokenizer_class": 84, "tokenizer_model_nam": 84, "tokein": 84, "elementwis": 84, "vocabulari": [84, 142, 143, 238], "loader": [84, 431], "185068": 84, "dataset_to_tensordict": 84, "data_dir": 84, "batch_dim": [84, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 420], "valid_mask_kei": 84, "batch_dimens": 84, "filder": 84, "from_dict": [84, 199], "data_memmap": 84, "ref": 85, "branching_act": 85, "prev_act": 85, "edg": [85, 433], "travers": 85, "breadth": 85, "bf": 85, "fully_expand": 85, "get_vertex_by_hash": 85, "get_vertex_by_id": 85, "is_termin": 85, "make_nod": 85, "node_observ": 85, "bag": 85, "num_children": 85, "num_vertic": 85, "count_repeat": 85, "recustruct": 85, "scope": [85, 125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 433, 449], "plotli": 85, "make_label": 85, "visual": [85, 219, 244, 246, 388, 431, 442, 444], "notimplementederror": [85, 429], "unsupport": 85, "selected_act": 85, "mctsforest": [85, 143, 422], "key_typ": 85, "recurse_through_entri": 92, "recurse_through_stack": 92, "infinit": [95, 147, 148, 169, 170, 437, 446], "block": [95, 98, 124, 424, 429, 432, 433, 436, 437, 442, 446], "pairwisedataset": [95, 422], "256": [95, 147, 148, 209, 265, 430, 431, 433, 442, 443], "checkpoint_fil": 97, "h5": 97, "h5_kwarg": 97, "iff": 97, "suffix": [97, 401], "h5py": 97, "create_dataset": 97, "consequ": [97, 276, 437], "immut": [98, 125, 128, 131, 135, 142, 143, 155, 159, 164, 165, 222, 241], "piec": [98, 109, 120, 123, 124, 429, 430, 431, 438, 442, 443, 444, 446], "scratch_dir": [99, 429, 430, 432, 437, 442, 445, 446], "sent": [99, 101, 121, 248], "mistak": [99, 101, 121], "overewritten": 99, "tensorstoragecheckpoint": 99, "pathlib": [99, 406, 433], "main_ckpt_dir": 99, "rb_memmap": 99, "10_000_000": 99, "myclass": [99, 101, 121], "foo": [99, 101, 121, 314, 446, 449], "bar": [99, 101, 121, 314, 399, 400, 401, 406, 426, 430], "attach": [99, 100, 101, 102, 115, 117, 121, 430], "entiti": [99, 100, 101, 102, 115, 117, 121], "lazystacktensordict": 100, "heterougen": 100, "linearli": 100, "densifi": 100, "unlimit": [100, 102], "st": 100, "expans": [101, 351], "zero_": [101, 121, 176], "liststoag": 103, "max_capac": [105, 106, 429, 446], "max_priority_within_buff": [105, 106], "data_0": 105, "data_1": 105, "smoothen": 105, "tdrb": 105, "pack": [105, 272, 276, 431, 434, 449], "nd": [105, 106], "1d": [105, 106, 113, 114, 119], "sum_tre": [105, 106], "min_tre": [105, 106], "slice_len": [106, 113, 114, 388], "end_kei": [106, 113, 114], "cache_valu": [106, 113, 114], "closer": [106, 448], "readili": [106, 113, 114, 323], "conjunct": [106, 113, 114, 430], "Will": [106, 113, 150, 388], "buffer0": [106, 113], "immutablewrit": [106, 113], "buffer1": [106, 113], "other_sampl": [106, 113], "shorter": [106, 113, 114], "short": [106, 113, 114, 125, 126, 127, 128, 131, 135, 140, 141, 142, 143, 155, 156, 159, 164, 165, 166, 171, 276, 277, 430, 431, 434, 435, 443, 446], "Be": [106, 113, 114], "fewer": [106, 113], "tolist": 106, "120110917137936e": 106, "06": [106, 266, 302], "storageensembl": [108, 111], "samplerensembl": 108, "writerensembl": [108, 117], "sample_from_al": [108, 111], "num_buffer_sampl": [108, 111], "ensembl": [108, 111, 117, 118, 124, 322, 354], "forbidden": 108, "0x13a2ef430": 108, "0x13a2f9310": 108, "interpol": [108, 223, 430, 433], "interpolationmod": 108, "bilinear": [108, 223], "0x13a2f9220": 108, "0x13a2f9f70": 108, "0x13a2d9b50": 108, "0x13a2f95b0": 108, "0x128648260": 108, "roundrobin": [109, 120], "buffer_id": [111, 117], "shuffl": [112, 114, 443], "incomplet": [112, 114], "fresh": 112, "haven": [112, 445], "draw": [112, 271], "use_gpu": [113, 114], "slicesamplerwithoutreplac": [113, 446], "acceler": [113, 114, 442, 443], "reconstruct": [113, 114, 345, 429, 449], "ep_1": [113, 114], "ep_2": [113, 114], "73": 113, "74": 113, "76": 113, "77": 113, "42": [113, 279, 294, 333, 334, 336, 337, 341, 349, 356], "43": 113, "45": 113, "67": [113, 441], "69": 113, "70": 113, "71": 113, "27": [113, 114, 126, 127, 155, 164], "28": [113, 114, 284], "31": [113, 140, 141], "80": [113, 126, 127], "82": 113, "83": 113, "84": [113, 223, 432, 433], "78": 113, "79": 113, "320": [113, 114, 129, 130], "700": [113, 114], "dataid": [113, 114], "available_dataset": [113, 114], "counter": [114, 239, 318, 399, 426, 433], "23": [114, 252], "request": [114, 188, 220], "51": 114, "__len__": 115, "rank_kei": 119, "rank": [119, 255], "samplerwithoutreplac": [119, 431, 443, 446], "get_insert_index": 119, "themselv": [125, 256, 430], "dens": [125, 282, 283], "maybe_dens": 125, "min_get": [125, 159, 165], "maker": [125, 420, 430], "sort": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 192, 295], "another_act": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "discretebox": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "mutabl": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "action_spec_unbatch": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 431, 443], "had": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 435, 437], "all_act": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "any_don": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "loc": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 211, 215, 226, 248, 249, 275, 303, 304, 311, 312, 313, 319, 323, 325, 333, 334, 336, 349, 353, 354, 355, 356, 410, 420, 424, 429, 430, 431, 432, 435, 443, 448], "_callabletransform": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "auto_specs_": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "action_spac": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 203, 268, 297, 315, 316, 320, 321, 333, 334, 336, 337, 338, 340, 341, 342, 343, 344, 349, 351, 353, 354, 355, 356, 358, 359, 366, 432, 433, 435, 439], "check_dtyp": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 171], "discrep": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 171, 333, 335, 337, 338, 350, 353, 355, 366], "broken": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 171], "rng": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 171, 444], "done_keys_group": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "another_don": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "done_spec_unbatch": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "empty_cach": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 241], "fake_tensordict": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 430, 433], "envnam": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "full_action_spec_unbatch": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 442, 443], "full_done_spec_unbatch": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "full_observation_spec_unbatch": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "full_reward_spec_unbatch": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "pipeline_st": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "full_state_spec_unbatch": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "input_spec_unbatch": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "is_spec_lock": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "maybe_reset": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "speak": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 196, 323, 429], "observation_spec_unbatch": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "output_spec_unbatch": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "register_gym": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 434], "entry_point": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "info_kei": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "reward_threshold": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "nondeterminist": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "max_episode_step": [125, 128, 131, 134, 135, 136, 142, 143, 155, 156, 159, 164, 165, 166], "order_enforc": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "autoreset": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "disable_env_check": [125, 128, 131, 134, 135, 142, 143, 150, 151, 155, 156, 159, 164, 165, 166], "apply_api_compat": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "nasium": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 179], "dmcontrolenv": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 388, 422, 429, 434, 441, 449], "dmc": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "cheetah": [125, 128, 129, 130, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 388, 429], "removeemptyspec": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "threshold": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 271, 334, 335, 431], "learnt": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 416], "checker": [125, 128, 131, 134, 135, 142, 143, 150, 151, 155, 156, 159, 164, 165, 166], "stepapicompat": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "deem": [125, 128, 131, 135, 142, 143, 147, 148, 155, 156, 159, 164, 165, 166, 169, 170], "task_nam": [125, 128, 129, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "envgym": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "0855": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "0215": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "0881": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "0412": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "1101": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "0080": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "0254": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "0424": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "veloc": [125, 128, 129, 130, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 191, 442, 443, 444, 449], "9609e": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "9776e": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "04": [125, 128, 131, 135, 139, 142, 143, 155, 156, 159, 164, 165, 166, 236], "6347e": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "3842e": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "5338e": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "3064e": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "0381e": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "6656e": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "05": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 236, 254, 444], "0204e": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "0833": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "0275": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "0612": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "0770": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "1256": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "0082": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "0186": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "0476": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "2221": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "2256": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "5930": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "6937": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "5865": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "5479": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "0187": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "6825": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "5224": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "0018": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "1005": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "0335": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 196], "0268": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "0133": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "0627": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "0074": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "0488": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "0353": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "0075": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "0069": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "0098": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "0058": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "0033": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "0157": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "0004": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 236], "0381": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "0452": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "11355747": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "04257728": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "00408397": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "04155852": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "0389733": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "01409826": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "0978704": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "08808327": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "03970837": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "00535434": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "02353762": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "05116226": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "02788907": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "06848346": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "05154399": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "0371798": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "05128025": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "dydact": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "ant": [125, 126, 127, 128, 131, 135, 138, 142, 143, 155, 156, 159, 164, 165, 166, 445], "gym_env": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 448], "reset_kei": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 191, 227, 233, 234, 235, 442], "multitask": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "multiag": [125, 128, 131, 135, 142, 143, 146, 155, 156, 157, 158, 159, 164, 165, 166, 183, 285, 296, 305, 335, 350, 353, 366], "another_reward": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "reward_spec_unbatch": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "auto_cast_to_devic": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 443], "soon": [125, 128, 131, 135, 142, 143, 155, 156, 157, 158, 159, 164, 165, 166], "__sort": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "as__": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "categorical_action_encod": [125, 126, 127, 128, 131, 134, 135, 136, 137, 140, 141, 142, 143, 150, 151, 155, 156, 159, 161, 164, 165, 166, 179, 433], "argmaxmodul": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "argmax": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 268, 297, 316, 321, 433, 435], "n_act": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 211, 333, 334, 336, 337, 338, 340, 341, 342, 349, 353, 354, 355, 356, 358, 359, 436], "ourselv": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 431, 449], "emul": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "epoch": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 406, 431, 442, 443], "input_td": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "rollout_td": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "state_spec_unbatch": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "prevail": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 183, 192, 227], "next_tensordict": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 182, 188, 192, 204, 205, 206, 211, 218, 221, 222, 228, 231, 244, 248], "precomput": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166], "_stepmdp": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 182], "exclude_act": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 182], "reset_data": [125, 128, 131, 135, 142, 143, 155, 156, 159, 164, 165, 166, 449], "googl": [126, 127, 147, 148, 153, 154, 254, 431, 432, 442, 443], "convers": [126, 127, 140, 141, 142, 179, 425], "2106": [126, 127, 339, 358], "13281": [126, 127], "frame_skip": [126, 127, 129, 130, 134, 135, 136, 137, 140, 141, 144, 145, 150, 151, 161, 207, 399, 401, 409, 426, 429, 430, 431, 448], "allow_done_after_reset": [126, 127, 129, 130, 131, 134, 136, 137, 140, 141, 150, 151, 153, 154, 161, 167, 168], "toler": [126, 127, 129, 130, 134, 136, 137, 140, 141, 150, 151, 153, 154, 161, 167, 168, 266, 302], "is_avail": [126, 127, 429, 430, 431, 432, 442, 443, 445], "87": [126, 127], "acrobot": [126, 127, 129, 130, 449], "advant": [126, 127, 140, 141], "timer": [126, 127, 140, 141], "timeit": [126, 127, 140, 141, 433], "310": [126, 127], "ms": [126, 127, 140, 141], "268": [126, 127], "433": [126, 127], "213": [126, 127], "8605": [126, 127], "pipelineenv": 127, "get_environ": 127, "san": 128, "fen": [128, 153, 154], "pgn": 128, "legal": 128, "board": [128, 166], "include_san": 128, "algebra": [128, 444], "notat": 128, "include_fen": 128, "forsyth": 128, "edward": 128, "include_pgn": 128, "portabl": [128, 438], "include_legal_mov": 128, "include_hash": 128, "mask_act": 128, "subset": [128, 444, 445], "29275": 128, "rnbqkbnr": [128, 153, 154], "pppppppp": [128, 153, 154], "kqkq": [128, 153, 154], "legal_mov": 128, "219": 128, "5p2": 128, "ppppp1pp": 128, "event": [128, 282, 283, 291, 377, 378, 379, 380, 382, 383, 384, 385, 446], "white": 128, "f4": 128, "96": 128, "kq": 128, "5n2": 128, "rnbqkb1r": 128, "nf3": 128, "na6": 128, "c4": 128, "f6": 128, "h4": 128, "rb8": 128, "na3": 128, "ra": 128, "get_legal_mov": 128, "uci": 128, "dm_control": [129, 130, 429, 441, 449], "2006": [129, 130, 334, 340], "12983": [129, 130], "240": [129, 130, 448], "swingup": [129, 130, 449], "swingup_spars": [129, 130], "ball_in_cup": [129, 130], "catch": [129, 130, 433], "balance_spars": [129, 130], "three_pol": [129, 130], "two_pol": [129, 130], "finger": [129, 130], "turn_easi": [129, 130], "turn_hard": [129, 130], "fish": [129, 130], "upright": [129, 130, 430], "swim": [129, 130], "hopper": [129, 130], "hop": [129, 130], "humanoid": [129, 130, 155, 164, 441], "walk": [129, 130, 155, 164, 430, 441], "run_pure_st": [129, 130], "bring_bal": [129, 130], "bring_peg": [129, 130], "insert_bal": [129, 130], "insert_peg": [129, 130], "point_mass": [129, 130], "reacher": [129, 130], "swimmer": [129, 130], "swimmer6": [129, 130], "swimmer15": [129, 130], "walker": [129, 130], "dog": [129, 130], "trot": [129, 130], "humanoid_cmu": [129, 130], "lqr": [129, 130], "lqr_2_1": [129, 130], "lqr_6_2": [129, 130], "quadrup": [129, 130], "escap": [129, 130], "stacker": [129, 130], "stack_2": [129, 130], "stack_4": [129, 130], "deviceless": 131, "run_type_check": [131, 149], "hint": 131, "counterenv": 131, "creator": [132, 411, 412, 418, 419, 420], "substitut": [132, 233, 248, 435], "vecnorm": [132, 249, 420], "env_creat": [132, 429], "test_env1": 132, "_td": [132, 344], "observation_count": [132, 449], "test_env2": 132, "ps": 132, "p1": 132, "p2": 132, "9934": 132, "make_vari": [132, 239], "variant": [132, 239, 256, 424], "trajcount": 132, "env_creator_pendulum": 132, "env_creator_cartpol": 132, "env_str": 133, "device_map": 133, "registri": [134, 167], "asyncvectorenv": 134, "pixel_observ": [134, 136, 137, 161], "pixelobservationwrapp": [134, 136, 137, 161], "adventur": [134, 136], "airraid": [134, 136, 449], "alien": [134, 136], "time_limit": 134, "timelimit": [134, 147, 148, 169, 170], "default_info_dict_read": [134, 135, 136, 155], "reader": [134, 135, 136, 155, 430], "set_info_dict_read": [134, 135, 136, 155, 434], "info_dict": [134, 135, 136, 155], "gymlikeenv": [134, 136, 422], "auto_register_info_dict": [134, 135, 136, 155], "multibinari": [134, 136], "multidiscret": [134, 136], "rag": [134, 136], "gym_conversion_exampl": [134, 136], "info_dict_read": [135, 155], "ignore_priv": 135, "baseinfodictread": 135, "tensordictprim": [135, 155, 257, 274, 278, 330, 424, 432], "succe": [135, 155], "underscor": 135, "primer": [135, 142, 199, 234, 257, 274, 278, 330, 432], "halfcheetah": [135, 155, 184, 223, 429, 448], "reward_ctrl": [135, 155], "reward_run": [135, 155], "x_posit": [135, 155], "x_veloc": [135, 155], "raise_if_clos": 135, "read_act": 135, "read_don": 135, "nonsens": 135, "fallback": 135, "read_ob": 135, "dictat": [135, 212, 319, 323, 353, 429, 444], "read_reward": 135, "hoc": [135, 155, 435], "dict_read": 135, "my_info_kei": 135, "some_env": 135, "vecenv": 136, "vectorenv": 136, "convert_actions_to_numpi": 136, "secur": 137, "habitat3": 137, "ai": [137, 445], "habitatrenderpick": 137, "isaacgym": [138, 139], "isaacgymwrapp": [138, 422], "isaacgymenv": [139, 422], "webpag": 139, "isaac": 139, "essenc": [139, 434], "instadeepai": [140, 141], "2306": [140, 141], "09884": [140, 141], "snake": [140, 141], "grid": [140, 141, 388], "bodi": [140, 141], "body_st": [140, 141], "fruit_posit": [140, 141], "col": [140, 141], "head_posit": [140, 141], "tail": [140, 141], "game2048": [140, 141], "maze": [140, 141], "cleaner": [140, 141], "cvrp": [140, 141], "multicvrp": [140, 141], "minesweep": [140, 141], "rubikscub": [140, 141], "knapsack": [140, 141], "sudoku": [140, 141], "tsp": [140, 141], "connector": [140, 141], "v2": [140, 141, 162, 163, 362, 377, 378, 379, 380, 382, 383, 384, 385, 432], "mmst": [140, 141], "graphcolor": [140, 141], "partli": [140, 141], "scrambl": [140, 141], "robotwarehous": [140, 141], "tetri": [140, 141], "binpack": [140, 141], "jobshop": [140, 141], "0x1fca91910": 140, "122": [140, 141, 449], "0x1ff9baee0": 140, "134": [140, 141], "0x1ff9ba7c0": 140, "172": [140, 141], "jit": 141, "eager": 141, "tdreset": [141, 251, 441], "whichev": 141, "drastic": [141, 155, 446], "histori": [142, 422], "cot": 142, "from_dataload": [142, 199], "vllm": 142, "vllmwrapper": 142, "token_kei": 142, "str2str": [142, 199], "str_kei": 142, "attention_kei": 142, "assign_reward": 142, "vocab_s": [142, 143], "no_stack": 142, "has_attent": 142, "assign_don": 142, "batchless": 142, "dataloadingprim": [142, 234], "pretrainedtokenizerbas": [142, 238], "as_llm_data": 142, "data_kei": [142, 199], "data_spec": [142, 199], "stack_method": [142, 199], "as_nested_tensor": [142, 199], "as_padded_tensor": [142, 199], "group_repeat": [142, 199], "bert": [142, 238], "uncas": [142, 238], "tokens_in": 142, "tokens_out": 142, "overview": [143, 431, 433, 436, 442, 443, 448], "hashing_modul": 143, "text_output": 143, "decod": [143, 177, 289], "batch_decod": 143, "text_kei": 143, "gpt2token": 143, "make_tensordict": 143, "mo": [144, 145], "minecart": [144, 145], "mo_gym": [145, 212], "qualnam": 146, "neural": [146, 157, 158, 258, 259, 292, 294, 300, 322, 424, 430, 431, 432, 435, 442, 443, 444, 449], "group_map": [146, 147, 148, 153, 154, 157, 158, 167, 168, 169, 170, 172, 442], "constructiuon": [146, 157, 158], "premad": [146, 147, 148, 157, 158, 169, 170, 366], "all_in_one_group": [146, 153, 154, 172], "agent_0": [146, 157, 158, 167, 172, 231], "agent_1": [146, 157, 158, 167, 172, 231], "agent_2": [146, 157, 158, 167, 172], "agent_3": [146, 167], "one_group_per_ag": [146, 157, 158], "meltingpot": [147, 148], "2211": [147, 148], "13746": [147, 148], "melt": [147, 148], "pot": [147, 148], "novel": [147, 148, 436], "social": [147, 148], "familiar": [147, 148, 430, 443, 449], "unfamiliar": [147, 148], "broad": [147, 148], "cooper": [147, 148, 442, 443], "decept": [147, 148], "reciproc": [147, 148], "stubborn": [147, 148], "substrat": [147, 148], "ml_collect": 147, "config_dict": 147, "configdict": 147, "categorical_act": [147, 148, 153, 154, 157, 158, 162, 163, 167, 168, 169, 170], "marlgroupmaptyp": [147, 148, 153, 154, 157, 158, 167, 168, 169, 170, 172, 422, 442], "agent_nam": [147, 148, 169, 170, 172], "agent_names_to_indices_map": [147, 148, 169, 170], "env_torchrl": [147, 148], "commons_harvest__open": [147, 148], "rgb": [147, 148], "144": [147, 148], "192": [147, 148], "collective_reward": [147, 148], "ready_to_shoot": [147, 148], "88": [147, 148, 162, 163], "substrate_config": 148, "get_config": 148, "mp_env": 148, "build_from_config": 148, "default_player_rol": 148, "mymbenv": [149, 255, 281], "world_model": [149, 255, 281, 345], "hidden_observ": [149, 255, 281], "mlp": [149, 255, 258, 259, 261, 262, 263, 264, 270, 274, 278, 281, 285, 286, 311, 315, 330, 338, 340, 424, 430, 433, 435, 436, 439, 441, 445, 448], "worldmodelwrapp": [149, 255, 281], "activation_class": [149, 255, 258, 259, 261, 262, 263, 264, 269, 270, 279, 281, 284, 285, 430, 435, 442, 443, 448], "activate_last_lay": [149, 255, 264, 279, 281], "sail": [150, 151], "sg": [150, 151], "2206": [150, 151], "10558": [150, 151], "readthedoc": [150, 153, 154], "en": [150, 153, 154], "python_interfac": 150, "envpoolmixin": 151, "env_bas": 151, "task_id": 151, "env_typ": 151, "gym_reset_return_info": 151, "envpool_env": 151, "www": [152, 282, 283], "fetch_openml": 152, "adult_num": 152, "adult_onehot": 152, "mushroom_num": 152, "mushroom_onehot": 152, "covertyp": 152, "shuttl": 152, "magic": [152, 433, 434], "106": 152, "openspiel": [153, 154], "open_spiel": [153, 154], "game_str": 153, "return_st": [153, 154, 157, 158], "4672": [153, 154], "current_play": [153, 154], "674": 153, "2048": [153, 154], "add_nois": [153, 154], "amazon": [153, 154], "backgammon": [153, 154], "restor": [153, 154], "td_restor": [153, 154], "pyspiel": 154, "load_gam": 154, "new_initial_st": 154, "3009": 154, "my_env_fun": [155, 164], "custom_attribute_list": [155, 164], "custom_attribut": [155, 164], "custom_method_list": [155, 164], "custom_method": [155, 164], "deploi": [155, 164, 188, 433], "slight": [155, 164, 430], "share_individual_td": [155, 164], "shared_memori": [155, 164], "policy_proof": [155, 164], "ll": [155, 164, 272, 273, 276, 277, 429, 430, 431, 432, 434, 435, 436, 437, 439, 443, 449], "hidden": [155, 164, 190, 261, 269, 272, 273, 274, 276, 277, 278, 289, 290, 298, 299, 311, 312, 313, 314, 322, 325, 335, 350, 353, 424, 432, 441, 448], "serial_for_singl": [155, 164, 430], "circular": [155, 164, 429], "list_of_kwarg": [155, 164], "com_veloc": [155, 164], "head_height": [155, 164], "joint_angl": [155, 164], "torso_vert": [155, 164], "timeout": 155, "idl": 155, "batched_pipe_timeout": 155, "stringent": [155, 431, 442, 443], "penv": [155, 239], "env_fix": 155, "influenc": 155, "myenv": [155, 188, 198, 202], "pipe": 155, "update_kwarg": [155, 164], "th": [156, 206, 243, 272, 276, 444], "thdot": [156, 444], "max_spe": [156, 444], "max_torqu": [156, 444], "gen_param": [156, 444], "gravit": [156, 444], "torqu": [156, 444], "pettingzoo": [157, 158, 442, 443], "pet": [157, 158], "zoo": [157, 158], "__": [157, 158], "aecenv": [157, 158], "dead": [157, 158], "done_on_ani": [157, 158, 442], "compulsori": [157, 158], "adversary_0": [157, 158], "adversari": [157, 158, 347, 442], "sisl": 157, "multiwalker_v9": 157, "aec": [157, 158], "n_piston": [157, 158], "pistonball_v6": [157, 158], "piston": [157, 158], "piston_0": [157, 158], "piston_1": [157, 158], "piston_20": [157, 158], "tictactoe_v3": [157, 158], "player": [157, 158, 166], "player_1": [157, 158], "player_2": [157, 158], "butterfli": 158, "parallel_env": [158, 429, 448, 449], "_setup": [159, 165], "queue": [159, 199, 248, 446, 448], "async_reset_send": [159, 165], "async_reset_recv": [159, 165], "cube": 160, "roboh": 161, "expos": [161, 198, 202, 324, 430], "vikashplu": 161, "wiki": 161, "2310": 161, "06828": 161, "from_depth": 161, "smacv2": [162, 163], "starcraft": [162, 163], "challeng": [162, 163, 434, 444, 445], "10gen_terran": [162, 163], "10gen_zerg": [162, 163], "10gen_protoss": [162, 163], "3m": [162, 163], "8m": [162, 163], "25m": [162, 163], "5m_vs_6m": [162, 163], "8m_vs_9m": [162, 163], "10m_vs_11m": [162, 163], "27m_vs_30m": [162, 163], "mmm": [162, 163], "mmm2": [162, 163], "2s3z": [162, 163], "3s5z": [162, 163], "3s5z_vs_3s6z": [162, 163], "3s_vs_3z": [162, 163], "3s_vs_4z": [162, 163], "3s_vs_5z": [162, 163], "1c3s5z": [162, 163], "2m_vs_1z": [162, 163], "corridor": [162, 163], "6h_vs_8z": [162, 163], "2s_vs_1sc": [162, 163], "so_many_banel": [162, 163], "bane_vs_ban": [162, 163], "2c_vs_64zg": [162, 163], "old": [162, 163, 350, 449], "smac": [162, 163], "map_nam": [162, 163], "176": [162, 163], "battle_won": [162, 163], "dead_al": [162, 163], "dead_enemi": [162, 163], "episode_limit": [162, 163], "322": [162, 163], "procedur": [162, 163], "distribution_config": [162, 163], "n_unit": [162, 163], "n_enemi": [162, 163], "team_gen": [162, 163], "dist_typ": [162, 163], "weighted_team": [162, 163], "unit_typ": [162, 163], "marin": [162, 163], "maraud": [162, 163], "medivac": [162, 163], "exception_unit_typ": [162, 163], "start_posit": [162, 163], "surrounded_and_reflect": [162, 163], "map_x": [162, 163], "map_i": [162, 163], "capability_config": [162, 163], "131": [162, 163], "starcraft2env": 163, "tic": 166, "tac": 166, "toe": 166, "single_play": 166, "player1": 166, "desired_batch_s": 166, "player0": 166, "uniti": [167, 168], "ml": [167, 168], "technolog": [167, 168], "llapi": [167, 168], "mlagents_env": [167, 168], "unityenviron": [167, 168], "file_nam": 167, "registered_nam": 167, "nor": 167, "localhost": 167, "connect": 167, "3dball": 167, "group_0": 167, "vectorsensor_size8": 167, "continuous_act": [167, 169, 170, 386, 442, 443], "agent_10": 167, "agent_11": 167, "agent_4": 167, "agent_5": 167, "agent_6": 167, "agent_7": 167, "agent_8": 167, "agent_9": 167, "group_reward": 167, "proroklab": [169, 170], "vectorizedmultiagentsimul": [169, 170], "2207": [169, 170], "03530": [169, 170], "basescenario": 169, "defaultt": 169, "chosen": [169, 170, 233, 234, 296, 297, 305, 321, 388, 424, 438], "sparsiti": 169, "unbatched_action_spec": [169, 170], "unbatched_observation_spec": [169, 170], "unbatched_reward_spec": [169, 170], "het_spec": [169, 170], "het_specs_map": [169, 170], "flock": [169, 170, 386], "agent_collision_rew": [169, 170], "agent_distance_rew": [169, 170], "ca": 172, "environment4": 172, "get_group_map": 172, "sumbodul": 175, "unsqueeze_null_shap": 176, "dynamic_shap": 176, "model_bas": [177, 178, 255, 281], "model_based_env": [177, 344], "dreamerenv": [177, 344, 422], "model_based_env_ev": 177, "spec_typ": 179, "convert_specnam": 179, "remap_state_to_observ": 179, "spectyp": 179, "probabilistictdmodul": [180, 279, 319, 323, 367, 401], "keep_oth": [182, 444], "exclude_reward": 182, "exclude_don": 182, "next_": 182, "write_full_fals": 183, "_terminated_or_trunc": 183, "num_interv": 184, "out_action_kei": 184, "samplingstrategi": 184, "optino": 184, "intenum": 184, "action_disc": 184, "masker": 185, "maskedenv": 185, "ones_lik": [185, 282], "scatter": 185, "transformthatmeasuresbyt": [185, 187, 188, 190, 191, 192, 195, 196, 200, 203, 204, 205, 207, 210, 211, 218, 220, 221, 222, 224, 227, 228, 231, 232, 233, 234, 235, 236, 238, 239, 240, 244, 245, 247, 248, 251], "bytes_in_td": [185, 187, 188, 190, 191, 192, 195, 196, 200, 203, 204, 205, 207, 210, 211, 218, 220, 221, 222, 224, 227, 228, 231, 232, 233, 234, 235, 236, 238, 239, 240, 244, 245, 247, 248, 251], "fill_float": 187, "fill_int": 187, "fill_bool": 187, "someenvclass": 187, "autoresetenv": 187, "fooenv": 187, "sign": [187, 229, 368, 442], "envtyp": 187, "reshape_fn": [188, 433], "reset_func": 188, "env_kwarg": [188, 418, 419, 429], "accompani": [188, 232], "tensordict_batch_s": 188, "tensordict_reset": [188, 444], "transform_env_batch_s": [188, 195, 240, 251], "untouch": [188, 195, 198, 200, 204, 211, 213, 221, 222, 228, 232, 238, 240, 242, 249, 251], "transform_full_done_spec": [188, 195, 198, 200, 204, 211, 213, 221, 222, 228, 232, 238, 240, 242, 249, 251], "biner": 189, "burn_in": 190, "burn": 190, "burnt": 190, "gru_modul": [190, 274, 330], "input_s": [190, 234, 272, 273, 274, 276, 277, 278, 330, 432, 433], "hidden_s": [190, 234, 272, 273, 274, 276, 277, 278, 330, 432, 433], "default_recurrent_mod": [190, 274, 278], "burn_in_transform": 190, "gru": [190, 234, 273, 274, 330, 433], "num_lay": [190, 272, 274, 276, 278, 289, 290, 330, 433], "is_init": [190, 210, 274, 278, 295, 318, 330, 432, 433], "86": 190, "3008": 190, "0344": 190, "padding_valu": [191, 282, 283], "as_invers": 191, "movement": 191, "1312": 191, "5602": 191, "consumpt": [191, 422], "pictur": 191, "pixels_trsf": [191, 446], "grayscal": [191, 430, 432, 433, 446, 449], "data_exclud": [191, 446], "make_rb_transform_and_sampl": 191, "sampler_kwarg": 191, "redund": [191, 432], "del_kei": [192, 231, 244, 441, 444], "unsqueeze_if_oor": 192, "observation_posit": 192, "observation_veloc": 192, "delet": [192, 231, 395], "crop": [193, 220, 388], "center": [193, 294, 388], "width": [193, 197, 223], "height": [193, 197, 223], "squar": [193, 197, 275, 303, 304, 388], "scalar": [194, 225, 253, 262, 264, 271, 287, 288, 295, 329, 333, 334, 335, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 353, 354, 355, 356, 357, 359, 366, 368, 369, 370, 371, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 424, 430, 436, 444], "rewardsc": [195, 241, 429, 430, 432], "rewardclip": 195, "transformed_env": [195, 241, 434], "transform_env_devic": [195, 200, 240, 251], "cond": 196, "met": [196, 332, 442, 444], "altogeth": 196, "exectu": 196, "palliat": [196, 435], "step_count_kei": [196, 232], "inner_count": 196, "middle_env": 196, "middle_count": 196, "auto_unwrap": [196, 241, 396], "9670": 196, "2546": 196, "9669": 196, "9802": 196, "1981": 196, "1601": 196, "9926": 196, "1214": 196, "5556": 196, "9994": 196, "7622": 196, "9984": 196, "0561": 196, "7933": 196, "9895": 196, "1445": 196, "7779": 196, "dtype_in": 198, "dtype_out": 198, "scan": [198, 202, 324, 325], "resp": [198, 202], "not_transform": [198, 202], "auto_batch_s": 199, "progress": [199, 399, 400, 401, 406, 426, 430, 432, 449], "maybe_dense_stack": 199, "unrel": 199, "llmenv": [199, 422], "endless_dataload": 199, "set_capture_non_tensor_stack": 199, "dummydataload": 199, "generate_random_str": 199, "ascii_lowercas": 199, "__iter__": 199, "__next__": 199, "zxwvupirska": 199, "stringa": 199, "zxwvupirsk": 199, "roll": 199, "init_st": 199, "nngcmflsana": 199, "vrrbnhzpmga": 199, "nngcmflsan": 199, "vrrb": 199, "dummytensordataload": 199, "generate_random_tensor": 199, "pad_tensor": 199, "padding_length": 199, "orig_devic": 200, "unspecifi": 200, "transform_done_spec": [200, 231, 238, 240, 242, 251], "num_actions_effect": 201, "max_act": 201, "include_forward": 201, "num_act": [201, 259, 342, 433, 435], "action_out": 201, "eol_kei": 203, "lives_kei": 203, "eol_attribut": 203, "breakout": 203, "210": [203, 217], "160": [203, 217], "eol_transform": 203, "eol": 203, "dqnloss": [203, 333, 334, 336, 337, 340, 342, 343, 344, 348, 349, 351, 353, 354, 355, 356, 357, 358, 359, 360, 366, 413, 422, 425, 430, 432, 433, 439], "register_kei": 203, "loss_or_advantag": 203, "lossmodul": [203, 406, 415, 416, 422, 425], "valueestimatorbas": [203, 351, 422], "finit": [205, 294, 435, 446], "first_dim": 206, "last_dim": 206, "allow_positive_dim": [206, 231, 243], "frameskip": 206, "repeatedli": [207, 431, 443], "hash_fn": 209, "use_raw_nontensor": [209, 238, 242], "repertoir": 209, "reproducible_hash": 209, "unarytransform": 209, "observation_str": 209, "tobyt": [209, 242], "observation_hash": 209, "x08": 209, "x8b": 209, "xbexav": 209, "xbf": 209, "x00": 209, "xee": 209, "xb5": 209, "x17": 209, "x8f": 209, "xbe": [209, 242], "x88": 209, "xccu": 209, "xc0vr": 209, "get_input_from_hash": 209, "hash_tensor": 209, "init_kei": [210, 318], "tracker": 210, "log_prob_kei": [211, 323, 425], "pi_curr": 211, "pi_0": 211, "overfit": 211, "probabilist": [211, 319, 333, 353, 422, 431, 448], "get_dist": [211, 323, 324], "normalparamextractor": [211, 311, 312, 313, 319, 325, 333, 334, 336, 342, 349, 353, 354, 355, 356, 358, 359, 424, 431, 435, 443, 448], "probabilisticactor": [211, 311, 312, 313, 314, 333, 334, 336, 339, 341, 342, 349, 352, 353, 354, 355, 356, 358, 359, 424, 429, 431, 435, 442, 443], "tanhnorm": [211, 311, 312, 313, 319, 325, 333, 334, 336, 349, 353, 354, 355, 356, 358, 359, 422, 431, 443, 448], "return_log_prob": [211, 311, 312, 313, 319, 323, 325, 355, 424, 431, 435, 442, 443, 448], "apply_": 211, "copy_": [211, 429], "formula": [211, 275, 303, 304, 333, 335, 350, 353, 425, 431], "mogymwrapp": [212, 422], "mo_env": 212, "sea": 212, "treasur": 212, "so_env": 212, "stack_reward": 213, "stack_observ": 213, "auto_batch_size_": 213, "macro": [213, 318], "noop": 214, "trial": 214, "standard_norm": [215, 226, 248, 249, 429, 430, 432], "affin": [215, 226, 248, 249], "layer": [215, 248, 254, 258, 259, 261, 262, 267, 269, 272, 273, 274, 276, 277, 278, 279, 284, 285, 287, 288, 289, 290, 300, 301, 308, 317, 326, 424, 430, 431, 432, 433, 435, 442, 445], "epsilon": [215, 253, 271, 295, 357, 404, 430, 431, 432, 435], "recover": 215, "set_default_tensor_typ": 215, "doubletensor": 215, "isclos": 215, "next_ob": [215, 368, 369, 370, 371, 448], "init_stat": [215, 429, 430, 431, 432], "3752e": 215, "5087e": 215, "9294e": 215, "9636": 215, "5608": 215, "6408": 215, "num_it": [215, 430, 431], "reduce_dim": [215, 429, 430, 431, 432], "cat_dim": [215, 429, 430, 431, 432], "keep_dim": [215, 318, 430, 432], "statist": [215, 248, 249, 254, 355, 420, 429, 430, 431, 449], "gaussian": [215, 234, 253, 255, 281, 287, 288, 293, 431, 433, 442], "empir": [215, 255, 281, 319, 323, 429, 431, 443], "3d": [215, 258], "reorder": 217, "in_keys_in": [217, 243], "channel": [217, 237, 284, 289, 290, 430], "r3m": [219, 445], "resnet": [219, 244, 246], "ego4d": [219, 244, 246], "univers": [219, 244, 246, 434], "suraj": [219, 244], "nair": [219, 244], "aravind": [219, 244], "rajeswaran": [219, 244], "vikash": [219, 244, 246], "kumar": [219, 244, 246], "chelsea": [219, 244], "finn": [219, 244], "abhinav": [219, 244], "gupta": [219, 244], "2203": [219, 244, 281, 445], "12601": [219, 244, 445], "_init": [219, 244, 429], "resnet50": [219, 246, 445], "model_nam": [219, 244, 246, 391], "resnet34": 219, "resnet18": 219, "r3m_vec": [219, 445], "stack_imag": [219, 246], "tread": [219, 246], "hub": [219, 246, 434], "resnet50_weight": [219, 246], "imagenet1k_v1": [219, 246], "download_path": [219, 246], "tensor_pixels_kei": [219, 246], "sub_seq_len": 220, "sample_dim": [220, 429], "hesit": 220, "mix": [220, 296, 305, 366, 429, 442, 443], "improp": 220, "dummyenv": 221, "another_oth": 221, "other_reward": 221, "create_copi": 222, "stuff": [222, 437], "newnam": 222, "r2g": 224, "reward_to_go": 224, "bernoulli_": 224, "9010": 224, "9404": [224, 374], "9701": [224, 374], "9900": [224, 374], "0000": [224, 235, 236, 271, 294, 326, 374], "clamp_min": 225, "clamp_max": 225, "clip_min": 225, "clip_max": 225, "episode_": 227, "reward1": 227, "reward2": 227, "episode_reward": [227, 442, 443], "keep_reward": 228, "keep_don": 228, "logical_or": 229, "in_key_inv": 231, "unstack": 231, "update_don": 232, "disjunct": 232, "recognis": 232, "target_return": 233, "default_valu": [234, 330], "expand_spec": 234, "single_default_valu": 234, "call_before_env_reset": 234, "unit": [234, 255, 269, 272, 273, 289, 290, 298, 299, 431], "scala": 234, "mykei": 234, "__unless": 234, "exists__": 234, "get_primers_from_modul": [234, 257, 274, 278, 422], "recurrent_st": [234, 274, 278, 330, 432], "10th": 235, "0216": 235, "1149": 235, "1990": 235, "2749": 235, "3281": 235, "9290": 235, "3702": 235, "8978": 235, "time_kei": 236, "elaps": [236, 438], "monitor": [236, 434], "expend": 236, "_polici": 236, "time_reset": 236, "time_polici": 236, "time_step": [236, 277, 318], "0882": 236, "0002": 236, "5797e": 236, "6289e": 236, "7990e": 236, "0824e": 236, "0837e": 236, "6056e": 236, "2016e": 236, "1062e": 236, "7009e": 236, "from_int": 237, "shape_toler": 237, "ri": 237, "additional_token": 238, "skip_special_token": 238, "add_special_token": 238, "return_attention_mask": 238, "missing_toler": 238, "call_before_reset": 238, "traj_count": 239, "traj": 239, "countingenv": 239, "mocking_class": 239, "make_env_c0": 239, "make_env_c1": 239, "set_contain": 240, "reset_par": 240, "smoothli": [241, 254], "add_1": 241, "cache_spec": 241, "set_missing_toler": 241, "inv_fn": 242, "unari": 242, "durin": 242, "ommit": 242, "observation_trsf": 242, "xbc": 242, "x7f": 242, "x859": 242, "x81": 242, "x9a": 242, "xbd": 242, "xb8t8": 242, "test_input_spec": 242, "test_output_spec": 242, "danger": 243, "vc1": 244, "vc1_vec": 244, "untrain": 244, "make_noload_model": 244, "vip": [245, 246, 445], "implicit": [246, 341, 349, 446], "jason": 246, "ma": 246, "shagun": 246, "sodhani": 246, "dinesh": 246, "jayaraman": 246, "osbert": 246, "bastani": 246, "ami": 246, "zhang": 246, "vip_vec": 246, "final_nam": 247, "sb3": 247, "terminal_obs_read": 247, "truli": [247, 448], "vecnormv2": 248, "new_api": [248, 249], "to_observation_norm": [248, 249], "frozen_copi": [248, 249], "shared_td": 248, "race": 248, "decai": [248, 249, 253, 271, 357, 404, 429, 430, 432, 449], "underflow": [248, 404], "build_td_for_shared_vecnorm": 248, "memmori": 248, "td_share": 248, "v": [248, 272, 273, 276, 277, 311, 341, 349, 356, 429, 430], "unfreez": [248, 249], "observationnorm": [248, 249, 420, 429, 430, 431, 432, 448], "train_env": 248, "eval_env": 248, "9999": 249, "0001": [249, 269], "shared_data": 249, "varianc": [249, 254, 255, 256, 275, 303, 304, 425, 429, 431, 443], "vs": [249, 252, 274, 278], "_cast_int_to_float": 249, "state_dim": [250, 260, 265, 293, 298, 299, 314], "action_dim": [250, 260, 261, 263, 265, 293, 314, 429, 441], "gsde": [250, 354, 420], "gsdemodul": 250, "rb_transform": 251, "resist": 251, "insensit": 251, "sensit": [251, 430, 432], "_orig": 251, "95": [251, 281, 361, 431, 432], "window": [251, 318, 442, 446, 448], "module_nam": [252, 351], "from_vers": 252, "to_vers": 252, "class_method": 252, "import_modul": 252, "get_class_that_defined_method": 252, "module_set": 252, "setters_dict": 252, "setter": 252, "setter_dict": 252, "po": 253, "sigma_init": [253, 442], "sigma_end": [253, 442], "annealing_num_step": [253, 271, 295, 429, 430, 432, 433, 435, 439, 442], "sigma": [253, 272, 273, 275, 276, 277, 295, 303, 304, 431, 442], "omiss": [253, 271, 295], "momentum": 254, "max_r": 254, "max_d": 254, "warmup_step": 254, "batchrenorm": 254, "1702": 254, "03275": 254, "corenet": 254, "enhanc": 254, "warmup": 254, "phase": [254, 256, 443, 446], "outlier": 254, "period": 254, "warm": 254, "renorm": 254, "entropi": [255, 291, 333, 334, 335, 336, 341, 342, 349, 350, 352, 353, 354, 356, 358, 359, 443], "botev": 255, "2013": 255, "cem": 255, "plan": [255, 280, 281], "k": [255, 257, 272, 273, 276, 277], "maximis": [255, 261, 263, 281, 430, 431, 443], "modelbasedenv": [255, 281], "planning_horizon": [255, 281], "optim_step": [255, 281, 433, 439], "mpc": [255, 280, 281], "num_candid": [255, 281], "candid": [255, 281], "top_k": [255, 281], "modelbasedenvbas": [255, 280, 281, 422], "safemodul": [255, 280, 311, 313, 323, 333, 334, 336, 341, 342, 349, 353, 354, 355, 356, 358, 359, 411, 412, 416, 422, 448], "hausknecht": 256, "wagen": 256, "reus": [256, 261, 395], "consistentdropoutmodul": [256, 424], "capit": 256, "conceptu": 256, "devianc": 256, "set_exploration_typ": [256, 351, 401, 422, 424, 431, 432, 433, 435, 442, 448], "_main_async_collector": 256, "asyncdatacollector": [256, 422], "ditto": 256, "consistentdropout": 257, "input_shap": 257, "batcht": 257, "make_tensordict_prim": [257, 274, 278, 432], "input_dtyp": 257, "get_default_dtyp": [257, 404], "mask_6127171760": 257, "env0": [257, 449], "num_cel": [258, 259, 261, 262, 263, 264, 269, 270, 274, 278, 279, 284, 285, 311, 330, 430, 431, 432, 433, 435, 436, 439, 442, 443, 448], "elu": [258, 259, 261, 262, 263, 264, 269, 270, 284, 430, 448], "activation_kwarg": [258, 259, 279], "norm_class": [258, 259, 261, 262, 279], "norm_kwarg": [258, 259, 279], "bias_last_lay": [258, 259, 261, 262, 263, 264, 270, 279], "aggregator_class": [258, 259, 261, 262, 430, 432, 448], "squashdim": [258, 259, 261, 270, 284, 448], "aggregator_kwarg": [258, 259, 261, 262, 430, 432], "squeeze_output": [258, 259, 261, 262, 430, 432], "convolut": [258, 259, 261, 262, 284, 300, 433, 435], "cell": [258, 259, 272, 273, 274, 276, 277, 278, 279, 284, 285, 431, 433, 434, 435, 436, 437, 438, 439], "kernel": [258, 259, 284], "cnet": [258, 259], "conv3d": 258, "rectangular": [258, 259], "lazyconv2d": [259, 261, 262, 270, 284], "default_atari_dqn": [259, 433], "semin": 259, "transformer_config": [260, 293, 314], "decisiontransform": [260, 293], "dtconfig": [260, 265, 293], "2202": [260, 265, 352], "05607": [260, 265, 352], "return_to_go": [260, 265, 293, 314], "conv_net_kwarg": [261, 262], "mlp_net_kwarg": [261, 262, 263], "use_avg_pool": [261, 262], "WITH": [261, 262, 263, 264, 295, 357], "1509": [261, 262, 263, 264, 281, 295, 338, 348, 357], "02971": [261, 262, 263, 264, 295, 357], "convnet": [261, 262, 270, 284, 432, 433, 435, 448], "ndims_in": 261, "avgpool": [261, 262], "lazylinear": [261, 262, 263, 264, 270, 279, 424, 431, 435, 444, 445], "2304": 261, "adaptiveavgpool2d": [262, 430, 432], "output_s": [262, 430, 432], "squeeze2dlay": 262, "400": [263, 264, 443], "mlp_net_kwargs_net1": 264, "mlp_net_kwargs_net2": 264, "mlp1": 264, "mlp2": 264, "desdescrib": 265, "n_embd": 265, "n_layer": [265, 272, 276], "n_head": 265, "n_inner": 265, "n_posit": 265, "resid_pdrop": 265, "attn_pdrop": 265, "gpt2config": 265, "atol": [266, 302], "rtol": [266, 302], "batch_shap": [266, 291, 302], "event_shap": [266, 302], "absolut": [266, 302, 429], "_instanc": 266, "densiti": [266, 282, 283, 291, 304], "mass": [266, 282, 283, 291, 304, 444], "rsampl": [266, 283, 291, 323], "sample_shap": [266, 282, 283, 291], "softmax": [267, 283, 291, 315, 316], "var_num": [268, 297, 315, 316, 321], "action_value_kei": [268, 297, 315, 316, 320, 321, 336, 351, 366], "action_mask_kei": [268, 271, 297, 315, 316, 320, 321], "1707": [268, 316, 343, 353], "06887": [268, 316, 343], "mult": [268, 285, 297, 315, 316, 320, 321], "tensordict_modul": [268, 272, 273, 276, 277, 297, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 333, 334, 336, 337, 341, 342, 349, 353, 354, 355, 356, 358, 359, 424], "nbin": [268, 315, 424], "customdistributionalqv": 268, "log_softmax": [268, 315], "qvalue_actor": [268, 297, 315, 320, 424], "to_modul": [268, 322, 325, 429, 448], "std_bia": 269, "std_min_val": 269, "belief": [269, 289, 298, 299], "1912": [269, 344, 345, 346], "01603": [269, 344, 345, 346], "softplu": [269, 329, 331, 332], "out_features_valu": 270, "cnn_kwarg": [270, 430], "mlp_kwarg": [270, 430], "duel": 270, "cnn": [270, 284, 430, 433, 435, 448], "06581": 270, "512": 270, "greedi": [271, 297, 316, 321, 430, 432, 433, 435], "eps_init": [271, 295, 430, 432, 433, 435, 439], "eps_end": [271, 295, 430], "explorative_polici": [271, 295], "9055": 271, "9277": 271, "6295": 271, "2532": 271, "grad_fn": [271, 310, 323], "addbackward0": 271, "batch_first": [272, 274, 276, 278, 432], "bidirect": [272, 276, 432], "cudnn": [272, 273, 274, 276, 277, 278, 432, 433], "rnn": [272, 273, 274, 276, 277, 278, 309, 342, 356, 432, 433, 435], "device_count": [272, 273, 276, 277, 449], "n_in": [272, 273, 276, 277], "n_out": [272, 273, 276, 277], "h0": [272, 273, 276, 277], "h1": [272, 273, 276, 277], "vectoris": [272, 273, 276, 277], "call_gru": [272, 273], "h_out": [272, 273, 276, 277], "batched_cal": [272, 273, 276, 277], "gate": [272, 273, 276], "r_t": 272, "w_": [272, 273, 276, 277], "ir": [272, 273], "x_t": [272, 276], "b_": [272, 273, 276, 277], "hr": [272, 273, 276], "h_": [272, 273, 276], "z_t": 272, "iz": [272, 273], "hz": [272, 273], "n_t": 272, "odot": [272, 273, 276, 277], "hn": [272, 273, 276], "h_t": [272, 276], "sigmoid": [272, 273, 276, 277], "hadamard": [272, 273, 276, 277], "multilay": [272, 276], "_t": [272, 276, 443, 444], "ge": [272, 276], "bernoulli": [272, 276], "b_ih": [272, 273, 276, 277, 278], "b_hh": [272, 273, 276, 277, 278], "h_0": [272, 276, 277], "pack_padded_sequ": [272, 276], "pack_sequ": [272, 276], "num": [272, 276, 439], "_layer": [272, 276], "_size": [272, 273, 276, 277], "h_n": [272, 276], "packedsequ": [272, 276], "weight_ih_l": [272, 276], "learnabl": [272, 273, 276, 277], "w_ir": 272, "w_iz": 272, "w_in": 272, "num_direct": [272, 276], "weight_hh_l": [272, 276], "w_hr": 272, "w_hz": 272, "w_hn": 272, "bias_ih_l": [272, 276], "b_ir": 272, "b_iz": 272, "b_in": 272, "bias_hh_l": [272, 276], "b_hr": 272, "b_hz": 272, "b_hn": 272, "mathcal": [272, 273, 276, 277], "sqrt": [272, 273, 276, 277, 295], "frac": [272, 273, 276, 277, 431], "seq_len": [272, 276], "subtli": 272, "matrix": [272, 276, 287, 288], "hx": [272, 273, 276, 277], "lstmcell": [273, 278, 433], "gru_cel": 273, "weight_ih": [273, 277], "weight_hh": [273, 277], "bias_ih": [273, 277], "bias_hh": [273, 277], "rocm": [273, 277], "embedd": [274, 278], "grucel": [274, 322], "python_bas": [274, 278], "custom_kei": [274, 278], "hasn": [274, 278], "set_recurrent_mod": [274, 278, 432], "recurrent_mod": [274, 278, 309], "rs": [274, 429], "gru_module_train": 274, "policy_train": [274, 278], "traj_td": [274, 278], "make_cudnn_bas": [274, 278], "make_python_bas": [274, 278, 433], "supplementari": [274, 278, 431, 449], "That": [274, 278, 431, 442], "dealt": [274, 278], "poorli": [274, 278], "meth": [274, 278, 351, 444], "data_collector": [274, 278, 430], "policy_infer": [274, 278], "td_inf": [274, 278], "upscal": [275, 303, 304], "tanh_loc": [275, 303, 304], "event_dim": [275, 302, 303], "poor": [275, 303, 304], "explos": [275, 303, 304], "proj_siz": 276, "c0": [276, 277], "c1": [276, 277], "call_lstm": [276, 277], "c_out": [276, 277], "i_t": 276, "ii": [276, 277], "hi": [276, 277], "f_t": 276, "hf": [276, 277], "g_t": 276, "ig": [276, 277], "hg": [276, 277], "o_t": 276, "ho": [276, 277], "c_t": 276, "c_": 276, "1402": 276, "1128": 276, "c_0": [276, 277], "proj": 276, "c_n": 276, "w_ii": 276, "w_if": 276, "w_ig": 276, "w_io": 276, "w_hi": 276, "w_hf": 276, "w_hg": 276, "w_ho": 276, "b_ii": 276, "b_if": 276, "b_ig": 276, "b_io": 276, "b_hi": 276, "b_hf": 276, "b_hg": 276, "b_ho": 276, "weight_hr_l": 276, "_revers": 276, "analog": [276, 435], "cn": 276, "lstm_cell": 277, "h_1": 277, "c_1": 277, "cx": 277, "recurrent_state_h": 278, "recurrent_state_c": 278, "triplet": [278, 320, 321], "lstm_modul": 278, "rs_h": 278, "rs_c": 278, "hidden0": [278, 433], "hidden1": [278, 433], "single_bias_last_lay": 279, "layer_class": 279, "layer_kwarg": 279, "perceptron": [279, 435], "noisylinear": [279, 287, 422, 430], "noisylazylinear": [279, 422], "mpcplanner": 280, "tensordict_out": [280, 449], "mppi": 281, "covari": 281, "william": [281, 355], "aldrich": 281, "theodor": 281, "01149": 281, "hansen": 281, "wang": 281, "su": 281, "04955": 281, "valueoper": [281, 311, 312, 313, 333, 334, 335, 336, 337, 342, 349, 350, 353, 354, 355, 356, 358, 359, 416, 424, 429, 431, 436], "tdlambdaestim": [281, 422, 429], "value_net": [281, 338, 340, 355, 368, 369, 370, 371, 431, 433, 435, 436, 439], "adv": 281, "lmbda": [281, 361, 368, 371, 373, 379, 380, 381, 384, 385, 425, 429, 431, 443], "value_network": [281, 337, 338, 340, 341, 343, 349, 356, 368, 369, 370, 371, 425, 429, 431, 433, 436, 439, 442], "temperatur": [281, 334, 341, 349], "neg_inf": [282, 283], "inf": [282, 283], "use_cross_entropi": 282, "api_doc": [282, 283], "tf_agent": [282, 283], "unnorm": [282, 283, 291], "sparse_mask": [282, 283], "cross_entropi": 282, "1203": [282, 283], "0928": [282, 283], "0831": [282, 283], "1972": [282, 283], "grad_method": [283, 291], "reparamgradientstrategi": [283, 291], "passthrough": [283, 291], "relaxedonehot": [283, 291], "sample_non_valid": 283, "zeros_lik": [283, 444], "share_param": [284, 285, 286, 442, 443], "use_td_param": [284, 285, 286], "get_stateful_net": [284, 285, 286, 351, 424, 425], "from_stateful_net": [284, 285, 286, 351, 425], "homogen": [284, 285, 442, 443], "tensordictparam": [284, 285, 323], "_empty_net": [284, 285], "roughli": [284, 285, 448], "agent_network": [284, 285], "modulelist": [284, 285], "2592": 284, "n_agent_input": [285, 286, 442, 443], "n_agent_output": [285, 286, 442, 443], "toech": 285, "centalis": 285, "shown": [285, 424, 433, 441, 442, 443, 446], "agent_dim": 286, "vmap_random": [286, 351, 425], "stateful_net": [286, 351], "Such": [286, 351], "multiagentmlp": [286, 442, 443], "snet": 286, "hasattr": [286, 429], "kaiming_normal_": 286, "std_init": [287, 288], "initialize_paramet": 287, "isol": [287, 351, 433], "1706": [288, 305], "10295v3": 288, "induc": [288, 323], "aid": 288, "1803": [289, 290, 296], "10122": [289, 290], "rnn_hidden": 289, "latent": 290, "ordin": [292, 422], "parametris": [292, 294], "inres": 293, "mu": [293, 295, 431], "impos": [294, 424], "proxim": [294, 353, 431, 443], "atom": 294, "tang": 294, "agraw": 294, "2020": 294, "1901": 294, "10500": 294, "discretis": 294, "num_atom": 294, "num_sampl": 294, "middl": 294, "adam": [294, 303, 429, 430, 431, 432, 433, 436, 439, 442, 443, 444], "lr": [294, 429, 430, 431, 432, 439, 442, 443, 444], "optimis": [294, 442, 443], "minimis": 294, "penalis": 294, "0308": 294, "1586": 294, "4727": 294, "2260": 294, "1120": 294, "histogram": 294, "return_typ": 294, "hist": [294, 446], "158": 294, "478": 294, "228": 294, "112": 294, "bin_edg": 294, "8000": 294, "6000": 294, "4000": 294, "ornstein": [295, 429, 433], "uhlenbeck": [295, 429, 433], "ou": [295, 429], "correl": 295, "noise_t": 295, "noise_": 295, "theta": [295, 431, 444], "sigma_t": 295, "sigma_": 295, "anneal": [295, 430, 435, 442], "ou_prev_nois": 295, "ou_step": 295, "x0": 295, "sigma_min": 295, "n_steps_ann": 295, "is_init_kei": 295, "_ou_prev_nois": 295, "_ou_step": 295, "state_shap": [296, 366], "mixing_embed_dim": [296, 366], "qmix": [296, 442, 443], "mixer": [296, 305, 366], "monoton": 296, "hyper": 296, "11485": 296, "qmixerloss": [296, 305], "qmix_vdn": [296, 305], "vdn": [296, 305], "hidden_dim": [298, 299], "scale_lb": [298, 299], "posterior": [298, 345], "rssm": [298, 299, 345], "1811": [298, 299], "04551": [298, 299], "obs_embed": 298, "rnn_hidden_dim": 299, "dream": 299, "safe_tanh": 303, "tanhtransform": 303, "overflow": [303, 310, 315, 316, 319, 320, 321, 322, 323], "get_mod": [303, 323], "decomposit": 305, "05296": 305, "hide": [306, 431, 442, 443], "satisfi": [306, 424], "vmap_dim": 306, "lam": 306, "sample_in": 306, "sample_in_td": 306, "vm": 306, "translat": [310, 319], "character": [310, 315, 319, 320, 322, 446], "td_modul": [310, 311, 312, 313, 319, 322, 323, 325, 327, 435, 448], "3635": 310, "0340": 310, "1476": 310, "3911": 310, "1664": 310, "5455": 310, "2247": 310, "4583": 310, "2916": 310, "2160": 310, "5337": 310, "5193": 310, "addmmbackward0": 310, "actorvalueoper": [311, 335, 350, 353, 424, 435], "get_policy_oper": [311, 312, 313, 335, 350, 353, 424], "standalon": [311, 312, 313, 433, 435], "tdmodul": [311, 312, 313, 416], "get_critic_oper": 311, "common_oper": [311, 313], "policy_oper": [311, 312, 313], "value_oper": [311, 312, 313], "module_hidden": [311, 313], "td_module_hidden": [311, 313], "module_act": [311, 313], "td_module_act": [311, 312, 313], "module_valu": [311, 312, 313], "td_module_valu": [311, 312, 313], "state_action_valu": [311, 327, 334, 336, 341, 349, 356, 367, 416, 424, 429, 442, 448], "td_clone": [311, 312, 313], "tensordictmodulewrapp": [311, 411, 412, 416], "get_policy_head": [311, 312, 313], "safesequenti": [311, 312, 313, 366], "head": [311, 313, 323, 330, 335, 350, 353, 422], "get_value_head": [311, 312, 313], "get_value_oper": [311, 312, 313, 335, 350, 353], "action_modul": 312, "actorcriticoper": [313, 424, 435], "actorcriticwrapp": [313, 424, 429], "inferec": 314, "set_tensor_kei": 314, "dt_inference_wrapp": 314, "baz": 314, "inference_context": 314, "obs_dim": 314, "tanhdelta": [314, 422, 429, 442], "dtactor": 314, "actor_modul": [314, 448], "dist_class": 314, "dist_kwarg": 314, "distribution_kwarg": [314, 319, 323, 431, 442, 443], "inference_actor": 314, "sequence_length": 314, "mask_context": 314, "out_act": 314, "qvaluemodul": [315, 320, 366, 432, 433, 435, 439], "distributionaldqnnet": 315, "make_log_softmax": 315, "my_action_valu": [316, 321], "chanc": 316, "lmheadmodel": 317, "actor_head": [317, 335, 350, 353], "base_model": 317, "lm_head": 317, "lookahead": 318, "reshape_cat": 318, "actor_bas": 318, "obs_cat": 318, "obs_cat_reshap": 318, "action_orig": 318, "multistepenvwrapp": 318, "alter": [318, 351, 424], "ego": 318, "default_interaction_typ": [319, 323, 435], "interaction_typ": [319, 323], "set_interaction_typ": [319, 323], "compositedistribut": [319, 323, 333, 353, 425, 435], "distribution_map": [319, 323], "name_map": [319, 323], "cache_dist": [319, 323], "n_empirical_estim": [319, 323], "compound": [319, 435], "chose": 321, "functionalmodul": 322, "functionalmodulewithbuff": 322, "td_fmodul": 322, "td_function": 322, "td_state": 322, "params_repeat": 322, "td_vmap": [322, 325], "random_sampl": [322, 323], "suppli": 323, "paliat": 323, "get_median": 323, "get_mean": 323, "sample_key_nam": 323, "_log_prob": 323, "composite_lp_aggreg": 323, "clampbackward0": 323, "anihil": 323, "probabilistictensordictsequenti": [324, 333, 335, 350, 353, 355, 411, 412, 425, 448], "partial_toler": [324, 325, 441], "AND": [324, 325, 336], "tensordictsequ": 325, "safeprobabilisticmodul": [325, 424], "spec1": 325, "net1": 325, "module1": 325, "td_module1": 325, "spec2": 325, "module2": 325, "td_module2": 325, "boundari": [326, 431, 433, 442, 443], "resolut": 326, "9944": 326, "9991": 326, "3020": 326, "2299": 326, "5418": 326, "2989": 326, "6849": 326, "3169": 326, "2690": 326, "9649": 326, "5686": 326, "8602": 326, "0315": 326, "8455": 326, "6027": 326, "4746": 326, "7843": 326, "7782": 326, "2111": 326, "5115": 326, "4687": 326, "5760": 326, "custommodul": 327, "imaginari": 328, "imagin": 328, "transition_model": 328, "get_reward_oper": 328, "get_transition_model_oper": 328, "min_val": [329, 332], "_bia": 329, "surject": 332, "expln": 332, "biased_softplu": [332, 422], "biased_softplus_": 332, "syntax": [332, 429], "add_custom_map": 332, "1602": 333, "01783v2": 333, "actor_network": [333, 334, 335, 336, 337, 339, 341, 342, 349, 350, 352, 353, 354, 355, 356, 358, 359, 425, 429, 431, 436, 442, 443], "critic_network": [333, 335, 350, 353, 355, 431, 443], "entropy_bonu": [333, 335, 350, 353, 431], "favour": [333, 335, 350, 353], "samples_mc_entropi": [333, 335, 350, 352, 353], "entropy_coef": [333, 335, 350, 353, 431, 443], "critic_coef": [333, 335, 350, 353, 431], "loss_critic_typ": [333, 335, 350, 353, 355, 431], "l1": [333, 335, 337, 338, 342, 350, 353, 354, 355, 358, 359, 362, 366, 424, 429], "l2": [333, 335, 337, 338, 339, 340, 342, 345, 346, 350, 353, 354, 355, 358, 359, 362, 366, 429, 442], "smooth_l1": [333, 334, 335, 336, 337, 338, 341, 342, 349, 350, 353, 354, 355, 356, 358, 359, 362, 366, 431], "separate_loss": [333, 335, 336, 337, 341, 342, 349, 350, 353, 354, 355, 356, 358, 359], "advantage_kei": [333, 335, 350, 353, 355, 368, 369, 370, 371], "value_target_kei": [333, 335, 350, 353, 355, 368, 369, 370, 371], "value_target": [333, 335, 350, 353, 355, 368, 369, 370, 371, 431, 443], "ddp": [333, 335, 350, 353, 355], "fsdp": [333, 335, 350, 353, 355], "divid": [333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 347, 349, 350, 352, 353, 354, 355, 356, 358, 359, 409, 429, 442, 443, 444], "clip_valu": [333, 335, 350, 353, 355], "loss_crit": [333, 353, 431, 443], "loss_entropi": [333, 353, 431, 443], "loss_object": [333, 353, 431, 443], "next_reward": [333, 334, 336, 337, 338, 340, 341, 342, 349, 353, 354, 355, 356, 358, 359, 368, 369, 370, 371], "next_don": [333, 334, 336, 337, 338, 340, 341, 342, 349, 353, 354, 355, 356, 358, 359, 368, 369, 370, 371], "next_termin": [333, 334, 336, 337, 338, 340, 341, 342, 349, 353, 354, 355, 356, 358, 359, 368, 369, 370, 371], "loss_obj": 333, "next_observ": [333, 334, 336, 337, 338, 340, 341, 342, 349, 353, 354, 355, 356, 358, 359, 441], "sacloss": [333, 348, 357, 422], "default_kei": [333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 352, 353, 354, 355, 356, 358, 359, 366, 372], "_acceptedkei": [333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 351, 352, 353, 354, 355, 356, 358, 359, 366, 372], "fraction": 333, "make_value_estim": [333, 334, 336, 337, 338, 340, 342, 343, 344, 349, 351, 353, 354, 355, 356, 358, 359, 360, 366, 425, 429, 430, 442, 443, 448], "value_typ": [333, 334, 336, 337, 338, 340, 342, 343, 344, 349, 351, 353, 354, 355, 356, 358, 359, 361, 366, 429], "valueestim": [333, 334, 336, 337, 338, 340, 342, 343, 344, 349, 351, 353, 354, 355, 356, 358, 359, 361, 366, 422, 425, 429, 442, 443], "hyperparam": [333, 334, 336, 337, 338, 340, 342, 343, 344, 349, 351, 353, 354, 355, 356, 358, 359, 366, 429], "enum": [333, 334, 336, 337, 338, 340, 342, 343, 344, 349, 351, 353, 354, 355, 356, 358, 359, 361, 366, 429], "default_value_estim": [333, 334, 336, 337, 338, 340, 342, 343, 344, 349, 351, 353, 354, 355, 356, 358, 359, 366, 429, 448], "default_value_kwarg": [333, 334, 336, 337, 338, 340, 342, 343, 344, 349, 351, 353, 354, 355, 356, 358, 359, 366, 422, 429], "dqn_loss": [333, 334, 336, 337, 338, 340, 342, 343, 344, 349, 351, 353, 354, 355, 356, 358, 359, 360, 366], "td1": [333, 334, 336, 337, 338, 340, 342, 343, 344, 349, 351, 353, 354, 355, 356, 358, 359, 366, 429], "conserv": [334, 340], "04779": [334, 340], "qvalue_network": [334, 336, 341, 342, 349, 354, 356, 358, 359], "unti": [334, 336, 349, 354, 356, 358, 359], "loss_funct": [334, 336, 337, 338, 339, 340, 341, 342, 349, 354, 356, 358, 359, 362, 366, 429, 442], "alpha_init": [334, 336, 342, 352, 354, 356], "min_alpha": [334, 336, 342, 352, 354, 356], "max_alpha": [334, 336, 342, 352, 354, 356], "fixed_alpha": [334, 336, 342, 352, 354, 356], "target_entropi": [334, 336, 342, 352, 354, 356], "prod": [334, 336, 352, 356], "delay_actor": [334, 337, 356, 358, 359], "delay_qvalu": [334, 342, 354, 356, 358, 359], "min_q_weight": 334, "max_q_backup": 334, "backup": 334, "deterministic_backup": 334, "num_random": 334, "with_lagrang": 334, "lagrang": 334, "lagrange_thresh": 334, "valueclass": [334, 336, 337, 342, 354, 356, 358, 359], "qvalu": [334, 336, 341, 342, 349, 354, 356, 358, 359], "loss_actor": [334, 336, 337, 341, 342, 349, 354, 355, 356, 358, 359, 402, 429, 442], "loss_actor_bc": 334, "loss_alpha": [334, 336, 342, 354, 356], "loss_cql": [334, 340], "loss_qvalu": [334, 336, 340, 341, 342, 349, 354, 356, 358, 359], "loss_alpha_prim": 334, "clip_epsilon": [335, 431, 443], "normalize_advantag": [335, 350, 353, 443], "normalize_advantage_exclude_dim": [335, 350, 353], "multiobject": [335, 350, 353], "value_kei": [335, 350, 353, 368, 369, 370, 371, 429], "somemodul": [335, 350, 353], "someactor": [335, 350, 353], "value_head": [335, 350, 353], "somevalu": [335, 350, 353], "loss_modul": [335, 348, 350, 351, 353, 357, 406, 415, 416, 425, 426, 429, 430, 431, 442, 443, 446], "IN": 336, "FOR": 336, "simplic": [336, 430, 431, 437, 445, 446, 448], "openreview": [336, 354], "pczqttstix": 336, "qvalue_loss": [336, 358], "actor_loss": [336, 358], "alpha_loss": 336, "num_qvalue_net": [336, 341, 342, 349, 354, 356, 358, 359], "maybe_init_target_entropi": 336, "fault_toler": 336, "target_entropy_buff": 336, "delay_valu": [337, 338, 340, 343, 355, 356, 366, 430, 432, 433, 439, 442], "loss_valu": [337, 341, 349, 355, 356, 429, 431, 442, 443], "pred_valu": [337, 340, 358, 359, 429], "pred_value_max": [337, 429], "target_valu": [337, 340, 354, 358, 359, 367, 425, 429], "target_value_max": [337, 429], "qvalueactor": [338, 340, 366, 430, 432], "double_dqn": 338, "06461": [338, 348], "mult_one_hot": [338, 341, 342, 366], "loss_val": [338, 340, 425, 429, 431, 432, 433, 436, 437, 439, 442, 443, 446], "01345": 339, "distanc": [340, 350, 362, 367, 368, 443], "dcql_loss": 340, "2110": [341, 349], "06169": [341, 349], "expectil": [341, 349], "tau": [341, 349, 357, 429, 430, 442], "antmaz": [341, 349], "sticht": [341, 349], "onehotcategor": [341, 342, 422], "target_entropy_weight": 342, "skip_done_st": [342, 356], "disctount": 343, "distributionalqvalueactor": [343, 424], "input_tensordict": [343, 429], "actor_model": 344, "value_model": [344, 346], "imagination_horizon": 344, "discount_loss": [344, 346], "lambda_kl": 345, "lambda_reco": 345, "lambda_reward": 345, "reco_loss": 345, "reward_loss": 345, "free_nat": 345, "nat": 345, "delayed_clamp": 345, "global_averag": 345, "value_loss": 346, "fake_data": 346, "1606": 347, "03476": 347, "discriminator_network": 347, "use_grad_penalti": 347, "gp_lambda": 347, "discrimin": 347, "ddpgloss": [348, 357, 416, 422, 429, 436, 442, 448], "td3loss": [348, 357, 422], "value_network_update_interv": 348, "qvalueclass": 349, "loss_value_diff": 349, "diff": 349, "old_polici": 350, "new_polici": 350, "apart": [350, 443], "dtarg": 350, "samples_mc_kl": 350, "analyt": 350, "decrement": 350, "loss_": [351, 402, 425, 429, 436], "equip": [351, 432, 433, 435], "gh": 351, "_forward_value_estimator_kei": 351, "value_estim": [351, 368, 369, 370, 371, 372, 425, 429, 443], "myloss": 351, "action2": 351, "augment": [351, 437, 439, 446], "deterministic_sampling_mod": 351, "convert_to_funct": [351, 429], "expand_dim": 351, "create_target_param": [351, 429], "compare_against": [351, 429], "_param": 351, "resampl": 351, "_target_param": 351, "network_nam": 351, "blend": 351, "add_random_modul": [351, 425], "flavor": [353, 429, 442, 443, 448], "clipppoloss": [353, 422, 431, 443], "klpenppoloss": [353, 422], "06347": 353, "gae": [353, 422, 425, 429, 431, 443], "ppo_loss": 353, "tdlambda": [353, 361, 425, 429], "base_lay": 353, "randn_lik": 353, "samplelogprob": 353, "ay8zfzm0tdd": 354, "sub_sample_len": 354, "subsampl": [354, 397, 426], "action_log_prob_actor": 354, "state_action_value_actor": [354, 358, 359], "connectionist": 355, "1992": 355, "doi": 355, "1007": 355, "bf00992696": 355, "actor_net": [355, 429, 431], "1801": 356, "01290": 356, "applic": [356, 366, 434, 435, 444], "1812": 356, "05905": 356, "redqloss": [357, 422], "math": 357, "theta_t": [357, 444], "theta_": [357, 444], "polyak": 357, "minimalist": 358, "06860": 358, "policy_nois": [358, 359], "noise_clip": [358, 359], "td3_bc": 358, "bc_loss": 358, "lmbd": 358, "td0": [360, 429, 442], "strict_shap": 362, "view_a": 362, "qmixer": [366, 422], "local_valu": 366, "visibl": [366, 443], "acceptedkei": 366, "global_valu": 366, "penultim": 366, "local_value_network": 366, "mixer_network": 366, "value_modul": [366, 431, 448], "qnet": [366, 429], "next_val_kei": 367, "pred_next_v": 367, "mse": 367, "q_valu": 367, "n_steps_to_next": 367, "value_next_st": 367, "1506": [368, 373, 381], "02438": [368, 373, 381], "exponenti": [368, 369, 370, 371, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 404], "average_ga": [368, 431], "skip_exist": [368, 369, 370, 371], "get_default_devic": [368, 369, 370, 371, 372], "gradient_mod": 368, "value_error": [368, 369, 370, 371, 372], "target_param": [368, 369, 370, 371, 372, 429, 443], "98": [368, 369, 370, 371], "94": [368, 371], "unpack": [368, 369, 370, 371], "tensor_kei": [368, 369, 370, 371, 372], "next_valu": [368, 369, 370, 371, 372], "aka": [369, 430, 442], "average_reward": [369, 370, 371], "tdestim": [369, 370, 372], "infti": 370, "valuefunctionbas": 372, "old_stat": [373, 375, 377, 379, 381, 382, 384], "new_stat": [373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385], "rolling_gamma": [377, 378, 379, 380, 382, 383, 384, 385], "g1": [377, 378, 379, 380, 382, 383, 384, 385], "g2": [377, 378, 379, 380, 382, 383, 384, 385], "g3": [377, 378, 379, 380, 382, 383, 384, 385], "g4": [377, 378, 379, 380, 382, 383, 384, 385], "v3": [377, 378, 379, 380, 382, 383, 384, 385], "preproc": [386, 433, 442], "as_non_tensor": [386, 442], "render_method": 386, "pass_tensordict": 386, "syntact": 386, "sugar": 386, "out_file_bas": 387, "skip_reset": 387, "center_crop": 388, "make_grid": 388, "fp": [388, 393, 395], "log_video": 388, "csv": [388, 390, 392, 430, 438, 439], "wandb": [388, 392, 395, 438, 448], "tensorboard": [388, 392, 394, 438, 448], "log_dir": [388, 389, 390, 392, 394, 395, 430, 439], "cheetah_video": 388, "run_video": 388, "openxexperiencereplai": 388, "sec": [388, 444], "video_fp": [388, 390, 393], "cmu_stretch": 388, "run_video_0": 388, "cur_dir": 390, "csv_log": 390, "add_video": 390, "video_": 390, "experiment_nam": [391, 392], "uuid": [391, 430, 449], "logger_typ": 392, "logger_nam": 392, "mlflow": [392, 393], "wandb_kwarg": 392, "mlflow_kwarg": 392, "tracking_uri": 393, "uri": 393, "datastor": 393, "tb_log": 394, "tensoarboard": 394, "td_log": 394, "save_dir": 395, "resum": 395, "uncategor": 395, "my_funct": 396, "sub_traj_len": 397, "min_sub_traj_len": 397, "register_op": [397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 426, 430], "process_optim_batch": [397, 403, 404, 426], "td_out": [397, 405], "_process_optim_batch_hook": [397, 426], "batch_subsampl": 397, "clear_cuda": 398, "pre_optim_step": [398, 426], "log_pbar": [399, 400, 401, 404, 426, 430], "count_fram": 399, "pre_steps_log": [399, 400, 426], "count_frames_log": 399, "lognam": 400, "r_train": 400, "log_reward": [400, 430], "record_interv": [401, 429, 430], "record_fram": [401, 409, 429, 430], "policy_explor": [401, 416, 429, 430, 433, 435, 439], "log_kei": [401, 430], "underestim": 401, "r_evalu": [401, 429], "loss_compon": 402, "appl": 402, "optimizer_hook": 402, "flatten_tensordict": [403, 430], "max_dim": 403, "rb_trainer": 403, "batch_process": [403, 404, 405, 426], "post_loss": [403, 426], "999": [404, 430], "jitter": 404, "finfo": 404, "default_dtyp": 404, "reward_norm": 404, "update_reward_stat": 404, "normalize_reward": 404, "make_train": [405, 422], "_process_batch_hook": [405, 426], "select_kei": [405, 426], "versatil": [406, 434], "optim_steps_per_batch": [406, 426, 430], "clip_grad_norm": 406, "clip_norm": 406, "progress_bar": 406, "save_trainer_interv": 406, "log_interv": [406, 430], "save_trainer_fil": [406, 426], "load_from_fil": [406, 426], "update_weights_interv": [408, 430], "post_step": [408, 426, 430], "cfg": [409, 410, 411, 412, 413, 414, 415, 416, 417, 420], "dictconfig": [409, 410, 411, 412, 414, 415, 416, 417, 420], "unknowingli": 409, "annealing_fram": [409, 429], "init_env_step": [409, 410, 429], "proof_environ": [410, 429], "sta": 410, "ot": 410, "actor_model_explor": [411, 412, 429], "make_env_kwarg": [411, 412], "targetnetupdat": [413, 415, 416], "replayargsconfig": 414, "target_net_updat": [416, 429, 430], "constitu": 416, "egreedywrapp": 416, "env_proof": 416, "obs_spec": 416, "net_valu": 416, "dir": [416, 426, 430], "gettempdir": 416, "argpars": [417, 420], "namespac": [417, 420], "parser": [417, 420], "transformed_env_constructor": [417, 422], "num_env_per_collector": [418, 419], "video_tag": 420, "norm_obs_onli": 420, "use_env_cr": 420, "custom_env_mak": 420, "custom_env": 420, "return_transformed_env": 420, "action_dim_gsd": 420, "state_dim_gsd": 420, "obs_norm_state_dict": 420, "distributedsyncdatacollector": 422, "submitit_delayed_launch": 422, "remotetensordictreplaybuff": 422, "rational": 422, "footnot": 422, "binarydiscretetensorspec": 422, "boundedtensorspec": 422, "discretetensorspec": 422, "lazystackedcompositespec": 422, "lazystackedtensorspec": 422, "multidiscretetensorspec": 422, "multionehotdiscretetensorspec": 422, "nontensorspec": 422, "onehotdiscretetensorspec": 422, "unboundedcontinuoustensorspec": 422, "unboundeddiscretetensorspec": 422, "prompttensordicttoken": 422, "rolloutfrommodel": 422, "tokenizeddatasetload": 422, "create_infinite_iter": 422, "constantklcontrol": 422, "adaptiveklcontrol": 422, "llmdata": 422, "llminput": 422, "llmoutput": 422, "densifyreward": 422, "h5combin": 422, "h5split": 422, "nested2t": 422, "check_no_exclusive_kei": 422, "consolidate_spec": 422, "contains_lazy_spec": 422, "envmetadata": 422, "chessenv": 422, "tictactoeenv": 422, "llmhashingenv": 422, "check_marl_group": 422, "get_available_librari": 422, "terminated_or_trunc": 422, "dreamerdecod": 422, "braxwrapp": 422, "dmcontrolwrapp": 422, "jumanjiwrapp": 422, "meltingpotenv": 422, "meltingpotwrapp": 422, "mogymenv": 422, "multithreadedenvwrapp": 422, "openmlenv": 422, "openspielwrapp": 422, "openspielenv": 422, "pettingzooenv": [422, 442], "robohiveenv": 422, "smacv2env": 422, "smacv2wrapp": 422, "unitymlagentsenv": 422, "unitymlagentswrapp": 422, "vmaswrapp": 422, "register_gym_spec_convers": 422, "qvaluehook": 422, "distributionalqvaluehook": 422, "reset_nois": 422, "cemplann": 422, "mpcplannerbas": 422, "mppiplann": 422, "independentnorm": 422, "truncatednorm": 422, "maskedonehotcategor": 422, "onehotordin": 422, "inv_softplu": 422, "vmapmodul": 422, "distributionaldqnloss": [422, 430], "discretesacloss": 422, "crossqloss": 422, "iqlloss": 422, "discreteiqlloss": 422, "cqlloss": 422, "discretecqlloss": 422, "gailloss": 422, "dtloss": 422, "onlinedtloss": 422, "td3bcloss": 422, "ppoloss": 422, "a2closs": 422, "reinforceloss": 422, "dreameractorloss": 422, "dreamermodelloss": 422, "dreamervalueloss": 422, "td0estim": [422, 429], "td1estim": [422, 429], "td0_return_estim": 422, "td0_advantage_estim": 422, "td1_return_estim": 422, "vec_td1_return_estim": 422, "td1_advantage_estim": 422, "vec_td1_advantage_estim": 422, "td_lambda_return_estim": 422, "vec_td_lambda_return_estim": 422, "td_lambda_advantage_estim": 422, "vec_td_lambda_advantage_estim": 422, "generalized_advantage_estim": 422, "vec_generalized_advantage_estim": 422, "hardupd": [422, 429, 436], "softupd": [422, 429, 430, 432, 433, 436, 439, 442], "distance_loss": [422, 429], "group_optim": 422, "hold_out_net": 422, "hold_out_param": [422, 429], "batchsubsampl": [422, 426], "clearcudacach": 422, "countframeslog": 422, "logscalar": [422, 426, 430], "optimizerhook": [422, 430], "logvalidationreward": [422, 426, 429, 430], "replaybuffertrain": [422, 426, 430], "rewardnorm": 422, "selectkei": [422, 426], "trainerhookbas": [422, 426, 430], "updateweight": [422, 426, 430], "make_collector_offpolici": 422, "make_collector_onpolici": 422, "make_dqn_loss": 422, "make_replay_buff": [422, 429], "make_target_updat": 422, "parallel_env_constructor": [422, 429], "sync_async_collector": 422, "sync_sync_collector": 422, "correct_for_frame_skip": 422, "get_stats_random_rollout": 422, "mlflowlogg": 422, "get_logg": 422, "generate_exp_nam": 422, "journei": 423, "textbook": 423, "highlight": [423, 442], "ever": [423, 443], "bump": 423, "benefit": [423, 434, 442, 443, 446], "pr": 423, "ground": [424, 429, 444], "recycl": [424, 446], "noisier": 424, "Their": [424, 442, 443], "sd": [424, 449], "prob_modul": 424, "uncertainti": 424, "soften": 424, "backbon": [424, 432, 435, 441, 448], "make_actor": 424, "make_valu": 424, "shared_param": 424, "make_common": 424, "reusabl": [425, 429, 446], "swappabl": [425, 429], "characterist": [425, 429, 444], "trainabl": [425, 429, 436, 445], "smth": [425, 429], "metric": [425, 429], "plenti": [425, 433], "amort": [425, 430, 431], "told": [425, 431], "pseudo": [425, 437, 444], "buri": 425, "str_valu": 425, "nutshel": [425, 429], "barto": [425, 442, 443], "chapter": [425, 438], "value_net_loss": 425, "pow": [425, 429], "room": 425, "signifi": [425, 442, 443], "underperform": 425, "thin": 425, "intric": [425, 435], "set_composite_lp_aggreg": [425, 443], "action_td": 425, "action0": 425, "f0": 425, "action1": 425, "f1": 425, "f2": 425, "legitim": [425, 449], "f3": 425, "action0_log_prob": 425, "action1_log_prob": 425, "inferior": 425, "multivari": 425, "dirichlet": 425, "prev_log_prob": 425, "new_log_prob": 425, "log_weight": 425, "appreci": [425, 434], "multihead": 425, "believ": 426, "scheme": [426, 449], "substanti": 426, "_pre_steps_log_hook": 426, "_pre_optim_hook": 426, "sub_batch": 426, "_post_loss_hook": 426, "_post_optim_hook": 426, "post_optim": [426, 430], "_post_optim_log": 426, "post_optim_log": 426, "_post_steps_hook": 426, "_post_steps_log_hook": 426, "post_steps_log": 426, "logginghook": 426, "logging_hook": 426, "save_dict": 426, "some_valu": 426, "torchsnapshot": 426, "ckpt_backend": 426, "filepath": 426, "save_train": 426, "000": [428, 447], "galleri": [428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449], "mem": [428, 447], "mb": [428, 447], "coding_ddpg": [428, 429, 447], "coding_dqn": [428, 430, 447], "coding_ppo": [428, 431, 447], "dqn_with_rnn": [428, 432, 447], "multi_task": [428, 441, 447], "multiagent_competitive_ddpg": [428, 442, 447], "multiagent_ppo": [428, 443, 447], "pretrained_model": [428, 445, 447], "rb_tutori": [428, 446, 447], "torchrl_demo": [428, 447, 448], "torchrl_env": [428, 447, 449], "author": [429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 442, 443, 444, 446, 449], "vincent": [429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 444, 446, 449], "moen": [429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 444, 446, 449], "assembl": 429, "maxim": [429, 436, 444], "transpar": [429, 432], "bash": 429, "is_fork": [429, 430, 431, 432, 442, 443, 445], "get_start_method": [429, 430, 431, 432, 442, 443, 445], "collector_devic": 429, "loss_dict": 429, "modal": 429, "oblivi": [429, 431, 446], "elementari": 429, "didact": [429, 433], "dilut": 429, "pessimist": [429, 430, 431], "target_actor_network_param": 429, "actor_in_kei": 429, "actor_crit": 429, "compromis": 429, "hp": 429, "_value_estim": 429, "elif": [429, 430], "unknown": 429, "_loss_actor": 429, "td_copi": 429, "actor_network_param": [429, 442], "value_network_param": [429, 442], "_loss_valu": 429, "pred_val": 429, "target_value_network_param": 429, "glue": 429, "_forward": 429, "remaind": 429, "env_librari": 429, "env_task": 429, "env_arg": [429, 430], "torchr": 429, "rescal": 429, "presum": 429, "make_transformed_env": 429, "reward_sc": 429, "marker": 429, "env_per_collector": 429, "transform_state_dict": 429, "make_t_env": 429, "cheat": 429, "10m": 429, "cautiou": 429, "magnitud": [429, 442], "thousand": [429, 432], "get_env_stat": 429, "proof_env": 429, "5000": [429, 433, 439], "recal": [429, 431, 446], "ddpgmlpactor": 429, "ddpgmlpqnet": 429, "materi": 429, "ornsteinuhlenbeckprocessmodul": [429, 435], "make_ddpg_actor": 429, "q_net": 429, "tight": 429, "decoupl": [429, 436, 448], "10_000": [429, 431], "traj_len": [429, 432], "make_record": 429, "recorder_obj": 429, "pick": [429, 430, 435], "buffer_s": [429, 430], "random_crop_len": 429, "prb": 429, "buffer_scratch_dir": [429, 430, 432, 437, 445], "25": 429, "dataflow": 429, "ceil_div": 429, "utd": [429, 432], "update_to_data": 429, "realiz": 429, "_must_": 429, "001": [429, 444], "outdat": 429, "trick": [429, 430], "despit": 429, "optimizer_actor": 429, "weight_decai": [429, 430], "optimizer_valu": 429, "total_collection_step": 429, "rewards_ev": 429, "collected_fram": 429, "pbar": [429, 431, 432, 442, 443, 444], "numel": [429, 431, 432, 433, 439, 442, 445, 446], "current_fram": [429, 442], "sampled_tensordict": 429, "gn1": 429, "clip_grad_norm_": [429, 431, 442, 443, 444], "gn2": 429, "gn": [429, 444], "td_record": 429, "rn": 429, "set_descript": [429, 431, 432, 442, 443, 444], "2f": 429, "mention": [429, 432, 446, 449], "matplotlib": [429, 431, 432, 433, 442, 443, 444, 446, 449], "pyplot": [429, 431, 432, 433, 442, 443, 444, 446, 449], "plt": [429, 431, 432, 433, 442, 443, 444, 446, 449], "zip": [429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449], "legend": [429, 442], "xlabel": [429, 432, 443, 444], "ylabel": [429, 443], "tight_layout": 429, "takeawai": [429, 430, 433], "distpatch": 429, "jupyt": [429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449], "ipynb": [429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 448, 449], "sphinx": [429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449], "road": 430, "aspect": [430, 436], "highest": [430, 435], "prerequisit": [430, 432], "lookup": 430, "cart": 430, "pole": 430, "un": 430, "actuat": 430, "frictionless": 430, "duelingcnndqnet": 430, "egreedymodul": [430, 432, 433, 435, 439], "is_notebook": 430, "shell": 430, "get_ipython": 430, "__class__": 430, "zmqinteractiveshel": 430, "qtconsol": 430, "terminalinteractiveshel": 430, "ipython": [430, 443, 444], "nameerror": [430, 442], "umbrella": 430, "misplac": 430, "misus": 430, "orchestr": [430, 436, 438], "five": 430, "64x64": 430, "motion": [430, 444], "obs_norm_sd": 430, "mp_context": 430, "simpler": [430, 434], "get_norm_stat": 430, "test_env": 430, "mathbb": 430, "rightarrow": 430, "make_model": 430, "dummy_env": 430, "init_bia": 430, "exploration_modul": [430, 432, 433, 435, 439], "eps_greedy_v": 430, "eps_greedy_val_env": 430, "actor_explor": 430, "get_replay_buff": 430, "n_optim": [430, 436, 437], "parametriz": 430, "get_collector": 430, "bunch": 430, "ubiquit": [430, 434], "get_loss_modul": 430, "target_updat": [430, 442], "995": 430, "hopefulli": 430, "variat": 430, "2e": [430, 444], "wd": 430, "upd": 430, "harder": [430, 448], "5_000": 430, "500000": 430, "100000": 430, "005": [430, 442], "mandatori": [430, 431, 443, 444], "fairer": 430, "budget": 430, "dqn_exp_": 430, "uuid1": [430, 449], "cumbersom": 430, "buffer_hook": 430, "weight_updat": 430, "aliv": 430, "total_reward": 430, "print_csv_files_in_fold": 430, "folder_path": 430, "csv_file": 430, "output_str": 430, "dirpath": 430, "endswith": 430, "strip": 430, "qvaluenetwork": 430, "accuraci": 430, "fanci": [430, 437], "demonstr": [431, 433, 437, 442, 443, 444, 446, 449], "talk": 431, "six": 431, "sophist": [431, 443], "invent": 431, "theta_k": 431, "pi_": 431, "exceed": 431, "discourag": [431, 444], "indispens": 431, "analyz": 431, "lingua": 431, "franca": 431, "defaultdict": [431, 444], "3e": [431, 432, 442, 443], "max_grad_norm": [431, 442, 443], "sub_batch_s": 431, "num_epoch": [431, 443], "entropy_ep": [431, 443], "charact": [431, 433], "inverteddoublependulum": 431, "transmit": 431, "stai": 431, "confid": [431, 442, 443], "ran": 431, "f_": 431, "mu_": 431, "difficulti": [431, 449], "d_ob": 431, "d_action": 431, "policy_modul": [431, 442, 443], "briefli": [431, 442, 443], "refil": [431, 443], "easiest": [431, 436, 442, 443], "mathemat": [431, 442, 443], "tradeoff": [431, 443], "advantage_modul": 431, "lr_schedul": [431, 444], "cosineannealinglr": [431, 444], "eval_str": 431, "tensordict_data": [431, 443], "data_view": [431, 443], "subdata": [431, 442, 443], "cum_reward_str": 431, "4f": [431, 432, 444], "stepcount_str": 431, "param_group": [431, 442], "lr_str": 431, "eval_rollout": 431, "nice": [431, 434, 437], "cap": [431, 446], "figsiz": [431, 444], "subplot": [431, 442, 444, 449], "titl": [431, 432, 433, 443, 444], "84x84": [432, 433], "accessori": 432, "stamp": 432, "n_cell": 432, "customiz": 432, "wouldn": 432, "qval": 432, "stoch_polici": 432, "opportun": [432, 442], "uniniti": 432, "again": [432, 433, 434, 435, 437, 443, 445, 446, 449], "strongli": 432, "million": 432, "sake": [432, 445, 446], "20_000": [432, 444], "longest": 432, "npai": 432, "action_spread": 432, "rom": 433, "licens": 433, "strong": 433, "impress": 433, "arduino": 433, "raspberri": 433, "pi": [433, 442, 443, 444], "alon": 433, "examplifi": 433, "ship": 433, "stick": 433, "nearest": 433, "value_mlp": [433, 439], "100_000": [433, 439], "init_rand_step": [433, 439], "total_count": [433, 439], "total_episod": [433, 439], "t0": [433, 439], "screen": [433, 442], "color": [433, 442], "unblock": 433, "policy_transform": 433, "fake_td": 433, "exported_polici": 433, "div": 433, "graph_modul": 433, "print_read": 433, "group0": 433, "group0_agent0_ob": 433, "collid": [433, 443], "group0_agent0": 433, "agent0_ob": 433, "comma": 433, "digress": 433, "exported_stochastic_polici": 433, "trace": 433, "batchsizetransform": 433, "recurrent_polici": 433, "fake_ob": 433, "fake_hidden0": 433, "fake_hidden1": 433, "fake_is_init": 433, "exported_recurrent_polici": 433, "platform": [433, 448], "aoti": 433, "_inductor": 433, "aoti_compile_and_packag": 433, "aoti_load_packag": 433, "pt2": 433, "pkg_path": 433, "package_path": 433, "compiled_modul": 433, "onnxruntim": 433, "showcas": [433, 444], "web": 433, "explain": [433, 445], "tensorrt": 433, "android": 433, "ale_pi": 433, "aleinterfac": 433, "loadrom": 433, "reset_gam": 433, "screen_ob": 433, "getscreenrgb": 433, "tick_param": 433, "bottom": 433, "labelleft": 433, "labelbottom": 433, "imshow": [433, 449], "dynamo_export": 433, "onnx_policy_export": 433, "onnx_file_path": 433, "ort_sess": 433, "inferencesess": 433, "cpuexecutionprovid": 433, "onnxruntime_input": 433, "get_input": 433, "onnx_polici": 433, "lightweight": [433, 438], "onnxruntime_output": 433, "topic": [434, 435, 436], "straight": 434, "backtrack": 434, "reset_with_act": 434, "stepped_data": 434, "spatial": 434, "useless": 434, "policyless": 434, "examin": [434, 442], "tackl": 435, "delv": 435, "extractor": 435, "additivegaussianmodul": [435, 442], "exploration_polici": [435, 442], "greedili": 435, "2d": [435, 442, 443], "innov": [435, 436], "rollout_explor": 435, "sole": 436, "supervis": [436, 437, 446, 449], "n_collect": 436, "get_next_batch": 436, "concis": 436, "ddpg_loss": 436, "total_loss": 436, "prove": 436, "reliev": 436, "concern": 436, "accustom": 437, "surprisingli": 437, "fundament": 437, "art": [437, 442, 443], "countless": 437, "yourself": [437, 442, 443], "everywher": 438, "log_scalar": 438, "my_scalar": 438, "saw": [438, 444, 446], "excess": 438, "lesson": 439, "voluntarili": 439, "torchrl_logg": 439, "training_loop": 439, "video_record": 439, "arbitrarili": 439, "t1": 439, "conclud": [439, 445], "tutorials_python": 440, "tutorials_jupyt": 440, "env1_obs_kei": 441, "observation_stand": 441, "env2_obs_kei": 441, "observation_walk": 441, "tdreset1": 441, "tdreset2": 441, "lazy_stack": 441, "policy_common": 441, "policy_stand": 441, "policy_walk": 441, "But": 441, "env1_mak": 441, "env2_mak": 441, "_single_task": 441, "td_rollout": 441, "matteo": [442, 443], "bettini": [442, 443], "benchmarl": [442, 443], "simple_tag": 442, "maddpg": [442, 443], "multiagentparticleenviron": 442, "mpe": 442, "centralis": [442, 443], "tie": [442, 443], "iddpg": [442, 443], "richard": 442, "andrew": 442, "mit": 442, "press": 442, "2018": 442, "mathbf": [442, 443], "decentralis": [442, 443], "literatur": [442, 443], "overcom": [442, 443], "stationari": [442, 443], "establish": 442, "gui": [442, 443], "is_sphinx": 442, "__sphinx_build__": 442, "n_iter": [442, 443, 444], "evad": 442, "iteration_when_stop_training_evad": 442, "memory_s": 442, "n_optimiser_step": 442, "train_batch_s": 442, "polyak_tau": 442, "chaser": 442, "red": 442, "circl": [442, 443], "green": 442, "touch": [442, 444], "penal": [442, 443], "obstacl": 442, "drag": [442, 443], "elast": [442, 443], "collis": [442, 443], "imped": 442, "n_chaser": 442, "n_evad": 442, "n_obstacl": 442, "use_vma": 442, "simple_tag_v3": 442, "num_good": 442, "num_adversari": 442, "num_obstacl": 442, "max_cycl": 442, "num_vmas_env": [442, 443], "num_good_ag": 442, "num_landmark": 442, "four": [442, 443, 444], "n_agents_in_that_group": 442, "stress": [442, 443], "paramount": [442, 443], "n_rollout_step": [442, 443], "evolut": [442, 443], "group_nam": 442, "n_agents_in_group": 442, "minor": 442, "agents_exploration_polici": 442, "utilis": [442, 443], "n_obs_per_ag": [442, 443], "n_actions_per_ag": [442, 443], "share_parameters_polici": [442, 443], "policy_net": [442, 443], "_agent": 442, "grant": [442, 443], "converg": [442, 443], "share_parameters_crit": [442, 443], "obs_act": 442, "cat_modul": 442, "critic_modul": 442, "fantast": [442, 443], "reset_td": 442, "interfer": 442, "subject": [442, 444], "flatten_kei": 442, "process_batch": 442, "group_shap": 442, "get_item_shap": [442, 443], "nested_done_kei": 442, "nested_terminated_kei": 442, "desc": [442, 443], "episode_reward_mean_": 442, "episode_reward_mean_map": 442, "train_group_map": 442, "group_batch": 442, "_group": 442, "loss_nam": 442, "episode_reward_mean": [442, 443], "fig": [442, 446], "set_ylabel": 442, "axvlin": 442, "orang": 442, "set_xlabel": 442, "video_logg": 442, "vmas_log": 442, "env_with_rend": 442, "vmas_rend": 442, "print_log_dir": 442, "profici": [442, 443], "lidar": 443, "sensor": 443, "mappo": 443, "ippo": 443, "analys": 443, "visualis": 443, "vmas_devic": 443, "6_000": 443, "minibatch_s": 443, "generalis": 443, "simd": 443, "warp": 443, "todai": 443, "surround": 443, "dot": [443, 444], "scenario_nam": 443, "critic_net": 443, "minibatch": 443, "episode_reward_mean_list": 443, "critic_network_param": 443, "target_critic_network_param": 443, "xvfb": 443, "pyvirtualdisplai": 443, "1400": 443, "900": 443, "pil": 443, "rendering_callback": 443, "fromarrai": 443, "gif": 443, "save_al": 443, "append_imag": 443, "freeli": 444, "broader": 444, "wider": 444, "acquaint": 444, "avenu": 444, "_apply_to_composit": 444, "default_x": 444, "default_i": 444, "upward": 444, "angular": 444, "sin": 444, "rad": 444, "angl": 444, "deleg": 444, "new_th": 444, "new_thdot": 444, "g_forc": 444, "angle_norm": 444, "albeit": 444, "high_th": 444, "high_thdot": 444, "low_th": 444, "low_thdot": 444, "trivial": 444, "irrelev": 444, "_make_spec": 444, "td_param": 444, "render_fp": 444, "random_": 444, "_make_step": 444, "staticmethod": 444, "skeleton": 444, "unitari": 444, "sine": 444, "cosin": 444, "sintransform": 444, "costransform": 444, "t_sin": 444, "t_co": 444, "cat_transform": 444, "simple_rollout": 444, "unexplor": 444, "init_td": 444, "traj_return": 444, "last_reward": 444, "is_ipython": 444, "inlin": 444, "get_backend": 444, "ion": 444, "gcf": 444, "clear_output": 444, "r3mtransform": 445, "embodi": 445, "env_transform": [445, 449], "wiser": 445, "batteri": 446, "gc": 446, "buffer_list": 446, "lowest": 446, "medium": 446, "buffer_lazytensor": 446, "tempdir": 446, "buffer_lazymemmap": 446, "fullest": 446, "mydata": 446, "buffer_lazi": 446, "background": 446, "question": [446, 448], "_i": 446, "artifici": 446, "hamper": 446, "she": 446, "pars": 446, "proport": 446, "reappear": 446, "unfold": 446, "problemat": 446, "4th": 446, "prioritizedslicesampl": 446, "tensordictmaxvaluewrit": 446, "demo": 448, "icml": 448, "vmoen": 448, "fb": 448, "invest": 448, "media": 448, "predominantli": 448, "data2": 448, "sub_key1": 448, "scturctur": 448, "data_stack": 448, "data_sampl": 448, "_sampler": 448, "_sum_tre": 448, "modulenotfounderror": 448, "noopresetenv": [448, 449], "backbone_modul": 448, "params_expand": 448, "exec_sequ": 448, "tensordict_exp": 448, "base_modul": 448, "tensordicts_prealloc": 448, "tensordicts_stack": 448, "tensordict_rollout": [448, 449], "automatical": 448, "60": 448, "particularili": 448, "concatmodul": 448, "loss_td": 448, "contributor": 448, "curiou": 448, "nascent": 448, "unsupervis": 449, "unifi": 449, "_build_env": 449, "deserv": 449, "__episode__": 449, "__trajectory__": 449, "void": 449, "reproduct": 449, "tensordict_tprim": 449, "wrapper1": 449, "wrapper2": 449, "obviou": 449, "truth": 449, "env_transformed_bi": 449, "stanc": 449, "transformeddistribut": 449, "base_dist": 449, "concat": 449, "mofidi": 449, "transformedenviron": 449, "moderet": 449, "computation": 449, "incom": 449, "amongst": 449, "has_cuda": 449, "convention": 449, "markovian": 449, "bar_": 449, "get_someth": 449, "aargh": 449, "is_clos": 449, "foo_list": 449, "121": 449, "evolv": 449, "steadi": 449, "approx": 449, "absor": 449, "_extra_st": 449}, "objects": {"torchrl": [[12, 0, 1, "", "auto_unwrap_transformed_env"], [252, 0, 1, "", "implement_for"], [396, 0, 1, "", "set_auto_unwrap_transformed_env"]], "torchrl.collectors": [[13, 0, 1, "", "DataCollectorBase"], [14, 0, 1, "", "LocalWeightUpdaterBase"], [15, 0, 1, "", "MultiProcessedRemoteWeightUpdate"], [16, 0, 1, "", "MultiSyncDataCollector"], [17, 0, 1, "", "MultiaSyncDataCollector"], [18, 0, 1, "", "RayRemoteWeightUpdater"], [19, 0, 1, "", "RemoteWeightUpdaterBase"], [20, 0, 1, "", "SyncDataCollector"], [21, 0, 1, "", "VanillaLocalWeightUpdater"], [22, 0, 1, "", "aSyncDataCollector"]], "torchrl.collectors.DataCollectorBase": [[13, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.LocalWeightUpdaterBase": [[14, 1, 1, "", "register_collector"], [14, 1, 1, "", "update_weights"]], "torchrl.collectors.MultiProcessedRemoteWeightUpdate": [[15, 1, 1, "", "_get_server_weights"], [15, 1, 1, "", "_maybe_map_weights"], [15, 1, 1, "", "_sync_weights_with_worker"], [15, 1, 1, "", "all_worker_ids"], [15, 1, 1, "", "register_collector"]], "torchrl.collectors.MultiSyncDataCollector": [[16, 1, 1, "", "load_state_dict"], [16, 1, 1, "", "reset"], [16, 1, 1, "", "set_seed"], [16, 1, 1, "", "shutdown"], [16, 1, 1, "", "state_dict"], [16, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.MultiaSyncDataCollector": [[17, 1, 1, "", "load_state_dict"], [17, 1, 1, "", "reset"], [17, 1, 1, "", "set_seed"], [17, 1, 1, "", "shutdown"], [17, 1, 1, "", "state_dict"], [17, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.RayRemoteWeightUpdater": [[18, 1, 1, "", "_get_server_weights"], [18, 1, 1, "", "_maybe_map_weights"], [18, 1, 1, "", "_skip_update"], [18, 1, 1, "", "_sync_weights_with_worker"], [18, 1, 1, "", "all_worker_ids"], [18, 1, 1, "", "register_collector"]], "torchrl.collectors.RemoteWeightUpdaterBase": [[19, 1, 1, "id0", "register_collector"], [19, 1, 1, "", "update_weights"]], "torchrl.collectors.SyncDataCollector": [[20, 1, 1, "", "iterator"], [20, 1, 1, "", "load_state_dict"], [20, 1, 1, "", "reset"], [20, 1, 1, "", "rollout"], [20, 1, 1, "", "set_seed"], [20, 1, 1, "", "shutdown"], [20, 1, 1, "", "state_dict"], [20, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.VanillaLocalWeightUpdater": [[21, 1, 1, "", "_get_local_weights"], [21, 1, 1, "", "_get_server_weights"], [21, 1, 1, "", "_map_weights"], [21, 1, 1, "", "_maybe_map_weights"], [21, 1, 1, "", "_update_local_weights"], [21, 1, 1, "", "register_collector"]], "torchrl.collectors.aSyncDataCollector": [[22, 1, 1, "", "load_state_dict"], [22, 1, 1, "", "reset"], [22, 1, 1, "", "set_seed"], [22, 1, 1, "", "shutdown"], [22, 1, 1, "", "state_dict"], [22, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed": [[23, 0, 1, "", "DistributedDataCollector"], [24, 0, 1, "", "DistributedSyncDataCollector"], [25, 0, 1, "", "RPCDataCollector"], [26, 0, 1, "", "RayCollector"], [27, 0, 1, "", "submitit_delayed_launcher"]], "torchrl.collectors.distributed.DistributedDataCollector": [[23, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.DistributedSyncDataCollector": [[24, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RPCDataCollector": [[25, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RayCollector": [[26, 1, 1, "", "add_collectors"], [26, 1, 1, "", "async_shutdown"], [26, 1, 1, "", "load_state_dict"], [26, 1, 1, "", "local_policy"], [26, 2, 1, "", "remote_collectors"], [26, 1, 1, "", "set_seed"], [26, 1, 1, "", "shutdown"], [26, 1, 1, "", "start"], [26, 1, 1, "", "state_dict"], [26, 1, 1, "", "stop_remote_collectors"], [26, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.utils": [[28, 3, 1, "", "split_trajectories"]], "torchrl.data": [[29, 0, 1, "", "AdaptiveKLController"], [30, 0, 1, "", "Binary"], [31, 0, 1, "", "BinaryDiscreteTensorSpec"], [32, 0, 1, "", "BinaryToDecimal"], [33, 0, 1, "", "Bounded"], [34, 0, 1, "", "BoundedTensorSpec"], [35, 0, 1, "", "Categorical"], [36, 0, 1, "", "Composite"], [37, 0, 1, "", "CompositeSpec"], [38, 0, 1, "", "ConstantKLController"], [39, 0, 1, "", "DensifyReward"], [40, 0, 1, "", "DiscreteTensorSpec"], [41, 0, 1, "", "Flat2TED"], [42, 0, 1, "", "H5Combine"], [43, 0, 1, "", "H5Split"], [44, 0, 1, "", "HashToInt"], [45, 0, 1, "", "History"], [46, 0, 1, "", "LLMData"], [47, 0, 1, "", "LLMInput"], [48, 0, 1, "", "LLMOutput"], [49, 0, 1, "", "LazyStackedCompositeSpec"], [50, 0, 1, "", "LazyStackedTensorSpec"], [51, 0, 1, "", "MCTSForest"], [52, 0, 1, "", "MultiCategorical"], [53, 0, 1, "", "MultiDiscreteTensorSpec"], [54, 0, 1, "", "MultiOneHot"], [55, 0, 1, "", "MultiOneHotDiscreteTensorSpec"], [56, 0, 1, "", "MultiStep"], [57, 0, 1, "", "Nested2TED"], [58, 0, 1, "", "NonTensor"], [59, 0, 1, "", "NonTensorSpec"], [60, 0, 1, "", "OneHot"], [61, 0, 1, "", "OneHotDiscreteTensorSpec"], [62, 0, 1, "", "PairwiseDataset"], [63, 0, 1, "", "PrioritizedReplayBuffer"], [64, 0, 1, "", "PromptData"], [65, 0, 1, "", "PromptTensorDictTokenizer"], [66, 0, 1, "", "QueryModule"], [67, 0, 1, "", "RandomProjectionHash"], [68, 0, 1, "", "RayReplayBuffer"], [69, 0, 1, "", "RemoteTensorDictReplayBuffer"], [70, 0, 1, "", "ReplayBuffer"], [71, 0, 1, "", "RewardData"], [72, 0, 1, "", "RolloutFromModel"], [73, 0, 1, "", "SipHash"], [74, 0, 1, "", "Stacked"], [75, 0, 1, "", "StackedComposite"], [76, 0, 1, "", "TED2Flat"], [77, 0, 1, "", "TED2Nested"], [78, 0, 1, "", "TensorDictMap"], [79, 0, 1, "", "TensorDictPrioritizedReplayBuffer"], [80, 0, 1, "", "TensorDictReplayBuffer"], [81, 0, 1, "", "TensorDictTokenizer"], [82, 0, 1, "", "TensorMap"], [83, 0, 1, "", "TensorSpec"], [84, 0, 1, "", "TokenizedDatasetLoader"], [85, 0, 1, "", "Tree"], [86, 0, 1, "", "Unbounded"], [87, 0, 1, "", "UnboundedContinuous"], [88, 0, 1, "", "UnboundedContinuousTensorSpec"], [89, 0, 1, "", "UnboundedDiscrete"], [90, 0, 1, "", "UnboundedDiscreteTensorSpec"], [91, 0, 1, "", "check_no_exclusive_keys"], [92, 0, 1, "", "consolidate_spec"], [93, 0, 1, "", "contains_lazy_spec"], [94, 0, 1, "", "create_infinite_iterator"], [95, 0, 1, "", "get_dataloader"]], "torchrl.data.AdaptiveKLController": [[29, 1, 1, "", "update"]], "torchrl.data.Binary": [[30, 1, 1, "", "assert_is_in"], [30, 1, 1, "", "cardinality"], [30, 1, 1, "", "clear_device_"], [30, 1, 1, "", "clone"], [30, 1, 1, "", "contains"], [30, 1, 1, "", "cpu"], [30, 1, 1, "", "cuda"], [30, 4, 1, "", "device"], [30, 1, 1, "", "encode"], [30, 1, 1, "", "enumerate"], [30, 1, 1, "", "expand"], [30, 1, 1, "", "flatten"], [30, 1, 1, "", "implements_for_spec"], [30, 1, 1, "", "index"], [30, 1, 1, "", "is_in"], [30, 1, 1, "", "make_neg_dim"], [30, 2, 1, "", "ndim"], [30, 1, 1, "", "ndimension"], [30, 1, 1, "", "one"], [30, 1, 1, "", "ones"], [30, 1, 1, "", "project"], [30, 1, 1, "", "rand"], [30, 1, 1, "", "reshape"], [30, 1, 1, "", "sample"], [30, 1, 1, "", "set_provisional_n"], [30, 1, 1, "", "squeeze"], [30, 1, 1, "", "to"], [30, 1, 1, "", "to_categorical"], [30, 1, 1, "", "to_categorical_spec"], [30, 1, 1, "", "to_numpy"], [30, 1, 1, "", "to_one_hot"], [30, 1, 1, "", "to_one_hot_spec"], [30, 1, 1, "", "type_check"], [30, 1, 1, "", "unflatten"], [30, 1, 1, "", "unsqueeze"], [30, 1, 1, "", "update_mask"], [30, 1, 1, "", "view"], [30, 1, 1, "", "zero"], [30, 1, 1, "", "zeros"]], "torchrl.data.BinaryDiscreteTensorSpec": [[31, 1, 1, "", "assert_is_in"], [31, 1, 1, "", "cardinality"], [31, 1, 1, "", "clear_device_"], [31, 1, 1, "", "clone"], [31, 1, 1, "", "contains"], [31, 1, 1, "", "cpu"], [31, 1, 1, "", "cuda"], [31, 4, 1, "", "device"], [31, 1, 1, "", "encode"], [31, 1, 1, "", "enumerate"], [31, 1, 1, "", "expand"], [31, 1, 1, "", "flatten"], [31, 1, 1, "", "implements_for_spec"], [31, 1, 1, "", "index"], [31, 1, 1, "", "is_in"], [31, 1, 1, "", "make_neg_dim"], [31, 2, 1, "", "ndim"], [31, 1, 1, "", "ndimension"], [31, 1, 1, "", "one"], [31, 1, 1, "", "ones"], [31, 1, 1, "", "project"], [31, 1, 1, "", "rand"], [31, 1, 1, "", "reshape"], [31, 1, 1, "", "sample"], [31, 1, 1, "", "set_provisional_n"], [31, 1, 1, "", "squeeze"], [31, 1, 1, "", "to"], [31, 1, 1, "", "to_categorical"], [31, 1, 1, "", "to_categorical_spec"], [31, 1, 1, "", "to_numpy"], [31, 1, 1, "", "to_one_hot"], [31, 1, 1, "", "to_one_hot_spec"], [31, 1, 1, "", "type_check"], [31, 1, 1, "", "unflatten"], [31, 1, 1, "", "unsqueeze"], [31, 1, 1, "", "update_mask"], [31, 1, 1, "", "view"], [31, 1, 1, "", "zero"], [31, 1, 1, "", "zeros"]], "torchrl.data.BinaryToDecimal": [[32, 1, 1, "", "add_module"], [32, 1, 1, "", "apply"], [32, 1, 1, "", "bfloat16"], [32, 1, 1, "", "buffers"], [32, 1, 1, "", "children"], [32, 1, 1, "", "compile"], [32, 1, 1, "", "cpu"], [32, 1, 1, "", "cuda"], [32, 1, 1, "", "double"], [32, 1, 1, "", "eval"], [32, 1, 1, "", "extra_repr"], [32, 1, 1, "", "float"], [32, 1, 1, "", "forward"], [32, 1, 1, "", "get_buffer"], [32, 1, 1, "", "get_extra_state"], [32, 1, 1, "", "get_parameter"], [32, 1, 1, "", "get_submodule"], [32, 1, 1, "", "half"], [32, 1, 1, "", "ipu"], [32, 1, 1, "", "load_state_dict"], [32, 1, 1, "", "modules"], [32, 1, 1, "", "mtia"], [32, 1, 1, "", "named_buffers"], [32, 1, 1, "", "named_children"], [32, 1, 1, "", "named_modules"], [32, 1, 1, "", "named_parameters"], [32, 1, 1, "", "parameters"], [32, 1, 1, "", "register_backward_hook"], [32, 1, 1, "", "register_buffer"], [32, 1, 1, "", "register_forward_hook"], [32, 1, 1, "", "register_forward_pre_hook"], [32, 1, 1, "", "register_full_backward_hook"], [32, 1, 1, "", "register_full_backward_pre_hook"], [32, 1, 1, "", "register_load_state_dict_post_hook"], [32, 1, 1, "", "register_load_state_dict_pre_hook"], [32, 1, 1, "", "register_module"], [32, 1, 1, "", "register_parameter"], [32, 1, 1, "", "register_state_dict_post_hook"], [32, 1, 1, "", "register_state_dict_pre_hook"], [32, 1, 1, "", "requires_grad_"], [32, 1, 1, "", "set_extra_state"], [32, 1, 1, "", "set_submodule"], [32, 1, 1, "", "share_memory"], [32, 1, 1, "", "state_dict"], [32, 1, 1, "", "to"], [32, 1, 1, "", "to_empty"], [32, 1, 1, "", "train"], [32, 1, 1, "", "type"], [32, 1, 1, "", "xpu"], [32, 1, 1, "", "zero_grad"]], "torchrl.data.Bounded": [[33, 1, 1, "", "assert_is_in"], [33, 1, 1, "", "cardinality"], [33, 1, 1, "", "clear_device_"], [33, 1, 1, "", "clone"], [33, 1, 1, "", "contains"], [33, 1, 1, "", "cpu"], [33, 1, 1, "", "cuda"], [33, 2, 1, "", "device"], [33, 1, 1, "", "encode"], [33, 1, 1, "", "enumerate"], [33, 1, 1, "", "expand"], [33, 1, 1, "", "flatten"], [33, 1, 1, "", "implements_for_spec"], [33, 1, 1, "", "index"], [33, 1, 1, "", "is_in"], [33, 1, 1, "", "make_neg_dim"], [33, 2, 1, "", "ndim"], [33, 1, 1, "", "ndimension"], [33, 1, 1, "", "one"], [33, 1, 1, "", "ones"], [33, 1, 1, "", "project"], [33, 1, 1, "", "rand"], [33, 1, 1, "", "reshape"], [33, 1, 1, "", "sample"], [33, 1, 1, "", "squeeze"], [33, 1, 1, "", "to"], [33, 1, 1, "", "to_numpy"], [33, 1, 1, "", "type_check"], [33, 1, 1, "", "unflatten"], [33, 1, 1, "", "unsqueeze"], [33, 1, 1, "", "view"], [33, 1, 1, "", "zero"], [33, 1, 1, "", "zeros"]], "torchrl.data.BoundedTensorSpec": [[34, 1, 1, "", "assert_is_in"], [34, 1, 1, "", "cardinality"], [34, 1, 1, "", "clear_device_"], [34, 1, 1, "", "clone"], [34, 1, 1, "", "contains"], [34, 1, 1, "", "cpu"], [34, 1, 1, "", "cuda"], [34, 2, 1, "", "device"], [34, 1, 1, "", "encode"], [34, 1, 1, "", "enumerate"], [34, 1, 1, "", "expand"], [34, 1, 1, "", "flatten"], [34, 1, 1, "", "implements_for_spec"], [34, 1, 1, "", "index"], [34, 1, 1, "", "is_in"], [34, 1, 1, "", "make_neg_dim"], [34, 2, 1, "", "ndim"], [34, 1, 1, "", "ndimension"], [34, 1, 1, "", "one"], [34, 1, 1, "", "ones"], [34, 1, 1, "", "project"], [34, 1, 1, "", "rand"], [34, 1, 1, "", "reshape"], [34, 1, 1, "", "sample"], [34, 1, 1, "", "squeeze"], [34, 1, 1, "", "to"], [34, 1, 1, "", "to_numpy"], [34, 1, 1, "", "type_check"], [34, 1, 1, "", "unflatten"], [34, 1, 1, "", "unsqueeze"], [34, 1, 1, "", "view"], [34, 1, 1, "", "zero"], [34, 1, 1, "", "zeros"]], "torchrl.data.Categorical": [[35, 1, 1, "", "assert_is_in"], [35, 1, 1, "", "cardinality"], [35, 1, 1, "", "clear_device_"], [35, 1, 1, "", "clone"], [35, 1, 1, "", "contains"], [35, 1, 1, "", "cpu"], [35, 1, 1, "", "cuda"], [35, 4, 1, "", "device"], [35, 1, 1, "", "encode"], [35, 1, 1, "", "enumerate"], [35, 1, 1, "", "expand"], [35, 1, 1, "", "flatten"], [35, 1, 1, "", "implements_for_spec"], [35, 1, 1, "", "index"], [35, 1, 1, "", "is_in"], [35, 1, 1, "", "make_neg_dim"], [35, 2, 1, "", "ndim"], [35, 1, 1, "", "ndimension"], [35, 1, 1, "", "one"], [35, 1, 1, "", "ones"], [35, 1, 1, "", "project"], [35, 1, 1, "", "rand"], [35, 1, 1, "", "reshape"], [35, 1, 1, "", "sample"], [35, 1, 1, "", "set_provisional_n"], [35, 1, 1, "", "squeeze"], [35, 1, 1, "", "to"], [35, 1, 1, "", "to_categorical"], [35, 1, 1, "", "to_categorical_spec"], [35, 1, 1, "", "to_numpy"], [35, 1, 1, "", "to_one_hot"], [35, 1, 1, "", "to_one_hot_spec"], [35, 1, 1, "", "type_check"], [35, 1, 1, "", "unflatten"], [35, 1, 1, "", "unsqueeze"], [35, 1, 1, "", "update_mask"], [35, 1, 1, "", "view"], [35, 1, 1, "", "zero"], [35, 1, 1, "", "zeros"]], "torchrl.data.Composite": [[36, 1, 1, "", "assert_is_in"], [36, 1, 1, "", "cardinality"], [36, 1, 1, "", "clear_device_"], [36, 1, 1, "", "clone"], [36, 1, 1, "", "contains"], [36, 1, 1, "", "cpu"], [36, 1, 1, "", "cuda"], [36, 2, 1, "", "device"], [36, 1, 1, "", "empty"], [36, 1, 1, "", "encode"], [36, 1, 1, "", "enumerate"], [36, 1, 1, "", "expand"], [36, 1, 1, "", "flatten"], [36, 1, 1, "", "get"], [36, 1, 1, "", "implements_for_spec"], [36, 1, 1, "", "index"], [36, 1, 1, "", "is_empty"], [36, 1, 1, "", "is_in"], [36, 1, 1, "", "items"], [36, 1, 1, "", "keys"], [36, 1, 1, "", "lock_"], [36, 1, 1, "", "make_neg_dim"], [36, 2, 1, "", "ndim"], [36, 1, 1, "", "ndimension"], [36, 1, 1, "", "one"], [36, 1, 1, "", "ones"], [36, 1, 1, "", "pop"], [36, 1, 1, "", "project"], [36, 1, 1, "", "rand"], [36, 1, 1, "", "reshape"], [36, 1, 1, "", "sample"], [36, 1, 1, "", "separates"], [36, 1, 1, "", "set"], [36, 1, 1, "", "squeeze"], [36, 1, 1, "", "to"], [36, 1, 1, "", "to_numpy"], [36, 1, 1, "", "type_check"], [36, 1, 1, "", "unflatten"], [36, 1, 1, "", "unlock_"], [36, 1, 1, "", "unsqueeze"], [36, 1, 1, "", "values"], [36, 1, 1, "", "view"], [36, 1, 1, "", "zero"], [36, 1, 1, "", "zeros"]], "torchrl.data.CompositeSpec": [[37, 1, 1, "", "assert_is_in"], [37, 1, 1, "", "cardinality"], [37, 1, 1, "", "clear_device_"], [37, 1, 1, "", "clone"], [37, 1, 1, "", "contains"], [37, 1, 1, "", "cpu"], [37, 1, 1, "", "cuda"], [37, 2, 1, "", "device"], [37, 1, 1, "", "empty"], [37, 1, 1, "", "encode"], [37, 1, 1, "", "enumerate"], [37, 1, 1, "", "expand"], [37, 1, 1, "", "flatten"], [37, 1, 1, "", "get"], [37, 1, 1, "", "implements_for_spec"], [37, 1, 1, "", "index"], [37, 1, 1, "", "is_empty"], [37, 1, 1, "", "is_in"], [37, 1, 1, "", "items"], [37, 1, 1, "", "keys"], [37, 1, 1, "", "lock_"], [37, 1, 1, "", "make_neg_dim"], [37, 2, 1, "", "ndim"], [37, 1, 1, "", "ndimension"], [37, 1, 1, "", "one"], [37, 1, 1, "", "ones"], [37, 1, 1, "", "pop"], [37, 1, 1, "", "project"], [37, 1, 1, "", "rand"], [37, 1, 1, "", "reshape"], [37, 1, 1, "", "sample"], [37, 1, 1, "", "separates"], [37, 1, 1, "", "set"], [37, 1, 1, "", "squeeze"], [37, 1, 1, "", "to"], [37, 1, 1, "", "to_numpy"], [37, 1, 1, "", "type_check"], [37, 1, 1, "", "unflatten"], [37, 1, 1, "", "unlock_"], [37, 1, 1, "", "unsqueeze"], [37, 1, 1, "", "values"], [37, 1, 1, "", "view"], [37, 1, 1, "", "zero"], [37, 1, 1, "", "zeros"]], "torchrl.data.DensifyReward": [[39, 1, 1, "", "add_module"], [39, 1, 1, "", "apply"], [39, 1, 1, "", "bfloat16"], [39, 1, 1, "", "buffers"], [39, 1, 1, "", "children"], [39, 1, 1, "", "compile"], [39, 1, 1, "", "cpu"], [39, 1, 1, "", "cuda"], [39, 1, 1, "", "double"], [39, 1, 1, "", "eval"], [39, 1, 1, "", "extra_repr"], [39, 1, 1, "", "float"], [39, 1, 1, "", "forward"], [39, 1, 1, "", "get_buffer"], [39, 1, 1, "", "get_extra_state"], [39, 1, 1, "", "get_parameter"], [39, 1, 1, "", "get_submodule"], [39, 1, 1, "", "half"], [39, 1, 1, "", "ipu"], [39, 1, 1, "", "is_tdmodule_compatible"], [39, 1, 1, "", "load_state_dict"], [39, 1, 1, "", "modules"], [39, 1, 1, "", "mtia"], [39, 1, 1, "", "named_buffers"], [39, 1, 1, "", "named_children"], [39, 1, 1, "", "named_modules"], [39, 1, 1, "", "named_parameters"], [39, 1, 1, "", "parameters"], [39, 1, 1, "", "register_backward_hook"], [39, 1, 1, "", "register_buffer"], [39, 1, 1, "", "register_forward_hook"], [39, 1, 1, "", "register_forward_pre_hook"], [39, 1, 1, "", "register_full_backward_hook"], [39, 1, 1, "", "register_full_backward_pre_hook"], [39, 1, 1, "", "register_load_state_dict_post_hook"], [39, 1, 1, "", "register_load_state_dict_pre_hook"], [39, 1, 1, "", "register_module"], [39, 1, 1, "", "register_parameter"], [39, 1, 1, "", "register_state_dict_post_hook"], [39, 1, 1, "", "register_state_dict_pre_hook"], [39, 1, 1, "", "requires_grad_"], [39, 1, 1, "", "reset_out_keys"], [39, 1, 1, "", "reset_parameters_recursive"], [39, 1, 1, "", "select_out_keys"], [39, 1, 1, "", "set_extra_state"], [39, 1, 1, "", "set_submodule"], [39, 1, 1, "", "share_memory"], [39, 1, 1, "", "state_dict"], [39, 1, 1, "", "to"], [39, 1, 1, "", "to_empty"], [39, 1, 1, "", "train"], [39, 1, 1, "", "type"], [39, 1, 1, "", "xpu"], [39, 1, 1, "", "zero_grad"]], "torchrl.data.DiscreteTensorSpec": [[40, 1, 1, "", "assert_is_in"], [40, 1, 1, "", "cardinality"], [40, 1, 1, "", "clear_device_"], [40, 1, 1, "", "clone"], [40, 1, 1, "", "contains"], [40, 1, 1, "", "cpu"], [40, 1, 1, "", "cuda"], [40, 4, 1, "", "device"], [40, 1, 1, "", "encode"], [40, 1, 1, "", "enumerate"], [40, 1, 1, "", "expand"], [40, 1, 1, "", "flatten"], [40, 1, 1, "", "implements_for_spec"], [40, 1, 1, "", "index"], [40, 1, 1, "", "is_in"], [40, 1, 1, "", "make_neg_dim"], [40, 2, 1, "", "ndim"], [40, 1, 1, "", "ndimension"], [40, 1, 1, "", "one"], [40, 1, 1, "", "ones"], [40, 1, 1, "", "project"], [40, 1, 1, "", "rand"], [40, 1, 1, "", "reshape"], [40, 1, 1, "", "sample"], [40, 1, 1, "", "set_provisional_n"], [40, 1, 1, "", "squeeze"], [40, 1, 1, "", "to"], [40, 1, 1, "", "to_categorical"], [40, 1, 1, "", "to_categorical_spec"], [40, 1, 1, "", "to_numpy"], [40, 1, 1, "", "to_one_hot"], [40, 1, 1, "", "to_one_hot_spec"], [40, 1, 1, "", "type_check"], [40, 1, 1, "", "unflatten"], [40, 1, 1, "", "unsqueeze"], [40, 1, 1, "", "update_mask"], [40, 1, 1, "", "view"], [40, 1, 1, "", "zero"], [40, 1, 1, "", "zeros"]], "torchrl.data.HashToInt": [[44, 1, 1, "", "add_module"], [44, 1, 1, "", "apply"], [44, 1, 1, "", "bfloat16"], [44, 1, 1, "", "buffers"], [44, 1, 1, "", "children"], [44, 1, 1, "", "compile"], [44, 1, 1, "", "cpu"], [44, 1, 1, "", "cuda"], [44, 1, 1, "", "double"], [44, 1, 1, "", "eval"], [44, 1, 1, "", "extra_repr"], [44, 1, 1, "", "float"], [44, 1, 1, "", "forward"], [44, 1, 1, "", "get_buffer"], [44, 1, 1, "", "get_extra_state"], [44, 1, 1, "", "get_parameter"], [44, 1, 1, "", "get_submodule"], [44, 1, 1, "", "half"], [44, 1, 1, "", "ipu"], [44, 1, 1, "", "load_state_dict"], [44, 1, 1, "", "modules"], [44, 1, 1, "", "mtia"], [44, 1, 1, "", "named_buffers"], [44, 1, 1, "", "named_children"], [44, 1, 1, "", "named_modules"], [44, 1, 1, "", "named_parameters"], [44, 1, 1, "", "parameters"], [44, 1, 1, "", "register_backward_hook"], [44, 1, 1, "", "register_buffer"], [44, 1, 1, "", "register_forward_hook"], [44, 1, 1, "", "register_forward_pre_hook"], [44, 1, 1, "", "register_full_backward_hook"], [44, 1, 1, "", "register_full_backward_pre_hook"], [44, 1, 1, "", "register_load_state_dict_post_hook"], [44, 1, 1, "", "register_load_state_dict_pre_hook"], [44, 1, 1, "", "register_module"], [44, 1, 1, "", "register_parameter"], [44, 1, 1, "", "register_state_dict_post_hook"], [44, 1, 1, "", "register_state_dict_pre_hook"], [44, 1, 1, "", "requires_grad_"], [44, 1, 1, "", "set_extra_state"], [44, 1, 1, "", "set_submodule"], [44, 1, 1, "", "share_memory"], [44, 1, 1, "", "state_dict"], [44, 1, 1, "", "to"], [44, 1, 1, "", "to_empty"], [44, 1, 1, "", "train"], [44, 1, 1, "", "type"], [44, 1, 1, "", "xpu"], [44, 1, 1, "", "zero_grad"]], "torchrl.data.History": [[45, 1, 1, "", "append"], [45, 1, 1, "", "apply_chat_template"], [45, 2, 1, "", "device"], [45, 1, 1, "", "dumps"], [45, 1, 1, "", "fields"], [45, 1, 1, "", "from_tensordict"], [45, 1, 1, "", "get"], [45, 1, 1, "", "load"], [45, 1, 1, "", "load_"], [45, 1, 1, "", "load_memmap"], [45, 1, 1, "", "load_state_dict"], [45, 1, 1, "", "memmap"], [45, 1, 1, "", "memmap_"], [45, 1, 1, "", "memmap_like"], [45, 1, 1, "", "memmap_refresh_"], [45, 1, 1, "", "save"], [45, 1, 1, "", "set"], [45, 1, 1, "", "state_dict"], [45, 1, 1, "", "to_tensordict"], [45, 1, 1, "", "unbind"]], "torchrl.data.LLMData": [[46, 2, 1, "", "device"], [46, 1, 1, "", "dumps"], [46, 1, 1, "", "fields"], [46, 1, 1, "", "from_tensordict"], [46, 1, 1, "", "get"], [46, 1, 1, "", "load"], [46, 1, 1, "", "load_"], [46, 1, 1, "", "load_memmap"], [46, 1, 1, "", "load_state_dict"], [46, 1, 1, "", "memmap"], [46, 1, 1, "", "memmap_"], [46, 1, 1, "", "memmap_like"], [46, 1, 1, "", "memmap_refresh_"], [46, 1, 1, "", "save"], [46, 1, 1, "", "set"], [46, 1, 1, "", "state_dict"], [46, 1, 1, "", "to_tensordict"], [46, 1, 1, "", "unbind"]], "torchrl.data.LLMInput": [[47, 2, 1, "", "device"], [47, 1, 1, "", "dumps"], [47, 1, 1, "", "fields"], [47, 1, 1, "", "from_tensordict"], [47, 1, 1, "", "get"], [47, 1, 1, "", "load"], [47, 1, 1, "", "load_"], [47, 1, 1, "", "load_memmap"], [47, 1, 1, "", "load_state_dict"], [47, 1, 1, "", "memmap"], [47, 1, 1, "", "memmap_"], [47, 1, 1, "", "memmap_like"], [47, 1, 1, "", "memmap_refresh_"], [47, 1, 1, "", "save"], [47, 1, 1, "", "set"], [47, 1, 1, "", "state_dict"], [47, 1, 1, "", "to_tensordict"], [47, 1, 1, "", "unbind"]], "torchrl.data.LLMOutput": [[48, 2, 1, "", "device"], [48, 1, 1, "", "dumps"], [48, 1, 1, "", "fields"], [48, 1, 1, "", "from_tensordict"], [48, 1, 1, "", "get"], [48, 1, 1, "", "load"], [48, 1, 1, "", "load_"], [48, 1, 1, "", "load_memmap"], [48, 1, 1, "", "load_state_dict"], [48, 1, 1, "", "memmap"], [48, 1, 1, "", "memmap_"], [48, 1, 1, "", "memmap_like"], [48, 1, 1, "", "memmap_refresh_"], [48, 1, 1, "", "save"], [48, 1, 1, "", "set"], [48, 1, 1, "", "state_dict"], [48, 1, 1, "", "to_tensordict"], [48, 1, 1, "", "unbind"]], "torchrl.data.LazyStackedCompositeSpec": [[49, 1, 1, "", "assert_is_in"], [49, 1, 1, "", "cardinality"], [49, 1, 1, "", "clear_device_"], [49, 1, 1, "", "clone"], [49, 1, 1, "", "contains"], [49, 1, 1, "", "cpu"], [49, 1, 1, "", "cuda"], [49, 2, 1, "", "device"], [49, 1, 1, "", "empty"], [49, 1, 1, "", "encode"], [49, 1, 1, "", "enumerate"], [49, 1, 1, "", "expand"], [49, 1, 1, "", "flatten"], [49, 1, 1, "", "get"], [49, 1, 1, "", "implements_for_spec"], [49, 1, 1, "", "index"], [49, 1, 1, "", "is_empty"], [49, 1, 1, "", "is_in"], [49, 1, 1, "", "items"], [49, 1, 1, "", "keys"], [49, 1, 1, "", "lock_"], [49, 1, 1, "", "make_neg_dim"], [49, 2, 1, "", "ndim"], [49, 1, 1, "", "ndimension"], [49, 1, 1, "", "one"], [49, 1, 1, "", "ones"], [49, 1, 1, "", "pop"], [49, 1, 1, "", "project"], [49, 1, 1, "", "rand"], [49, 1, 1, "", "reshape"], [49, 1, 1, "", "sample"], [49, 1, 1, "", "separates"], [49, 1, 1, "", "set"], [49, 1, 1, "", "squeeze"], [49, 1, 1, "", "to"], [49, 1, 1, "", "to_numpy"], [49, 1, 1, "", "type_check"], [49, 1, 1, "", "unflatten"], [49, 1, 1, "", "unlock_"], [49, 1, 1, "", "unsqueeze"], [49, 1, 1, "", "values"], [49, 1, 1, "", "view"], [49, 1, 1, "", "zero"], [49, 1, 1, "", "zeros"]], "torchrl.data.LazyStackedTensorSpec": [[50, 1, 1, "", "assert_is_in"], [50, 1, 1, "", "cardinality"], [50, 1, 1, "", "clear_device_"], [50, 1, 1, "", "clone"], [50, 1, 1, "", "contains"], [50, 1, 1, "", "cpu"], [50, 1, 1, "", "cuda"], [50, 2, 1, "", "device"], [50, 1, 1, "", "encode"], [50, 1, 1, "", "enumerate"], [50, 1, 1, "", "expand"], [50, 1, 1, "", "flatten"], [50, 1, 1, "", "implements_for_spec"], [50, 1, 1, "", "index"], [50, 1, 1, "", "is_in"], [50, 1, 1, "", "make_neg_dim"], [50, 2, 1, "", "ndim"], [50, 1, 1, "", "ndimension"], [50, 1, 1, "", "one"], [50, 1, 1, "", "ones"], [50, 1, 1, "", "project"], [50, 1, 1, "", "rand"], [50, 1, 1, "", "reshape"], [50, 1, 1, "", "sample"], [50, 1, 1, "", "squeeze"], [50, 1, 1, "", "to"], [50, 1, 1, "", "to_numpy"], [50, 1, 1, "", "type_check"], [50, 1, 1, "", "unflatten"], [50, 1, 1, "", "unsqueeze"], [50, 1, 1, "", "view"], [50, 1, 1, "", "zero"], [50, 1, 1, "", "zeros"]], "torchrl.data.MCTSForest": [[51, 2, 1, "", "action_keys"], [51, 2, 1, "", "done_keys"], [51, 1, 1, "", "extend"], [51, 1, 1, "", "get_keys_from_env"], [51, 2, 1, "", "observation_keys"], [51, 2, 1, "", "reward_keys"], [51, 1, 1, "", "to_string"]], "torchrl.data.MultiCategorical": [[52, 1, 1, "", "assert_is_in"], [52, 1, 1, "", "cardinality"], [52, 1, 1, "", "clear_device_"], [52, 1, 1, "", "clone"], [52, 1, 1, "", "contains"], [52, 1, 1, "", "cpu"], [52, 1, 1, "", "cuda"], [52, 4, 1, "", "device"], [52, 1, 1, "", "encode"], [52, 1, 1, "", "enumerate"], [52, 1, 1, "", "expand"], [52, 1, 1, "", "flatten"], [52, 1, 1, "", "implements_for_spec"], [52, 1, 1, "", "index"], [52, 1, 1, "", "is_in"], [52, 1, 1, "", "make_neg_dim"], [52, 2, 1, "", "ndim"], [52, 1, 1, "", "ndimension"], [52, 1, 1, "", "one"], [52, 1, 1, "", "ones"], [52, 1, 1, "", "project"], [52, 1, 1, "", "rand"], [52, 1, 1, "", "reshape"], [52, 1, 1, "", "sample"], [52, 1, 1, "", "set_provisional_n"], [52, 1, 1, "", "squeeze"], [52, 1, 1, "", "to"], [52, 1, 1, "", "to_categorical"], [52, 1, 1, "", "to_categorical_spec"], [52, 1, 1, "", "to_numpy"], [52, 1, 1, "", "to_one_hot"], [52, 1, 1, "", "to_one_hot_spec"], [52, 1, 1, "", "type_check"], [52, 1, 1, "", "unflatten"], [52, 1, 1, "", "unsqueeze"], [52, 1, 1, "", "update_mask"], [52, 1, 1, "", "view"], [52, 1, 1, "", "zero"], [52, 1, 1, "", "zeros"]], "torchrl.data.MultiDiscreteTensorSpec": [[53, 1, 1, "", "assert_is_in"], [53, 1, 1, "", "cardinality"], [53, 1, 1, "", "clear_device_"], [53, 1, 1, "", "clone"], [53, 1, 1, "", "contains"], [53, 1, 1, "", "cpu"], [53, 1, 1, "", "cuda"], [53, 4, 1, "", "device"], [53, 1, 1, "", "encode"], [53, 1, 1, "", "enumerate"], [53, 1, 1, "", "expand"], [53, 1, 1, "", "flatten"], [53, 1, 1, "", "implements_for_spec"], [53, 1, 1, "", "index"], [53, 1, 1, "", "is_in"], [53, 1, 1, "", "make_neg_dim"], [53, 2, 1, "", "ndim"], [53, 1, 1, "", "ndimension"], [53, 1, 1, "", "one"], [53, 1, 1, "", "ones"], [53, 1, 1, "", "project"], [53, 1, 1, "", "rand"], [53, 1, 1, "", "reshape"], [53, 1, 1, "", "sample"], [53, 1, 1, "", "set_provisional_n"], [53, 1, 1, "", "squeeze"], [53, 1, 1, "", "to"], [53, 1, 1, "", "to_categorical"], [53, 1, 1, "", "to_categorical_spec"], [53, 1, 1, "", "to_numpy"], [53, 1, 1, "", "to_one_hot"], [53, 1, 1, "", "to_one_hot_spec"], [53, 1, 1, "", "type_check"], [53, 1, 1, "", "unflatten"], [53, 1, 1, "", "unsqueeze"], [53, 1, 1, "", "update_mask"], [53, 1, 1, "", "view"], [53, 1, 1, "", "zero"], [53, 1, 1, "", "zeros"]], "torchrl.data.MultiOneHot": [[54, 1, 1, "", "assert_is_in"], [54, 1, 1, "", "cardinality"], [54, 1, 1, "", "clear_device_"], [54, 1, 1, "", "clone"], [54, 1, 1, "", "contains"], [54, 1, 1, "", "cpu"], [54, 1, 1, "", "cuda"], [54, 4, 1, "", "device"], [54, 1, 1, "", "encode"], [54, 1, 1, "", "enumerate"], [54, 1, 1, "", "expand"], [54, 1, 1, "", "flatten"], [54, 1, 1, "", "implements_for_spec"], [54, 1, 1, "", "index"], [54, 1, 1, "", "is_in"], [54, 1, 1, "", "make_neg_dim"], [54, 2, 1, "", "ndim"], [54, 1, 1, "", "ndimension"], [54, 1, 1, "", "one"], [54, 1, 1, "", "ones"], [54, 1, 1, "", "project"], [54, 1, 1, "", "rand"], [54, 1, 1, "", "reshape"], [54, 1, 1, "", "sample"], [54, 1, 1, "", "squeeze"], [54, 1, 1, "", "to"], [54, 1, 1, "", "to_categorical"], [54, 1, 1, "", "to_categorical_spec"], [54, 1, 1, "", "to_numpy"], [54, 1, 1, "", "to_one_hot"], [54, 1, 1, "", "to_one_hot_spec"], [54, 1, 1, "", "type_check"], [54, 1, 1, "", "unflatten"], [54, 1, 1, "", "unsqueeze"], [54, 1, 1, "", "update_mask"], [54, 1, 1, "", "view"], [54, 1, 1, "", "zero"], [54, 1, 1, "", "zeros"]], "torchrl.data.MultiOneHotDiscreteTensorSpec": [[55, 1, 1, "", "assert_is_in"], [55, 1, 1, "", "cardinality"], [55, 1, 1, "", "clear_device_"], [55, 1, 1, "", "clone"], [55, 1, 1, "", "contains"], [55, 1, 1, "", "cpu"], [55, 1, 1, "", "cuda"], [55, 4, 1, "", "device"], [55, 1, 1, "", "encode"], [55, 1, 1, "", "enumerate"], [55, 1, 1, "", "expand"], [55, 1, 1, "", "flatten"], [55, 1, 1, "", "implements_for_spec"], [55, 1, 1, "", "index"], [55, 1, 1, "", "is_in"], [55, 1, 1, "", "make_neg_dim"], [55, 2, 1, "", "ndim"], [55, 1, 1, "", "ndimension"], [55, 1, 1, "", "one"], [55, 1, 1, "", "ones"], [55, 1, 1, "", "project"], [55, 1, 1, "", "rand"], [55, 1, 1, "", "reshape"], [55, 1, 1, "", "sample"], [55, 1, 1, "", "squeeze"], [55, 1, 1, "", "to"], [55, 1, 1, "", "to_categorical"], [55, 1, 1, "", "to_categorical_spec"], [55, 1, 1, "", "to_numpy"], [55, 1, 1, "", "to_one_hot"], [55, 1, 1, "", "to_one_hot_spec"], [55, 1, 1, "", "type_check"], [55, 1, 1, "", "unflatten"], [55, 1, 1, "", "unsqueeze"], [55, 1, 1, "", "update_mask"], [55, 1, 1, "", "view"], [55, 1, 1, "", "zero"], [55, 1, 1, "", "zeros"]], "torchrl.data.MultiStep": [[56, 1, 1, "", "add_module"], [56, 1, 1, "", "apply"], [56, 1, 1, "", "bfloat16"], [56, 1, 1, "", "buffers"], [56, 1, 1, "", "children"], [56, 1, 1, "", "compile"], [56, 1, 1, "", "cpu"], [56, 1, 1, "", "cuda"], [56, 1, 1, "", "double"], [56, 1, 1, "", "eval"], [56, 1, 1, "", "extra_repr"], [56, 1, 1, "", "float"], [56, 1, 1, "", "forward"], [56, 1, 1, "", "get_buffer"], [56, 1, 1, "", "get_extra_state"], [56, 1, 1, "", "get_parameter"], [56, 1, 1, "", "get_submodule"], [56, 1, 1, "", "half"], [56, 1, 1, "", "ipu"], [56, 1, 1, "", "load_state_dict"], [56, 1, 1, "", "modules"], [56, 1, 1, "", "mtia"], [56, 1, 1, "", "named_buffers"], [56, 1, 1, "", "named_children"], [56, 1, 1, "", "named_modules"], [56, 1, 1, "", "named_parameters"], [56, 1, 1, "", "parameters"], [56, 1, 1, "", "register_backward_hook"], [56, 1, 1, "", "register_buffer"], [56, 1, 1, "", "register_forward_hook"], [56, 1, 1, "", "register_forward_pre_hook"], [56, 1, 1, "", "register_full_backward_hook"], [56, 1, 1, "", "register_full_backward_pre_hook"], [56, 1, 1, "", "register_load_state_dict_post_hook"], [56, 1, 1, "", "register_load_state_dict_pre_hook"], [56, 1, 1, "", "register_module"], [56, 1, 1, "", "register_parameter"], [56, 1, 1, "", "register_state_dict_post_hook"], [56, 1, 1, "", "register_state_dict_pre_hook"], [56, 1, 1, "", "requires_grad_"], [56, 1, 1, "", "set_extra_state"], [56, 1, 1, "", "set_submodule"], [56, 1, 1, "", "share_memory"], [56, 1, 1, "", "state_dict"], [56, 1, 1, "", "to"], [56, 1, 1, "", "to_empty"], [56, 1, 1, "", "train"], [56, 1, 1, "", "type"], [56, 1, 1, "", "xpu"], [56, 1, 1, "", "zero_grad"]], "torchrl.data.NonTensor": [[58, 1, 1, "", "assert_is_in"], [58, 1, 1, "", "cardinality"], [58, 1, 1, "", "clear_device_"], [58, 1, 1, "", "clone"], [58, 1, 1, "", "contains"], [58, 1, 1, "", "cpu"], [58, 1, 1, "", "cuda"], [58, 2, 1, "", "device"], [58, 1, 1, "", "encode"], [58, 1, 1, "", "enumerate"], [58, 1, 1, "", "expand"], [58, 1, 1, "", "flatten"], [58, 1, 1, "", "implements_for_spec"], [58, 1, 1, "", "index"], [58, 1, 1, "", "is_in"], [58, 1, 1, "", "make_neg_dim"], [58, 2, 1, "", "ndim"], [58, 1, 1, "", "ndimension"], [58, 1, 1, "", "one"], [58, 1, 1, "", "ones"], [58, 1, 1, "", "project"], [58, 1, 1, "", "rand"], [58, 1, 1, "", "reshape"], [58, 1, 1, "", "sample"], [58, 1, 1, "", "squeeze"], [58, 1, 1, "", "to"], [58, 1, 1, "", "to_numpy"], [58, 1, 1, "", "type_check"], [58, 1, 1, "", "unflatten"], [58, 1, 1, "", "unsqueeze"], [58, 1, 1, "", "view"], [58, 1, 1, "", "zero"], [58, 1, 1, "", "zeros"]], "torchrl.data.NonTensorSpec": [[59, 1, 1, "", "assert_is_in"], [59, 1, 1, "", "cardinality"], [59, 1, 1, "", "clear_device_"], [59, 1, 1, "", "clone"], [59, 1, 1, "", "contains"], [59, 1, 1, "", "cpu"], [59, 1, 1, "", "cuda"], [59, 2, 1, "", "device"], [59, 1, 1, "", "encode"], [59, 1, 1, "", "enumerate"], [59, 1, 1, "", "expand"], [59, 1, 1, "", "flatten"], [59, 1, 1, "", "implements_for_spec"], [59, 1, 1, "", "index"], [59, 1, 1, "", "is_in"], [59, 1, 1, "", "make_neg_dim"], [59, 2, 1, "", "ndim"], [59, 1, 1, "", "ndimension"], [59, 1, 1, "", "one"], [59, 1, 1, "", "ones"], [59, 1, 1, "", "project"], [59, 1, 1, "", "rand"], [59, 1, 1, "", "reshape"], [59, 1, 1, "", "sample"], [59, 1, 1, "", "squeeze"], [59, 1, 1, "", "to"], [59, 1, 1, "", "to_numpy"], [59, 1, 1, "", "type_check"], [59, 1, 1, "", "unflatten"], [59, 1, 1, "", "unsqueeze"], [59, 1, 1, "", "view"], [59, 1, 1, "", "zero"], [59, 1, 1, "", "zeros"]], "torchrl.data.OneHot": [[60, 1, 1, "", "assert_is_in"], [60, 1, 1, "", "cardinality"], [60, 1, 1, "", "clear_device_"], [60, 1, 1, "", "clone"], [60, 1, 1, "", "contains"], [60, 1, 1, "", "cpu"], [60, 1, 1, "", "cuda"], [60, 4, 1, "", "device"], [60, 1, 1, "", "encode"], [60, 1, 1, "", "enumerate"], [60, 1, 1, "", "expand"], [60, 1, 1, "", "flatten"], [60, 1, 1, "", "implements_for_spec"], [60, 1, 1, "", "index"], [60, 1, 1, "", "is_in"], [60, 1, 1, "", "make_neg_dim"], [60, 2, 1, "", "ndim"], [60, 1, 1, "", "ndimension"], [60, 1, 1, "", "one"], [60, 1, 1, "", "ones"], [60, 1, 1, "", "project"], [60, 1, 1, "", "rand"], [60, 1, 1, "", "reshape"], [60, 1, 1, "", "sample"], [60, 1, 1, "", "squeeze"], [60, 1, 1, "", "to"], [60, 1, 1, "", "to_categorical"], [60, 1, 1, "", "to_categorical_spec"], [60, 1, 1, "", "to_numpy"], [60, 1, 1, "", "to_one_hot"], [60, 1, 1, "", "to_one_hot_spec"], [60, 1, 1, "", "type_check"], [60, 1, 1, "", "unflatten"], [60, 1, 1, "", "unsqueeze"], [60, 1, 1, "", "update_mask"], [60, 1, 1, "", "view"], [60, 1, 1, "", "zero"], [60, 1, 1, "", "zeros"]], "torchrl.data.OneHotDiscreteTensorSpec": [[61, 1, 1, "", "assert_is_in"], [61, 1, 1, "", "cardinality"], [61, 1, 1, "", "clear_device_"], [61, 1, 1, "", "clone"], [61, 1, 1, "", "contains"], [61, 1, 1, "", "cpu"], [61, 1, 1, "", "cuda"], [61, 4, 1, "", "device"], [61, 1, 1, "", "encode"], [61, 1, 1, "", "enumerate"], [61, 1, 1, "", "expand"], [61, 1, 1, "", "flatten"], [61, 1, 1, "", "implements_for_spec"], [61, 1, 1, "", "index"], [61, 1, 1, "", "is_in"], [61, 1, 1, "", "make_neg_dim"], [61, 2, 1, "", "ndim"], [61, 1, 1, "", "ndimension"], [61, 1, 1, "", "one"], [61, 1, 1, "", "ones"], [61, 1, 1, "", "project"], [61, 1, 1, "", "rand"], [61, 1, 1, "", "reshape"], [61, 1, 1, "", "sample"], [61, 1, 1, "", "squeeze"], [61, 1, 1, "", "to"], [61, 1, 1, "", "to_categorical"], [61, 1, 1, "", "to_categorical_spec"], [61, 1, 1, "", "to_numpy"], [61, 1, 1, "", "to_one_hot"], [61, 1, 1, "", "to_one_hot_spec"], [61, 1, 1, "", "type_check"], [61, 1, 1, "", "unflatten"], [61, 1, 1, "", "unsqueeze"], [61, 1, 1, "", "update_mask"], [61, 1, 1, "", "view"], [61, 1, 1, "", "zero"], [61, 1, 1, "", "zeros"]], "torchrl.data.PairwiseDataset": [[62, 2, 1, "", "device"], [62, 1, 1, "", "dumps"], [62, 1, 1, "", "fields"], [62, 1, 1, "", "from_dataset"], [62, 1, 1, "", "from_tensordict"], [62, 1, 1, "", "get"], [62, 1, 1, "", "load"], [62, 1, 1, "", "load_"], [62, 1, 1, "", "load_memmap"], [62, 1, 1, "", "load_state_dict"], [62, 1, 1, "", "memmap"], [62, 1, 1, "", "memmap_"], [62, 1, 1, "", "memmap_like"], [62, 1, 1, "", "memmap_refresh_"], [62, 1, 1, "", "save"], [62, 1, 1, "", "set"], [62, 1, 1, "", "state_dict"], [62, 1, 1, "", "to_tensordict"], [62, 1, 1, "", "unbind"]], "torchrl.data.PrioritizedReplayBuffer": [[63, 1, 1, "", "add"], [63, 1, 1, "", "append_transform"], [63, 1, 1, "", "as_remote"], [63, 1, 1, "", "dump"], [63, 1, 1, "", "dumps"], [63, 1, 1, "", "empty"], [63, 1, 1, "", "extend"], [63, 1, 1, "", "insert_transform"], [63, 1, 1, "", "load"], [63, 1, 1, "", "loads"], [63, 1, 1, "", "register_load_hook"], [63, 1, 1, "", "register_save_hook"], [63, 1, 1, "", "sample"], [63, 2, 1, "", "sampler"], [63, 1, 1, "", "save"], [63, 1, 1, "", "set_sampler"], [63, 1, 1, "", "set_storage"], [63, 1, 1, "", "set_writer"], [63, 2, 1, "", "storage"], [63, 2, 1, "", "write_count"], [63, 2, 1, "", "writer"]], "torchrl.data.PromptData": [[64, 2, 1, "", "device"], [64, 1, 1, "", "dumps"], [64, 1, 1, "", "fields"], [64, 1, 1, "", "from_dataset"], [64, 1, 1, "", "from_tensordict"], [64, 1, 1, "", "get"], [64, 1, 1, "", "load"], [64, 1, 1, "", "load_"], [64, 1, 1, "", "load_memmap"], [64, 1, 1, "", "load_state_dict"], [64, 1, 1, "", "memmap"], [64, 1, 1, "", "memmap_"], [64, 1, 1, "", "memmap_like"], [64, 1, 1, "", "memmap_refresh_"], [64, 1, 1, "", "save"], [64, 1, 1, "", "set"], [64, 1, 1, "", "state_dict"], [64, 1, 1, "", "to_tensordict"], [64, 1, 1, "", "unbind"]], "torchrl.data.QueryModule": [[66, 1, 1, "", "add_module"], [66, 1, 1, "", "apply"], [66, 1, 1, "", "bfloat16"], [66, 1, 1, "", "buffers"], [66, 1, 1, "", "children"], [66, 1, 1, "", "compile"], [66, 1, 1, "", "cpu"], [66, 1, 1, "", "cuda"], [66, 1, 1, "", "double"], [66, 1, 1, "", "eval"], [66, 1, 1, "", "extra_repr"], [66, 1, 1, "", "float"], [66, 1, 1, "", "forward"], [66, 1, 1, "", "get_buffer"], [66, 1, 1, "", "get_extra_state"], [66, 1, 1, "", "get_parameter"], [66, 1, 1, "", "get_submodule"], [66, 1, 1, "", "half"], [66, 1, 1, "", "ipu"], [66, 1, 1, "", "is_tdmodule_compatible"], [66, 1, 1, "", "load_state_dict"], [66, 1, 1, "", "modules"], [66, 1, 1, "", "mtia"], [66, 1, 1, "", "named_buffers"], [66, 1, 1, "", "named_children"], [66, 1, 1, "", "named_modules"], [66, 1, 1, "", "named_parameters"], [66, 1, 1, "", "parameters"], [66, 1, 1, "", "register_backward_hook"], [66, 1, 1, "", "register_buffer"], [66, 1, 1, "", "register_forward_hook"], [66, 1, 1, "", "register_forward_pre_hook"], [66, 1, 1, "", "register_full_backward_hook"], [66, 1, 1, "", "register_full_backward_pre_hook"], [66, 1, 1, "", "register_load_state_dict_post_hook"], [66, 1, 1, "", "register_load_state_dict_pre_hook"], [66, 1, 1, "", "register_module"], [66, 1, 1, "", "register_parameter"], [66, 1, 1, "", "register_state_dict_post_hook"], [66, 1, 1, "", "register_state_dict_pre_hook"], [66, 1, 1, "", "requires_grad_"], [66, 1, 1, "", "reset_out_keys"], [66, 1, 1, "", "reset_parameters_recursive"], [66, 1, 1, "", "select_out_keys"], [66, 1, 1, "", "set_extra_state"], [66, 1, 1, "", "set_submodule"], [66, 1, 1, "", "share_memory"], [66, 1, 1, "", "state_dict"], [66, 1, 1, "", "to"], [66, 1, 1, "", "to_empty"], [66, 1, 1, "", "train"], [66, 1, 1, "", "type"], [66, 1, 1, "", "xpu"], [66, 1, 1, "", "zero_grad"]], "torchrl.data.RandomProjectionHash": [[67, 1, 1, "", "add_module"], [67, 1, 1, "", "apply"], [67, 1, 1, "", "bfloat16"], [67, 1, 1, "", "buffers"], [67, 1, 1, "", "children"], [67, 1, 1, "", "compile"], [67, 1, 1, "", "cpu"], [67, 1, 1, "", "cuda"], [67, 1, 1, "", "double"], [67, 1, 1, "", "eval"], [67, 1, 1, "", "extra_repr"], [67, 1, 1, "", "fit"], [67, 1, 1, "", "float"], [67, 1, 1, "", "forward"], [67, 1, 1, "", "get_buffer"], [67, 1, 1, "", "get_extra_state"], [67, 1, 1, "", "get_parameter"], [67, 1, 1, "", "get_submodule"], [67, 1, 1, "", "half"], [67, 1, 1, "", "ipu"], [67, 1, 1, "", "load_state_dict"], [67, 1, 1, "", "modules"], [67, 1, 1, "", "mtia"], [67, 1, 1, "", "named_buffers"], [67, 1, 1, "", "named_children"], [67, 1, 1, "", "named_modules"], [67, 1, 1, "", "named_parameters"], [67, 1, 1, "", "parameters"], [67, 1, 1, "", "register_backward_hook"], [67, 1, 1, "", "register_buffer"], [67, 1, 1, "", "register_forward_hook"], [67, 1, 1, "", "register_forward_pre_hook"], [67, 1, 1, "", "register_full_backward_hook"], [67, 1, 1, "", "register_full_backward_pre_hook"], [67, 1, 1, "", "register_load_state_dict_post_hook"], [67, 1, 1, "", "register_load_state_dict_pre_hook"], [67, 1, 1, "", "register_module"], [67, 1, 1, "", "register_parameter"], [67, 1, 1, "", "register_state_dict_post_hook"], [67, 1, 1, "", "register_state_dict_pre_hook"], [67, 1, 1, "", "requires_grad_"], [67, 1, 1, "", "set_extra_state"], [67, 1, 1, "", "set_submodule"], [67, 1, 1, "", "share_memory"], [67, 1, 1, "", "state_dict"], [67, 1, 1, "", "to"], [67, 1, 1, "", "to_empty"], [67, 1, 1, "", "train"], [67, 1, 1, "", "type"], [67, 1, 1, "", "xpu"], [67, 1, 1, "", "zero_grad"]], "torchrl.data.RayReplayBuffer": [[68, 1, 1, "", "add"], [68, 1, 1, "", "append_transform"], [68, 1, 1, "", "as_remote"], [68, 1, 1, "", "dump"], [68, 1, 1, "", "dumps"], [68, 1, 1, "", "empty"], [68, 1, 1, "", "extend"], [68, 1, 1, "", "insert_transform"], [68, 1, 1, "", "load"], [68, 1, 1, "", "loads"], [68, 1, 1, "", "register_load_hook"], [68, 1, 1, "", "register_save_hook"], [68, 1, 1, "", "sample"], [68, 2, 1, "", "sampler"], [68, 1, 1, "", "save"], [68, 1, 1, "", "set_sampler"], [68, 1, 1, "", "set_storage"], [68, 1, 1, "", "set_writer"], [68, 2, 1, "", "storage"], [68, 2, 1, "", "write_count"], [68, 2, 1, "", "writer"]], "torchrl.data.RemoteTensorDictReplayBuffer": [[69, 1, 1, "", "add"], [69, 1, 1, "", "append_transform"], [69, 1, 1, "", "as_remote"], [69, 1, 1, "", "dump"], [69, 1, 1, "", "dumps"], [69, 1, 1, "", "empty"], [69, 1, 1, "", "extend"], [69, 1, 1, "", "insert_transform"], [69, 1, 1, "", "load"], [69, 1, 1, "", "loads"], [69, 1, 1, "", "register_load_hook"], [69, 1, 1, "", "register_save_hook"], [69, 1, 1, "", "sample"], [69, 2, 1, "", "sampler"], [69, 1, 1, "", "save"], [69, 1, 1, "", "set_sampler"], [69, 1, 1, "", "set_storage"], [69, 1, 1, "", "set_writer"], [69, 2, 1, "", "storage"], [69, 2, 1, "", "write_count"], [69, 2, 1, "", "writer"]], "torchrl.data.ReplayBuffer": [[70, 1, 1, "", "add"], [70, 1, 1, "", "append_transform"], [70, 1, 1, "", "as_remote"], [70, 1, 1, "", "dump"], [70, 1, 1, "", "dumps"], [70, 1, 1, "", "empty"], [70, 1, 1, "", "extend"], [70, 1, 1, "", "insert_transform"], [70, 1, 1, "", "load"], [70, 1, 1, "", "loads"], [70, 1, 1, "", "register_load_hook"], [70, 1, 1, "", "register_save_hook"], [70, 1, 1, "", "sample"], [70, 2, 1, "", "sampler"], [70, 1, 1, "", "save"], [70, 1, 1, "", "set_sampler"], [70, 1, 1, "", "set_storage"], [70, 1, 1, "", "set_writer"], [70, 2, 1, "", "storage"], [70, 2, 1, "", "write_count"], [70, 2, 1, "", "writer"]], "torchrl.data.RewardData": [[71, 2, 1, "", "device"], [71, 1, 1, "", "dumps"], [71, 1, 1, "", "fields"], [71, 1, 1, "", "from_tensordict"], [71, 1, 1, "", "get"], [71, 1, 1, "", "load"], [71, 1, 1, "", "load_"], [71, 1, 1, "", "load_memmap"], [71, 1, 1, "", "load_state_dict"], [71, 1, 1, "", "memmap"], [71, 1, 1, "", "memmap_"], [71, 1, 1, "", "memmap_like"], [71, 1, 1, "", "memmap_refresh_"], [71, 1, 1, "", "save"], [71, 1, 1, "", "set"], [71, 1, 1, "", "state_dict"], [71, 1, 1, "", "to_tensordict"], [71, 1, 1, "", "unbind"]], "torchrl.data.RolloutFromModel": [[72, 1, 1, "", "create_rollout_td"], [72, 1, 1, "", "generate"], [72, 1, 1, "", "logprobs_of_labels"]], "torchrl.data.SipHash": [[73, 1, 1, "", "add_module"], [73, 1, 1, "", "apply"], [73, 1, 1, "", "bfloat16"], [73, 1, 1, "", "buffers"], [73, 1, 1, "", "children"], [73, 1, 1, "", "compile"], [73, 1, 1, "", "cpu"], [73, 1, 1, "", "cuda"], [73, 1, 1, "", "double"], [73, 1, 1, "", "eval"], [73, 1, 1, "", "extra_repr"], [73, 1, 1, "", "float"], [73, 1, 1, "", "forward"], [73, 1, 1, "", "get_buffer"], [73, 1, 1, "", "get_extra_state"], [73, 1, 1, "", "get_parameter"], [73, 1, 1, "", "get_submodule"], [73, 1, 1, "", "half"], [73, 1, 1, "", "ipu"], [73, 1, 1, "", "load_state_dict"], [73, 1, 1, "", "modules"], [73, 1, 1, "", "mtia"], [73, 1, 1, "", "named_buffers"], [73, 1, 1, "", "named_children"], [73, 1, 1, "", "named_modules"], [73, 1, 1, "", "named_parameters"], [73, 1, 1, "", "parameters"], [73, 1, 1, "", "register_backward_hook"], [73, 1, 1, "", "register_buffer"], [73, 1, 1, "", "register_forward_hook"], [73, 1, 1, "", "register_forward_pre_hook"], [73, 1, 1, "", "register_full_backward_hook"], [73, 1, 1, "", "register_full_backward_pre_hook"], [73, 1, 1, "", "register_load_state_dict_post_hook"], [73, 1, 1, "", "register_load_state_dict_pre_hook"], [73, 1, 1, "", "register_module"], [73, 1, 1, "", "register_parameter"], [73, 1, 1, "", "register_state_dict_post_hook"], [73, 1, 1, "", "register_state_dict_pre_hook"], [73, 1, 1, "", "requires_grad_"], [73, 1, 1, "", "set_extra_state"], [73, 1, 1, "", "set_submodule"], [73, 1, 1, "", "share_memory"], [73, 1, 1, "", "state_dict"], [73, 1, 1, "", "to"], [73, 1, 1, "", "to_empty"], [73, 1, 1, "", "train"], [73, 1, 1, "", "type"], [73, 1, 1, "", "xpu"], [73, 1, 1, "", "zero_grad"]], "torchrl.data.Stacked": [[74, 1, 1, "", "assert_is_in"], [74, 1, 1, "", "cardinality"], [74, 1, 1, "", "clear_device_"], [74, 1, 1, "", "clone"], [74, 1, 1, "", "contains"], [74, 1, 1, "", "cpu"], [74, 1, 1, "", "cuda"], [74, 2, 1, "", "device"], [74, 1, 1, "", "encode"], [74, 1, 1, "", "enumerate"], [74, 1, 1, "", "expand"], [74, 1, 1, "", "flatten"], [74, 1, 1, "", "implements_for_spec"], [74, 1, 1, "", "index"], [74, 1, 1, "", "is_in"], [74, 1, 1, "", "make_neg_dim"], [74, 2, 1, "", "ndim"], [74, 1, 1, "", "ndimension"], [74, 1, 1, "", "one"], [74, 1, 1, "", "ones"], [74, 1, 1, "", "project"], [74, 1, 1, "", "rand"], [74, 1, 1, "", "reshape"], [74, 1, 1, "", "sample"], [74, 1, 1, "", "squeeze"], [74, 1, 1, "", "to"], [74, 1, 1, "", "to_numpy"], [74, 1, 1, "", "type_check"], [74, 1, 1, "", "unflatten"], [74, 1, 1, "", "unsqueeze"], [74, 1, 1, "", "view"], [74, 1, 1, "", "zero"], [74, 1, 1, "", "zeros"]], "torchrl.data.StackedComposite": [[75, 1, 1, "", "assert_is_in"], [75, 1, 1, "", "cardinality"], [75, 1, 1, "", "clear_device_"], [75, 1, 1, "", "clone"], [75, 1, 1, "", "contains"], [75, 1, 1, "", "cpu"], [75, 1, 1, "", "cuda"], [75, 2, 1, "", "device"], [75, 1, 1, "", "empty"], [75, 1, 1, "", "encode"], [75, 1, 1, "", "enumerate"], [75, 1, 1, "", "expand"], [75, 1, 1, "", "flatten"], [75, 1, 1, "", "get"], [75, 1, 1, "", "implements_for_spec"], [75, 1, 1, "", "index"], [75, 1, 1, "", "is_empty"], [75, 1, 1, "", "is_in"], [75, 1, 1, "", "items"], [75, 1, 1, "", "keys"], [75, 1, 1, "", "lock_"], [75, 1, 1, "", "make_neg_dim"], [75, 2, 1, "", "ndim"], [75, 1, 1, "", "ndimension"], [75, 1, 1, "", "one"], [75, 1, 1, "", "ones"], [75, 1, 1, "", "pop"], [75, 1, 1, "", "project"], [75, 1, 1, "", "rand"], [75, 1, 1, "", "reshape"], [75, 1, 1, "", "sample"], [75, 1, 1, "", "separates"], [75, 1, 1, "", "set"], [75, 1, 1, "", "squeeze"], [75, 1, 1, "", "to"], [75, 1, 1, "", "to_numpy"], [75, 1, 1, "", "type_check"], [75, 1, 1, "", "unflatten"], [75, 1, 1, "", "unlock_"], [75, 1, 1, "", "unsqueeze"], [75, 1, 1, "", "values"], [75, 1, 1, "", "view"], [75, 1, 1, "", "zero"], [75, 1, 1, "", "zeros"]], "torchrl.data.TensorDictMap": [[78, 1, 1, "", "add_module"], [78, 1, 1, "", "apply"], [78, 1, 1, "", "bfloat16"], [78, 1, 1, "", "buffers"], [78, 1, 1, "", "children"], [78, 1, 1, "", "compile"], [78, 1, 1, "", "cpu"], [78, 1, 1, "", "cuda"], [78, 1, 1, "", "double"], [78, 1, 1, "", "eval"], [78, 1, 1, "", "extra_repr"], [78, 1, 1, "", "float"], [78, 1, 1, "", "forward"], [78, 1, 1, "", "from_tensordict_pair"], [78, 1, 1, "", "get_buffer"], [78, 1, 1, "", "get_extra_state"], [78, 1, 1, "", "get_parameter"], [78, 1, 1, "", "get_submodule"], [78, 1, 1, "", "half"], [78, 1, 1, "", "ipu"], [78, 1, 1, "", "is_tdmodule_compatible"], [78, 1, 1, "", "load_state_dict"], [78, 1, 1, "", "modules"], [78, 1, 1, "", "mtia"], [78, 1, 1, "", "named_buffers"], [78, 1, 1, "", "named_children"], [78, 1, 1, "", "named_modules"], [78, 1, 1, "", "named_parameters"], [78, 1, 1, "", "parameters"], [78, 1, 1, "", "register_backward_hook"], [78, 1, 1, "", "register_buffer"], [78, 1, 1, "", "register_forward_hook"], [78, 1, 1, "", "register_forward_pre_hook"], [78, 1, 1, "", "register_full_backward_hook"], [78, 1, 1, "", "register_full_backward_pre_hook"], [78, 1, 1, "", "register_load_state_dict_post_hook"], [78, 1, 1, "", "register_load_state_dict_pre_hook"], [78, 1, 1, "", "register_module"], [78, 1, 1, "", "register_parameter"], [78, 1, 1, "", "register_state_dict_post_hook"], [78, 1, 1, "", "register_state_dict_pre_hook"], [78, 1, 1, "", "requires_grad_"], [78, 1, 1, "", "reset_out_keys"], [78, 1, 1, "", "reset_parameters_recursive"], [78, 1, 1, "", "select_out_keys"], [78, 1, 1, "", "set_extra_state"], [78, 1, 1, "", "set_submodule"], [78, 1, 1, "", "share_memory"], [78, 1, 1, "", "state_dict"], [78, 1, 1, "", "to"], [78, 1, 1, "", "to_empty"], [78, 1, 1, "", "train"], [78, 1, 1, "", "type"], [78, 1, 1, "", "xpu"], [78, 1, 1, "", "zero_grad"]], "torchrl.data.TensorDictPrioritizedReplayBuffer": [[79, 1, 1, "", "add"], [79, 1, 1, "", "append_transform"], [79, 1, 1, "", "as_remote"], [79, 1, 1, "", "dump"], [79, 1, 1, "", "dumps"], [79, 1, 1, "", "empty"], [79, 1, 1, "", "extend"], [79, 1, 1, "", "insert_transform"], [79, 1, 1, "", "load"], [79, 1, 1, "", "loads"], [79, 1, 1, "", "register_load_hook"], [79, 1, 1, "", "register_save_hook"], [79, 1, 1, "", "sample"], [79, 2, 1, "", "sampler"], [79, 1, 1, "", "save"], [79, 1, 1, "", "set_sampler"], [79, 1, 1, "", "set_storage"], [79, 1, 1, "", "set_writer"], [79, 2, 1, "", "storage"], [79, 2, 1, "", "write_count"], [79, 2, 1, "", "writer"]], "torchrl.data.TensorDictReplayBuffer": [[80, 1, 1, "", "add"], [80, 1, 1, "", "append_transform"], [80, 1, 1, "", "as_remote"], [80, 1, 1, "", "dump"], [80, 1, 1, "", "dumps"], [80, 1, 1, "", "empty"], [80, 1, 1, "", "extend"], [80, 1, 1, "", "insert_transform"], [80, 1, 1, "", "load"], [80, 1, 1, "", "loads"], [80, 1, 1, "", "register_load_hook"], [80, 1, 1, "", "register_save_hook"], [80, 1, 1, "", "sample"], [80, 2, 1, "", "sampler"], [80, 1, 1, "", "save"], [80, 1, 1, "", "set_sampler"], [80, 1, 1, "", "set_storage"], [80, 1, 1, "", "set_writer"], [80, 2, 1, "", "storage"], [80, 2, 1, "", "write_count"], [80, 2, 1, "", "writer"]], "torchrl.data.TensorSpec": [[83, 1, 1, "", "assert_is_in"], [83, 1, 1, "", "cardinality"], [83, 1, 1, "", "clear_device_"], [83, 1, 1, "", "clone"], [83, 1, 1, "", "contains"], [83, 1, 1, "", "cpu"], [83, 1, 1, "", "cuda"], [83, 2, 1, "", "device"], [83, 1, 1, "", "encode"], [83, 1, 1, "", "enumerate"], [83, 1, 1, "", "expand"], [83, 1, 1, "", "flatten"], [83, 1, 1, "", "implements_for_spec"], [83, 1, 1, "", "index"], [83, 1, 1, "", "is_in"], [83, 1, 1, "", "make_neg_dim"], [83, 2, 1, "", "ndim"], [83, 1, 1, "", "ndimension"], [83, 1, 1, "", "one"], [83, 1, 1, "", "ones"], [83, 1, 1, "", "project"], [83, 1, 1, "", "rand"], [83, 1, 1, "", "reshape"], [83, 1, 1, "", "sample"], [83, 1, 1, "", "squeeze"], [83, 1, 1, "", "to"], [83, 1, 1, "", "to_numpy"], [83, 1, 1, "", "type_check"], [83, 1, 1, "", "unflatten"], [83, 1, 1, "", "unsqueeze"], [83, 1, 1, "", "view"], [83, 1, 1, "", "zero"], [83, 1, 1, "", "zeros"]], "torchrl.data.TokenizedDatasetLoader": [[84, 1, 1, "", "dataset_to_tensordict"], [84, 1, 1, "", "load"]], "torchrl.data.Tree": [[85, 2, 1, "", "branching_action"], [85, 2, 1, "", "device"], [85, 1, 1, "", "dumps"], [85, 1, 1, "", "edges"], [85, 1, 1, "", "fields"], [85, 1, 1, "", "from_tensordict"], [85, 2, 1, "", "full_action_spec"], [85, 2, 1, "", "full_done_spec"], [85, 2, 1, "", "full_observation_spec"], [85, 2, 1, "", "full_reward_spec"], [85, 2, 1, "", "full_state_spec"], [85, 1, 1, "", "fully_expanded"], [85, 1, 1, "", "get"], [85, 1, 1, "", "get_vertex_by_hash"], [85, 1, 1, "", "get_vertex_by_id"], [85, 2, 1, "", "is_terminal"], [85, 1, 1, "", "load"], [85, 1, 1, "", "load_"], [85, 1, 1, "", "load_memmap"], [85, 1, 1, "", "load_state_dict"], [85, 1, 1, "", "make_node"], [85, 1, 1, "", "max_length"], [85, 1, 1, "", "memmap"], [85, 1, 1, "", "memmap_"], [85, 1, 1, "", "memmap_like"], [85, 1, 1, "", "memmap_refresh_"], [85, 2, 1, "", "node_observation"], [85, 2, 1, "", "node_observations"], [85, 2, 1, "", "num_children"], [85, 1, 1, "", "num_vertices"], [85, 2, 1, "", "parent"], [85, 1, 1, "", "plot"], [85, 2, 1, "", "prev_action"], [85, 1, 1, "", "rollout_from_path"], [85, 1, 1, "", "save"], [85, 2, 1, "", "selected_actions"], [85, 1, 1, "", "set"], [85, 1, 1, "", "state_dict"], [85, 1, 1, "", "to_string"], [85, 1, 1, "", "to_tensordict"], [85, 1, 1, "", "unbind"], [85, 1, 1, "", "valid_paths"], [85, 1, 1, "", "vertices"], [85, 2, 1, "", "visits"]], "torchrl.data.Unbounded": [[86, 1, 1, "", "assert_is_in"], [86, 1, 1, "", "cardinality"], [86, 1, 1, "", "clear_device_"], [86, 1, 1, "", "clone"], [86, 1, 1, "", "contains"], [86, 1, 1, "", "cpu"], [86, 1, 1, "", "cuda"], [86, 2, 1, "", "device"], [86, 1, 1, "", "encode"], [86, 1, 1, "", "enumerate"], [86, 1, 1, "", "expand"], [86, 1, 1, "", "flatten"], [86, 1, 1, "", "implements_for_spec"], [86, 1, 1, "", "index"], [86, 1, 1, "", "is_in"], [86, 1, 1, "", "make_neg_dim"], [86, 2, 1, "", "ndim"], [86, 1, 1, "", "ndimension"], [86, 1, 1, "", "one"], [86, 1, 1, "", "ones"], [86, 1, 1, "", "project"], [86, 1, 1, "", "rand"], [86, 1, 1, "", "reshape"], [86, 1, 1, "", "sample"], [86, 1, 1, "", "squeeze"], [86, 1, 1, "", "to"], [86, 1, 1, "", "to_numpy"], [86, 1, 1, "", "type_check"], [86, 1, 1, "", "unflatten"], [86, 1, 1, "", "unsqueeze"], [86, 1, 1, "", "view"], [86, 1, 1, "", "zero"], [86, 1, 1, "", "zeros"]], "torchrl.data.UnboundedContinuous": [[87, 1, 1, "", "assert_is_in"], [87, 1, 1, "", "cardinality"], [87, 1, 1, "", "clear_device_"], [87, 1, 1, "", "clone"], [87, 1, 1, "", "contains"], [87, 1, 1, "", "cpu"], [87, 1, 1, "", "cuda"], [87, 2, 1, "", "device"], [87, 1, 1, "", "encode"], [87, 1, 1, "", "enumerate"], [87, 1, 1, "", "expand"], [87, 1, 1, "", "flatten"], [87, 1, 1, "", "implements_for_spec"], [87, 1, 1, "", "index"], [87, 1, 1, "", "is_in"], [87, 1, 1, "", "make_neg_dim"], [87, 2, 1, "", "ndim"], [87, 1, 1, "", "ndimension"], [87, 1, 1, "", "one"], [87, 1, 1, "", "ones"], [87, 1, 1, "", "project"], [87, 1, 1, "", "rand"], [87, 1, 1, "", "reshape"], [87, 1, 1, "", "sample"], [87, 1, 1, "", "squeeze"], [87, 1, 1, "", "to"], [87, 1, 1, "", "to_numpy"], [87, 1, 1, "", "type_check"], [87, 1, 1, "", "unflatten"], [87, 1, 1, "", "unsqueeze"], [87, 1, 1, "", "view"], [87, 1, 1, "", "zero"], [87, 1, 1, "", "zeros"]], "torchrl.data.UnboundedContinuousTensorSpec": [[88, 1, 1, "", "assert_is_in"], [88, 1, 1, "", "cardinality"], [88, 1, 1, "", "clear_device_"], [88, 1, 1, "", "clone"], [88, 1, 1, "", "contains"], [88, 1, 1, "", "cpu"], [88, 1, 1, "", "cuda"], [88, 2, 1, "", "device"], [88, 1, 1, "", "encode"], [88, 1, 1, "", "enumerate"], [88, 1, 1, "", "expand"], [88, 1, 1, "", "flatten"], [88, 1, 1, "", "implements_for_spec"], [88, 1, 1, "", "index"], [88, 1, 1, "", "is_in"], [88, 1, 1, "", "make_neg_dim"], [88, 2, 1, "", "ndim"], [88, 1, 1, "", "ndimension"], [88, 1, 1, "", "one"], [88, 1, 1, "", "ones"], [88, 1, 1, "", "project"], [88, 1, 1, "", "rand"], [88, 1, 1, "", "reshape"], [88, 1, 1, "", "sample"], [88, 1, 1, "", "squeeze"], [88, 1, 1, "", "to"], [88, 1, 1, "", "to_numpy"], [88, 1, 1, "", "type_check"], [88, 1, 1, "", "unflatten"], [88, 1, 1, "", "unsqueeze"], [88, 1, 1, "", "view"], [88, 1, 1, "", "zero"], [88, 1, 1, "", "zeros"]], "torchrl.data.UnboundedDiscrete": [[89, 1, 1, "", "assert_is_in"], [89, 1, 1, "", "cardinality"], [89, 1, 1, "", "clear_device_"], [89, 1, 1, "", "clone"], [89, 1, 1, "", "contains"], [89, 1, 1, "", "cpu"], [89, 1, 1, "", "cuda"], [89, 2, 1, "", "device"], [89, 1, 1, "", "encode"], [89, 1, 1, "", "enumerate"], [89, 1, 1, "", "expand"], [89, 1, 1, "", "flatten"], [89, 1, 1, "", "implements_for_spec"], [89, 1, 1, "", "index"], [89, 1, 1, "", "is_in"], [89, 1, 1, "", "make_neg_dim"], [89, 2, 1, "", "ndim"], [89, 1, 1, "", "ndimension"], [89, 1, 1, "", "one"], [89, 1, 1, "", "ones"], [89, 1, 1, "", "project"], [89, 1, 1, "", "rand"], [89, 1, 1, "", "reshape"], [89, 1, 1, "", "sample"], [89, 1, 1, "", "squeeze"], [89, 1, 1, "", "to"], [89, 1, 1, "", "to_numpy"], [89, 1, 1, "", "type_check"], [89, 1, 1, "", "unflatten"], [89, 1, 1, "", "unsqueeze"], [89, 1, 1, "", "view"], [89, 1, 1, "", "zero"], [89, 1, 1, "", "zeros"]], "torchrl.data.UnboundedDiscreteTensorSpec": [[90, 1, 1, "", "assert_is_in"], [90, 1, 1, "", "cardinality"], [90, 1, 1, "", "clear_device_"], [90, 1, 1, "", "clone"], [90, 1, 1, "", "contains"], [90, 1, 1, "", "cpu"], [90, 1, 1, "", "cuda"], [90, 2, 1, "", "device"], [90, 1, 1, "", "encode"], [90, 1, 1, "", "enumerate"], [90, 1, 1, "", "expand"], [90, 1, 1, "", "flatten"], [90, 1, 1, "", "implements_for_spec"], [90, 1, 1, "", "index"], [90, 1, 1, "", "is_in"], [90, 1, 1, "", "make_neg_dim"], [90, 2, 1, "", "ndim"], [90, 1, 1, "", "ndimension"], [90, 1, 1, "", "one"], [90, 1, 1, "", "ones"], [90, 1, 1, "", "project"], [90, 1, 1, "", "rand"], [90, 1, 1, "", "reshape"], [90, 1, 1, "", "sample"], [90, 1, 1, "", "squeeze"], [90, 1, 1, "", "to"], [90, 1, 1, "", "to_numpy"], [90, 1, 1, "", "type_check"], [90, 1, 1, "", "unflatten"], [90, 1, 1, "", "unsqueeze"], [90, 1, 1, "", "view"], [90, 1, 1, "", "zero"], [90, 1, 1, "", "zeros"]], "torchrl.data.replay_buffers": [[96, 0, 1, "", "FlatStorageCheckpointer"], [97, 0, 1, "", "H5StorageCheckpointer"], [98, 0, 1, "", "ImmutableDatasetWriter"], [99, 0, 1, "", "LazyMemmapStorage"], [100, 0, 1, "", "LazyStackStorage"], [101, 0, 1, "", "LazyTensorStorage"], [102, 0, 1, "", "ListStorage"], [103, 0, 1, "", "ListStorageCheckpointer"], [104, 0, 1, "", "NestedStorageCheckpointer"], [105, 0, 1, "", "PrioritizedSampler"], [106, 0, 1, "", "PrioritizedSliceSampler"], [107, 0, 1, "", "RandomSampler"], [108, 0, 1, "", "ReplayBufferEnsemble"], [109, 0, 1, "", "RoundRobinWriter"], [110, 0, 1, "", "Sampler"], [111, 0, 1, "", "SamplerEnsemble"], [112, 0, 1, "", "SamplerWithoutReplacement"], [113, 0, 1, "", "SliceSampler"], [114, 0, 1, "", "SliceSamplerWithoutReplacement"], [115, 0, 1, "", "Storage"], [116, 0, 1, "", "StorageCheckpointerBase"], [117, 0, 1, "", "StorageEnsemble"], [118, 0, 1, "", "StorageEnsembleCheckpointer"], [119, 0, 1, "", "TensorDictMaxValueWriter"], [120, 0, 1, "", "TensorDictRoundRobinWriter"], [121, 0, 1, "", "TensorStorage"], [122, 0, 1, "", "TensorStorageCheckpointer"], [123, 0, 1, "", "Writer"], [124, 0, 1, "", "WriterEnsemble"]], "torchrl.data.replay_buffers.ImmutableDatasetWriter": [[98, 1, 1, "", "add"], [98, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.LazyMemmapStorage": [[99, 1, 1, "", "attach"], [99, 1, 1, "", "dump"], [99, 1, 1, "", "load"], [99, 1, 1, "", "save"]], "torchrl.data.replay_buffers.LazyStackStorage": [[100, 1, 1, "", "attach"], [100, 1, 1, "", "dump"], [100, 1, 1, "", "load"], [100, 1, 1, "", "save"]], "torchrl.data.replay_buffers.LazyTensorStorage": [[101, 1, 1, "", "attach"], [101, 1, 1, "", "dump"], [101, 1, 1, "", "load"], [101, 1, 1, "", "save"]], "torchrl.data.replay_buffers.ListStorage": [[102, 1, 1, "", "attach"], [102, 1, 1, "", "dump"], [102, 1, 1, "", "load"], [102, 1, 1, "", "save"]], "torchrl.data.replay_buffers.PrioritizedSampler": [[105, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.PrioritizedSliceSampler": [[106, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.ReplayBufferEnsemble": [[108, 1, 1, "", "add"], [108, 1, 1, "", "append_transform"], [108, 1, 1, "", "as_remote"], [108, 1, 1, "", "dump"], [108, 1, 1, "", "dumps"], [108, 1, 1, "", "empty"], [108, 1, 1, "", "extend"], [108, 1, 1, "", "insert_transform"], [108, 1, 1, "", "load"], [108, 1, 1, "", "loads"], [108, 1, 1, "", "register_load_hook"], [108, 1, 1, "", "register_save_hook"], [108, 1, 1, "", "sample"], [108, 2, 1, "", "sampler"], [108, 1, 1, "", "save"], [108, 1, 1, "", "set_sampler"], [108, 1, 1, "", "set_storage"], [108, 1, 1, "", "set_writer"], [108, 2, 1, "", "storage"], [108, 2, 1, "", "write_count"], [108, 2, 1, "", "writer"]], "torchrl.data.replay_buffers.RoundRobinWriter": [[109, 1, 1, "", "add"], [109, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.Storage": [[115, 1, 1, "", "attach"], [115, 1, 1, "", "dump"], [115, 1, 1, "", "load"], [115, 1, 1, "", "save"]], "torchrl.data.replay_buffers.StorageEnsemble": [[117, 1, 1, "", "attach"], [117, 1, 1, "", "dump"], [117, 1, 1, "", "load"], [117, 1, 1, "", "save"]], "torchrl.data.replay_buffers.TensorDictMaxValueWriter": [[119, 1, 1, "", "add"], [119, 1, 1, "", "extend"], [119, 1, 1, "", "get_insert_index"]], "torchrl.data.replay_buffers.TensorDictRoundRobinWriter": [[120, 1, 1, "", "add"], [120, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.TensorStorage": [[121, 1, 1, "", "attach"], [121, 1, 1, "", "dump"], [121, 1, 1, "", "load"], [121, 1, 1, "", "save"]], "torchrl.data.replay_buffers.Writer": [[123, 1, 1, "", "add"], [123, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.WriterEnsemble": [[124, 1, 1, "", "add"], [124, 1, 1, "", "extend"]], "torchrl.envs": [[125, 0, 1, "", "AsyncEnvPool"], [126, 3, 1, "", "BraxEnv"], [127, 3, 1, "", "BraxWrapper"], [128, 0, 1, "", "ChessEnv"], [129, 3, 1, "", "DMControlEnv"], [130, 3, 1, "", "DMControlWrapper"], [131, 0, 1, "", "EnvBase"], [132, 0, 1, "", "EnvCreator"], [133, 0, 1, "", "EnvMetaData"], [134, 3, 1, "", "GymEnv"], [135, 0, 1, "", "GymLikeEnv"], [136, 3, 1, "", "GymWrapper"], [137, 3, 1, "", "HabitatEnv"], [138, 3, 1, "", "IsaacGymEnv"], [139, 3, 1, "", "IsaacGymWrapper"], [140, 3, 1, "", "JumanjiEnv"], [141, 3, 1, "", "JumanjiWrapper"], [142, 0, 1, "", "LLMEnv"], [143, 0, 1, "", "LLMHashingEnv"], [144, 3, 1, "", "MOGymEnv"], [145, 3, 1, "", "MOGymWrapper"], [146, 3, 1, "", "MarlGroupMapType"], [147, 3, 1, "", "MeltingpotEnv"], [148, 3, 1, "", "MeltingpotWrapper"], [149, 3, 1, "", "ModelBasedEnvBase"], [150, 3, 1, "", "MultiThreadedEnv"], [151, 3, 1, "", "MultiThreadedEnvWrapper"], [152, 3, 1, "", "OpenMLEnv"], [153, 3, 1, "", "OpenSpielEnv"], [154, 3, 1, "", "OpenSpielWrapper"], [155, 0, 1, "", "ParallelEnv"], [156, 0, 1, "", "PendulumEnv"], [157, 3, 1, "", "PettingZooEnv"], [158, 3, 1, "", "PettingZooWrapper"], [159, 0, 1, "", "ProcessorAsyncEnvPool"], [160, 3, 1, "", "RandomPolicy"], [161, 3, 1, "", "RoboHiveEnv"], [162, 3, 1, "", "SMACv2Env"], [163, 3, 1, "", "SMACv2Wrapper"], [164, 0, 1, "", "SerialEnv"], [165, 0, 1, "", "ThreadingAsyncEnvPool"], [166, 0, 1, "", "TicTacToeEnv"], [167, 3, 1, "", "UnityMLAgentsEnv"], [168, 3, 1, "", "UnityMLAgentsWrapper"], [169, 3, 1, "", "VmasEnv"], [170, 3, 1, "", "VmasWrapper"], [171, 3, 1, "", "check_env_specs"], [172, 3, 1, "", "check_marl_grouping"], [173, 3, 1, "", "exploration_type"], [174, 3, 1, "", "get_available_libraries"], [175, 3, 1, "", "gym_backend"], [176, 3, 1, "", "make_composite_from_td"], [149, 1, 1, "", "rand_step"], [179, 3, 1, "", "register_gym_spec_conversion"], [149, 1, 1, "", "reset"], [149, 1, 1, "", "rollout"], [180, 3, 1, "", "set_exploration_type"], [181, 3, 1, "", "set_gym_backend"], [149, 1, 1, "", "set_seed"], [149, 1, 1, "", "step"], [182, 3, 1, "", "step_mdp"], [183, 3, 1, "", "terminated_or_truncated"]], "torchrl.envs.AsyncEnvPool": [[125, 2, 1, "", "action_key"], [125, 2, 1, "", "action_keys"], [125, 2, 1, "", "action_spec"], [125, 2, 1, "", "action_spec_unbatched"], [125, 1, 1, "", "add_module"], [125, 1, 1, "", "add_truncated_keys"], [125, 1, 1, "", "all_actions"], [125, 1, 1, "", "any_done"], [125, 1, 1, "", "append_transform"], [125, 1, 1, "", "apply"], [125, 1, 1, "", "auto_specs_"], [125, 2, 1, "", "batch_dims"], [125, 2, 1, "", "batch_locked"], [125, 2, 1, "", "batch_size"], [125, 1, 1, "", "bfloat16"], [125, 1, 1, "", "buffers"], [125, 1, 1, "", "cardinality"], [125, 1, 1, "", "check_env_specs"], [125, 1, 1, "", "children"], [125, 1, 1, "", "compile"], [125, 1, 1, "", "cpu"], [125, 1, 1, "", "cuda"], [125, 2, 1, "", "done_key"], [125, 2, 1, "", "done_keys"], [125, 2, 1, "", "done_keys_groups"], [125, 2, 1, "", "done_spec"], [125, 2, 1, "", "done_spec_unbatched"], [125, 1, 1, "", "double"], [125, 1, 1, "", "empty_cache"], [125, 1, 1, "", "eval"], [125, 1, 1, "", "extra_repr"], [125, 1, 1, "", "fake_tensordict"], [125, 1, 1, "", "float"], [125, 1, 1, "", "forward"], [125, 2, 1, "", "full_action_spec"], [125, 2, 1, "", "full_action_spec_unbatched"], [125, 2, 1, "", "full_done_spec"], [125, 2, 1, "", "full_done_spec_unbatched"], [125, 2, 1, "", "full_observation_spec_unbatched"], [125, 2, 1, "", "full_reward_spec"], [125, 2, 1, "", "full_reward_spec_unbatched"], [125, 2, 1, "", "full_state_spec"], [125, 2, 1, "", "full_state_spec_unbatched"], [125, 1, 1, "", "get_buffer"], [125, 1, 1, "", "get_extra_state"], [125, 1, 1, "", "get_parameter"], [125, 1, 1, "", "get_submodule"], [125, 1, 1, "", "half"], [125, 2, 1, "", "input_spec"], [125, 2, 1, "", "input_spec_unbatched"], [125, 1, 1, "", "ipu"], [125, 2, 1, "", "is_spec_locked"], [125, 1, 1, "", "load_state_dict"], [125, 1, 1, "", "maybe_reset"], [125, 1, 1, "", "modules"], [125, 1, 1, "", "mtia"], [125, 1, 1, "", "named_buffers"], [125, 1, 1, "", "named_children"], [125, 1, 1, "", "named_modules"], [125, 1, 1, "", "named_parameters"], [125, 2, 1, "", "observation_keys"], [125, 2, 1, "", "observation_spec"], [125, 2, 1, "", "observation_spec_unbatched"], [125, 2, 1, "", "output_spec"], [125, 2, 1, "", "output_spec_unbatched"], [125, 1, 1, "", "parameters"], [125, 1, 1, "", "rand_action"], [125, 1, 1, "", "rand_step"], [125, 1, 1, "", "register_backward_hook"], [125, 1, 1, "", "register_buffer"], [125, 1, 1, "", "register_forward_hook"], [125, 1, 1, "", "register_forward_pre_hook"], [125, 1, 1, "", "register_full_backward_hook"], [125, 1, 1, "", "register_full_backward_pre_hook"], [125, 1, 1, "", "register_gym"], [125, 1, 1, "", "register_load_state_dict_post_hook"], [125, 1, 1, "", "register_load_state_dict_pre_hook"], [125, 1, 1, "", "register_module"], [125, 1, 1, "", "register_parameter"], [125, 1, 1, "", "register_state_dict_post_hook"], [125, 1, 1, "", "register_state_dict_pre_hook"], [125, 1, 1, "", "requires_grad_"], [125, 1, 1, "", "reset"], [125, 2, 1, "", "reset_keys"], [125, 2, 1, "", "reward_key"], [125, 2, 1, "", "reward_keys"], [125, 2, 1, "", "reward_spec"], [125, 2, 1, "", "reward_spec_unbatched"], [125, 1, 1, "", "rollout"], [125, 1, 1, "", "set_extra_state"], [125, 1, 1, "", "set_seed"], [125, 1, 1, "", "set_spec_lock_"], [125, 1, 1, "", "set_submodule"], [125, 2, 1, "", "shape"], [125, 1, 1, "", "share_memory"], [125, 2, 1, "", "specs"], [125, 1, 1, "", "state_dict"], [125, 2, 1, "", "state_keys"], [125, 2, 1, "", "state_spec"], [125, 2, 1, "", "state_spec_unbatched"], [125, 1, 1, "", "step"], [125, 1, 1, "", "step_and_maybe_reset"], [125, 1, 1, "", "step_mdp"], [125, 1, 1, "", "to"], [125, 1, 1, "", "to_empty"], [125, 1, 1, "", "train"], [125, 1, 1, "", "type"], [125, 1, 1, "", "xpu"], [125, 1, 1, "", "zero_grad"]], "torchrl.envs.ChessEnv": [[128, 2, 1, "", "action_key"], [128, 2, 1, "", "action_keys"], [128, 2, 1, "", "action_spec"], [128, 2, 1, "", "action_spec_unbatched"], [128, 1, 1, "", "add_module"], [128, 1, 1, "", "add_truncated_keys"], [128, 1, 1, "", "all_actions"], [128, 1, 1, "", "any_done"], [128, 1, 1, "", "append_transform"], [128, 1, 1, "", "apply"], [128, 1, 1, "", "auto_specs_"], [128, 2, 1, "", "batch_dims"], [128, 2, 1, "", "batch_locked"], [128, 2, 1, "", "batch_size"], [128, 1, 1, "", "bfloat16"], [128, 1, 1, "", "buffers"], [128, 1, 1, "", "cardinality"], [128, 1, 1, "", "check_env_specs"], [128, 1, 1, "", "children"], [128, 1, 1, "", "compile"], [128, 1, 1, "", "cpu"], [128, 1, 1, "", "cuda"], [128, 2, 1, "", "done_key"], [128, 2, 1, "", "done_keys"], [128, 2, 1, "", "done_keys_groups"], [128, 2, 1, "", "done_spec"], [128, 2, 1, "", "done_spec_unbatched"], [128, 1, 1, "", "double"], [128, 1, 1, "", "empty_cache"], [128, 1, 1, "", "eval"], [128, 1, 1, "", "extra_repr"], [128, 1, 1, "", "fake_tensordict"], [128, 1, 1, "", "float"], [128, 1, 1, "", "forward"], [128, 2, 1, "", "full_action_spec"], [128, 2, 1, "", "full_action_spec_unbatched"], [128, 2, 1, "", "full_done_spec"], [128, 2, 1, "", "full_done_spec_unbatched"], [128, 2, 1, "", "full_observation_spec_unbatched"], [128, 2, 1, "", "full_reward_spec"], [128, 2, 1, "", "full_reward_spec_unbatched"], [128, 2, 1, "", "full_state_spec"], [128, 2, 1, "", "full_state_spec_unbatched"], [128, 1, 1, "", "get_buffer"], [128, 1, 1, "", "get_extra_state"], [128, 1, 1, "", "get_legal_moves"], [128, 1, 1, "", "get_parameter"], [128, 1, 1, "", "get_submodule"], [128, 1, 1, "", "half"], [128, 2, 1, "", "input_spec"], [128, 2, 1, "", "input_spec_unbatched"], [128, 1, 1, "", "ipu"], [128, 2, 1, "", "is_spec_locked"], [128, 1, 1, "", "load_state_dict"], [128, 1, 1, "", "maybe_reset"], [128, 1, 1, "", "modules"], [128, 1, 1, "", "mtia"], [128, 1, 1, "", "named_buffers"], [128, 1, 1, "", "named_children"], [128, 1, 1, "", "named_modules"], [128, 1, 1, "", "named_parameters"], [128, 2, 1, "", "observation_keys"], [128, 2, 1, "", "observation_spec"], [128, 2, 1, "", "observation_spec_unbatched"], [128, 2, 1, "", "output_spec"], [128, 2, 1, "", "output_spec_unbatched"], [128, 1, 1, "", "parameters"], [128, 1, 1, "", "rand_action"], [128, 1, 1, "", "rand_step"], [128, 1, 1, "", "register_backward_hook"], [128, 1, 1, "", "register_buffer"], [128, 1, 1, "", "register_forward_hook"], [128, 1, 1, "", "register_forward_pre_hook"], [128, 1, 1, "", "register_full_backward_hook"], [128, 1, 1, "", "register_full_backward_pre_hook"], [128, 1, 1, "", "register_gym"], [128, 1, 1, "", "register_load_state_dict_post_hook"], [128, 1, 1, "", "register_load_state_dict_pre_hook"], [128, 1, 1, "", "register_module"], [128, 1, 1, "", "register_parameter"], [128, 1, 1, "", "register_state_dict_post_hook"], [128, 1, 1, "", "register_state_dict_pre_hook"], [128, 1, 1, "", "requires_grad_"], [128, 1, 1, "", "reset"], [128, 2, 1, "", "reset_keys"], [128, 2, 1, "", "reward_key"], [128, 2, 1, "", "reward_keys"], [128, 2, 1, "", "reward_spec"], [128, 2, 1, "", "reward_spec_unbatched"], [128, 1, 1, "", "rollout"], [128, 1, 1, "", "set_extra_state"], [128, 1, 1, "", "set_seed"], [128, 1, 1, "", "set_spec_lock_"], [128, 1, 1, "", "set_submodule"], [128, 2, 1, "", "shape"], [128, 1, 1, "", "share_memory"], [128, 2, 1, "", "specs"], [128, 1, 1, "", "state_dict"], [128, 2, 1, "", "state_keys"], [128, 2, 1, "", "state_spec"], [128, 2, 1, "", "state_spec_unbatched"], [128, 1, 1, "", "step"], [128, 1, 1, "", "step_and_maybe_reset"], [128, 1, 1, "", "step_mdp"], [128, 1, 1, "", "to"], [128, 1, 1, "", "to_empty"], [128, 1, 1, "", "train"], [128, 1, 1, "", "type"], [128, 1, 1, "", "xpu"], [128, 1, 1, "", "zero_grad"]], "torchrl.envs.EnvBase": [[131, 2, 1, "", "action_key"], [131, 2, 1, "", "action_keys"], [131, 2, 1, "", "action_spec"], [131, 2, 1, "", "action_spec_unbatched"], [131, 1, 1, "", "add_module"], [131, 1, 1, "", "add_truncated_keys"], [131, 1, 1, "", "all_actions"], [131, 1, 1, "", "any_done"], [131, 1, 1, "", "append_transform"], [131, 1, 1, "", "apply"], [131, 1, 1, "", "auto_specs_"], [131, 2, 1, "", "batch_dims"], [131, 2, 1, "", "batch_locked"], [131, 2, 1, "", "batch_size"], [131, 1, 1, "", "bfloat16"], [131, 1, 1, "", "buffers"], [131, 1, 1, "", "cardinality"], [131, 1, 1, "", "check_env_specs"], [131, 1, 1, "", "children"], [131, 1, 1, "", "compile"], [131, 1, 1, "", "cpu"], [131, 1, 1, "", "cuda"], [131, 2, 1, "", "done_key"], [131, 2, 1, "", "done_keys"], [131, 2, 1, "", "done_keys_groups"], [131, 2, 1, "", "done_spec"], [131, 2, 1, "", "done_spec_unbatched"], [131, 1, 1, "", "double"], [131, 1, 1, "", "empty_cache"], [131, 1, 1, "", "eval"], [131, 1, 1, "", "extra_repr"], [131, 1, 1, "", "fake_tensordict"], [131, 1, 1, "", "float"], [131, 1, 1, "", "forward"], [131, 2, 1, "", "full_action_spec"], [131, 2, 1, "", "full_action_spec_unbatched"], [131, 2, 1, "", "full_done_spec"], [131, 2, 1, "", "full_done_spec_unbatched"], [131, 2, 1, "", "full_observation_spec_unbatched"], [131, 2, 1, "", "full_reward_spec"], [131, 2, 1, "", "full_reward_spec_unbatched"], [131, 2, 1, "", "full_state_spec"], [131, 2, 1, "", "full_state_spec_unbatched"], [131, 1, 1, "", "get_buffer"], [131, 1, 1, "", "get_extra_state"], [131, 1, 1, "", "get_parameter"], [131, 1, 1, "", "get_submodule"], [131, 1, 1, "", "half"], [131, 2, 1, "", "input_spec"], [131, 2, 1, "", "input_spec_unbatched"], [131, 1, 1, "", "ipu"], [131, 2, 1, "", "is_spec_locked"], [131, 1, 1, "", "load_state_dict"], [131, 1, 1, "", "maybe_reset"], [131, 1, 1, "", "modules"], [131, 1, 1, "", "mtia"], [131, 1, 1, "", "named_buffers"], [131, 1, 1, "", "named_children"], [131, 1, 1, "", "named_modules"], [131, 1, 1, "", "named_parameters"], [131, 2, 1, "", "observation_keys"], [131, 2, 1, "", "observation_spec"], [131, 2, 1, "", "observation_spec_unbatched"], [131, 2, 1, "", "output_spec"], [131, 2, 1, "", "output_spec_unbatched"], [131, 1, 1, "", "parameters"], [131, 1, 1, "", "rand_action"], [131, 1, 1, "id0", "rand_step"], [131, 1, 1, "", "register_backward_hook"], [131, 1, 1, "", "register_buffer"], [131, 1, 1, "", "register_forward_hook"], [131, 1, 1, "", "register_forward_pre_hook"], [131, 1, 1, "", "register_full_backward_hook"], [131, 1, 1, "", "register_full_backward_pre_hook"], [131, 1, 1, "", "register_gym"], [131, 1, 1, "", "register_load_state_dict_post_hook"], [131, 1, 1, "", "register_load_state_dict_pre_hook"], [131, 1, 1, "", "register_module"], [131, 1, 1, "", "register_parameter"], [131, 1, 1, "", "register_state_dict_post_hook"], [131, 1, 1, "", "register_state_dict_pre_hook"], [131, 1, 1, "", "requires_grad_"], [131, 1, 1, "id1", "reset"], [131, 2, 1, "", "reset_keys"], [131, 2, 1, "", "reward_key"], [131, 2, 1, "", "reward_keys"], [131, 2, 1, "", "reward_spec"], [131, 2, 1, "", "reward_spec_unbatched"], [131, 1, 1, "id2", "rollout"], [131, 1, 1, "", "set_extra_state"], [131, 1, 1, "id3", "set_seed"], [131, 1, 1, "", "set_spec_lock_"], [131, 1, 1, "", "set_submodule"], [131, 2, 1, "", "shape"], [131, 1, 1, "", "share_memory"], [131, 2, 1, "", "specs"], [131, 1, 1, "", "state_dict"], [131, 2, 1, "", "state_keys"], [131, 2, 1, "", "state_spec"], [131, 2, 1, "", "state_spec_unbatched"], [131, 1, 1, "id4", "step"], [131, 1, 1, "", "step_and_maybe_reset"], [131, 1, 1, "", "step_mdp"], [131, 1, 1, "", "to"], [131, 1, 1, "", "to_empty"], [131, 1, 1, "", "train"], [131, 1, 1, "", "type"], [131, 1, 1, "", "xpu"], [131, 1, 1, "", "zero_grad"]], "torchrl.envs.EnvCreator": [[132, 1, 1, "", "make_variant"]], "torchrl.envs.GymLikeEnv": [[135, 2, 1, "", "action_key"], [135, 2, 1, "", "action_keys"], [135, 2, 1, "", "action_spec"], [135, 2, 1, "", "action_spec_unbatched"], [135, 1, 1, "", "add_module"], [135, 1, 1, "", "add_truncated_keys"], [135, 1, 1, "", "all_actions"], [135, 1, 1, "", "any_done"], [135, 1, 1, "", "append_transform"], [135, 1, 1, "", "apply"], [135, 1, 1, "", "auto_register_info_dict"], [135, 1, 1, "", "auto_specs_"], [135, 2, 1, "", "batch_dims"], [135, 2, 1, "", "batch_locked"], [135, 2, 1, "", "batch_size"], [135, 1, 1, "", "bfloat16"], [135, 1, 1, "", "buffers"], [135, 1, 1, "", "cardinality"], [135, 1, 1, "", "check_env_specs"], [135, 1, 1, "", "children"], [135, 1, 1, "", "close"], [135, 1, 1, "", "compile"], [135, 1, 1, "", "cpu"], [135, 1, 1, "", "cuda"], [135, 2, 1, "", "done_key"], [135, 2, 1, "", "done_keys"], [135, 2, 1, "", "done_keys_groups"], [135, 2, 1, "", "done_spec"], [135, 2, 1, "", "done_spec_unbatched"], [135, 1, 1, "", "double"], [135, 1, 1, "", "empty_cache"], [135, 1, 1, "", "eval"], [135, 1, 1, "", "extra_repr"], [135, 1, 1, "", "fake_tensordict"], [135, 1, 1, "", "float"], [135, 1, 1, "", "forward"], [135, 2, 1, "", "full_action_spec"], [135, 2, 1, "", "full_action_spec_unbatched"], [135, 2, 1, "", "full_done_spec"], [135, 2, 1, "", "full_done_spec_unbatched"], [135, 2, 1, "", "full_observation_spec_unbatched"], [135, 2, 1, "", "full_reward_spec"], [135, 2, 1, "", "full_reward_spec_unbatched"], [135, 2, 1, "", "full_state_spec"], [135, 2, 1, "", "full_state_spec_unbatched"], [135, 1, 1, "", "get_buffer"], [135, 1, 1, "", "get_extra_state"], [135, 1, 1, "", "get_parameter"], [135, 1, 1, "", "get_submodule"], [135, 1, 1, "", "half"], [135, 2, 1, "", "input_spec"], [135, 2, 1, "", "input_spec_unbatched"], [135, 1, 1, "", "ipu"], [135, 2, 1, "", "is_spec_locked"], [135, 1, 1, "", "load_state_dict"], [135, 1, 1, "", "maybe_reset"], [135, 1, 1, "", "modules"], [135, 1, 1, "", "mtia"], [135, 1, 1, "", "named_buffers"], [135, 1, 1, "", "named_children"], [135, 1, 1, "", "named_modules"], [135, 1, 1, "", "named_parameters"], [135, 2, 1, "", "observation_keys"], [135, 2, 1, "", "observation_spec"], [135, 2, 1, "", "observation_spec_unbatched"], [135, 2, 1, "", "output_spec"], [135, 2, 1, "", "output_spec_unbatched"], [135, 1, 1, "", "parameters"], [135, 1, 1, "", "rand_action"], [135, 1, 1, "", "rand_step"], [135, 1, 1, "", "read_action"], [135, 1, 1, "", "read_done"], [135, 1, 1, "", "read_obs"], [135, 1, 1, "", "read_reward"], [135, 1, 1, "", "register_backward_hook"], [135, 1, 1, "", "register_buffer"], [135, 1, 1, "", "register_forward_hook"], [135, 1, 1, "", "register_forward_pre_hook"], [135, 1, 1, "", "register_full_backward_hook"], [135, 1, 1, "", "register_full_backward_pre_hook"], [135, 1, 1, "", "register_gym"], [135, 1, 1, "", "register_load_state_dict_post_hook"], [135, 1, 1, "", "register_load_state_dict_pre_hook"], [135, 1, 1, "", "register_module"], [135, 1, 1, "", "register_parameter"], [135, 1, 1, "", "register_state_dict_post_hook"], [135, 1, 1, "", "register_state_dict_pre_hook"], [135, 1, 1, "", "requires_grad_"], [135, 1, 1, "", "reset"], [135, 2, 1, "", "reset_keys"], [135, 2, 1, "", "reward_key"], [135, 2, 1, "", "reward_keys"], [135, 2, 1, "", "reward_spec"], [135, 2, 1, "", "reward_spec_unbatched"], [135, 1, 1, "", "rollout"], [135, 1, 1, "", "set_extra_state"], [135, 1, 1, "", "set_info_dict_reader"], [135, 1, 1, "", "set_seed"], [135, 1, 1, "", "set_spec_lock_"], [135, 1, 1, "", "set_submodule"], [135, 2, 1, "", "shape"], [135, 1, 1, "", "share_memory"], [135, 2, 1, "", "specs"], [135, 1, 1, "", "state_dict"], [135, 2, 1, "", "state_keys"], [135, 2, 1, "", "state_spec"], [135, 2, 1, "", "state_spec_unbatched"], [135, 1, 1, "", "step"], [135, 1, 1, "", "step_and_maybe_reset"], [135, 1, 1, "", "step_mdp"], [135, 1, 1, "", "to"], [135, 1, 1, "", "to_empty"], [135, 1, 1, "", "train"], [135, 1, 1, "", "type"], [135, 1, 1, "", "xpu"], [135, 1, 1, "", "zero_grad"]], "torchrl.envs.LLMEnv": [[142, 2, 1, "", "action_key"], [142, 2, 1, "", "action_keys"], [142, 2, 1, "", "action_spec"], [142, 2, 1, "", "action_spec_unbatched"], [142, 1, 1, "", "add_module"], [142, 1, 1, "", "add_truncated_keys"], [142, 1, 1, "", "all_actions"], [142, 1, 1, "", "any_done"], [142, 1, 1, "", "append_transform"], [142, 1, 1, "", "apply"], [142, 1, 1, "", "auto_specs_"], [142, 2, 1, "", "batch_dims"], [142, 2, 1, "", "batch_locked"], [142, 2, 1, "", "batch_size"], [142, 1, 1, "", "bfloat16"], [142, 1, 1, "", "buffers"], [142, 1, 1, "", "cardinality"], [142, 1, 1, "", "check_env_specs"], [142, 1, 1, "", "children"], [142, 1, 1, "", "compile"], [142, 1, 1, "", "cpu"], [142, 1, 1, "", "cuda"], [142, 2, 1, "", "done_key"], [142, 2, 1, "", "done_keys"], [142, 2, 1, "", "done_keys_groups"], [142, 2, 1, "", "done_spec"], [142, 2, 1, "", "done_spec_unbatched"], [142, 1, 1, "", "double"], [142, 1, 1, "", "empty_cache"], [142, 1, 1, "", "eval"], [142, 1, 1, "", "extra_repr"], [142, 1, 1, "", "fake_tensordict"], [142, 1, 1, "", "float"], [142, 1, 1, "", "forward"], [142, 1, 1, "id0", "from_dataloader"], [142, 2, 1, "", "full_action_spec"], [142, 2, 1, "", "full_action_spec_unbatched"], [142, 2, 1, "", "full_done_spec"], [142, 2, 1, "", "full_done_spec_unbatched"], [142, 2, 1, "", "full_observation_spec_unbatched"], [142, 2, 1, "", "full_reward_spec"], [142, 2, 1, "", "full_reward_spec_unbatched"], [142, 2, 1, "", "full_state_spec"], [142, 2, 1, "", "full_state_spec_unbatched"], [142, 1, 1, "", "get_buffer"], [142, 1, 1, "", "get_extra_state"], [142, 1, 1, "", "get_parameter"], [142, 1, 1, "", "get_submodule"], [142, 1, 1, "", "half"], [142, 2, 1, "", "input_spec"], [142, 2, 1, "", "input_spec_unbatched"], [142, 1, 1, "", "ipu"], [142, 2, 1, "", "is_spec_locked"], [142, 1, 1, "", "load_state_dict"], [142, 1, 1, "", "maybe_reset"], [142, 1, 1, "", "modules"], [142, 1, 1, "", "mtia"], [142, 1, 1, "", "named_buffers"], [142, 1, 1, "", "named_children"], [142, 1, 1, "", "named_modules"], [142, 1, 1, "", "named_parameters"], [142, 2, 1, "", "observation_keys"], [142, 2, 1, "", "observation_spec"], [142, 2, 1, "", "observation_spec_unbatched"], [142, 2, 1, "", "output_spec"], [142, 2, 1, "", "output_spec_unbatched"], [142, 1, 1, "", "parameters"], [142, 1, 1, "", "rand_action"], [142, 1, 1, "", "rand_step"], [142, 1, 1, "", "register_backward_hook"], [142, 1, 1, "", "register_buffer"], [142, 1, 1, "", "register_forward_hook"], [142, 1, 1, "", "register_forward_pre_hook"], [142, 1, 1, "", "register_full_backward_hook"], [142, 1, 1, "", "register_full_backward_pre_hook"], [142, 1, 1, "", "register_gym"], [142, 1, 1, "", "register_load_state_dict_post_hook"], [142, 1, 1, "", "register_load_state_dict_pre_hook"], [142, 1, 1, "", "register_module"], [142, 1, 1, "", "register_parameter"], [142, 1, 1, "", "register_state_dict_post_hook"], [142, 1, 1, "", "register_state_dict_pre_hook"], [142, 1, 1, "", "requires_grad_"], [142, 1, 1, "", "reset"], [142, 2, 1, "", "reset_keys"], [142, 2, 1, "", "reward_key"], [142, 2, 1, "", "reward_keys"], [142, 2, 1, "", "reward_spec"], [142, 2, 1, "", "reward_spec_unbatched"], [142, 1, 1, "", "rollout"], [142, 1, 1, "", "set_extra_state"], [142, 1, 1, "", "set_seed"], [142, 1, 1, "", "set_spec_lock_"], [142, 1, 1, "", "set_submodule"], [142, 2, 1, "", "shape"], [142, 1, 1, "", "share_memory"], [142, 2, 1, "", "specs"], [142, 1, 1, "", "state_dict"], [142, 2, 1, "", "state_keys"], [142, 2, 1, "", "state_spec"], [142, 2, 1, "", "state_spec_unbatched"], [142, 1, 1, "", "step"], [142, 1, 1, "", "step_and_maybe_reset"], [142, 1, 1, "", "step_mdp"], [142, 1, 1, "", "to"], [142, 1, 1, "", "to_empty"], [142, 1, 1, "", "train"], [142, 1, 1, "", "type"], [142, 1, 1, "", "xpu"], [142, 1, 1, "", "zero_grad"]], "torchrl.envs.LLMHashingEnv": [[143, 2, 1, "", "action_key"], [143, 2, 1, "", "action_keys"], [143, 2, 1, "", "action_spec"], [143, 2, 1, "", "action_spec_unbatched"], [143, 1, 1, "", "add_module"], [143, 1, 1, "", "add_truncated_keys"], [143, 1, 1, "", "all_actions"], [143, 1, 1, "", "any_done"], [143, 1, 1, "", "append_transform"], [143, 1, 1, "", "apply"], [143, 1, 1, "", "auto_specs_"], [143, 2, 1, "", "batch_dims"], [143, 2, 1, "", "batch_locked"], [143, 2, 1, "", "batch_size"], [143, 1, 1, "", "bfloat16"], [143, 1, 1, "", "buffers"], [143, 1, 1, "", "cardinality"], [143, 1, 1, "", "check_env_specs"], [143, 1, 1, "", "children"], [143, 1, 1, "", "compile"], [143, 1, 1, "", "cpu"], [143, 1, 1, "", "cuda"], [143, 2, 1, "", "done_key"], [143, 2, 1, "", "done_keys"], [143, 2, 1, "", "done_keys_groups"], [143, 2, 1, "", "done_spec"], [143, 2, 1, "", "done_spec_unbatched"], [143, 1, 1, "", "double"], [143, 1, 1, "", "empty_cache"], [143, 1, 1, "", "eval"], [143, 1, 1, "", "extra_repr"], [143, 1, 1, "", "fake_tensordict"], [143, 1, 1, "", "float"], [143, 1, 1, "", "forward"], [143, 2, 1, "", "full_action_spec"], [143, 2, 1, "", "full_action_spec_unbatched"], [143, 2, 1, "", "full_done_spec"], [143, 2, 1, "", "full_done_spec_unbatched"], [143, 2, 1, "", "full_observation_spec_unbatched"], [143, 2, 1, "", "full_reward_spec"], [143, 2, 1, "", "full_reward_spec_unbatched"], [143, 2, 1, "", "full_state_spec"], [143, 2, 1, "", "full_state_spec_unbatched"], [143, 1, 1, "", "get_buffer"], [143, 1, 1, "", "get_extra_state"], [143, 1, 1, "", "get_parameter"], [143, 1, 1, "", "get_submodule"], [143, 1, 1, "", "half"], [143, 2, 1, "", "input_spec"], [143, 2, 1, "", "input_spec_unbatched"], [143, 1, 1, "", "ipu"], [143, 2, 1, "", "is_spec_locked"], [143, 1, 1, "", "load_state_dict"], [143, 1, 1, "", "make_tensordict"], [143, 1, 1, "", "maybe_reset"], [143, 1, 1, "", "modules"], [143, 1, 1, "", "mtia"], [143, 1, 1, "", "named_buffers"], [143, 1, 1, "", "named_children"], [143, 1, 1, "", "named_modules"], [143, 1, 1, "", "named_parameters"], [143, 2, 1, "", "observation_keys"], [143, 2, 1, "", "observation_spec"], [143, 2, 1, "", "observation_spec_unbatched"], [143, 2, 1, "", "output_spec"], [143, 2, 1, "", "output_spec_unbatched"], [143, 1, 1, "", "parameters"], [143, 1, 1, "", "rand_action"], [143, 1, 1, "", "rand_step"], [143, 1, 1, "", "register_backward_hook"], [143, 1, 1, "", "register_buffer"], [143, 1, 1, "", "register_forward_hook"], [143, 1, 1, "", "register_forward_pre_hook"], [143, 1, 1, "", "register_full_backward_hook"], [143, 1, 1, "", "register_full_backward_pre_hook"], [143, 1, 1, "", "register_gym"], [143, 1, 1, "", "register_load_state_dict_post_hook"], [143, 1, 1, "", "register_load_state_dict_pre_hook"], [143, 1, 1, "", "register_module"], [143, 1, 1, "", "register_parameter"], [143, 1, 1, "", "register_state_dict_post_hook"], [143, 1, 1, "", "register_state_dict_pre_hook"], [143, 1, 1, "", "requires_grad_"], [143, 1, 1, "", "reset"], [143, 2, 1, "", "reset_keys"], [143, 2, 1, "", "reward_key"], [143, 2, 1, "", "reward_keys"], [143, 2, 1, "", "reward_spec"], [143, 2, 1, "", "reward_spec_unbatched"], [143, 1, 1, "", "rollout"], [143, 1, 1, "", "set_extra_state"], [143, 1, 1, "", "set_seed"], [143, 1, 1, "", "set_spec_lock_"], [143, 1, 1, "", "set_submodule"], [143, 2, 1, "", "shape"], [143, 1, 1, "", "share_memory"], [143, 2, 1, "", "specs"], [143, 1, 1, "", "state_dict"], [143, 2, 1, "", "state_keys"], [143, 2, 1, "", "state_spec"], [143, 2, 1, "", "state_spec_unbatched"], [143, 1, 1, "", "step"], [143, 1, 1, "", "step_and_maybe_reset"], [143, 1, 1, "", "step_mdp"], [143, 1, 1, "", "to"], [143, 1, 1, "", "to_empty"], [143, 1, 1, "", "train"], [143, 1, 1, "", "type"], [143, 1, 1, "", "xpu"], [143, 1, 1, "", "zero_grad"]], "torchrl.envs.ParallelEnv": [[155, 2, 1, "", "action_key"], [155, 2, 1, "", "action_keys"], [155, 2, 1, "", "action_spec"], [155, 2, 1, "", "action_spec_unbatched"], [155, 1, 1, "", "add_module"], [155, 1, 1, "", "add_truncated_keys"], [155, 1, 1, "", "all_actions"], [155, 1, 1, "", "any_done"], [155, 1, 1, "", "append_transform"], [155, 1, 1, "", "apply"], [155, 1, 1, "", "auto_specs_"], [155, 2, 1, "", "batch_dims"], [155, 2, 1, "", "batch_locked"], [155, 2, 1, "", "batch_size"], [155, 1, 1, "", "bfloat16"], [155, 1, 1, "", "buffers"], [155, 1, 1, "", "cardinality"], [155, 1, 1, "", "check_env_specs"], [155, 1, 1, "", "children"], [155, 1, 1, "", "compile"], [155, 1, 1, "", "cpu"], [155, 1, 1, "", "cuda"], [155, 2, 1, "", "done_key"], [155, 2, 1, "", "done_keys"], [155, 2, 1, "", "done_keys_groups"], [155, 2, 1, "", "done_spec"], [155, 2, 1, "", "done_spec_unbatched"], [155, 1, 1, "", "double"], [155, 1, 1, "", "empty_cache"], [155, 1, 1, "", "eval"], [155, 1, 1, "", "extra_repr"], [155, 1, 1, "", "fake_tensordict"], [155, 1, 1, "", "float"], [155, 1, 1, "", "forward"], [155, 2, 1, "", "full_action_spec"], [155, 2, 1, "", "full_action_spec_unbatched"], [155, 2, 1, "", "full_done_spec"], [155, 2, 1, "", "full_done_spec_unbatched"], [155, 2, 1, "", "full_observation_spec_unbatched"], [155, 2, 1, "", "full_reward_spec"], [155, 2, 1, "", "full_reward_spec_unbatched"], [155, 2, 1, "", "full_state_spec"], [155, 2, 1, "", "full_state_spec_unbatched"], [155, 1, 1, "", "get_buffer"], [155, 1, 1, "", "get_extra_state"], [155, 1, 1, "", "get_parameter"], [155, 1, 1, "", "get_submodule"], [155, 1, 1, "", "half"], [155, 2, 1, "", "input_spec"], [155, 2, 1, "", "input_spec_unbatched"], [155, 1, 1, "", "ipu"], [155, 2, 1, "", "is_spec_locked"], [155, 1, 1, "", "load_state_dict"], [155, 1, 1, "", "maybe_reset"], [155, 1, 1, "", "modules"], [155, 1, 1, "", "mtia"], [155, 1, 1, "", "named_buffers"], [155, 1, 1, "", "named_children"], [155, 1, 1, "", "named_modules"], [155, 1, 1, "", "named_parameters"], [155, 2, 1, "", "observation_keys"], [155, 2, 1, "", "observation_spec"], [155, 2, 1, "", "observation_spec_unbatched"], [155, 2, 1, "", "output_spec"], [155, 2, 1, "", "output_spec_unbatched"], [155, 1, 1, "", "parameters"], [155, 1, 1, "", "rand_action"], [155, 1, 1, "", "rand_step"], [155, 1, 1, "", "register_backward_hook"], [155, 1, 1, "", "register_buffer"], [155, 1, 1, "", "register_forward_hook"], [155, 1, 1, "", "register_forward_pre_hook"], [155, 1, 1, "", "register_full_backward_hook"], [155, 1, 1, "", "register_full_backward_pre_hook"], [155, 1, 1, "", "register_gym"], [155, 1, 1, "", "register_load_state_dict_post_hook"], [155, 1, 1, "", "register_load_state_dict_pre_hook"], [155, 1, 1, "", "register_module"], [155, 1, 1, "", "register_parameter"], [155, 1, 1, "", "register_state_dict_post_hook"], [155, 1, 1, "", "register_state_dict_pre_hook"], [155, 1, 1, "", "requires_grad_"], [155, 1, 1, "", "reset"], [155, 2, 1, "", "reset_keys"], [155, 2, 1, "", "reward_key"], [155, 2, 1, "", "reward_keys"], [155, 2, 1, "", "reward_spec"], [155, 2, 1, "", "reward_spec_unbatched"], [155, 1, 1, "", "rollout"], [155, 1, 1, "", "set_extra_state"], [155, 1, 1, "", "set_seed"], [155, 1, 1, "", "set_spec_lock_"], [155, 1, 1, "", "set_submodule"], [155, 2, 1, "", "shape"], [155, 1, 1, "", "share_memory"], [155, 2, 1, "", "specs"], [155, 1, 1, "", "state_dict"], [155, 2, 1, "", "state_keys"], [155, 2, 1, "", "state_spec"], [155, 2, 1, "", "state_spec_unbatched"], [155, 1, 1, "", "step"], [155, 1, 1, "", "step_and_maybe_reset"], [155, 1, 1, "", "step_mdp"], [155, 1, 1, "", "to"], [155, 1, 1, "", "to_empty"], [155, 1, 1, "", "train"], [155, 1, 1, "", "type"], [155, 1, 1, "", "update_kwargs"], [155, 1, 1, "", "xpu"], [155, 1, 1, "", "zero_grad"]], "torchrl.envs.PendulumEnv": [[156, 2, 1, "", "action_key"], [156, 2, 1, "", "action_keys"], [156, 2, 1, "", "action_spec"], [156, 2, 1, "", "action_spec_unbatched"], [156, 1, 1, "", "add_module"], [156, 1, 1, "", "add_truncated_keys"], [156, 1, 1, "", "all_actions"], [156, 1, 1, "", "any_done"], [156, 1, 1, "", "append_transform"], [156, 1, 1, "", "apply"], [156, 1, 1, "", "auto_specs_"], [156, 2, 1, "", "batch_dims"], [156, 2, 1, "", "batch_size"], [156, 1, 1, "", "bfloat16"], [156, 1, 1, "", "buffers"], [156, 1, 1, "", "cardinality"], [156, 1, 1, "", "check_env_specs"], [156, 1, 1, "", "children"], [156, 1, 1, "", "compile"], [156, 1, 1, "", "cpu"], [156, 1, 1, "", "cuda"], [156, 2, 1, "", "done_key"], [156, 2, 1, "", "done_keys"], [156, 2, 1, "", "done_keys_groups"], [156, 2, 1, "", "done_spec"], [156, 2, 1, "", "done_spec_unbatched"], [156, 1, 1, "", "double"], [156, 1, 1, "", "empty_cache"], [156, 1, 1, "", "eval"], [156, 1, 1, "", "extra_repr"], [156, 1, 1, "", "fake_tensordict"], [156, 1, 1, "", "float"], [156, 1, 1, "", "forward"], [156, 2, 1, "", "full_action_spec"], [156, 2, 1, "", "full_action_spec_unbatched"], [156, 2, 1, "", "full_done_spec"], [156, 2, 1, "", "full_done_spec_unbatched"], [156, 2, 1, "", "full_observation_spec_unbatched"], [156, 2, 1, "", "full_reward_spec"], [156, 2, 1, "", "full_reward_spec_unbatched"], [156, 2, 1, "", "full_state_spec"], [156, 2, 1, "", "full_state_spec_unbatched"], [156, 1, 1, "", "gen_params"], [156, 1, 1, "", "get_buffer"], [156, 1, 1, "", "get_extra_state"], [156, 1, 1, "", "get_parameter"], [156, 1, 1, "", "get_submodule"], [156, 1, 1, "", "half"], [156, 2, 1, "", "input_spec"], [156, 2, 1, "", "input_spec_unbatched"], [156, 1, 1, "", "ipu"], [156, 2, 1, "", "is_spec_locked"], [156, 1, 1, "", "load_state_dict"], [156, 1, 1, "", "maybe_reset"], [156, 1, 1, "", "modules"], [156, 1, 1, "", "mtia"], [156, 1, 1, "", "named_buffers"], [156, 1, 1, "", "named_children"], [156, 1, 1, "", "named_modules"], [156, 1, 1, "", "named_parameters"], [156, 2, 1, "", "observation_keys"], [156, 2, 1, "", "observation_spec"], [156, 2, 1, "", "observation_spec_unbatched"], [156, 2, 1, "", "output_spec"], [156, 2, 1, "", "output_spec_unbatched"], [156, 1, 1, "", "parameters"], [156, 1, 1, "", "rand_action"], [156, 1, 1, "", "rand_step"], [156, 1, 1, "", "register_backward_hook"], [156, 1, 1, "", "register_buffer"], [156, 1, 1, "", "register_forward_hook"], [156, 1, 1, "", "register_forward_pre_hook"], [156, 1, 1, "", "register_full_backward_hook"], [156, 1, 1, "", "register_full_backward_pre_hook"], [156, 1, 1, "", "register_gym"], [156, 1, 1, "", "register_load_state_dict_post_hook"], [156, 1, 1, "", "register_load_state_dict_pre_hook"], [156, 1, 1, "", "register_module"], [156, 1, 1, "", "register_parameter"], [156, 1, 1, "", "register_state_dict_post_hook"], [156, 1, 1, "", "register_state_dict_pre_hook"], [156, 1, 1, "", "requires_grad_"], [156, 1, 1, "", "reset"], [156, 2, 1, "", "reset_keys"], [156, 2, 1, "", "reward_key"], [156, 2, 1, "", "reward_keys"], [156, 2, 1, "", "reward_spec"], [156, 2, 1, "", "reward_spec_unbatched"], [156, 1, 1, "", "rollout"], [156, 1, 1, "", "set_extra_state"], [156, 1, 1, "", "set_seed"], [156, 1, 1, "", "set_spec_lock_"], [156, 1, 1, "", "set_submodule"], [156, 2, 1, "", "shape"], [156, 1, 1, "", "share_memory"], [156, 2, 1, "", "specs"], [156, 1, 1, "", "state_dict"], [156, 2, 1, "", "state_keys"], [156, 2, 1, "", "state_spec"], [156, 2, 1, "", "state_spec_unbatched"], [156, 1, 1, "", "step"], [156, 1, 1, "", "step_and_maybe_reset"], [156, 1, 1, "", "step_mdp"], [156, 1, 1, "", "to"], [156, 1, 1, "", "to_empty"], [156, 1, 1, "", "train"], [156, 1, 1, "", "type"], [156, 1, 1, "", "xpu"], [156, 1, 1, "", "zero_grad"]], "torchrl.envs.ProcessorAsyncEnvPool": [[159, 1, 1, "", "_setup"], [159, 2, 1, "", "action_key"], [159, 2, 1, "", "action_keys"], [159, 2, 1, "", "action_spec"], [159, 2, 1, "", "action_spec_unbatched"], [159, 1, 1, "", "add_module"], [159, 1, 1, "", "add_truncated_keys"], [159, 1, 1, "", "all_actions"], [159, 1, 1, "", "any_done"], [159, 1, 1, "", "append_transform"], [159, 1, 1, "", "apply"], [159, 1, 1, "", "async_reset_recv"], [159, 1, 1, "", "async_reset_send"], [159, 1, 1, "", "async_step_recv"], [159, 1, 1, "", "async_step_send"], [159, 1, 1, "", "auto_specs_"], [159, 2, 1, "", "batch_dims"], [159, 2, 1, "", "batch_locked"], [159, 2, 1, "", "batch_size"], [159, 1, 1, "", "bfloat16"], [159, 1, 1, "", "buffers"], [159, 1, 1, "", "cardinality"], [159, 1, 1, "", "check_env_specs"], [159, 1, 1, "", "children"], [159, 1, 1, "", "compile"], [159, 1, 1, "", "cpu"], [159, 1, 1, "", "cuda"], [159, 2, 1, "", "done_key"], [159, 2, 1, "", "done_keys"], [159, 2, 1, "", "done_keys_groups"], [159, 2, 1, "", "done_spec"], [159, 2, 1, "", "done_spec_unbatched"], [159, 1, 1, "", "double"], [159, 1, 1, "", "empty_cache"], [159, 1, 1, "", "eval"], [159, 1, 1, "", "extra_repr"], [159, 1, 1, "", "fake_tensordict"], [159, 1, 1, "", "float"], [159, 1, 1, "", "forward"], [159, 2, 1, "", "full_action_spec"], [159, 2, 1, "", "full_action_spec_unbatched"], [159, 2, 1, "", "full_done_spec"], [159, 2, 1, "", "full_done_spec_unbatched"], [159, 2, 1, "", "full_observation_spec_unbatched"], [159, 2, 1, "", "full_reward_spec"], [159, 2, 1, "", "full_reward_spec_unbatched"], [159, 2, 1, "", "full_state_spec"], [159, 2, 1, "", "full_state_spec_unbatched"], [159, 1, 1, "", "get_buffer"], [159, 1, 1, "", "get_extra_state"], [159, 1, 1, "", "get_parameter"], [159, 1, 1, "", "get_submodule"], [159, 1, 1, "", "half"], [159, 2, 1, "", "input_spec"], [159, 2, 1, "", "input_spec_unbatched"], [159, 1, 1, "", "ipu"], [159, 2, 1, "", "is_spec_locked"], [159, 1, 1, "", "load_state_dict"], [159, 1, 1, "", "maybe_reset"], [159, 1, 1, "", "modules"], [159, 1, 1, "", "mtia"], [159, 1, 1, "", "named_buffers"], [159, 1, 1, "", "named_children"], [159, 1, 1, "", "named_modules"], [159, 1, 1, "", "named_parameters"], [159, 2, 1, "", "observation_keys"], [159, 2, 1, "", "observation_spec"], [159, 2, 1, "", "observation_spec_unbatched"], [159, 2, 1, "", "output_spec"], [159, 2, 1, "", "output_spec_unbatched"], [159, 1, 1, "", "parameters"], [159, 1, 1, "", "rand_action"], [159, 1, 1, "", "rand_step"], [159, 1, 1, "", "register_backward_hook"], [159, 1, 1, "", "register_buffer"], [159, 1, 1, "", "register_forward_hook"], [159, 1, 1, "", "register_forward_pre_hook"], [159, 1, 1, "", "register_full_backward_hook"], [159, 1, 1, "", "register_full_backward_pre_hook"], [159, 1, 1, "", "register_gym"], [159, 1, 1, "", "register_load_state_dict_post_hook"], [159, 1, 1, "", "register_load_state_dict_pre_hook"], [159, 1, 1, "", "register_module"], [159, 1, 1, "", "register_parameter"], [159, 1, 1, "", "register_state_dict_post_hook"], [159, 1, 1, "", "register_state_dict_pre_hook"], [159, 1, 1, "", "requires_grad_"], [159, 1, 1, "", "reset"], [159, 2, 1, "", "reset_keys"], [159, 2, 1, "", "reward_key"], [159, 2, 1, "", "reward_keys"], [159, 2, 1, "", "reward_spec"], [159, 2, 1, "", "reward_spec_unbatched"], [159, 1, 1, "", "rollout"], [159, 1, 1, "", "set_extra_state"], [159, 1, 1, "", "set_seed"], [159, 1, 1, "", "set_spec_lock_"], [159, 1, 1, "", "set_submodule"], [159, 2, 1, "", "shape"], [159, 1, 1, "", "share_memory"], [159, 1, 1, "", "shutdown"], [159, 2, 1, "", "specs"], [159, 1, 1, "", "state_dict"], [159, 2, 1, "", "state_keys"], [159, 2, 1, "", "state_spec"], [159, 2, 1, "", "state_spec_unbatched"], [159, 1, 1, "", "step"], [159, 1, 1, "", "step_and_maybe_reset"], [159, 1, 1, "", "step_mdp"], [159, 1, 1, "", "to"], [159, 1, 1, "", "to_empty"], [159, 1, 1, "", "train"], [159, 1, 1, "", "type"], [159, 1, 1, "", "xpu"], [159, 1, 1, "", "zero_grad"]], "torchrl.envs.SerialEnv": [[164, 2, 1, "", "action_key"], [164, 2, 1, "", "action_keys"], [164, 2, 1, "", "action_spec"], [164, 2, 1, "", "action_spec_unbatched"], [164, 1, 1, "", "add_module"], [164, 1, 1, "", "add_truncated_keys"], [164, 1, 1, "", "all_actions"], [164, 1, 1, "", "any_done"], [164, 1, 1, "", "append_transform"], [164, 1, 1, "", "apply"], [164, 1, 1, "", "auto_specs_"], [164, 2, 1, "", "batch_dims"], [164, 2, 1, "", "batch_locked"], [164, 2, 1, "", "batch_size"], [164, 1, 1, "", "bfloat16"], [164, 1, 1, "", "buffers"], [164, 1, 1, "", "cardinality"], [164, 1, 1, "", "check_env_specs"], [164, 1, 1, "", "children"], [164, 1, 1, "", "compile"], [164, 1, 1, "", "cpu"], [164, 1, 1, "", "cuda"], [164, 2, 1, "", "done_key"], [164, 2, 1, "", "done_keys"], [164, 2, 1, "", "done_keys_groups"], [164, 2, 1, "", "done_spec"], [164, 2, 1, "", "done_spec_unbatched"], [164, 1, 1, "", "double"], [164, 1, 1, "", "empty_cache"], [164, 1, 1, "", "eval"], [164, 1, 1, "", "extra_repr"], [164, 1, 1, "", "fake_tensordict"], [164, 1, 1, "", "float"], [164, 1, 1, "", "forward"], [164, 2, 1, "", "full_action_spec"], [164, 2, 1, "", "full_action_spec_unbatched"], [164, 2, 1, "", "full_done_spec"], [164, 2, 1, "", "full_done_spec_unbatched"], [164, 2, 1, "", "full_observation_spec_unbatched"], [164, 2, 1, "", "full_reward_spec"], [164, 2, 1, "", "full_reward_spec_unbatched"], [164, 2, 1, "", "full_state_spec"], [164, 2, 1, "", "full_state_spec_unbatched"], [164, 1, 1, "", "get_buffer"], [164, 1, 1, "", "get_extra_state"], [164, 1, 1, "", "get_parameter"], [164, 1, 1, "", "get_submodule"], [164, 1, 1, "", "half"], [164, 2, 1, "", "input_spec"], [164, 2, 1, "", "input_spec_unbatched"], [164, 1, 1, "", "ipu"], [164, 2, 1, "", "is_spec_locked"], [164, 1, 1, "", "load_state_dict"], [164, 1, 1, "", "maybe_reset"], [164, 1, 1, "", "modules"], [164, 1, 1, "", "mtia"], [164, 1, 1, "", "named_buffers"], [164, 1, 1, "", "named_children"], [164, 1, 1, "", "named_modules"], [164, 1, 1, "", "named_parameters"], [164, 2, 1, "", "observation_keys"], [164, 2, 1, "", "observation_spec"], [164, 2, 1, "", "observation_spec_unbatched"], [164, 2, 1, "", "output_spec"], [164, 2, 1, "", "output_spec_unbatched"], [164, 1, 1, "", "parameters"], [164, 1, 1, "", "rand_action"], [164, 1, 1, "", "rand_step"], [164, 1, 1, "", "register_backward_hook"], [164, 1, 1, "", "register_buffer"], [164, 1, 1, "", "register_forward_hook"], [164, 1, 1, "", "register_forward_pre_hook"], [164, 1, 1, "", "register_full_backward_hook"], [164, 1, 1, "", "register_full_backward_pre_hook"], [164, 1, 1, "", "register_gym"], [164, 1, 1, "", "register_load_state_dict_post_hook"], [164, 1, 1, "", "register_load_state_dict_pre_hook"], [164, 1, 1, "", "register_module"], [164, 1, 1, "", "register_parameter"], [164, 1, 1, "", "register_state_dict_post_hook"], [164, 1, 1, "", "register_state_dict_pre_hook"], [164, 1, 1, "", "requires_grad_"], [164, 1, 1, "", "reset"], [164, 2, 1, "", "reset_keys"], [164, 2, 1, "", "reward_key"], [164, 2, 1, "", "reward_keys"], [164, 2, 1, "", "reward_spec"], [164, 2, 1, "", "reward_spec_unbatched"], [164, 1, 1, "", "rollout"], [164, 1, 1, "", "set_extra_state"], [164, 1, 1, "", "set_seed"], [164, 1, 1, "", "set_spec_lock_"], [164, 1, 1, "", "set_submodule"], [164, 2, 1, "", "shape"], [164, 1, 1, "", "share_memory"], [164, 2, 1, "", "specs"], [164, 1, 1, "", "state_dict"], [164, 2, 1, "", "state_keys"], [164, 2, 1, "", "state_spec"], [164, 2, 1, "", "state_spec_unbatched"], [164, 1, 1, "", "step"], [164, 1, 1, "", "step_and_maybe_reset"], [164, 1, 1, "", "step_mdp"], [164, 1, 1, "", "to"], [164, 1, 1, "", "to_empty"], [164, 1, 1, "", "train"], [164, 1, 1, "", "type"], [164, 1, 1, "", "update_kwargs"], [164, 1, 1, "", "xpu"], [164, 1, 1, "", "zero_grad"]], "torchrl.envs.ThreadingAsyncEnvPool": [[165, 1, 1, "", "_setup"], [165, 2, 1, "", "action_key"], [165, 2, 1, "", "action_keys"], [165, 2, 1, "", "action_spec"], [165, 2, 1, "", "action_spec_unbatched"], [165, 1, 1, "", "add_module"], [165, 1, 1, "", "add_truncated_keys"], [165, 1, 1, "", "all_actions"], [165, 1, 1, "", "any_done"], [165, 1, 1, "", "append_transform"], [165, 1, 1, "", "apply"], [165, 1, 1, "", "async_reset_recv"], [165, 1, 1, "", "async_reset_send"], [165, 1, 1, "", "async_step_recv"], [165, 1, 1, "", "async_step_send"], [165, 1, 1, "", "auto_specs_"], [165, 2, 1, "", "batch_dims"], [165, 2, 1, "", "batch_locked"], [165, 2, 1, "", "batch_size"], [165, 1, 1, "", "bfloat16"], [165, 1, 1, "", "buffers"], [165, 1, 1, "", "cardinality"], [165, 1, 1, "", "check_env_specs"], [165, 1, 1, "", "children"], [165, 1, 1, "", "compile"], [165, 1, 1, "", "cpu"], [165, 1, 1, "", "cuda"], [165, 2, 1, "", "done_key"], [165, 2, 1, "", "done_keys"], [165, 2, 1, "", "done_keys_groups"], [165, 2, 1, "", "done_spec"], [165, 2, 1, "", "done_spec_unbatched"], [165, 1, 1, "", "double"], [165, 1, 1, "", "empty_cache"], [165, 1, 1, "", "eval"], [165, 1, 1, "", "extra_repr"], [165, 1, 1, "", "fake_tensordict"], [165, 1, 1, "", "float"], [165, 1, 1, "", "forward"], [165, 2, 1, "", "full_action_spec"], [165, 2, 1, "", "full_action_spec_unbatched"], [165, 2, 1, "", "full_done_spec"], [165, 2, 1, "", "full_done_spec_unbatched"], [165, 2, 1, "", "full_observation_spec_unbatched"], [165, 2, 1, "", "full_reward_spec"], [165, 2, 1, "", "full_reward_spec_unbatched"], [165, 2, 1, "", "full_state_spec"], [165, 2, 1, "", "full_state_spec_unbatched"], [165, 1, 1, "", "get_buffer"], [165, 1, 1, "", "get_extra_state"], [165, 1, 1, "", "get_parameter"], [165, 1, 1, "", "get_submodule"], [165, 1, 1, "", "half"], [165, 2, 1, "", "input_spec"], [165, 2, 1, "", "input_spec_unbatched"], [165, 1, 1, "", "ipu"], [165, 2, 1, "", "is_spec_locked"], [165, 1, 1, "", "load_state_dict"], [165, 1, 1, "", "maybe_reset"], [165, 1, 1, "", "modules"], [165, 1, 1, "", "mtia"], [165, 1, 1, "", "named_buffers"], [165, 1, 1, "", "named_children"], [165, 1, 1, "", "named_modules"], [165, 1, 1, "", "named_parameters"], [165, 2, 1, "", "observation_keys"], [165, 2, 1, "", "observation_spec"], [165, 2, 1, "", "observation_spec_unbatched"], [165, 2, 1, "", "output_spec"], [165, 2, 1, "", "output_spec_unbatched"], [165, 1, 1, "", "parameters"], [165, 1, 1, "", "rand_action"], [165, 1, 1, "", "rand_step"], [165, 1, 1, "", "register_backward_hook"], [165, 1, 1, "", "register_buffer"], [165, 1, 1, "", "register_forward_hook"], [165, 1, 1, "", "register_forward_pre_hook"], [165, 1, 1, "", "register_full_backward_hook"], [165, 1, 1, "", "register_full_backward_pre_hook"], [165, 1, 1, "", "register_gym"], [165, 1, 1, "", "register_load_state_dict_post_hook"], [165, 1, 1, "", "register_load_state_dict_pre_hook"], [165, 1, 1, "", "register_module"], [165, 1, 1, "", "register_parameter"], [165, 1, 1, "", "register_state_dict_post_hook"], [165, 1, 1, "", "register_state_dict_pre_hook"], [165, 1, 1, "", "requires_grad_"], [165, 1, 1, "", "reset"], [165, 2, 1, "", "reset_keys"], [165, 2, 1, "", "reward_key"], [165, 2, 1, "", "reward_keys"], [165, 2, 1, "", "reward_spec"], [165, 2, 1, "", "reward_spec_unbatched"], [165, 1, 1, "", "rollout"], [165, 1, 1, "", "set_extra_state"], [165, 1, 1, "", "set_seed"], [165, 1, 1, "", "set_spec_lock_"], [165, 1, 1, "", "set_submodule"], [165, 2, 1, "", "shape"], [165, 1, 1, "", "share_memory"], [165, 1, 1, "", "shutdown"], [165, 2, 1, "", "specs"], [165, 1, 1, "", "state_dict"], [165, 2, 1, "", "state_keys"], [165, 2, 1, "", "state_spec"], [165, 2, 1, "", "state_spec_unbatched"], [165, 1, 1, "", "step"], [165, 1, 1, "", "step_and_maybe_reset"], [165, 1, 1, "", "step_mdp"], [165, 1, 1, "", "to"], [165, 1, 1, "", "to_empty"], [165, 1, 1, "", "train"], [165, 1, 1, "", "type"], [165, 1, 1, "", "xpu"], [165, 1, 1, "", "zero_grad"]], "torchrl.envs.TicTacToeEnv": [[166, 2, 1, "", "action_key"], [166, 2, 1, "", "action_keys"], [166, 2, 1, "", "action_spec"], [166, 2, 1, "", "action_spec_unbatched"], [166, 1, 1, "", "add_module"], [166, 1, 1, "", "add_truncated_keys"], [166, 1, 1, "", "all_actions"], [166, 1, 1, "", "any_done"], [166, 1, 1, "", "append_transform"], [166, 1, 1, "", "apply"], [166, 1, 1, "", "auto_specs_"], [166, 2, 1, "", "batch_dims"], [166, 2, 1, "", "batch_size"], [166, 1, 1, "", "bfloat16"], [166, 1, 1, "", "buffers"], [166, 1, 1, "", "cardinality"], [166, 1, 1, "", "check_env_specs"], [166, 1, 1, "", "children"], [166, 1, 1, "", "compile"], [166, 1, 1, "", "cpu"], [166, 1, 1, "", "cuda"], [166, 2, 1, "", "done_key"], [166, 2, 1, "", "done_keys"], [166, 2, 1, "", "done_keys_groups"], [166, 2, 1, "", "done_spec"], [166, 2, 1, "", "done_spec_unbatched"], [166, 1, 1, "", "double"], [166, 1, 1, "", "empty_cache"], [166, 1, 1, "", "eval"], [166, 1, 1, "", "extra_repr"], [166, 1, 1, "", "fake_tensordict"], [166, 1, 1, "", "float"], [166, 1, 1, "", "forward"], [166, 2, 1, "", "full_action_spec"], [166, 2, 1, "", "full_action_spec_unbatched"], [166, 2, 1, "", "full_done_spec"], [166, 2, 1, "", "full_done_spec_unbatched"], [166, 2, 1, "", "full_observation_spec_unbatched"], [166, 2, 1, "", "full_reward_spec"], [166, 2, 1, "", "full_reward_spec_unbatched"], [166, 2, 1, "", "full_state_spec"], [166, 2, 1, "", "full_state_spec_unbatched"], [166, 1, 1, "", "get_buffer"], [166, 1, 1, "", "get_extra_state"], [166, 1, 1, "", "get_parameter"], [166, 1, 1, "", "get_submodule"], [166, 1, 1, "", "half"], [166, 2, 1, "", "input_spec"], [166, 2, 1, "", "input_spec_unbatched"], [166, 1, 1, "", "ipu"], [166, 2, 1, "", "is_spec_locked"], [166, 1, 1, "", "load_state_dict"], [166, 1, 1, "", "maybe_reset"], [166, 1, 1, "", "modules"], [166, 1, 1, "", "mtia"], [166, 1, 1, "", "named_buffers"], [166, 1, 1, "", "named_children"], [166, 1, 1, "", "named_modules"], [166, 1, 1, "", "named_parameters"], [166, 2, 1, "", "observation_keys"], [166, 2, 1, "", "observation_spec"], [166, 2, 1, "", "observation_spec_unbatched"], [166, 2, 1, "", "output_spec"], [166, 2, 1, "", "output_spec_unbatched"], [166, 1, 1, "", "parameters"], [166, 1, 1, "", "rand_action"], [166, 1, 1, "", "rand_step"], [166, 1, 1, "", "register_backward_hook"], [166, 1, 1, "", "register_buffer"], [166, 1, 1, "", "register_forward_hook"], [166, 1, 1, "", "register_forward_pre_hook"], [166, 1, 1, "", "register_full_backward_hook"], [166, 1, 1, "", "register_full_backward_pre_hook"], [166, 1, 1, "", "register_gym"], [166, 1, 1, "", "register_load_state_dict_post_hook"], [166, 1, 1, "", "register_load_state_dict_pre_hook"], [166, 1, 1, "", "register_module"], [166, 1, 1, "", "register_parameter"], [166, 1, 1, "", "register_state_dict_post_hook"], [166, 1, 1, "", "register_state_dict_pre_hook"], [166, 1, 1, "", "requires_grad_"], [166, 1, 1, "", "reset"], [166, 2, 1, "", "reset_keys"], [166, 2, 1, "", "reward_key"], [166, 2, 1, "", "reward_keys"], [166, 2, 1, "", "reward_spec"], [166, 2, 1, "", "reward_spec_unbatched"], [166, 1, 1, "", "rollout"], [166, 1, 1, "", "set_extra_state"], [166, 1, 1, "", "set_seed"], [166, 1, 1, "", "set_spec_lock_"], [166, 1, 1, "", "set_submodule"], [166, 2, 1, "", "shape"], [166, 1, 1, "", "share_memory"], [166, 2, 1, "", "specs"], [166, 1, 1, "", "state_dict"], [166, 2, 1, "", "state_keys"], [166, 2, 1, "", "state_spec"], [166, 2, 1, "", "state_spec_unbatched"], [166, 1, 1, "", "step"], [166, 1, 1, "", "step_and_maybe_reset"], [166, 1, 1, "", "step_mdp"], [166, 1, 1, "", "to"], [166, 1, 1, "", "to_empty"], [166, 1, 1, "", "train"], [166, 1, 1, "", "type"], [166, 1, 1, "", "xpu"], [166, 1, 1, "", "zero_grad"]], "torchrl.envs.model_based.dreamer": [[177, 3, 1, "", "DreamerDecoder"], [178, 3, 1, "", "DreamerEnv"]], "torchrl.envs.transforms": [[184, 0, 1, "", "ActionDiscretizer"], [185, 0, 1, "", "ActionMask"], [186, 0, 1, "", "AutoResetEnv"], [187, 0, 1, "", "AutoResetTransform"], [188, 0, 1, "", "BatchSizeTransform"], [189, 0, 1, "", "BinarizeReward"], [190, 0, 1, "", "BurnInTransform"], [191, 0, 1, "", "CatFrames"], [192, 0, 1, "", "CatTensors"], [193, 0, 1, "", "CenterCrop"], [194, 0, 1, "", "ClipTransform"], [195, 0, 1, "", "Compose"], [196, 0, 1, "", "ConditionalSkip"], [197, 0, 1, "", "Crop"], [198, 0, 1, "", "DTypeCastTransform"], [199, 0, 1, "", "DataLoadingPrimer"], [200, 0, 1, "", "DeviceCastTransform"], [201, 0, 1, "", "DiscreteActionProjection"], [202, 0, 1, "", "DoubleToFloat"], [203, 0, 1, "", "EndOfLifeTransform"], [204, 0, 1, "", "ExcludeTransform"], [205, 0, 1, "", "FiniteTensorDictCheck"], [206, 0, 1, "", "FlattenObservation"], [207, 0, 1, "", "FrameSkipTransform"], [208, 0, 1, "", "GrayScale"], [209, 0, 1, "", "Hash"], [210, 0, 1, "", "InitTracker"], [211, 0, 1, "", "KLRewardTransform"], [212, 0, 1, "", "LineariseRewards"], [213, 0, 1, "", "MultiAction"], [214, 0, 1, "", "NoopResetEnv"], [215, 0, 1, "", "ObservationNorm"], [216, 0, 1, "", "ObservationTransform"], [217, 0, 1, "", "PermuteTransform"], [218, 0, 1, "", "PinMemoryTransform"], [219, 0, 1, "", "R3MTransform"], [220, 0, 1, "", "RandomCropTensorDict"], [221, 0, 1, "", "RemoveEmptySpecs"], [222, 0, 1, "", "RenameTransform"], [223, 0, 1, "", "Resize"], [224, 0, 1, "", "Reward2GoTransform"], [225, 0, 1, "", "RewardClipping"], [226, 0, 1, "", "RewardScaling"], [227, 0, 1, "", "RewardSum"], [228, 0, 1, "", "SelectTransform"], [229, 0, 1, "", "SignTransform"], [230, 0, 1, "", "SqueezeTransform"], [231, 0, 1, "", "Stack"], [232, 0, 1, "", "StepCounter"], [233, 0, 1, "", "TargetReturn"], [234, 0, 1, "", "TensorDictPrimer"], [235, 0, 1, "", "TimeMaxPool"], [236, 0, 1, "", "Timer"], [237, 0, 1, "", "ToTensorImage"], [238, 0, 1, "", "Tokenizer"], [239, 0, 1, "", "TrajCounter"], [240, 0, 1, "", "Transform"], [241, 0, 1, "", "TransformedEnv"], [242, 0, 1, "", "UnaryTransform"], [243, 0, 1, "", "UnsqueezeTransform"], [244, 0, 1, "", "VC1Transform"], [245, 0, 1, "", "VIPRewardTransform"], [246, 0, 1, "", "VIPTransform"], [247, 0, 1, "", "VecGymEnvTransform"], [248, 0, 1, "", "VecNorm"], [249, 0, 1, "", "VecNormV2"], [250, 0, 1, "", "gSDENoise"]], "torchrl.envs.transforms.ActionDiscretizer": [[184, 0, 1, "", "SamplingStrategy"], [184, 1, 1, "", "inv"], [184, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.ActionMask": [[185, 1, 1, "", "forward"]], "torchrl.envs.transforms.AutoResetEnv": [[186, 1, 1, "", "insert_transform"]], "torchrl.envs.transforms.AutoResetTransform": [[187, 1, 1, "", "forward"]], "torchrl.envs.transforms.BatchSizeTransform": [[188, 1, 1, "", "forward"], [188, 1, 1, "", "transform_env_batch_size"], [188, 1, 1, "", "transform_input_spec"], [188, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.BinarizeReward": [[189, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.BurnInTransform": [[190, 1, 1, "", "forward"]], "torchrl.envs.transforms.CatFrames": [[191, 1, 1, "", "forward"], [191, 1, 1, "", "make_rb_transform_and_sampler"], [191, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CatTensors": [[192, 1, 1, "", "forward"], [192, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CenterCrop": [[193, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ClipTransform": [[194, 1, 1, "", "transform_observation_spec"], [194, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.Compose": [[195, 1, 1, "", "append"], [195, 1, 1, "", "forward"], [195, 1, 1, "", "init"], [195, 1, 1, "", "insert"], [195, 1, 1, "", "to"], [195, 1, 1, "", "transform_action_spec"], [195, 1, 1, "", "transform_env_batch_size"], [195, 1, 1, "", "transform_env_device"], [195, 1, 1, "", "transform_input_spec"], [195, 1, 1, "", "transform_observation_spec"], [195, 1, 1, "", "transform_output_spec"], [195, 1, 1, "", "transform_reward_spec"], [195, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.ConditionalSkip": [[196, 1, 1, "", "forward"]], "torchrl.envs.transforms.Crop": [[197, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.DTypeCastTransform": [[198, 1, 1, "", "forward"], [198, 1, 1, "", "transform_input_spec"], [198, 1, 1, "", "transform_observation_spec"], [198, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.DeviceCastTransform": [[200, 1, 1, "", "forward"], [200, 1, 1, "", "transform_action_spec"], [200, 1, 1, "", "transform_done_spec"], [200, 1, 1, "", "transform_env_device"], [200, 1, 1, "", "transform_input_spec"], [200, 1, 1, "", "transform_observation_spec"], [200, 1, 1, "", "transform_output_spec"], [200, 1, 1, "", "transform_reward_spec"], [200, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.DiscreteActionProjection": [[201, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.EndOfLifeTransform": [[203, 1, 1, "", "forward"], [203, 1, 1, "", "register_keys"], [203, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ExcludeTransform": [[204, 1, 1, "", "forward"], [204, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.FiniteTensorDictCheck": [[205, 1, 1, "", "forward"]], "torchrl.envs.transforms.FlattenObservation": [[206, 1, 1, "", "forward"], [206, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.FrameSkipTransform": [[207, 1, 1, "", "forward"]], "torchrl.envs.transforms.GrayScale": [[208, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Hash": [[209, 1, 1, "", "get_input_from_hash"], [209, 1, 1, "", "reproducible_hash"], [209, 1, 1, "", "state_dict"]], "torchrl.envs.transforms.InitTracker": [[210, 1, 1, "", "forward"], [210, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.KLRewardTransform": [[211, 1, 1, "", "forward"], [211, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.LineariseRewards": [[212, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.MultiAction": [[213, 1, 1, "", "transform_input_spec"], [213, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.ObservationNorm": [[215, 1, 1, "", "init_stats"], [215, 1, 1, "", "transform_action_spec"], [215, 1, 1, "", "transform_observation_spec"], [215, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.PermuteTransform": [[217, 1, 1, "", "transform_input_spec"], [217, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PinMemoryTransform": [[218, 1, 1, "", "forward"]], "torchrl.envs.transforms.R3MTransform": [[219, 1, 1, "", "to"]], "torchrl.envs.transforms.RandomCropTensorDict": [[220, 1, 1, "", "forward"]], "torchrl.envs.transforms.RemoveEmptySpecs": [[221, 1, 1, "", "forward"], [221, 1, 1, "", "transform_input_spec"], [221, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.RenameTransform": [[222, 1, 1, "", "forward"], [222, 1, 1, "", "transform_input_spec"], [222, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.Resize": [[223, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Reward2GoTransform": [[224, 1, 1, "", "forward"]], "torchrl.envs.transforms.RewardClipping": [[225, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardScaling": [[226, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardSum": [[227, 1, 1, "", "forward"], [227, 1, 1, "", "transform_input_spec"], [227, 1, 1, "", "transform_observation_spec"], [227, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.SelectTransform": [[228, 1, 1, "", "forward"], [228, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.SignTransform": [[229, 1, 1, "", "transform_observation_spec"], [229, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.Stack": [[231, 1, 1, "", "forward"], [231, 1, 1, "", "transform_done_spec"], [231, 1, 1, "", "transform_input_spec"], [231, 1, 1, "", "transform_observation_spec"], [231, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.StepCounter": [[232, 1, 1, "", "forward"], [232, 1, 1, "", "transform_input_spec"], [232, 1, 1, "", "transform_observation_spec"], [232, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.TargetReturn": [[233, 1, 1, "", "forward"], [233, 1, 1, "", "transform_input_spec"], [233, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TensorDictPrimer": [[234, 1, 1, "", "forward"], [234, 1, 1, "", "to"], [234, 1, 1, "", "transform_input_spec"], [234, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TimeMaxPool": [[235, 1, 1, "", "forward"], [235, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Timer": [[236, 1, 1, "", "forward"], [236, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ToTensorImage": [[237, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Tokenizer": [[238, 1, 1, "", "forward"], [238, 1, 1, "", "transform_done_spec"], [238, 1, 1, "", "transform_input_spec"], [238, 1, 1, "", "transform_observation_spec"], [238, 1, 1, "", "transform_output_spec"], [238, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.TrajCounter": [[239, 1, 1, "", "forward"], [239, 1, 1, "", "load_state_dict"], [239, 1, 1, "", "state_dict"], [239, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Transform": [[240, 1, 1, "", "clone"], [240, 2, 1, "", "container"], [240, 1, 1, "", "forward"], [240, 1, 1, "", "init"], [240, 1, 1, "", "inv"], [240, 2, 1, "", "parent"], [240, 1, 1, "", "reset_parent"], [240, 1, 1, "", "set_container"], [240, 1, 1, "", "to"], [240, 1, 1, "", "transform_action_spec"], [240, 1, 1, "", "transform_done_spec"], [240, 1, 1, "", "transform_env_batch_size"], [240, 1, 1, "", "transform_env_device"], [240, 1, 1, "", "transform_input_spec"], [240, 1, 1, "", "transform_observation_spec"], [240, 1, 1, "", "transform_output_spec"], [240, 1, 1, "", "transform_reward_spec"], [240, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.TransformedEnv": [[241, 1, 1, "", "add_truncated_keys"], [241, 1, 1, "", "append_transform"], [241, 2, 1, "", "batch_locked"], [241, 2, 1, "", "batch_size"], [241, 1, 1, "", "empty_cache"], [241, 1, 1, "", "eval"], [241, 2, 1, "", "input_spec"], [241, 1, 1, "", "insert_transform"], [241, 1, 1, "", "load_state_dict"], [241, 2, 1, "", "output_spec"], [241, 1, 1, "", "rand_action"], [241, 1, 1, "", "set_missing_tolerance"], [241, 1, 1, "", "set_seed"], [241, 1, 1, "", "state_dict"], [241, 1, 1, "", "to"], [241, 1, 1, "", "train"]], "torchrl.envs.transforms.UnaryTransform": [[242, 1, 1, "", "transform_action_spec"], [242, 1, 1, "", "transform_done_spec"], [242, 1, 1, "", "transform_input_spec"], [242, 1, 1, "", "transform_observation_spec"], [242, 1, 1, "", "transform_output_spec"], [242, 1, 1, "", "transform_reward_spec"], [242, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.UnsqueezeTransform": [[243, 1, 1, "", "transform_action_spec"], [243, 1, 1, "", "transform_observation_spec"], [243, 1, 1, "", "transform_reward_spec"], [243, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.VC1Transform": [[244, 1, 1, "", "forward"], [244, 1, 1, "", "make_noload_model"], [244, 1, 1, "", "to"], [244, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VIPRewardTransform": [[245, 1, 1, "", "forward"], [245, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.VIPTransform": [[246, 1, 1, "", "to"]], "torchrl.envs.transforms.VecGymEnvTransform": [[247, 1, 1, "", "forward"], [247, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VecNorm": [[248, 1, 1, "", "build_td_for_shared_vecnorm"], [248, 1, 1, "", "forward"], [248, 1, 1, "", "freeze"], [248, 1, 1, "", "frozen_copy"], [248, 1, 1, "", "get_extra_state"], [248, 2, 1, "", "loc"], [248, 2, 1, "", "scale"], [248, 1, 1, "", "set_extra_state"], [248, 2, 1, "", "standard_normal"], [248, 1, 1, "", "to_observation_norm"], [248, 1, 1, "", "transform_observation_spec"], [248, 1, 1, "", "unfreeze"]], "torchrl.envs.transforms.VecNormV2": [[249, 1, 1, "", "clone"], [249, 1, 1, "id0", "freeze"], [249, 1, 1, "id1", "frozen_copy"], [249, 1, 1, "id2", "get_extra_state"], [249, 2, 1, "id3", "loc"], [249, 2, 1, "id4", "scale"], [249, 1, 1, "id5", "set_extra_state"], [249, 2, 1, "id6", "standard_normal"], [249, 1, 1, "", "to_observation_norm"], [249, 1, 1, "id7", "transform_observation_spec"], [249, 1, 1, "id8", "transform_output_spec"], [249, 1, 1, "id9", "transform_reward_spec"], [249, 1, 1, "id10", "unfreeze"]], "torchrl.envs.transforms.rb_transforms": [[251, 0, 1, "", "MultiStepTransform"]], "torchrl.envs.transforms.rb_transforms.MultiStepTransform": [[251, 1, 1, "", "add_module"], [251, 1, 1, "", "apply"], [251, 1, 1, "", "bfloat16"], [251, 1, 1, "", "buffers"], [251, 1, 1, "", "children"], [251, 1, 1, "", "compile"], [251, 2, 1, "", "container"], [251, 1, 1, "", "cpu"], [251, 1, 1, "", "cuda"], [251, 1, 1, "", "double"], [251, 1, 1, "", "eval"], [251, 1, 1, "", "extra_repr"], [251, 1, 1, "", "float"], [251, 1, 1, "", "forward"], [251, 1, 1, "", "get_buffer"], [251, 1, 1, "", "get_extra_state"], [251, 1, 1, "", "get_parameter"], [251, 1, 1, "", "get_submodule"], [251, 1, 1, "", "half"], [251, 1, 1, "", "init"], [251, 1, 1, "", "inv"], [251, 1, 1, "", "ipu"], [251, 1, 1, "", "load_state_dict"], [251, 1, 1, "", "modules"], [251, 1, 1, "", "mtia"], [251, 2, 1, "", "n_steps"], [251, 1, 1, "", "named_buffers"], [251, 1, 1, "", "named_children"], [251, 1, 1, "", "named_modules"], [251, 1, 1, "", "named_parameters"], [251, 1, 1, "", "parameters"], [251, 2, 1, "", "parent"], [251, 1, 1, "", "register_backward_hook"], [251, 1, 1, "", "register_buffer"], [251, 1, 1, "", "register_forward_hook"], [251, 1, 1, "", "register_forward_pre_hook"], [251, 1, 1, "", "register_full_backward_hook"], [251, 1, 1, "", "register_full_backward_pre_hook"], [251, 1, 1, "", "register_load_state_dict_post_hook"], [251, 1, 1, "", "register_load_state_dict_pre_hook"], [251, 1, 1, "", "register_module"], [251, 1, 1, "", "register_parameter"], [251, 1, 1, "", "register_state_dict_post_hook"], [251, 1, 1, "", "register_state_dict_pre_hook"], [251, 1, 1, "", "requires_grad_"], [251, 1, 1, "", "set_extra_state"], [251, 1, 1, "", "set_submodule"], [251, 1, 1, "", "share_memory"], [251, 1, 1, "", "state_dict"], [251, 1, 1, "", "to"], [251, 1, 1, "", "to_empty"], [251, 1, 1, "", "train"], [251, 1, 1, "", "transform_action_spec"], [251, 1, 1, "", "transform_done_spec"], [251, 1, 1, "", "transform_env_batch_size"], [251, 1, 1, "", "transform_env_device"], [251, 1, 1, "", "transform_input_spec"], [251, 1, 1, "", "transform_observation_spec"], [251, 1, 1, "", "transform_output_spec"], [251, 1, 1, "", "transform_reward_spec"], [251, 1, 1, "", "transform_state_spec"], [251, 1, 1, "", "type"], [251, 1, 1, "", "xpu"], [251, 1, 1, "", "zero_grad"]], "torchrl.implement_for": [[252, 1, 1, "", "get_class_that_defined_method"], [252, 1, 1, "", "import_module"], [252, 1, 1, "", "module_set"], [252, 1, 1, "", "reset"]], "torchrl.modules": [[253, 0, 1, "", "AdditiveGaussianModule"], [254, 0, 1, "", "BatchRenorm1d"], [255, 0, 1, "", "CEMPlanner"], [256, 0, 1, "", "ConsistentDropout"], [257, 0, 1, "", "ConsistentDropoutModule"], [258, 0, 1, "", "Conv3dNet"], [259, 0, 1, "", "ConvNet"], [260, 0, 1, "", "DTActor"], [261, 0, 1, "", "DdpgCnnActor"], [262, 0, 1, "", "DdpgCnnQNet"], [263, 0, 1, "", "DdpgMlpActor"], [264, 0, 1, "", "DdpgMlpQNet"], [265, 0, 1, "", "DecisionTransformer"], [266, 0, 1, "", "Delta"], [267, 0, 1, "", "DistributionalDQNnet"], [268, 0, 1, "", "DistributionalQValueHook"], [269, 0, 1, "", "DreamerActor"], [270, 0, 1, "", "DuelingCnnDQNet"], [271, 0, 1, "", "EGreedyModule"], [272, 0, 1, "", "GRU"], [273, 0, 1, "", "GRUCell"], [274, 0, 1, "", "GRUModule"], [275, 0, 1, "", "IndependentNormal"], [276, 0, 1, "", "LSTM"], [277, 0, 1, "", "LSTMCell"], [278, 0, 1, "", "LSTMModule"], [279, 0, 1, "", "MLP"], [280, 0, 1, "", "MPCPlannerBase"], [281, 0, 1, "", "MPPIPlanner"], [282, 0, 1, "", "MaskedCategorical"], [283, 0, 1, "", "MaskedOneHotCategorical"], [284, 0, 1, "", "MultiAgentConvNet"], [285, 0, 1, "", "MultiAgentMLP"], [286, 0, 1, "", "MultiAgentNetBase"], [287, 0, 1, "", "NoisyLazyLinear"], [288, 0, 1, "", "NoisyLinear"], [289, 0, 1, "", "ObsDecoder"], [290, 0, 1, "", "ObsEncoder"], [291, 0, 1, "", "OneHotCategorical"], [292, 0, 1, "", "OneHotOrdinal"], [293, 0, 1, "", "OnlineDTActor"], [294, 0, 1, "", "Ordinal"], [295, 0, 1, "", "OrnsteinUhlenbeckProcessModule"], [296, 0, 1, "", "QMixer"], [297, 0, 1, "", "QValueHook"], [298, 0, 1, "", "RSSMPosterior"], [299, 0, 1, "", "RSSMPrior"], [300, 0, 1, "", "Squeeze2dLayer"], [301, 0, 1, "", "SqueezeLayer"], [302, 0, 1, "", "TanhDelta"], [303, 0, 1, "", "TanhNormal"], [304, 0, 1, "", "TruncatedNormal"], [305, 0, 1, "", "VDNMixer"], [306, 0, 1, "", "VmapModule"], [307, 0, 1, "", "recurrent_mode"], [308, 0, 1, "", "reset_noise"], [309, 0, 1, "", "set_recurrent_mode"]], "torchrl.modules.AdditiveGaussianModule": [[253, 1, 1, "", "forward"], [253, 1, 1, "", "step"]], "torchrl.modules.BatchRenorm1d": [[254, 1, 1, "", "forward"]], "torchrl.modules.CEMPlanner": [[255, 1, 1, "", "planning"]], "torchrl.modules.ConsistentDropout": [[256, 1, 1, "", "forward"]], "torchrl.modules.ConsistentDropoutModule": [[257, 1, 1, "", "forward"], [257, 1, 1, "", "make_tensordict_primer"]], "torchrl.modules.Conv3dNet": [[258, 1, 1, "", "forward"]], "torchrl.modules.ConvNet": [[259, 1, 1, "", "default_atari_dqn"], [259, 1, 1, "", "forward"]], "torchrl.modules.DTActor": [[260, 1, 1, "", "default_config"], [260, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnActor": [[261, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnQNet": [[262, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpActor": [[263, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpQNet": [[264, 1, 1, "", "forward"]], "torchrl.modules.DecisionTransformer": [[265, 0, 1, "", "DTConfig"], [265, 1, 1, "", "forward"]], "torchrl.modules.Delta": [[266, 1, 1, "", "expand"], [266, 1, 1, "", "log_prob"], [266, 2, 1, "", "mean"], [266, 2, 1, "", "mode"], [266, 1, 1, "", "rsample"], [266, 1, 1, "", "sample"]], "torchrl.modules.DistributionalDQNnet": [[267, 1, 1, "", "forward"]], "torchrl.modules.DreamerActor": [[269, 1, 1, "", "forward"]], "torchrl.modules.DuelingCnnDQNet": [[270, 1, 1, "", "forward"]], "torchrl.modules.EGreedyModule": [[271, 1, 1, "", "forward"], [271, 1, 1, "", "step"]], "torchrl.modules.GRU": [[272, 1, 1, "", "forward"]], "torchrl.modules.GRUCell": [[273, 1, 1, "", "forward"]], "torchrl.modules.GRUModule": [[274, 1, 1, "", "forward"], [274, 1, 1, "", "make_cudnn_based"], [274, 1, 1, "", "make_python_based"], [274, 1, 1, "id0", "make_tensordict_primer"], [274, 1, 1, "id1", "set_recurrent_mode"]], "torchrl.modules.IndependentNormal": [[275, 2, 1, "", "mode"]], "torchrl.modules.LSTM": [[276, 1, 1, "", "forward"]], "torchrl.modules.LSTMCell": [[277, 1, 1, "", "forward"]], "torchrl.modules.LSTMModule": [[278, 1, 1, "", "forward"], [278, 1, 1, "", "make_cudnn_based"], [278, 1, 1, "", "make_python_based"], [278, 1, 1, "id0", "make_tensordict_primer"], [278, 1, 1, "id1", "set_recurrent_mode"]], "torchrl.modules.MLP": [[279, 1, 1, "", "forward"]], "torchrl.modules.MPCPlannerBase": [[280, 1, 1, "", "forward"], [280, 1, 1, "", "planning"]], "torchrl.modules.MPPIPlanner": [[281, 1, 1, "", "planning"]], "torchrl.modules.MaskedCategorical": [[282, 1, 1, "", "log_prob"], [282, 1, 1, "", "sample"]], "torchrl.modules.MaskedOneHotCategorical": [[283, 1, 1, "", "log_prob"], [283, 2, 1, "", "mode"], [283, 1, 1, "", "rsample"], [283, 1, 1, "", "sample"]], "torchrl.modules.MultiAgentNetBase": [[286, 1, 1, "", "forward"], [286, 1, 1, "", "from_stateful_net"], [286, 1, 1, "", "get_stateful_net"], [286, 1, 1, "", "reset_parameters"]], "torchrl.modules.NoisyLazyLinear": [[287, 1, 1, "", "initialize_parameters"]], "torchrl.modules.ObsDecoder": [[289, 1, 1, "", "forward"]], "torchrl.modules.ObsEncoder": [[290, 1, 1, "", "forward"]], "torchrl.modules.OneHotCategorical": [[291, 1, 1, "", "entropy"], [291, 1, 1, "", "log_prob"], [291, 2, 1, "", "mode"], [291, 1, 1, "", "rsample"], [291, 1, 1, "", "sample"]], "torchrl.modules.OnlineDTActor": [[293, 1, 1, "", "default_config"], [293, 1, 1, "", "forward"]], "torchrl.modules.OrnsteinUhlenbeckProcessModule": [[295, 1, 1, "", "forward"], [295, 1, 1, "", "step"]], "torchrl.modules.QMixer": [[296, 1, 1, "", "mix"]], "torchrl.modules.RSSMPosterior": [[298, 1, 1, "", "forward"]], "torchrl.modules.RSSMPrior": [[299, 1, 1, "", "forward"]], "torchrl.modules.SqueezeLayer": [[301, 1, 1, "", "forward"]], "torchrl.modules.TanhDelta": [[302, 2, 1, "", "mean"], [302, 2, 1, "", "mode"]], "torchrl.modules.TanhNormal": [[303, 1, 1, "", "get_mode"], [303, 2, 1, "", "mean"], [303, 2, 1, "", "mode"], [303, 2, 1, "", "support"]], "torchrl.modules.TruncatedNormal": [[304, 1, 1, "", "log_prob"], [304, 2, 1, "", "mode"]], "torchrl.modules.VDNMixer": [[305, 1, 1, "", "mix"]], "torchrl.modules.VmapModule": [[306, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module": [[310, 0, 1, "", "Actor"], [311, 0, 1, "", "ActorCriticOperator"], [312, 0, 1, "", "ActorCriticWrapper"], [313, 0, 1, "", "ActorValueOperator"], [314, 0, 1, "", "DecisionTransformerInferenceWrapper"], [315, 0, 1, "", "DistributionalQValueActor"], [316, 0, 1, "", "DistributionalQValueModule"], [317, 0, 1, "", "LMHeadActorValueOperator"], [318, 0, 1, "", "MultiStepActorWrapper"], [319, 0, 1, "", "ProbabilisticActor"], [320, 0, 1, "", "QValueActor"], [321, 0, 1, "", "QValueModule"], [322, 0, 1, "", "SafeModule"], [323, 0, 1, "", "SafeProbabilisticModule"], [324, 0, 1, "", "SafeProbabilisticTensorDictSequential"], [325, 0, 1, "", "SafeSequential"], [326, 0, 1, "", "TanhModule"], [327, 0, 1, "", "ValueOperator"], [328, 0, 1, "", "WorldModelWrapper"]], "torchrl.modules.tensordict_module.ActorCriticOperator": [[311, 1, 1, "", "get_critic_operator"], [311, 1, 1, "", "get_policy_head"], [311, 1, 1, "", "get_value_head"], [311, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorCriticWrapper": [[312, 1, 1, "", "get_policy_head"], [312, 1, 1, "", "get_policy_operator"], [312, 1, 1, "", "get_value_head"], [312, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorValueOperator": [[313, 1, 1, "", "get_policy_head"], [313, 1, 1, "", "get_policy_operator"], [313, 1, 1, "", "get_value_head"], [313, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper": [[314, 1, 1, "", "forward"], [314, 1, 1, "", "mask_context"], [314, 1, 1, "", "set_tensor_keys"]], "torchrl.modules.tensordict_module.DistributionalQValueModule": [[316, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.MultiStepActorWrapper": [[318, 1, 1, "", "forward"], [318, 2, 1, "", "init_key"]], "torchrl.modules.tensordict_module.QValueModule": [[321, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.SafeModule": [[322, 1, 1, "", "random"], [322, 1, 1, "", "random_sample"], [322, 1, 1, "", "to"]], "torchrl.modules.tensordict_module.SafeProbabilisticModule": [[323, 1, 1, "", "random"], [323, 1, 1, "", "random_sample"]], "torchrl.modules.tensordict_module.TanhModule": [[326, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.WorldModelWrapper": [[328, 1, 1, "", "get_reward_operator"], [328, 1, 1, "", "get_transition_model_operator"]], "torchrl.modules.utils": [[329, 0, 1, "", "biased_softplus"], [330, 0, 1, "", "get_primers_from_module"], [331, 0, 1, "", "inv_softplus"], [332, 0, 1, "", "mappings"]], "torchrl.modules.utils.biased_softplus": [[329, 1, 1, "", "forward"]], "torchrl.objectives": [[333, 0, 1, "", "A2CLoss"], [334, 0, 1, "", "CQLLoss"], [335, 0, 1, "", "ClipPPOLoss"], [336, 0, 1, "", "CrossQLoss"], [337, 0, 1, "", "DDPGLoss"], [338, 0, 1, "", "DQNLoss"], [339, 0, 1, "", "DTLoss"], [340, 0, 1, "", "DiscreteCQLLoss"], [341, 0, 1, "", "DiscreteIQLLoss"], [342, 0, 1, "", "DiscreteSACLoss"], [343, 0, 1, "", "DistributionalDQNLoss"], [344, 0, 1, "", "DreamerActorLoss"], [345, 0, 1, "", "DreamerModelLoss"], [346, 0, 1, "", "DreamerValueLoss"], [347, 0, 1, "", "GAILLoss"], [348, 0, 1, "", "HardUpdate"], [349, 0, 1, "", "IQLLoss"], [350, 0, 1, "", "KLPENPPOLoss"], [351, 0, 1, "", "LossModule"], [352, 0, 1, "", "OnlineDTLoss"], [353, 0, 1, "", "PPOLoss"], [354, 0, 1, "", "REDQLoss"], [355, 0, 1, "", "ReinforceLoss"], [356, 0, 1, "", "SACLoss"], [357, 0, 1, "", "SoftUpdate"], [358, 0, 1, "", "TD3BCLoss"], [359, 0, 1, "", "TD3Loss"], [360, 0, 1, "", "ValueEstimators"], [361, 0, 1, "", "default_value_kwargs"], [362, 0, 1, "", "distance_loss"], [363, 0, 1, "", "group_optimizers"], [364, 0, 1, "", "hold_out_net"], [365, 0, 1, "", "hold_out_params"], [367, 0, 1, "", "next_state_value"]], "torchrl.objectives.A2CLoss": [[333, 4, 1, "", "default_keys"], [333, 1, 1, "", "forward"], [333, 2, 1, "", "functional"], [333, 1, 1, "", "loss_critic"], [333, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.CQLLoss": [[334, 4, 1, "", "default_keys"], [334, 1, 1, "", "forward"], [334, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ClipPPOLoss": [[335, 1, 1, "", "forward"]], "torchrl.objectives.CrossQLoss": [[336, 1, 1, "", "actor_loss"], [336, 1, 1, "", "alpha_loss"], [336, 4, 1, "", "default_keys"], [336, 1, 1, "", "forward"], [336, 1, 1, "", "load_state_dict"], [336, 1, 1, "", "make_value_estimator"], [336, 1, 1, "", "maybe_init_target_entropy"], [336, 1, 1, "", "qvalue_loss"], [336, 1, 1, "", "set_keys"], [336, 1, 1, "", "state_dict"], [336, 2, 1, "", "target_entropy_buffer"]], "torchrl.objectives.DDPGLoss": [[337, 4, 1, "", "default_keys"], [337, 1, 1, "", "forward"], [337, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DQNLoss": [[338, 4, 1, "", "default_keys"], [338, 1, 1, "", "forward"], [338, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DTLoss": [[339, 4, 1, "", "default_keys"], [339, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteCQLLoss": [[340, 4, 1, "", "default_keys"], [340, 1, 1, "", "forward"], [340, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DiscreteIQLLoss": [[341, 4, 1, "", "default_keys"], [341, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteSACLoss": [[342, 4, 1, "", "default_keys"], [342, 1, 1, "", "forward"], [342, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DistributionalDQNLoss": [[343, 4, 1, "", "default_keys"], [343, 1, 1, "", "forward"], [343, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerActorLoss": [[344, 4, 1, "", "default_keys"], [344, 1, 1, "", "forward"], [344, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerModelLoss": [[345, 4, 1, "", "default_keys"], [345, 1, 1, "", "forward"]], "torchrl.objectives.DreamerValueLoss": [[346, 4, 1, "", "default_keys"], [346, 1, 1, "", "forward"]], "torchrl.objectives.GAILLoss": [[347, 4, 1, "", "default_keys"], [347, 1, 1, "", "forward"]], "torchrl.objectives.IQLLoss": [[349, 4, 1, "", "default_keys"], [349, 1, 1, "", "forward"], [349, 1, 1, "", "loss_value_diff"], [349, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.KLPENPPOLoss": [[350, 1, 1, "", "forward"]], "torchrl.objectives.LossModule": [[351, 1, 1, "", "convert_to_functional"], [351, 1, 1, "", "forward"], [351, 1, 1, "", "from_stateful_net"], [351, 2, 1, "", "functional"], [351, 1, 1, "", "get_stateful_net"], [351, 1, 1, "", "make_value_estimator"], [351, 1, 1, "", "named_parameters"], [351, 1, 1, "", "parameters"], [351, 1, 1, "", "reset_parameters_recursive"], [351, 1, 1, "", "set_keys"], [351, 2, 1, "", "value_estimator"], [351, 2, 1, "", "vmap_randomness"]], "torchrl.objectives.OnlineDTLoss": [[352, 4, 1, "", "default_keys"], [352, 1, 1, "", "forward"]], "torchrl.objectives.PPOLoss": [[353, 4, 1, "", "default_keys"], [353, 1, 1, "", "forward"], [353, 2, 1, "", "functional"], [353, 1, 1, "", "loss_critic"], [353, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.REDQLoss": [[354, 4, 1, "", "default_keys"], [354, 1, 1, "", "forward"], [354, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ReinforceLoss": [[355, 4, 1, "", "default_keys"], [355, 1, 1, "", "forward"], [355, 2, 1, "", "functional"], [355, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.SACLoss": [[356, 4, 1, "", "default_keys"], [356, 1, 1, "", "forward"], [356, 1, 1, "", "load_state_dict"], [356, 1, 1, "", "make_value_estimator"], [356, 1, 1, "", "state_dict"]], "torchrl.objectives.TD3BCLoss": [[358, 1, 1, "", "actor_loss"], [358, 4, 1, "", "default_keys"], [358, 1, 1, "", "forward"], [358, 1, 1, "", "make_value_estimator"], [358, 1, 1, "", "qvalue_loss"]], "torchrl.objectives.TD3Loss": [[359, 4, 1, "", "default_keys"], [359, 1, 1, "", "forward"], [359, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.multiagent": [[366, 0, 1, "", "QMixerLoss"]], "torchrl.objectives.multiagent.QMixerLoss": [[366, 4, 1, "", "default_keys"], [366, 1, 1, "", "forward"], [366, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.value": [[368, 0, 1, "", "GAE"], [369, 0, 1, "", "TD0Estimator"], [370, 0, 1, "", "TD1Estimator"], [371, 0, 1, "", "TDLambdaEstimator"], [372, 0, 1, "", "ValueEstimatorBase"]], "torchrl.objectives.value.GAE": [[368, 1, 1, "", "forward"], [368, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD0Estimator": [[369, 1, 1, "", "forward"], [369, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD1Estimator": [[370, 1, 1, "", "forward"], [370, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TDLambdaEstimator": [[371, 1, 1, "", "forward"], [371, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.ValueEstimatorBase": [[372, 4, 1, "", "default_keys"], [372, 1, 1, "", "forward"], [372, 1, 1, "", "set_keys"], [372, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.functional": [[373, 0, 1, "", "generalized_advantage_estimate"], [374, 0, 1, "", "reward2go"], [375, 0, 1, "", "td0_advantage_estimate"], [376, 0, 1, "", "td0_return_estimate"], [377, 0, 1, "", "td1_advantage_estimate"], [378, 0, 1, "", "td1_return_estimate"], [379, 0, 1, "", "td_lambda_advantage_estimate"], [380, 0, 1, "", "td_lambda_return_estimate"], [381, 0, 1, "", "vec_generalized_advantage_estimate"], [382, 0, 1, "", "vec_td1_advantage_estimate"], [383, 0, 1, "", "vec_td1_return_estimate"], [384, 0, 1, "", "vec_td_lambda_advantage_estimate"], [385, 0, 1, "", "vec_td_lambda_return_estimate"]], "torchrl.record": [[386, 3, 1, "", "PixelRenderTransform"], [387, 3, 1, "", "TensorDictRecorder"], [388, 3, 1, "", "VideoRecorder"]], "torchrl.record.loggers": [[389, 3, 1, "", "Logger"], [391, 3, 1, "", "generate_exp_name"], [392, 3, 1, "", "get_logger"]], "torchrl.record.loggers.csv": [[390, 3, 1, "", "CSVLogger"]], "torchrl.record.loggers.mlflow": [[393, 3, 1, "", "MLFlowLogger"]], "torchrl.record.loggers.tensorboard": [[394, 3, 1, "", "TensorboardLogger"]], "torchrl.record.loggers.wandb": [[395, 3, 1, "", "WandbLogger"]], "torchrl.trainers": [[397, 0, 1, "", "BatchSubSampler"], [398, 0, 1, "", "ClearCudaCache"], [399, 0, 1, "", "CountFramesLog"], [400, 0, 1, "", "LogScalar"], [401, 0, 1, "", "LogValidationReward"], [402, 0, 1, "", "OptimizerHook"], [403, 0, 1, "", "ReplayBufferTrainer"], [404, 0, 1, "", "RewardNormalizer"], [405, 0, 1, "", "SelectKeys"], [406, 0, 1, "", "Trainer"], [407, 0, 1, "", "TrainerHookBase"], [408, 0, 1, "", "UpdateWeights"]], "torchrl.trainers.BatchSubSampler": [[397, 1, 1, "", "register"]], "torchrl.trainers.ClearCudaCache": [[398, 1, 1, "", "register"]], "torchrl.trainers.CountFramesLog": [[399, 1, 1, "", "register"]], "torchrl.trainers.LogScalar": [[400, 1, 1, "", "register"]], "torchrl.trainers.LogValidationReward": [[401, 1, 1, "", "register"]], "torchrl.trainers.OptimizerHook": [[402, 1, 1, "", "register"]], "torchrl.trainers.ReplayBufferTrainer": [[403, 1, 1, "", "register"]], "torchrl.trainers.RewardNormalizer": [[404, 1, 1, "", "register"]], "torchrl.trainers.SelectKeys": [[405, 1, 1, "", "register"]], "torchrl.trainers.Trainer": [[406, 1, 1, "", "load_from_file"]], "torchrl.trainers.TrainerHookBase": [[407, 1, 1, "", "register"]], "torchrl.trainers.UpdateWeights": [[408, 1, 1, "", "register"]], "torchrl.trainers.helpers": [[409, 3, 1, "", "correct_for_frame_skip"], [410, 3, 1, "", "get_stats_random_rollout"], [411, 3, 1, "", "make_collector_offpolicy"], [412, 3, 1, "", "make_collector_onpolicy"], [413, 3, 1, "", "make_dqn_loss"], [414, 3, 1, "", "make_replay_buffer"], [415, 3, 1, "", "make_target_updater"], [416, 3, 1, "", "make_trainer"], [417, 3, 1, "", "parallel_env_constructor"], [418, 3, 1, "", "sync_async_collector"], [419, 3, 1, "", "sync_sync_collector"], [420, 3, 1, "", "transformed_env_constructor"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:property", "3": "py:function", "4": "py:attribute"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "property", "Python property"], "3": ["py", "function", "Python function"], "4": ["py", "attribute", "Python attribute"]}, "titleterms": {"torchrl": [0, 1, 2, 3, 6, 9, 424, 425, 426, 427, 429, 430, 431, 433, 435, 442, 443, 444, 448, 449], "instal": [0, 6, 7, 448], "get": [0, 434, 435, 436, 437, 438, 439], "start": [0, 434, 435, 436, 437, 438, 439], "tutori": [0, 431, 442, 443], "basic": [0, 446], "intermedi": [0, 8], "advanc": 0, "refer": [0, 422], "knowledg": [0, 423], "base": [0, 2, 7, 423, 433], "indic": 0, "tabl": 0, "collector": [1, 429, 430, 431, 432, 437, 439, 442, 443, 448], "packag": [1, 2, 3, 424, 425, 426, 427], "batch": [1, 3, 429, 444, 446], "size": [1, 3, 429, 446], "polici": [1, 2, 4, 425, 429, 431, 432, 433, 435, 439, 441, 442, 443, 444], "copi": 1, "weight": 1, "synchron": 1, "distribut": [1, 424], "environ": [1, 3, 4, 6, 7, 429, 430, 431, 432, 434, 439, 441, 442, 443, 444, 448, 449], "local": 1, "remot": 1, "updat": [1, 429], "extend": 1, "class": [1, 3, 444, 448], "default": 1, "implement": [1, 4], "practic": 1, "consider": [1, 436], "replai": [1, 2, 3, 429, 430, 431, 432, 437, 439, 442, 443, 446, 448], "buffer": [1, 2, 3, 429, 430, 431, 432, 437, 439, 442, 443, 446, 448], "interoper": 1, "singl": [1, 4], "node": 1, "data": [1, 2, 4, 429, 430, 431, 437, 439, 442, 443, 448], "helper": [1, 3], "function": [1, 4, 425, 430, 431, 436, 442, 443, 448], "compos": [2, 195], "support": 2, "type": 2, "choos": 2, "storag": [2, 115, 429, 437, 446], "sampl": [2, 446], "index": 2, "share": 2, "across": 2, "process": 2, "store": [2, 430, 446], "trajectori": [2, 446], "checkpoint": [2, 426], "episod": [2, 4], "format": 2, "ted": [2, 434], "The": [2, 429], "rational": 2, "behind": 2, "structur": [2, 446], "A": [2, 430, 446], "note": 2, "singleton": [2, 4], "dimens": 2, "flatten": 2, "reduc": 2, "memori": 2, "consumpt": 2, "dimension": [2, 4], "tensordict": [2, 424, 446, 448], "special": [2, 435, 448], "case": 2, "footnot": 2, "multi": [2, 3, 424, 425, 441, 442, 443], "agent": [2, 3, 4, 424, 425, 442, 443], "present": 2, "rnn": 2, "transform": [2, 3, 240, 429, 431, 434, 442, 443, 444, 446, 448, 449], "step": [2, 3, 429, 431, 434, 437, 442, 443, 446, 449], "what": [2, 5], "about": 2, "requir": 2, "dataset": 2, "tensorspec": [2, 83], "numer": 2, "subclass": [2, 3], "categor": [2, 35], "tree": [2, 85], "forest": 2, "tensordictmap": [2, 78], "mctsforest": [2, 51], "larg": 2, "languag": 2, "model": [2, 4, 424, 429, 430, 432, 433, 436, 445, 448], "reinforc": [2, 425, 431, 442, 443], "learn": [2, 4, 424, 431, 442, 443], "from": [2, 6, 7], "human": 2, "feedback": 2, "rlhf": 2, "util": [2, 424, 425, 426, 442], "env": [3, 444, 448, 449], "spec": [3, 444, 449], "lock": 3, "method": [3, 429], "partial": 3, "reset": [3, 444, 449], "vector": [3, 448], "async": [3, 448], "exampl": [3, 11, 430, 446], "custom": [3, 11, 444, 446], "nativ": 3, "auto": 3, "dynam": [3, 4, 446], "forward": [3, 4, 429], "invers": 3, "understand": 3, "kei": 3, "tensor": [3, 446], "expos": 3, "outsid": 3, "world": 3, "design": [3, 439], "your": [3, 4, 6, 429, 433, 439, 444], "own": [3, 439], "tip": 3, "us": [3, 4, 6, 9, 425, 432, 445, 446, 448], "clone": [3, 7], "mask": 3, "action": [3, 4, 425, 432, 444], "record": [3, 426, 429, 438], "video": [3, 11, 438], "domain": [3, 424], "specif": [3, 424, 441], "librari": [3, 448], "thing": [4, 429, 444], "consid": 4, "when": [4, 7], "debug": 4, "rl": [4, 9, 434, 436, 448], "gener": [4, 11, 424], "have": 4, "you": 4, "valid": 4, "algorithm": [4, 424], "few": 4, "small": 4, "toi": 4, "problem": 4, "known": 4, "optim": [4, 429, 430, 436, 439], "return": [4, 425], "e": 4, "g": 4, "gridworld": 4, "mountaincar": 4, "visual": 4, "Be": 4, "veri": 4, "care": 4, "ani": 4, "augment": 4, "doe": 4, "entropi": 4, "converg": 4, "too": [4, 8], "quickli": 4, "slowli": 4, "chang": [4, 448], "drastic": 4, "reward": 4, "beyond": 4, "go": 4, "up": [4, 6], "Is": 4, "favor": 4, "compon": 4, "i": 4, "veloc": 4, "vs": 4, "l2": 4, "magnitud": 4, "task": [4, 441], "horizon": 4, "extrem": 4, "long": 4, "ar": 4, "normal": [4, 429, 430, 431], "standard": 4, "explor": [4, 424, 429, 430, 435], "valu": [4, 424, 425, 429, 431, 432, 435], "loss": [4, 429, 430, 431, 432, 439, 442, 443], "earli": 4, "train": [4, 8, 425, 429, 431, 432, 433, 436, 439, 442, 443, 444], "roughli": 4, "uniformli": 4, "random": [4, 425, 442, 443], "intrins": 4, "decai": 4, "progress": 4, "remain": 4, "constant": [4, 430], "increas": 4, "an": [4, 431, 432, 434, 444], "can": 4, "low": 4, "also": 4, "offlin": 4, "observ": [4, 429], "space": 4, "effect": [4, 444], "dramat": 4, "dure": [4, 7], "high": 4, "work": [5, 6, 7, 433], "gym": [5, 448, 449], "openai": 5, "version": [5, 7, 10], "habitat": 6, "lab": 6, "set": [6, 11], "pip": [6, 7], "common": [6, 7, 8], "issu": [6, 7, 10], "mujoco": 7, "prerequisit": [7, 429], "render": [7, 11, 439, 442, 443, 449], "all": 7, "new": 7, "bindindg": 7, "2": 7, "1": 7, "old": 7, "bind": 7, "py": 7, "option": 7, "repo": [7, 9], "import": [7, 429], "pytorch": [8, 9, 10, 433], "error": 8, "solut": 8, "gradient": 8, "relat": 8, "newcom": 8, "my": 8, "slow": 8, "bug": 8, "resourc": 9, "paper": 9, "document": 9, "functorch": 9, "blog": 9, "websit": 9, "educ": 9, "forum": 9, "how": 10, "reproduc": [10, 444], "workaround": 10, "customis": 11, "tweak": 11, "principl": 11, "auto_unwrap_transformed_env": 12, "datacollectorbas": 13, "localweightupdaterbas": 14, "multiprocessedremoteweightupd": 15, "multisyncdatacollector": 16, "multiasyncdatacollector": 17, "rayremoteweightupdat": 18, "remoteweightupdaterbas": 19, "syncdatacollector": 20, "vanillalocalweightupdat": 21, "asyncdatacollector": 22, "distributeddatacollector": 23, "distributedsyncdatacollector": 24, "rpcdatacollector": 25, "raycollector": 26, "submitit_delayed_launch": 27, "split_trajectori": 28, "adaptiveklcontrol": 29, "binari": [30, 433], "binarydiscretetensorspec": 31, "binarytodecim": 32, "bound": 33, "boundedtensorspec": 34, "composit": 36, "compositespec": 37, "constantklcontrol": 38, "densifyreward": 39, "discretetensorspec": 40, "flat2t": 41, "h5combin": 42, "h5split": 43, "hashtoint": 44, "histori": 45, "llmdata": 46, "llminput": 47, "llmoutput": 48, "lazystackedcompositespec": 49, "lazystackedtensorspec": 50, "multicategor": 52, "multidiscretetensorspec": 53, "multionehot": 54, "multionehotdiscretetensorspec": 55, "multistep": 56, "nested2t": 57, "nontensor": 58, "nontensorspec": 59, "onehot": 60, "onehotdiscretetensorspec": 61, "pairwisedataset": 62, "prioritizedreplaybuff": 63, "promptdata": 64, "prompttensordicttoken": 65, "querymodul": 66, "randomprojectionhash": 67, "rayreplaybuff": 68, "remotetensordictreplaybuff": 69, "replaybuff": 70, "rewarddata": 71, "rolloutfrommodel": 72, "siphash": 73, "stack": [74, 231], "stackedcomposit": 75, "ted2flat": 76, "ted2nest": 77, "tensordictprioritizedreplaybuff": 79, "tensordictreplaybuff": 80, "tensordicttoken": 81, "tensormap": 82, "tokenizeddatasetload": 84, "unbound": 86, "unboundedcontinu": 87, "unboundedcontinuoustensorspec": 88, "unboundeddiscret": 89, "unboundeddiscretetensorspec": 90, "check_no_exclusive_kei": 91, "consolidate_spec": 92, "contains_lazy_spec": 93, "create_infinite_iter": 94, "get_dataload": 95, "flatstoragecheckpoint": 96, "h5storagecheckpoint": 97, "immutabledatasetwrit": 98, "lazymemmapstorag": 99, "lazystackstorag": 100, "lazytensorstorag": 101, "liststorag": 102, "liststoragecheckpoint": 103, "nestedstoragecheckpoint": 104, "prioritizedsampl": 105, "prioritizedslicesampl": 106, "randomsampl": 107, "replaybufferensembl": 108, "roundrobinwrit": 109, "sampler": 110, "samplerensembl": 111, "samplerwithoutreplac": 112, "slicesampl": 113, "slicesamplerwithoutreplac": 114, "storagecheckpointerbas": 116, "storageensembl": 117, "storageensemblecheckpoint": 118, "tensordictmaxvaluewrit": 119, "tensordictroundrobinwrit": 120, "tensorstorag": 121, "tensorstoragecheckpoint": 122, "writer": 123, "writerensembl": 124, "asyncenvpool": 125, "braxenv": 126, "braxwrapp": 127, "chessenv": 128, "dmcontrolenv": 129, "dmcontrolwrapp": 130, "envbas": [131, 444], "envcreat": 132, "envmetadata": 133, "gymenv": 134, "gymlikeenv": 135, "gymwrapp": 136, "habitatenv": 137, "isaacgymenv": 138, "isaacgymwrapp": 139, "jumanjienv": 140, "jumanjiwrapp": 141, "llmenv": 142, "llmhashingenv": 143, "mogymenv": 144, "mogymwrapp": 145, "marlgroupmaptyp": 146, "meltingpotenv": 147, "meltingpotwrapp": 148, "modelbasedenvbas": 149, "multithreadedenv": 150, "multithreadedenvwrapp": 151, "openmlenv": 152, "openspielenv": 153, "openspielwrapp": 154, "parallelenv": 155, "pendulumenv": 156, "pettingzooenv": 157, "pettingzoowrapp": 158, "processorasyncenvpool": 159, "randompolici": 160, "robohiveenv": 161, "smacv2env": 162, "smacv2wrapp": 163, "serialenv": 164, "threadingasyncenvpool": 165, "tictactoeenv": 166, "unitymlagentsenv": 167, "unitymlagentswrapp": 168, "vmasenv": 169, "vmaswrapp": 170, "check_env_spec": 171, "check_marl_group": 172, "exploration_typ": 173, "get_available_librari": 174, "gym_backend": 175, "make_composite_from_td": 176, "dreamerdecod": 177, "dreamerenv": 178, "register_gym_spec_convers": 179, "set_exploration_typ": 180, "set_gym_backend": 181, "step_mdp": 182, "terminated_or_trunc": 183, "actiondiscret": 184, "actionmask": 185, "autoresetenv": 186, "autoresettransform": 187, "batchsizetransform": 188, "binarizereward": 189, "burnintransform": 190, "catfram": [191, 446], "cattensor": 192, "centercrop": 193, "cliptransform": 194, "conditionalskip": 196, "crop": 197, "dtypecasttransform": 198, "dataloadingprim": 199, "devicecasttransform": 200, "discreteactionproject": 201, "doubletofloat": 202, "endoflifetransform": 203, "excludetransform": 204, "finitetensordictcheck": 205, "flattenobserv": 206, "frameskiptransform": 207, "grayscal": 208, "hash": 209, "inittrack": 210, "klrewardtransform": 211, "linearisereward": 212, "multiact": 213, "noopresetenv": 214, "observationnorm": 215, "observationtransform": 216, "permutetransform": 217, "pinmemorytransform": 218, "r3mtransform": 219, "randomcroptensordict": 220, "removeemptyspec": 221, "renametransform": 222, "resiz": 223, "reward2gotransform": 224, "rewardclip": 225, "rewardsc": 226, "rewardsum": 227, "selecttransform": 228, "signtransform": 229, "squeezetransform": 230, "stepcount": 232, "targetreturn": 233, "tensordictprim": 234, "timemaxpool": 235, "timer": 236, "totensorimag": 237, "token": 238, "trajcount": 239, "transformedenv": 241, "unarytransform": 242, "unsqueezetransform": 243, "vc1transform": 244, "viprewardtransform": 245, "viptransform": 246, "vecgymenvtransform": 247, "vecnorm": [248, 449], "vecnormv2": 249, "gsdenois": 250, "multisteptransform": 251, "implement_for": 252, "additivegaussianmodul": 253, "batchrenorm1d": 254, "cemplann": 255, "consistentdropout": 256, "consistentdropoutmodul": 257, "conv3dnet": 258, "convnet": 259, "dtactor": 260, "ddpgcnnactor": 261, "ddpgcnnqnet": 262, "ddpgmlpactor": 263, "ddpgmlpqnet": 264, "decisiontransform": 265, "delta": 266, "distributionaldqnnet": 267, "distributionalqvaluehook": 268, "dreameractor": 269, "duelingcnndqnet": 270, "egreedymodul": 271, "gru": 272, "grucel": 273, "grumodul": 274, "independentnorm": 275, "lstm": [276, 432], "lstmcell": 277, "lstmmodul": 278, "mlp": [279, 432], "mpcplannerbas": 280, "mppiplann": 281, "maskedcategor": 282, "maskedonehotcategor": 283, "multiagentconvnet": 284, "multiagentmlp": 285, "multiagentnetbas": 286, "noisylazylinear": 287, "noisylinear": 288, "obsdecod": 289, "obsencod": 290, "onehotcategor": 291, "onehotordin": 292, "onlinedtactor": 293, "ordin": 294, "ornsteinuhlenbeckprocessmodul": 295, "qmixer": [296, 425], "qvaluehook": 297, "rssmposterior": 298, "rssmprior": 299, "squeeze2dlay": 300, "squeezelay": 301, "tanhdelta": 302, "tanhnorm": 303, "truncatednorm": 304, "vdnmixer": 305, "vmapmodul": 306, "recurrent_mod": 307, "reset_nois": 308, "set_recurrent_mod": 309, "actor": [310, 424, 429, 435], "actorcriticoper": 311, "actorcriticwrapp": 312, "actorvalueoper": 313, "decisiontransformerinferencewrapp": 314, "distributionalqvalueactor": 315, "distributionalqvaluemodul": 316, "lmheadactorvalueoper": 317, "multistepactorwrapp": 318, "probabilisticactor": 319, "qvalueactor": [320, 424], "qvaluemodul": 321, "safemodul": [322, 424], "safeprobabilisticmodul": 323, "safeprobabilistictensordictsequenti": 324, "safesequenti": 325, "tanhmodul": 326, "valueoper": 327, "worldmodelwrapp": 328, "biased_softplu": 329, "get_primers_from_modul": 330, "inv_softplu": 331, "map": [332, 442], "a2closs": 333, "cqlloss": 334, "clipppoloss": 335, "crossqloss": 336, "ddpgloss": 337, "dqnloss": 338, "dtloss": 339, "discretecqlloss": 340, "discreteiqlloss": 341, "discretesacloss": 342, "distributionaldqnloss": 343, "dreameractorloss": 344, "dreamermodelloss": 345, "dreamervalueloss": 346, "gailloss": 347, "hardupd": 348, "iqlloss": 349, "klpenppoloss": 350, "lossmodul": [351, 429, 436], "onlinedtloss": 352, "ppoloss": 353, "redqloss": 354, "reinforceloss": 355, "sacloss": 356, "softupd": 357, "td3bcloss": 358, "td3loss": 359, "valueestim": 360, "default_value_kwarg": 361, "distance_loss": 362, "group_optim": 363, "hold_out_net": 364, "hold_out_param": 365, "qmixerloss": 366, "next_state_valu": 367, "gae": 368, "td0estim": 369, "td1estim": 370, "tdlambdaestim": 371, "valueestimatorbas": 372, "generalized_advantage_estim": 373, "reward2go": 374, "td0_advantage_estim": 375, "td0_return_estim": 376, "td1_advantage_estim": 377, "td1_return_estim": 378, "td_lambda_advantage_estim": 379, "td_lambda_return_estim": 380, "vec_generalized_advantage_estim": 381, "vec_td1_advantage_estim": 382, "vec_td1_return_estim": 383, "vec_td_lambda_advantage_estim": 384, "vec_td_lambda_return_estim": 385, "pixelrendertransform": 386, "tensordictrecord": 387, "videorecord": 388, "logger": [389, 426, 438, 439], "csvlogger": 390, "generate_exp_nam": 391, "get_logg": 392, "mlflowlogg": 393, "tensorboardlogg": 394, "wandblogg": 395, "set_auto_unwrap_transformed_env": 396, "batchsubsampl": 397, "clearcudacach": 398, "countframeslog": 399, "logscalar": 400, "logvalidationreward": 401, "optimizerhook": 402, "replaybuffertrain": 403, "rewardnorm": 404, "selectkei": 405, "trainer": [406, 426, 430], "trainerhookbas": 407, "updateweight": 408, "correct_for_frame_skip": 409, "get_stats_random_rollout": 410, "make_collector_offpolici": 411, "make_collector_onpolici": 412, "make_dqn_loss": 413, "make_replay_buff": 414, "make_target_updat": 415, "make_train": 416, "parallel_env_constructor": 417, "sync_async_collector": 418, "sync_sync_collector": 419, "transformed_env_constructor": 420, "readm": [421, 440], "tuto": [421, 440], "api": 422, "contribut": [423, 448], "content": 423, "modul": [424, 429, 432, 433, 435, 439, 448], "tensordictmodul": [424, 433, 435, 448], "wrapper": [424, 435], "probabilist": [424, 435], "q": [424, 430, 432, 435], "oper": 424, "join": 424, "hook": [424, 426, 430], "regular": 424, "planner": 424, "object": [425, 429, 436, 448], "torch": 425, "vmap": [425, 448], "dqn": [425, 430, 432], "ddpg": [425, 429, 442], "sac": 425, "redq": 425, "crossq": 425, "iql": 425, "cql": 425, "gail": 425, "dt": 425, "td3": 425, "bc": 425, "ppo": [425, 431, 443], "head": 425, "a2c": 425, "dreamer": 425, "builder": 426, "_util": 427, "comput": [428, 430, 444, 447], "time": [428, 429, 447], "code": [429, 444], "overview": [429, 432], "setup": [429, 432], "__init__": 429, "estim": 429, "put": 429, "togeth": [429, 444], "call": 429, "parallel": [429, 441, 449], "execut": [429, 441, 444], "stat": 429, "build": [429, 430, 439, 446], "evalu": 429, "construct": 429, "target": [429, 430, 436], "network": [429, 430, 431, 432, 435, 442, 443], "experi": [429, 444], "result": [429, 431, 442, 443], "conclus": [429, 430, 431, 432, 433, 442, 443, 444, 446], "next": [429, 431, 434, 437, 442, 443, 446], "deep": 430, "collect": [430, 431, 437], "paramet": [430, 431, 436], "hyperparamet": [430, 431, 442, 443], "regist": 430, "possibl": 430, "improv": 430, "defin": [431, 442, 443], "loop": [431, 432, 433, 439, 442, 443, 444], "recurr": [432, 433], "convolut": 432, "select": 432, "further": [432, 436], "read": 432, "export": 433, "introduct": [433, 448], "fast": 433, "recap": 433, "simpl": [433, 444], "stochast": 433, "aotinductor": 433, "free": 433, "c": 433, "onnx": 433, "run": [433, 434, 449], "rollout": [433, 434, 441, 442, 443, 444, 449], "creat": 434, "s": [435, 436], "output": 436, "log": 438, "first": 439, "divers": 441, "competit": 442, "group": 442, "critic": [442, 443], "pendulum": 444, "write": 444, "_step": 444, "simul": 444, "_reset": 444, "metadata": 444, "_spec": 444, "shape": 444, "seed": [444, 449], "wrap": 444, "test": 444, "our": 444, "pretrain": 445, "vanilla": 446, "integr": 446, "tensorclass": 446, "other": 446, "pytre": 446, "iter": 446, "over": 446, "fix": 446, "priorit": 446, "save": 446, "raw": 446, "imag": 446, "more": 446, "complex": 446, "config": 448, "sequenc": 448, "program": 448, "ensembl": 448, "meta": 448, "sync": 448, "multiprocess": 448, "frame_skip": 449, "deepmind": 449, "control": 449, "devic": 449, "close": 449, "access": 449, "attribut": 449, "kwarg": 449}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 56}})