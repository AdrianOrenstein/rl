Search.setIndex({"docnames": ["index", "reference/collectors", "reference/data", "reference/envs", "reference/generated/knowledge_base/DEBUGGING_RL", "reference/generated/knowledge_base/GYM", "reference/generated/knowledge_base/HABITAT", "reference/generated/knowledge_base/MUJOCO_INSTALLATION", "reference/generated/knowledge_base/PRO-TIPS", "reference/generated/knowledge_base/RESOURCES", "reference/generated/knowledge_base/VERSIONING_ISSUES", "reference/generated/knowledge_base/VIDEO_CUSTOMISATION", "reference/generated/torchrl.auto_unwrap_transformed_env", "reference/generated/torchrl.collectors.DataCollectorBase", "reference/generated/torchrl.collectors.MultiSyncDataCollector", "reference/generated/torchrl.collectors.MultiaSyncDataCollector", "reference/generated/torchrl.collectors.RayWeightUpdater", "reference/generated/torchrl.collectors.SyncDataCollector", "reference/generated/torchrl.collectors.VanillaWeightUpdater", "reference/generated/torchrl.collectors.WeightUpdaterBase", "reference/generated/torchrl.collectors.aSyncDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector", "reference/generated/torchrl.collectors.distributed.RPCDataCollector", "reference/generated/torchrl.collectors.distributed.RayCollector", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher", "reference/generated/torchrl.collectors.utils.split_trajectories", "reference/generated/torchrl.data.AdaptiveKLController", "reference/generated/torchrl.data.Binary", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec", "reference/generated/torchrl.data.BinaryToDecimal", "reference/generated/torchrl.data.Bounded", "reference/generated/torchrl.data.BoundedTensorSpec", "reference/generated/torchrl.data.Categorical", "reference/generated/torchrl.data.Composite", "reference/generated/torchrl.data.CompositeSpec", "reference/generated/torchrl.data.ConstantKLController", "reference/generated/torchrl.data.DensifyReward", "reference/generated/torchrl.data.DiscreteTensorSpec", "reference/generated/torchrl.data.Flat2TED", "reference/generated/torchrl.data.H5Combine", "reference/generated/torchrl.data.H5Split", "reference/generated/torchrl.data.HashToInt", "reference/generated/torchrl.data.LazyStackedCompositeSpec", "reference/generated/torchrl.data.LazyStackedTensorSpec", "reference/generated/torchrl.data.MCTSForest", "reference/generated/torchrl.data.MultiCategorical", "reference/generated/torchrl.data.MultiDiscreteTensorSpec", "reference/generated/torchrl.data.MultiOneHot", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec", "reference/generated/torchrl.data.MultiStep", "reference/generated/torchrl.data.Nested2TED", "reference/generated/torchrl.data.NonTensor", "reference/generated/torchrl.data.NonTensorSpec", "reference/generated/torchrl.data.OneHot", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec", "reference/generated/torchrl.data.PairwiseDataset", "reference/generated/torchrl.data.PrioritizedReplayBuffer", "reference/generated/torchrl.data.PromptData", "reference/generated/torchrl.data.PromptTensorDictTokenizer", "reference/generated/torchrl.data.QueryModule", "reference/generated/torchrl.data.RandomProjectionHash", "reference/generated/torchrl.data.RayReplayBuffer", "reference/generated/torchrl.data.RemoteTensorDictReplayBuffer", "reference/generated/torchrl.data.ReplayBuffer", "reference/generated/torchrl.data.RewardData", "reference/generated/torchrl.data.RolloutFromModel", "reference/generated/torchrl.data.SipHash", "reference/generated/torchrl.data.Stacked", "reference/generated/torchrl.data.StackedComposite", "reference/generated/torchrl.data.TED2Flat", "reference/generated/torchrl.data.TED2Nested", "reference/generated/torchrl.data.TensorDictMap", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer", "reference/generated/torchrl.data.TensorDictReplayBuffer", "reference/generated/torchrl.data.TensorDictTokenizer", "reference/generated/torchrl.data.TensorMap", "reference/generated/torchrl.data.TensorSpec", "reference/generated/torchrl.data.TokenizedDatasetLoader", "reference/generated/torchrl.data.Tree", "reference/generated/torchrl.data.Unbounded", "reference/generated/torchrl.data.UnboundedContinuous", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec", "reference/generated/torchrl.data.UnboundedDiscrete", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec", "reference/generated/torchrl.data.check_no_exclusive_keys", "reference/generated/torchrl.data.consolidate_spec", "reference/generated/torchrl.data.contains_lazy_spec", "reference/generated/torchrl.data.create_infinite_iterator", "reference/generated/torchrl.data.get_dataloader", "reference/generated/torchrl.data.replay_buffers.FlatStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.H5StorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.ImmutableDatasetWriter", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage", "reference/generated/torchrl.data.replay_buffers.LazyStackStorage", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage", "reference/generated/torchrl.data.replay_buffers.ListStorage", "reference/generated/torchrl.data.replay_buffers.ListStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.NestedStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler", "reference/generated/torchrl.data.replay_buffers.PrioritizedSliceSampler", "reference/generated/torchrl.data.replay_buffers.RandomSampler", "reference/generated/torchrl.data.replay_buffers.ReplayBufferEnsemble", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.Sampler", "reference/generated/torchrl.data.replay_buffers.SamplerEnsemble", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.SliceSampler", "reference/generated/torchrl.data.replay_buffers.SliceSamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.Storage", "reference/generated/torchrl.data.replay_buffers.StorageCheckpointerBase", "reference/generated/torchrl.data.replay_buffers.StorageEnsemble", "reference/generated/torchrl.data.replay_buffers.StorageEnsembleCheckpointer", "reference/generated/torchrl.data.replay_buffers.TensorDictMaxValueWriter", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.TensorStorage", "reference/generated/torchrl.data.replay_buffers.TensorStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.Writer", "reference/generated/torchrl.data.replay_buffers.WriterEnsemble", "reference/generated/torchrl.envs.AsyncEnvPool", "reference/generated/torchrl.envs.BraxEnv", "reference/generated/torchrl.envs.BraxWrapper", "reference/generated/torchrl.envs.ChessEnv", "reference/generated/torchrl.envs.DMControlEnv", "reference/generated/torchrl.envs.DMControlWrapper", "reference/generated/torchrl.envs.EnvBase", "reference/generated/torchrl.envs.EnvCreator", "reference/generated/torchrl.envs.EnvMetaData", "reference/generated/torchrl.envs.GymEnv", "reference/generated/torchrl.envs.GymLikeEnv", "reference/generated/torchrl.envs.GymWrapper", "reference/generated/torchrl.envs.HabitatEnv", "reference/generated/torchrl.envs.IsaacGymEnv", "reference/generated/torchrl.envs.IsaacGymWrapper", "reference/generated/torchrl.envs.IsaacLabWrapper", "reference/generated/torchrl.envs.JumanjiEnv", "reference/generated/torchrl.envs.JumanjiWrapper", "reference/generated/torchrl.envs.LLMHashingEnv", "reference/generated/torchrl.envs.MOGymEnv", "reference/generated/torchrl.envs.MOGymWrapper", "reference/generated/torchrl.envs.MarlGroupMapType", "reference/generated/torchrl.envs.MeltingpotEnv", "reference/generated/torchrl.envs.MeltingpotWrapper", "reference/generated/torchrl.envs.ModelBasedEnvBase", "reference/generated/torchrl.envs.MultiThreadedEnv", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper", "reference/generated/torchrl.envs.OpenMLEnv", "reference/generated/torchrl.envs.OpenSpielEnv", "reference/generated/torchrl.envs.OpenSpielWrapper", "reference/generated/torchrl.envs.ParallelEnv", "reference/generated/torchrl.envs.PendulumEnv", "reference/generated/torchrl.envs.PettingZooEnv", "reference/generated/torchrl.envs.PettingZooWrapper", "reference/generated/torchrl.envs.ProcessorAsyncEnvPool", "reference/generated/torchrl.envs.RandomPolicy", "reference/generated/torchrl.envs.RoboHiveEnv", "reference/generated/torchrl.envs.SMACv2Env", "reference/generated/torchrl.envs.SMACv2Wrapper", "reference/generated/torchrl.envs.SerialEnv", "reference/generated/torchrl.envs.ThreadingAsyncEnvPool", "reference/generated/torchrl.envs.TicTacToeEnv", "reference/generated/torchrl.envs.UnityMLAgentsEnv", "reference/generated/torchrl.envs.UnityMLAgentsWrapper", "reference/generated/torchrl.envs.VmasEnv", "reference/generated/torchrl.envs.VmasWrapper", "reference/generated/torchrl.envs.check_env_specs", "reference/generated/torchrl.envs.check_marl_grouping", "reference/generated/torchrl.envs.exploration_type", "reference/generated/torchrl.envs.get_available_libraries", "reference/generated/torchrl.envs.gym_backend", "reference/generated/torchrl.envs.make_composite_from_td", "reference/generated/torchrl.envs.model_based.dreamer.DreamerDecoder", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv", "reference/generated/torchrl.envs.register_gym_spec_conversion", "reference/generated/torchrl.envs.set_exploration_type", "reference/generated/torchrl.envs.set_gym_backend", "reference/generated/torchrl.envs.step_mdp", "reference/generated/torchrl.envs.terminated_or_truncated", "reference/generated/torchrl.envs.transforms.ActionDiscretizer", "reference/generated/torchrl.envs.transforms.ActionMask", "reference/generated/torchrl.envs.transforms.AutoResetEnv", "reference/generated/torchrl.envs.transforms.AutoResetTransform", "reference/generated/torchrl.envs.transforms.BatchSizeTransform", "reference/generated/torchrl.envs.transforms.BinarizeReward", "reference/generated/torchrl.envs.transforms.BurnInTransform", "reference/generated/torchrl.envs.transforms.CatFrames", "reference/generated/torchrl.envs.transforms.CatTensors", "reference/generated/torchrl.envs.transforms.CenterCrop", "reference/generated/torchrl.envs.transforms.ClipTransform", "reference/generated/torchrl.envs.transforms.Compose", "reference/generated/torchrl.envs.transforms.ConditionalSkip", "reference/generated/torchrl.envs.transforms.Crop", "reference/generated/torchrl.envs.transforms.DTypeCastTransform", "reference/generated/torchrl.envs.transforms.DeviceCastTransform", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection", "reference/generated/torchrl.envs.transforms.DoubleToFloat", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform", "reference/generated/torchrl.envs.transforms.ExcludeTransform", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck", "reference/generated/torchrl.envs.transforms.FlattenObservation", "reference/generated/torchrl.envs.transforms.FrameSkipTransform", "reference/generated/torchrl.envs.transforms.GrayScale", "reference/generated/torchrl.envs.transforms.Hash", "reference/generated/torchrl.envs.transforms.InitTracker", "reference/generated/torchrl.envs.transforms.KLRewardTransform", "reference/generated/torchrl.envs.transforms.LineariseRewards", "reference/generated/torchrl.envs.transforms.MultiAction", "reference/generated/torchrl.envs.transforms.NoopResetEnv", "reference/generated/torchrl.envs.transforms.ObservationNorm", "reference/generated/torchrl.envs.transforms.ObservationTransform", "reference/generated/torchrl.envs.transforms.PermuteTransform", "reference/generated/torchrl.envs.transforms.PinMemoryTransform", "reference/generated/torchrl.envs.transforms.R3MTransform", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict", "reference/generated/torchrl.envs.transforms.RemoveEmptySpecs", "reference/generated/torchrl.envs.transforms.RenameTransform", "reference/generated/torchrl.envs.transforms.Resize", "reference/generated/torchrl.envs.transforms.Reward2GoTransform", "reference/generated/torchrl.envs.transforms.RewardClipping", "reference/generated/torchrl.envs.transforms.RewardScaling", "reference/generated/torchrl.envs.transforms.RewardSum", "reference/generated/torchrl.envs.transforms.SelectTransform", "reference/generated/torchrl.envs.transforms.SignTransform", "reference/generated/torchrl.envs.transforms.SqueezeTransform", "reference/generated/torchrl.envs.transforms.Stack", "reference/generated/torchrl.envs.transforms.StepCounter", "reference/generated/torchrl.envs.transforms.TargetReturn", "reference/generated/torchrl.envs.transforms.TensorDictPrimer", "reference/generated/torchrl.envs.transforms.TimeMaxPool", "reference/generated/torchrl.envs.transforms.Timer", "reference/generated/torchrl.envs.transforms.ToTensorImage", "reference/generated/torchrl.envs.transforms.Tokenizer", "reference/generated/torchrl.envs.transforms.TrajCounter", "reference/generated/torchrl.envs.transforms.Transform", "reference/generated/torchrl.envs.transforms.TransformedEnv", "reference/generated/torchrl.envs.transforms.UnaryTransform", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform", "reference/generated/torchrl.envs.transforms.VC1Transform", "reference/generated/torchrl.envs.transforms.VIPRewardTransform", "reference/generated/torchrl.envs.transforms.VIPTransform", "reference/generated/torchrl.envs.transforms.VecGymEnvTransform", "reference/generated/torchrl.envs.transforms.VecNorm", "reference/generated/torchrl.envs.transforms.VecNormV2", "reference/generated/torchrl.envs.transforms.gSDENoise", "reference/generated/torchrl.envs.transforms.rb_transforms.MultiStepTransform", "reference/generated/torchrl.implement_for", "reference/generated/torchrl.modules.AdditiveGaussianModule", "reference/generated/torchrl.modules.BatchRenorm1d", "reference/generated/torchrl.modules.CEMPlanner", "reference/generated/torchrl.modules.ConsistentDropout", "reference/generated/torchrl.modules.ConsistentDropoutModule", "reference/generated/torchrl.modules.Conv3dNet", "reference/generated/torchrl.modules.ConvNet", "reference/generated/torchrl.modules.DTActor", "reference/generated/torchrl.modules.DdpgCnnActor", "reference/generated/torchrl.modules.DdpgCnnQNet", "reference/generated/torchrl.modules.DdpgMlpActor", "reference/generated/torchrl.modules.DdpgMlpQNet", "reference/generated/torchrl.modules.DecisionTransformer", "reference/generated/torchrl.modules.Delta", "reference/generated/torchrl.modules.DistributionalDQNnet", "reference/generated/torchrl.modules.DistributionalQValueHook", "reference/generated/torchrl.modules.DreamerActor", "reference/generated/torchrl.modules.DuelingCnnDQNet", "reference/generated/torchrl.modules.EGreedyModule", "reference/generated/torchrl.modules.GRU", "reference/generated/torchrl.modules.GRUCell", "reference/generated/torchrl.modules.GRUModule", "reference/generated/torchrl.modules.IndependentNormal", "reference/generated/torchrl.modules.LSTM", "reference/generated/torchrl.modules.LSTMCell", "reference/generated/torchrl.modules.LSTMModule", "reference/generated/torchrl.modules.MLP", "reference/generated/torchrl.modules.MPCPlannerBase", "reference/generated/torchrl.modules.MPPIPlanner", "reference/generated/torchrl.modules.MaskedCategorical", "reference/generated/torchrl.modules.MaskedOneHotCategorical", "reference/generated/torchrl.modules.MultiAgentConvNet", "reference/generated/torchrl.modules.MultiAgentMLP", "reference/generated/torchrl.modules.MultiAgentNetBase", "reference/generated/torchrl.modules.NoisyLazyLinear", "reference/generated/torchrl.modules.NoisyLinear", "reference/generated/torchrl.modules.ObsDecoder", "reference/generated/torchrl.modules.ObsEncoder", "reference/generated/torchrl.modules.OneHotCategorical", "reference/generated/torchrl.modules.OneHotOrdinal", "reference/generated/torchrl.modules.OnlineDTActor", "reference/generated/torchrl.modules.Ordinal", "reference/generated/torchrl.modules.OrnsteinUhlenbeckProcessModule", "reference/generated/torchrl.modules.QMixer", "reference/generated/torchrl.modules.QValueHook", "reference/generated/torchrl.modules.RSSMPosterior", "reference/generated/torchrl.modules.RSSMPrior", "reference/generated/torchrl.modules.Squeeze2dLayer", "reference/generated/torchrl.modules.SqueezeLayer", "reference/generated/torchrl.modules.TanhDelta", "reference/generated/torchrl.modules.TanhNormal", "reference/generated/torchrl.modules.TruncatedNormal", "reference/generated/torchrl.modules.VDNMixer", "reference/generated/torchrl.modules.VmapModule", "reference/generated/torchrl.modules.recurrent_mode", "reference/generated/torchrl.modules.reset_noise", "reference/generated/torchrl.modules.set_recurrent_mode", "reference/generated/torchrl.modules.tensordict_module.Actor", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.MultiStepActorWrapper", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor", "reference/generated/torchrl.modules.tensordict_module.QValueActor", "reference/generated/torchrl.modules.tensordict_module.QValueModule", "reference/generated/torchrl.modules.tensordict_module.SafeModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential", "reference/generated/torchrl.modules.tensordict_module.SafeSequential", "reference/generated/torchrl.modules.tensordict_module.TanhModule", "reference/generated/torchrl.modules.tensordict_module.ValueOperator", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper", "reference/generated/torchrl.modules.utils.biased_softplus", "reference/generated/torchrl.modules.utils.get_primers_from_module", "reference/generated/torchrl.modules.utils.inv_softplus", "reference/generated/torchrl.modules.utils.mappings", "reference/generated/torchrl.objectives.A2CLoss", "reference/generated/torchrl.objectives.CQLLoss", "reference/generated/torchrl.objectives.ClipPPOLoss", "reference/generated/torchrl.objectives.CrossQLoss", "reference/generated/torchrl.objectives.DDPGLoss", "reference/generated/torchrl.objectives.DQNLoss", "reference/generated/torchrl.objectives.DTLoss", "reference/generated/torchrl.objectives.DiscreteCQLLoss", "reference/generated/torchrl.objectives.DiscreteIQLLoss", "reference/generated/torchrl.objectives.DiscreteSACLoss", "reference/generated/torchrl.objectives.DistributionalDQNLoss", "reference/generated/torchrl.objectives.DreamerActorLoss", "reference/generated/torchrl.objectives.DreamerModelLoss", "reference/generated/torchrl.objectives.DreamerValueLoss", "reference/generated/torchrl.objectives.GAILLoss", "reference/generated/torchrl.objectives.HardUpdate", "reference/generated/torchrl.objectives.IQLLoss", "reference/generated/torchrl.objectives.KLPENPPOLoss", "reference/generated/torchrl.objectives.LossModule", "reference/generated/torchrl.objectives.OnlineDTLoss", "reference/generated/torchrl.objectives.PPOLoss", "reference/generated/torchrl.objectives.REDQLoss", "reference/generated/torchrl.objectives.ReinforceLoss", "reference/generated/torchrl.objectives.SACLoss", "reference/generated/torchrl.objectives.SoftUpdate", "reference/generated/torchrl.objectives.TD3BCLoss", "reference/generated/torchrl.objectives.TD3Loss", "reference/generated/torchrl.objectives.ValueEstimators", "reference/generated/torchrl.objectives.default_value_kwargs", "reference/generated/torchrl.objectives.distance_loss", "reference/generated/torchrl.objectives.group_optimizers", "reference/generated/torchrl.objectives.hold_out_net", "reference/generated/torchrl.objectives.hold_out_params", "reference/generated/torchrl.objectives.multiagent.QMixerLoss", "reference/generated/torchrl.objectives.next_state_value", "reference/generated/torchrl.objectives.value.GAE", "reference/generated/torchrl.objectives.value.TD0Estimator", "reference/generated/torchrl.objectives.value.TD1Estimator", "reference/generated/torchrl.objectives.value.TDLambdaEstimator", "reference/generated/torchrl.objectives.value.ValueEstimatorBase", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.reward2go", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate", "reference/generated/torchrl.record.PixelRenderTransform", "reference/generated/torchrl.record.TensorDictRecorder", "reference/generated/torchrl.record.VideoRecorder", "reference/generated/torchrl.record.loggers.Logger", "reference/generated/torchrl.record.loggers.csv.CSVLogger", "reference/generated/torchrl.record.loggers.generate_exp_name", "reference/generated/torchrl.record.loggers.get_logger", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger", "reference/generated/torchrl.record.loggers.wandb.WandbLogger", "reference/generated/torchrl.set_auto_unwrap_transformed_env", "reference/generated/torchrl.trainers.BatchSubSampler", "reference/generated/torchrl.trainers.ClearCudaCache", "reference/generated/torchrl.trainers.CountFramesLog", "reference/generated/torchrl.trainers.LogScalar", "reference/generated/torchrl.trainers.LogValidationReward", "reference/generated/torchrl.trainers.OptimizerHook", "reference/generated/torchrl.trainers.ReplayBufferTrainer", "reference/generated/torchrl.trainers.RewardNormalizer", "reference/generated/torchrl.trainers.SelectKeys", "reference/generated/torchrl.trainers.Trainer", "reference/generated/torchrl.trainers.TrainerHookBase", "reference/generated/torchrl.trainers.UpdateWeights", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy", "reference/generated/torchrl.trainers.helpers.make_dqn_loss", "reference/generated/torchrl.trainers.helpers.make_replay_buffer", "reference/generated/torchrl.trainers.helpers.make_target_updater", "reference/generated/torchrl.trainers.helpers.make_trainer", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor", "reference/generated/torchrl.trainers.helpers.sync_async_collector", "reference/generated/torchrl.trainers.helpers.sync_sync_collector", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor", "reference/generated/tutorials/README", "reference/index", "reference/knowledge_base", "reference/modules", "reference/objectives", "reference/trainers", "reference/utils", "sg_execution_times", "tutorials/coding_ddpg", "tutorials/coding_dqn", "tutorials/coding_ppo", "tutorials/dqn_with_rnn", "tutorials/export", "tutorials/getting-started-0", "tutorials/getting-started-1", "tutorials/getting-started-2", "tutorials/getting-started-3", "tutorials/getting-started-4", "tutorials/getting-started-5", "tutorials/index", "tutorials/multi_task", "tutorials/multiagent_competitive_ddpg", "tutorials/multiagent_ppo", "tutorials/pendulum", "tutorials/pretrained_models", "tutorials/rb_tutorial", "tutorials/sg_execution_times", "tutorials/torchrl_demo", "tutorials/torchrl_envs"], "filenames": ["index.rst", "reference/collectors.rst", "reference/data.rst", "reference/envs.rst", "reference/generated/knowledge_base/DEBUGGING_RL.rst", "reference/generated/knowledge_base/GYM.rst", "reference/generated/knowledge_base/HABITAT.rst", "reference/generated/knowledge_base/MUJOCO_INSTALLATION.rst", "reference/generated/knowledge_base/PRO-TIPS.rst", "reference/generated/knowledge_base/RESOURCES.rst", "reference/generated/knowledge_base/VERSIONING_ISSUES.rst", "reference/generated/knowledge_base/VIDEO_CUSTOMISATION.rst", "reference/generated/torchrl.auto_unwrap_transformed_env.rst", "reference/generated/torchrl.collectors.DataCollectorBase.rst", "reference/generated/torchrl.collectors.MultiSyncDataCollector.rst", "reference/generated/torchrl.collectors.MultiaSyncDataCollector.rst", "reference/generated/torchrl.collectors.RayWeightUpdater.rst", "reference/generated/torchrl.collectors.SyncDataCollector.rst", "reference/generated/torchrl.collectors.VanillaWeightUpdater.rst", "reference/generated/torchrl.collectors.WeightUpdaterBase.rst", "reference/generated/torchrl.collectors.aSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RPCDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RayCollector.rst", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher.rst", "reference/generated/torchrl.collectors.utils.split_trajectories.rst", "reference/generated/torchrl.data.AdaptiveKLController.rst", "reference/generated/torchrl.data.Binary.rst", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec.rst", "reference/generated/torchrl.data.BinaryToDecimal.rst", "reference/generated/torchrl.data.Bounded.rst", "reference/generated/torchrl.data.BoundedTensorSpec.rst", "reference/generated/torchrl.data.Categorical.rst", "reference/generated/torchrl.data.Composite.rst", "reference/generated/torchrl.data.CompositeSpec.rst", "reference/generated/torchrl.data.ConstantKLController.rst", "reference/generated/torchrl.data.DensifyReward.rst", "reference/generated/torchrl.data.DiscreteTensorSpec.rst", "reference/generated/torchrl.data.Flat2TED.rst", "reference/generated/torchrl.data.H5Combine.rst", "reference/generated/torchrl.data.H5Split.rst", "reference/generated/torchrl.data.HashToInt.rst", "reference/generated/torchrl.data.LazyStackedCompositeSpec.rst", "reference/generated/torchrl.data.LazyStackedTensorSpec.rst", "reference/generated/torchrl.data.MCTSForest.rst", "reference/generated/torchrl.data.MultiCategorical.rst", "reference/generated/torchrl.data.MultiDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiOneHot.rst", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiStep.rst", "reference/generated/torchrl.data.Nested2TED.rst", "reference/generated/torchrl.data.NonTensor.rst", "reference/generated/torchrl.data.NonTensorSpec.rst", "reference/generated/torchrl.data.OneHot.rst", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.PairwiseDataset.rst", "reference/generated/torchrl.data.PrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.PromptData.rst", "reference/generated/torchrl.data.PromptTensorDictTokenizer.rst", "reference/generated/torchrl.data.QueryModule.rst", "reference/generated/torchrl.data.RandomProjectionHash.rst", "reference/generated/torchrl.data.RayReplayBuffer.rst", "reference/generated/torchrl.data.RemoteTensorDictReplayBuffer.rst", "reference/generated/torchrl.data.ReplayBuffer.rst", "reference/generated/torchrl.data.RewardData.rst", "reference/generated/torchrl.data.RolloutFromModel.rst", "reference/generated/torchrl.data.SipHash.rst", "reference/generated/torchrl.data.Stacked.rst", "reference/generated/torchrl.data.StackedComposite.rst", "reference/generated/torchrl.data.TED2Flat.rst", "reference/generated/torchrl.data.TED2Nested.rst", "reference/generated/torchrl.data.TensorDictMap.rst", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictTokenizer.rst", "reference/generated/torchrl.data.TensorMap.rst", "reference/generated/torchrl.data.TensorSpec.rst", "reference/generated/torchrl.data.TokenizedDatasetLoader.rst", "reference/generated/torchrl.data.Tree.rst", "reference/generated/torchrl.data.Unbounded.rst", "reference/generated/torchrl.data.UnboundedContinuous.rst", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec.rst", "reference/generated/torchrl.data.UnboundedDiscrete.rst", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec.rst", "reference/generated/torchrl.data.check_no_exclusive_keys.rst", "reference/generated/torchrl.data.consolidate_spec.rst", "reference/generated/torchrl.data.contains_lazy_spec.rst", "reference/generated/torchrl.data.create_infinite_iterator.rst", "reference/generated/torchrl.data.get_dataloader.rst", "reference/generated/torchrl.data.replay_buffers.FlatStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.H5StorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.ImmutableDatasetWriter.rst", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage.rst", "reference/generated/torchrl.data.replay_buffers.LazyStackStorage.rst", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.ListStorage.rst", "reference/generated/torchrl.data.replay_buffers.ListStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.NestedStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSliceSampler.rst", "reference/generated/torchrl.data.replay_buffers.RandomSampler.rst", "reference/generated/torchrl.data.replay_buffers.ReplayBufferEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.Sampler.rst", "reference/generated/torchrl.data.replay_buffers.SamplerEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.SliceSampler.rst", "reference/generated/torchrl.data.replay_buffers.SliceSamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.Storage.rst", "reference/generated/torchrl.data.replay_buffers.StorageCheckpointerBase.rst", "reference/generated/torchrl.data.replay_buffers.StorageEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.StorageEnsembleCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictMaxValueWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.TensorStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.Writer.rst", "reference/generated/torchrl.data.replay_buffers.WriterEnsemble.rst", "reference/generated/torchrl.envs.AsyncEnvPool.rst", "reference/generated/torchrl.envs.BraxEnv.rst", "reference/generated/torchrl.envs.BraxWrapper.rst", "reference/generated/torchrl.envs.ChessEnv.rst", "reference/generated/torchrl.envs.DMControlEnv.rst", "reference/generated/torchrl.envs.DMControlWrapper.rst", "reference/generated/torchrl.envs.EnvBase.rst", "reference/generated/torchrl.envs.EnvCreator.rst", "reference/generated/torchrl.envs.EnvMetaData.rst", "reference/generated/torchrl.envs.GymEnv.rst", "reference/generated/torchrl.envs.GymLikeEnv.rst", "reference/generated/torchrl.envs.GymWrapper.rst", "reference/generated/torchrl.envs.HabitatEnv.rst", "reference/generated/torchrl.envs.IsaacGymEnv.rst", "reference/generated/torchrl.envs.IsaacGymWrapper.rst", "reference/generated/torchrl.envs.IsaacLabWrapper.rst", "reference/generated/torchrl.envs.JumanjiEnv.rst", "reference/generated/torchrl.envs.JumanjiWrapper.rst", "reference/generated/torchrl.envs.LLMHashingEnv.rst", "reference/generated/torchrl.envs.MOGymEnv.rst", "reference/generated/torchrl.envs.MOGymWrapper.rst", "reference/generated/torchrl.envs.MarlGroupMapType.rst", "reference/generated/torchrl.envs.MeltingpotEnv.rst", "reference/generated/torchrl.envs.MeltingpotWrapper.rst", "reference/generated/torchrl.envs.ModelBasedEnvBase.rst", "reference/generated/torchrl.envs.MultiThreadedEnv.rst", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper.rst", "reference/generated/torchrl.envs.OpenMLEnv.rst", "reference/generated/torchrl.envs.OpenSpielEnv.rst", "reference/generated/torchrl.envs.OpenSpielWrapper.rst", "reference/generated/torchrl.envs.ParallelEnv.rst", "reference/generated/torchrl.envs.PendulumEnv.rst", "reference/generated/torchrl.envs.PettingZooEnv.rst", "reference/generated/torchrl.envs.PettingZooWrapper.rst", "reference/generated/torchrl.envs.ProcessorAsyncEnvPool.rst", "reference/generated/torchrl.envs.RandomPolicy.rst", "reference/generated/torchrl.envs.RoboHiveEnv.rst", "reference/generated/torchrl.envs.SMACv2Env.rst", "reference/generated/torchrl.envs.SMACv2Wrapper.rst", "reference/generated/torchrl.envs.SerialEnv.rst", "reference/generated/torchrl.envs.ThreadingAsyncEnvPool.rst", "reference/generated/torchrl.envs.TicTacToeEnv.rst", "reference/generated/torchrl.envs.UnityMLAgentsEnv.rst", "reference/generated/torchrl.envs.UnityMLAgentsWrapper.rst", "reference/generated/torchrl.envs.VmasEnv.rst", "reference/generated/torchrl.envs.VmasWrapper.rst", "reference/generated/torchrl.envs.check_env_specs.rst", "reference/generated/torchrl.envs.check_marl_grouping.rst", "reference/generated/torchrl.envs.exploration_type.rst", "reference/generated/torchrl.envs.get_available_libraries.rst", "reference/generated/torchrl.envs.gym_backend.rst", "reference/generated/torchrl.envs.make_composite_from_td.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerDecoder.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv.rst", "reference/generated/torchrl.envs.register_gym_spec_conversion.rst", "reference/generated/torchrl.envs.set_exploration_type.rst", "reference/generated/torchrl.envs.set_gym_backend.rst", "reference/generated/torchrl.envs.step_mdp.rst", "reference/generated/torchrl.envs.terminated_or_truncated.rst", "reference/generated/torchrl.envs.transforms.ActionDiscretizer.rst", "reference/generated/torchrl.envs.transforms.ActionMask.rst", "reference/generated/torchrl.envs.transforms.AutoResetEnv.rst", "reference/generated/torchrl.envs.transforms.AutoResetTransform.rst", "reference/generated/torchrl.envs.transforms.BatchSizeTransform.rst", "reference/generated/torchrl.envs.transforms.BinarizeReward.rst", "reference/generated/torchrl.envs.transforms.BurnInTransform.rst", "reference/generated/torchrl.envs.transforms.CatFrames.rst", "reference/generated/torchrl.envs.transforms.CatTensors.rst", "reference/generated/torchrl.envs.transforms.CenterCrop.rst", "reference/generated/torchrl.envs.transforms.ClipTransform.rst", "reference/generated/torchrl.envs.transforms.Compose.rst", "reference/generated/torchrl.envs.transforms.ConditionalSkip.rst", "reference/generated/torchrl.envs.transforms.Crop.rst", "reference/generated/torchrl.envs.transforms.DTypeCastTransform.rst", "reference/generated/torchrl.envs.transforms.DeviceCastTransform.rst", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection.rst", "reference/generated/torchrl.envs.transforms.DoubleToFloat.rst", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform.rst", "reference/generated/torchrl.envs.transforms.ExcludeTransform.rst", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck.rst", "reference/generated/torchrl.envs.transforms.FlattenObservation.rst", "reference/generated/torchrl.envs.transforms.FrameSkipTransform.rst", "reference/generated/torchrl.envs.transforms.GrayScale.rst", "reference/generated/torchrl.envs.transforms.Hash.rst", "reference/generated/torchrl.envs.transforms.InitTracker.rst", "reference/generated/torchrl.envs.transforms.KLRewardTransform.rst", "reference/generated/torchrl.envs.transforms.LineariseRewards.rst", "reference/generated/torchrl.envs.transforms.MultiAction.rst", "reference/generated/torchrl.envs.transforms.NoopResetEnv.rst", "reference/generated/torchrl.envs.transforms.ObservationNorm.rst", "reference/generated/torchrl.envs.transforms.ObservationTransform.rst", "reference/generated/torchrl.envs.transforms.PermuteTransform.rst", "reference/generated/torchrl.envs.transforms.PinMemoryTransform.rst", "reference/generated/torchrl.envs.transforms.R3MTransform.rst", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict.rst", "reference/generated/torchrl.envs.transforms.RemoveEmptySpecs.rst", "reference/generated/torchrl.envs.transforms.RenameTransform.rst", "reference/generated/torchrl.envs.transforms.Resize.rst", "reference/generated/torchrl.envs.transforms.Reward2GoTransform.rst", "reference/generated/torchrl.envs.transforms.RewardClipping.rst", "reference/generated/torchrl.envs.transforms.RewardScaling.rst", "reference/generated/torchrl.envs.transforms.RewardSum.rst", "reference/generated/torchrl.envs.transforms.SelectTransform.rst", "reference/generated/torchrl.envs.transforms.SignTransform.rst", "reference/generated/torchrl.envs.transforms.SqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.Stack.rst", "reference/generated/torchrl.envs.transforms.StepCounter.rst", "reference/generated/torchrl.envs.transforms.TargetReturn.rst", "reference/generated/torchrl.envs.transforms.TensorDictPrimer.rst", "reference/generated/torchrl.envs.transforms.TimeMaxPool.rst", "reference/generated/torchrl.envs.transforms.Timer.rst", "reference/generated/torchrl.envs.transforms.ToTensorImage.rst", "reference/generated/torchrl.envs.transforms.Tokenizer.rst", "reference/generated/torchrl.envs.transforms.TrajCounter.rst", "reference/generated/torchrl.envs.transforms.Transform.rst", "reference/generated/torchrl.envs.transforms.TransformedEnv.rst", "reference/generated/torchrl.envs.transforms.UnaryTransform.rst", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.VC1Transform.rst", "reference/generated/torchrl.envs.transforms.VIPRewardTransform.rst", "reference/generated/torchrl.envs.transforms.VIPTransform.rst", "reference/generated/torchrl.envs.transforms.VecGymEnvTransform.rst", "reference/generated/torchrl.envs.transforms.VecNorm.rst", "reference/generated/torchrl.envs.transforms.VecNormV2.rst", "reference/generated/torchrl.envs.transforms.gSDENoise.rst", "reference/generated/torchrl.envs.transforms.rb_transforms.MultiStepTransform.rst", "reference/generated/torchrl.implement_for.rst", "reference/generated/torchrl.modules.AdditiveGaussianModule.rst", "reference/generated/torchrl.modules.BatchRenorm1d.rst", "reference/generated/torchrl.modules.CEMPlanner.rst", "reference/generated/torchrl.modules.ConsistentDropout.rst", "reference/generated/torchrl.modules.ConsistentDropoutModule.rst", "reference/generated/torchrl.modules.Conv3dNet.rst", "reference/generated/torchrl.modules.ConvNet.rst", "reference/generated/torchrl.modules.DTActor.rst", "reference/generated/torchrl.modules.DdpgCnnActor.rst", "reference/generated/torchrl.modules.DdpgCnnQNet.rst", "reference/generated/torchrl.modules.DdpgMlpActor.rst", "reference/generated/torchrl.modules.DdpgMlpQNet.rst", "reference/generated/torchrl.modules.DecisionTransformer.rst", "reference/generated/torchrl.modules.Delta.rst", "reference/generated/torchrl.modules.DistributionalDQNnet.rst", "reference/generated/torchrl.modules.DistributionalQValueHook.rst", "reference/generated/torchrl.modules.DreamerActor.rst", "reference/generated/torchrl.modules.DuelingCnnDQNet.rst", "reference/generated/torchrl.modules.EGreedyModule.rst", "reference/generated/torchrl.modules.GRU.rst", "reference/generated/torchrl.modules.GRUCell.rst", "reference/generated/torchrl.modules.GRUModule.rst", "reference/generated/torchrl.modules.IndependentNormal.rst", "reference/generated/torchrl.modules.LSTM.rst", "reference/generated/torchrl.modules.LSTMCell.rst", "reference/generated/torchrl.modules.LSTMModule.rst", "reference/generated/torchrl.modules.MLP.rst", "reference/generated/torchrl.modules.MPCPlannerBase.rst", "reference/generated/torchrl.modules.MPPIPlanner.rst", "reference/generated/torchrl.modules.MaskedCategorical.rst", "reference/generated/torchrl.modules.MaskedOneHotCategorical.rst", "reference/generated/torchrl.modules.MultiAgentConvNet.rst", "reference/generated/torchrl.modules.MultiAgentMLP.rst", "reference/generated/torchrl.modules.MultiAgentNetBase.rst", "reference/generated/torchrl.modules.NoisyLazyLinear.rst", "reference/generated/torchrl.modules.NoisyLinear.rst", "reference/generated/torchrl.modules.ObsDecoder.rst", "reference/generated/torchrl.modules.ObsEncoder.rst", "reference/generated/torchrl.modules.OneHotCategorical.rst", "reference/generated/torchrl.modules.OneHotOrdinal.rst", "reference/generated/torchrl.modules.OnlineDTActor.rst", "reference/generated/torchrl.modules.Ordinal.rst", "reference/generated/torchrl.modules.OrnsteinUhlenbeckProcessModule.rst", "reference/generated/torchrl.modules.QMixer.rst", "reference/generated/torchrl.modules.QValueHook.rst", "reference/generated/torchrl.modules.RSSMPosterior.rst", "reference/generated/torchrl.modules.RSSMPrior.rst", "reference/generated/torchrl.modules.Squeeze2dLayer.rst", "reference/generated/torchrl.modules.SqueezeLayer.rst", "reference/generated/torchrl.modules.TanhDelta.rst", "reference/generated/torchrl.modules.TanhNormal.rst", "reference/generated/torchrl.modules.TruncatedNormal.rst", "reference/generated/torchrl.modules.VDNMixer.rst", "reference/generated/torchrl.modules.VmapModule.rst", "reference/generated/torchrl.modules.recurrent_mode.rst", "reference/generated/torchrl.modules.reset_noise.rst", "reference/generated/torchrl.modules.set_recurrent_mode.rst", "reference/generated/torchrl.modules.tensordict_module.Actor.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.MultiStepActorWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential.rst", "reference/generated/torchrl.modules.tensordict_module.SafeSequential.rst", "reference/generated/torchrl.modules.tensordict_module.TanhModule.rst", "reference/generated/torchrl.modules.tensordict_module.ValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper.rst", "reference/generated/torchrl.modules.utils.biased_softplus.rst", "reference/generated/torchrl.modules.utils.get_primers_from_module.rst", "reference/generated/torchrl.modules.utils.inv_softplus.rst", "reference/generated/torchrl.modules.utils.mappings.rst", "reference/generated/torchrl.objectives.A2CLoss.rst", "reference/generated/torchrl.objectives.CQLLoss.rst", "reference/generated/torchrl.objectives.ClipPPOLoss.rst", "reference/generated/torchrl.objectives.CrossQLoss.rst", "reference/generated/torchrl.objectives.DDPGLoss.rst", "reference/generated/torchrl.objectives.DQNLoss.rst", "reference/generated/torchrl.objectives.DTLoss.rst", "reference/generated/torchrl.objectives.DiscreteCQLLoss.rst", "reference/generated/torchrl.objectives.DiscreteIQLLoss.rst", "reference/generated/torchrl.objectives.DiscreteSACLoss.rst", "reference/generated/torchrl.objectives.DistributionalDQNLoss.rst", "reference/generated/torchrl.objectives.DreamerActorLoss.rst", "reference/generated/torchrl.objectives.DreamerModelLoss.rst", "reference/generated/torchrl.objectives.DreamerValueLoss.rst", "reference/generated/torchrl.objectives.GAILLoss.rst", "reference/generated/torchrl.objectives.HardUpdate.rst", "reference/generated/torchrl.objectives.IQLLoss.rst", "reference/generated/torchrl.objectives.KLPENPPOLoss.rst", "reference/generated/torchrl.objectives.LossModule.rst", "reference/generated/torchrl.objectives.OnlineDTLoss.rst", "reference/generated/torchrl.objectives.PPOLoss.rst", "reference/generated/torchrl.objectives.REDQLoss.rst", "reference/generated/torchrl.objectives.ReinforceLoss.rst", "reference/generated/torchrl.objectives.SACLoss.rst", "reference/generated/torchrl.objectives.SoftUpdate.rst", "reference/generated/torchrl.objectives.TD3BCLoss.rst", "reference/generated/torchrl.objectives.TD3Loss.rst", "reference/generated/torchrl.objectives.ValueEstimators.rst", "reference/generated/torchrl.objectives.default_value_kwargs.rst", "reference/generated/torchrl.objectives.distance_loss.rst", "reference/generated/torchrl.objectives.group_optimizers.rst", "reference/generated/torchrl.objectives.hold_out_net.rst", "reference/generated/torchrl.objectives.hold_out_params.rst", "reference/generated/torchrl.objectives.multiagent.QMixerLoss.rst", "reference/generated/torchrl.objectives.next_state_value.rst", "reference/generated/torchrl.objectives.value.GAE.rst", "reference/generated/torchrl.objectives.value.TD0Estimator.rst", "reference/generated/torchrl.objectives.value.TD1Estimator.rst", "reference/generated/torchrl.objectives.value.TDLambdaEstimator.rst", "reference/generated/torchrl.objectives.value.ValueEstimatorBase.rst", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.reward2go.rst", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate.rst", "reference/generated/torchrl.record.PixelRenderTransform.rst", "reference/generated/torchrl.record.TensorDictRecorder.rst", "reference/generated/torchrl.record.VideoRecorder.rst", "reference/generated/torchrl.record.loggers.Logger.rst", "reference/generated/torchrl.record.loggers.csv.CSVLogger.rst", "reference/generated/torchrl.record.loggers.generate_exp_name.rst", "reference/generated/torchrl.record.loggers.get_logger.rst", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger.rst", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger.rst", "reference/generated/torchrl.record.loggers.wandb.WandbLogger.rst", "reference/generated/torchrl.set_auto_unwrap_transformed_env.rst", "reference/generated/torchrl.trainers.BatchSubSampler.rst", "reference/generated/torchrl.trainers.ClearCudaCache.rst", "reference/generated/torchrl.trainers.CountFramesLog.rst", "reference/generated/torchrl.trainers.LogScalar.rst", "reference/generated/torchrl.trainers.LogValidationReward.rst", "reference/generated/torchrl.trainers.OptimizerHook.rst", "reference/generated/torchrl.trainers.ReplayBufferTrainer.rst", "reference/generated/torchrl.trainers.RewardNormalizer.rst", "reference/generated/torchrl.trainers.SelectKeys.rst", "reference/generated/torchrl.trainers.Trainer.rst", "reference/generated/torchrl.trainers.TrainerHookBase.rst", "reference/generated/torchrl.trainers.UpdateWeights.rst", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip.rst", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout.rst", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_loss.rst", "reference/generated/torchrl.trainers.helpers.make_replay_buffer.rst", "reference/generated/torchrl.trainers.helpers.make_target_updater.rst", "reference/generated/torchrl.trainers.helpers.make_trainer.rst", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor.rst", "reference/generated/torchrl.trainers.helpers.sync_async_collector.rst", "reference/generated/torchrl.trainers.helpers.sync_sync_collector.rst", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor.rst", "reference/generated/tutorials/README.rst", "reference/index.rst", "reference/knowledge_base.rst", "reference/modules.rst", "reference/objectives.rst", "reference/trainers.rst", "reference/utils.rst", "sg_execution_times.rst", "tutorials/coding_ddpg.rst", "tutorials/coding_dqn.rst", "tutorials/coding_ppo.rst", "tutorials/dqn_with_rnn.rst", "tutorials/export.rst", "tutorials/getting-started-0.rst", "tutorials/getting-started-1.rst", "tutorials/getting-started-2.rst", "tutorials/getting-started-3.rst", "tutorials/getting-started-4.rst", "tutorials/getting-started-5.rst", "tutorials/index.rst", "tutorials/multi_task.rst", "tutorials/multiagent_competitive_ddpg.rst", "tutorials/multiagent_ppo.rst", "tutorials/pendulum.rst", "tutorials/pretrained_models.rst", "tutorials/rb_tutorial.rst", "tutorials/sg_execution_times.rst", "tutorials/torchrl_demo.rst", "tutorials/torchrl_envs.rst"], "titles": ["TorchRL", "torchrl.collectors package", "torchrl.data package", "torchrl.envs package", "Things to consider when debugging RL", "Working with gym", "Working with <code class=\"docutils literal notranslate\"><span class=\"pre\">habitat-lab</span></code>", "Working with MuJoCo-based environments", "Common PyTorch errors and solutions", "Useful resources", "Versioning Issues", "Customising Video Renders", "auto_unwrap_transformed_env", "DataCollectorBase", "MultiSyncDataCollector", "MultiaSyncDataCollector", "RayWeightUpdater", "SyncDataCollector", "VanillaWeightUpdater", "WeightUpdaterBase", "aSyncDataCollector", "DistributedDataCollector", "DistributedSyncDataCollector", "RPCDataCollector", "RayCollector", "submitit_delayed_launcher", "split_trajectories", "AdaptiveKLController", "Binary", "BinaryDiscreteTensorSpec", "BinaryToDecimal", "Bounded", "BoundedTensorSpec", "Categorical", "Composite", "CompositeSpec", "ConstantKLController", "DensifyReward", "DiscreteTensorSpec", "Flat2TED", "H5Combine", "H5Split", "HashToInt", "LazyStackedCompositeSpec", "LazyStackedTensorSpec", "MCTSForest", "MultiCategorical", "MultiDiscreteTensorSpec", "MultiOneHot", "MultiOneHotDiscreteTensorSpec", "MultiStep", "Nested2TED", "NonTensor", "NonTensorSpec", "OneHot", "OneHotDiscreteTensorSpec", "PairwiseDataset", "PrioritizedReplayBuffer", "PromptData", "PromptTensorDictTokenizer", "QueryModule", "RandomProjectionHash", "RayReplayBuffer", "RemoteTensorDictReplayBuffer", "ReplayBuffer", "RewardData", "RolloutFromModel", "SipHash", "Stacked", "StackedComposite", "TED2Flat", "TED2Nested", "TensorDictMap", "TensorDictPrioritizedReplayBuffer", "TensorDictReplayBuffer", "TensorDictTokenizer", "TensorMap", "TensorSpec", "TokenizedDatasetLoader", "Tree", "Unbounded", "UnboundedContinuous", "UnboundedContinuousTensorSpec", "UnboundedDiscrete", "UnboundedDiscreteTensorSpec", "check_no_exclusive_keys", "consolidate_spec", "contains_lazy_spec", "create_infinite_iterator", "get_dataloader", "FlatStorageCheckpointer", "H5StorageCheckpointer", "ImmutableDatasetWriter", "LazyMemmapStorage", "LazyStackStorage", "LazyTensorStorage", "ListStorage", "ListStorageCheckpointer", "NestedStorageCheckpointer", "PrioritizedSampler", "PrioritizedSliceSampler", "RandomSampler", "ReplayBufferEnsemble", "RoundRobinWriter", "Sampler", "SamplerEnsemble", "SamplerWithoutReplacement", "SliceSampler", "SliceSamplerWithoutReplacement", "Storage", "StorageCheckpointerBase", "StorageEnsemble", "StorageEnsembleCheckpointer", "TensorDictMaxValueWriter", "TensorDictRoundRobinWriter", "TensorStorage", "TensorStorageCheckpointer", "Writer", "WriterEnsemble", "AsyncEnvPool", "BraxEnv", "BraxWrapper", "ChessEnv", "DMControlEnv", "DMControlWrapper", "EnvBase", "EnvCreator", "EnvMetaData", "GymEnv", "GymLikeEnv", "GymWrapper", "HabitatEnv", "IsaacGymEnv", "IsaacGymWrapper", "IsaacLabWrapper", "JumanjiEnv", "JumanjiWrapper", "LLMHashingEnv", "MOGymEnv", "MOGymWrapper", "MarlGroupMapType", "MeltingpotEnv", "MeltingpotWrapper", "ModelBasedEnvBase", "MultiThreadedEnv", "MultiThreadedEnvWrapper", "OpenMLEnv", "OpenSpielEnv", "OpenSpielWrapper", "ParallelEnv", "PendulumEnv", "PettingZooEnv", "PettingZooWrapper", "ProcessorAsyncEnvPool", "RandomPolicy", "RoboHiveEnv", "SMACv2Env", "SMACv2Wrapper", "SerialEnv", "ThreadingAsyncEnvPool", "TicTacToeEnv", "UnityMLAgentsEnv", "UnityMLAgentsWrapper", "VmasEnv", "VmasWrapper", "check_env_specs", "check_marl_grouping", "exploration_type", "get_available_libraries", "gym_backend", "make_composite_from_td", "DreamerDecoder", "DreamerEnv", "register_gym_spec_conversion", "set_exploration_type", "set_gym_backend", "step_mdp", "terminated_or_truncated", "ActionDiscretizer", "ActionMask", "AutoResetEnv", "AutoResetTransform", "BatchSizeTransform", "BinarizeReward", "BurnInTransform", "CatFrames", "CatTensors", "CenterCrop", "ClipTransform", "Compose", "ConditionalSkip", "Crop", "DTypeCastTransform", "DeviceCastTransform", "DiscreteActionProjection", "DoubleToFloat", "EndOfLifeTransform", "ExcludeTransform", "FiniteTensorDictCheck", "FlattenObservation", "FrameSkipTransform", "GrayScale", "Hash", "InitTracker", "KLRewardTransform", "LineariseRewards", "MultiAction", "NoopResetEnv", "ObservationNorm", "ObservationTransform", "PermuteTransform", "PinMemoryTransform", "R3MTransform", "RandomCropTensorDict", "RemoveEmptySpecs", "RenameTransform", "Resize", "Reward2GoTransform", "RewardClipping", "RewardScaling", "RewardSum", "SelectTransform", "SignTransform", "SqueezeTransform", "Stack", "StepCounter", "TargetReturn", "TensorDictPrimer", "TimeMaxPool", "Timer", "ToTensorImage", "Tokenizer", "TrajCounter", "Transform", "TransformedEnv", "UnaryTransform", "UnsqueezeTransform", "VC1Transform", "VIPRewardTransform", "VIPTransform", "VecGymEnvTransform", "VecNorm", "VecNormV2", "gSDENoise", "MultiStepTransform", "implement_for", "AdditiveGaussianModule", "BatchRenorm1d", "CEMPlanner", "ConsistentDropout", "ConsistentDropoutModule", "Conv3dNet", "ConvNet", "DTActor", "DdpgCnnActor", "DdpgCnnQNet", "DdpgMlpActor", "DdpgMlpQNet", "DecisionTransformer", "Delta", "DistributionalDQNnet", "DistributionalQValueHook", "DreamerActor", "DuelingCnnDQNet", "EGreedyModule", "GRU", "GRUCell", "GRUModule", "IndependentNormal", "LSTM", "LSTMCell", "LSTMModule", "MLP", "MPCPlannerBase", "MPPIPlanner", "MaskedCategorical", "MaskedOneHotCategorical", "MultiAgentConvNet", "MultiAgentMLP", "MultiAgentNetBase", "NoisyLazyLinear", "NoisyLinear", "ObsDecoder", "ObsEncoder", "OneHotCategorical", "OneHotOrdinal", "OnlineDTActor", "Ordinal", "OrnsteinUhlenbeckProcessModule", "QMixer", "QValueHook", "RSSMPosterior", "RSSMPrior", "Squeeze2dLayer", "SqueezeLayer", "TanhDelta", "TanhNormal", "TruncatedNormal", "VDNMixer", "VmapModule", "recurrent_mode", "reset_noise", "set_recurrent_mode", "Actor", "ActorCriticOperator", "ActorCriticWrapper", "ActorValueOperator", "DecisionTransformerInferenceWrapper", "DistributionalQValueActor", "DistributionalQValueModule", "LMHeadActorValueOperator", "MultiStepActorWrapper", "ProbabilisticActor", "QValueActor", "QValueModule", "SafeModule", "SafeProbabilisticModule", "SafeProbabilisticTensorDictSequential", "SafeSequential", "TanhModule", "ValueOperator", "WorldModelWrapper", "biased_softplus", "get_primers_from_module", "inv_softplus", "mappings", "A2CLoss", "CQLLoss", "ClipPPOLoss", "CrossQLoss", "DDPGLoss", "DQNLoss", "DTLoss", "DiscreteCQLLoss", "DiscreteIQLLoss", "DiscreteSACLoss", "DistributionalDQNLoss", "DreamerActorLoss", "DreamerModelLoss", "DreamerValueLoss", "GAILLoss", "HardUpdate", "IQLLoss", "KLPENPPOLoss", "LossModule", "OnlineDTLoss", "PPOLoss", "REDQLoss", "ReinforceLoss", "SACLoss", "SoftUpdate", "TD3BCLoss", "TD3Loss", "ValueEstimators", "default_value_kwargs", "distance_loss", "group_optimizers", "hold_out_net", "hold_out_params", "QMixerLoss", "next_state_value", "GAE", "TD0Estimator", "TD1Estimator", "TDLambdaEstimator", "ValueEstimatorBase", "generalized_advantage_estimate", "reward2go", "td0_advantage_estimate", "td0_return_estimate", "td1_advantage_estimate", "td1_return_estimate", "td_lambda_advantage_estimate", "td_lambda_return_estimate", "vec_generalized_advantage_estimate", "vec_td1_advantage_estimate", "vec_td1_return_estimate", "vec_td_lambda_advantage_estimate", "vec_td_lambda_return_estimate", "PixelRenderTransform", "TensorDictRecorder", "VideoRecorder", "Logger", "CSVLogger", "generate_exp_name", "get_logger", "MLFlowLogger", "TensorboardLogger", "WandbLogger", "set_auto_unwrap_transformed_env", "BatchSubSampler", "ClearCudaCache", "CountFramesLog", "LogScalar", "LogValidationReward", "OptimizerHook", "ReplayBufferTrainer", "RewardNormalizer", "SelectKeys", "Trainer", "TrainerHookBase", "UpdateWeights", "correct_for_frame_skip", "get_stats_random_rollout", "make_collector_offpolicy", "make_collector_onpolicy", "make_dqn_loss", "make_replay_buffer", "make_target_updater", "make_trainer", "parallel_env_constructor", "sync_async_collector", "sync_sync_collector", "transformed_env_constructor", "README Tutos", "API Reference", "Knowledge Base", "torchrl.modules package", "torchrl.objectives package", "torchrl.trainers package", "torchrl._utils package", "Computation times", "TorchRL objectives: Coding a DDPG loss", "TorchRL trainer: A DQN example", "Reinforcement Learning (PPO) with TorchRL Tutorial", "Recurrent DQN: Training recurrent policies", "Exporting TorchRL modules", "Get started with Environments, TED and transforms", "Get started with TorchRL\u2019s modules", "Getting started with model optimization", "Get started with data collection and storage", "Get started with logging", "Get started with your own first training loop", "README Tutos", "Task-specific policy in multi-task environments", "Competitive Multi-Agent Reinforcement Learning (DDPG) with TorchRL Tutorial", "Multi-Agent Reinforcement Learning (PPO) with TorchRL Tutorial", "Pendulum: Writing your environment and transforms with TorchRL", "Using pretrained models", "Using Replay Buffers", "Computation times", "Introduction to TorchRL", "TorchRL envs"], "terms": {"an": [0, 1, 2, 3, 5, 8, 9, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 72, 73, 74, 76, 77, 79, 80, 81, 82, 83, 84, 88, 92, 93, 94, 95, 96, 100, 102, 103, 105, 107, 108, 109, 111, 113, 114, 115, 117, 118, 119, 122, 123, 124, 125, 126, 128, 129, 130, 131, 134, 136, 137, 143, 144, 146, 149, 150, 151, 152, 153, 155, 158, 159, 160, 161, 165, 166, 178, 179, 181, 182, 184, 185, 187, 192, 194, 195, 198, 202, 207, 208, 212, 213, 214, 215, 217, 226, 227, 228, 229, 230, 232, 233, 234, 237, 240, 241, 242, 244, 247, 251, 252, 254, 255, 256, 257, 259, 264, 265, 267, 269, 271, 272, 273, 277, 278, 280, 288, 293, 294, 296, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 316, 317, 321, 325, 326, 327, 328, 329, 331, 334, 335, 336, 337, 338, 339, 342, 343, 344, 346, 347, 348, 349, 352, 359, 361, 362, 363, 364, 365, 379, 381, 384, 388, 394, 395, 399, 400, 403, 410, 411, 412, 413, 416, 417, 418, 422, 423, 426, 428, 429, 430, 431, 432, 434, 435, 436, 438, 439, 441, 442], "open": [0, 5, 7, 56, 58, 65, 79, 93, 245, 423, 435, 436, 441], "sourc": [0, 1, 4, 7, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442], "reinforc": [0, 3, 9, 141, 142, 185, 242, 249, 254, 255, 256, 257, 261, 288, 309, 326, 327, 329, 332, 333, 334, 336, 341, 342, 348, 349, 350, 351, 415, 421, 423, 427, 428, 433, 437, 440, 441], "learn": [0, 3, 7, 8, 9, 21, 50, 125, 141, 142, 146, 149, 158, 185, 242, 249, 254, 255, 256, 257, 261, 274, 281, 287, 288, 309, 326, 327, 329, 332, 333, 334, 336, 340, 341, 342, 347, 348, 349, 350, 351, 415, 418, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 437, 439, 440, 441, 442], "rl": [0, 1, 2, 3, 5, 8, 10, 14, 15, 17, 20, 134, 143, 185, 226, 281, 303, 312, 320, 326, 328, 343, 344, 346, 348, 390, 414, 416, 417, 418, 419, 422, 423, 424, 430, 433, 435, 436, 438, 439, 442], "librari": [0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 14, 15, 21, 22, 23, 59, 75, 122, 123, 124, 133, 144, 168, 415, 416, 417, 418, 420, 422, 423, 424, 426, 427, 428, 430, 435, 436, 437, 442], "pytorch": [0, 1, 2, 3, 26, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 163, 164, 165, 185, 229, 230, 249, 265, 269, 280, 281, 399, 414, 416, 417, 419, 422, 424, 425, 429, 433, 435, 436, 437, 441, 442], "you": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 13, 17, 21, 22, 23, 30, 37, 42, 50, 60, 61, 67, 72, 75, 119, 122, 125, 129, 133, 137, 140, 141, 142, 149, 150, 151, 152, 153, 156, 157, 158, 159, 160, 163, 164, 175, 185, 205, 233, 241, 242, 244, 249, 269, 287, 316, 388, 389, 416, 417, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 441, 442], "can": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 93, 94, 99, 100, 102, 106, 107, 108, 113, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 133, 135, 136, 137, 140, 141, 142, 147, 148, 149, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 163, 164, 165, 173, 175, 177, 178, 179, 181, 182, 184, 185, 188, 189, 190, 192, 194, 195, 196, 199, 202, 206, 207, 208, 212, 213, 217, 220, 224, 225, 226, 227, 231, 232, 233, 234, 235, 237, 239, 241, 242, 244, 245, 248, 250, 251, 252, 254, 264, 265, 267, 268, 269, 271, 273, 274, 275, 277, 278, 279, 281, 288, 297, 299, 303, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 342, 343, 344, 346, 347, 348, 349, 351, 352, 359, 360, 361, 362, 363, 364, 365, 379, 381, 388, 389, 394, 411, 412, 413, 416, 417, 418, 419, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 441, 442], "directli": [0, 4, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 102, 119, 120, 121, 122, 125, 128, 129, 137, 143, 149, 150, 153, 158, 159, 160, 178, 179, 181, 182, 184, 185, 186, 189, 190, 193, 196, 197, 198, 200, 202, 203, 204, 208, 211, 213, 214, 215, 217, 220, 221, 224, 225, 226, 227, 228, 229, 231, 232, 233, 235, 237, 238, 240, 241, 242, 244, 316, 344, 351, 413, 423, 424, 426, 427, 435, 436, 437, 439], "from": [0, 1, 3, 4, 5, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 89, 93, 94, 95, 96, 99, 100, 102, 105, 106, 107, 108, 109, 111, 113, 115, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 134, 135, 136, 137, 140, 141, 142, 143, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 170, 175, 176, 177, 178, 179, 181, 182, 184, 185, 186, 188, 190, 192, 193, 194, 195, 196, 197, 202, 203, 204, 205, 208, 210, 212, 213, 214, 215, 216, 217, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242, 244, 245, 247, 248, 249, 250, 251, 254, 255, 256, 257, 258, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 284, 286, 287, 288, 289, 290, 296, 297, 298, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 323, 326, 327, 328, 329, 330, 331, 333, 334, 335, 336, 337, 342, 343, 344, 346, 347, 348, 349, 351, 352, 354, 359, 360, 361, 362, 363, 364, 367, 379, 380, 381, 390, 396, 399, 402, 403, 407, 409, 410, 413, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442], "pypi": [0, 2, 441], "see": [0, 1, 2, 3, 6, 7, 8, 9, 14, 15, 17, 20, 21, 22, 23, 24, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 60, 61, 62, 63, 64, 67, 68, 69, 72, 73, 74, 75, 77, 79, 80, 81, 82, 83, 84, 89, 94, 100, 102, 107, 108, 119, 122, 125, 129, 132, 134, 136, 137, 141, 142, 144, 147, 148, 149, 150, 151, 152, 153, 155, 158, 159, 160, 161, 162, 163, 164, 185, 189, 190, 206, 212, 227, 230, 232, 233, 234, 237, 239, 241, 242, 243, 244, 249, 250, 251, 252, 265, 267, 268, 269, 271, 272, 278, 279, 280, 287, 289, 297, 298, 302, 304, 306, 312, 315, 316, 329, 340, 344, 351, 381, 388, 396, 417, 418, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 435, 436, 437, 439, 441, 442], "more": [0, 1, 2, 3, 4, 6, 8, 9, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 60, 61, 62, 63, 64, 67, 68, 69, 72, 73, 74, 75, 77, 79, 80, 81, 82, 83, 84, 100, 102, 113, 119, 122, 125, 128, 129, 130, 132, 133, 136, 137, 141, 142, 147, 148, 149, 150, 151, 152, 153, 155, 158, 159, 160, 161, 162, 163, 164, 185, 230, 233, 237, 242, 243, 244, 245, 246, 247, 250, 261, 269, 272, 280, 303, 308, 309, 315, 316, 320, 326, 336, 344, 346, 361, 366, 374, 388, 395, 416, 417, 418, 419, 422, 423, 424, 425, 426, 427, 428, 429, 430, 434, 435, 436, 437, 438, 441, 442], "about": [0, 3, 5, 7, 9, 21, 22, 23, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 75, 77, 80, 81, 82, 83, 84, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 417, 418, 422, 423, 424, 426, 427, 428, 429, 430, 431, 432, 435, 436, 437, 439, 441, 442], "instruct": [0, 6, 7, 10, 25, 134, 194, 196, 418, 422, 423, 424, 425, 435, 436, 439], "dedic": [0, 1, 2, 3, 21, 22, 23, 24, 45, 64, 73, 74, 102, 149, 158, 304, 305, 306, 417, 422, 427, 429, 430, 432, 434, 436], "section": [0, 2, 3, 4, 27, 125, 265, 269, 423, 426, 427, 432, 435, 436], "below": [0, 2, 3, 7, 14, 15, 17, 20, 21, 22, 23, 24, 30, 37, 42, 50, 60, 61, 64, 67, 72, 73, 74, 80, 89, 108, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 189, 190, 206, 212, 227, 232, 233, 234, 237, 239, 244, 251, 252, 265, 268, 269, 272, 278, 297, 312, 315, 396, 422, 423, 424, 425, 426, 427, 435, 437], "pip": [0, 10, 426, 427, 428, 429, 430, 431, 432, 436, 441, 442], "provid": [0, 1, 2, 3, 5, 8, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 34, 35, 36, 37, 42, 43, 45, 46, 48, 50, 54, 56, 57, 58, 60, 61, 62, 63, 64, 65, 67, 69, 72, 73, 74, 78, 79, 86, 89, 93, 94, 96, 100, 101, 102, 105, 107, 108, 116, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 135, 136, 137, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 155, 158, 159, 160, 161, 162, 176, 177, 178, 182, 184, 185, 186, 187, 188, 191, 192, 195, 199, 202, 207, 208, 210, 212, 213, 216, 217, 220, 221, 226, 227, 228, 231, 232, 234, 236, 237, 239, 240, 241, 242, 244, 245, 251, 252, 258, 259, 261, 264, 265, 266, 267, 269, 270, 271, 272, 273, 275, 276, 277, 278, 299, 303, 307, 309, 311, 312, 313, 314, 316, 319, 326, 327, 328, 329, 330, 331, 333, 335, 336, 337, 342, 343, 344, 346, 347, 348, 349, 351, 352, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 385, 390, 396, 403, 409, 416, 417, 418, 419, 422, 423, 424, 425, 426, 427, 428, 430, 431, 434, 435, 436, 437, 438, 439, 441, 442], "python": [0, 1, 3, 5, 6, 7, 10, 14, 15, 24, 57, 62, 63, 64, 67, 72, 73, 74, 79, 102, 145, 161, 162, 175, 265, 266, 267, 269, 270, 271, 275, 276, 419, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442], "first": [0, 1, 2, 3, 4, 5, 7, 8, 14, 15, 17, 20, 21, 22, 23, 24, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 60, 68, 69, 77, 79, 80, 81, 82, 83, 84, 93, 95, 100, 107, 108, 113, 115, 119, 122, 125, 128, 129, 130, 136, 137, 149, 150, 153, 158, 159, 160, 181, 182, 185, 186, 190, 199, 206, 208, 212, 213, 229, 230, 234, 237, 242, 245, 252, 259, 265, 267, 269, 271, 272, 275, 276, 278, 280, 283, 303, 307, 308, 309, 312, 313, 315, 316, 328, 338, 343, 344, 346, 380, 381, 398, 417, 421, 422, 423, 424, 425, 426, 427, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "low": [0, 3, 31, 34, 61, 72, 77, 80, 100, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 170, 178, 188, 194, 202, 205, 227, 235, 295, 296, 297, 307, 309, 312, 316, 319, 422, 423, 424, 426, 435, 436, 437, 441], "high": [0, 3, 9, 31, 34, 56, 58, 65, 73, 79, 80, 100, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 170, 178, 188, 194, 202, 205, 207, 227, 235, 295, 296, 297, 307, 309, 312, 316, 319, 361, 366, 374, 422, 423, 424, 435, 436, 437, 439, 441], "level": [0, 2, 3, 4, 25, 34, 35, 43, 57, 62, 63, 64, 69, 73, 74, 102, 128, 130, 185, 225, 233, 267, 271, 343, 422, 423, 426, 430, 441], "abstract": [0, 1, 3, 8, 19, 76, 77, 117, 125, 209, 273, 365, 391, 400, 419, 424, 426, 437, 441], "ar": [0, 1, 2, 3, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 85, 89, 90, 91, 93, 94, 95, 96, 98, 102, 105, 106, 107, 108, 109, 111, 113, 115, 119, 122, 125, 126, 128, 129, 130, 136, 137, 140, 141, 142, 143, 146, 149, 150, 151, 152, 153, 155, 158, 159, 160, 161, 162, 163, 164, 170, 176, 177, 178, 180, 181, 182, 184, 185, 188, 189, 190, 192, 193, 194, 195, 196, 198, 199, 202, 204, 205, 206, 207, 210, 212, 217, 220, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 244, 246, 248, 249, 257, 259, 264, 265, 266, 267, 269, 270, 271, 273, 275, 276, 277, 278, 279, 281, 284, 289, 292, 302, 307, 308, 311, 312, 313, 315, 316, 317, 318, 319, 323, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 346, 347, 348, 349, 351, 352, 355, 356, 359, 360, 361, 362, 363, 364, 365, 379, 388, 389, 396, 399, 409, 413, 417, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 441, 442], "intend": [0, 7, 14, 15, 17, 20, 21, 22, 23, 24, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 78, 80, 81, 82, 83, 84, 184, 194, 299, 344, 417, 441], "effici": [0, 1, 2, 4, 8, 16, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 265, 281, 329, 417, 422, 423, 424, 425, 426, 429, 430, 432, 434, 435, 436, 438, 439, 441], "modular": [0, 318, 426, 439, 441], "document": [0, 2, 5, 7, 11, 21, 22, 24, 30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 134, 137, 147, 148, 149, 150, 153, 158, 159, 160, 161, 162, 234, 244, 414, 423, 425, 426, 427, 430, 433, 441], "properli": [0, 1, 3, 80, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 176, 190, 267, 271, 361, 424, 431, 435, 436, 437, 441], "test": [0, 3, 5, 119, 120, 121, 122, 125, 129, 135, 136, 137, 141, 142, 149, 150, 153, 158, 159, 160, 165, 232, 237, 394, 409, 424, 425, 426, 438, 441], "The": [0, 1, 3, 4, 5, 7, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 89, 91, 99, 100, 102, 105, 107, 108, 109, 113, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 133, 135, 136, 137, 144, 145, 147, 148, 149, 150, 151, 152, 153, 155, 158, 159, 160, 161, 163, 164, 165, 173, 176, 177, 178, 181, 182, 184, 185, 189, 190, 192, 195, 196, 197, 202, 205, 206, 208, 210, 212, 217, 219, 220, 221, 224, 225, 226, 227, 229, 232, 233, 234, 237, 239, 240, 241, 242, 244, 246, 247, 248, 249, 254, 255, 256, 257, 258, 261, 265, 266, 267, 269, 270, 271, 273, 274, 275, 276, 277, 281, 285, 287, 288, 290, 291, 292, 302, 303, 304, 307, 308, 309, 311, 312, 313, 314, 315, 316, 318, 320, 321, 322, 323, 326, 327, 328, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 346, 347, 348, 349, 351, 352, 359, 360, 361, 362, 363, 364, 365, 367, 379, 381, 383, 386, 387, 388, 389, 390, 395, 409, 411, 412, 415, 417, 418, 419, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 435, 436, 437, 438, 439, 441, 442], "code": [0, 3, 5, 7, 8, 14, 15, 61, 67, 119, 122, 125, 129, 134, 136, 137, 149, 150, 153, 158, 159, 160, 212, 234, 237, 247, 265, 266, 269, 270, 312, 316, 318, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 441, 442], "aim": [0, 2, 3, 7, 45, 68, 69, 212, 237, 239, 272, 402, 416, 417, 418, 422, 423, 441], "support": [0, 1, 3, 13, 14, 15, 17, 20, 21, 22, 23, 24, 37, 56, 58, 60, 65, 72, 79, 89, 93, 95, 109, 111, 115, 116, 118, 119, 120, 121, 122, 128, 130, 135, 144, 146, 149, 151, 155, 168, 182, 185, 196, 202, 208, 227, 228, 231, 235, 242, 261, 285, 287, 296, 299, 308, 309, 312, 315, 318, 336, 344, 361, 362, 363, 364, 386, 415, 417, 419, 424, 425, 427, 428, 436, 437, 439, 441], "research": [0, 7, 9, 141, 142, 247, 441], "most": [0, 1, 2, 3, 7, 8, 14, 15, 50, 52, 107, 108, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 165, 194, 240, 422, 424, 426, 427, 428, 429, 430, 431, 432, 437, 441, 442], "written": [0, 1, 2, 3, 39, 56, 57, 58, 60, 62, 63, 64, 65, 70, 73, 74, 78, 79, 91, 93, 100, 102, 107, 108, 119, 122, 123, 124, 125, 128, 129, 130, 131, 137, 149, 150, 153, 155, 158, 159, 160, 176, 177, 178, 185, 196, 199, 204, 205, 220, 225, 228, 229, 234, 240, 244, 245, 250, 288, 303, 312, 315, 316, 320, 326, 328, 343, 346, 348, 360, 379, 380, 381, 417, 418, 419, 422, 425, 426, 428, 434, 437, 441], "highli": [0, 2, 427, 441, 442], "wai": [0, 1, 2, 3, 4, 102, 113, 133, 185, 212, 215, 232, 233, 239, 240, 267, 269, 271, 346, 361, 362, 363, 364, 417, 422, 423, 424, 426, 427, 429, 430, 434, 435, 436, 437, 438, 439, 441, 442], "easili": [0, 1, 2, 3, 7, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 418, 422, 423, 424, 427, 428, 429, 432, 435, 436, 441, 442], "swap": [0, 1, 3, 128, 240, 424, 426, 438, 441], "compon": [0, 1, 2, 3, 57, 61, 62, 63, 64, 73, 74, 93, 94, 95, 96, 102, 109, 111, 115, 261, 290, 308, 309, 314, 326, 327, 328, 334, 335, 336, 337, 338, 339, 342, 343, 344, 346, 347, 348, 349, 352, 359, 395, 399, 422, 423, 424, 425, 426, 428, 429, 432, 434, 435, 436, 437, 438, 441], "transform": [0, 1, 4, 8, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 37, 45, 50, 57, 59, 62, 63, 64, 66, 73, 74, 75, 90, 91, 98, 102, 111, 116, 119, 122, 125, 126, 129, 137, 141, 142, 149, 150, 151, 152, 153, 158, 159, 160, 163, 164, 171, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 250, 253, 254, 258, 261, 262, 267, 271, 286, 289, 290, 296, 298, 307, 310, 311, 319, 322, 323, 325, 332, 345, 379, 381, 396, 413, 415, 421, 423, 425, 426, 428, 430, 431, 432, 433, 438, 440], "them": [0, 2, 3, 7, 9, 11, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 30, 34, 35, 37, 42, 43, 57, 59, 60, 61, 62, 63, 64, 67, 69, 72, 73, 74, 102, 113, 118, 119, 122, 125, 126, 129, 133, 137, 140, 141, 142, 149, 150, 151, 152, 153, 158, 159, 160, 163, 164, 192, 195, 202, 205, 227, 231, 234, 235, 241, 242, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 279, 282, 283, 286, 288, 291, 292, 294, 298, 299, 307, 309, 311, 314, 319, 322, 343, 381, 422, 423, 425, 426, 427, 428, 430, 431, 434, 435, 436, 437, 438, 439, 441, 442], "write": [0, 2, 3, 8, 14, 15, 17, 20, 26, 45, 50, 56, 57, 58, 59, 62, 63, 64, 65, 73, 74, 78, 79, 100, 102, 107, 111, 118, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 177, 179, 181, 182, 184, 185, 186, 188, 189, 190, 193, 196, 197, 198, 200, 203, 204, 210, 211, 213, 214, 215, 217, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 236, 237, 238, 240, 241, 244, 303, 315, 316, 318, 320, 329, 330, 331, 333, 334, 335, 342, 347, 349, 351, 352, 360, 365, 381, 417, 419, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 441, 442], "new": [0, 1, 2, 3, 4, 8, 14, 15, 17, 20, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 67, 68, 69, 72, 73, 74, 77, 79, 80, 81, 82, 83, 84, 99, 100, 102, 106, 119, 122, 125, 129, 137, 144, 149, 150, 153, 156, 157, 158, 159, 160, 176, 177, 182, 220, 224, 233, 234, 241, 242, 244, 259, 265, 267, 271, 288, 315, 316, 321, 326, 327, 328, 331, 334, 335, 336, 337, 338, 339, 342, 343, 344, 346, 347, 348, 349, 352, 359, 388, 418, 422, 424, 427, 429, 435, 436, 437, 441, 442], "ones": [0, 2, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 60, 61, 64, 67, 68, 69, 72, 73, 74, 77, 80, 81, 82, 83, 84, 107, 108, 119, 122, 125, 129, 137, 149, 150, 151, 152, 153, 154, 158, 159, 160, 186, 189, 192, 193, 195, 208, 212, 217, 224, 227, 233, 234, 237, 239, 242, 244, 249, 275, 276, 287, 299, 315, 326, 327, 329, 330, 342, 346, 347, 349, 351, 352, 367, 422, 424, 426, 435, 436, 437, 439, 441, 442], "littl": [0, 1, 3, 75, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 234, 249, 326, 328, 343, 346, 348, 424, 425, 426, 430, 439, 441, 442], "effort": [0, 3, 437, 439, 441], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 90, 91, 93, 94, 95, 96, 98, 99, 100, 102, 105, 106, 107, 108, 109, 111, 113, 115, 116, 118, 119, 120, 121, 122, 125, 126, 128, 129, 130, 131, 134, 135, 136, 137, 140, 141, 142, 143, 146, 149, 150, 151, 152, 153, 154, 158, 159, 160, 161, 163, 164, 165, 173, 175, 176, 177, 178, 179, 181, 182, 184, 185, 186, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 200, 202, 203, 204, 206, 208, 211, 212, 213, 214, 215, 217, 220, 221, 222, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 278, 279, 280, 281, 282, 283, 284, 286, 287, 288, 290, 291, 292, 294, 296, 297, 299, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 321, 322, 323, 326, 327, 328, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 359, 361, 362, 363, 364, 365, 379, 380, 388, 389, 390, 392, 394, 396, 399, 401, 402, 403, 409, 413, 416, 417, 418, 419, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 441, 442], "repo": [0, 6, 185, 228, 237, 416, 436, 441], "attempt": [0, 13, 14, 15, 17, 20, 21, 22, 23, 24, 30, 37, 42, 50, 60, 61, 67, 72, 107, 108, 119, 122, 123, 124, 125, 128, 129, 130, 131, 137, 149, 150, 153, 155, 158, 159, 160, 176, 244, 249, 316, 331, 334, 342, 359, 418, 429, 441], "align": [0, 265, 269, 441], "exist": [0, 1, 2, 3, 4, 21, 24, 30, 37, 42, 45, 50, 56, 58, 60, 61, 65, 67, 72, 78, 79, 93, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 186, 193, 232, 234, 244, 245, 259, 316, 329, 349, 403, 413, 435, 436, 441, 442], "ecosystem": [0, 426, 430, 441], "ha": [0, 1, 2, 3, 4, 5, 7, 8, 10, 12, 13, 14, 15, 17, 20, 21, 22, 23, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 72, 73, 74, 77, 79, 80, 81, 82, 83, 84, 93, 95, 102, 105, 107, 113, 115, 119, 122, 125, 126, 129, 133, 137, 141, 142, 149, 150, 153, 158, 159, 160, 163, 164, 182, 185, 206, 225, 226, 227, 228, 229, 231, 232, 233, 234, 244, 246, 265, 267, 269, 271, 277, 279, 296, 309, 311, 316, 326, 329, 343, 344, 346, 348, 361, 381, 418, 422, 423, 424, 425, 426, 427, 430, 431, 434, 435, 436, 437, 438, 439, 441, 442], "dataset": [0, 41, 45, 56, 57, 58, 59, 64, 65, 66, 71, 73, 74, 78, 79, 89, 92, 100, 102, 105, 107, 108, 146, 241, 381, 415, 422, 423, 427, 438, 439, 441, 442], "pillar": [0, 441], "environ": [0, 2, 5, 8, 10, 13, 14, 15, 17, 20, 21, 22, 23, 24, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 61, 62, 67, 68, 69, 77, 79, 80, 81, 82, 83, 84, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 172, 178, 179, 181, 182, 184, 185, 186, 190, 192, 193, 194, 195, 200, 206, 207, 208, 212, 213, 214, 217, 220, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 237, 240, 241, 242, 245, 248, 250, 267, 271, 273, 274, 311, 333, 337, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 389, 390, 392, 394, 402, 403, 404, 405, 409, 410, 411, 412, 413, 415, 416, 417, 418, 421, 426, 428, 429, 430, 431, 433, 438, 439, 440], "model": [0, 3, 8, 9, 14, 15, 17, 20, 21, 22, 23, 24, 27, 30, 36, 37, 42, 50, 56, 58, 60, 61, 65, 66, 67, 72, 78, 79, 119, 122, 125, 129, 137, 143, 149, 150, 153, 158, 159, 160, 185, 192, 212, 227, 237, 239, 243, 244, 251, 252, 253, 258, 260, 272, 273, 274, 278, 279, 286, 289, 298, 304, 305, 306, 310, 315, 321, 323, 326, 327, 328, 329, 331, 332, 333, 334, 337, 338, 339, 342, 343, 344, 346, 347, 348, 349, 359, 399, 404, 405, 406, 415, 416, 418, 419, 421, 424, 427, 430, 433, 435, 436, 437, 439, 440, 442], "data": [0, 3, 8, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 134, 135, 136, 137, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 158, 159, 160, 161, 162, 165, 170, 177, 179, 182, 184, 185, 192, 193, 195, 197, 199, 202, 204, 208, 214, 217, 224, 225, 231, 233, 234, 235, 240, 242, 244, 248, 249, 261, 264, 267, 271, 274, 277, 278, 288, 290, 299, 302, 303, 308, 311, 312, 313, 315, 316, 318, 319, 320, 326, 327, 329, 330, 331, 333, 334, 335, 342, 346, 347, 348, 349, 351, 352, 359, 361, 362, 363, 364, 365, 379, 381, 388, 390, 396, 399, 401, 404, 409, 411, 412, 413, 415, 417, 418, 419, 421, 425, 426, 427, 428, 429, 433, 437, 438, 439, 440, 442], "util": [0, 3, 14, 15, 17, 20, 21, 22, 23, 24, 25, 26, 30, 37, 42, 50, 60, 61, 64, 66, 67, 72, 107, 108, 119, 120, 121, 122, 125, 129, 135, 136, 137, 142, 149, 150, 151, 152, 153, 158, 159, 160, 166, 185, 212, 217, 227, 239, 244, 247, 250, 251, 252, 258, 265, 267, 269, 271, 322, 323, 324, 325, 344, 409, 415, 420, 422, 424, 426, 428, 429, 430, 436, 437, 439, 441, 442], "e": [0, 1, 2, 3, 7, 8, 10, 14, 15, 17, 20, 21, 22, 23, 24, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 60, 61, 65, 67, 68, 69, 72, 77, 79, 80, 81, 82, 83, 84, 93, 95, 99, 100, 113, 115, 119, 122, 125, 126, 129, 130, 137, 149, 150, 153, 158, 159, 160, 163, 165, 182, 184, 186, 189, 190, 191, 199, 202, 205, 206, 208, 212, 220, 227, 229, 232, 233, 234, 237, 239, 244, 245, 265, 267, 268, 269, 271, 274, 278, 290, 296, 297, 302, 307, 309, 311, 312, 314, 315, 316, 326, 328, 329, 330, 334, 335, 342, 343, 346, 347, 348, 349, 351, 352, 360, 361, 362, 363, 364, 379, 390, 402, 412, 417, 418, 423, 424, 426, 428, 429, 431, 435, 436, 438, 439, 441, 442], "g": [0, 1, 2, 3, 7, 8, 10, 14, 15, 17, 20, 21, 22, 23, 24, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 60, 61, 65, 67, 68, 69, 72, 77, 79, 80, 81, 82, 83, 84, 113, 119, 122, 125, 126, 129, 130, 137, 149, 150, 153, 158, 159, 160, 163, 165, 182, 184, 186, 189, 199, 202, 205, 208, 212, 220, 227, 229, 232, 233, 234, 237, 239, 244, 245, 265, 267, 268, 269, 270, 271, 274, 278, 296, 297, 307, 312, 315, 316, 329, 349, 360, 370, 371, 372, 373, 375, 376, 377, 378, 379, 412, 417, 418, 423, 424, 426, 428, 431, 435, 436, 437, 438, 439, 441, 442], "collector": [0, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 39, 50, 57, 62, 63, 64, 66, 70, 73, 74, 102, 107, 108, 119, 122, 125, 129, 137, 149, 150, 153, 154, 158, 159, 160, 182, 185, 217, 225, 244, 249, 267, 271, 288, 396, 399, 401, 404, 405, 409, 411, 412, 415, 418, 419, 426, 439, 442], "contain": [0, 2, 3, 7, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 87, 92, 99, 100, 102, 103, 105, 107, 108, 109, 114, 117, 118, 119, 122, 125, 129, 137, 143, 149, 150, 153, 158, 159, 160, 176, 177, 178, 185, 189, 192, 195, 202, 212, 224, 227, 232, 233, 234, 237, 239, 240, 241, 242, 244, 248, 251, 252, 265, 266, 269, 270, 272, 274, 277, 278, 303, 308, 309, 312, 314, 315, 316, 320, 323, 326, 327, 328, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 342, 343, 344, 346, 347, 348, 349, 351, 352, 359, 360, 361, 362, 363, 364, 365, 367, 385, 390, 402, 409, 410, 411, 412, 413, 417, 418, 419, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 435, 436, 437, 438, 439, 441, 442], "etc": [0, 2, 3, 7, 8, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 60, 61, 67, 68, 69, 72, 77, 80, 81, 82, 83, 84, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 204, 224, 234, 244, 245, 272, 278, 296, 418, 423, 424, 430, 439, 441, 442], "have": [0, 1, 2, 3, 5, 6, 7, 8, 9, 14, 15, 20, 21, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 60, 61, 62, 63, 64, 66, 67, 68, 69, 72, 73, 74, 77, 78, 80, 81, 82, 83, 84, 102, 106, 109, 119, 122, 125, 129, 137, 149, 150, 151, 152, 153, 158, 159, 160, 165, 170, 173, 177, 178, 181, 185, 192, 195, 196, 204, 207, 208, 224, 225, 227, 231, 232, 233, 234, 241, 242, 244, 246, 249, 251, 252, 272, 277, 278, 279, 288, 299, 311, 317, 318, 326, 328, 343, 346, 348, 351, 355, 356, 359, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 381, 390, 399, 417, 418, 419, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 441, 442], "few": [0, 2, 8, 108, 129, 381, 390, 424, 425, 428, 435, 436, 439, 441, 442], "depend": [0, 1, 2, 3, 4, 7, 8, 13, 14, 15, 17, 20, 21, 22, 23, 24, 31, 56, 58, 80, 119, 122, 125, 128, 129, 130, 131, 137, 149, 150, 153, 155, 158, 159, 160, 163, 164, 192, 195, 316, 320, 346, 383, 417, 422, 424, 425, 435, 436, 437, 441, 442], "possibl": [0, 2, 3, 4, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 60, 61, 67, 68, 69, 72, 77, 80, 81, 82, 83, 84, 94, 100, 107, 113, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 178, 189, 212, 227, 232, 233, 234, 237, 239, 244, 251, 252, 265, 266, 269, 270, 315, 379, 394, 399, 417, 422, 424, 425, 426, 428, 430, 431, 435, 436, 437, 439, 441, 442], "standard": [0, 2, 3, 52, 122, 208, 219, 241, 242, 246, 247, 248, 262, 274, 280, 281, 286, 307, 328, 343, 346, 351, 352, 361, 362, 363, 364, 422, 423, 427, 428, 436, 439, 441], "numpi": [0, 3, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 119, 122, 125, 129, 130, 137, 149, 150, 153, 158, 159, 160, 202, 230, 235, 245, 399, 426, 437, 439, 441, 442], "common": [0, 2, 3, 4, 77, 119, 129, 135, 179, 196, 304, 305, 306, 310, 326, 327, 328, 329, 334, 335, 342, 343, 346, 347, 348, 349, 351, 352, 409, 416, 417, 418, 419, 422, 424, 428, 431, 434, 435, 436, 437, 438, 441, 442], "openai": [0, 7, 27, 128, 130, 137, 155, 424, 437, 441, 442], "gym": [0, 1, 3, 4, 8, 14, 15, 17, 20, 24, 25, 62, 119, 122, 125, 126, 128, 129, 130, 131, 133, 134, 137, 141, 142, 144, 145, 149, 150, 153, 155, 158, 159, 160, 163, 164, 169, 173, 175, 181, 185, 188, 196, 203, 204, 208, 210, 215, 217, 220, 227, 233, 240, 241, 244, 245, 409, 416, 422, 423, 424, 425, 427, 431, 432, 437, 438, 439], "onli": [0, 1, 2, 3, 4, 7, 14, 15, 17, 19, 20, 21, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 60, 61, 62, 63, 64, 67, 68, 69, 72, 73, 74, 77, 79, 80, 81, 82, 83, 84, 93, 95, 99, 100, 102, 107, 108, 115, 119, 122, 123, 124, 125, 128, 129, 130, 131, 133, 136, 137, 144, 145, 149, 150, 151, 152, 153, 155, 158, 159, 160, 178, 181, 185, 186, 188, 189, 190, 192, 194, 195, 199, 202, 206, 208, 212, 213, 217, 224, 225, 226, 227, 228, 232, 233, 234, 237, 239, 241, 242, 244, 245, 249, 269, 271, 277, 278, 303, 307, 308, 312, 313, 315, 316, 317, 318, 326, 328, 329, 330, 334, 335, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 361, 362, 363, 364, 365, 381, 388, 403, 418, 419, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 434, 435, 436, 437, 439, 441, 442], "option": [0, 1, 2, 3, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 89, 93, 94, 95, 96, 99, 100, 101, 102, 103, 105, 106, 107, 108, 111, 115, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 158, 159, 160, 161, 162, 163, 164, 165, 170, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 194, 195, 196, 197, 199, 200, 202, 203, 204, 205, 206, 207, 208, 212, 213, 215, 216, 219, 220, 221, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 267, 268, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 288, 290, 291, 292, 295, 296, 297, 299, 303, 307, 308, 309, 311, 312, 313, 314, 315, 316, 317, 319, 320, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 359, 360, 361, 362, 363, 364, 365, 367, 370, 371, 372, 373, 375, 376, 377, 378, 379, 381, 383, 386, 388, 390, 392, 393, 394, 395, 396, 397, 399, 403, 409, 411, 412, 413, 417, 425, 427, 430, 435, 436, 437, 439, 441], "On": [0, 3, 7, 21, 22, 23, 24, 34, 266, 270, 417, 423, 435, 436], "end": [0, 2, 3, 14, 15, 20, 30, 37, 42, 45, 50, 57, 60, 61, 62, 63, 64, 67, 72, 73, 74, 79, 91, 100, 102, 106, 107, 108, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 196, 202, 210, 225, 226, 232, 234, 244, 251, 252, 265, 266, 269, 270, 273, 311, 329, 349, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 441, 442], "come": [0, 1, 2, 3, 8, 14, 15, 17, 20, 21, 22, 23, 24, 45, 50, 113, 119, 122, 125, 129, 136, 137, 140, 149, 150, 153, 158, 159, 160, 192, 195, 302, 303, 304, 305, 306, 312, 320, 326, 328, 343, 346, 348, 381, 422, 423, 424, 425, 429, 430, 431, 432, 435, 436, 439, 441, 442], "set": [0, 1, 2, 3, 7, 9, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 28, 29, 30, 33, 34, 35, 37, 38, 42, 43, 45, 46, 47, 48, 49, 50, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 67, 68, 69, 72, 73, 74, 79, 93, 94, 95, 102, 106, 109, 115, 119, 122, 125, 127, 129, 130, 136, 137, 141, 142, 143, 149, 150, 151, 152, 153, 158, 159, 160, 163, 164, 165, 174, 175, 177, 179, 181, 182, 185, 186, 189, 192, 195, 202, 203, 204, 205, 212, 217, 225, 226, 227, 228, 232, 233, 234, 237, 239, 241, 242, 244, 245, 265, 267, 269, 271, 273, 277, 278, 285, 287, 288, 296, 302, 307, 315, 316, 328, 329, 335, 340, 343, 344, 346, 349, 361, 365, 381, 389, 390, 394, 396, 405, 413, 416, 417, 418, 420, 422, 423, 424, 425, 426, 428, 429, 430, 434, 435, 436, 437, 438, 439, 441, 442], "re": [0, 2, 3, 8, 13, 21, 22, 23, 30, 37, 42, 45, 50, 57, 60, 61, 62, 63, 64, 67, 72, 73, 74, 79, 102, 106, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 199, 244, 271, 275, 276, 279, 312, 316, 388, 419, 422, 424, 425, 427, 429, 434, 435, 437, 441, 442], "usabl": [0, 419, 425, 441], "function": [0, 2, 3, 8, 14, 15, 17, 20, 21, 22, 23, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 86, 93, 94, 95, 96, 102, 109, 111, 115, 119, 122, 125, 126, 129, 130, 137, 149, 150, 153, 158, 159, 160, 165, 173, 175, 176, 177, 181, 182, 192, 195, 202, 204, 231, 232, 234, 235, 241, 242, 244, 245, 246, 247, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 275, 276, 277, 278, 279, 282, 283, 284, 286, 288, 291, 292, 294, 297, 299, 304, 305, 306, 307, 309, 311, 312, 314, 315, 316, 318, 319, 320, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 342, 343, 344, 346, 347, 348, 349, 351, 352, 353, 354, 355, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 399, 409, 415, 417, 422, 425, 426, 427, 428, 431, 434, 437, 439, 442], "cost": [0, 2, 33, 94, 326, 328, 343, 346, 348, 418, 422, 423, 426, 435, 436, 437, 439], "return": [0, 2, 3, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 89, 92, 94, 100, 102, 103, 105, 107, 108, 111, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 135, 136, 137, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 153, 155, 158, 159, 160, 163, 164, 167, 168, 169, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 248, 249, 252, 253, 254, 255, 256, 257, 259, 261, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 284, 286, 289, 291, 292, 295, 296, 297, 298, 300, 303, 304, 305, 306, 307, 311, 312, 314, 315, 316, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 346, 347, 348, 349, 351, 352, 355, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 381, 385, 389, 399, 402, 404, 409, 410, 411, 412, 413, 415, 417, 419, 422, 423, 424, 426, 428, 429, 431, 434, 435, 436, 437, 438, 439, 441, 442], "process": [0, 1, 3, 4, 5, 8, 14, 15, 16, 17, 20, 21, 22, 23, 24, 30, 37, 42, 50, 56, 57, 58, 60, 61, 64, 65, 67, 72, 73, 74, 75, 78, 79, 95, 99, 100, 103, 107, 115, 119, 122, 125, 126, 129, 133, 137, 140, 144, 149, 150, 151, 152, 153, 158, 159, 160, 184, 185, 192, 195, 202, 227, 230, 232, 241, 242, 244, 267, 271, 277, 278, 288, 309, 314, 415, 419, 422, 423, 425, 426, 427, 435, 436, 437, 438, 439, 441, 442], "good": [0, 1, 4, 9, 149, 422, 424, 425, 426, 428, 436, 441, 442], "runtim": [0, 2, 3, 26, 30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244, 437], "perform": [0, 1, 2, 3, 4, 8, 13, 14, 15, 17, 20, 21, 22, 23, 24, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 60, 61, 66, 67, 68, 69, 72, 77, 78, 80, 81, 82, 83, 84, 119, 122, 123, 124, 125, 128, 129, 130, 131, 136, 137, 149, 150, 153, 155, 158, 159, 160, 163, 164, 166, 192, 195, 202, 207, 229, 232, 234, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 279, 282, 283, 286, 287, 288, 291, 292, 294, 299, 307, 309, 311, 314, 319, 322, 328, 329, 338, 346, 349, 394, 399, 418, 422, 423, 424, 425, 426, 427, 430, 432, 434, 435, 436, 437, 442], "To": [0, 1, 2, 3, 4, 6, 7, 8, 9, 19, 21, 22, 23, 30, 37, 42, 50, 57, 60, 61, 62, 63, 64, 66, 67, 72, 73, 74, 91, 100, 102, 107, 108, 111, 118, 119, 120, 121, 122, 125, 128, 129, 130, 135, 136, 137, 140, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 163, 185, 190, 225, 227, 241, 244, 250, 267, 271, 288, 304, 305, 306, 316, 329, 335, 340, 344, 351, 381, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 417, 418, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 435, 436, 437, 438, 439, 441, 442], "read": [0, 2, 3, 7, 26, 34, 35, 39, 43, 57, 59, 62, 63, 64, 66, 69, 70, 73, 74, 93, 94, 95, 96, 99, 102, 109, 111, 115, 119, 122, 125, 128, 129, 130, 137, 149, 150, 153, 158, 159, 160, 177, 178, 179, 181, 182, 184, 185, 186, 188, 189, 190, 192, 193, 194, 196, 197, 198, 199, 200, 203, 204, 210, 211, 213, 214, 215, 217, 220, 221, 222, 224, 225, 226, 227, 228, 229, 231, 232, 233, 236, 237, 238, 240, 241, 244, 250, 284, 303, 304, 305, 306, 308, 311, 312, 315, 316, 318, 320, 321, 326, 327, 328, 334, 335, 336, 337, 338, 339, 342, 343, 344, 346, 347, 348, 349, 352, 359, 361, 362, 363, 364, 365, 381, 394, 399, 417, 422, 423, 424, 426, 427, 428, 434, 435, 436, 437, 438, 441, 442], "philosophi": [0, 9], "capabl": [0, 1, 3, 7, 9, 11, 16, 24, 26, 419, 422, 427, 430, 434, 438, 442], "beyond": [0, 45, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 426], "api": [0, 1, 2, 3, 5, 26, 34, 35, 37, 43, 45, 60, 69, 72, 77, 122, 125, 151, 152, 155, 212, 239, 241, 242, 249, 417, 418, 419, 426, 427, 428, 429, 430, 431, 435, 436, 437, 439, 441, 442], "check": [0, 2, 3, 4, 5, 6, 7, 9, 14, 15, 17, 20, 21, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 60, 61, 64, 67, 68, 69, 72, 77, 80, 81, 82, 83, 84, 85, 87, 90, 91, 98, 107, 119, 122, 125, 126, 128, 129, 130, 137, 143, 149, 150, 153, 158, 159, 160, 165, 166, 185, 186, 190, 198, 204, 213, 227, 230, 234, 244, 245, 259, 303, 308, 309, 312, 313, 314, 315, 316, 329, 340, 351, 381, 414, 417, 418, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442], "paper": [0, 120, 121, 123, 124, 131, 135, 136, 141, 142, 144, 145, 155, 163, 164, 212, 237, 239, 252, 265, 289, 298, 333, 341, 351, 422, 424, 435, 436], "releas": [0, 4, 7, 10, 30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 202, 232, 234, 244, 329, 349], "sync": [0, 1, 14, 15, 20, 21, 22, 23, 24, 119, 401, 409, 419, 422], "so": [0, 1, 2, 3, 4, 6, 7, 10, 11, 30, 37, 42, 45, 50, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 72, 73, 74, 79, 102, 119, 122, 125, 129, 137, 141, 142, 149, 150, 153, 158, 159, 160, 202, 227, 232, 241, 244, 249, 317, 318, 361, 381, 422, 424, 425, 429, 432, 435, 436, 437, 442], "make": [0, 1, 2, 3, 4, 7, 11, 30, 37, 42, 45, 50, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 72, 73, 74, 77, 79, 102, 105, 109, 111, 118, 119, 122, 125, 129, 130, 133, 134, 136, 137, 139, 145, 149, 150, 153, 158, 159, 160, 165, 176, 178, 190, 197, 205, 208, 212, 213, 217, 221, 225, 229, 233, 237, 244, 247, 250, 265, 266, 267, 269, 270, 271, 277, 278, 280, 308, 316, 326, 328, 343, 346, 348, 361, 362, 363, 364, 379, 396, 405, 413, 417, 418, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 434, 435, 436, 437, 438, 439, 441, 442], "sure": [0, 1, 3, 4, 7, 37, 109, 122, 129, 133, 190, 217, 308, 413, 417, 422, 424, 425, 426, 429, 435, 436, 437, 439, 441, 442], "alwai": [0, 2, 3, 14, 15, 23, 30, 31, 37, 42, 50, 60, 61, 67, 72, 77, 80, 89, 90, 91, 98, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 204, 207, 229, 241, 242, 244, 336, 344, 417, 418, 423, 424, 425, 426, 435, 436, 437, 439], "enjoi": [0, 2, 3, 430], "latest": [0, 1, 2, 3, 10, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 144, 147, 148, 151, 152, 396, 424, 435, 436, 437, 441], "featur": [0, 2, 3, 4, 14, 15, 17, 20, 21, 22, 23, 24, 26, 30, 37, 54, 60, 72, 77, 78, 100, 107, 108, 119, 122, 125, 129, 137, 140, 149, 150, 151, 152, 153, 156, 157, 158, 159, 160, 165, 182, 185, 199, 202, 204, 210, 227, 228, 236, 241, 247, 251, 252, 262, 263, 265, 266, 267, 269, 270, 271, 272, 277, 280, 281, 316, 323, 326, 328, 343, 346, 348, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 413, 417, 418, 422, 423, 424, 425, 426, 428, 429, 430, 432, 437, 439, 441, 442], "recent": [0, 7, 240, 242, 245, 442], "version": [0, 1, 2, 3, 6, 29, 30, 32, 35, 37, 38, 42, 43, 44, 47, 49, 50, 53, 55, 56, 58, 60, 61, 66, 67, 72, 81, 82, 83, 84, 107, 119, 122, 125, 128, 129, 130, 131, 137, 144, 145, 149, 150, 151, 153, 155, 158, 159, 160, 163, 164, 176, 185, 231, 240, 241, 242, 244, 245, 247, 267, 271, 279, 285, 306, 326, 328, 343, 344, 346, 348, 349, 361, 364, 416, 417, 418, 422, 424, 425, 426, 427, 429, 432, 435, 436, 437, 438, 442], "although": [0, 1, 3, 8, 24, 30, 37, 42, 60, 61, 67, 72, 80, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 246, 247, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 279, 282, 283, 286, 288, 291, 292, 294, 299, 307, 309, 311, 314, 319, 322, 418, 419, 422, 423, 430, 439], "core": [0, 2, 3, 8, 57, 62, 63, 64, 73, 74, 102, 419, 425, 428, 441], "guarante": [0, 2, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 60, 61, 65, 67, 68, 69, 72, 77, 79, 80, 81, 82, 83, 84, 93, 94, 95, 96, 109, 111, 115, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 232, 241, 242, 244, 316, 430], "backward": [0, 8, 30, 37, 42, 50, 60, 61, 67, 72, 119, 120, 121, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 241, 242, 244, 265, 266, 269, 270, 287, 316, 326, 327, 329, 330, 334, 335, 342, 346, 347, 348, 349, 351, 352, 422, 424, 425, 426, 429, 430, 432, 435, 436, 437], "compat": [0, 2, 3, 7, 14, 15, 17, 26, 30, 37, 42, 50, 60, 61, 67, 72, 94, 102, 105, 107, 108, 109, 113, 119, 122, 125, 129, 131, 137, 146, 149, 150, 153, 158, 159, 160, 185, 225, 237, 241, 242, 244, 245, 265, 266, 267, 269, 270, 271, 313, 326, 327, 329, 330, 331, 333, 334, 335, 342, 344, 346, 347, 348, 349, 351, 352, 355, 361, 422, 425, 439], "2": [0, 1, 2, 3, 8, 9, 10, 14, 15, 17, 24, 25, 26, 27, 28, 29, 30, 33, 34, 35, 37, 38, 39, 42, 43, 45, 46, 47, 48, 49, 50, 54, 55, 57, 58, 59, 60, 61, 62, 64, 67, 69, 70, 72, 73, 74, 75, 78, 79, 89, 93, 95, 99, 100, 102, 107, 108, 113, 115, 119, 120, 121, 122, 125, 126, 129, 135, 136, 137, 140, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 163, 164, 170, 177, 181, 182, 184, 186, 189, 190, 192, 193, 194, 195, 204, 205, 208, 210, 212, 214, 217, 220, 224, 225, 226, 227, 232, 233, 234, 237, 239, 241, 242, 244, 245, 250, 251, 252, 253, 254, 255, 256, 257, 258, 261, 263, 264, 265, 266, 267, 269, 270, 271, 272, 275, 276, 277, 278, 279, 286, 287, 288, 296, 299, 307, 308, 309, 311, 315, 319, 320, 326, 327, 328, 329, 330, 334, 335, 342, 343, 346, 347, 348, 349, 351, 352, 360, 361, 362, 363, 364, 366, 367, 370, 371, 372, 373, 374, 375, 376, 377, 378, 381, 390, 417, 418, 421, 422, 423, 424, 425, 426, 428, 429, 434, 435, 436, 437, 439, 440, 441, 442], "0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 15, 16, 17, 20, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 77, 79, 80, 81, 82, 83, 84, 86, 89, 93, 94, 95, 99, 100, 102, 107, 108, 115, 119, 120, 121, 122, 125, 128, 129, 131, 132, 135, 136, 137, 143, 144, 145, 147, 148, 149, 150, 153, 155, 156, 157, 158, 159, 160, 178, 179, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 193, 194, 196, 197, 198, 200, 203, 204, 205, 206, 207, 208, 211, 212, 213, 214, 215, 217, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 280, 281, 284, 287, 288, 291, 292, 295, 296, 297, 299, 303, 307, 309, 314, 315, 316, 318, 319, 322, 323, 326, 327, 328, 329, 330, 331, 333, 335, 336, 337, 338, 339, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 359, 360, 361, 362, 363, 364, 367, 368, 369, 390, 397, 409, 413, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442], "nightli": [0, 6], "via": [0, 1, 3, 4, 7, 8, 19, 23, 28, 29, 31, 32, 33, 34, 35, 37, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 57, 60, 64, 68, 69, 72, 73, 74, 77, 80, 81, 82, 83, 84, 94, 129, 149, 158, 205, 212, 215, 239, 329, 332, 344, 418, 419, 422, 423, 424, 425, 428, 430, 439, 441, 442], "tensordict": [0, 1, 3, 13, 14, 15, 17, 20, 21, 22, 23, 24, 26, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 90, 91, 93, 94, 95, 96, 98, 99, 100, 102, 105, 107, 108, 113, 114, 115, 116, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 135, 136, 137, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 170, 176, 177, 178, 179, 181, 182, 184, 185, 186, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 206, 208, 210, 211, 212, 213, 214, 215, 217, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 246, 248, 249, 250, 260, 261, 264, 267, 271, 273, 274, 277, 278, 288, 289, 290, 298, 299, 302, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 359, 360, 361, 362, 363, 364, 365, 379, 380, 390, 394, 395, 396, 398, 399, 415, 418, 419, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 442], "git": [0, 6, 7, 10], "clone": [0, 2, 4, 8, 28, 29, 31, 32, 33, 34, 35, 37, 38, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 60, 67, 68, 69, 72, 77, 79, 80, 81, 82, 83, 84, 93, 204, 214, 232, 233, 242, 304, 305, 306, 315, 334, 342, 351, 415, 422, 435, 437, 441], "willing": 0, "contribut": [0, 2], "cd": [0, 7], "path": [0, 3, 6, 7, 30, 37, 42, 45, 50, 56, 57, 58, 60, 61, 62, 63, 64, 65, 67, 72, 73, 74, 78, 79, 89, 91, 93, 102, 110, 116, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 161, 175, 212, 239, 244, 274, 383, 388, 399, 419, 423, 426, 432, 435], "root": [0, 2, 3, 34, 35, 43, 45, 57, 62, 63, 64, 69, 73, 74, 79, 90, 91, 98, 102, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 176, 185, 206, 228, 229, 267, 268, 271, 296, 297, 361, 418, 425, 427, 435, 436, 437, 439, 442], "http": [0, 2, 5, 6, 7, 10, 14, 15, 21, 22, 23, 27, 57, 75, 99, 100, 120, 121, 123, 124, 131, 133, 135, 136, 141, 142, 144, 145, 146, 147, 148, 151, 152, 155, 161, 162, 163, 164, 185, 212, 237, 247, 253, 254, 255, 256, 257, 258, 261, 262, 263, 269, 274, 275, 276, 281, 282, 283, 287, 288, 289, 291, 292, 298, 309, 326, 327, 329, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 345, 346, 347, 348, 349, 350, 351, 361, 366, 374, 414, 433, 438, 441], "github": [0, 2, 5, 6, 7, 10, 21, 22, 23, 27, 120, 121, 123, 124, 128, 131, 135, 136, 141, 142, 144, 145, 147, 148, 151, 152, 155, 161, 162, 163, 164, 182, 185, 237, 247, 428, 432, 435, 436, 441], "com": [0, 2, 5, 6, 7, 10, 21, 22, 23, 27, 120, 121, 123, 124, 131, 133, 135, 136, 141, 142, 144, 145, 147, 148, 151, 152, 155, 161, 162, 163, 164, 185, 247, 441], "setup": [0, 1, 7, 120, 121, 133, 135, 136, 161], "py": [0, 3, 27, 128, 130, 175, 185, 259, 289, 298, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442], "develop": [0, 3, 4, 7, 45, 133, 422, 441], "A": [0, 1, 3, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 106, 107, 109, 113, 114, 115, 116, 117, 119, 122, 125, 127, 129, 131, 132, 134, 137, 149, 150, 153, 154, 155, 158, 159, 160, 165, 171, 176, 178, 180, 181, 182, 184, 185, 188, 190, 194, 200, 204, 206, 212, 213, 215, 222, 227, 229, 232, 233, 234, 237, 238, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 261, 264, 265, 266, 267, 269, 270, 271, 272, 274, 275, 276, 278, 279, 281, 287, 299, 307, 308, 309, 311, 312, 313, 316, 318, 319, 322, 323, 326, 327, 328, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 355, 359, 361, 362, 363, 364, 365, 367, 379, 382, 383, 386, 388, 389, 392, 399, 401, 409, 415, 418, 421, 422, 424, 426, 428, 429, 430, 433, 437, 440, 442], "seri": [0, 2, 3, 7, 8, 54, 92, 103, 113, 114, 117, 118, 158, 207, 233, 381, 417, 418, 422, 423, 424, 431, 432, 435, 436, 439, 442], "quick": [0, 426], "ramp": 0, "up": [0, 1, 2, 3, 8, 9, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 66, 68, 69, 77, 80, 81, 82, 83, 84, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 181, 184, 202, 205, 228, 233, 244, 247, 346, 416, 417, 418, 422, 423, 424, 425, 428, 432, 435, 436, 437, 439, 441, 442], "If": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 67, 68, 69, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 89, 93, 94, 95, 96, 100, 102, 103, 105, 106, 107, 108, 113, 115, 119, 122, 123, 124, 125, 126, 128, 129, 130, 131, 133, 136, 137, 141, 142, 143, 144, 145, 149, 150, 151, 152, 153, 155, 158, 159, 160, 161, 162, 163, 164, 165, 169, 173, 176, 177, 178, 181, 182, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 197, 199, 202, 204, 205, 206, 207, 208, 212, 213, 216, 217, 220, 221, 226, 227, 228, 229, 230, 231, 232, 234, 235, 237, 239, 241, 242, 244, 245, 250, 251, 252, 264, 265, 266, 267, 269, 270, 271, 272, 275, 276, 277, 278, 279, 288, 299, 303, 307, 308, 309, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 325, 326, 327, 328, 329, 330, 331, 333, 335, 336, 337, 338, 340, 342, 343, 344, 346, 347, 348, 349, 351, 352, 359, 360, 361, 362, 363, 364, 365, 375, 376, 377, 378, 379, 385, 388, 389, 395, 396, 399, 401, 403, 409, 413, 416, 418, 422, 423, 424, 425, 426, 427, 429, 431, 432, 434, 435, 436, 437, 439, 441, 442], "hurri": [0, 427], "last": [0, 1, 2, 3, 4, 14, 15, 17, 20, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 59, 60, 68, 69, 77, 79, 80, 81, 82, 83, 84, 106, 107, 108, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 135, 136, 137, 144, 145, 149, 150, 153, 155, 158, 159, 160, 170, 178, 181, 184, 199, 206, 208, 213, 226, 228, 230, 240, 245, 246, 251, 252, 264, 265, 267, 269, 271, 272, 275, 276, 282, 293, 296, 299, 307, 311, 316, 329, 361, 363, 364, 423, 424, 425, 426, 427, 428, 435, 436, 437, 438, 439, 441, 442], "item": [0, 2, 3, 8, 14, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 57, 62, 63, 64, 68, 69, 72, 73, 74, 77, 78, 80, 81, 82, 83, 84, 89, 94, 100, 102, 106, 113, 178, 198, 233, 242, 275, 276, 330, 331, 333, 390, 418, 419, 422, 424, 425, 429, 430, 435, 436, 437, 439], "navig": [0, 436], "previou": [0, 3, 4, 10, 50, 57, 62, 63, 64, 66, 73, 74, 102, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 177, 199, 227, 244, 265, 269, 292, 307, 424, 425, 426, 427, 428, 432, 437, 442], "whenev": [0, 1, 2, 3, 14, 15, 17, 20, 21, 22, 23, 24, 26, 28, 29, 31, 32, 33, 34, 35, 37, 38, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 60, 64, 68, 69, 72, 73, 74, 77, 79, 80, 81, 82, 83, 84, 99, 100, 107, 108, 123, 124, 128, 130, 131, 141, 142, 155, 163, 164, 175, 199, 203, 234, 240, 344, 361, 362, 363, 364, 379, 401, 417, 431, 439], "want": [0, 1, 2, 3, 6, 7, 8, 17, 37, 60, 72, 108, 185, 208, 287, 326, 327, 329, 330, 331, 333, 335, 336, 337, 342, 344, 346, 347, 348, 349, 351, 352, 359, 417, 422, 423, 424, 425, 426, 427, 429, 430, 431, 435, 436, 437, 438, 439, 441, 442], "ted": [0, 39, 51, 70, 71, 90, 91, 98, 415, 421, 433, 440], "s": [0, 1, 2, 3, 6, 7, 8, 11, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 30, 34, 37, 42, 45, 50, 56, 57, 58, 60, 61, 62, 63, 64, 65, 67, 72, 73, 74, 77, 79, 102, 107, 108, 113, 119, 120, 121, 122, 125, 129, 133, 135, 136, 137, 141, 142, 144, 149, 150, 151, 152, 153, 158, 159, 160, 163, 164, 165, 185, 189, 202, 206, 212, 225, 227, 230, 231, 232, 233, 234, 237, 239, 241, 242, 244, 246, 249, 251, 252, 259, 264, 267, 271, 276, 277, 278, 281, 287, 289, 296, 298, 304, 306, 309, 311, 312, 315, 316, 319, 327, 329, 334, 340, 342, 344, 349, 351, 361, 362, 363, 364, 365, 379, 417, 418, 421, 422, 423, 424, 425, 426, 427, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442], "modul": [0, 1, 2, 3, 4, 8, 11, 14, 15, 17, 20, 21, 22, 23, 24, 27, 30, 36, 37, 42, 50, 60, 61, 66, 67, 72, 113, 119, 120, 121, 122, 125, 129, 137, 140, 143, 146, 149, 150, 153, 158, 159, 160, 175, 184, 189, 194, 196, 202, 204, 212, 213, 226, 227, 232, 233, 234, 237, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 336, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 357, 359, 361, 362, 363, 364, 365, 379, 399, 406, 409, 415, 418, 419, 421, 423, 424, 427, 429, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440], "optim": [0, 1, 2, 8, 30, 37, 42, 50, 60, 61, 66, 67, 72, 119, 120, 121, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 232, 234, 244, 248, 274, 280, 281, 287, 296, 327, 329, 344, 345, 346, 349, 356, 394, 395, 399, 409, 418, 419, 421, 424, 425, 426, 427, 428, 430, 433, 435, 436, 437, 440], "collect": [0, 1, 2, 3, 4, 8, 13, 14, 15, 17, 20, 21, 22, 23, 24, 25, 45, 50, 57, 62, 63, 64, 73, 74, 102, 106, 119, 122, 125, 129, 137, 149, 150, 153, 155, 158, 159, 160, 165, 182, 185, 199, 208, 212, 239, 288, 311, 327, 330, 333, 335, 347, 349, 351, 352, 381, 390, 396, 399, 401, 402, 403, 409, 419, 421, 422, 425, 426, 427, 428, 429, 432, 433, 435, 436, 437, 438, 439, 440, 441, 442], "storag": [0, 1, 8, 14, 15, 17, 20, 30, 37, 39, 42, 45, 50, 56, 57, 58, 60, 61, 62, 63, 64, 65, 67, 70, 72, 73, 74, 76, 79, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 106, 107, 108, 110, 111, 112, 113, 115, 116, 119, 122, 125, 127, 129, 137, 149, 150, 153, 158, 159, 160, 184, 185, 192, 195, 217, 244, 415, 419, 421, 423, 424, 425, 426, 427, 429, 432, 433, 435, 436, 438, 440], "log": [0, 3, 4, 8, 11, 66, 259, 260, 261, 275, 276, 284, 296, 297, 308, 309, 312, 316, 326, 327, 328, 329, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 346, 347, 348, 349, 352, 359, 388, 392, 393, 394, 399, 409, 417, 418, 419, 421, 422, 423, 424, 427, 428, 432, 433, 435, 436, 437, 440, 441], "your": [0, 1, 2, 7, 8, 10, 11, 13, 14, 15, 16, 17, 21, 22, 23, 30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 133, 137, 140, 149, 150, 151, 152, 153, 158, 159, 160, 241, 242, 244, 316, 389, 413, 415, 416, 417, 418, 421, 423, 424, 425, 427, 428, 429, 430, 431, 433, 435, 436, 439, 440, 441], "own": [0, 1, 14, 15, 20, 24, 25, 30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 151, 152, 153, 158, 159, 160, 244, 381, 415, 418, 421, 423, 424, 427, 433, 435, 436, 437, 440], "train": [0, 1, 2, 3, 13, 14, 15, 17, 20, 21, 22, 23, 24, 25, 27, 30, 33, 37, 42, 50, 56, 58, 60, 61, 65, 66, 67, 72, 78, 79, 89, 119, 122, 125, 129, 134, 137, 141, 142, 149, 150, 151, 152, 153, 158, 159, 160, 165, 192, 200, 212, 226, 231, 234, 237, 239, 244, 246, 247, 249, 254, 256, 264, 288, 326, 327, 328, 329, 330, 334, 335, 336, 337, 338, 339, 342, 343, 344, 346, 347, 348, 349, 351, 352, 359, 361, 399, 401, 409, 415, 417, 419, 421, 423, 427, 430, 431, 433, 438, 439, 440, 441, 442], "loop": [0, 1, 8, 17, 56, 58, 65, 79, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 246, 264, 287, 288, 346, 361, 399, 418, 419, 421, 422, 423, 427, 429, 430, 431, 433, 434, 439, 440, 441], "ppo": [0, 1, 4, 8, 312, 316, 328, 343, 346, 415, 417, 421, 422, 423, 426, 428, 429, 433, 435, 440], "pendulum": [0, 3, 14, 15, 17, 20, 24, 25, 62, 113, 119, 122, 123, 124, 125, 126, 128, 129, 130, 137, 144, 149, 150, 153, 158, 159, 160, 185, 188, 189, 190, 197, 203, 204, 208, 215, 217, 221, 222, 225, 227, 228, 229, 232, 233, 234, 235, 241, 242, 244, 250, 267, 271, 409, 417, 421, 423, 424, 427, 428, 429, 433, 440, 441, 442], "introduct": [0, 418, 421, 427, 433, 435, 436, 440, 442], "multi": [0, 1, 7, 9, 14, 15, 20, 30, 37, 42, 50, 57, 60, 61, 64, 67, 68, 69, 72, 73, 74, 90, 91, 98, 119, 122, 125, 129, 137, 141, 142, 149, 150, 153, 156, 157, 158, 159, 160, 205, 234, 244, 265, 267, 269, 271, 272, 277, 278, 279, 311, 316, 359, 361, 362, 363, 364, 415, 421, 422, 423, 424, 425, 427, 428, 433, 437, 440, 441], "agent": [0, 9, 63, 68, 69, 134, 140, 141, 142, 147, 148, 151, 152, 156, 157, 161, 162, 163, 164, 166, 205, 224, 225, 226, 275, 276, 277, 278, 279, 281, 289, 298, 328, 343, 346, 359, 415, 421, 427, 433, 437, 440], "env": [0, 1, 2, 5, 6, 7, 8, 11, 14, 15, 17, 20, 21, 22, 23, 24, 25, 30, 34, 37, 39, 42, 45, 50, 60, 61, 62, 66, 67, 70, 72, 79, 102, 113, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 248, 250, 267, 271, 273, 274, 311, 315, 344, 379, 380, 381, 389, 403, 404, 405, 409, 411, 412, 413, 415, 417, 418, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440], "us": [0, 1, 2, 5, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 89, 90, 91, 93, 94, 98, 99, 100, 101, 102, 107, 108, 113, 115, 119, 120, 121, 122, 125, 126, 128, 129, 130, 131, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 174, 175, 176, 177, 178, 179, 181, 182, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 202, 203, 204, 205, 206, 208, 211, 212, 213, 214, 215, 217, 220, 221, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 258, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 284, 286, 287, 288, 289, 290, 296, 297, 298, 299, 302, 303, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 319, 320, 321, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 346, 347, 348, 349, 351, 352, 355, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 374, 379, 381, 384, 385, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 407, 409, 413, 415, 416, 417, 419, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 440, 442], "pretrain": [0, 421, 433, 440], "recurr": [0, 2, 184, 265, 266, 267, 269, 271, 292, 302, 361, 421, 423, 428, 433, 439, 440], "dqn": [0, 2, 178, 196, 252, 261, 308, 309, 326, 327, 329, 330, 331, 333, 335, 336, 337, 341, 342, 344, 346, 347, 348, 349, 350, 351, 352, 359, 406, 415, 417, 421, 426, 428, 429, 432, 433, 440], "polici": [0, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 39, 50, 62, 70, 119, 120, 121, 122, 125, 129, 137, 143, 149, 150, 153, 154, 158, 159, 160, 174, 194, 204, 206, 226, 229, 246, 249, 250, 261, 264, 267, 271, 277, 278, 281, 288, 290, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314, 315, 316, 319, 326, 327, 328, 329, 330, 334, 335, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 394, 401, 404, 405, 409, 411, 412, 415, 417, 419, 421, 423, 427, 429, 430, 433, 438, 439, 440, 441, 442], "replai": [0, 8, 13, 14, 15, 17, 20, 21, 22, 23, 24, 50, 57, 62, 63, 64, 73, 74, 99, 100, 101, 102, 103, 104, 106, 108, 109, 111, 113, 114, 118, 184, 185, 194, 213, 217, 227, 233, 244, 329, 330, 331, 333, 334, 335, 342, 347, 349, 351, 352, 396, 399, 407, 409, 415, 418, 419, 421, 426, 433, 437, 438, 440], "buffer": [0, 4, 8, 13, 14, 15, 17, 20, 21, 22, 23, 24, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 67, 68, 69, 72, 73, 74, 77, 79, 80, 81, 82, 83, 84, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 113, 114, 115, 118, 119, 122, 125, 129, 137, 143, 149, 150, 153, 158, 159, 160, 184, 185, 189, 194, 202, 212, 213, 217, 227, 232, 233, 234, 237, 239, 244, 246, 288, 307, 315, 318, 329, 330, 331, 333, 334, 335, 342, 347, 349, 351, 352, 361, 362, 363, 364, 365, 396, 399, 407, 409, 415, 418, 419, 421, 426, 431, 433, 437, 438, 440, 442], "export": [0, 6, 7, 421, 433, 440], "competit": [0, 3, 141, 142, 421, 433, 436, 440], "ddpg": [0, 254, 255, 256, 257, 330, 341, 350, 415, 417, 421, 423, 429, 433, 436, 440], "task": [0, 2, 3, 9, 66, 68, 69, 78, 119, 122, 123, 124, 125, 129, 132, 137, 141, 142, 149, 150, 151, 152, 153, 155, 158, 159, 160, 163, 164, 212, 225, 234, 237, 239, 334, 342, 421, 422, 423, 424, 425, 427, 428, 433, 435, 436, 437, 440, 442], "specif": [0, 1, 2, 5, 8, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 73, 74, 77, 80, 81, 82, 83, 84, 119, 122, 125, 129, 137, 147, 148, 149, 150, 153, 158, 159, 160, 163, 173, 206, 227, 242, 258, 267, 271, 307, 326, 344, 346, 348, 381, 399, 415, 418, 419, 421, 424, 425, 427, 428, 429, 430, 431, 432, 433, 435, 436, 439, 440, 441], "object": [0, 2, 3, 4, 6, 7, 14, 15, 16, 17, 20, 21, 22, 23, 24, 27, 30, 34, 37, 42, 50, 52, 56, 58, 60, 61, 65, 67, 72, 77, 78, 79, 93, 94, 95, 96, 102, 105, 109, 111, 115, 118, 119, 122, 125, 129, 135, 137, 149, 150, 153, 154, 158, 159, 160, 178, 192, 195, 196, 202, 205, 208, 212, 232, 233, 234, 237, 241, 242, 244, 267, 271, 274, 277, 278, 289, 296, 298, 303, 304, 312, 315, 316, 317, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 381, 403, 404, 405, 408, 409, 413, 415, 417, 419, 421, 423, 424, 425, 426, 430, 432, 433, 435, 436, 437, 439, 440, 442], "loss": [0, 3, 8, 58, 196, 275, 287, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 359, 360, 361, 395, 399, 406, 409, 418, 419, 421, 426, 427, 429, 430, 431, 433, 437, 439, 440], "trainer": [0, 326, 327, 328, 334, 335, 336, 337, 338, 339, 342, 343, 344, 346, 347, 348, 349, 352, 359, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 421, 422, 433, 440], "exampl": [0, 1, 2, 4, 9, 10, 14, 15, 17, 20, 21, 24, 25, 26, 28, 29, 30, 31, 33, 34, 35, 37, 38, 39, 42, 43, 45, 46, 47, 48, 49, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 72, 73, 74, 75, 78, 79, 80, 89, 93, 94, 95, 99, 100, 102, 107, 108, 113, 115, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 169, 170, 171, 175, 176, 177, 178, 179, 181, 182, 184, 185, 186, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 200, 202, 203, 204, 205, 208, 210, 211, 212, 213, 214, 215, 216, 217, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 244, 245, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 263, 264, 265, 266, 267, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 284, 286, 287, 288, 289, 290, 298, 299, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314, 315, 316, 318, 319, 320, 323, 326, 327, 329, 330, 331, 333, 334, 335, 336, 337, 342, 344, 346, 347, 348, 349, 351, 352, 353, 354, 359, 361, 362, 363, 364, 367, 379, 381, 389, 390, 391, 392, 393, 395, 396, 397, 398, 401, 409, 415, 417, 418, 419, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442], "packag": [0, 6, 7, 10, 175, 415, 416, 442], "batch": [0, 2, 14, 15, 16, 17, 20, 21, 22, 23, 24, 26, 34, 50, 52, 54, 57, 59, 62, 63, 64, 66, 73, 74, 75, 77, 89, 93, 94, 95, 96, 100, 101, 102, 106, 107, 108, 113, 115, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 135, 136, 137, 143, 144, 146, 147, 148, 149, 150, 153, 158, 159, 160, 161, 162, 163, 164, 177, 182, 185, 189, 190, 199, 206, 208, 210, 213, 217, 224, 227, 229, 233, 234, 236, 240, 241, 242, 244, 247, 259, 265, 266, 267, 269, 270, 271, 275, 276, 277, 278, 279, 280, 284, 288, 289, 295, 299, 302, 311, 315, 326, 327, 328, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 342, 343, 344, 346, 347, 348, 349, 351, 352, 359, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 390, 393, 396, 397, 398, 399, 401, 411, 412, 413, 415, 417, 418, 419, 423, 424, 425, 426, 427, 430, 432, 434, 435, 436, 438, 441, 442], "size": [0, 2, 14, 15, 17, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 89, 93, 94, 95, 96, 99, 100, 101, 102, 106, 107, 108, 109, 115, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 135, 136, 137, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 170, 176, 178, 182, 184, 185, 186, 189, 191, 192, 195, 196, 197, 199, 202, 205, 206, 210, 212, 214, 215, 217, 221, 223, 224, 225, 227, 229, 230, 233, 234, 235, 236, 239, 241, 244, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 269, 270, 271, 272, 274, 275, 276, 277, 278, 284, 285, 286, 287, 288, 289, 290, 291, 292, 295, 298, 299, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314, 315, 318, 320, 323, 326, 327, 329, 330, 331, 333, 334, 335, 342, 344, 346, 347, 348, 349, 351, 352, 359, 360, 361, 362, 363, 364, 365, 381, 390, 396, 415, 417, 418, 423, 424, 425, 426, 427, 428, 430, 435, 436, 437, 442], "copi": [0, 2, 3, 16, 21, 22, 23, 24, 28, 29, 30, 31, 32, 33, 37, 38, 42, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 60, 61, 65, 66, 67, 68, 72, 77, 78, 79, 80, 81, 82, 83, 84, 93, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 176, 181, 185, 202, 215, 226, 232, 233, 234, 241, 242, 244, 245, 267, 271, 279, 307, 329, 344, 349, 361, 379, 415, 418, 422, 423, 425, 427, 435, 439, 441], "weight": [0, 4, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 30, 37, 42, 50, 57, 60, 61, 66, 67, 72, 100, 102, 105, 119, 120, 121, 122, 125, 129, 137, 149, 150, 153, 156, 157, 158, 159, 160, 189, 202, 205, 212, 227, 232, 233, 234, 237, 239, 244, 265, 266, 267, 269, 270, 271, 277, 279, 281, 315, 326, 327, 328, 329, 335, 338, 349, 351, 401, 408, 415, 417, 419, 422, 423, 424, 434, 437, 439, 441], "synchron": [0, 3, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 56, 58, 65, 79, 144, 411, 412, 415, 423, 424, 435], "distribut": [0, 2, 3, 4, 9, 10, 16, 19, 21, 22, 23, 24, 25, 57, 62, 63, 64, 73, 74, 102, 122, 151, 152, 204, 208, 242, 246, 248, 259, 260, 261, 262, 268, 274, 275, 276, 284, 285, 286, 287, 291, 292, 295, 296, 297, 307, 308, 309, 312, 316, 317, 326, 327, 328, 329, 334, 335, 336, 342, 343, 346, 347, 348, 349, 351, 352, 415, 418, 419, 423, 424, 426, 428, 430, 435, 436, 437, 441, 442], "interoper": [0, 14, 15, 415], "run": [0, 2, 3, 4, 5, 6, 7, 8, 10, 13, 14, 15, 17, 20, 21, 22, 23, 24, 30, 37, 42, 50, 60, 61, 62, 67, 72, 100, 107, 108, 119, 120, 121, 122, 123, 124, 125, 128, 129, 135, 136, 137, 143, 144, 145, 149, 150, 153, 158, 159, 160, 165, 189, 202, 207, 208, 224, 232, 233, 234, 241, 244, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 279, 282, 283, 286, 288, 291, 292, 294, 299, 307, 309, 311, 314, 316, 317, 318, 319, 322, 329, 335, 349, 381, 388, 394, 411, 412, 413, 415, 416, 417, 418, 419, 422, 423, 424, 425, 428, 429, 430, 431, 432, 435, 436, 437, 441], "asynchron": [0, 3, 9, 13, 14, 15, 17, 20, 21, 22, 23, 24, 30, 37, 42, 50, 56, 58, 60, 61, 65, 67, 72, 79, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 189, 212, 227, 233, 234, 237, 239, 244, 315, 326, 411, 415, 422, 423, 424], "singl": [0, 2, 3, 14, 15, 17, 20, 21, 22, 23, 24, 30, 34, 35, 37, 40, 42, 43, 45, 48, 50, 56, 57, 58, 60, 61, 62, 63, 64, 65, 67, 69, 72, 73, 74, 75, 79, 94, 102, 108, 113, 119, 122, 125, 128, 129, 137, 141, 142, 149, 150, 153, 158, 159, 160, 163, 164, 178, 185, 186, 205, 212, 217, 227, 232, 234, 239, 244, 251, 252, 265, 266, 267, 269, 270, 271, 272, 278, 314, 318, 327, 328, 329, 331, 333, 335, 336, 342, 343, 346, 347, 349, 351, 352, 356, 361, 362, 363, 364, 370, 371, 372, 373, 375, 376, 377, 378, 379, 413, 415, 417, 418, 422, 423, 424, 425, 426, 427, 428, 429, 430, 434, 435, 436, 437, 438, 439, 441], "node": [0, 2, 19, 21, 22, 23, 24, 25, 34, 35, 43, 45, 56, 58, 65, 69, 79, 137, 232, 415, 430, 441], "helper": [0, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 422, 423, 425, 435, 437], "compos": [0, 3, 30, 37, 42, 50, 57, 60, 61, 64, 67, 72, 73, 74, 101, 102, 103, 104, 113, 114, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 185, 190, 202, 216, 232, 233, 234, 241, 244, 310, 311, 329, 338, 349, 381, 415, 422, 423, 424, 425, 426, 430, 434, 436, 438, 439, 441, 442], "episod": [0, 3, 45, 100, 107, 108, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 176, 181, 217, 220, 226, 248, 361, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 415, 423, 427, 432, 435, 436, 439], "format": [0, 1, 3, 30, 37, 39, 42, 48, 49, 50, 51, 54, 55, 60, 61, 67, 70, 71, 72, 79, 90, 91, 98, 105, 113, 119, 122, 125, 129, 137, 149, 150, 151, 153, 158, 159, 160, 185, 189, 212, 227, 233, 234, 237, 239, 244, 315, 381, 415, 422, 423, 426, 427, 429, 431, 441, 442], "tensorspec": [0, 3, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 80, 81, 82, 83, 84, 85, 86, 87, 119, 122, 125, 129, 137, 143, 149, 150, 153, 154, 158, 159, 160, 163, 164, 177, 178, 182, 183, 185, 186, 187, 188, 189, 191, 192, 193, 194, 196, 197, 199, 201, 203, 204, 205, 206, 208, 210, 214, 215, 216, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 244, 246, 264, 288, 292, 303, 307, 308, 309, 312, 313, 314, 315, 316, 317, 319, 327, 329, 331, 334, 335, 347, 349, 351, 352, 359, 415, 437], "tree": [0, 1, 45, 56, 58, 65, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 185, 415, 435, 439], "forest": [0, 45, 79, 415], "larg": [0, 3, 4, 33, 56, 58, 65, 79, 107, 108, 192, 195, 237, 326, 328, 343, 346, 348, 415, 423, 424, 435, 436, 439], "languag": [0, 27, 66, 415], "human": [0, 27, 415, 437], "feedback": [0, 415, 432, 441], "rlhf": [0, 204, 415, 417], "spec": [0, 1, 2, 14, 15, 17, 24, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 119, 120, 121, 122, 125, 127, 128, 129, 130, 131, 134, 135, 136, 137, 143, 144, 145, 147, 148, 149, 150, 153, 154, 155, 158, 159, 160, 161, 162, 163, 164, 165, 170, 173, 176, 177, 178, 179, 182, 183, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 199, 201, 203, 204, 205, 206, 208, 210, 212, 214, 215, 216, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 244, 246, 261, 264, 267, 271, 288, 290, 292, 303, 307, 308, 309, 312, 313, 314, 315, 316, 318, 319, 326, 327, 329, 330, 331, 333, 334, 335, 342, 346, 347, 348, 349, 351, 352, 359, 415, 417, 418, 422, 423, 424, 425, 426, 427, 428, 432, 434, 435, 436, 441], "lock": [0, 34, 35, 43, 56, 58, 65, 69, 79, 119, 122, 125, 129, 136, 137, 149, 150, 153, 158, 159, 160, 182, 190, 227, 241, 242, 415, 418, 437], "method": [0, 1, 2, 4, 13, 14, 15, 17, 19, 20, 21, 22, 23, 24, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 89, 93, 94, 95, 96, 99, 100, 102, 107, 108, 109, 110, 111, 113, 115, 119, 122, 125, 128, 129, 130, 131, 136, 137, 149, 150, 153, 154, 155, 158, 159, 160, 173, 178, 179, 181, 182, 184, 185, 186, 189, 190, 192, 193, 196, 197, 198, 199, 200, 203, 204, 206, 208, 211, 212, 213, 214, 215, 216, 217, 220, 221, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 244, 245, 246, 248, 249, 250, 259, 264, 267, 271, 277, 278, 279, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 323, 326, 327, 329, 330, 331, 333, 334, 335, 336, 337, 340, 342, 344, 346, 347, 348, 349, 351, 352, 359, 365, 379, 380, 410, 415, 418, 419, 420, 423, 424, 425, 426, 427, 428, 429, 430, 431, 435, 437, 439, 442], "partial": [0, 2, 14, 15, 17, 20, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 184, 185, 226, 227, 228, 312, 399, 415, 425], "step": [0, 1, 4, 8, 14, 15, 17, 20, 21, 22, 23, 24, 37, 45, 50, 66, 79, 90, 91, 98, 100, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 135, 136, 137, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 155, 158, 159, 160, 161, 162, 176, 177, 179, 181, 182, 184, 185, 186, 189, 190, 193, 196, 197, 198, 199, 200, 203, 204, 206, 208, 211, 213, 214, 215, 217, 220, 221, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 237, 238, 240, 241, 244, 246, 247, 248, 262, 264, 265, 267, 269, 271, 273, 274, 287, 288, 311, 312, 316, 326, 337, 346, 360, 361, 362, 363, 364, 367, 368, 369, 380, 383, 390, 394, 399, 415, 419, 423, 425, 426, 428, 429, 431, 432, 434, 437, 438, 441], "reset": [0, 1, 2, 8, 14, 15, 17, 20, 21, 22, 23, 24, 30, 37, 42, 45, 50, 57, 60, 61, 62, 63, 64, 67, 72, 73, 74, 102, 108, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 134, 135, 136, 137, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 158, 159, 160, 161, 162, 165, 177, 180, 181, 182, 185, 196, 199, 203, 207, 212, 220, 225, 226, 227, 228, 229, 232, 233, 234, 237, 240, 241, 244, 245, 250, 265, 267, 271, 279, 288, 301, 311, 344, 380, 415, 418, 422, 423, 424, 425, 427, 430, 434, 435, 436, 441], "vector": [0, 1, 8, 28, 54, 120, 121, 130, 135, 136, 140, 151, 152, 155, 163, 164, 194, 240, 242, 254, 256, 265, 266, 269, 270, 272, 361, 364, 374, 375, 376, 377, 378, 415, 417, 418, 422, 423, 425, 434, 435, 436, 437, 438, 442], "async": [0, 14, 15, 17, 20, 21, 22, 23, 24, 62, 119, 153, 159, 240, 415], "custom": [0, 1, 2, 5, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 30, 37, 42, 50, 60, 61, 67, 72, 79, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 237, 244, 277, 278, 319, 325, 336, 346, 353, 413, 415, 417, 422, 423, 424, 425, 428, 429, 431, 435, 436], "nativ": [0, 1, 7, 9, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 185, 381, 415, 425, 439], "auto": [0, 95, 115, 125, 130, 180, 181, 234, 240, 288, 327, 329, 335, 345, 347, 349, 351, 352, 415, 418, 435, 436], "dynam": [0, 2, 7, 14, 15, 17, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 165, 170, 244, 334, 342, 415, 424, 427, 437], "mask": [0, 1, 4, 26, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 119, 122, 125, 129, 137, 149, 150, 151, 152, 153, 158, 159, 160, 179, 213, 244, 249, 250, 261, 264, 275, 276, 290, 307, 308, 309, 313, 314, 335, 349, 396, 415, 423, 425, 426, 442], "action": [0, 2, 8, 9, 14, 15, 17, 20, 24, 39, 45, 54, 62, 66, 70, 72, 79, 99, 100, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 135, 136, 137, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 163, 164, 170, 176, 178, 179, 182, 188, 189, 192, 193, 194, 195, 196, 197, 199, 200, 202, 204, 206, 207, 208, 210, 214, 215, 217, 221, 225, 227, 231, 233, 234, 235, 236, 240, 244, 246, 248, 250, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 264, 267, 271, 272, 273, 274, 275, 276, 277, 286, 288, 289, 290, 292, 295, 296, 298, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314, 316, 319, 320, 326, 327, 329, 330, 331, 333, 334, 335, 342, 344, 346, 347, 348, 349, 351, 352, 359, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 409, 413, 415, 417, 419, 422, 423, 424, 426, 427, 428, 429, 434, 435, 436, 438, 441, 442], "record": [0, 2, 11, 30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 171, 178, 204, 244, 346, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 394, 409, 415, 423, 424, 428, 432, 435], "domain": [0, 2, 8, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 170, 194, 202, 227, 235, 303, 308, 309, 312, 313, 314, 315, 316, 317, 318, 323, 415, 424, 429, 435, 436, 437, 441, 442], "actor": [0, 3, 4, 24, 154, 204, 248, 253, 254, 256, 261, 262, 264, 274, 286, 288, 290, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 340, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 359, 415, 418, 423, 425, 427, 429, 432, 435, 438, 441], "explor": [0, 1, 243, 246, 249, 264, 281, 288, 303, 308, 309, 312, 313, 314, 315, 316, 326, 344, 394, 404, 405, 409, 415, 424, 425, 426, 427, 429, 430, 432, 435, 436, 437], "valu": [0, 1, 2, 3, 8, 14, 15, 17, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 67, 68, 69, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 89, 99, 100, 102, 107, 108, 113, 119, 122, 125, 129, 130, 137, 140, 149, 150, 153, 158, 159, 160, 165, 170, 175, 176, 177, 178, 181, 183, 185, 186, 188, 190, 192, 193, 194, 195, 196, 202, 207, 208, 212, 213, 216, 217, 218, 220, 222, 224, 227, 228, 233, 234, 239, 240, 241, 242, 244, 245, 246, 247, 250, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 267, 268, 271, 272, 274, 275, 276, 277, 278, 280, 281, 284, 288, 289, 290, 295, 296, 297, 298, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 319, 320, 322, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 381, 389, 390, 392, 393, 394, 395, 396, 399, 409, 415, 419, 423, 426, 429, 430, 431, 434, 435, 436, 437, 439, 441, 442], "gener": [0, 1, 2, 3, 7, 8, 9, 14, 15, 17, 20, 21, 22, 23, 24, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 57, 60, 64, 66, 68, 69, 73, 74, 77, 79, 80, 81, 82, 83, 84, 102, 104, 106, 119, 122, 125, 126, 129, 137, 141, 142, 143, 146, 149, 150, 151, 152, 153, 156, 157, 158, 159, 160, 177, 182, 189, 190, 192, 193, 197, 202, 204, 206, 208, 214, 215, 220, 221, 225, 227, 231, 233, 235, 240, 242, 244, 249, 250, 259, 267, 271, 275, 276, 284, 303, 312, 316, 320, 321, 340, 347, 354, 361, 366, 374, 384, 399, 415, 418, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442], "hook": [0, 2, 30, 37, 39, 42, 50, 57, 60, 61, 62, 63, 64, 67, 70, 72, 73, 74, 102, 116, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244, 246, 247, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 279, 282, 283, 286, 288, 290, 291, 292, 294, 299, 307, 309, 311, 314, 319, 322, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 415], "planner": [0, 248, 274, 415], "torch": [0, 1, 2, 3, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 89, 93, 94, 95, 99, 100, 102, 103, 106, 107, 108, 113, 114, 115, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 170, 176, 177, 178, 179, 181, 182, 183, 184, 186, 189, 190, 192, 193, 194, 195, 196, 197, 202, 204, 205, 208, 210, 212, 214, 215, 217, 219, 220, 221, 222, 224, 225, 226, 227, 228, 230, 233, 234, 235, 237, 239, 241, 242, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 284, 285, 286, 287, 288, 289, 290, 295, 296, 297, 298, 299, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 323, 324, 326, 327, 329, 330, 331, 333, 334, 335, 336, 337, 342, 344, 346, 347, 348, 349, 351, 352, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 383, 390, 397, 398, 409, 415, 417, 419, 422, 423, 424, 425, 426, 428, 429, 430, 432, 434, 435, 436, 437, 438, 439, 441, 442], "vmap": [0, 265, 266, 269, 270, 279, 299, 315, 318, 344, 361, 415, 417], "random": [0, 1, 3, 14, 15, 17, 20, 21, 22, 23, 24, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 61, 66, 68, 69, 77, 80, 81, 82, 83, 84, 101, 113, 119, 122, 125, 129, 137, 143, 149, 150, 153, 154, 158, 159, 160, 165, 178, 194, 207, 208, 227, 234, 250, 264, 265, 267, 269, 312, 315, 316, 323, 327, 344, 347, 394, 403, 415, 417, 422, 423, 424, 426, 427, 428, 430, 437, 438, 439, 441, 442], "sac": [0, 335, 347, 349, 415], "redq": [0, 347, 415], "crossq": [0, 329, 415], "iql": [0, 334, 342, 415, 422, 435, 436], "cql": [0, 327, 333, 415], "gail": [0, 340, 415], "dt": [0, 150, 288, 415, 437], "td3": [0, 351, 352, 415], "bc": [0, 5, 351, 415], "a2c": [0, 326, 415], "dreamer": [0, 171, 172, 262, 337, 338, 339, 415, 417], "checkpoint": [0, 64, 91, 93, 97, 109, 110, 112, 116, 415, 439], "builder": [0, 415, 423, 442], "logger": [0, 3, 11, 379, 381, 383, 384, 385, 386, 387, 388, 393, 399, 409, 413, 415, 423, 435], "_util": [0, 3, 149, 245, 415, 426, 432], "implement_for": [0, 3, 415], "set_auto_unwrap_transformed_env": [0, 12, 234, 415], "auto_unwrap_transformed_env": [0, 389, 415], "thing": [0, 1, 3, 7, 8, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 233, 277, 278, 335, 349, 416, 424, 425, 426, 427, 428, 429, 430, 431, 435, 436, 439, 442], "consid": [0, 1, 2, 3, 8, 14, 15, 16, 17, 21, 23, 24, 30, 34, 35, 37, 42, 43, 50, 57, 60, 61, 64, 67, 69, 72, 73, 74, 93, 95, 107, 108, 115, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 185, 194, 241, 244, 259, 277, 278, 295, 327, 329, 342, 347, 349, 351, 352, 361, 363, 364, 416, 418, 422, 427, 428, 429, 437, 439], "when": [0, 1, 2, 3, 5, 8, 13, 14, 15, 17, 18, 20, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 60, 61, 62, 63, 64, 67, 68, 69, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 90, 91, 93, 94, 95, 96, 98, 99, 100, 101, 102, 106, 107, 108, 109, 111, 115, 119, 122, 125, 126, 128, 129, 130, 136, 137, 140, 141, 142, 144, 146, 149, 150, 151, 152, 153, 158, 159, 160, 163, 164, 174, 176, 179, 181, 184, 185, 189, 192, 194, 195, 204, 205, 207, 208, 212, 213, 220, 227, 229, 232, 233, 234, 237, 239, 240, 241, 242, 244, 245, 247, 248, 259, 261, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 287, 290, 296, 311, 312, 315, 316, 318, 322, 327, 328, 329, 331, 335, 336, 342, 343, 344, 346, 347, 349, 351, 352, 353, 359, 360, 361, 362, 363, 364, 379, 380, 381, 383, 386, 388, 396, 413, 416, 417, 418, 419, 422, 423, 424, 425, 426, 428, 430, 431, 435, 436, 437, 438, 439, 441, 442], "debug": [0, 6, 8, 45, 66, 79, 229, 416, 442], "work": [0, 1, 2, 3, 4, 8, 30, 37, 42, 50, 60, 61, 64, 67, 72, 93, 100, 105, 107, 108, 111, 118, 119, 122, 125, 128, 129, 130, 133, 137, 149, 150, 153, 155, 158, 159, 160, 173, 176, 178, 179, 181, 182, 184, 185, 186, 189, 190, 193, 196, 197, 198, 200, 203, 204, 211, 212, 213, 214, 215, 217, 220, 221, 224, 225, 226, 227, 228, 229, 231, 232, 233, 237, 238, 240, 241, 242, 244, 245, 251, 252, 272, 309, 314, 319, 328, 343, 346, 399, 416, 417, 422, 423, 424, 425, 427, 430, 434, 435, 436, 437, 438, 439, 441, 442], "habitat": [0, 3, 131, 416, 438], "lab": [0, 3, 123, 124, 131, 134, 416], "mujoco": [0, 6, 8, 155, 416, 422, 424, 425], "error": [0, 1, 3, 7, 10, 28, 29, 30, 33, 37, 38, 42, 46, 47, 48, 49, 50, 54, 55, 56, 58, 60, 61, 65, 67, 68, 72, 79, 93, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 161, 165, 166, 213, 232, 244, 245, 344, 416, 418, 422, 424, 435, 436, 442], "solut": [0, 2, 3, 6, 7, 9, 24, 107, 416, 417, 419, 426, 441], "resourc": [0, 1, 13, 21, 22, 23, 24, 131, 416, 422, 424, 426, 435, 436], "issu": [0, 2, 3, 4, 5, 8, 62, 91, 93, 95, 107, 115, 119, 122, 125, 128, 129, 133, 137, 149, 150, 153, 158, 159, 160, 176, 185, 213, 228, 303, 308, 309, 312, 313, 314, 315, 316, 416, 441], "customis": [0, 416, 423, 431], "video": [0, 4, 9, 381, 383, 386, 388, 394, 413, 415, 416, 432, 435, 436], "render": [0, 3, 8, 136, 163, 379, 381, 394, 416, 422, 423, 424, 426, 427, 431], "index": [0, 3, 7, 8, 10, 17, 28, 29, 31, 32, 33, 34, 35, 38, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 68, 69, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 92, 93, 94, 95, 99, 100, 102, 103, 105, 107, 111, 113, 114, 115, 117, 118, 119, 122, 125, 129, 137, 141, 142, 147, 148, 149, 150, 153, 158, 159, 160, 163, 164, 176, 180, 185, 189, 194, 234, 275, 276, 311, 415, 427, 434, 435, 436, 439, 441], "search": [0, 2, 34, 35, 43, 69, 79, 146, 177, 423], "page": [0, 7, 27, 388, 429], "import": [1, 2, 3, 4, 6, 10, 11, 14, 15, 17, 20, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 68, 69, 70, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 89, 93, 94, 95, 99, 100, 102, 107, 108, 113, 115, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 134, 135, 136, 137, 139, 141, 142, 143, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 166, 169, 170, 175, 176, 177, 178, 179, 181, 182, 184, 185, 188, 190, 196, 197, 202, 203, 204, 205, 208, 210, 212, 214, 215, 216, 217, 220, 221, 222, 224, 225, 226, 227, 228, 229, 232, 233, 235, 239, 241, 242, 244, 245, 248, 250, 254, 255, 256, 257, 260, 261, 263, 264, 265, 266, 267, 269, 270, 271, 272, 274, 277, 278, 279, 288, 289, 290, 298, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314, 315, 316, 318, 319, 320, 323, 326, 327, 328, 329, 330, 331, 333, 334, 335, 336, 337, 342, 344, 346, 347, 348, 349, 351, 352, 359, 361, 362, 363, 364, 379, 381, 392, 394, 409, 417, 418, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 441, 442], "syncdatacollector": [1, 2, 3, 14, 15, 18, 20, 21, 22, 23, 24, 39, 50, 70, 182, 185, 217, 249, 267, 271, 409, 412, 415, 422, 423, 424, 425, 426, 430, 432, 435, 436, 439], "currentmodul": 1, "somewhat": [1, 2, 418, 428, 442], "equival": [1, 3, 24, 28, 29, 30, 33, 34, 37, 38, 42, 46, 47, 48, 49, 50, 54, 55, 56, 57, 58, 60, 61, 64, 65, 67, 72, 73, 74, 78, 79, 89, 119, 120, 121, 122, 125, 128, 129, 130, 131, 134, 135, 136, 137, 144, 145, 147, 148, 149, 150, 153, 155, 158, 159, 160, 161, 162, 182, 193, 196, 227, 229, 234, 244, 261, 269, 272, 290, 308, 309, 313, 314, 346, 396, 430, 441, 442], "dataload": [1, 89, 106, 108, 423, 430, 439], "except": [1, 2, 3, 14, 15, 17, 20, 21, 22, 23, 25, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 60, 61, 65, 67, 68, 69, 72, 77, 79, 80, 81, 82, 83, 84, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 185, 198, 217, 226, 227, 228, 232, 234, 244, 246, 264, 265, 267, 269, 271, 284, 288, 326, 329, 344, 346, 349, 381, 417, 422, 423, 427, 435, 439, 441, 442], "1": [1, 2, 3, 4, 8, 10, 14, 15, 17, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 89, 90, 93, 94, 95, 99, 100, 102, 107, 108, 113, 115, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 135, 136, 137, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 163, 164, 170, 176, 178, 179, 181, 182, 183, 184, 185, 186, 188, 189, 190, 192, 193, 194, 195, 196, 197, 200, 202, 204, 205, 206, 208, 210, 212, 213, 214, 215, 217, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 237, 239, 241, 242, 244, 245, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 280, 281, 284, 286, 287, 288, 289, 291, 292, 294, 295, 296, 297, 298, 303, 304, 305, 306, 307, 309, 311, 312, 313, 314, 315, 316, 318, 319, 320, 322, 323, 326, 327, 328, 329, 330, 331, 333, 334, 335, 338, 342, 343, 345, 346, 347, 348, 349, 350, 351, 352, 359, 360, 361, 362, 363, 364, 367, 369, 370, 371, 375, 376, 378, 379, 381, 390, 394, 396, 397, 409, 413, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 428, 429, 430, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442], "thei": [1, 2, 3, 4, 8, 9, 14, 15, 17, 19, 20, 21, 22, 23, 24, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 67, 68, 69, 72, 73, 74, 77, 79, 80, 81, 82, 83, 84, 100, 102, 119, 122, 125, 128, 129, 130, 137, 140, 141, 142, 149, 150, 151, 152, 153, 158, 159, 160, 163, 164, 181, 184, 198, 204, 212, 221, 229, 233, 234, 239, 244, 271, 326, 327, 328, 329, 334, 335, 336, 337, 338, 339, 342, 343, 344, 346, 347, 348, 349, 351, 352, 359, 361, 396, 399, 417, 418, 419, 422, 423, 424, 425, 426, 429, 434, 435, 436, 437, 438, 439, 441, 442], "over": [1, 2, 3, 4, 8, 14, 15, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 60, 61, 64, 67, 68, 69, 72, 73, 74, 75, 77, 78, 80, 81, 82, 83, 84, 88, 100, 102, 106, 107, 108, 119, 122, 125, 129, 137, 141, 142, 149, 150, 153, 158, 159, 160, 176, 178, 194, 208, 220, 228, 242, 244, 284, 287, 296, 299, 318, 336, 338, 344, 361, 367, 379, 402, 417, 419, 422, 423, 424, 426, 427, 428, 429, 430, 435, 436, 437, 442], "non": [1, 2, 3, 8, 14, 15, 17, 20, 21, 22, 23, 24, 28, 30, 31, 32, 34, 35, 37, 42, 43, 44, 50, 52, 53, 56, 57, 58, 60, 61, 65, 67, 68, 69, 72, 77, 79, 80, 81, 82, 83, 84, 94, 96, 119, 122, 125, 129, 137, 149, 150, 151, 152, 153, 158, 159, 160, 176, 182, 183, 185, 189, 199, 212, 224, 227, 233, 234, 235, 236, 237, 239, 242, 244, 250, 265, 267, 269, 271, 277, 315, 316, 326, 327, 329, 330, 331, 333, 334, 335, 336, 337, 338, 342, 344, 346, 347, 348, 349, 351, 352, 359, 361, 362, 363, 364, 417, 422, 425, 426, 435, 436, 437, 439, 442], "static": [1, 37, 60, 66, 72, 78, 100, 107, 108, 131, 150, 241, 245, 342, 427, 437, 439], "like": [1, 2, 3, 4, 7, 11, 24, 30, 34, 35, 37, 42, 43, 45, 50, 52, 57, 60, 61, 64, 67, 69, 72, 73, 74, 78, 96, 102, 108, 119, 122, 125, 126, 129, 131, 137, 140, 149, 150, 151, 152, 153, 158, 159, 160, 165, 185, 196, 227, 230, 244, 265, 269, 278, 310, 316, 326, 328, 343, 346, 347, 348, 417, 418, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 435, 436, 437, 438, 439, 441, 442], "being": [1, 2, 3, 7, 8, 14, 15, 17, 19, 20, 21, 22, 23, 24, 30, 37, 42, 50, 60, 61, 67, 68, 72, 89, 94, 113, 116, 119, 122, 125, 128, 129, 130, 131, 136, 137, 149, 150, 153, 155, 158, 159, 160, 174, 184, 192, 194, 195, 202, 207, 215, 227, 232, 233, 234, 244, 264, 267, 271, 288, 328, 329, 343, 344, 346, 349, 381, 396, 401, 411, 412, 413, 417, 418, 422, 423, 424, 425, 430, 435, 436, 437, 439], "accept": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 30, 37, 42, 50, 56, 58, 60, 61, 64, 65, 67, 72, 79, 80, 89, 119, 122, 125, 129, 137, 143, 149, 150, 153, 158, 159, 160, 180, 185, 189, 199, 202, 212, 220, 224, 227, 232, 233, 234, 235, 236, 237, 239, 244, 272, 299, 315, 316, 317, 329, 349, 381, 419, 424, 427, 431, 439, 441, 442], "two": [1, 2, 3, 4, 8, 10, 30, 37, 42, 45, 46, 47, 48, 49, 50, 57, 60, 61, 64, 66, 67, 72, 73, 74, 79, 102, 106, 107, 108, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 182, 208, 212, 232, 239, 244, 257, 265, 267, 269, 271, 277, 278, 293, 296, 316, 343, 351, 355, 394, 399, 418, 422, 423, 424, 425, 426, 427, 428, 430, 431, 434, 435, 436, 437, 439, 441, 442], "main": [1, 2, 3, 5, 14, 15, 19, 23, 25, 26, 62, 126, 185, 316, 399, 417, 418, 422, 423, 434, 441, 442], "argument": [1, 2, 3, 11, 14, 15, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 67, 68, 69, 72, 73, 74, 77, 79, 80, 81, 82, 83, 84, 89, 91, 93, 94, 95, 99, 100, 102, 105, 106, 107, 108, 111, 113, 115, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 134, 135, 136, 137, 141, 142, 144, 145, 147, 148, 149, 150, 151, 153, 155, 158, 159, 160, 161, 162, 163, 164, 170, 176, 178, 179, 181, 182, 184, 185, 186, 188, 189, 190, 193, 196, 197, 198, 200, 202, 203, 204, 206, 211, 212, 213, 214, 215, 217, 220, 221, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 250, 251, 252, 264, 265, 267, 269, 271, 272, 275, 276, 277, 278, 280, 288, 299, 303, 307, 308, 309, 311, 312, 313, 314, 315, 316, 317, 319, 320, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 340, 341, 342, 343, 345, 346, 347, 348, 349, 351, 352, 354, 359, 361, 362, 363, 364, 365, 369, 379, 380, 381, 386, 388, 392, 399, 402, 409, 410, 413, 422, 423, 424, 425, 426, 427, 428, 430, 435, 436, 437, 439, 441, 442], "list": [1, 2, 3, 6, 7, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 60, 61, 62, 63, 64, 67, 68, 69, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 86, 94, 96, 102, 105, 106, 107, 108, 109, 111, 119, 122, 123, 124, 125, 128, 129, 130, 131, 137, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 155, 158, 159, 160, 161, 162, 163, 164, 166, 176, 183, 184, 188, 192, 193, 195, 204, 205, 208, 210, 212, 220, 222, 230, 231, 232, 233, 234, 236, 237, 239, 241, 244, 250, 251, 252, 254, 260, 263, 267, 271, 272, 275, 276, 282, 290, 309, 311, 313, 314, 316, 318, 319, 320, 327, 329, 342, 344, 347, 349, 351, 352, 358, 361, 364, 379, 380, 394, 396, 411, 412, 418, 422, 424, 427, 428, 429, 430, 434, 435, 437, 438, 439, 441, 442], "constructor": [1, 2, 3, 14, 15, 17, 21, 22, 23, 24, 62, 64, 73, 74, 78, 99, 113, 119, 122, 125, 129, 137, 144, 149, 150, 153, 158, 159, 160, 163, 181, 185, 232, 251, 252, 272, 302, 312, 316, 326, 327, 329, 330, 331, 333, 335, 336, 337, 342, 344, 346, 347, 348, 349, 351, 352, 359, 361, 362, 363, 364, 365, 410, 413, 417, 422, 423, 424, 427, 430, 435, 436, 439, 441], "iter": [1, 2, 3, 15, 17, 24, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 60, 61, 62, 63, 64, 67, 68, 69, 72, 73, 74, 77, 80, 81, 82, 83, 84, 88, 89, 96, 102, 106, 119, 120, 121, 122, 125, 129, 135, 136, 137, 149, 150, 153, 158, 159, 160, 197, 208, 221, 244, 245, 247, 249, 250, 251, 252, 272, 277, 278, 294, 303, 308, 312, 313, 315, 317, 318, 320, 344, 358, 394, 398, 399, 418, 419, 422, 424, 425, 430, 432, 435, 436, 437], "execut": [1, 2, 3, 6, 7, 8, 13, 14, 15, 17, 20, 21, 22, 23, 24, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 57, 59, 61, 62, 63, 64, 67, 68, 69, 73, 74, 77, 80, 81, 82, 83, 84, 93, 94, 102, 107, 108, 119, 120, 121, 122, 125, 126, 129, 130, 131, 133, 135, 136, 137, 143, 144, 149, 150, 153, 155, 158, 159, 160, 161, 179, 190, 206, 229, 234, 264, 265, 267, 269, 271, 279, 302, 311, 317, 318, 344, 351, 403, 413, 417, 418, 419, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 435, 436, 439, 440, 441, 442], "queri": [1, 2, 3, 14, 30, 37, 42, 45, 50, 56, 58, 60, 61, 65, 67, 72, 79, 94, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 212, 237, 241, 244, 318, 418, 422, 429, 437, 441], "defin": [1, 2, 3, 14, 15, 17, 19, 20, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 60, 61, 62, 67, 68, 69, 72, 77, 79, 80, 81, 82, 83, 84, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 213, 226, 244, 245, 246, 247, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 277, 279, 282, 283, 286, 287, 288, 291, 292, 294, 299, 307, 309, 311, 314, 319, 322, 323, 331, 333, 344, 361, 362, 363, 364, 365, 380, 410, 417, 422, 423, 425, 429, 432, 437, 439, 442], "number": [1, 2, 3, 8, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 89, 93, 94, 95, 96, 99, 100, 102, 105, 107, 108, 115, 119, 120, 121, 122, 125, 128, 129, 130, 135, 136, 137, 143, 144, 145, 146, 149, 150, 151, 152, 153, 158, 159, 160, 163, 164, 178, 179, 181, 182, 184, 185, 186, 189, 190, 193, 194, 196, 197, 198, 200, 203, 204, 207, 208, 211, 213, 214, 215, 217, 219, 220, 221, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 237, 238, 240, 241, 244, 246, 247, 248, 251, 252, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 277, 278, 282, 283, 288, 289, 291, 292, 295, 296, 297, 298, 303, 307, 311, 312, 315, 316, 320, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 340, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 386, 388, 390, 392, 394, 399, 401, 402, 403, 411, 412, 413, 417, 418, 422, 423, 424, 425, 427, 428, 430, 432, 435, 436, 437, 438, 439, 442], "befor": [1, 2, 3, 4, 6, 7, 10, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 28, 29, 30, 33, 37, 38, 42, 45, 46, 47, 50, 60, 61, 67, 72, 78, 79, 106, 108, 113, 119, 122, 125, 129, 130, 137, 149, 150, 153, 158, 159, 160, 165, 178, 182, 183, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 199, 201, 202, 203, 204, 205, 206, 207, 208, 210, 214, 215, 216, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 244, 249, 265, 267, 271, 272, 280, 281, 326, 327, 328, 329, 334, 335, 336, 337, 338, 339, 342, 343, 344, 346, 347, 348, 349, 351, 352, 359, 362, 363, 364, 396, 422, 424, 425, 426, 430, 431, 435, 436, 437, 439, 442], "deliv": [1, 2, 3, 17, 422, 423, 427, 430, 441], "stack": [1, 2, 3, 7, 8, 14, 15, 17, 21, 23, 24, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 62, 63, 64, 65, 69, 72, 73, 74, 77, 79, 80, 81, 82, 83, 84, 87, 94, 99, 102, 119, 122, 125, 128, 129, 130, 137, 140, 149, 150, 151, 152, 153, 158, 159, 160, 185, 206, 241, 265, 267, 269, 270, 271, 311, 317, 318, 327, 329, 342, 347, 349, 351, 352, 361, 380, 390, 415, 423, 426, 427, 434, 435, 437, 441], "user": [1, 2, 3, 5, 8, 13, 14, 15, 17, 20, 21, 22, 23, 24, 26, 30, 37, 42, 45, 50, 60, 61, 67, 72, 79, 100, 108, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 161, 165, 186, 202, 226, 232, 234, 244, 258, 329, 346, 349, 351, 381, 410, 418, 419, 422, 423, 427, 429, 430, 437, 441, 442], "reach": [1, 3, 14, 15, 17, 20, 21, 22, 23, 24, 25, 66, 106, 119, 122, 125, 129, 136, 137, 141, 142, 149, 150, 153, 158, 159, 160, 163, 164, 206, 225, 246, 264, 288, 422, 424, 432, 435, 436, 441, 442], "done": [1, 2, 3, 4, 7, 8, 13, 14, 15, 17, 20, 21, 22, 23, 25, 26, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 66, 68, 69, 70, 72, 77, 79, 80, 81, 82, 83, 84, 90, 91, 98, 100, 102, 107, 108, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 176, 177, 178, 179, 181, 182, 185, 192, 193, 195, 196, 197, 202, 206, 207, 208, 210, 214, 215, 217, 219, 221, 224, 225, 227, 228, 231, 232, 233, 234, 235, 241, 244, 248, 265, 267, 271, 274, 296, 311, 326, 327, 328, 329, 330, 331, 333, 334, 335, 342, 343, 346, 347, 348, 349, 351, 352, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 417, 418, 422, 424, 425, 426, 427, 429, 430, 432, 434, 435, 436, 437, 439, 441, 442], "state": [1, 2, 3, 4, 14, 15, 17, 19, 20, 30, 37, 39, 42, 45, 50, 57, 60, 61, 62, 63, 64, 66, 67, 70, 72, 73, 74, 79, 90, 91, 98, 102, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 135, 136, 137, 143, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 165, 176, 177, 181, 184, 185, 186, 188, 189, 190, 193, 196, 199, 202, 206, 208, 215, 225, 226, 231, 232, 233, 234, 235, 236, 241, 242, 244, 248, 253, 258, 262, 265, 266, 267, 269, 270, 271, 272, 274, 279, 282, 286, 289, 291, 292, 298, 304, 311, 315, 321, 326, 328, 329, 333, 335, 343, 344, 346, 347, 348, 349, 359, 360, 361, 362, 363, 364, 365, 399, 413, 417, 418, 422, 423, 424, 425, 426, 427, 428, 429, 430, 435, 436, 437, 442], "after": [1, 2, 3, 8, 13, 14, 15, 20, 21, 22, 23, 24, 30, 37, 39, 42, 50, 56, 58, 60, 61, 65, 66, 67, 72, 79, 95, 102, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 133, 134, 135, 136, 137, 144, 145, 147, 148, 149, 150, 153, 155, 158, 159, 160, 161, 162, 176, 178, 179, 181, 182, 183, 185, 186, 187, 188, 189, 191, 192, 193, 194, 196, 197, 199, 201, 202, 203, 204, 205, 206, 207, 208, 210, 214, 215, 216, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 244, 246, 247, 264, 265, 267, 271, 280, 308, 313, 329, 338, 349, 351, 361, 423, 424, 425, 426, 427, 428, 430, 432, 435, 436, 437, 438, 439, 442], "predefin": [1, 381, 423, 425, 430, 439, 441], "becaus": [1, 2, 3, 4, 7, 30, 37, 42, 50, 56, 58, 60, 61, 65, 66, 67, 72, 79, 94, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 196, 204, 225, 240, 244, 257, 278, 303, 308, 309, 311, 312, 313, 314, 315, 316, 326, 346, 361, 417, 422, 423, 425, 426, 428, 429, 430, 434, 435, 436, 437, 439, 442], "potenti": [1, 2, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 437, 439], "comput": [1, 3, 4, 8, 14, 16, 17, 24, 30, 33, 37, 42, 50, 60, 61, 66, 67, 72, 119, 120, 121, 122, 125, 129, 135, 136, 137, 149, 150, 153, 158, 159, 160, 177, 208, 222, 234, 238, 242, 244, 246, 247, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 282, 283, 284, 286, 288, 291, 292, 294, 296, 297, 299, 304, 307, 309, 311, 312, 314, 316, 319, 322, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 403, 418, 422, 424, 425, 426, 427, 428, 434, 435, 436, 438, 439], "heavi": [1, 8, 439], "crucial": [1, 2, 3, 246, 264, 288, 334, 342, 344, 422, 423, 424, 425, 427, 429, 431, 435, 436, 437, 441, 442], "configur": [1, 8, 13, 14, 15, 17, 20, 21, 22, 23, 24, 25, 66, 122, 204, 253, 258, 286, 344, 346, 417, 422, 423, 424, 429, 435, 436, 437], "hyperparamet": [1, 105, 244, 326, 327, 329, 330, 331, 333, 334, 335, 336, 337, 342, 344, 346, 347, 348, 349, 351, 352, 359, 422, 431, 437, 439], "appropri": [1, 3, 4, 7, 92, 103, 113, 114, 117, 118, 137, 149, 158, 196, 410, 413, 422, 431, 439], "paramet": [1, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 93, 94, 95, 96, 99, 100, 101, 102, 103, 105, 106, 109, 111, 113, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 169, 170, 174, 175, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 409, 410, 411, 412, 413, 417, 418, 422, 425, 426, 428, 432, 435, 436, 437, 438, 441], "take": [1, 2, 3, 8, 26, 30, 37, 42, 45, 60, 61, 66, 67, 72, 110, 116, 119, 120, 121, 122, 125, 129, 135, 136, 137, 149, 150, 153, 158, 159, 160, 188, 225, 228, 229, 233, 246, 247, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 277, 279, 282, 283, 286, 288, 291, 292, 294, 299, 307, 309, 310, 311, 312, 314, 316, 319, 322, 325, 346, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 381, 390, 401, 417, 419, 422, 423, 424, 426, 427, 428, 429, 435, 436, 437, 439, 442], "consider": [1, 2, 3, 8, 128, 130, 233, 423, 435, 436, 439], "whether": [1, 2, 3, 14, 15, 16, 17, 20, 21, 22, 23, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 72, 73, 74, 75, 77, 79, 80, 81, 82, 83, 84, 93, 95, 102, 103, 115, 119, 122, 125, 129, 136, 137, 141, 142, 143, 149, 150, 151, 152, 153, 158, 159, 160, 163, 164, 177, 181, 190, 192, 195, 226, 232, 234, 241, 242, 244, 251, 252, 267, 271, 272, 311, 316, 320, 326, 327, 328, 329, 330, 331, 333, 335, 336, 340, 343, 344, 346, 347, 348, 349, 351, 352, 359, 361, 364, 389, 413, 422, 423, 424, 426, 427, 435, 436, 437, 441, 442], "should": [1, 2, 3, 4, 5, 7, 8, 11, 13, 14, 15, 17, 20, 21, 22, 23, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 89, 90, 93, 96, 100, 102, 107, 108, 109, 113, 116, 119, 122, 123, 124, 125, 128, 129, 130, 131, 136, 137, 140, 143, 149, 150, 151, 152, 153, 158, 159, 160, 163, 164, 165, 176, 177, 178, 181, 182, 185, 188, 189, 192, 193, 196, 197, 199, 204, 205, 206, 208, 213, 214, 215, 217, 220, 221, 225, 226, 228, 231, 233, 234, 235, 240, 241, 242, 244, 245, 246, 247, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 277, 278, 279, 282, 283, 286, 288, 291, 292, 294, 299, 307, 309, 311, 312, 314, 315, 316, 319, 322, 326, 328, 329, 335, 341, 343, 344, 346, 347, 348, 349, 350, 351, 360, 361, 362, 363, 364, 365, 381, 383, 389, 394, 395, 396, 399, 409, 411, 412, 413, 417, 418, 419, 422, 423, 424, 425, 426, 428, 430, 431, 434, 435, 436, 437, 438, 439, 441, 442], "occur": [1, 8, 15, 37, 60, 68, 69, 72, 79, 119, 122, 125, 129, 131, 137, 149, 150, 153, 158, 159, 160, 177, 186, 197, 208, 213, 240, 247, 303, 308, 309, 312, 313, 314, 315, 316, 338, 426, 439, 442], "serial": [1, 2, 3, 14, 15, 17, 20, 21, 22, 23, 24, 30, 37, 42, 50, 57, 60, 61, 62, 63, 64, 67, 70, 72, 73, 74, 102, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 232, 241, 242, 244], "parallel": [1, 3, 8, 119, 122, 125, 128, 129, 130, 137, 149, 150, 151, 152, 153, 158, 159, 160, 165, 234, 240, 267, 271, 326, 410, 411, 412, 413, 423, 424, 435, 436, 441], "worker": [1, 2, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 56, 58, 65, 77, 78, 79, 89, 126, 144, 149, 158, 232, 241, 242, 411, 412, 413, 422, 423, 424, 441, 442], "multisyncdatacollector": [1, 15, 21, 22, 23, 24, 249, 412, 415, 424, 430, 441], "split": [1, 14, 15, 17, 20, 21, 22, 23, 24, 34, 35, 41, 43, 56, 58, 69, 78, 89, 100, 107, 108, 140, 151, 152, 265, 269, 326, 327, 328, 334, 335, 336, 337, 338, 339, 342, 343, 344, 346, 347, 348, 349, 352, 359, 417, 419, 424, 428, 439, 441], "workload": 1, "across": [1, 3, 8, 14, 15, 16, 17, 20, 21, 22, 23, 24, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 57, 61, 64, 67, 68, 69, 73, 74, 77, 80, 81, 82, 83, 84, 100, 107, 108, 120, 121, 123, 124, 128, 130, 131, 133, 135, 136, 144, 145, 149, 155, 160, 232, 241, 242, 244, 267, 271, 277, 287, 288, 344, 401, 415, 417, 418, 422, 427, 431, 435, 436, 437], "aggreg": [1, 3, 30, 60, 100, 113, 151, 152, 177, 205, 242, 251, 252, 254, 255, 318, 418, 436], "result": [1, 2, 3, 7, 14, 15, 17, 20, 21, 22, 23, 24, 26, 30, 31, 37, 42, 50, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 72, 73, 74, 79, 80, 100, 102, 106, 107, 108, 119, 122, 125, 126, 129, 137, 149, 150, 153, 158, 159, 160, 165, 176, 177, 178, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 199, 201, 202, 203, 204, 205, 206, 207, 208, 210, 214, 215, 216, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 244, 246, 249, 264, 265, 267, 269, 271, 272, 277, 290, 296, 307, 309, 314, 326, 327, 329, 330, 331, 333, 335, 336, 337, 342, 344, 346, 347, 348, 349, 351, 352, 359, 361, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 401, 418, 423, 425, 427, 428, 431, 432, 437, 438, 441, 442], "final": [1, 2, 3, 4, 24, 45, 56, 58, 65, 66, 79, 227, 240, 246, 264, 265, 267, 269, 271, 277, 288, 310, 317, 361, 394, 417, 422, 423, 424, 426, 431, 432, 435, 436, 437, 442], "multiasyncdatacollector": [1, 14, 20, 21, 22, 23, 24, 249, 411, 415, 422, 423, 424, 430, 441], "sever": [1, 2, 3, 8, 30, 37, 42, 46, 50, 60, 61, 67, 72, 78, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 186, 188, 205, 234, 244, 346, 422, 424, 426, 431, 432, 439, 442], "gather": [1, 3, 21, 23, 24, 45, 78, 89, 93, 95, 100, 107, 115, 206, 213, 276, 279, 284, 344, 360, 403, 416, 423, 424, 425, 430, 435, 436, 437, 439, 441, 442], "continu": [1, 2, 3, 9, 31, 34, 45, 80, 81, 82, 108, 119, 122, 125, 129, 137, 149, 150, 151, 152, 153, 158, 159, 160, 163, 164, 170, 178, 202, 227, 235, 254, 255, 256, 257, 287, 288, 318, 323, 327, 350, 361, 366, 374, 417, 422, 424, 428, 435, 436, 439], "concomitantli": [1, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "network": [1, 4, 8, 30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 140, 149, 150, 151, 152, 153, 158, 159, 160, 244, 251, 252, 254, 255, 256, 257, 260, 262, 263, 269, 272, 277, 278, 279, 281, 282, 283, 285, 287, 289, 291, 292, 293, 298, 304, 305, 306, 307, 315, 319, 326, 327, 328, 329, 330, 331, 333, 334, 335, 336, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 357, 359, 361, 362, 363, 364, 365, 408, 409, 417, 418, 419, 426, 429, 432, 434, 437, 442], "impli": [1, 79, 442], "mai": [1, 2, 3, 4, 5, 7, 8, 14, 15, 17, 20, 21, 22, 23, 24, 26, 30, 37, 42, 50, 56, 58, 60, 61, 65, 67, 68, 69, 72, 77, 79, 91, 94, 100, 107, 119, 122, 125, 128, 129, 130, 131, 137, 149, 150, 153, 155, 158, 159, 160, 165, 204, 208, 221, 232, 234, 236, 241, 242, 244, 247, 267, 271, 272, 277, 316, 328, 335, 343, 346, 349, 417, 418, 419, 422, 423, 424, 425, 426, 427, 428, 429, 430, 435, 436, 437, 438, 439, 442], "slightli": [1, 26, 418, 425, 426, 435, 437, 438, 439, 442], "lag": [1, 422, 423, 424], "therefor": [1, 2, 3, 7, 57, 64, 73, 74, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 217, 346, 359, 426, 429, 435, 442], "fastest": 1, "price": [1, 2], "suitabl": [1, 2, 185], "where": [1, 2, 3, 4, 7, 8, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 28, 30, 37, 39, 41, 42, 45, 50, 51, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 89, 91, 93, 95, 100, 102, 107, 108, 113, 115, 116, 119, 122, 125, 129, 137, 140, 143, 146, 149, 150, 151, 152, 153, 158, 159, 160, 173, 176, 177, 178, 179, 182, 185, 196, 204, 212, 217, 220, 225, 226, 227, 228, 229, 233, 234, 236, 239, 240, 244, 246, 264, 265, 266, 267, 269, 270, 271, 275, 276, 277, 285, 287, 288, 307, 312, 315, 316, 325, 326, 327, 328, 329, 334, 335, 336, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 360, 361, 362, 363, 364, 365, 366, 367, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 383, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 418, 419, 422, 423, 424, 426, 427, 434, 435, 436, 437, 439, 442], "off": [1, 2, 4, 268, 297, 308, 349, 379, 394, 404, 417, 419, 422, 423, 424, 428, 429, 435, 436, 438, 441, 442], "curriculum": [1, 4], "For": [1, 2, 3, 4, 7, 8, 9, 10, 11, 14, 15, 17, 20, 21, 22, 23, 24, 28, 29, 30, 31, 32, 33, 37, 38, 42, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 60, 61, 62, 63, 64, 67, 72, 73, 74, 77, 79, 80, 81, 82, 83, 84, 93, 95, 100, 102, 107, 115, 119, 122, 125, 128, 129, 130, 134, 136, 137, 149, 150, 151, 152, 153, 158, 159, 160, 161, 163, 165, 185, 192, 195, 199, 208, 226, 233, 234, 240, 244, 261, 265, 267, 269, 271, 275, 278, 280, 304, 306, 307, 309, 313, 326, 334, 336, 342, 346, 394, 417, 418, 419, 422, 423, 424, 425, 427, 428, 430, 431, 435, 436, 437, 438, 439, 442], "remot": [1, 2, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 57, 62, 63, 64, 73, 74, 102, 149, 158, 242, 442], "rollout": [1, 2, 3, 11, 14, 15, 17, 20, 24, 26, 45, 66, 72, 79, 113, 119, 120, 121, 122, 125, 129, 131, 132, 135, 136, 137, 141, 142, 143, 144, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 163, 164, 165, 178, 179, 181, 182, 185, 188, 190, 192, 195, 196, 197, 202, 204, 205, 210, 214, 215, 220, 221, 222, 225, 226, 228, 229, 232, 235, 241, 242, 244, 248, 249, 250, 267, 271, 274, 288, 311, 326, 379, 381, 403, 417, 422, 424, 425, 428, 429, 430, 431, 432, 438, 439, 441], "necessari": [1, 4, 6, 8, 14, 15, 17, 20, 21, 22, 23, 24, 119, 122, 125, 129, 137, 141, 142, 149, 150, 153, 158, 159, 160, 163, 164, 221, 347, 361, 362, 363, 364, 365, 418, 422, 424, 428, 429, 430], "synchronis": [1, 126, 435, 436], "either": [1, 2, 5, 25, 28, 30, 37, 42, 50, 57, 60, 61, 62, 63, 64, 66, 67, 72, 73, 74, 79, 89, 102, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 202, 206, 225, 226, 242, 244, 321, 344, 351, 352, 385, 419, 422, 423, 425, 435, 438, 439, 441, 442], "update_policy_weights_": [1, 13, 14, 15, 17, 19, 20, 21, 22, 23, 24, 422, 436, 441], "update_at_each_batch": [1, 14, 15, 20], "true": [1, 2, 3, 4, 8, 11, 12, 13, 14, 15, 17, 20, 21, 22, 23, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 93, 94, 95, 99, 100, 102, 103, 105, 106, 107, 108, 115, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 134, 135, 136, 137, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 170, 176, 177, 178, 179, 181, 182, 184, 185, 186, 189, 190, 194, 197, 199, 202, 203, 204, 205, 206, 207, 208, 212, 213, 215, 216, 219, 220, 221, 224, 225, 227, 230, 231, 232, 233, 234, 235, 236, 237, 239, 241, 242, 244, 245, 246, 247, 248, 251, 252, 254, 255, 256, 257, 263, 265, 266, 267, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 287, 288, 295, 296, 297, 302, 303, 304, 305, 306, 308, 309, 312, 313, 314, 315, 316, 317, 318, 319, 326, 327, 328, 329, 330, 331, 333, 334, 335, 337, 338, 339, 340, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 355, 361, 362, 363, 364, 367, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 381, 388, 389, 392, 393, 394, 396, 399, 413, 417, 418, 419, 422, 423, 424, 425, 426, 428, 431, 432, 434, 435, 436, 437, 438, 439, 441, 442], "second": [1, 2, 3, 8, 14, 15, 17, 20, 26, 45, 46, 47, 48, 49, 113, 149, 182, 229, 265, 267, 269, 271, 309, 328, 343, 346, 349, 381, 383, 386, 388, 398, 422, 424, 430, 435, 436, 437, 439, 441, 442], "devic": [1, 2, 3, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 89, 93, 94, 95, 99, 107, 108, 115, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 170, 173, 176, 178, 182, 189, 192, 193, 195, 196, 197, 202, 204, 205, 210, 211, 212, 214, 215, 217, 221, 224, 225, 227, 230, 233, 234, 235, 237, 239, 241, 244, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 263, 264, 265, 266, 267, 269, 270, 271, 272, 274, 277, 278, 280, 281, 286, 288, 289, 290, 298, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314, 315, 316, 318, 320, 323, 326, 327, 329, 330, 331, 333, 334, 335, 342, 346, 347, 348, 349, 351, 352, 359, 361, 362, 363, 364, 365, 379, 396, 401, 407, 417, 422, 423, 424, 425, 426, 435, 436, 437, 438, 441], "oper": [1, 2, 3, 4, 7, 8, 14, 15, 17, 20, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 65, 67, 68, 69, 72, 77, 78, 79, 80, 81, 82, 83, 84, 94, 100, 107, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 182, 199, 204, 229, 231, 235, 242, 244, 260, 261, 266, 270, 304, 305, 306, 308, 309, 310, 315, 321, 326, 328, 330, 331, 336, 343, 346, 348, 359, 360, 361, 362, 363, 364, 399, 415, 418, 419, 422, 423, 424, 425, 426, 427, 428, 434, 435, 436, 437, 442], "instanc": [1, 2, 3, 4, 7, 8, 12, 14, 15, 17, 20, 21, 22, 23, 24, 30, 31, 37, 42, 50, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 72, 73, 74, 75, 77, 78, 79, 80, 90, 91, 93, 94, 95, 98, 100, 102, 107, 108, 115, 119, 122, 124, 125, 126, 128, 129, 130, 134, 137, 143, 149, 150, 153, 158, 159, 160, 165, 170, 177, 208, 227, 234, 241, 244, 246, 247, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 277, 278, 279, 282, 283, 286, 288, 291, 292, 294, 299, 307, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 322, 327, 329, 331, 334, 335, 342, 344, 347, 349, 351, 352, 359, 361, 362, 363, 364, 379, 381, 385, 389, 394, 403, 404, 405, 409, 411, 412, 417, 418, 419, 422, 424, 425, 426, 427, 428, 437, 439, 442], "cpu": [1, 2, 3, 8, 10, 14, 15, 17, 20, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 89, 93, 94, 95, 99, 102, 107, 115, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 163, 164, 170, 176, 178, 182, 189, 192, 193, 195, 196, 197, 202, 205, 210, 212, 214, 215, 217, 221, 224, 225, 227, 233, 234, 235, 237, 239, 244, 248, 250, 260, 265, 266, 267, 269, 270, 271, 274, 280, 281, 288, 289, 290, 298, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314, 315, 318, 320, 323, 326, 327, 329, 330, 331, 333, 334, 335, 342, 346, 347, 348, 349, 351, 352, 359, 379, 417, 422, 423, 424, 425, 435, 436, 437, 438, 441], "slower": [1, 435], "than": [1, 2, 3, 4, 8, 13, 14, 15, 17, 20, 21, 22, 23, 24, 27, 28, 30, 60, 79, 100, 107, 108, 111, 113, 119, 122, 125, 129, 133, 137, 147, 148, 149, 150, 153, 155, 158, 159, 160, 205, 206, 215, 242, 246, 257, 267, 269, 271, 272, 299, 303, 308, 315, 316, 320, 344, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 416, 417, 418, 422, 423, 424, 426, 427, 429, 435, 436, 437, 439, 441, 442], "one": [1, 2, 3, 4, 5, 7, 8, 13, 14, 15, 17, 20, 21, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 77, 79, 80, 81, 82, 83, 84, 90, 91, 92, 93, 98, 99, 100, 102, 103, 107, 108, 109, 111, 113, 114, 117, 118, 119, 120, 121, 122, 125, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 158, 159, 160, 161, 162, 163, 164, 178, 179, 182, 185, 188, 190, 192, 193, 194, 195, 202, 205, 207, 208, 212, 217, 220, 223, 224, 226, 227, 228, 233, 234, 236, 239, 241, 244, 245, 246, 247, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 278, 279, 282, 283, 284, 285, 286, 288, 290, 291, 292, 294, 299, 303, 307, 308, 309, 311, 312, 313, 314, 315, 316, 319, 320, 322, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 336, 337, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 356, 359, 361, 362, 363, 364, 368, 369, 381, 383, 392, 394, 395, 399, 403, 413, 416, 418, 419, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 434, 435, 436, 437, 438, 439, 442], "cuda": [1, 2, 3, 7, 14, 15, 17, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 60, 61, 67, 68, 69, 72, 77, 80, 81, 82, 83, 84, 119, 120, 121, 122, 125, 129, 131, 132, 133, 137, 149, 150, 153, 158, 159, 160, 189, 204, 211, 212, 227, 233, 234, 237, 239, 244, 265, 266, 269, 270, 315, 391, 422, 423, 424, 425, 435, 436, 438, 442], "multipl": [1, 2, 3, 5, 8, 14, 15, 17, 20, 21, 22, 23, 24, 48, 60, 64, 73, 74, 75, 79, 95, 102, 103, 115, 119, 120, 121, 135, 136, 149, 158, 160, 186, 188, 194, 203, 206, 207, 217, 220, 224, 225, 232, 241, 265, 269, 271, 277, 280, 281, 303, 308, 312, 313, 315, 316, 319, 328, 335, 343, 346, 356, 367, 413, 417, 418, 419, 422, 423, 424, 427, 429, 430, 435, 436, 437, 439, 441], "infer": [1, 3, 14, 15, 16, 17, 19, 21, 23, 24, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 185, 241, 280, 307, 312, 316, 333, 379, 422, 424, 426, 430, 432, 439, 441], "dispatch": [1, 3, 21, 22, 23, 24, 37, 60, 72, 178, 179, 181, 182, 184, 185, 186, 189, 190, 193, 196, 197, 198, 200, 203, 204, 211, 213, 214, 215, 217, 220, 221, 224, 225, 226, 227, 228, 229, 231, 232, 233, 237, 238, 240, 241, 244, 299, 311, 381, 422, 442], "avail": [1, 2, 3, 4, 6, 24, 57, 64, 73, 74, 100, 106, 107, 108, 120, 121, 123, 124, 133, 135, 136, 141, 142, 147, 148, 149, 151, 152, 155, 161, 162, 163, 164, 178, 181, 184, 202, 204, 261, 290, 312, 316, 344, 381, 411, 412, 422, 423, 424, 425, 426, 427, 428, 435, 436, 437, 439, 442], "speed": [1, 2, 3, 4, 8, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 418, 422, 423, 424, 425, 435, 436, 437, 439, 441], "avoid": [1, 2, 3, 30, 37, 42, 50, 60, 61, 67, 72, 93, 95, 107, 115, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 175, 185, 202, 232, 234, 241, 242, 244, 247, 296, 303, 315, 320, 328, 329, 343, 346, 349, 402, 424, 426, 436], "oom": [1, 3, 56, 58, 65, 79, 93, 95, 115], "choic": [1, 2, 52, 149, 417, 418, 422, 423, 429, 435, 436], "pass": [1, 2, 3, 4, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 30, 34, 35, 37, 42, 43, 50, 52, 57, 60, 61, 62, 64, 66, 67, 69, 72, 73, 74, 77, 78, 91, 93, 95, 100, 102, 107, 108, 113, 115, 119, 122, 125, 126, 127, 129, 130, 137, 140, 144, 149, 150, 151, 152, 153, 158, 159, 160, 163, 179, 181, 182, 185, 190, 192, 195, 205, 206, 214, 215, 232, 236, 241, 244, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 277, 278, 279, 280, 282, 283, 286, 288, 289, 291, 292, 294, 298, 299, 303, 307, 308, 309, 311, 312, 313, 314, 315, 316, 318, 319, 320, 322, 327, 328, 329, 342, 343, 344, 346, 347, 349, 351, 352, 361, 362, 363, 364, 365, 379, 396, 399, 411, 412, 413, 417, 422, 423, 424, 425, 426, 427, 428, 429, 430, 434, 435, 436, 437, 439, 441, 442], "ie": [1, 2, 3, 21, 23, 25, 28, 29, 31, 32, 33, 34, 35, 37, 38, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 60, 68, 69, 72, 73, 77, 78, 80, 81, 82, 83, 84, 99, 108, 119, 122, 125, 129, 133, 137, 146, 149, 150, 153, 158, 159, 160, 177, 178, 185, 199, 224, 227, 236, 241, 267, 271, 307, 315, 417, 418, 423, 436], "store": [1, 3, 8, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 30, 34, 37, 40, 41, 42, 45, 50, 52, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 72, 73, 74, 75, 78, 79, 89, 91, 93, 94, 95, 96, 99, 100, 102, 107, 113, 115, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 185, 202, 229, 240, 241, 242, 244, 246, 248, 249, 274, 288, 326, 327, 329, 330, 331, 333, 335, 336, 337, 342, 344, 346, 347, 348, 349, 351, 352, 359, 388, 415, 419, 422, 424, 425, 428, 430, 432, 435, 436, 438, 442], "while": [1, 2, 3, 7, 8, 14, 15, 17, 20, 26, 30, 37, 42, 50, 60, 61, 62, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 217, 244, 246, 247, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 279, 282, 283, 286, 288, 291, 292, 294, 299, 307, 309, 311, 314, 319, 322, 334, 342, 343, 346, 417, 418, 422, 424, 425, 428, 430, 431, 435, 436, 437, 438, 439, 441], "wait": [1, 13, 14, 15, 20, 21, 22, 23, 24, 25, 62, 161, 425, 437], "also": [1, 2, 3, 8, 9, 11, 14, 15, 26, 28, 29, 30, 33, 37, 38, 42, 46, 47, 48, 49, 50, 54, 55, 56, 58, 60, 61, 64, 65, 67, 72, 73, 74, 77, 79, 89, 93, 94, 95, 100, 102, 107, 108, 113, 115, 119, 122, 125, 129, 136, 137, 141, 142, 149, 150, 151, 152, 153, 158, 159, 160, 163, 164, 173, 175, 176, 178, 179, 181, 182, 184, 185, 186, 189, 190, 193, 194, 196, 197, 198, 200, 202, 203, 204, 208, 211, 213, 214, 215, 217, 220, 221, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 237, 238, 240, 241, 244, 245, 251, 252, 265, 269, 272, 292, 311, 312, 317, 318, 319, 326, 327, 329, 330, 331, 333, 334, 335, 340, 342, 346, 349, 351, 361, 368, 369, 379, 381, 417, 418, 419, 422, 423, 424, 425, 426, 427, 428, 429, 430, 434, 435, 436, 437, 439, 441, 442], "impact": [1, 2, 3, 13, 21, 22, 23, 136, 192, 195, 247, 326, 328, 343, 346, 348, 423, 425, 435, 436], "memori": [1, 3, 8, 24, 30, 33, 37, 42, 50, 56, 58, 60, 61, 62, 65, 67, 72, 78, 79, 91, 93, 94, 98, 119, 122, 125, 126, 129, 133, 137, 149, 150, 153, 158, 159, 160, 185, 189, 212, 227, 233, 234, 237, 239, 241, 242, 244, 259, 269, 270, 315, 413, 415, 419, 422, 423, 425, 435, 439, 441], "manag": [1, 3, 8, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 249, 267, 271, 302, 357, 358, 361, 362, 363, 364, 389, 394, 417, 425, 426, 429, 441], "kei": [1, 2, 7, 14, 15, 17, 20, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 90, 99, 100, 102, 105, 107, 108, 113, 119, 122, 125, 129, 135, 136, 137, 149, 150, 151, 152, 153, 158, 159, 160, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 208, 211, 212, 213, 214, 215, 217, 220, 221, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 244, 246, 248, 250, 260, 261, 264, 267, 271, 273, 274, 288, 290, 303, 307, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 346, 347, 348, 349, 351, 352, 359, 360, 361, 362, 363, 364, 365, 379, 381, 393, 394, 395, 397, 398, 399, 403, 418, 419, 422, 424, 425, 426, 427, 429, 434, 435, 436, 437, 439, 441, 442], "control": [1, 3, 5, 8, 17, 26, 27, 34, 35, 36, 43, 64, 69, 73, 74, 100, 102, 107, 119, 122, 123, 124, 125, 129, 136, 137, 140, 149, 150, 151, 152, 153, 158, 159, 160, 176, 194, 254, 255, 256, 257, 267, 271, 273, 274, 288, 292, 299, 315, 316, 317, 326, 328, 329, 343, 344, 346, 350, 361, 366, 374, 379, 389, 417, 419, 422, 423, 424, 425, 426, 427, 428, 429, 435, 436, 437, 439, 441], "which": [1, 2, 3, 4, 7, 8, 14, 15, 17, 19, 20, 21, 22, 23, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 89, 90, 94, 102, 105, 106, 113, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 133, 135, 136, 137, 141, 142, 144, 145, 147, 148, 149, 150, 153, 155, 158, 159, 160, 161, 162, 163, 164, 165, 185, 186, 192, 195, 200, 202, 204, 205, 207, 208, 212, 213, 215, 225, 227, 228, 231, 233, 234, 235, 237, 241, 244, 245, 260, 265, 266, 267, 268, 269, 270, 271, 275, 276, 277, 278, 279, 285, 287, 297, 304, 305, 306, 307, 311, 312, 315, 316, 317, 318, 326, 327, 328, 329, 331, 334, 335, 336, 337, 338, 339, 342, 343, 344, 346, 347, 348, 349, 351, 352, 355, 359, 361, 362, 363, 364, 379, 381, 390, 395, 417, 418, 419, 422, 423, 424, 425, 426, 427, 428, 429, 430, 434, 435, 436, 437, 438, 439, 442], "storing_devic": [1, 14, 15, 17, 20, 21, 22, 23, 24, 423, 436], "dure": [1, 2, 3, 13, 14, 15, 17, 20, 21, 22, 23, 24, 28, 29, 33, 38, 46, 47, 48, 49, 54, 55, 57, 58, 61, 62, 63, 64, 66, 67, 73, 74, 78, 89, 91, 96, 100, 102, 105, 107, 119, 122, 125, 126, 129, 136, 137, 149, 150, 151, 152, 153, 158, 159, 160, 181, 182, 185, 188, 192, 195, 197, 199, 200, 202, 206, 210, 222, 224, 227, 229, 231, 232, 234, 235, 236, 241, 242, 244, 247, 249, 250, 267, 271, 278, 311, 361, 363, 364, 394, 399, 418, 422, 423, 424, 425, 428, 429, 430, 432, 435, 436, 437, 439, 442], "heurist": [1, 4, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 246, 311, 316, 422, 426, 430, 442], "usual": [1, 2, 3, 4, 6, 7, 8, 14, 15, 17, 20, 21, 22, 23, 24, 105, 113, 119, 120, 121, 122, 125, 129, 135, 136, 137, 149, 150, 153, 158, 159, 160, 232, 281, 346, 351, 360, 361, 362, 363, 364, 365, 380, 416, 417, 418, 419, 422, 423, 424, 425, 428, 430, 431, 436, 439, 442], "same": [1, 2, 3, 4, 17, 21, 22, 23, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 60, 61, 65, 67, 68, 69, 72, 75, 77, 78, 79, 80, 81, 82, 83, 84, 106, 107, 108, 111, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 135, 136, 137, 140, 144, 145, 149, 150, 151, 152, 153, 155, 158, 159, 160, 178, 185, 192, 194, 195, 200, 202, 205, 206, 207, 208, 224, 232, 233, 234, 241, 244, 245, 251, 252, 266, 270, 272, 275, 276, 277, 278, 288, 296, 307, 319, 327, 329, 342, 344, 347, 349, 351, 352, 356, 418, 422, 423, 424, 427, 428, 430, 434, 435, 436, 438, 439, 442], "default": [1, 2, 3, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 89, 91, 93, 94, 95, 99, 100, 102, 103, 105, 106, 107, 108, 113, 115, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 134, 135, 136, 137, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 158, 159, 160, 161, 162, 163, 164, 165, 170, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 217, 219, 220, 221, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 286, 288, 290, 291, 292, 294, 295, 296, 297, 302, 303, 307, 308, 309, 311, 312, 313, 314, 315, 316, 319, 320, 322, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 354, 355, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 383, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 409, 413, 418, 419, 422, 423, 424, 425, 428, 435, 438, 439, 441, 442], "behavior": [1, 2, 3, 4, 14, 15, 24, 30, 37, 42, 50, 60, 61, 67, 72, 77, 79, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 176, 186, 192, 195, 208, 213, 226, 234, 242, 244, 247, 267, 268, 271, 297, 334, 342, 351, 379, 389, 394, 417, 423, 425, 435, 436, 437, 439], "besid": 1, "those": [1, 2, 3, 5, 7, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 185, 192, 195, 202, 208, 227, 228, 231, 235, 271, 287, 312, 316, 317, 318, 401, 411, 412, 417, 422, 423, 427, 428, 436, 437, 442], "choos": [1, 3, 11, 52, 119, 122, 140, 267, 271, 346, 415, 418, 422, 423, 424, 426, 435, 436, 439, 441], "follow": [1, 2, 3, 6, 7, 8, 11, 19, 30, 37, 42, 45, 50, 56, 58, 59, 60, 61, 65, 66, 67, 72, 77, 79, 100, 107, 108, 119, 120, 121, 122, 125, 128, 129, 130, 135, 136, 137, 143, 146, 149, 150, 151, 152, 153, 156, 157, 158, 159, 160, 163, 164, 173, 181, 185, 204, 212, 237, 241, 242, 244, 251, 252, 265, 267, 269, 271, 272, 309, 312, 313, 314, 325, 326, 327, 328, 329, 330, 334, 335, 342, 343, 346, 347, 348, 349, 351, 352, 381, 399, 417, 418, 419, 422, 423, 424, 425, 426, 429, 430, 434, 435, 436, 437, 439, 441, 442], "max_frames_per_traj": [1, 14, 15, 17, 20, 21, 22, 23, 24, 402, 422, 424, 441], "frame": [1, 2, 11, 14, 15, 17, 20, 21, 22, 23, 24, 50, 185, 200, 244, 246, 264, 288, 311, 380, 381, 383, 386, 388, 392, 394, 399, 402, 403, 422, 423, 424, 425, 428, 435, 436, 439, 441, 442], "call": [1, 2, 3, 7, 8, 11, 13, 14, 15, 17, 19, 20, 21, 22, 23, 24, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 86, 89, 93, 94, 95, 96, 100, 101, 102, 106, 107, 109, 111, 115, 116, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 134, 135, 136, 137, 144, 145, 146, 147, 148, 149, 150, 153, 155, 158, 159, 160, 161, 162, 165, 174, 177, 178, 179, 181, 182, 184, 185, 186, 188, 189, 190, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 206, 208, 210, 211, 212, 213, 214, 215, 217, 220, 221, 222, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 274, 278, 279, 280, 282, 283, 286, 288, 291, 292, 294, 299, 307, 309, 311, 314, 315, 316, 318, 319, 322, 328, 329, 343, 344, 346, 349, 351, 360, 361, 362, 363, 364, 379, 380, 383, 394, 418, 419, 423, 424, 425, 426, 427, 428, 430, 431, 435, 436, 437, 439, 441, 442], "frames_per_batch": [1, 2, 14, 15, 17, 20, 21, 22, 23, 24, 39, 50, 62, 70, 182, 185, 217, 267, 271, 402, 422, 423, 424, 425, 426, 430, 432, 435, 436, 439, 441], "each": [1, 2, 3, 4, 7, 8, 14, 15, 16, 17, 20, 21, 22, 23, 24, 26, 30, 34, 35, 37, 41, 42, 43, 45, 46, 48, 50, 51, 60, 61, 64, 66, 67, 69, 71, 72, 73, 79, 100, 102, 105, 107, 108, 110, 113, 119, 122, 125, 126, 129, 137, 141, 142, 149, 150, 151, 152, 153, 158, 159, 160, 163, 164, 178, 203, 205, 206, 212, 217, 220, 225, 226, 227, 228, 232, 233, 239, 241, 242, 244, 245, 246, 261, 264, 265, 266, 267, 269, 271, 277, 278, 282, 289, 290, 298, 302, 308, 309, 314, 316, 318, 361, 367, 370, 371, 372, 373, 375, 376, 377, 378, 381, 394, 396, 411, 412, 418, 422, 423, 424, 425, 428, 429, 430, 432, 435, 436, 437, 438, 439, 441, 442], "init_random_fram": [1, 14, 15, 17, 20, 21, 22, 23, 24, 402, 422, 423, 426, 432], "rand_step": [1, 2, 3, 39, 70, 119, 122, 123, 124, 125, 126, 128, 129, 130, 137, 138, 139, 143, 144, 145, 149, 150, 153, 158, 159, 160, 203, 227, 241, 437, 441, 442], "reset_at_each_it": [1, 14, 15, 17, 20, 21, 22, 23, 24, 422], "split_traj": [1, 14, 15, 17, 20, 21, 22, 23, 24, 422, 423, 424], "trajectori": [1, 3, 14, 15, 17, 20, 21, 22, 23, 24, 26, 37, 40, 41, 50, 51, 71, 73, 79, 99, 100, 107, 108, 113, 119, 120, 121, 122, 125, 129, 135, 136, 137, 149, 150, 153, 158, 159, 160, 185, 213, 225, 232, 244, 248, 271, 274, 288, 346, 361, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 390, 415, 418, 422, 423, 424, 425, 427, 430, 432, 437, 441, 442], "pad": [1, 2, 3, 26, 59, 75, 185, 231, 251, 252, 254, 255, 271, 275, 276, 277, 396], "along": [1, 2, 3, 14, 15, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 60, 61, 65, 66, 67, 68, 69, 72, 77, 78, 79, 80, 81, 82, 83, 84, 95, 100, 102, 107, 108, 113, 115, 119, 122, 125, 128, 129, 130, 137, 149, 150, 153, 158, 159, 160, 170, 184, 185, 186, 206, 208, 210, 213, 220, 224, 230, 244, 271, 272, 275, 276, 281, 308, 312, 315, 316, 329, 344, 351, 422, 423, 425, 427, 429, 435, 436, 437, 439, 441], "point": [1, 2, 3, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 60, 61, 62, 67, 68, 69, 72, 77, 79, 80, 81, 82, 83, 84, 92, 99, 100, 103, 113, 114, 117, 118, 119, 122, 125, 126, 129, 137, 149, 150, 153, 158, 159, 160, 178, 179, 181, 182, 184, 185, 186, 189, 190, 193, 196, 197, 198, 200, 203, 204, 211, 212, 213, 214, 215, 217, 220, 221, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 237, 238, 239, 240, 241, 244, 273, 315, 325, 336, 399, 416, 423, 424, 434, 435, 436, 437, 439, 441, 442], "boolean": [1, 3, 14, 15, 17, 20, 21, 22, 23, 24, 26, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 66, 68, 69, 77, 80, 81, 82, 83, 84, 100, 107, 108, 129, 177, 181, 213, 225, 275, 276, 288, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 419, 425], "repres": [1, 2, 3, 14, 15, 17, 20, 21, 22, 23, 24, 34, 35, 39, 43, 45, 52, 69, 70, 72, 73, 79, 94, 119, 122, 123, 124, 125, 128, 129, 130, 137, 149, 150, 153, 158, 159, 160, 163, 164, 200, 213, 229, 241, 244, 261, 275, 276, 290, 296, 308, 309, 313, 314, 355, 361, 396, 417, 422, 424, 425, 426, 427, 428, 429, 435, 436], "valid": [1, 2, 3, 26, 56, 58, 59, 78, 79, 89, 113, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 166, 181, 213, 232, 234, 244, 246, 251, 252, 272, 275, 276, 288, 328, 335, 343, 346, 349, 361, 362, 363, 364, 396, 419, 426, 442], "exploration_typ": [1, 14, 15, 17, 20, 21, 22, 23, 24, 394, 415, 417, 422, 423], "strategi": [1, 2, 3, 17, 105, 140, 178, 264, 276, 284, 417, 419, 422, 423, 426, 428, 435, 436, 439, 441], "reset_when_don": [1, 14, 15, 17, 20], "its": [1, 2, 3, 4, 5, 7, 9, 11, 13, 14, 15, 17, 20, 21, 22, 23, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 60, 61, 64, 65, 67, 68, 69, 72, 73, 77, 79, 80, 81, 82, 83, 84, 86, 95, 102, 107, 108, 119, 122, 125, 129, 136, 137, 143, 149, 150, 151, 152, 153, 158, 159, 160, 163, 166, 182, 184, 185, 190, 196, 204, 225, 226, 227, 232, 234, 240, 241, 242, 244, 245, 246, 251, 252, 267, 271, 275, 276, 277, 278, 287, 308, 312, 313, 316, 319, 326, 327, 328, 329, 334, 335, 336, 337, 338, 339, 342, 343, 344, 345, 346, 347, 348, 349, 352, 359, 381, 399, 409, 417, 418, 419, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 435, 436, 437, 438, 439, 441, 442], "organ": [1, 2, 437, 439], "within": [1, 2, 3, 14, 15, 19, 20, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 60, 61, 65, 67, 68, 69, 72, 73, 74, 77, 79, 80, 81, 82, 83, 84, 94, 99, 100, 108, 119, 122, 125, 128, 129, 130, 137, 149, 150, 153, 155, 158, 159, 160, 177, 179, 181, 182, 184, 185, 186, 189, 190, 192, 193, 195, 196, 197, 198, 200, 203, 204, 211, 213, 214, 215, 217, 220, 221, 224, 225, 226, 227, 228, 229, 231, 232, 233, 237, 238, 240, 241, 242, 244, 246, 247, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 279, 282, 283, 286, 288, 291, 292, 294, 299, 302, 307, 309, 311, 314, 316, 319, 322, 323, 331, 336, 351, 359, 361, 379, 381, 417, 418, 423, 426, 427, 428, 429, 430, 431, 432, 435, 437, 441], "differ": [1, 2, 3, 4, 14, 15, 17, 20, 21, 22, 23, 24, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 60, 61, 64, 66, 67, 68, 69, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 102, 105, 119, 120, 121, 122, 125, 126, 129, 135, 136, 137, 140, 149, 150, 151, 152, 153, 158, 159, 160, 181, 185, 193, 194, 205, 208, 215, 224, 232, 234, 236, 244, 245, 261, 265, 266, 269, 270, 272, 274, 277, 278, 279, 290, 316, 342, 344, 346, 355, 361, 362, 363, 367, 368, 369, 394, 399, 401, 411, 412, 417, 418, 419, 422, 423, 424, 426, 427, 429, 431, 434, 435, 436, 437, 438, 439, 441, 442], "how": [1, 2, 3, 11, 19, 21, 22, 23, 27, 30, 37, 42, 50, 57, 60, 61, 67, 72, 73, 99, 100, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 135, 136, 137, 141, 142, 144, 145, 147, 148, 149, 150, 151, 152, 153, 155, 158, 159, 160, 161, 162, 163, 164, 178, 205, 244, 279, 312, 326, 328, 341, 343, 344, 346, 381, 383, 399, 416, 417, 422, 423, 424, 425, 426, 427, 428, 430, 431, 434, 435, 436, 437, 438, 439, 441, 442], "tabl": [1, 30, 417, 423, 428], "summar": [1, 3, 437], "what": [1, 3, 8, 11, 36, 37, 57, 77, 100, 107, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 165, 176, 196, 227, 232, 313, 329, 340, 344, 351, 416, 417, 418, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 435, 436, 437, 438, 439, 441, 442], "expect": [1, 2, 3, 4, 7, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 60, 61, 64, 67, 68, 69, 72, 77, 78, 80, 81, 82, 83, 84, 100, 106, 107, 119, 122, 125, 129, 137, 143, 146, 149, 150, 153, 158, 159, 160, 165, 178, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 196, 197, 199, 201, 203, 204, 205, 206, 208, 210, 212, 214, 215, 216, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 244, 265, 266, 267, 269, 270, 271, 277, 278, 288, 309, 315, 318, 326, 327, 328, 329, 330, 331, 333, 334, 335, 340, 342, 343, 344, 346, 347, 348, 349, 351, 352, 356, 359, 403, 416, 417, 418, 419, 422, 424, 425, 427, 428, 429, 430, 435, 436, 437, 439, 442], "n": [1, 2, 3, 6, 7, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 60, 61, 66, 67, 68, 69, 72, 77, 80, 81, 82, 83, 84, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 185, 194, 199, 236, 244, 265, 266, 269, 274, 285, 287, 288, 311, 316, 326, 327, 335, 344, 360, 396, 419, 423, 425, 426, 439, 441, 442], "b": [1, 2, 3, 7, 8, 26, 34, 35, 37, 43, 56, 58, 60, 64, 65, 66, 67, 69, 72, 73, 74, 79, 93, 94, 113, 122, 202, 235, 265, 266, 269, 270, 277, 278, 280, 281, 289, 298, 319, 361, 362, 363, 364, 365, 367, 381, 423, 439], "cat_result": [1, 14, 15], "na": 1, "t": [1, 2, 3, 4, 6, 7, 8, 14, 15, 17, 20, 21, 22, 23, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 67, 68, 69, 72, 73, 74, 77, 79, 80, 81, 82, 83, 84, 90, 99, 100, 102, 106, 107, 108, 113, 119, 122, 125, 126, 128, 129, 137, 144, 145, 149, 150, 153, 158, 159, 160, 165, 176, 178, 179, 181, 182, 184, 185, 186, 189, 190, 192, 193, 195, 196, 197, 198, 200, 202, 203, 204, 211, 212, 213, 214, 215, 216, 217, 220, 221, 224, 225, 226, 227, 228, 229, 231, 232, 233, 237, 238, 239, 240, 241, 244, 245, 265, 267, 269, 271, 288, 308, 315, 326, 350, 361, 362, 363, 364, 365, 367, 381, 388, 399, 401, 413, 416, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 434, 435, 436, 437, 438, 439, 441, 442], "p": [1, 2, 4, 102, 105, 126, 156, 157, 249, 250], "In": [1, 2, 3, 4, 5, 7, 8, 10, 11, 14, 15, 17, 19, 20, 21, 22, 23, 24, 25, 30, 37, 42, 50, 60, 61, 67, 72, 108, 119, 120, 121, 122, 125, 129, 135, 136, 137, 149, 150, 151, 152, 153, 158, 159, 160, 189, 192, 193, 195, 203, 212, 217, 221, 226, 227, 230, 232, 233, 234, 237, 239, 240, 242, 244, 245, 265, 268, 269, 272, 277, 292, 296, 297, 315, 316, 318, 325, 326, 327, 329, 330, 331, 333, 334, 335, 342, 344, 346, 347, 348, 349, 351, 352, 401, 411, 412, 413, 417, 418, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 435, 436, 437, 438, 439, 442], "case": [1, 3, 4, 5, 7, 8, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 62, 63, 64, 65, 68, 69, 73, 74, 77, 79, 80, 81, 82, 83, 84, 90, 91, 98, 99, 100, 102, 113, 119, 122, 125, 128, 129, 137, 149, 150, 153, 158, 159, 160, 165, 192, 193, 195, 203, 208, 227, 230, 234, 235, 245, 271, 272, 278, 279, 312, 315, 316, 318, 319, 325, 326, 327, 329, 330, 331, 333, 334, 335, 342, 344, 346, 347, 348, 349, 351, 352, 361, 362, 363, 364, 381, 390, 401, 411, 412, 413, 415, 417, 418, 419, 422, 423, 424, 425, 426, 427, 428, 430, 431, 435, 436, 437, 439, 441, 442], "dimens": [1, 3, 14, 15, 17, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 64, 65, 66, 68, 69, 77, 78, 79, 80, 81, 82, 83, 84, 93, 94, 95, 100, 107, 108, 113, 115, 119, 122, 123, 124, 125, 128, 129, 130, 131, 137, 149, 150, 153, 158, 159, 160, 163, 164, 170, 178, 184, 185, 186, 199, 206, 208, 210, 213, 220, 223, 224, 227, 230, 236, 241, 242, 251, 252, 253, 258, 259, 267, 269, 271, 272, 275, 276, 277, 280, 281, 286, 289, 293, 294, 295, 296, 299, 308, 311, 326, 327, 328, 334, 335, 336, 337, 338, 339, 342, 343, 344, 346, 347, 348, 349, 352, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 413, 415, 418, 422, 423, 424, 425, 427, 435, 436, 437, 439], "time": [1, 2, 3, 4, 7, 8, 13, 14, 15, 17, 20, 21, 22, 23, 24, 26, 30, 37, 42, 50, 57, 60, 61, 62, 63, 64, 66, 67, 72, 73, 74, 79, 90, 93, 102, 113, 119, 120, 121, 122, 125, 126, 129, 135, 136, 137, 140, 146, 149, 150, 151, 152, 153, 155, 158, 159, 160, 175, 176, 184, 185, 186, 206, 213, 220, 227, 228, 229, 232, 234, 241, 244, 250, 262, 265, 269, 271, 288, 302, 311, 316, 327, 328, 329, 335, 338, 342, 343, 344, 346, 347, 349, 351, 352, 361, 362, 363, 364, 365, 366, 367, 370, 371, 372, 373, 374, 375, 376, 377, 378, 399, 418, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 435, 436, 437, 439, 441, 442], "adapt": [1, 27, 179, 206, 225, 241, 247, 343, 422, 426, 437], "equal": [1, 14, 15, 20, 30, 79, 100, 107, 108, 122, 144, 147, 148, 149, 158, 207, 208, 251, 252, 265, 267, 269, 271, 272, 275, 276, 278, 350, 355, 390, 411, 412, 422, 424, 438], "introduc": [1, 2, 149, 158, 265, 267, 269, 271, 288, 422, 435], "some": [1, 2, 3, 4, 7, 8, 9, 25, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 60, 61, 62, 64, 67, 68, 69, 72, 77, 78, 79, 80, 81, 82, 83, 84, 93, 95, 102, 113, 115, 119, 120, 121, 122, 125, 128, 129, 130, 135, 136, 137, 141, 142, 149, 150, 151, 152, 153, 158, 159, 160, 163, 164, 165, 181, 212, 227, 234, 237, 244, 254, 267, 294, 316, 317, 318, 381, 390, 402, 417, 418, 419, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 435, 436, 437, 439, 441, 442], "confus": [1, 28, 30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 234, 244], "other": [1, 2, 3, 4, 7, 8, 11, 14, 15, 17, 20, 21, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 65, 67, 68, 69, 72, 77, 78, 79, 80, 81, 82, 83, 84, 93, 94, 95, 96, 102, 105, 106, 107, 108, 109, 111, 115, 119, 122, 125, 128, 129, 130, 134, 137, 143, 149, 150, 153, 158, 159, 160, 188, 193, 194, 214, 221, 227, 230, 237, 241, 242, 244, 249, 264, 265, 267, 271, 281, 302, 307, 309, 314, 316, 326, 327, 328, 334, 335, 336, 337, 338, 339, 342, 343, 344, 346, 347, 348, 349, 352, 359, 361, 379, 396, 411, 412, 417, 418, 419, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 435, 436, 437, 438, 441, 442], "better": [1, 3, 8, 9, 14, 15, 26, 136, 267, 271, 418, 424, 427, 437, 441], "consist": [1, 2, 3, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 60, 61, 64, 67, 68, 69, 72, 73, 74, 77, 79, 80, 81, 82, 83, 84, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 204, 240, 244, 249, 252, 272, 422, 423, 424, 437, 438, 442], "interact": [1, 2, 3, 4, 5, 7, 8, 14, 15, 17, 20, 21, 22, 23, 24, 119, 122, 125, 129, 137, 141, 142, 149, 150, 153, 158, 159, 160, 234, 312, 316, 422, 424, 426, 427, 428, 430, 435, 436, 437, 442], "keep": [1, 2, 3, 4, 7, 8, 15, 57, 64, 73, 74, 102, 106, 113, 122, 149, 158, 176, 208, 212, 239, 241, 242, 244, 288, 311, 381, 392, 399, 422, 423, 424, 425, 430, 431, 432, 436, 437, 439, 442], "separ": [1, 2, 4, 8, 14, 15, 17, 20, 21, 23, 24, 26, 34, 35, 43, 64, 69, 73, 74, 185, 212, 239, 327, 330, 333, 335, 347, 349, 351, 352, 361, 418, 422, 423, 428, 429, 435, 436, 439, 442], "interchang": [1, 277, 278, 424, 427, 431, 438, 439], "between": [1, 2, 3, 4, 5, 14, 15, 16, 17, 20, 24, 27, 30, 37, 42, 50, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 72, 73, 74, 79, 95, 100, 102, 103, 106, 107, 108, 115, 119, 122, 125, 129, 137, 141, 142, 149, 150, 153, 158, 159, 160, 163, 164, 165, 194, 207, 218, 229, 232, 234, 241, 242, 244, 251, 252, 260, 265, 267, 271, 272, 277, 278, 309, 312, 316, 326, 328, 329, 330, 333, 334, 335, 338, 339, 342, 343, 344, 346, 347, 348, 349, 351, 352, 355, 361, 394, 399, 418, 422, 423, 425, 426, 430, 435, 436, 437, 439, 442], "wherea": [1, 2, 25, 30, 37, 42, 50, 60, 61, 67, 72, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 135, 136, 137, 144, 145, 149, 150, 153, 155, 158, 159, 160, 194, 232, 234, 244, 329, 344, 349, 419, 431], "correspond": [1, 2, 3, 4, 14, 15, 17, 20, 21, 22, 23, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 65, 67, 68, 69, 72, 73, 77, 79, 80, 81, 82, 83, 84, 99, 100, 119, 122, 125, 129, 137, 143, 149, 150, 153, 158, 159, 160, 185, 202, 212, 227, 232, 234, 239, 241, 242, 244, 249, 264, 267, 269, 271, 275, 276, 288, 312, 316, 329, 331, 334, 335, 349, 359, 361, 362, 363, 364, 365, 417, 422, 423, 424, 426, 427, 429, 430, 431, 435, 436, 437, 438], "sub": [1, 2, 3, 14, 15, 20, 21, 22, 23, 24, 30, 34, 35, 37, 42, 43, 50, 60, 61, 67, 69, 72, 100, 107, 113, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 213, 232, 242, 244, 317, 318, 390, 399, 417, 418, 422, 423, 424, 430, 434, 441, 442], "doesn": [1, 4, 30, 37, 42, 50, 60, 61, 67, 72, 113, 119, 122, 125, 129, 137, 144, 149, 150, 153, 158, 159, 160, 192, 195, 244, 245, 426, 427], "understood": [1, 422], "serv": [1, 3, 21, 23, 24, 131, 439, 441, 442], "basi": [1, 113, 277, 439, 441], "we": [1, 2, 3, 5, 7, 9, 11, 26, 27, 30, 34, 37, 42, 45, 50, 57, 60, 61, 64, 66, 67, 72, 73, 74, 93, 106, 108, 113, 119, 120, 121, 122, 125, 126, 129, 133, 135, 136, 137, 149, 150, 153, 158, 159, 160, 165, 185, 204, 212, 215, 221, 232, 237, 240, 241, 242, 244, 245, 248, 271, 277, 278, 279, 326, 327, 329, 330, 331, 333, 335, 336, 337, 342, 344, 346, 347, 348, 349, 351, 352, 359, 381, 416, 417, 418, 419, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 441, 442], "anoth": [1, 2, 3, 8, 16, 18, 19, 45, 72, 77, 94, 100, 107, 119, 122, 125, 128, 129, 130, 133, 137, 149, 150, 153, 158, 159, 160, 182, 190, 192, 193, 195, 227, 233, 272, 312, 326, 327, 328, 334, 335, 336, 337, 338, 339, 342, 343, 344, 346, 347, 348, 349, 352, 359, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 418, 422, 424, 425, 426, 428, 429, 434, 435, 436, 437, 442], "wise": [1, 206], "requir": [1, 3, 4, 7, 8, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 64, 67, 68, 69, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 94, 99, 100, 107, 108, 119, 122, 125, 129, 133, 137, 144, 149, 150, 153, 155, 158, 159, 160, 182, 185, 189, 202, 212, 224, 227, 232, 233, 234, 237, 239, 242, 244, 249, 267, 271, 272, 279, 299, 315, 316, 317, 318, 326, 327, 328, 329, 334, 335, 336, 337, 338, 339, 342, 343, 344, 346, 347, 348, 349, 351, 352, 359, 361, 379, 381, 383, 417, 419, 422, 423, 424, 425, 427, 428, 429, 431, 435, 436, 437, 439, 441, 442], "op": [1, 16, 28, 29, 31, 32, 33, 38, 46, 47, 48, 49, 52, 53, 54, 55, 77, 80, 81, 82, 83, 84, 207, 240, 246, 249, 264, 381, 401], "sinc": [1, 2, 3, 4, 5, 7, 11, 26, 30, 37, 42, 45, 50, 57, 60, 61, 64, 67, 72, 73, 74, 99, 100, 108, 113, 119, 122, 125, 129, 137, 149, 150, 151, 152, 153, 155, 158, 159, 160, 165, 176, 190, 244, 246, 247, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 277, 279, 282, 283, 286, 288, 291, 292, 294, 299, 307, 308, 309, 311, 313, 314, 319, 322, 379, 381, 418, 422, 423, 424, 425, 427, 428, 429, 435, 437, 438, 439, 441, 442], "goal": [1, 3, 4, 137, 226, 422, 423, 424, 425, 436, 437], "policy_devic": [1, 14, 15, 17, 20, 21, 22, 23, 24, 423], "explicitli": [1, 2, 3, 4, 33, 78, 90, 91, 98, 102, 181, 287, 312, 389, 418, 423, 425, 430, 435, 436, 439], "do": [1, 2, 3, 4, 7, 52, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 163, 164, 176, 178, 213, 227, 232, 240, 241, 267, 271, 278, 280, 305, 316, 344, 361, 381, 417, 418, 419, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 439, 441, 442], "deepcopi": [1, 279, 344, 435], "structur": [1, 3, 7, 45, 52, 56, 57, 58, 64, 65, 66, 73, 74, 77, 78, 79, 94, 113, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 177, 192, 195, 227, 277, 288, 326, 335, 346, 349, 361, 362, 363, 364, 365, 415, 418, 422, 424, 425, 427, 430, 435, 436, 437, 438], "place": [1, 2, 3, 18, 27, 30, 36, 37, 42, 50, 56, 58, 60, 61, 65, 67, 72, 79, 93, 95, 102, 105, 107, 115, 119, 122, 125, 126, 129, 137, 149, 150, 153, 158, 159, 160, 163, 164, 177, 181, 189, 196, 212, 227, 233, 234, 237, 239, 240, 241, 244, 279, 307, 311, 315, 361, 396, 401, 402, 418, 423, 424, 428, 431, 435, 436, 437, 439], "instanti": [1, 2, 3, 14, 15, 24, 56, 57, 58, 62, 63, 64, 65, 73, 74, 77, 79, 99, 100, 102, 133, 136, 181, 202, 227, 278, 361, 362, 363, 364, 365, 379, 422, 423, 428, 429, 431, 435, 436, 437, 439, 442], "all": [1, 2, 3, 4, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 67, 68, 69, 72, 73, 74, 77, 79, 80, 81, 82, 83, 84, 86, 102, 119, 122, 123, 124, 125, 126, 128, 129, 130, 131, 136, 137, 141, 142, 143, 147, 148, 149, 150, 151, 152, 153, 158, 159, 160, 163, 164, 166, 168, 170, 174, 176, 178, 184, 185, 188, 189, 192, 193, 195, 198, 204, 207, 208, 212, 220, 222, 224, 227, 228, 233, 234, 237, 239, 241, 244, 246, 247, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 277, 278, 279, 282, 283, 286, 288, 291, 292, 294, 299, 302, 307, 309, 311, 314, 315, 316, 318, 319, 322, 323, 326, 327, 329, 338, 342, 344, 346, 347, 348, 349, 351, 352, 356, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 381, 395, 399, 402, 411, 412, 413, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 439, 441, 442], "graph": [1, 3, 4, 8, 37, 60, 72, 120, 121, 135, 136, 357, 358, 422, 426, 437], "reli": [1, 2, 3, 11, 26, 61, 67, 227, 265, 266, 267, 269, 270, 271, 326, 346, 361, 418, 422, 424, 426, 428, 430, 437, 442], "third": [1, 208, 229, 309, 435, 436], "parti": 1, "try": [1, 2, 4, 7, 8, 9, 14, 15, 17, 20, 21, 22, 23, 24, 34, 35, 43, 56, 58, 65, 69, 79, 422, 423, 424, 425, 426, 429, 430, 435, 436, 437, 441, 442], "limit": [1, 2, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 66, 68, 69, 77, 80, 81, 82, 83, 84, 119, 122, 125, 129, 137, 143, 149, 150, 153, 158, 159, 160, 185, 204, 326, 328, 343, 344, 346, 348, 418, 422, 423, 425, 435, 436, 437], "chart": 1, "show": [1, 2, 11, 30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244, 278, 381, 422, 424, 425, 426, 435, 436, 437, 439, 441], "decis": [1, 2, 3, 253, 258, 286, 307, 332, 345, 417, 425, 427, 428, 435, 436, 439, 442], "multiprocess": [1, 2, 3, 14, 15, 21, 22, 23, 64, 73, 74, 94, 102, 119, 126, 127, 149, 153, 158, 241, 242, 422, 423, 424, 425, 430, 435, 436, 437, 438, 442], "ensur": [1, 2, 3, 13, 14, 15, 17, 20, 21, 22, 23, 24, 30, 37, 42, 50, 57, 60, 61, 67, 72, 73, 79, 99, 100, 106, 119, 122, 125, 129, 134, 137, 149, 150, 153, 158, 159, 160, 178, 185, 212, 225, 234, 237, 241, 242, 244, 267, 271, 308, 417, 423, 424, 437, 439], "flexibl": [1, 3, 9, 144, 353, 418, 419, 422, 426, 439, 442], "extens": [1, 2, 57, 64, 73, 74, 108, 249, 419, 439], "mechan": [1, 4, 16, 18, 30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 234, 244, 423, 429, 437], "accommod": [1, 2, 3, 13, 14, 15, 17, 20, 21, 22, 23, 24, 427, 428], "variou": [1, 2, 3, 122, 233, 326, 327, 328, 334, 335, 336, 337, 338, 339, 342, 343, 344, 346, 347, 348, 349, 352, 353, 359, 381, 411, 412, 422, 423, 424, 426, 427, 428, 429, 431, 435, 436, 439, 442], "deploy": [1, 426], "scenario": [1, 2, 18, 141, 142, 149, 163, 164, 232, 379, 422, 428, 435, 436, 437], "facilit": [1, 2, 3, 7, 211, 212, 227, 237, 239, 304, 305, 306, 417, 422, 425, 428, 437], "weightupdaterbas": [1, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24], "These": [1, 2, 7, 45, 66, 116, 163, 212, 239, 242, 417, 418, 422, 424, 435, 436, 437, 439, 442], "base": [1, 3, 4, 8, 9, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 30, 45, 57, 64, 67, 73, 74, 78, 104, 110, 113, 114, 116, 117, 119, 120, 121, 122, 125, 129, 133, 135, 136, 137, 143, 144, 145, 149, 150, 153, 158, 159, 160, 163, 176, 193, 217, 231, 233, 237, 238, 267, 271, 277, 279, 304, 310, 326, 327, 329, 330, 331, 333, 334, 335, 337, 342, 346, 347, 348, 349, 351, 352, 388, 399, 417, 418, 419, 422, 423, 425, 427, 428, 429, 431, 435, 436, 437, 439, 442], "interfac": [1, 3, 119, 132, 146, 272, 280, 417, 418, 422, 424, 426, 431, 437, 439], "implement": [1, 2, 3, 9, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 60, 61, 62, 67, 68, 69, 72, 76, 77, 80, 81, 82, 83, 84, 97, 109, 110, 119, 122, 125, 129, 137, 143, 144, 149, 150, 153, 158, 159, 160, 182, 189, 192, 193, 197, 200, 204, 206, 214, 215, 221, 225, 231, 233, 234, 235, 241, 242, 244, 245, 249, 251, 265, 266, 267, 268, 269, 270, 271, 295, 296, 297, 326, 327, 329, 332, 333, 334, 340, 342, 344, 345, 346, 348, 349, 351, 379, 390, 404, 417, 419, 422, 423, 424, 425, 426, 435, 436, 437, 441], "logic": [1, 3, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 435], "allow": [1, 2, 3, 13, 14, 15, 17, 20, 21, 22, 23, 24, 27, 30, 34, 35, 37, 42, 43, 50, 52, 54, 56, 58, 60, 61, 64, 65, 67, 68, 69, 72, 73, 74, 79, 94, 100, 102, 105, 107, 108, 119, 120, 121, 122, 125, 129, 135, 136, 137, 149, 150, 153, 158, 159, 160, 176, 181, 182, 215, 242, 244, 245, 272, 326, 327, 329, 330, 331, 333, 335, 336, 337, 342, 344, 346, 347, 348, 349, 351, 352, 353, 355, 359, 417, 419, 422, 424, 425, 426, 427, 428, 429, 435, 436, 437, 439, 441, 442], "tailor": [1, 441], "need": [1, 2, 3, 4, 7, 8, 10, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 27, 30, 36, 37, 42, 50, 56, 58, 60, 61, 67, 72, 77, 109, 113, 119, 122, 125, 129, 133, 137, 140, 149, 150, 151, 152, 153, 158, 159, 160, 185, 188, 190, 199, 205, 212, 215, 228, 232, 233, 234, 239, 241, 242, 244, 245, 246, 247, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 279, 280, 282, 283, 286, 288, 291, 292, 294, 299, 307, 309, 311, 312, 313, 314, 315, 319, 322, 325, 335, 348, 349, 360, 365, 381, 399, 413, 417, 418, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 435, 436, 437, 439, 441, 442], "handl": [1, 2, 3, 14, 15, 21, 23, 24, 30, 37, 42, 50, 52, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 240, 241, 242, 244, 271, 272, 326, 344, 346, 399, 411, 412, 422, 423, 424, 425, 427, 429, 436, 439], "well": [1, 2, 3, 8, 24, 26, 30, 37, 42, 50, 57, 59, 60, 61, 64, 67, 72, 73, 74, 77, 100, 105, 109, 116, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 233, 234, 244, 245, 249, 254, 269, 291, 292, 316, 344, 346, 351, 361, 365, 417, 422, 423, 425, 426, 427, 428, 429, 431, 438, 439, 441, 442], "server": [1, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "everi": [1, 3, 8, 14, 15, 16, 17, 20, 30, 34, 35, 37, 42, 43, 50, 54, 57, 60, 61, 62, 63, 64, 67, 69, 72, 73, 74, 79, 102, 109, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 170, 225, 226, 241, 244, 246, 247, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 277, 278, 279, 282, 283, 286, 288, 291, 292, 294, 299, 307, 309, 311, 314, 319, 322, 344, 399, 419, 422, 423, 424, 425, 427, 428, 435, 436, 437], "even": [1, 2, 3, 4, 8, 11, 15, 21, 22, 23, 24, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 72, 77, 80, 81, 82, 83, 84, 93, 94, 95, 96, 100, 107, 109, 111, 115, 119, 122, 125, 126, 129, 133, 137, 149, 150, 153, 158, 159, 160, 177, 181, 422, 424, 427, 435, 436, 437, 442], "simplest": [1, 37, 60, 72, 113, 319, 422, 424, 425, 428, 435, 436, 439, 442], "vanillaweightupdat": 1, "dict": [1, 14, 15, 17, 19, 20, 21, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 45, 46, 47, 50, 52, 53, 56, 57, 58, 60, 61, 62, 63, 64, 65, 67, 68, 69, 72, 73, 74, 77, 79, 80, 81, 82, 83, 84, 91, 100, 102, 107, 108, 119, 122, 125, 126, 127, 128, 129, 130, 137, 141, 142, 144, 147, 148, 149, 150, 151, 152, 153, 158, 159, 160, 161, 162, 163, 164, 166, 202, 204, 227, 232, 234, 240, 241, 242, 244, 245, 251, 252, 253, 254, 255, 256, 257, 258, 263, 272, 286, 312, 316, 329, 349, 351, 381, 385, 386, 394, 399, 404, 405, 411, 412, 413, 417, 422, 423, 424, 439, 441, 442], "assum": [1, 2, 3, 6, 14, 15, 16, 17, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 66, 67, 68, 69, 73, 74, 77, 80, 81, 82, 83, 84, 90, 91, 98, 107, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 170, 184, 187, 191, 199, 212, 213, 220, 227, 234, 237, 239, 250, 267, 271, 299, 302, 319, 331, 335, 336, 349, 359, 370, 371, 372, 373, 375, 376, 377, 378, 381, 422, 424, 434, 437], "divers": [1, 4, 149, 158], "abl": [1, 3, 45, 119, 140, 151, 152, 153, 159, 267, 271, 422, 424, 425, 428, 434, 435, 436, 437, 439], "leav": [1, 2, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 56, 58, 64, 65, 68, 69, 77, 79, 80, 81, 82, 83, 84, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 165, 177, 221, 418, 422, 430, 439], "untouch": [1, 182, 189, 192, 193, 197, 204, 206, 214, 215, 221, 225, 231, 233, 235, 242, 244], "particularli": [1, 2, 3, 426, 441, 442], "benefici": [1, 2], "involv": [1, 128, 130, 131, 141, 142, 155, 182, 185, 232, 267, 271, 427, 429], "complex": [1, 2, 3, 16, 18, 19, 30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 189, 212, 227, 233, 234, 237, 239, 244, 315, 422, 423, 427, 428], "architectur": [1, 4, 258, 429, 435, 436, 441], "special": [1, 3, 81, 83, 415, 422, 425, 426, 442], "hardwar": [1, 3, 426], "By": [1, 2, 3, 17, 19, 34, 35, 43, 54, 69, 119, 122, 123, 124, 125, 128, 129, 130, 131, 137, 141, 142, 149, 150, 151, 152, 153, 155, 158, 159, 160, 163, 164, 178, 179, 181, 182, 184, 185, 186, 189, 190, 193, 196, 197, 198, 200, 203, 204, 206, 211, 213, 214, 215, 217, 220, 221, 224, 225, 226, 227, 228, 229, 231, 232, 233, 237, 238, 240, 241, 244, 299, 316, 344, 389, 394, 413, 418, 422, 425, 435, 438, 439, 442], "retriev": [1, 3, 16, 19, 45, 56, 57, 58, 60, 62, 63, 64, 65, 73, 74, 79, 102, 105, 107, 108, 119, 122, 125, 128, 129, 130, 137, 149, 150, 153, 158, 159, 160, 176, 186, 193, 196, 208, 248, 251, 274, 311, 312, 316, 319, 323, 326, 327, 328, 329, 331, 343, 346, 347, 349, 351, 352, 359, 361, 362, 363, 364, 413, 419, 423, 424, 428, 437, 442], "appli": [1, 2, 3, 4, 16, 17, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 60, 61, 62, 63, 64, 67, 68, 69, 72, 73, 74, 75, 77, 80, 81, 82, 83, 84, 102, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 178, 179, 181, 182, 184, 185, 186, 189, 190, 192, 193, 194, 196, 197, 198, 199, 200, 203, 204, 205, 207, 211, 213, 214, 215, 217, 220, 221, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 237, 238, 240, 241, 244, 249, 265, 269, 279, 296, 308, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 340, 342, 343, 345, 346, 347, 348, 349, 351, 352, 361, 379, 395, 419, 422, 423, 424, 430, 435, 437, 441, 442], "seamless": [1, 2, 272], "integr": [1, 2, 30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 189, 212, 227, 233, 234, 237, 239, 244, 257, 267, 271, 274, 315, 417, 427, 428, 430, 435, 436, 437, 438], "infrastructur": [1, 3, 435, 436], "transit": [1, 30, 37, 42, 50, 60, 61, 67, 72, 100, 108, 113, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244, 247, 249, 321, 422, 425, 427, 428, 430, 435, 437, 439], "sampl": [1, 4, 8, 9, 28, 29, 31, 32, 33, 34, 35, 37, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 60, 62, 63, 64, 66, 68, 69, 72, 73, 74, 77, 80, 81, 82, 83, 84, 89, 93, 94, 95, 99, 100, 101, 102, 105, 106, 107, 108, 111, 113, 115, 119, 122, 125, 129, 137, 143, 146, 149, 150, 153, 158, 159, 160, 167, 174, 178, 179, 181, 182, 184, 185, 186, 189, 190, 193, 196, 197, 198, 200, 203, 204, 211, 213, 214, 215, 217, 220, 221, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 237, 238, 240, 241, 242, 244, 246, 248, 259, 264, 268, 274, 275, 276, 284, 286, 287, 288, 291, 296, 297, 300, 303, 308, 309, 310, 312, 313, 314, 315, 316, 326, 327, 328, 329, 330, 331, 333, 343, 345, 346, 351, 352, 390, 396, 399, 402, 415, 417, 418, 422, 423, 424, 425, 426, 427, 428, 430, 432, 435, 436, 438, 441, 442], "attent": [1, 2, 8, 185, 422, 425, 442], "given": [1, 2, 3, 14, 15, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 60, 61, 62, 63, 64, 66, 67, 68, 69, 72, 73, 74, 77, 79, 80, 81, 82, 83, 84, 85, 86, 100, 102, 107, 108, 119, 122, 125, 129, 137, 143, 147, 148, 149, 150, 153, 158, 159, 160, 161, 162, 176, 189, 194, 202, 208, 212, 227, 231, 233, 234, 235, 237, 239, 241, 242, 244, 246, 248, 250, 261, 262, 264, 265, 267, 269, 271, 274, 279, 290, 294, 303, 308, 309, 311, 314, 315, 316, 317, 318, 320, 325, 330, 331, 333, 344, 360, 361, 362, 363, 364, 365, 367, 391, 394, 409, 417, 418, 419, 422, 423, 424, 427, 428, 429, 430, 431, 436, 437, 442], "built": [1, 2, 3, 5, 7, 102, 120, 121, 128, 135, 136, 146, 147, 326, 327, 329, 330, 331, 333, 335, 336, 337, 342, 344, 346, 347, 348, 349, 351, 352, 353, 359, 407, 409, 410, 413, 422, 423, 424, 425, 426, 429, 431, 437, 439, 442], "flatten": [1, 28, 29, 31, 32, 33, 34, 35, 38, 39, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 56, 58, 65, 68, 69, 77, 79, 80, 81, 82, 83, 84, 113, 182, 199, 361, 396, 415, 425, 436], "suffici": [1, 3, 4, 422], "preprocess": [1, 2, 78, 233, 423, 426], "popul": [1, 2, 3, 14, 15, 17, 24, 57, 62, 63, 64, 71, 73, 74, 102, 203, 227, 259, 279, 344, 422, 424, 425, 428, 430, 437, 439], "replaybuff": [1, 2, 3, 14, 15, 17, 20, 24, 39, 57, 62, 63, 70, 73, 74, 93, 94, 99, 100, 101, 102, 107, 108, 117, 185, 213, 217, 244, 331, 336, 359, 407, 409, 415, 424, 426, 430, 432, 435, 436, 438, 439, 441], "lazytensorstorag": [1, 2, 14, 15, 17, 20, 57, 64, 72, 73, 74, 99, 107, 108, 113, 217, 244, 424, 426, 432, 435, 436, 439], "lambda": [1, 2, 14, 15, 17, 20, 24, 25, 37, 45, 60, 64, 72, 79, 113, 119, 122, 125, 126, 129, 137, 149, 150, 153, 158, 159, 160, 175, 182, 190, 202, 204, 227, 235, 242, 244, 245, 250, 299, 308, 311, 312, 313, 337, 339, 340, 351, 361, 364, 372, 373, 377, 378, 379, 409, 418, 422, 423, 426, 435, 436, 438, 439, 441, 442], "reshap": [1, 2, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 107, 113, 182, 267, 271, 272, 287, 379, 424, 435, 436], "slice": [1, 2, 3, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 57, 62, 63, 64, 68, 69, 73, 74, 77, 80, 81, 82, 83, 84, 100, 102, 107, 108, 178, 184, 185, 439], "recommend": [1, 2, 4, 7, 14, 15, 17, 20, 21, 22, 23, 24, 56, 57, 58, 64, 65, 73, 74, 79, 107, 113, 133, 185, 279, 418, 430, 435, 436], "achiev": [1, 2, 3, 4, 30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 133, 137, 149, 150, 153, 158, 159, 160, 177, 226, 244, 250, 312, 396, 419, 422, 423, 424, 425, 426, 435, 436, 437, 439, 441, 442], "creat": [1, 2, 3, 4, 5, 6, 7, 10, 14, 15, 17, 20, 21, 22, 23, 24, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 67, 68, 69, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 89, 94, 96, 102, 113, 119, 122, 125, 126, 129, 133, 137, 149, 150, 151, 153, 158, 159, 160, 163, 164, 170, 176, 182, 185, 202, 212, 232, 233, 234, 237, 240, 241, 242, 244, 251, 252, 254, 255, 256, 257, 258, 259, 263, 267, 271, 272, 273, 277, 278, 307, 315, 316, 323, 329, 331, 336, 347, 349, 359, 381, 396, 403, 404, 405, 409, 411, 412, 417, 422, 423, 424, 425, 426, 428, 431, 435, 436, 437, 438, 439, 441, 442], "multidimension": [1, 2, 73, 99, 100, 439], "slicesampl": [1, 2, 100, 108, 185, 439], "sampler": [1, 2, 57, 62, 63, 64, 73, 74, 93, 94, 95, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 111, 113, 115, 185, 213, 287, 331, 336, 359, 422, 424, 435, 436, 439], "One": [1, 2, 3, 4, 8, 28, 29, 33, 34, 35, 38, 43, 48, 49, 54, 55, 69, 78, 113, 119, 120, 121, 149, 153, 158, 159, 185, 217, 237, 246, 284, 315, 319, 350, 355, 385, 422, 423, 439, 442], "must": [1, 2, 3, 7, 11, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 60, 61, 62, 63, 64, 66, 67, 68, 69, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 89, 93, 94, 95, 96, 100, 102, 107, 108, 109, 110, 111, 113, 115, 119, 120, 122, 125, 126, 129, 135, 137, 147, 149, 150, 151, 152, 153, 155, 158, 159, 160, 161, 163, 173, 178, 181, 182, 185, 188, 190, 196, 200, 202, 204, 206, 208, 210, 221, 224, 226, 227, 228, 231, 232, 234, 235, 236, 241, 244, 251, 252, 261, 267, 271, 272, 275, 276, 277, 278, 290, 303, 308, 309, 311, 312, 313, 314, 315, 316, 319, 320, 326, 327, 329, 330, 331, 333, 334, 335, 336, 337, 342, 344, 346, 347, 348, 349, 350, 351, 352, 359, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 383, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 418, 422, 423, 424, 425, 428, 434, 437, 439], "shape": [1, 2, 3, 14, 15, 17, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 86, 89, 93, 94, 95, 99, 102, 107, 113, 115, 119, 122, 123, 124, 125, 128, 129, 130, 135, 136, 137, 140, 141, 142, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 163, 164, 165, 170, 176, 178, 182, 184, 186, 192, 195, 196, 197, 202, 204, 205, 208, 210, 214, 215, 217, 221, 224, 225, 227, 230, 235, 241, 243, 244, 248, 250, 253, 254, 255, 256, 257, 258, 259, 260, 263, 265, 266, 267, 269, 270, 271, 272, 274, 275, 276, 277, 278, 280, 284, 285, 286, 287, 288, 289, 290, 295, 296, 298, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314, 315, 316, 318, 319, 320, 323, 326, 327, 329, 330, 331, 333, 334, 335, 342, 346, 347, 348, 349, 351, 352, 355, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 390, 396, 399, 409, 417, 418, 422, 423, 424, 425, 426, 428, 429, 432, 434, 435, 436, 438, 439, 441, 442], "clearli": [1, 2], "practic": [1, 2, 3, 4, 5, 8, 52, 233, 268, 296, 297, 325, 416, 422, 423, 424, 425, 426, 429, 435, 436, 438, 442], "dimension": [1, 57, 61, 64, 72, 73, 74, 194, 267, 271, 361, 366, 374, 418, 436], "num_slic": [1, 2, 100, 107, 108, 439], "4": [1, 2, 3, 7, 28, 30, 34, 35, 39, 43, 45, 48, 49, 50, 54, 57, 60, 62, 63, 64, 66, 67, 69, 70, 72, 73, 74, 93, 94, 95, 102, 107, 108, 115, 119, 120, 121, 122, 123, 124, 125, 129, 135, 136, 137, 138, 139, 140, 143, 145, 149, 150, 153, 156, 157, 158, 159, 160, 178, 179, 181, 182, 185, 190, 196, 217, 224, 225, 226, 232, 241, 242, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 261, 262, 263, 264, 265, 266, 269, 270, 272, 274, 275, 276, 277, 278, 282, 283, 284, 286, 287, 288, 289, 290, 298, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314, 315, 318, 320, 326, 327, 329, 330, 331, 333, 334, 335, 336, 337, 342, 344, 346, 347, 348, 349, 351, 352, 359, 379, 380, 417, 421, 422, 423, 424, 425, 431, 435, 436, 437, 439, 440, 441, 442], "trajectory_kei": [1, 26, 107, 108], "traj_id": [1, 2, 3, 14, 15, 17, 26, 39, 70, 182, 217, 430, 439], "total_fram": [1, 2, 14, 15, 17, 20, 21, 22, 23, 24, 39, 50, 62, 70, 182, 185, 217, 399, 402, 409, 419, 422, 423, 424, 425, 426, 430, 432, 435, 436, 439, 441], "dim": [1, 2, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 64, 65, 68, 69, 73, 74, 77, 79, 80, 81, 82, 83, 84, 107, 185, 186, 206, 210, 223, 224, 227, 236, 241, 270, 294, 299, 311, 413, 418, 423, 424, 426, 435, 437, 439], "ndim": [1, 2, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 57, 64, 68, 69, 73, 74, 77, 80, 81, 82, 83, 84, 93, 95, 99, 100, 113, 115, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 206, 244, 311], "parallelenv": [1, 2, 3, 14, 15, 17, 20, 23, 113, 119, 122, 125, 129, 137, 144, 150, 151, 152, 153, 155, 158, 159, 160, 232, 242, 267, 271, 379, 410, 415, 422, 423, 424, 427, 434, 441, 442], "make_env": [1, 3, 149, 158, 164, 232, 241, 242, 379, 404, 405, 422, 423, 441, 442], "regular": [1, 2, 3, 14, 15, 17, 20, 21, 22, 23, 24, 56, 58, 65, 79, 99, 105, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 178, 179, 181, 182, 184, 185, 186, 189, 190, 193, 196, 197, 198, 200, 203, 204, 211, 213, 214, 215, 217, 220, 221, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 237, 238, 240, 241, 244, 247, 249, 260, 267, 271, 290, 309, 313, 314, 315, 316, 336, 346, 401, 415, 419, 422, 423, 426, 427, 428, 432, 439, 442], "behav": [1, 3, 131, 143, 265, 269, 284, 334, 342, 344, 426, 438], "accordingli": [1, 2, 3, 100, 190, 206, 225, 226, 269, 313, 425], "3": [1, 2, 3, 6, 7, 10, 11, 14, 15, 17, 20, 24, 28, 29, 30, 33, 34, 35, 37, 38, 42, 43, 45, 46, 47, 48, 49, 50, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 67, 69, 72, 73, 74, 79, 93, 95, 100, 102, 107, 108, 113, 115, 119, 122, 123, 124, 125, 128, 129, 130, 131, 132, 137, 140, 141, 142, 144, 146, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 170, 179, 181, 182, 185, 189, 190, 194, 196, 197, 202, 204, 208, 210, 212, 214, 215, 217, 220, 221, 224, 225, 226, 227, 230, 232, 233, 234, 235, 237, 239, 242, 244, 245, 247, 248, 250, 251, 252, 254, 255, 256, 258, 261, 263, 265, 266, 267, 269, 270, 271, 272, 274, 275, 277, 278, 279, 284, 287, 289, 299, 303, 304, 305, 306, 308, 309, 312, 314, 315, 318, 319, 320, 326, 327, 329, 330, 331, 333, 334, 335, 336, 337, 338, 342, 344, 346, 347, 348, 349, 351, 352, 359, 361, 362, 363, 364, 367, 370, 371, 372, 373, 375, 376, 377, 378, 379, 381, 398, 417, 419, 421, 422, 423, 424, 425, 427, 428, 430, 431, 435, 436, 437, 439, 440, 441, 442], "isn": [1, 2, 3, 8, 14, 15, 17, 20, 21, 22, 23, 24, 56, 58, 65, 79, 99, 113, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 165, 181, 196, 202, 308, 315, 361, 428, 429, 431, 435, 436], "current": [1, 2, 3, 12, 14, 15, 16, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 77, 79, 80, 81, 82, 83, 84, 97, 100, 102, 108, 119, 122, 125, 129, 131, 137, 144, 147, 148, 149, 150, 153, 158, 159, 160, 167, 176, 181, 182, 185, 202, 213, 226, 227, 228, 232, 233, 234, 242, 244, 262, 288, 292, 296, 300, 311, 326, 328, 329, 336, 343, 346, 348, 349, 361, 384, 419, 422, 423, 424, 425, 429, 435, 436, 437, 439, 442], "fulli": [1, 8, 30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244, 266, 270, 423, 426, 429, 437, 439], "ani": [1, 2, 3, 5, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 67, 68, 69, 72, 73, 74, 77, 79, 80, 81, 82, 83, 84, 91, 92, 93, 94, 95, 96, 102, 103, 106, 108, 109, 111, 113, 114, 115, 117, 118, 119, 122, 125, 126, 129, 130, 137, 144, 149, 150, 151, 152, 153, 158, 159, 160, 161, 163, 164, 165, 177, 179, 181, 182, 184, 185, 186, 189, 190, 193, 196, 197, 198, 199, 200, 202, 203, 204, 211, 212, 213, 214, 215, 217, 220, 221, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 237, 238, 240, 241, 242, 244, 250, 251, 252, 258, 259, 272, 281, 287, 307, 311, 315, 316, 317, 318, 326, 327, 329, 330, 331, 333, 334, 335, 342, 344, 346, 347, 348, 349, 351, 352, 361, 363, 364, 379, 381, 386, 399, 416, 418, 422, 423, 424, 425, 426, 428, 429, 435, 436, 437, 439, 441, 442], "consecut": [1, 3, 106, 133, 271, 288, 381, 425, 427, 430, 436, 439, 442], "won": [1, 3, 4, 14, 15, 17, 20, 21, 22, 23, 24, 30, 37, 42, 50, 56, 58, 60, 61, 65, 67, 72, 79, 119, 122, 125, 126, 128, 129, 137, 144, 145, 149, 150, 153, 158, 159, 160, 212, 239, 244, 326, 399, 413, 423, 424, 427, 428], "therebi": [1, 27, 379, 418, 422, 423], "interrupt": [1, 2, 129, 311, 367], "start": [1, 2, 3, 4, 5, 13, 14, 15, 17, 20, 21, 22, 23, 24, 27, 45, 62, 77, 78, 79, 100, 107, 108, 119, 122, 125, 126, 129, 134, 137, 140, 149, 150, 153, 158, 159, 160, 176, 191, 395, 421, 422, 423, 426, 433, 436, 437, 439, 440, 442], "get": [1, 2, 3, 4, 6, 7, 8, 9, 12, 34, 35, 37, 43, 45, 56, 57, 58, 60, 61, 64, 65, 67, 69, 72, 79, 93, 95, 100, 107, 108, 109, 111, 113, 115, 119, 122, 125, 126, 129, 137, 149, 150, 153, 158, 159, 160, 179, 184, 186, 192, 194, 195, 204, 208, 213, 226, 227, 230, 234, 241, 242, 264, 303, 312, 313, 316, 323, 361, 362, 363, 364, 365, 381, 385, 417, 418, 421, 422, 423, 424, 425, 426, 433, 435, 436, 437, 439, 440, 441, 442], "rid": [1, 37, 60, 72], "natur": [1, 2, 3, 13, 21, 22, 23, 422, 428, 429, 430, 439], "background": [1, 13, 14, 15, 20, 21, 22, 23, 439], "simpli": [1, 3, 6, 56, 58, 65, 78, 79, 111, 113, 118, 197, 221, 240, 344, 361, 417, 418, 422, 424, 429, 435, 436, 442], "replay_buff": [1, 2, 8, 14, 15, 17, 20, 24, 57, 62, 63, 64, 73, 74, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 185, 396, 409, 422, 423, 424, 430, 435, 436, 439], "rb": [1, 2, 14, 15, 17, 20, 39, 57, 62, 63, 64, 70, 73, 74, 94, 99, 100, 102, 107, 108, 113, 185, 217, 244, 423, 425, 426, 430, 432, 436, 438, 439, 441], "paus": [1, 13, 14, 15, 17, 20, 21, 22, 23, 24], "sleep": [1, 14, 15, 17, 20, 62, 126, 442], "10": [1, 2, 3, 7, 25, 26, 28, 29, 30, 33, 37, 38, 45, 46, 50, 57, 62, 63, 64, 66, 72, 73, 74, 75, 78, 79, 93, 94, 95, 99, 102, 107, 108, 113, 115, 119, 120, 121, 122, 125, 126, 129, 135, 136, 137, 143, 149, 150, 151, 152, 153, 156, 157, 158, 159, 160, 163, 164, 178, 179, 182, 184, 185, 190, 226, 228, 229, 230, 241, 242, 244, 248, 250, 253, 254, 256, 258, 260, 264, 265, 266, 267, 269, 270, 271, 274, 275, 276, 286, 288, 299, 312, 316, 319, 323, 327, 331, 333, 340, 346, 347, 348, 352, 359, 361, 362, 363, 364, 367, 381, 390, 419, 422, 423, 424, 425, 426, 427, 428, 432, 435, 437, 439, 441, 442], "i": [1, 2, 3, 14, 15, 17, 20, 21, 22, 23, 24, 30, 34, 35, 37, 39, 42, 43, 50, 57, 60, 61, 64, 67, 69, 70, 72, 74, 75, 79, 93, 95, 99, 100, 107, 108, 115, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 190, 191, 206, 212, 217, 220, 232, 234, 239, 244, 266, 267, 270, 271, 290, 302, 309, 311, 312, 314, 315, 316, 326, 328, 329, 330, 334, 335, 342, 343, 346, 347, 348, 349, 351, 352, 361, 362, 363, 364, 390, 402, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 435, 436, 437, 439, 441, 442], "rang": [1, 2, 3, 4, 8, 57, 62, 63, 64, 66, 73, 74, 93, 95, 102, 113, 119, 122, 125, 126, 129, 137, 141, 142, 149, 150, 153, 158, 159, 160, 217, 230, 241, 244, 245, 266, 270, 287, 343, 351, 352, 418, 419, 422, 424, 425, 426, 429, 430, 432, 435, 436, 437, 439, 441], "optim_step": [1, 248, 274, 426, 432], "rest": [1, 14, 15, 20, 37, 249, 417, 424, 425, 435, 437, 441], "multithread": [1, 2, 3, 57, 64, 73, 74, 89, 144, 145, 430, 439], "mind": [1, 3, 100, 107, 108, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 435, 436], "gil": 1, "relat": [1, 2, 3, 4, 10, 57, 149, 199, 326, 327, 329, 330, 331, 333, 334, 335, 342, 346, 347, 348, 349, 351, 352, 423, 432, 437], "restrict": [1, 2, 3, 418, 423, 438, 439, 442], "hand": [1, 2, 3, 7, 24, 34, 435, 436, 437], "let": [1, 2, 3, 6, 7, 11, 26, 30, 37, 42, 45, 50, 57, 60, 61, 64, 67, 72, 73, 74, 75, 119, 122, 125, 129, 137, 149, 150, 151, 152, 153, 158, 159, 160, 185, 244, 277, 278, 308, 394, 418, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 434, 435, 436, 437, 438, 439, 441, 442], "child": [1, 19, 30, 37, 42, 45, 50, 60, 61, 67, 72, 79, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244, 423], "fill": [1, 14, 15, 17, 20, 21, 22, 23, 24, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 129, 181, 227, 240, 271, 425, 437, 438], "truli": [1, 240, 441], "decoupl": [1, 13, 14, 15, 17, 20, 21, 22, 23, 422, 429, 441], "been": [1, 2, 3, 5, 7, 8, 12, 21, 23, 24, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 66, 68, 69, 77, 80, 81, 82, 83, 84, 102, 106, 119, 122, 125, 129, 133, 137, 141, 142, 149, 150, 153, 158, 159, 160, 204, 225, 226, 233, 234, 265, 267, 269, 271, 279, 311, 326, 344, 346, 348, 422, 423, 424, 425, 434, 435, 436, 437, 439, 441, 442], "shut": [1, 13, 14, 15, 17, 20, 21, 22, 23, 153, 159], "down": [1, 4, 13, 14, 15, 17, 20, 21, 22, 23, 153, 159, 418, 425, 427], "async_shutdown": [1, 13, 14, 15, 17, 20, 21, 22, 23, 24, 62], "mean": [1, 2, 3, 4, 7, 14, 15, 16, 17, 20, 21, 22, 23, 24, 56, 58, 65, 73, 77, 79, 94, 99, 100, 107, 108, 113, 119, 120, 121, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 181, 208, 232, 241, 242, 246, 247, 248, 259, 262, 265, 267, 269, 271, 274, 286, 287, 295, 296, 312, 316, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 340, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 361, 362, 363, 364, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 417, 418, 422, 423, 424, 426, 428, 435, 436, 437, 439, 442], "drastic": [1, 136, 149, 439], "load": [1, 2, 6, 7, 14, 15, 17, 20, 30, 37, 39, 42, 50, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 70, 72, 73, 74, 78, 79, 91, 93, 94, 95, 96, 102, 109, 110, 111, 115, 116, 119, 122, 124, 125, 129, 137, 149, 150, 153, 158, 159, 160, 161, 175, 241, 242, 244, 399, 413, 419, 422, 424, 426, 439], "factor": [1, 8, 11, 27, 37, 50, 217, 244, 246, 247, 264, 268, 281, 288, 296, 297, 327, 333, 336, 337, 339, 350, 367, 422, 423, 426, 428, 432, 435, 436, 439, 442], "signific": [1, 3, 5, 8, 424, 441, 442], "understand": [1, 2, 8, 13, 21, 22, 23, 37, 422, 423, 426, 427, 428, 435, 436], "affect": [1, 3, 8, 30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 165, 190, 234, 242, 244, 361, 362, 363, 364, 435], "algorithm": [1, 2, 3, 8, 9, 13, 21, 22, 23, 143, 178, 224, 326, 346, 347, 349, 415, 418, 419, 422, 423, 424, 425, 426, 428, 429, 430, 431, 435, 436, 438, 439, 441], "legitim": [1, 418, 442], "unless": [1, 2, 3, 14, 15, 17, 20, 21, 22, 23, 24, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 60, 61, 67, 68, 69, 72, 77, 80, 81, 82, 83, 84, 90, 106, 119, 122, 125, 129, 137, 149, 150, 151, 152, 153, 158, 159, 160, 232, 234, 242, 244, 249, 326, 327, 329, 342, 344, 346, 347, 348, 349, 351, 352, 424], "benchmark": [1, 2, 3, 9, 120, 121, 129, 135, 136], "tool": [1, 2, 3, 5, 417, 418, 425, 427, 435, 437, 439, 442], "backend": [1, 3, 7, 14, 15, 17, 20, 21, 22, 24, 25, 79, 119, 122, 125, 128, 129, 137, 149, 150, 153, 158, 159, 160, 169, 175, 245, 419, 422, 424, 425, 426, 427, 430, 431, 437], "gloo": [1, 21, 22, 25], "nccl": [1, 21, 22], "mpi": [1, 21, 22], "distributeddatacollector": [1, 25, 415], "rpc": [1, 23, 25, 63], "rpcdatacollector": [1, 25, 415], "launcher": [1, 21, 22, 23, 25], "rai": [1, 16, 17, 24, 57, 62, 63, 64, 73, 74, 102], "submitit": [1, 21, 22, 23, 25], "mode": [1, 3, 6, 13, 14, 15, 17, 20, 21, 22, 23, 24, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 60, 61, 67, 68, 69, 72, 77, 80, 81, 82, 83, 84, 119, 122, 125, 129, 134, 137, 144, 149, 150, 153, 158, 159, 160, 192, 195, 226, 234, 241, 242, 244, 249, 259, 267, 268, 271, 276, 284, 295, 296, 297, 302, 312, 316, 344, 379, 389, 394, 417, 418, 422, 423, 435, 436, 441, 442], "find": [1, 4, 6, 7, 21, 22, 23, 57, 59, 75, 107, 108, 246, 269, 288, 393, 397, 422, 423, 426, 428, 429, 435, 436], "folder": [1, 2, 56, 58, 65, 79, 163, 185, 423], "machin": [1, 2, 7, 21, 22, 23, 50, 133, 435, 436, 441], "wonder": 1, "why": [1, 2, 3, 176, 418, 435, 437, 442], "instead": [1, 2, 3, 4, 7, 8, 14, 15, 17, 20, 21, 22, 23, 24, 28, 30, 33, 37, 42, 50, 60, 61, 62, 67, 72, 76, 79, 119, 122, 125, 129, 136, 137, 149, 150, 153, 158, 159, 160, 185, 199, 244, 245, 246, 247, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 279, 282, 283, 286, 288, 291, 292, 294, 299, 307, 309, 311, 314, 315, 319, 322, 326, 328, 329, 331, 334, 335, 336, 342, 343, 346, 347, 348, 349, 359, 361, 365, 369, 413, 418, 426, 427, 428, 432, 437, 439, 442], "lower": [1, 2, 3, 24, 30, 31, 188, 241, 242, 291, 292, 319, 424, 435, 437], "io": [1, 11, 135, 136, 144, 147, 148, 161, 162, 269, 270, 426], "footprint": [1, 2, 439], "commun": [1, 2, 3, 137, 149, 153, 158, 416, 424, 442], "yet": [1, 120, 121, 135, 438], "plai": [1, 3, 151, 152, 160, 185, 423, 424, 429, 439, 442], "role": [1, 3, 142, 423, 429, 442], "opposit": [1, 435], "direct": [1, 2, 30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244, 265, 269, 344, 423, 429], "faster": [1, 2, 4, 26, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 144, 275, 361, 362, 363, 364, 425, 426, 435, 436], "share": [1, 3, 6, 8, 14, 15, 17, 20, 26, 56, 58, 64, 65, 73, 74, 77, 79, 91, 93, 94, 95, 96, 100, 102, 103, 107, 109, 111, 115, 126, 149, 158, 224, 232, 241, 242, 267, 271, 277, 278, 304, 305, 306, 326, 327, 328, 329, 330, 334, 335, 342, 343, 346, 347, 348, 349, 351, 352, 413, 415, 417, 418, 424, 426, 432, 434, 435, 436, 441, 442], "among": [1, 3, 52, 151, 152, 232, 335, 349, 418, 435, 436], "prohibit": [1, 3, 17, 113], "slow": [1, 3, 4, 11, 56, 58, 65, 79, 94, 107, 108], "compar": [1, 3, 113, 327, 329, 342, 347, 349, 351, 352, 394, 418, 422, 424, 426, 428, 429, 435, 436, 439, 442], "gpu": [1, 7, 8, 30, 37, 42, 50, 60, 61, 67, 72, 93, 95, 115, 119, 122, 125, 129, 130, 133, 137, 149, 150, 153, 158, 159, 160, 244, 422, 424, 425, 435, 436, 442], "driver": [1, 7], "keyword": [1, 2, 3, 11, 14, 15, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 67, 68, 69, 72, 73, 74, 77, 79, 80, 81, 82, 83, 84, 89, 91, 93, 94, 95, 99, 100, 102, 105, 107, 108, 111, 115, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 135, 136, 137, 141, 142, 144, 145, 147, 148, 149, 150, 153, 155, 158, 159, 160, 161, 162, 163, 164, 170, 178, 179, 181, 182, 184, 185, 186, 188, 189, 190, 193, 196, 197, 198, 200, 202, 203, 204, 206, 211, 212, 213, 214, 215, 217, 220, 221, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 250, 264, 267, 271, 275, 276, 277, 278, 288, 303, 307, 308, 311, 312, 313, 315, 316, 319, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 340, 341, 342, 343, 345, 346, 347, 348, 349, 351, 352, 354, 359, 361, 362, 363, 364, 365, 369, 379, 381, 386, 388, 399, 410, 422, 423, 424, 426, 428, 431, 435, 436, 439, 441, 442], "build": [1, 2, 3, 7, 26, 30, 34, 37, 42, 50, 57, 60, 61, 62, 63, 64, 67, 72, 73, 74, 77, 102, 119, 120, 121, 122, 125, 129, 130, 131, 135, 136, 137, 141, 142, 144, 147, 148, 149, 150, 153, 155, 158, 159, 160, 161, 162, 163, 164, 217, 241, 242, 244, 248, 274, 310, 312, 316, 399, 406, 407, 408, 417, 418, 419, 424, 425, 426, 428, 429, 430, 431, 435, 436, 437, 438, 441, 442], "mani": [1, 2, 3, 4, 64, 120, 121, 123, 124, 125, 128, 130, 131, 135, 136, 144, 145, 155, 227, 326, 328, 335, 343, 346, 417, 422, 423, 424, 426, 427, 428, 430, 432, 435, 436, 437, 439, 441, 442], "eg": [1, 2, 3, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 56, 58, 65, 68, 69, 77, 79, 80, 81, 82, 83, 84, 93, 94, 95, 96, 109, 111, 115, 119, 122, 123, 124, 125, 128, 129, 130, 131, 133, 137, 149, 150, 153, 155, 158, 159, 160, 194, 225, 234, 245, 277, 307, 381], "gymnasium": [1, 2, 3, 5, 14, 15, 17, 20, 72, 119, 122, 125, 128, 129, 130, 134, 137, 138, 139, 149, 150, 153, 158, 159, 160, 169, 175, 197, 221, 225, 240, 245, 423, 424, 426, 437, 441], "warn": [1, 3, 61, 67, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 241, 246, 264, 288, 389, 423], "quickli": [1, 3, 423, 435, 436, 442], "becom": [1, 2, 3, 4, 24, 265, 269, 435, 436, 442], "quit": [1, 3, 11, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 422, 423, 424, 426, 428, 435, 436, 442], "annoi": [1, 3], "filter": [1, 2, 3, 4, 78, 100, 107, 108, 326, 327, 329, 330, 334, 335, 342, 346, 347, 349, 427], "out": [1, 2, 3, 4, 5, 9, 16, 18, 19, 24, 30, 37, 42, 45, 50, 56, 58, 60, 61, 65, 67, 72, 78, 79, 91, 100, 107, 108, 119, 122, 125, 129, 137, 149, 150, 151, 152, 153, 158, 159, 160, 165, 224, 227, 244, 246, 265, 266, 269, 275, 276, 279, 280, 281, 303, 307, 308, 309, 312, 313, 314, 315, 316, 344, 357, 358, 418, 419, 422, 423, 424, 425, 426, 427, 428, 430, 435, 436, 437, 439, 441, 442], "still": [1, 2, 3, 9, 37, 60, 72, 79, 80, 119, 120, 121, 122, 125, 129, 135, 136, 137, 149, 150, 153, 158, 159, 160, 232, 288, 343, 344, 418, 422, 423, 425, 434, 437, 439, 442], "wish": [1, 3, 11, 14, 15, 20, 175, 429, 439], "displai": [1, 3, 7, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 399, 419, 422, 423, 436, 437], "filter_warnings_subprocess": [1, 3], "fals": [1, 2, 3, 11, 12, 14, 15, 17, 20, 21, 22, 23, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 105, 106, 107, 108, 109, 114, 115, 117, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 170, 176, 177, 178, 179, 181, 182, 185, 186, 189, 190, 192, 195, 196, 197, 199, 202, 203, 204, 206, 207, 208, 210, 212, 213, 214, 215, 217, 219, 220, 221, 224, 225, 227, 230, 231, 232, 233, 234, 235, 236, 237, 239, 241, 242, 244, 245, 246, 247, 248, 250, 251, 252, 254, 260, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 288, 289, 290, 296, 297, 298, 302, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314, 315, 316, 318, 319, 320, 326, 327, 328, 329, 330, 331, 333, 334, 335, 337, 338, 339, 340, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 355, 359, 361, 362, 363, 364, 370, 371, 372, 373, 375, 376, 377, 378, 379, 381, 388, 389, 392, 393, 394, 396, 397, 399, 413, 417, 418, 419, 422, 423, 424, 426, 431, 432, 434, 435, 436, 437, 438, 441, 442], "central": [2, 19, 277, 278, 279, 422, 423, 427, 435, 436, 439], "part": [2, 3, 4, 8, 30, 37, 42, 50, 60, 61, 66, 67, 72, 79, 119, 120, 122, 125, 129, 135, 137, 147, 149, 150, 153, 158, 159, 160, 176, 184, 208, 217, 220, 244, 320, 390, 413, 418, 422, 424, 425, 426, 432, 435, 437, 442], "wide": [2, 3, 5, 441], "give": [2, 3, 7, 73, 119, 122, 125, 129, 137, 143, 149, 150, 153, 158, 159, 160, 185, 416, 418, 422, 423, 426, 435, 436, 437, 438, 441], "abil": [2, 344, 437, 439], "panel": [2, 424], "usag": [2, 3, 5, 7, 14, 15, 17, 20, 21, 22, 23, 24, 37, 60, 72, 91, 113, 182, 185, 196, 249, 267, 271, 329, 334, 342, 349, 353, 417, 422, 424, 425, 428, 429, 431, 435, 436, 439], "includ": [2, 3, 4, 7, 9, 24, 30, 37, 42, 50, 60, 61, 67, 72, 77, 79, 90, 91, 93, 94, 95, 96, 98, 109, 111, 115, 119, 122, 125, 129, 137, 143, 147, 148, 149, 150, 153, 158, 159, 160, 199, 202, 226, 232, 234, 241, 242, 244, 267, 271, 326, 329, 344, 349, 402, 417, 419, 422, 423, 424, 425, 426, 435, 436, 437, 439, 442], "almost": [2, 242, 275, 276, 425], "physic": [2, 6, 7, 91, 149, 150, 155, 419, 422, 435, 436, 437], "theori": 2, "crude": 2, "made": [2, 3, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 60, 61, 64, 67, 68, 69, 72, 77, 80, 81, 82, 83, 84, 93, 94, 95, 96, 109, 111, 115, 119, 122, 125, 128, 129, 130, 137, 149, 150, 153, 158, 159, 160, 227, 244, 279, 288, 331, 344, 359, 422, 423, 425, 435, 436, 438, 439, 441], "liststorag": [2, 45, 57, 62, 63, 64, 72, 73, 74, 94, 102, 439], "veri": [2, 3, 135, 136, 423, 427, 430, 435, 437, 439, 441, 442], "ineffici": [2, 4], "tensor": [2, 8, 14, 15, 17, 20, 21, 22, 23, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 105, 107, 108, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 135, 136, 137, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 163, 164, 170, 176, 177, 178, 179, 181, 182, 184, 185, 186, 189, 190, 192, 194, 195, 196, 197, 199, 202, 203, 205, 208, 210, 212, 213, 214, 215, 217, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 239, 241, 242, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 284, 285, 286, 287, 288, 289, 290, 293, 294, 295, 296, 297, 298, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314, 315, 316, 318, 319, 320, 322, 324, 326, 327, 329, 330, 331, 333, 334, 335, 338, 339, 342, 344, 346, 347, 348, 349, 351, 352, 355, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 417, 418, 419, 422, 423, 424, 425, 426, 427, 428, 435, 436, 437, 441, 442], "contigu": [2, 3, 8, 31, 34, 42, 80, 94, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 170, 202, 205, 227, 235, 437, 439, 441], "tensorstorag": [2, 64, 72, 93, 99, 100, 113, 116, 430, 439], "lazymemmapstorag": [2, 39, 57, 62, 63, 64, 70, 73, 74, 100, 102, 107, 108, 184, 185, 422, 423, 425, 430, 435, 438, 439], "class": [2, 5, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 125, 126, 127, 128, 129, 130, 131, 136, 137, 140, 143, 146, 149, 150, 151, 152, 153, 155, 158, 159, 160, 161, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 411, 412, 413, 415, 417, 418, 419, 422, 423, 424, 425, 427, 428, 429, 430, 431, 435, 436, 439, 442], "citizen": 2, "pytre": [2, 57, 62, 63, 64, 73, 74, 96, 102, 116], "tupl": [2, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 72, 73, 74, 77, 79, 80, 81, 82, 83, 84, 91, 96, 100, 102, 107, 111, 113, 119, 122, 123, 124, 125, 128, 129, 130, 137, 149, 150, 153, 158, 159, 160, 185, 202, 204, 208, 244, 250, 254, 260, 261, 267, 270, 271, 272, 279, 286, 289, 290, 308, 309, 313, 314, 319, 326, 327, 328, 329, 330, 334, 335, 337, 342, 343, 344, 346, 347, 348, 349, 351, 352, 361, 362, 363, 364, 393, 394, 397, 406, 439, 441], "dictionari": [2, 14, 15, 17, 20, 21, 22, 23, 24, 30, 34, 37, 42, 50, 56, 58, 60, 61, 65, 67, 72, 78, 79, 100, 105, 107, 108, 119, 122, 125, 128, 129, 130, 137, 141, 142, 149, 150, 153, 158, 159, 160, 163, 164, 202, 227, 232, 234, 242, 244, 312, 316, 329, 349, 351, 394, 411, 412, 413, 419, 423, 424, 427, 429, 435, 437, 442], "nest": [2, 3, 26, 30, 34, 35, 37, 39, 41, 42, 43, 50, 51, 56, 58, 60, 61, 64, 65, 67, 69, 70, 71, 72, 79, 85, 93, 94, 95, 98, 102, 115, 119, 122, 125, 128, 129, 130, 137, 149, 150, 153, 158, 159, 160, 177, 185, 225, 228, 232, 244, 311, 361, 362, 363, 364, 365, 379, 389, 419, 423, 424, 426, 436, 437, 439, 441], "construct": [2, 3, 5, 26, 30, 37, 42, 50, 57, 60, 61, 64, 67, 72, 73, 74, 77, 102, 119, 122, 125, 126, 128, 129, 137, 149, 150, 151, 153, 158, 159, 160, 165, 192, 195, 242, 244, 267, 271, 292, 316, 399, 417, 423, 424, 425, 428, 435, 437, 439, 442], "ram": [2, 128, 130, 431, 439], "prealloc": [2, 3, 149, 158, 437], "ve": [2, 66, 422, 425, 432], "extend": [2, 8, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 39, 45, 57, 60, 62, 63, 64, 70, 73, 74, 79, 92, 93, 96, 99, 100, 102, 103, 107, 108, 111, 113, 114, 117, 118, 178, 184, 217, 233, 244, 247, 344, 396, 415, 418, 419, 422, 423, 424, 425, 426, 430, 432, 435, 436, 438, 439, 441], "here": [2, 3, 4, 7, 8, 9, 10, 14, 15, 24, 113, 119, 122, 123, 124, 125, 129, 133, 137, 149, 150, 151, 152, 153, 158, 159, 160, 185, 232, 279, 388, 417, 418, 419, 422, 423, 424, 425, 426, 427, 428, 430, 432, 435, 436, 437, 439, 441, 442], "add": [2, 3, 4, 6, 24, 30, 34, 35, 37, 42, 43, 45, 50, 57, 60, 61, 62, 63, 64, 67, 69, 72, 73, 74, 92, 94, 99, 102, 103, 113, 114, 117, 118, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 185, 202, 204, 231, 234, 244, 267, 271, 280, 310, 326, 395, 424, 425, 426, 427, 428, 429, 430, 431, 432, 435, 436, 437, 439, 441], "string": [2, 21, 22, 23, 30, 37, 42, 45, 50, 52, 59, 60, 61, 67, 72, 78, 79, 89, 94, 119, 122, 125, 129, 137, 141, 147, 149, 150, 153, 158, 159, 160, 175, 202, 212, 225, 231, 239, 244, 267, 271, 308, 311, 312, 313, 325, 380, 398, 418, 422, 424, 425, 439], "element": [2, 3, 14, 15, 17, 20, 21, 22, 23, 24, 26, 28, 45, 46, 48, 54, 56, 57, 58, 62, 63, 64, 65, 72, 73, 74, 77, 79, 93, 94, 95, 96, 99, 100, 102, 107, 108, 113, 115, 119, 122, 125, 129, 137, 146, 149, 150, 153, 158, 159, 160, 178, 185, 190, 213, 222, 226, 227, 242, 246, 251, 252, 265, 266, 269, 302, 303, 308, 311, 315, 316, 320, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 340, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 361, 390, 418, 422, 424, 428, 430, 439, 442], "30": [2, 3, 64, 72, 107, 108, 181, 207, 291, 292, 379, 383, 386, 388, 430, 436, 437, 439], "none": [2, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 89, 90, 91, 93, 94, 95, 96, 98, 99, 100, 102, 105, 107, 108, 109, 111, 113, 115, 119, 122, 125, 126, 128, 129, 137, 140, 141, 142, 143, 147, 148, 149, 150, 151, 152, 153, 158, 159, 160, 161, 162, 163, 164, 165, 167, 169, 170, 171, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 195, 199, 201, 202, 204, 205, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 288, 289, 290, 296, 298, 299, 302, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314, 315, 316, 318, 319, 320, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 340, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 393, 394, 395, 396, 397, 398, 399, 403, 404, 405, 406, 408, 409, 411, 412, 413, 417, 419, 422, 423, 425, 426, 437, 439, 441], "int": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 89, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 105, 107, 108, 109, 113, 114, 115, 117, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 135, 136, 137, 141, 142, 143, 144, 145, 149, 150, 151, 152, 153, 155, 158, 159, 160, 163, 164, 165, 170, 178, 180, 181, 182, 184, 185, 186, 187, 189, 191, 194, 199, 200, 202, 206, 207, 208, 210, 212, 213, 216, 223, 224, 225, 228, 231, 232, 234, 236, 239, 244, 246, 247, 248, 251, 252, 253, 254, 256, 258, 259, 261, 262, 263, 264, 265, 266, 268, 269, 270, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 286, 288, 289, 290, 291, 292, 294, 295, 296, 298, 299, 307, 308, 309, 311, 312, 314, 316, 326, 327, 328, 335, 337, 338, 343, 344, 345, 346, 347, 351, 352, 361, 363, 364, 366, 367, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 383, 386, 388, 390, 391, 392, 394, 396, 399, 401, 411, 412, 413, 426, 437, 439], "entri": [2, 3, 14, 15, 20, 26, 30, 34, 35, 37, 39, 42, 43, 45, 50, 56, 58, 59, 60, 61, 65, 67, 69, 70, 72, 78, 79, 86, 107, 108, 119, 122, 123, 124, 125, 128, 129, 130, 131, 137, 141, 142, 149, 150, 153, 155, 158, 159, 160, 163, 164, 176, 177, 181, 185, 187, 188, 190, 191, 192, 193, 195, 196, 199, 203, 205, 206, 208, 210, 212, 215, 217, 220, 222, 224, 225, 226, 227, 229, 232, 234, 236, 239, 241, 244, 267, 275, 276, 307, 308, 311, 313, 314, 327, 329, 349, 361, 362, 363, 364, 417, 422, 424, 425, 427, 428, 429, 431, 435, 436, 437, 438, 439, 441, 442], "onto": [2, 8, 54, 56, 58, 65, 79, 170, 193, 246, 288, 303, 308, 309, 312, 313, 314, 315, 316, 361, 425, 437], "__setitem__": 2, "indic": [2, 3, 8, 14, 15, 16, 17, 20, 21, 22, 23, 24, 26, 28, 29, 31, 32, 33, 34, 35, 38, 39, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 62, 63, 64, 65, 66, 68, 69, 70, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 89, 92, 99, 100, 102, 103, 105, 106, 107, 108, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 135, 136, 137, 144, 145, 149, 150, 153, 155, 158, 159, 160, 163, 164, 177, 178, 185, 186, 225, 226, 227, 228, 234, 242, 244, 245, 251, 252, 272, 275, 276, 278, 288, 311, 313, 314, 322, 326, 327, 329, 330, 331, 333, 335, 336, 337, 342, 344, 346, 347, 348, 349, 351, 352, 359, 403, 413, 416, 419, 424, 425, 426, 430, 431, 432, 437, 439, 442], "without": [2, 3, 7, 9, 14, 15, 16, 17, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 60, 61, 65, 66, 67, 68, 69, 72, 77, 79, 80, 81, 82, 83, 84, 107, 108, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 163, 164, 179, 181, 192, 195, 230, 233, 244, 265, 266, 269, 270, 305, 306, 326, 327, 329, 330, 331, 333, 334, 335, 342, 346, 347, 348, 349, 351, 352, 360, 361, 362, 363, 364, 365, 409, 416, 417, 422, 423, 424, 426, 427, 428, 429, 430, 435, 436, 437, 439, 442], "updat": [2, 3, 4, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 30, 36, 37, 42, 45, 50, 56, 57, 58, 60, 61, 65, 66, 67, 72, 73, 79, 99, 100, 119, 122, 125, 129, 137, 143, 149, 150, 151, 152, 153, 158, 159, 160, 161, 162, 177, 179, 181, 182, 192, 194, 195, 202, 214, 225, 226, 232, 234, 238, 241, 242, 244, 246, 248, 249, 264, 265, 274, 279, 288, 312, 313, 314, 315, 316, 326, 327, 328, 329, 330, 331, 333, 335, 336, 337, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 359, 361, 362, 363, 364, 365, 394, 399, 401, 404, 405, 408, 409, 415, 419, 423, 424, 425, 426, 429, 432, 435, 436, 437, 439, 442], "length": [2, 23, 28, 29, 30, 31, 32, 33, 34, 35, 38, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 58, 59, 60, 66, 68, 69, 75, 77, 78, 79, 80, 81, 82, 83, 84, 89, 100, 107, 108, 111, 119, 122, 125, 129, 135, 136, 137, 149, 150, 153, 158, 159, 160, 178, 185, 205, 213, 241, 248, 251, 252, 254, 256, 258, 265, 269, 272, 274, 277, 278, 303, 315, 320, 390, 396, 422, 424, 425, 430, 432, 437, 439, 442], "cursor": [2, 57, 62, 63, 64, 73, 74, 102], "afterward": [2, 30, 37, 42, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 246, 247, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 279, 282, 283, 286, 288, 291, 292, 294, 299, 307, 309, 311, 314, 319, 322, 435, 442], "tell": [2, 3, 4, 7, 119, 151, 152, 232, 422, 425, 430, 435, 436], "our": [2, 3, 7, 8, 11, 21, 45, 64, 185, 381, 418, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 438, 439, 441], "far": [2, 57, 62, 63, 64, 66, 73, 74, 102, 268, 296, 297, 432, 437, 442], "empti": [2, 3, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 67, 68, 69, 72, 73, 74, 77, 79, 80, 81, 82, 83, 84, 96, 102, 119, 122, 125, 129, 136, 137, 146, 149, 150, 153, 158, 159, 160, 170, 192, 195, 212, 214, 228, 234, 237, 239, 242, 244, 315, 385, 422, 437], "64": [2, 3, 56, 58, 65, 79, 102, 185, 216, 254, 255, 263, 267, 271, 278, 279, 289, 359, 422, 423, 424, 425, 426, 428, 432, 434, 437, 439, 441, 442], "dtype": [2, 3, 14, 15, 17, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 89, 93, 94, 95, 99, 100, 107, 108, 115, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 135, 136, 137, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 163, 164, 165, 170, 173, 176, 177, 178, 179, 182, 183, 189, 192, 193, 194, 195, 196, 197, 202, 204, 205, 208, 210, 212, 214, 215, 217, 221, 224, 225, 227, 229, 230, 233, 234, 235, 237, 239, 244, 248, 250, 260, 261, 265, 266, 267, 269, 270, 271, 274, 280, 281, 288, 289, 290, 298, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314, 315, 316, 318, 320, 323, 326, 327, 329, 330, 331, 333, 334, 335, 342, 346, 347, 348, 349, 351, 352, 359, 361, 362, 363, 364, 367, 417, 426, 434, 437, 439, 441, 442], "unit8": 2, "img": 2, "randint": [2, 78, 102, 230, 439], "255": [2, 102, 230, 439], "uint8": [2, 3, 34, 56, 58, 65, 79, 123, 124, 141, 142, 196, 202, 210, 230, 423, 439], "next": [2, 3, 4, 8, 14, 15, 17, 26, 34, 35, 37, 39, 41, 43, 45, 50, 57, 62, 63, 64, 66, 69, 70, 72, 73, 74, 79, 89, 90, 91, 98, 100, 102, 107, 108, 113, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 135, 136, 137, 141, 142, 143, 147, 148, 149, 150, 153, 156, 157, 158, 159, 160, 161, 163, 164, 170, 176, 178, 181, 182, 184, 185, 190, 192, 195, 196, 197, 202, 203, 204, 205, 206, 210, 214, 215, 217, 220, 221, 225, 227, 229, 232, 235, 240, 241, 242, 244, 248, 266, 267, 270, 271, 274, 292, 311, 321, 323, 326, 327, 329, 330, 331, 333, 334, 335, 336, 342, 346, 347, 348, 349, 351, 352, 359, 360, 361, 362, 363, 364, 365, 381, 393, 394, 397, 423, 425, 426, 428, 432, 437, 438, 441, 442], "ask": [2, 3, 8, 100, 107, 108, 381, 424, 425, 427, 428, 435, 436, 438, 442], "automat": [2, 3, 5, 12, 19, 31, 45, 77, 80, 93, 95, 102, 108, 115, 119, 122, 125, 128, 129, 130, 137, 149, 150, 151, 152, 153, 158, 159, 160, 181, 192, 195, 208, 227, 240, 242, 251, 267, 271, 303, 311, 312, 316, 379, 389, 417, 422, 424, 427, 428, 435, 436, 437, 439, 441], "look": [2, 3, 5, 7, 8, 30, 37, 42, 50, 60, 61, 67, 72, 100, 119, 122, 125, 129, 137, 140, 149, 150, 151, 152, 153, 158, 159, 160, 202, 212, 213, 237, 244, 249, 312, 316, 317, 318, 418, 424, 425, 426, 427, 428, 429, 430, 431, 432, 435, 436, 437, 438, 439, 441, 442], "lead": [2, 3, 4, 8, 10, 26, 34, 35, 43, 50, 57, 64, 69, 79, 106, 119, 122, 123, 124, 125, 128, 129, 130, 131, 137, 149, 150, 153, 158, 159, 160, 227, 245, 268, 289, 296, 297, 302, 422, 425, 426, 435, 436, 437, 439, 441], "match": [2, 3, 6, 8, 14, 15, 17, 20, 21, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 59, 60, 61, 62, 63, 64, 67, 68, 69, 72, 73, 74, 77, 79, 80, 81, 82, 83, 84, 90, 102, 111, 119, 122, 123, 124, 125, 126, 128, 129, 130, 131, 137, 149, 150, 153, 158, 159, 160, 178, 182, 183, 185, 186, 187, 188, 189, 191, 192, 193, 194, 196, 197, 199, 201, 203, 204, 205, 206, 208, 210, 214, 215, 216, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 244, 251, 252, 259, 267, 271, 272, 277, 278, 295, 303, 307, 308, 312, 313, 315, 316, 319, 320, 327, 329, 335, 343, 345, 347, 349, 396, 401, 417, 418, 422, 424, 426, 434, 436, 437, 439, 442], "don": [2, 3, 4, 6, 7, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 185, 233, 423, 424, 426, 430, 439, 441, 442], "throw": [2, 30, 37, 42, 50, 56, 58, 60, 61, 65, 67, 72, 79, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244, 442], "rb_td": 2, "batch_siz": [2, 3, 8, 14, 15, 17, 26, 34, 37, 39, 45, 52, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 70, 72, 73, 74, 75, 78, 79, 89, 93, 94, 95, 99, 100, 101, 102, 107, 108, 113, 115, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 173, 176, 177, 178, 182, 184, 185, 189, 192, 195, 196, 197, 202, 210, 214, 215, 217, 221, 224, 225, 227, 233, 234, 235, 244, 248, 250, 258, 259, 260, 261, 264, 267, 271, 274, 288, 289, 290, 298, 299, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314, 315, 316, 318, 319, 320, 326, 327, 329, 330, 331, 333, 334, 335, 342, 346, 347, 348, 349, 351, 352, 359, 381, 390, 396, 417, 418, 422, 423, 424, 425, 430, 435, 436, 437, 439, 441, 442], "max": [2, 26, 54, 58, 73, 78, 89, 99, 100, 113, 136, 194, 228, 288, 327, 328, 329, 335, 345, 347, 349, 422, 424, 425, 426, 432], "label": [2, 58, 59, 66, 78, 79, 422, 435, 439], "100": [2, 14, 15, 17, 20, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 60, 61, 62, 63, 64, 67, 68, 69, 72, 73, 74, 75, 77, 80, 81, 82, 83, 84, 93, 95, 102, 107, 108, 113, 119, 120, 121, 122, 125, 129, 135, 136, 137, 149, 150, 153, 158, 159, 160, 188, 196, 208, 217, 222, 225, 244, 275, 276, 277, 309, 311, 381, 391, 409, 423, 424, 426, 427, 429, 432, 434, 435, 436, 437, 439, 441, 442], "rb_pytre": 2, "randn": [2, 3, 57, 60, 62, 63, 64, 73, 74, 93, 94, 95, 100, 102, 107, 108, 115, 119, 170, 184, 208, 250, 253, 254, 258, 260, 261, 265, 266, 269, 270, 275, 276, 277, 284, 286, 290, 303, 304, 305, 306, 307, 308, 312, 313, 315, 318, 319, 320, 326, 327, 329, 330, 331, 333, 334, 335, 342, 344, 346, 347, 348, 349, 351, 352, 361, 362, 363, 364, 398, 417, 426, 439, 441, 442], "c": [2, 3, 6, 7, 14, 15, 17, 20, 34, 37, 56, 58, 60, 64, 65, 72, 73, 74, 79, 94, 208, 230, 235, 269, 270, 423, 439], "zero": [2, 3, 4, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 67, 68, 69, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 93, 95, 102, 107, 108, 113, 115, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 170, 176, 182, 184, 186, 192, 194, 195, 208, 214, 217, 224, 242, 244, 247, 248, 255, 256, 257, 263, 264, 265, 266, 267, 269, 270, 271, 275, 276, 278, 279, 288, 289, 298, 314, 316, 322, 326, 327, 329, 330, 331, 333, 334, 335, 342, 346, 347, 348, 349, 351, 352, 359, 361, 362, 363, 364, 367, 425, 426, 439, 441, 442], "assert": [2, 3, 6, 17, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 60, 62, 63, 64, 65, 67, 68, 69, 72, 73, 74, 77, 79, 80, 81, 82, 83, 84, 102, 113, 119, 122, 125, 129, 132, 137, 149, 150, 153, 158, 159, 160, 165, 170, 175, 178, 182, 185, 188, 192, 195, 204, 215, 222, 234, 241, 250, 278, 299, 361, 362, 363, 364, 389, 390, 398, 430, 434, 439, 442], "len": [2, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 57, 62, 63, 64, 68, 69, 73, 74, 77, 80, 81, 82, 83, 84, 93, 95, 102, 115, 210, 251, 252, 272, 278, 422, 426, 430, 432, 435, 437, 438, 439, 441], "ambigu": [2, 57, 62, 63, 64, 73, 74, 102], "signatur": [2, 14, 15, 17, 20, 21, 22, 23, 24, 30, 37, 42, 45, 50, 57, 60, 61, 62, 63, 64, 67, 72, 73, 74, 79, 102, 111, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 173, 182, 189, 202, 212, 227, 233, 234, 237, 239, 244, 315, 418, 422, 426, 427, 437], "deal": [2, 3, 57, 62, 63, 64, 73, 74, 102, 344, 418, 422, 424, 436, 439], "interpret": [2, 3, 57, 62, 63, 64, 73, 74, 102, 423], "put": [2, 57, 62, 63, 64, 73, 74, 102, 129, 141, 142, 160, 163, 164, 241, 388, 413, 417, 423, 424, 425, 427, 435, 437], "solv": [2, 4, 7, 9, 10, 57, 62, 63, 64, 73, 74, 102, 416, 422, 423, 424, 430, 432, 435, 436, 437, 439], "clear": [2, 3, 11, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 60, 61, 62, 63, 64, 67, 68, 69, 72, 73, 74, 77, 80, 81, 82, 83, 84, 102, 119, 122, 125, 129, 133, 137, 149, 150, 153, 158, 159, 160, 244, 391, 427, 430], "cut": [2, 57, 62, 63, 64, 73, 74, 102], "distinct": [2, 3, 57, 62, 63, 64, 73, 74, 102, 182, 185, 429, 434], "view": [2, 3, 8, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 41, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 60, 61, 62, 63, 64, 67, 68, 69, 72, 73, 74, 77, 80, 81, 82, 83, 84, 102, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 179, 244, 261, 265, 269, 272, 427, 437, 439, 441, 442], "through": [2, 3, 4, 5, 8, 14, 15, 17, 19, 20, 21, 23, 24, 34, 35, 43, 57, 61, 62, 63, 64, 67, 69, 73, 74, 79, 102, 119, 120, 121, 122, 125, 128, 129, 130, 133, 135, 136, 137, 140, 149, 150, 151, 152, 153, 158, 159, 160, 181, 190, 192, 195, 213, 245, 250, 272, 289, 311, 312, 316, 317, 318, 322, 325, 344, 361, 362, 363, 364, 389, 417, 418, 422, 423, 424, 427, 429, 434, 435, 436, 437, 438, 439, 442], "collate_fn": [2, 57, 62, 63, 64, 72, 73, 74, 102, 439, 441], "__init__": [2, 3, 7, 125, 143, 161, 175, 179, 181, 182, 184, 185, 186, 189, 190, 192, 193, 195, 196, 197, 198, 200, 203, 204, 211, 213, 214, 215, 217, 220, 221, 224, 225, 226, 227, 228, 229, 231, 232, 233, 237, 238, 240, 241, 244, 248, 259, 261, 265, 269, 274, 320, 327, 329, 330, 335, 342, 347, 349, 351, 352, 419, 437, 442], "major": 2, "worri": [2, 75, 442], "though": [2, 4, 11, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 272, 424, 435, 436], "too": [2, 7, 14, 15, 17, 20, 21, 22, 23, 24, 28, 29, 31, 32, 33, 34, 35, 37, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 59, 60, 66, 68, 69, 72, 77, 80, 81, 82, 83, 84, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 179, 181, 182, 184, 185, 186, 189, 190, 193, 196, 197, 198, 200, 203, 204, 207, 211, 213, 214, 215, 217, 220, 221, 224, 225, 226, 227, 228, 229, 231, 232, 233, 237, 238, 240, 241, 244, 268, 296, 297, 326, 327, 328, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 342, 343, 344, 346, 347, 348, 349, 351, 352, 359, 361, 362, 363, 364, 423, 428, 431, 437, 439, 442], "latter": [2, 21, 22, 23, 30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244, 246, 247, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 279, 282, 283, 286, 288, 291, 292, 294, 299, 307, 309, 311, 314, 319, 322, 346, 411, 412], "inv": [2, 3, 178, 188, 194, 197, 202, 210, 217, 222, 224, 229, 233, 236, 244, 437], "obvious": [2, 426], "ignor": [2, 14, 15, 17, 20, 21, 22, 23, 24, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 59, 60, 61, 67, 68, 69, 72, 75, 77, 80, 81, 82, 83, 84, 91, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 194, 197, 221, 230, 244, 246, 247, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 275, 276, 279, 282, 283, 286, 288, 291, 292, 294, 299, 307, 309, 311, 314, 319, 322, 361, 439], "thread": [2, 3, 14, 15, 17, 20, 56, 58, 65, 79, 119, 120, 121, 135, 136, 149, 158, 159, 242], "prefetch": [2, 57, 64, 73, 74, 89, 422, 423, 425, 439], "advis": [2, 11, 431, 442], "techniqu": [2, 8, 149, 158, 423, 426, 430, 439], "real": [2, 5, 316, 418, 425, 426, 437, 438], "life": [2, 196, 438], "adopt": [2, 3, 5, 422, 442], "throughput": [2, 9, 136, 422], "constant": [2, 11, 36, 185, 208, 226, 419, 422, 424, 425, 442], "throughout": [2, 3, 326, 327, 328, 334, 335, 336, 337, 338, 339, 342, 343, 344, 346, 347, 348, 349, 352, 359, 424, 435, 442], "further": [2, 3, 5, 27, 422, 424, 426, 427], "refin": [2, 326, 327, 329, 330, 331, 333, 335, 336, 337, 342, 344, 346, 347, 348, 349, 351, 352, 359], "coupl": [2, 425, 428, 429, 437, 439], "first_elt": 2, "128": [2, 108, 120, 121, 135, 136, 255, 258, 423, 425, 426, 432, 435, 438, 439], "wa": [2, 3, 5, 7, 34, 35, 37, 43, 45, 57, 60, 62, 63, 64, 69, 72, 73, 74, 79, 100, 102, 106, 107, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 165, 177, 185, 202, 234, 269, 326, 328, 341, 343, 346, 348, 350, 367, 418, 423, 424, 427, 428, 434, 435, 439, 441], "print": [2, 3, 6, 7, 14, 15, 17, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 89, 99, 100, 102, 107, 108, 113, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 158, 159, 160, 163, 164, 169, 170, 175, 176, 177, 178, 181, 182, 185, 186, 190, 192, 193, 194, 195, 203, 208, 214, 215, 217, 220, 225, 227, 228, 229, 230, 241, 242, 244, 251, 252, 254, 255, 256, 257, 258, 261, 263, 264, 267, 271, 272, 275, 276, 277, 278, 284, 287, 288, 290, 303, 304, 305, 306, 307, 308, 311, 312, 313, 315, 316, 318, 320, 323, 344, 379, 409, 417, 419, 423, 424, 425, 426, 427, 428, 429, 430, 431, 434, 435, 436, 437, 438, 439, 441, 442], "influenti": 2, "latenc": [2, 3], "especi": [2, 3, 7, 8, 186], "larger": [2, 4, 72, 267, 271, 334, 342, 441], "volum": 2, "due": [2, 3, 5, 13, 21, 22, 23, 26, 429, 438, 439, 442], "memorymappedtensor": [2, 39, 56, 58, 70, 78, 93, 383, 430], "specifi": [2, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 60, 61, 62, 63, 64, 67, 68, 69, 72, 73, 74, 77, 79, 80, 81, 82, 83, 84, 102, 119, 122, 125, 129, 137, 141, 142, 149, 150, 151, 152, 153, 158, 159, 160, 161, 162, 163, 164, 191, 192, 193, 195, 220, 223, 226, 231, 235, 236, 244, 245, 248, 269, 315, 316, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 340, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 388, 417, 422, 424, 425, 426, 430, 435], "file": [2, 6, 7, 8, 56, 58, 65, 79, 91, 163, 380, 381, 383, 399, 419, 421, 423, 435, 439, 440], "locat": [2, 7, 56, 58, 65, 78, 79, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 173, 191, 196, 208, 219, 242, 268, 296, 297, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 422, 423, 424, 431, 435, 436, 439], "improv": [2, 4, 11, 200, 326, 418, 426, 435, 436, 439], "failur": [2, 4], "recoveri": 2, "were": [2, 7, 14, 15, 17, 20, 21, 22, 23, 24, 149, 158, 202, 424, 435, 439], "found": [2, 3, 6, 7, 10, 14, 15, 17, 20, 24, 26, 30, 34, 35, 37, 42, 43, 45, 50, 56, 58, 60, 61, 65, 67, 69, 72, 78, 79, 107, 108, 119, 122, 123, 124, 125, 128, 129, 130, 133, 137, 149, 150, 153, 158, 159, 160, 177, 179, 185, 205, 217, 220, 228, 241, 242, 244, 264, 277, 278, 312, 316, 343, 344, 346, 418, 422, 423, 425, 426, 427, 429, 431, 437, 439, 441], "rough": 2, "1x": 2, "83x": 2, "44x": 2, "long": [2, 3, 14, 15, 17, 20, 21, 22, 23, 24, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 59, 68, 69, 77, 80, 81, 82, 83, 84, 93, 100, 147, 148, 194, 232, 247, 269, 270, 334, 425, 426, 430, 439], "sharabl": [2, 149, 158], "collabor": 2, "rather": [2, 4, 111, 147, 148, 215, 242, 417, 418, 422, 423, 424, 427, 429, 435, 436, 439], "incur": [2, 120, 121, 135, 136], "transmiss": 2, "overhead": [2, 119, 120, 121, 122, 125, 129, 135, 136, 137, 149, 150, 153, 158, 159, 160, 176, 316], "content": [2, 3, 8, 17, 34, 35, 43, 56, 57, 58, 64, 65, 69, 73, 74, 79, 106, 107, 108, 119, 122, 125, 128, 129, 130, 137, 144, 149, 150, 153, 158, 159, 160, 214, 251, 252, 272, 277, 278, 312, 344, 424, 437, 441], "map": [2, 3, 8, 16, 18, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 64, 65, 67, 68, 69, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 89, 91, 93, 98, 99, 100, 119, 122, 125, 129, 137, 140, 141, 142, 149, 150, 151, 152, 153, 156, 157, 158, 159, 160, 163, 164, 166, 170, 178, 182, 183, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 199, 201, 202, 203, 204, 205, 206, 208, 210, 214, 215, 216, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 244, 261, 303, 304, 305, 306, 308, 312, 313, 315, 316, 318, 319, 320, 321, 329, 349, 359, 361, 394, 415, 417, 418, 422, 423, 424, 425, 428, 429, 438], "writer": [2, 57, 62, 63, 64, 73, 74, 92, 95, 100, 102, 103, 107, 113, 114, 115, 118, 424, 439], "tensordictroundrobinwrit": [2, 74, 102], "goe": [2, 4, 79, 151, 152, 422, 424, 435, 436, 442], "prioritizedsampl": [2, 57, 62, 63, 64, 73, 74, 100, 102, 331, 336, 359, 422, 439], "access": [2, 3, 7, 8, 11, 30, 37, 42, 50, 57, 60, 61, 67, 72, 94, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 173, 185, 212, 233, 237, 244, 413, 416, 422, 427, 435, 436, 437, 439, 441], "tensordictreplaybuff": [2, 57, 62, 63, 64, 73, 99, 100, 102, 107, 108, 113, 184, 185, 396, 409, 415, 422, 423, 425, 439], "mp": [2, 21, 22, 23, 126, 241, 242], "def": [2, 3, 25, 30, 37, 42, 50, 57, 60, 61, 62, 63, 64, 67, 72, 73, 74, 102, 119, 122, 125, 126, 129, 137, 143, 149, 150, 153, 158, 159, 160, 173, 175, 179, 181, 182, 184, 185, 186, 189, 190, 192, 193, 195, 196, 197, 198, 200, 203, 204, 211, 213, 214, 215, 217, 220, 221, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 237, 238, 240, 241, 242, 244, 245, 248, 261, 265, 266, 269, 270, 274, 279, 311, 312, 320, 327, 329, 330, 335, 342, 344, 347, 349, 351, 352, 379, 389, 418, 419, 422, 423, 426, 434, 435, 436, 437, 439, 441, 442], "td": [2, 3, 14, 15, 17, 20, 21, 22, 23, 24, 34, 37, 39, 45, 56, 57, 58, 60, 62, 63, 64, 65, 70, 72, 73, 74, 79, 93, 102, 113, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 135, 136, 137, 138, 139, 147, 148, 149, 150, 153, 154, 158, 159, 160, 161, 162, 176, 179, 182, 184, 186, 190, 192, 193, 194, 195, 203, 204, 205, 206, 208, 217, 220, 224, 227, 230, 234, 241, 248, 250, 260, 261, 264, 273, 274, 288, 289, 290, 298, 303, 304, 305, 306, 307, 308, 312, 313, 315, 318, 320, 359, 362, 363, 364, 368, 369, 370, 371, 372, 373, 375, 376, 377, 378, 380, 390, 398, 417, 418, 422, 423, 425, 436, 437, 438, 441], "__name__": [2, 3, 14, 15, 17, 20, 25, 62, 126, 242, 379, 423, 441], "__main__": [2, 3, 14, 15, 17, 20, 25, 62, 126, 242, 379, 441], "21": [2, 45, 79, 107, 108, 149, 151, 152, 158], "proc": 2, "target": [2, 4, 8, 24, 27, 30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 126, 129, 137, 149, 150, 153, 158, 159, 160, 226, 244, 287, 315, 316, 326, 327, 328, 329, 330, 331, 333, 335, 336, 339, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 359, 360, 361, 362, 363, 364, 365, 402, 408, 409, 418, 419, 425, 426, 432, 435, 437], "arg": [2, 3, 13, 14, 15, 17, 20, 21, 22, 23, 24, 29, 30, 31, 32, 34, 35, 37, 38, 42, 43, 44, 45, 47, 49, 50, 53, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 79, 80, 81, 82, 83, 84, 93, 94, 95, 96, 100, 102, 107, 108, 109, 111, 115, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 172, 178, 179, 180, 181, 182, 184, 185, 186, 189, 190, 193, 196, 197, 198, 200, 202, 203, 204, 206, 211, 212, 213, 214, 215, 217, 220, 221, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 244, 246, 248, 250, 251, 252, 259, 260, 264, 267, 271, 272, 273, 274, 288, 299, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 359, 361, 362, 363, 364, 365, 388, 392, 396, 399, 413, 423, 426], "join": [2, 126, 415, 423, 424, 426, 435], "now": [2, 3, 7, 57, 64, 73, 74, 102, 147, 148, 149, 185, 221, 278, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 434, 435, 436, 438, 439, 442], "20": [2, 45, 72, 78, 79, 107, 108, 113, 119, 122, 125, 129, 133, 137, 147, 148, 149, 150, 153, 158, 159, 160, 226, 244, 263, 265, 266, 269, 270, 287, 307, 390, 425, 439, 442], "_data": [2, 437], "It": [2, 3, 4, 7, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 59, 60, 61, 66, 67, 68, 69, 72, 73, 75, 77, 78, 80, 81, 82, 83, 84, 94, 102, 105, 113, 118, 119, 122, 125, 129, 131, 137, 143, 144, 149, 150, 151, 152, 153, 158, 159, 160, 163, 164, 165, 176, 182, 184, 185, 196, 202, 204, 208, 213, 226, 232, 234, 240, 242, 244, 246, 254, 256, 262, 264, 277, 278, 287, 288, 289, 291, 292, 298, 299, 309, 311, 314, 316, 326, 327, 328, 329, 334, 335, 336, 337, 338, 339, 342, 343, 344, 346, 347, 348, 349, 350, 352, 359, 360, 361, 379, 388, 394, 416, 417, 418, 422, 423, 425, 426, 427, 435, 436, 437, 438, 439, 441, 442], "difficult": [2, 4, 149, 431], "pai": [2, 8, 185, 422], "word": [2, 3, 11, 66, 344, 422, 430, 437, 442], "1m": [2, 402, 422, 424, 425], "doe": [2, 3, 18, 21, 30, 37, 42, 50, 56, 57, 58, 60, 61, 65, 67, 72, 73, 78, 79, 90, 91, 98, 99, 100, 107, 109, 111, 118, 119, 122, 125, 129, 137, 141, 142, 149, 150, 153, 158, 159, 160, 163, 164, 178, 179, 181, 182, 184, 185, 186, 189, 190, 193, 196, 197, 198, 200, 203, 204, 211, 213, 214, 215, 217, 220, 221, 224, 225, 226, 227, 228, 229, 231, 232, 233, 237, 238, 240, 241, 242, 244, 249, 258, 259, 265, 266, 267, 269, 270, 271, 280, 287, 299, 307, 317, 318, 326, 328, 336, 343, 344, 346, 360, 399, 418, 419, 422, 423, 424, 425, 427, 430, 435, 437, 439, 442], "howev": [2, 3, 5, 7, 30, 37, 42, 50, 60, 61, 67, 72, 107, 108, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 179, 181, 182, 184, 185, 186, 189, 190, 193, 196, 197, 198, 200, 202, 203, 204, 211, 213, 214, 215, 217, 220, 221, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 237, 238, 240, 241, 244, 326, 328, 329, 343, 346, 348, 349, 417, 422, 423, 425, 426, 429, 437, 439, 442], "capac": [2, 57, 64, 73, 74, 93, 95, 99, 107, 115, 424, 430], "There": [2, 3, 10, 102, 233, 249, 267, 271, 326, 346, 417, 418, 419, 424, 425, 426, 428, 430, 435, 436, 437, 439, 441, 442], "circumv": 2, "account": [2, 93, 95, 115, 119, 122, 125, 128, 129, 130, 137, 149, 150, 153, 158, 159, 160, 181, 190, 275, 276, 417, 423, 425, 439, 442], "save": [2, 3, 8, 30, 37, 42, 50, 56, 57, 58, 60, 61, 62, 63, 64, 65, 67, 70, 72, 73, 74, 79, 90, 91, 93, 94, 95, 96, 98, 102, 109, 110, 111, 115, 116, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 240, 244, 380, 381, 383, 388, 399, 419, 426, 430, 431, 432, 435, 436], "convent": [2, 3, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 163, 164, 418, 422, 425, 435, 436, 437], "overridden": [2, 3, 30, 37, 42, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 246, 247, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 279, 282, 283, 286, 288, 291, 292, 294, 299, 307, 309, 311, 314, 319, 322, 361, 363, 364, 425, 435], "dim_extend": [2, 57, 64, 73, 74], "obtain": [2, 3, 7, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 66, 68, 69, 77, 80, 81, 82, 83, 84, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 184, 212, 226, 239, 248, 250, 287, 289, 396, 422, 424, 427, 428, 429, 435, 436], "counterpart": [2, 3, 185], "desir": [2, 3, 11, 14, 15, 17, 20, 30, 33, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 174, 180, 182, 189, 190, 208, 210, 212, 213, 227, 233, 234, 237, 239, 244, 251, 252, 259, 272, 278, 303, 308, 309, 312, 313, 314, 315, 316, 417, 422, 426, 435, 436, 437, 439], "diversifi": 2, "offer": [2, 3, 7, 119, 120, 121, 122, 125, 129, 135, 136, 137, 141, 142, 149, 150, 153, 158, 159, 160, 232, 379, 417, 422, 423, 426, 427, 429, 430, 435, 437, 439, 442], "accomplish": [2, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 165, 427], "__especially__": 2, "offlin": [2, 8, 14, 15, 17, 20, 21, 22, 23, 24, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 165, 179, 181, 182, 184, 185, 186, 189, 190, 193, 196, 197, 198, 200, 203, 204, 211, 213, 214, 215, 217, 220, 221, 224, 225, 226, 227, 228, 229, 231, 232, 233, 237, 238, 240, 241, 244, 327, 333, 334, 342, 351, 388, 419, 427, 438, 439], "docstr": [2, 30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244, 427, 428], "detail": [2, 3, 5, 6, 7, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 60, 61, 67, 68, 69, 72, 77, 80, 81, 82, 83, 84, 119, 122, 125, 129, 137, 149, 150, 151, 152, 153, 158, 159, 160, 230, 234, 244, 249, 261, 265, 269, 279, 287, 309, 326, 336, 344, 346, 416, 419, 423, 426, 430, 434, 439], "happi": [2, 426], "concaten": [2, 8, 14, 15, 24, 45, 46, 48, 79, 185, 186, 208, 224, 269, 272, 318, 422, 423, 428, 435, 436, 437, 439, 442], "schedul": [2, 4, 7, 66, 394, 424, 437], "transformedenv": [2, 3, 11, 12, 50, 119, 122, 125, 126, 129, 137, 149, 150, 153, 158, 159, 160, 178, 179, 182, 185, 188, 189, 190, 192, 195, 196, 197, 203, 204, 205, 207, 208, 210, 214, 215, 216, 217, 220, 221, 222, 225, 226, 227, 228, 232, 233, 241, 244, 267, 271, 311, 381, 389, 422, 423, 424, 425, 426, 427, 431, 432, 434, 435, 436, 437, 438, 439, 441, 442], "stepcount": [2, 45, 50, 119, 122, 125, 129, 137, 141, 142, 149, 150, 153, 158, 159, 160, 163, 164, 190, 232, 233, 234, 244, 250, 422, 423, 424, 425, 426, 427, 432, 435, 436, 441], "gymenv": [2, 3, 5, 11, 14, 15, 17, 20, 24, 25, 39, 45, 50, 62, 70, 72, 113, 119, 122, 125, 126, 129, 131, 137, 149, 150, 153, 158, 159, 160, 178, 181, 182, 185, 188, 189, 190, 196, 202, 203, 204, 208, 210, 215, 216, 217, 220, 222, 226, 227, 228, 229, 232, 233, 234, 235, 241, 242, 244, 250, 267, 271, 311, 379, 381, 409, 415, 417, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 438, 439, 441, 442], "randompolici": [2, 14, 15, 17, 20, 21, 22, 23, 24, 25, 50, 185, 217, 415, 430, 439], "cartpol": [2, 3, 11, 39, 50, 70, 72, 119, 122, 123, 124, 125, 126, 129, 137, 149, 150, 153, 158, 159, 160, 181, 182, 185, 220, 226, 241, 244, 311, 379, 423, 425, 428, 430, 431, 432, 439, 442], "v1": [2, 3, 11, 14, 15, 17, 20, 24, 25, 39, 50, 62, 70, 72, 113, 119, 122, 125, 126, 128, 129, 130, 135, 136, 137, 144, 149, 150, 153, 158, 159, 160, 181, 182, 185, 188, 190, 197, 203, 204, 208, 215, 217, 220, 221, 222, 225, 226, 227, 228, 229, 232, 233, 235, 241, 242, 244, 250, 267, 271, 311, 355, 370, 371, 372, 373, 375, 376, 377, 378, 379, 417, 423, 425, 427, 428, 429, 430, 431, 432, 437, 439, 441, 442], "action_spec": [2, 3, 14, 15, 17, 20, 21, 22, 23, 24, 50, 119, 120, 121, 122, 125, 129, 135, 136, 137, 143, 149, 150, 151, 152, 153, 154, 158, 159, 160, 178, 179, 182, 185, 189, 192, 193, 195, 204, 208, 214, 217, 233, 234, 235, 236, 244, 248, 261, 274, 290, 292, 303, 308, 312, 313, 327, 329, 331, 333, 347, 349, 351, 352, 409, 417, 422, 423, 424, 425, 426, 428, 429, 430, 432, 434, 435, 436, 437, 438, 439, 441, 442], "8": [2, 3, 6, 7, 34, 35, 43, 50, 64, 69, 72, 99, 100, 107, 108, 119, 120, 121, 122, 123, 124, 125, 129, 137, 147, 148, 149, 150, 153, 158, 159, 160, 161, 178, 181, 190, 226, 229, 235, 242, 251, 252, 254, 255, 263, 272, 304, 305, 306, 312, 315, 318, 342, 422, 423, 437, 439, 441], "traj_kei": [2, 100, 107, 108, 439], "truncated_kei": [2, 100, 107, 108, 217, 225], "strict_length": [2, 100, 107, 108, 381], "enumer": [2, 14, 15, 17, 24, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 60, 61, 64, 67, 68, 69, 70, 72, 74, 77, 80, 81, 82, 83, 84, 108, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244, 353, 418, 422, 423, 424, 425, 432, 435, 439, 441], "break": [2, 5, 14, 15, 17, 20, 24, 30, 37, 42, 50, 60, 61, 62, 64, 67, 72, 74, 89, 100, 107, 108, 113, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 182, 185, 217, 241, 242, 244, 267, 271, 296, 381, 423, 426, 430, 432, 439, 441], "step_count": [2, 14, 15, 17, 50, 119, 122, 125, 129, 135, 136, 137, 149, 150, 153, 158, 159, 160, 190, 225, 244, 424, 425, 426, 427, 432], "32": [2, 25, 34, 57, 62, 63, 64, 73, 74, 102, 108, 129, 136, 156, 157, 163, 164, 185, 202, 251, 252, 253, 254, 255, 257, 258, 263, 272, 277, 278, 282, 283, 286, 289, 298, 359, 379, 423, 425, 426, 428, 429, 437, 438, 439, 441, 442], "33": [2, 30, 34, 37, 42, 50, 60, 61, 67, 72, 102, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244, 251, 252, 272], "34": [2, 251, 252, 272], "35": [2, 251, 252, 272], "36": 2, "37": [2, 184], "38": [2, 7, 45], "39": [2, 135, 136], "40": [2, 72, 135, 136], "41": [2, 107], "11": [2, 10, 26, 45, 54, 72, 78, 79, 93, 94, 95, 99, 108, 115, 126, 178, 230, 244, 248, 274], "12": [2, 7, 10, 45, 72, 93, 95, 108, 115, 135, 136, 149, 156, 157, 158, 242, 244, 381, 439], "13": [2, 5, 72, 107, 108, 155, 240, 242, 244, 245], "14": [2, 6, 72, 107, 108, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 208, 244, 245], "15": [2, 26, 108, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244, 288, 307, 337, 439], "16": [2, 3, 14, 15, 20, 30, 37, 42, 50, 60, 61, 67, 72, 100, 108, 119, 120, 121, 122, 125, 129, 135, 136, 137, 149, 150, 153, 158, 159, 160, 185, 244, 425, 439], "17": [2, 11, 107, 108, 129, 149, 178, 244], "could": [2, 3, 4, 6, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 60, 61, 67, 68, 69, 72, 77, 80, 81, 82, 83, 84, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244, 316, 423, 424, 431, 435, 436, 438, 442], "sai": [2, 30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244, 277, 435, 438, 442], "interleav": 2, "cannot": [2, 3, 4, 7, 14, 15, 17, 20, 21, 22, 23, 24, 25, 34, 48, 54, 64, 73, 74, 95, 96, 100, 103, 107, 108, 115, 119, 122, 125, 128, 129, 130, 133, 137, 149, 150, 153, 158, 159, 160, 192, 195, 213, 220, 232, 277, 278, 313, 326, 329, 346, 423, 424, 425, 426, 435, 436, 437], "suggest": [2, 359, 422, 436], "serialenv": [2, 3, 119, 122, 125, 129, 137, 149, 150, 153, 159, 160, 227, 242, 244, 250, 311, 415, 441, 442], "squeez": [2, 3, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 181, 182, 185, 223, 226, 251, 252, 293, 294, 422, 426, 437, 439], "6": [2, 3, 7, 14, 15, 17, 20, 26, 45, 50, 64, 67, 72, 79, 100, 108, 123, 124, 129, 149, 156, 157, 178, 181, 190, 208, 210, 226, 232, 242, 250, 251, 252, 254, 255, 256, 259, 263, 266, 272, 277, 278, 279, 282, 295, 311, 312, 320, 423, 426, 441], "5": [2, 3, 14, 15, 17, 20, 26, 33, 34, 35, 43, 45, 46, 47, 48, 49, 50, 54, 57, 62, 64, 67, 69, 72, 73, 74, 102, 107, 108, 113, 119, 122, 125, 126, 129, 135, 136, 137, 141, 142, 144, 149, 150, 153, 156, 157, 158, 159, 160, 163, 164, 178, 181, 182, 184, 190, 205, 217, 224, 225, 226, 232, 242, 244, 247, 248, 249, 250, 251, 252, 254, 255, 260, 261, 262, 263, 265, 268, 269, 272, 274, 277, 278, 282, 287, 290, 296, 297, 307, 308, 311, 313, 319, 343, 346, 348, 351, 352, 379, 417, 421, 422, 423, 426, 428, 432, 435, 436, 437, 439, 440, 441, 442], "7": [2, 3, 6, 10, 37, 45, 50, 54, 57, 64, 72, 73, 100, 108, 119, 122, 125, 129, 137, 141, 142, 149, 150, 153, 158, 159, 160, 178, 181, 190, 226, 229, 242, 248, 250, 251, 252, 255, 272, 274, 277, 367, 422, 439, 441], "9": [2, 3, 7, 26, 30, 45, 50, 57, 64, 72, 73, 79, 100, 108, 113, 123, 124, 140, 151, 152, 160, 178, 181, 190, 226, 229, 234, 241, 242, 244, 275, 276, 326, 327, 329, 330, 331, 333, 335, 336, 337, 342, 344, 346, 347, 348, 349, 351, 352, 353, 359, 389, 418, 422, 423, 435, 436], "18": [2, 45, 107, 108, 156, 157, 163, 164, 232, 244, 278], "19": [2, 107, 108, 113, 244, 421, 440], "independ": [2, 14, 15, 17, 20, 21, 22, 23, 24, 149, 158, 199, 206, 227, 236, 249, 278, 302, 326, 346, 418, 419, 422, 423, 436, 439, 441], "congruent": 2, "name": [2, 3, 6, 7, 17, 30, 34, 35, 37, 42, 43, 50, 56, 58, 60, 61, 65, 67, 69, 72, 78, 79, 89, 119, 120, 122, 123, 125, 129, 135, 137, 140, 141, 142, 144, 147, 149, 150, 151, 152, 153, 155, 158, 159, 160, 163, 164, 166, 173, 177, 178, 179, 181, 182, 184, 185, 186, 189, 190, 193, 194, 196, 197, 198, 200, 202, 203, 204, 211, 213, 214, 215, 217, 220, 221, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 237, 238, 240, 241, 244, 245, 267, 271, 308, 313, 326, 327, 328, 329, 334, 335, 336, 337, 338, 339, 342, 343, 344, 346, 347, 348, 349, 352, 359, 361, 363, 364, 365, 379, 383, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 419, 422, 423, 424, 425, 426, 429, 430, 431, 435, 436, 437, 438, 442], "randomcroptensordict": [2, 422], "unlik": [2, 28, 64, 73, 74, 106, 129, 141, 142, 163, 164, 247, 249, 311, 336, 346, 381, 417, 423, 426, 428, 430, 441], "stop": [2, 3, 14, 15, 17, 20, 24, 66, 100, 107, 108, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 424, 430, 435, 436, 441, 442], "signal": [2, 3, 14, 15, 17, 20, 26, 45, 100, 107, 108, 113, 119, 122, 125, 129, 137, 141, 142, 149, 150, 153, 158, 159, 160, 163, 164, 177, 185, 190, 196, 205, 225, 228, 418, 422, 424, 435, 436, 439, 442], "disk": [2, 3, 45, 56, 57, 58, 62, 63, 64, 65, 73, 74, 79, 93, 102, 399, 419, 422, 423, 425, 426, 430, 431, 435, 439], "dump": [2, 3, 11, 39, 56, 57, 58, 62, 63, 64, 65, 70, 73, 74, 79, 91, 93, 94, 95, 96, 102, 109, 111, 115, 379, 380, 381, 431, 432, 435], "json": 2, "metadata": [2, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 119, 122, 125, 126, 129, 137, 149, 150, 153, 158, 159, 160, 329, 351, 424, 427, 429, 430, 435, 436, 442], "anticip": [2, 192, 195], "compli": [2, 249, 417], "back": [2, 27, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 57, 68, 69, 77, 80, 81, 82, 83, 84, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 165, 231, 240, 279, 303, 308, 309, 312, 313, 314, 315, 316, 424, 426, 435, 436, 437, 439], "exact": [2, 3, 26, 149, 269], "statu": [2, 3, 125], "prioriti": [2, 4, 57, 73, 74, 93, 94, 95, 96, 99, 100, 109, 111, 115, 329, 330, 331, 333, 334, 335, 336, 342, 347, 349, 351, 352, 359, 419, 422, 423, 439], "heap": 2, "under": [2, 3, 4, 24, 30, 37, 42, 45, 50, 60, 61, 66, 67, 72, 119, 122, 123, 124, 125, 128, 129, 130, 131, 137, 149, 150, 153, 155, 158, 159, 160, 179, 181, 182, 184, 185, 186, 189, 190, 193, 196, 197, 198, 200, 203, 204, 205, 211, 213, 214, 215, 217, 220, 221, 224, 225, 226, 227, 228, 229, 231, 232, 233, 237, 238, 240, 241, 244, 249, 303, 308, 309, 312, 313, 314, 315, 316, 344, 361, 362, 363, 364, 365, 381, 418, 422, 423, 428, 435, 437, 442], "hood": [2, 3, 24, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 249, 437], "naiv": [2, 237, 427], "just": [2, 3, 4, 79, 111, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 134, 135, 136, 137, 140, 144, 145, 147, 148, 149, 150, 151, 152, 153, 155, 158, 159, 160, 161, 162, 177, 181, 188, 227, 245, 278, 390, 419, 422, 423, 424, 425, 426, 427, 428, 430, 435, 436, 437, 439, 441, 442], "public": [2, 63, 110, 212, 239], "serializ": 2, "consum": [2, 106, 108, 311, 423, 424, 430, 436, 439], "much": [2, 3, 8, 14, 15, 20, 57, 73, 99, 100, 149, 158, 343, 346, 424, 426, 427, 431, 435, 436, 437, 439, 442], "duplic": [2, 30, 37, 42, 50, 60, 61, 67, 72, 106, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244, 327, 329, 331, 336, 342, 344, 347, 349, 351, 352, 359], "observ": [2, 3, 8, 14, 15, 17, 20, 24, 27, 39, 45, 50, 62, 70, 72, 79, 90, 91, 98, 100, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 163, 164, 171, 176, 178, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 199, 201, 202, 203, 204, 206, 208, 209, 210, 214, 215, 216, 217, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 244, 250, 253, 254, 255, 256, 257, 258, 261, 264, 267, 271, 277, 282, 283, 286, 287, 288, 290, 291, 303, 304, 305, 306, 307, 308, 311, 312, 313, 320, 321, 326, 327, 328, 329, 330, 331, 333, 334, 335, 338, 342, 343, 346, 347, 348, 349, 351, 352, 359, 361, 362, 363, 364, 365, 379, 381, 409, 417, 418, 419, 423, 424, 425, 426, 427, 428, 429, 431, 432, 434, 435, 436, 437, 439, 441, 442], "plu": [2, 14, 15, 20, 66, 149, 158, 437], "enabl": [2, 7, 8, 93, 95, 106, 115, 182, 267, 271, 288, 311, 379, 381, 394, 424, 427, 435, 436, 437, 439], "three": [2, 28, 29, 33, 38, 46, 47, 48, 49, 54, 55, 60, 89, 329, 417, 419, 424, 426, 427, 428, 435, 436, 437, 439, 442], "flatstoragecheckpoint": 2, "discard": [2, 3, 78, 129, 176, 237, 380, 439, 442], "compress": 2, "At": [2, 229, 264, 273, 423, 424, 425, 430, 434, 437, 438], "correct": [2, 4, 56, 58, 65, 79, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 185, 204, 402, 424, 425], "addit": [2, 3, 4, 16, 30, 37, 42, 50, 52, 60, 61, 67, 72, 79, 119, 122, 125, 126, 129, 137, 149, 150, 153, 158, 159, 160, 163, 185, 189, 212, 227, 231, 233, 234, 237, 239, 244, 246, 265, 307, 311, 315, 325, 344, 361, 379, 381, 418, 422, 423, 426, 427, 435, 436, 439], "nestedstoragecheckpoint": 2, "represent": [2, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 60, 61, 67, 68, 69, 72, 77, 79, 80, 81, 82, 83, 84, 94, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 212, 237, 239, 244, 326, 346, 422, 437, 438, 442], "appar": [2, 3, 392], "h5storagecheckpoint": 2, "h5db": 2, "space": [2, 9, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 90, 91, 98, 119, 122, 125, 128, 129, 130, 137, 149, 150, 153, 158, 159, 160, 170, 173, 178, 188, 194, 202, 205, 227, 235, 246, 252, 258, 261, 277, 283, 288, 290, 303, 308, 309, 312, 313, 314, 315, 316, 318, 319, 320, 323, 326, 331, 333, 334, 335, 346, 351, 352, 359, 417, 418, 423, 424, 425, 426, 427, 428, 429, 435, 436, 437, 442], "assumpt": [2, 3, 77, 437, 439], "accur": [2, 7, 423, 437, 439], "truncat": [2, 3, 14, 15, 17, 20, 39, 41, 45, 50, 51, 59, 70, 72, 75, 78, 90, 91, 98, 100, 107, 108, 119, 122, 123, 124, 125, 128, 129, 130, 137, 141, 142, 149, 150, 151, 152, 153, 158, 159, 160, 161, 163, 164, 177, 178, 196, 197, 202, 207, 214, 217, 221, 225, 227, 234, 235, 244, 267, 271, 297, 311, 361, 367, 422, 424, 427, 435, 442], "marl": [2, 140, 166, 185, 224, 228, 277, 278, 279, 335, 349, 418, 427, 435, 436], "extra": [2, 10, 30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 176, 185, 241, 242, 244, 388, 417, 424, 425, 439], "fail": [2, 7, 25, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 165, 179], "concret": [2, 422, 424], "set_se": [2, 3, 14, 15, 17, 20, 24, 39, 45, 50, 70, 72, 119, 120, 121, 122, 125, 129, 135, 136, 137, 143, 149, 150, 153, 158, 159, 160, 181, 190, 208, 215, 220, 226, 228, 234, 244, 426, 430, 432, 437, 441, 442], "manual_se": [2, 3, 28, 39, 46, 47, 57, 64, 70, 72, 73, 74, 94, 107, 108, 119, 120, 121, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 179, 181, 190, 194, 208, 217, 220, 226, 228, 242, 244, 264, 275, 276, 284, 287, 288, 303, 309, 316, 319, 326, 327, 329, 330, 334, 342, 349, 426, 430, 432, 435, 436, 437, 441, 442], "200": [2, 14, 15, 17, 24, 30, 37, 39, 42, 50, 60, 61, 62, 67, 70, 72, 119, 122, 125, 128, 129, 130, 137, 149, 150, 153, 158, 159, 160, 163, 164, 217, 244, 254, 255, 262, 291, 292, 379, 381, 422, 425, 426, 430, 432, 439], "22": [2, 107, 108, 240], "rb_test": 2, "_storag": [2, 438, 439], "max_siz": [2, 45, 57, 64, 72, 73, 74, 93, 94, 95, 96, 107, 108, 109, 113, 115, 424, 430], "102": 2, "path_to_save_dir": 2, "assert_allclose_td": 2, "altern": [2, 4, 33, 56, 58, 65, 79, 144, 232, 258, 275, 276, 277, 325, 329, 379, 422, 424, 426, 435, 436], "state_dict": [2, 14, 15, 17, 20, 24, 30, 37, 42, 50, 56, 58, 60, 61, 65, 67, 72, 79, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 202, 232, 234, 241, 242, 244, 277, 278, 329, 349, 413, 419, 422, 423, 442], "load_state_dict": [2, 14, 15, 17, 20, 24, 30, 37, 42, 50, 56, 58, 60, 61, 65, 67, 72, 79, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 232, 234, 241, 242, 244, 329, 349, 419, 422], "drawback": 2, "struggl": 2, "big": [2, 424, 430, 439, 442], "sequenti": [2, 9, 30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 184, 204, 244, 302, 304, 305, 306, 312, 317, 318, 323, 326, 327, 329, 335, 342, 346, 347, 348, 349, 351, 417, 424, 425, 428, 436, 437, 438, 441, 442], "known": [2, 3, 5, 7, 8, 72, 129, 227, 368, 369, 422, 423, 427], "indiffer": 2, "heavili": [2, 11], "smooth": [2, 247, 422, 423, 429], "essenti": [2, 3, 13, 21, 22, 23, 326, 327, 328, 334, 335, 336, 337, 338, 339, 342, 343, 344, 346, 347, 348, 349, 352, 359, 423, 427, 435, 437, 439], "purpos": [2, 3, 7, 11, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 185, 265, 326, 328, 340, 343, 346, 348, 409, 422, 424, 425, 426, 429, 431, 435, 436, 438, 442], "guid": [2, 11, 151, 152, 156, 157, 226, 416, 422, 436, 441], "explan": [2, 30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244, 249], "effect": [2, 3, 17, 30, 34, 37, 42, 50, 57, 60, 61, 64, 67, 72, 73, 74, 100, 102, 105, 107, 108, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 181, 185, 190, 234, 244, 249, 399, 417, 422, 428, 435, 439, 442], "realm": [2, 428], "As": [2, 3, 4, 50, 64, 73, 74, 77, 102, 119, 122, 125, 129, 137, 140, 149, 150, 151, 152, 153, 158, 159, 160, 217, 259, 316, 361, 417, 422, 423, 424, 425, 426, 427, 429, 430, 435, 436, 437, 438, 439, 441, 442], "practition": 2, "often": [2, 3, 8, 279, 341, 344, 399, 422, 423, 427, 429, 437, 439, 442], "encount": [2, 4, 206, 311, 416, 423, 428, 437], "situat": [2, 141, 142], "sometim": [2, 3, 77, 425, 442], "variabl": [2, 3, 4, 7, 8, 19, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 61, 67, 68, 69, 77, 80, 81, 82, 83, 84, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 135, 136, 137, 141, 142, 145, 146, 147, 148, 149, 150, 153, 155, 158, 159, 160, 161, 162, 163, 164, 229, 233, 242, 265, 266, 267, 269, 270, 271, 274, 304, 305, 306, 344, 347, 389, 419, 423], "immedi": [2, 30, 34, 35, 37, 42, 43, 50, 60, 61, 67, 69, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244, 360, 435, 436], "199": 2, "info": [2, 3, 14, 15, 57, 62, 63, 64, 73, 74, 79, 99, 100, 102, 105, 107, 108, 119, 122, 123, 124, 125, 128, 129, 130, 131, 137, 141, 142, 147, 148, 149, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 164, 202, 235, 237, 240, 243, 388, 427, 432, 435, 436, 439, 441], "glanc": [2, 427], "seem": [2, 422, 425, 427], "togeth": [2, 3, 11, 14, 15, 17, 20, 21, 22, 23, 24, 45, 60, 66, 68, 69, 94, 119, 122, 125, 129, 137, 140, 149, 150, 151, 152, 153, 158, 159, 160, 185, 213, 224, 233, 265, 267, 269, 271, 298, 304, 305, 306, 321, 417, 423, 425, 427, 435], "less": [2, 144, 299, 411, 412, 418, 424, 425, 439, 441], "omit": [2, 137, 246, 264, 288, 395, 424, 429, 437, 439], "proper": [2, 3, 4, 6, 7, 361, 362, 363, 364, 423, 424, 435, 436, 437, 439], "imposs": [2, 3, 64, 73, 74, 113, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 165, 326, 328, 343, 346, 348], "determin": [2, 3, 16, 45, 57, 73, 79, 99, 100, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 163, 164, 165, 212, 239, 277, 288, 329, 423, 428, 435, 436], "complic": [2, 37, 60, 72, 437, 439, 442], "matter": [2, 36, 430], "inconsist": [2, 442], "miss": [2, 3, 4, 6, 7, 30, 34, 37, 42, 45, 50, 60, 61, 67, 72, 119, 122, 125, 129, 130, 137, 149, 150, 153, 158, 159, 160, 176, 202, 232, 234, 240, 244, 245, 317, 318, 326, 329, 349, 416, 422, 425], "primari": [2, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 137, 430], "elimin": [2, 3, 427], "upon": [2, 3, 8, 19, 435, 437], "canon": 2, "definit": [2, 54, 109, 277], "markov": [2, 3, 427, 442], "mdp": [2, 176, 427, 437], "context": [2, 3, 5, 8, 13, 14, 15, 17, 20, 21, 22, 23, 24, 30, 37, 42, 50, 60, 61, 67, 72, 108, 119, 122, 125, 126, 129, 137, 146, 149, 150, 153, 158, 159, 160, 227, 236, 244, 249, 267, 271, 278, 280, 302, 307, 357, 358, 361, 362, 363, 364, 366, 374, 381, 389, 394, 417, 418, 422, 423, 424, 425, 426, 435, 436, 437, 438, 439, 441], "condit": [2, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 78, 80, 81, 82, 83, 84, 190, 226, 241, 308, 309, 311, 313, 314, 325, 418, 422, 435, 437, 439], "complet": [2, 7, 9, 106, 119, 122, 125, 128, 129, 130, 137, 149, 150, 153, 158, 159, 160, 185, 225, 416, 418, 422, 424, 427, 434], "termin": [2, 3, 7, 14, 15, 17, 20, 39, 41, 45, 50, 51, 66, 70, 72, 90, 91, 98, 107, 119, 122, 123, 124, 125, 128, 129, 130, 135, 136, 137, 141, 142, 147, 148, 149, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 163, 164, 177, 178, 181, 182, 196, 202, 214, 227, 235, 244, 248, 267, 271, 274, 311, 317, 326, 327, 329, 330, 331, 333, 334, 335, 342, 346, 347, 348, 349, 351, 352, 359, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 422, 423, 424, 435, 436, 437, 441, 442], "reward": [2, 3, 14, 15, 17, 36, 37, 39, 41, 45, 50, 51, 56, 65, 66, 70, 72, 78, 79, 89, 99, 100, 113, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 153, 155, 156, 157, 158, 159, 160, 161, 163, 164, 170, 176, 178, 179, 182, 183, 188, 189, 192, 193, 195, 196, 197, 202, 204, 205, 206, 210, 214, 215, 217, 218, 219, 220, 221, 222, 224, 225, 226, 231, 233, 234, 235, 236, 238, 239, 241, 242, 244, 248, 267, 274, 307, 311, 321, 326, 327, 329, 330, 331, 333, 334, 335, 338, 342, 344, 346, 347, 348, 349, 351, 352, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 392, 393, 394, 397, 413, 418, 419, 422, 423, 424, 425, 426, 427, 431, 435, 436, 437, 441, 442], "imit": [2, 3, 340], "inform": [2, 3, 4, 14, 15, 17, 20, 21, 22, 23, 24, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 60, 61, 65, 67, 68, 69, 72, 75, 77, 79, 80, 81, 82, 83, 84, 119, 122, 125, 126, 129, 132, 136, 137, 149, 150, 153, 158, 159, 160, 244, 250, 251, 252, 272, 278, 417, 418, 419, 422, 423, 424, 425, 426, 427, 435, 436, 437, 439, 441], "stateless": [2, 3, 45, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 182, 190, 242, 344, 379, 422, 427, 437, 442], "simul": [2, 3, 5, 7, 8, 77, 120, 121, 122, 131, 135, 136, 155, 163, 164, 172, 248, 274, 417, 422, 424, 426, 427, 431, 435, 436], "furthermor": [2, 435, 436], "certain": [2, 4, 21, 22, 23, 24, 30, 37, 42, 50, 60, 61, 67, 72, 78, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 175, 190, 200, 225, 234, 244, 264, 266, 270, 343, 422, 423, 424, 426, 432, 435, 436, 442], "composit": [2, 3, 28, 29, 31, 32, 33, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 79, 80, 81, 82, 83, 84, 86, 105, 111, 118, 119, 122, 125, 127, 129, 137, 143, 149, 150, 153, 158, 159, 160, 170, 177, 179, 182, 192, 193, 194, 195, 197, 202, 204, 206, 214, 215, 221, 225, 227, 231, 232, 233, 235, 242, 244, 246, 248, 274, 303, 312, 316, 318, 319, 323, 326, 346, 415, 422, 424, 428, 437], "uniform": [2, 57, 73, 99, 100, 435], "unambigu": 2, "distinguish": [2, 3, 64, 73, 74, 141, 142, 163, 164], "happen": [2, 3, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 245, 288, 423, 426, 429, 430, 431, 438, 442], "everyth": [2, 423, 424, 425, 431, 432], "belong": [2, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 240, 241, 316, 422, 430, 436], "rule": [2, 30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 192, 195, 244, 316, 417, 424], "field": [2, 3, 14, 15, 17, 20, 26, 30, 34, 37, 39, 42, 45, 50, 56, 58, 59, 60, 61, 65, 66, 67, 70, 72, 73, 74, 75, 77, 78, 79, 93, 94, 95, 99, 107, 115, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 135, 136, 137, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 163, 164, 176, 178, 182, 192, 195, 196, 197, 202, 210, 214, 215, 217, 221, 224, 225, 227, 232, 234, 235, 244, 248, 250, 260, 261, 267, 271, 274, 288, 289, 290, 298, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314, 315, 318, 320, 326, 327, 329, 330, 331, 333, 334, 335, 342, 346, 347, 348, 349, 351, 352, 359, 403, 416, 417, 423, 437], "taken": [2, 3, 28, 29, 33, 38, 46, 47, 48, 49, 54, 55, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 178, 216, 275, 276, 418, 422, 424, 425, 428, 435, 436, 437], "is_shar": [2, 3, 14, 15, 17, 26, 34, 37, 39, 45, 56, 58, 59, 60, 65, 66, 70, 72, 73, 74, 75, 78, 79, 89, 93, 94, 95, 99, 107, 115, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 135, 136, 137, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 163, 164, 176, 178, 182, 192, 195, 196, 197, 202, 210, 214, 215, 217, 221, 224, 225, 227, 235, 241, 248, 250, 260, 261, 267, 271, 274, 288, 289, 290, 298, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314, 315, 318, 320, 326, 327, 329, 330, 331, 333, 334, 335, 342, 346, 347, 348, 349, 351, 352, 359, 417, 437], "envbas": [2, 3, 14, 15, 17, 20, 21, 22, 23, 24, 45, 79, 119, 122, 126, 129, 137, 149, 150, 153, 158, 159, 160, 165, 176, 179, 182, 192, 195, 207, 214, 215, 233, 234, 241, 244, 248, 267, 271, 273, 274, 311, 394, 403, 404, 405, 409, 411, 412, 413, 415, 427], "brought": [2, 424, 425, 428], "step_mdp": [2, 3, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 267, 271, 415, 425, 427, 437, 441, 442], "count": [2, 3, 14, 15, 17, 20, 45, 50, 79, 125, 126, 225, 232, 242, 288, 394, 399, 402, 422, 423, 424, 425, 439, 442], "trigger": [2, 7, 37, 60, 72, 242], "turn": [2, 21, 22, 23, 24, 34, 35, 43, 56, 58, 61, 65, 67, 69, 79, 122, 136, 149, 160, 201, 233, 236, 240, 308, 361, 379, 394, 418, 422, 423, 425, 428, 437, 438], "retain": [2, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "regard": [2, 261, 309, 326, 336, 346, 422, 424, 437], "expand": [2, 8, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 56, 58, 65, 68, 69, 77, 79, 80, 81, 82, 83, 84, 93, 107, 108, 182, 227, 259, 315, 318, 327, 329, 342, 344, 347, 349, 351, 352, 435, 436, 437, 439, 441], "recur": [2, 326, 327, 329, 330, 331, 333, 334, 335, 342, 346, 347, 348, 349, 351, 352, 361, 362, 363, 364, 365, 428], "anyth": [2, 4, 14, 15, 17, 20, 21, 22, 23, 24, 418], "els": [2, 120, 121, 182, 265, 266, 269, 270, 282, 417, 419, 422, 423, 424, 425, 435, 436, 437, 438], "repetit": [2, 424, 427, 430], "embed": [2, 212, 237, 238, 239, 254, 289, 303, 304, 305, 306, 315, 316, 320, 438], "strictli": [2, 3, 8, 30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 205, 232, 234, 244, 329, 349, 422, 424], "enforc": [2, 30, 34, 37, 42, 50, 60, 61, 67, 72, 106, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 202, 232, 234, 244, 317, 329, 349, 437], "n_action": [2, 311, 327, 329, 331, 333, 345, 349], "rightmost": [2, 418], "n_ob": [2, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 204, 311, 326, 327, 329, 330, 331, 333, 334, 335, 342, 346, 347, 348, 349, 351, 352, 429], "estim": [2, 4, 100, 107, 108, 196, 204, 254, 296, 304, 305, 306, 326, 327, 328, 329, 330, 331, 333, 335, 336, 337, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 359, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 418, 423, 424, 428, 429, 435, 436], "subsequ": [2, 30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 181, 244, 425, 435], "proce": [2, 435], "state_valu": [2, 305, 306, 320, 328, 334, 342, 343, 346, 347, 349, 361, 362, 363, 364, 366, 368, 370, 372, 374, 375, 377, 417, 422, 436], "f": [2, 14, 15, 17, 20, 120, 121, 129, 135, 136, 229, 245, 270, 325, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 422, 423, 424, 425, 432, 435, 436, 437, 439, 442], "next_state_valu": [2, 351, 352, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 415], "broadcast": [2, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 259, 335, 349], "left": [2, 52, 100, 107, 182, 189, 191, 192, 193, 197, 204, 206, 212, 214, 215, 221, 225, 228, 231, 233, 235, 237, 239, 242, 244, 264, 277, 423, 424, 426, 430, 431], "would": [2, 3, 30, 37, 42, 50, 60, 61, 66, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244, 265, 267, 269, 271, 272, 277, 316, 418, 419, 423, 424, 425, 427, 429, 430, 437, 439, 441, 442], "best": [2, 5, 9, 133, 267, 271, 435, 436, 439, 441], "bug": [2, 4], "worst": [2, 423], "twice": [2, 8, 108], "feasibl": 2, "mostli": [2, 3, 20, 287, 381, 418, 431, 439, 442], "eas": [2, 3, 435, 436], "flat": [2, 113, 361], "manner": [2, 129, 212, 237, 417, 422, 423, 424, 430, 434, 437, 439], "ted2flat": [2, 39, 415], "flat2t": [2, 415], "unflatten": [2, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 182, 311], "deseri": [2, 3, 39], "posit": [2, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 60, 61, 62, 63, 64, 67, 68, 69, 72, 73, 74, 77, 80, 81, 82, 83, 84, 102, 119, 122, 123, 124, 125, 129, 137, 149, 150, 153, 158, 159, 160, 199, 200, 202, 223, 224, 225, 228, 232, 234, 236, 244, 329, 349, 418, 424, 435, 436, 437, 439], "both": [2, 3, 7, 13, 14, 15, 17, 20, 21, 22, 23, 24, 30, 37, 42, 50, 57, 60, 61, 64, 67, 72, 73, 74, 119, 122, 125, 126, 128, 129, 137, 141, 142, 149, 150, 151, 152, 153, 158, 159, 160, 161, 165, 177, 178, 185, 202, 215, 231, 232, 234, 244, 251, 252, 267, 270, 271, 272, 277, 278, 304, 305, 306, 309, 314, 326, 328, 329, 330, 334, 335, 342, 343, 344, 346, 347, 348, 349, 351, 352, 361, 394, 417, 422, 424, 426, 427, 429, 435, 436, 437, 438, 439, 442], "mark": [2, 3, 17, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 229, 267, 271, 361, 363, 364, 430, 439], "identifi": [2, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 59, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "abov": [2, 3, 7, 30, 37, 42, 50, 60, 61, 67, 72, 80, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 233, 244, 268, 296, 297, 325, 418, 419, 422, 424, 426, 427, 428, 435, 436, 437, 442], "output": [2, 3, 4, 14, 15, 17, 20, 21, 22, 23, 24, 30, 37, 42, 45, 50, 57, 60, 61, 64, 67, 72, 73, 74, 77, 79, 100, 107, 108, 119, 122, 123, 124, 125, 128, 129, 130, 131, 136, 137, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 155, 158, 159, 160, 161, 162, 163, 164, 165, 177, 182, 183, 185, 188, 189, 190, 191, 192, 193, 195, 197, 199, 202, 204, 206, 208, 212, 214, 215, 220, 221, 224, 225, 228, 229, 231, 233, 234, 235, 237, 239, 240, 242, 244, 246, 251, 252, 253, 254, 255, 258, 260, 261, 262, 265, 266, 267, 269, 270, 271, 272, 277, 278, 285, 287, 288, 290, 299, 303, 304, 307, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 323, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 359, 361, 362, 363, 364, 365, 379, 381, 390, 417, 418, 422, 423, 424, 425, 426, 427, 428, 431, 434, 435, 436, 437, 438, 441, 442], "typic": [2, 3, 4, 8, 13, 16, 17, 18, 21, 22, 23, 30, 37, 42, 50, 60, 61, 67, 72, 79, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 196, 226, 244, 285, 287, 312, 327, 329, 344, 346, 349, 417, 418, 419, 424, 426, 427, 429, 430, 435, 436, 437], "adjust": [2, 11, 227, 422, 435, 436, 437], "grumodul": [2, 184, 227, 302, 323, 425], "lstmmodul": [2, 267, 302, 425, 426], "skip": [2, 3, 16, 30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 165, 190, 200, 202, 206, 232, 234, 244, 312, 316, 329, 344, 349, 361, 362, 363, 364, 380, 381, 392, 394, 422, 423, 437], "accumul": [2, 8, 244], "upcom": [2, 344, 370, 371, 372, 373, 375, 376, 377, 378, 422], "popular": [2, 3, 417, 425, 429, 436], "rainbow": 2, "multistep": [2, 14, 15, 17, 20, 21, 22, 23, 24, 244, 415, 423], "shift": [2, 39, 41, 50, 51, 70, 90, 91, 98, 322, 361, 362, 363, 364, 424], "approxim": [2, 436, 442], "intens": [2, 3, 8], "ataridqnexperiencereplai": 2, "onlin": [2, 8, 14, 20, 185, 258, 286, 326, 332, 345, 346, 390, 413, 424, 425, 436, 439], "2x": 2, "small": [2, 108, 237, 242, 247, 422, 424, 426, 435, 436, 442], "clearer": [2, 426, 428], "lazi": [2, 3, 68, 69, 86, 87, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 163, 164, 212, 237, 251, 277, 280, 317, 318, 422, 423, 428, 430, 434, 439, 442], "certainli": 2, "welcom": [2, 427], "wrapper": [2, 3, 20, 56, 58, 65, 66, 73, 74, 79, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 169, 240, 245, 249, 250, 299, 307, 311, 316, 321, 361, 386, 387, 388, 413, 415, 424, 425, 427, 435, 436, 438, 441, 442], "around": [2, 5, 7, 20, 73, 74, 119, 122, 125, 129, 137, 143, 149, 150, 153, 154, 158, 159, 160, 249, 287, 311, 316, 361, 422, 423, 436, 442], "selecttransform": [2, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "excludetransform": [2, 221, 439], "promptli": 2, "virtual": [2, 3, 128], "instal": [2, 3, 5, 10, 21, 22, 23, 61, 72, 119, 122, 125, 129, 134, 137, 149, 150, 151, 152, 153, 156, 157, 158, 159, 160, 383, 399, 416, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 435, 436, 442], "respons": [2, 3, 8, 14, 15, 17, 19, 21, 23, 24, 100, 107, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 399, 429, 430, 442], "d4rl": 2, "repositori": [2, 7, 163, 164, 435, 436], "wheel": [2, 424], "publish": 2, "openml": [2, 146], "scikit": [2, 146], "panda": 2, "raw": [2, 3, 4, 66, 202, 231, 235, 268, 296, 297, 423, 426, 430, 437], "go": [2, 3, 7, 94, 140, 149, 190, 213, 217, 307, 367, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 441, 442], "modifi": [2, 3, 7, 8, 30, 37, 42, 50, 60, 61, 67, 72, 78, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 182, 185, 189, 190, 199, 202, 204, 212, 227, 233, 234, 237, 239, 242, 244, 279, 288, 307, 315, 316, 402, 418, 422, 423, 424, 426, 427, 435, 436, 437], "fly": [2, 185, 241, 343, 418, 424, 437, 439, 442], "least": [2, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 60, 68, 69, 77, 80, 81, 82, 83, 84, 100, 107, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 188, 431, 442], "pre": [2, 7, 25, 30, 37, 42, 50, 60, 61, 67, 72, 78, 95, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 212, 231, 237, 239, 244, 442], "conisder": 2, "per": [2, 3, 4, 14, 15, 17, 20, 21, 22, 23, 24, 100, 107, 113, 133, 135, 136, 149, 151, 152, 188, 206, 220, 251, 252, 262, 264, 277, 278, 311, 381, 383, 386, 388, 399, 411, 412, 422, 423, 424, 425, 426, 428, 429, 432, 435, 436, 439, 441], "pipelin": [2, 3, 7, 129, 417, 418, 424], "replac": [2, 3, 6, 7, 30, 37, 42, 50, 60, 61, 67, 72, 100, 107, 108, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 176, 181, 194, 196, 203, 241, 242, 244, 264, 361, 417, 435, 439, 441], "onc": [2, 3, 7, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 30, 37, 42, 50, 56, 58, 60, 61, 65, 67, 72, 79, 102, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 181, 206, 217, 227, 234, 244, 246, 288, 311, 397, 417, 419, 423, 424, 425, 428, 431, 437, 439, 442], "produc": [2, 3, 34, 35, 43, 45, 69, 107, 178, 181, 182, 251, 252, 272, 278, 284, 304, 306, 307, 316, 381, 424, 425, 426, 427, 428, 430, 439, 442], "download": [2, 7, 10, 13, 14, 15, 17, 20, 21, 22, 23, 24, 133, 212, 239, 381, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442], "forc": [2, 3, 6, 7, 14, 15, 20, 21, 22, 23, 24, 150, 423, 435, 436, 437], "robosetexperiencereplai": [2, 107, 108], "fk1": 2, "v4": [2, 129, 149, 178, 216, 370, 371, 372, 373, 375, 376, 377, 378, 422, 424, 438, 441], "expert": 2, "fk1_microopenrandom_v2d": 2, "func": [2, 243], "obs_norm": 2, "norm": [2, 4, 8, 120, 121, 247, 399, 422, 423, 424, 435, 436, 437], "num_work": [2, 56, 58, 78, 89, 144, 149, 158, 422, 423], "os": [2, 58, 78, 89, 423], "cpu_count": [2, 58, 78, 89], "num_chunk": 2, "1000": [2, 4, 17, 45, 64, 72, 93, 94, 99, 107, 108, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 185, 241, 246, 264, 287, 288, 312, 316, 341, 422, 423, 424, 425, 426, 428, 430, 432, 437, 438, 439], "mp_start_method": [2, 149, 158, 232, 423, 441], "fork": [2, 5, 422, 423, 424, 425, 435, 436, 438, 441], "recreat": [2, 437], "customari": 2, "moreov": [2, 3], "fine": [2, 3, 27, 64, 73, 74, 100, 102, 107, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 182, 204, 426, 430, 438], "grain": [2, 3, 64, 73, 74, 100, 102, 107, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 182], "nomenclatur": 2, "compact": [2, 45, 70, 90, 91, 98], "propos": [2, 185, 196, 249, 273, 341, 350, 417, 425, 439], "replaybufferensembl": [2, 105, 111, 118], "primit": [2, 3, 4, 326, 327, 329, 330, 331, 333, 334, 335, 342, 346, 347, 348, 349, 351, 352], "individu": [2, 4, 21, 22, 23, 24, 30, 37, 42, 50, 60, 61, 67, 72, 78, 100, 102, 113, 119, 122, 125, 129, 137, 141, 142, 149, 150, 153, 158, 159, 160, 242, 244, 422, 436], "dummi": [2, 3, 160, 379, 422, 426, 430, 442], "semant": [2, 68, 69, 128, 130, 438], "ident": [2, 3, 14, 15, 17, 50, 56, 58, 64, 65, 72, 73, 74, 79, 93, 102, 107, 119, 122, 125, 128, 129, 130, 137, 144, 149, 150, 153, 158, 159, 160, 196, 224, 233, 242, 247, 277, 278, 327, 329, 342, 347, 349, 351, 352, 361, 362, 363, 364, 411, 412, 423, 427, 435, 436], "another_kei": [2, 102], "renam": [2, 3, 56, 58, 65, 79, 102, 176, 215, 217, 422], "resiz": [2, 3, 102, 185, 423, 425, 426, 427, 439, 442], "imag": [2, 3, 4, 7, 11, 185, 187, 191, 212, 230, 239, 272, 379, 381, 422, 423, 426, 427, 431, 436, 438, 442], "comops": 2, "totensorimag": [2, 3, 102, 185, 216, 423, 425, 426, 439, 441, 442], "renametransform": [2, 3, 102, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 185], "rb0": [2, 102], "in_kei": [2, 3, 14, 15, 17, 20, 21, 22, 23, 24, 37, 45, 60, 62, 72, 102, 119, 120, 121, 122, 125, 129, 137, 143, 149, 150, 153, 158, 159, 160, 171, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 248, 250, 260, 267, 271, 274, 289, 298, 299, 303, 304, 305, 306, 307, 308, 311, 312, 313, 315, 316, 318, 319, 320, 323, 326, 327, 328, 329, 330, 331, 333, 334, 335, 340, 342, 343, 346, 347, 348, 349, 351, 352, 359, 361, 362, 363, 364, 380, 381, 409, 417, 422, 423, 424, 425, 426, 428, 429, 432, 434, 435, 436, 437, 438, 439, 441, 442], "pixel": [2, 3, 7, 34, 102, 122, 123, 124, 128, 130, 131, 155, 185, 187, 191, 196, 199, 201, 208, 210, 212, 216, 230, 237, 239, 254, 282, 283, 379, 381, 422, 423, 425, 426, 431, 435, 438, 439, 441, 442], "rb1": [2, 102], "out_kei": [2, 3, 14, 15, 17, 20, 21, 22, 23, 24, 37, 45, 60, 62, 72, 102, 119, 120, 121, 122, 125, 129, 137, 143, 149, 150, 153, 158, 159, 160, 171, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 244, 248, 250, 260, 261, 267, 271, 274, 289, 290, 298, 299, 303, 304, 305, 306, 307, 309, 311, 312, 313, 314, 315, 316, 318, 319, 320, 323, 326, 327, 328, 329, 334, 335, 340, 342, 343, 346, 347, 348, 349, 351, 359, 361, 362, 363, 364, 379, 381, 394, 409, 417, 422, 423, 424, 425, 426, 428, 432, 434, 435, 436, 437, 438, 439, 441, 442], "pixels33": [2, 102], "data0": [2, 94, 102], "244": [2, 102, 212, 239], "data1": [2, 94, 102, 441], "_": [2, 8, 57, 62, 63, 64, 73, 74, 94, 102, 122, 126, 133, 163, 164, 186, 192, 194, 195, 204, 208, 215, 230, 241, 244, 287, 303, 315, 316, 320, 325, 326, 327, 329, 330, 334, 335, 342, 346, 347, 349, 351, 352, 361, 362, 363, 364, 383, 422, 423, 424, 425, 426, 432, 435, 436, 437, 439, 441], "parent": [2, 3, 24, 30, 37, 41, 42, 50, 52, 60, 61, 67, 72, 77, 79, 102, 111, 118, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 178, 182, 185, 186, 189, 190, 193, 196, 199, 200, 206, 208, 212, 220, 225, 226, 227, 228, 232, 233, 236, 237, 244, 267, 271, 304, 323, 344, 346, 365, 379, 381, 422, 430, 437, 441, 442], "basic": [2, 3, 18, 143, 417, 424, 429, 430, 432, 435, 441, 442], "properti": [2, 3, 16, 18, 19, 24, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 67, 68, 69, 72, 73, 74, 77, 79, 80, 81, 82, 83, 84, 102, 119, 122, 125, 129, 137, 143, 149, 150, 153, 158, 159, 160, 181, 232, 233, 234, 241, 242, 244, 259, 268, 276, 280, 284, 295, 296, 297, 311, 326, 329, 344, 346, 348, 349, 428, 430, 437, 439], "input": [2, 3, 4, 14, 15, 17, 20, 21, 22, 23, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 65, 66, 67, 68, 69, 72, 75, 77, 79, 80, 81, 82, 83, 84, 110, 116, 119, 122, 125, 129, 137, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 158, 159, 160, 161, 162, 163, 164, 165, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 206, 210, 211, 212, 213, 214, 215, 217, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 247, 249, 250, 251, 252, 254, 255, 256, 257, 260, 261, 264, 265, 266, 267, 269, 270, 271, 272, 277, 278, 279, 280, 281, 288, 290, 291, 292, 293, 294, 296, 299, 303, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 323, 325, 326, 327, 328, 329, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 346, 347, 348, 349, 351, 352, 359, 360, 361, 362, 363, 364, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 393, 397, 402, 409, 417, 418, 419, 422, 423, 424, 425, 426, 427, 435, 436, 437, 441, 442], "send": [2, 3, 8, 19, 153, 159, 388, 415, 441], "receiv": [2, 3, 16, 18, 19, 30, 37, 42, 50, 60, 61, 66, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 233, 234, 242, 244, 272, 367, 415, 418, 422, 424, 429, 434, 437], "spawn": [2, 3, 4, 21, 25, 133, 144, 149, 158, 232, 423, 435, 436], "check_env_spec": [2, 3, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 178, 202, 214, 235, 379, 415, 424, 435, 436, 437], "saniti": [2, 3, 7, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 165, 424], "make_composite_from_td": [2, 77, 415, 437], "fall": [2, 4], "categori": [2, 34, 417, 419], "bound": [2, 3, 4, 24, 30, 32, 34, 37, 42, 50, 60, 61, 67, 72, 80, 119, 122, 125, 129, 137, 149, 150, 153, 154, 158, 159, 160, 188, 207, 241, 244, 246, 264, 288, 291, 292, 303, 308, 309, 312, 313, 314, 315, 316, 319, 326, 327, 329, 330, 342, 346, 347, 349, 351, 352, 415, 417, 422, 423, 424, 426, 435, 437, 441, 442], "unbound": [2, 3, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 62, 63, 64, 65, 68, 69, 73, 74, 77, 79, 81, 82, 83, 84, 102, 119, 122, 125, 129, 137, 143, 149, 150, 153, 158, 159, 160, 170, 179, 182, 192, 195, 214, 227, 248, 274, 303, 315, 318, 320, 348, 415, 437, 439], "boundeddiscret": [2, 31, 34], "boundedcontinu": [2, 25, 31, 34, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 202, 205, 235], "unboundeddiscret": [2, 80, 150, 202, 415], "unboundedcontinu": [2, 80, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 170, 214, 227, 318, 323, 415], "implicitli": 2, "onehot": [2, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 55, 68, 69, 77, 80, 81, 82, 83, 84, 120, 121, 128, 130, 131, 134, 135, 136, 144, 145, 147, 148, 155, 161, 162, 261, 290, 308, 313, 331, 333, 334, 335, 359, 415, 417], "multionehot": [2, 46, 47, 49, 331, 334, 335, 359, 415], "multicategor": [2, 47, 48, 49, 415], "binari": [2, 3, 7, 29, 30, 54, 161, 179, 183, 261, 290, 308, 309, 313, 314, 331, 334, 335, 359, 415], "concept": [2, 3, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 287, 423, 439], "arbitrari": [2, 3, 28, 54, 64, 119, 122, 125, 129, 136, 137, 149, 150, 153, 158, 159, 160, 181, 418, 422, 423, 437, 439], "combin": [2, 4, 40, 61, 351, 423, 426, 431, 439, 441], "nevertheless": [2, 3, 424, 427, 439], "otherwis": [2, 3, 12, 14, 15, 17, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 89, 100, 102, 107, 108, 119, 120, 121, 122, 125, 128, 129, 130, 131, 134, 135, 136, 137, 140, 141, 142, 144, 145, 147, 148, 149, 150, 151, 152, 153, 155, 158, 159, 160, 161, 162, 163, 164, 185, 186, 190, 194, 202, 208, 226, 227, 228, 232, 233, 234, 241, 244, 245, 247, 249, 265, 268, 269, 277, 278, 296, 297, 302, 308, 313, 316, 319, 327, 329, 338, 344, 345, 349, 361, 363, 364, 394, 396, 418, 419, 422, 423, 424, 425, 437, 442], "similarli": [2, 3, 24, 30, 37, 42, 50, 60, 61, 67, 72, 106, 111, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 206, 244, 277, 317, 318, 334, 342, 361, 442], "possess": [2, 77], "unsqueez": [2, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 79, 80, 81, 82, 83, 84, 100, 170, 179, 182, 185, 186, 230, 236, 422, 425, 426, 435, 436, 437], "move": [2, 4, 30, 37, 42, 50, 60, 61, 67, 72, 77, 119, 122, 125, 129, 130, 137, 149, 150, 153, 158, 159, 160, 176, 178, 189, 193, 212, 227, 233, 234, 237, 239, 241, 242, 244, 272, 315, 397, 422, 423, 425, 427, 442], "unbind": [2, 56, 57, 58, 64, 65, 73, 74, 79, 206, 311], "said": [2, 424], "neg": [2, 8, 14, 15, 17, 20, 21, 22, 23, 24, 57, 60, 73, 77, 99, 100, 185, 199, 213, 224, 236, 328, 337, 343, 346, 361, 363, 364, 418, 424, 435, 436, 437], "seen": [2, 3, 21, 22, 23, 24, 34, 35, 43, 69, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 193, 418, 422, 423, 425, 429, 435, 436, 439], "predict": [2, 3, 50, 66, 260, 262, 273, 274, 307, 321, 326, 328, 333, 336, 338, 339, 343, 346, 348, 360, 422, 423, 429], "deprec": [2, 26, 29, 30, 32, 35, 37, 38, 42, 43, 44, 47, 49, 50, 53, 55, 60, 61, 67, 72, 82, 84, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 202, 232, 234, 241, 244, 326, 328, 329, 331, 334, 335, 336, 342, 343, 346, 347, 348, 349, 359, 361, 362, 363, 364, 369, 442], "mont": [2, 326, 328, 343, 346, 422], "carlo": [2, 326, 328, 343, 346, 422], "mct": [2, 45], "act": [2, 3, 4, 107, 108, 151, 152, 234, 260, 278, 327, 329, 330, 342, 347, 349, 351, 352, 425, 426, 435, 436, 439, 441], "tradit": [2, 429, 435], "integ": [2, 14, 15, 17, 20, 26, 42, 46, 48, 50, 54, 60, 61, 66, 67, 79, 100, 107, 108, 109, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 178, 181, 196, 200, 208, 225, 242, 251, 252, 272, 277, 278, 329, 334, 342, 349, 418, 426, 439], "advanc": [2, 3, 24, 57, 64, 73, 74, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 427, 430, 439], "rebuild": [2, 45], "initi": [2, 4, 7, 13, 14, 15, 17, 20, 21, 22, 23, 24, 27, 28, 29, 30, 33, 37, 38, 42, 45, 46, 47, 48, 49, 50, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 72, 73, 74, 79, 102, 113, 119, 122, 125, 129, 137, 147, 148, 149, 150, 153, 158, 159, 160, 161, 184, 202, 208, 212, 227, 234, 237, 242, 243, 244, 245, 246, 247, 248, 264, 265, 266, 269, 270, 274, 277, 278, 279, 280, 281, 288, 311, 326, 327, 329, 330, 331, 333, 335, 336, 337, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 359, 413, 417, 418, 422, 423, 425, 427, 428, 430, 435, 437, 442], "pair": [2, 3, 50, 56, 58, 60, 65, 72, 79, 119, 122, 123, 124, 125, 129, 137, 149, 150, 153, 158, 159, 160, 217, 227, 232, 267, 304, 312, 316, 344, 361, 362, 363, 364, 365, 417, 418, 422, 423, 424, 428, 429, 434, 437, 442], "term": [2, 66, 94, 204, 269, 270, 280, 281, 325, 326, 335, 401, 423, 424, 427, 428, 436], "pseudocod": [2, 3], "next_stat": [2, 418], "associ": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 30, 34, 35, 37, 42, 43, 45, 50, 56, 58, 60, 61, 65, 67, 69, 72, 79, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 232, 244, 291, 413, 422, 439], "sens": [2, 4, 56, 58, 65, 79, 185, 430, 437], "hard": [2, 3, 7, 113, 123, 124, 149, 341, 423, 442], "know": [2, 3, 4, 9, 57, 64, 73, 74, 128, 130, 246, 344, 347, 394, 422, 423, 424, 425, 426, 427, 428, 429, 430, 435, 436, 439], "next_td": 2, "Of": [2, 3, 7, 416, 437, 442], "cours": [2, 3, 4, 416, 437, 442], "handi": [2, 3, 14, 15, 17, 20, 21, 22, 23, 24, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 431], "undertaken": [2, 79, 418, 437], "link": [2, 6, 7, 125, 423, 432], "hash": [2, 42, 45, 60, 61, 67, 72, 79, 122, 137], "past": [2, 4, 185, 311, 423, 439], "node_map": [2, 45], "_index": [2, 60, 72], "Then": [2, 7, 14, 15, 17, 20, 21, 22, 23, 24, 240, 424, 434], "track": [2, 3, 4, 14, 15, 17, 20, 21, 22, 23, 24, 74, 99, 100, 106, 122, 220, 229, 241, 242, 244, 288, 311, 386, 392, 423, 425, 427, 430, 436, 437, 439], "next_data": [2, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "data_map": [2, 45], "form": [2, 14, 15, 20, 30, 37, 42, 50, 57, 60, 61, 64, 67, 72, 73, 74, 90, 91, 98, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 241, 242, 244, 265, 267, 269, 271, 316, 325, 326, 328, 343, 346, 399, 417, 428], "figur": [2, 3, 79, 137, 422, 424, 425, 436, 437, 442], "flowchart": 2, "o": [2, 30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244, 270], "get_tre": [2, 45, 79], "vertex": [2, 79], "longer": [2, 79, 245, 423, 432, 435, 436, 439], "vertic": [2, 79], "branch": [2, 45, 79], "repeat": [2, 79, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 135, 136, 137, 144, 145, 149, 150, 153, 155, 158, 159, 160, 232, 248, 259, 424, 435, 436, 437], "depth": [2, 64, 77, 119, 122, 125, 129, 137, 143, 149, 150, 153, 155, 158, 159, 160, 248, 251, 252, 254, 255, 256, 257, 262, 263, 272, 274, 277, 278, 279, 282, 283, 308, 417, 423, 427, 429, 430, 434, 435, 436, 439], "until": [2, 3, 7, 24, 136, 228, 233, 244, 389, 424, 425, 432, 435, 436], "anymor": [2, 56, 58, 65, 79, 234, 315], "utmost": 2, "llm": [2, 66, 78, 89], "post": [2, 14, 15, 17, 20, 21, 22, 23, 24, 30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244], "grpo": 2, "commonli": [2, 100, 107, 108, 442], "emploi": [2, 281], "scarc": 2, "address": [2, 439], "subdomain": 2, "extern": [2, 3, 192, 195, 242, 435, 442], "token": [2, 58, 59, 66, 75, 78, 89, 137], "dm": [3, 422, 442], "experi": [3, 57, 64, 73, 74, 99, 100, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 165, 383, 384, 385, 386, 387, 388, 416, 423, 424, 426, 430, 431, 435, 436, 439], "box": [3, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 79, 80, 81, 82, 83, 84, 128, 130, 279, 344], "lib": [3, 5, 6, 7, 9, 10, 14, 15, 17, 20, 24, 25, 62, 119, 122, 125, 126, 129, 134, 137, 141, 142, 149, 150, 151, 152, 153, 156, 157, 158, 159, 160, 185, 188, 196, 203, 204, 208, 210, 215, 217, 220, 227, 233, 240, 241, 244, 379, 409, 422, 423, 424, 425, 434, 436, 438, 439, 441, 442], "hope": [3, 11], "nn": [3, 14, 15, 17, 20, 21, 22, 23, 24, 27, 30, 36, 37, 42, 50, 60, 61, 62, 66, 67, 72, 119, 120, 121, 122, 125, 129, 137, 143, 149, 150, 153, 158, 159, 160, 189, 194, 196, 204, 212, 227, 233, 234, 237, 239, 244, 248, 250, 251, 252, 254, 255, 256, 257, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 274, 276, 277, 278, 279, 288, 289, 290, 298, 303, 304, 305, 306, 307, 308, 311, 312, 313, 315, 316, 317, 318, 320, 323, 325, 326, 327, 329, 330, 331, 333, 334, 335, 336, 337, 342, 344, 346, 347, 348, 349, 351, 352, 359, 361, 362, 363, 364, 409, 417, 418, 422, 423, 424, 425, 426, 428, 429, 432, 434, 435, 436, 437, 438, 441], "organis": [3, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 234, 423], "attribut": [3, 4, 7, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 60, 61, 65, 67, 68, 69, 70, 72, 77, 78, 79, 80, 81, 82, 83, 84, 119, 122, 125, 128, 129, 130, 136, 137, 149, 150, 153, 158, 159, 160, 178, 196, 206, 212, 234, 237, 241, 242, 244, 316, 326, 327, 329, 330, 331, 333, 335, 336, 337, 340, 342, 344, 346, 347, 348, 349, 351, 352, 359, 422, 425, 437], "live": [3, 30, 37, 42, 50, 57, 60, 61, 62, 63, 64, 67, 72, 73, 74, 102, 119, 122, 125, 129, 137, 143, 149, 150, 153, 158, 159, 160, 196, 244], "actual": [3, 4, 7, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 56, 58, 65, 68, 69, 77, 79, 80, 81, 82, 83, 84, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 240, 402, 418, 422, 424, 426, 435, 436, 437], "care": [3, 8, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 60, 61, 67, 68, 69, 72, 77, 80, 81, 82, 83, 84, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 246, 247, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 279, 282, 283, 286, 288, 291, 292, 294, 299, 307, 309, 311, 314, 319, 322, 381, 422, 424, 426, 435, 436, 437, 439], "parametr": [3, 281, 316, 327, 329, 334, 342, 349, 422, 424], "observation_spec": [3, 45, 119, 122, 125, 129, 137, 143, 149, 150, 153, 158, 159, 160, 179, 182, 185, 186, 187, 188, 189, 191, 192, 193, 195, 196, 199, 201, 202, 203, 204, 208, 210, 212, 214, 216, 220, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 240, 241, 242, 244, 248, 267, 271, 274, 403, 409, 422, 424, 429, 434, 435, 436, 437, 442], "state_spec": [3, 119, 122, 125, 129, 137, 143, 149, 150, 153, 158, 159, 160, 179, 189, 193, 208, 233, 235, 236, 244, 248, 274, 437, 442], "reward_spec": [3, 119, 122, 125, 129, 137, 143, 149, 150, 153, 158, 159, 160, 179, 182, 183, 188, 189, 192, 193, 195, 205, 214, 218, 219, 220, 222, 224, 231, 233, 235, 236, 242, 244, 248, 274, 424, 435, 436, 437, 442], "done_spec": [3, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 177, 192, 193, 195, 196, 214, 224, 231, 233, 235, 244, 435, 436, 437, 442], "flag": [3, 8, 37, 57, 62, 63, 64, 73, 74, 102, 119, 122, 125, 129, 137, 141, 142, 149, 150, 153, 158, 159, 160, 163, 164, 203, 288, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 417, 435, 436, 437, 438], "input_spec": [3, 79, 119, 122, 125, 129, 137, 143, 149, 150, 153, 158, 159, 160, 178, 182, 189, 192, 193, 194, 206, 210, 214, 215, 220, 221, 224, 225, 226, 227, 231, 233, 234, 235, 238, 244, 424, 437], "full_action_spec": [3, 79, 119, 122, 125, 129, 137, 147, 148, 149, 150, 153, 158, 159, 160, 161, 162, 178, 193, 248, 274, 435, 436], "full_state_spec": [3, 45, 79, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 178, 193, 248, 274], "output_spec": [3, 79, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 182, 189, 192, 193, 197, 204, 206, 214, 215, 221, 225, 231, 233, 234, 235, 242, 244, 437], "full_observation_spec": [3, 79, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 248, 274], "full_reward_spec": [3, 79, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 182, 193, 214, 435, 436], "full_done_spec": [3, 79, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 177, 182, 193, 214, 435, 436], "carri": [3, 24, 48, 78, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 227, 242, 344, 423, 425, 435, 436, 437, 439], "nontensor": [3, 53, 202, 235, 415], "spec_lock": [3, 125], "modif": [3, 5, 30, 34, 35, 37, 42, 43, 50, 60, 61, 67, 69, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 177, 199, 202, 244, 344, 418, 424, 437], "children": [3, 13, 14, 15, 17, 20, 21, 22, 23, 24, 30, 34, 35, 37, 42, 43, 50, 60, 61, 67, 69, 72, 79, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244], "unlock": [3, 34, 35, 43, 56, 58, 65, 69, 79, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "set_spec_lock_": [3, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "reason": [3, 4, 8, 30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 151, 152, 153, 158, 159, 160, 212, 237, 244, 271, 418, 422, 423, 424, 429, 430, 435, 437, 439], "easi": [3, 5, 11, 119, 122, 123, 124, 125, 129, 135, 136, 137, 149, 150, 153, 158, 159, 160, 246, 264, 288, 417, 418, 422, 423, 424, 436, 438, 439, 441, 442], "cach": [3, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 56, 58, 68, 69, 77, 78, 80, 81, 82, 83, 84, 89, 100, 107, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 176, 181, 192, 195, 212, 233, 234, 239, 249, 391], "principl": 3, "new_spec": 3, "eras": [3, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 100, 107, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 234], "relock": 3, "previous": [3, 4, 45, 424, 442], "importantli": [3, 312, 316], "action_s": 3, "help": [3, 4, 30, 37, 42, 50, 60, 61, 67, 72, 77, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 185, 196, 244, 326, 328, 343, 346, 348, 416, 418, 422, 423, 424, 425, 435, 436], "With": [3, 135, 136, 140, 226, 419, 423, 434, 435, 436, 439, 442], "necessarili": [3, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 442], "present": [3, 30, 37, 42, 50, 56, 57, 58, 60, 61, 62, 63, 64, 65, 67, 72, 73, 74, 77, 79, 99, 100, 102, 106, 119, 122, 125, 128, 129, 137, 149, 150, 153, 158, 159, 160, 176, 177, 197, 217, 221, 227, 232, 234, 244, 252, 253, 254, 255, 256, 257, 263, 267, 269, 271, 281, 286, 288, 311, 315, 316, 317, 318, 326, 327, 328, 329, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 359, 361, 362, 363, 364, 365, 413, 419, 422, 432, 434, 435, 436, 439, 441], "0s": [3, 227, 425], "step_and_maybe_reset": [3, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 427], "done_kei": [3, 26, 37, 39, 41, 45, 51, 70, 90, 91, 98, 107, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 176, 181, 185, 196, 217, 225, 244, 435, 436], "assign": [3, 4, 14, 15, 20, 30, 31, 37, 42, 50, 56, 58, 60, 61, 65, 67, 72, 79, 80, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 232, 234, 244, 329, 330, 331, 333, 349, 424, 428, 435, 436, 439], "_reset": [3, 119, 122, 125, 129, 137, 143, 149, 150, 153, 158, 159, 160, 177, 179, 181, 182, 185, 192, 195, 203, 214, 229, 248, 274, 435], "data_": [3, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "append": [3, 8, 11, 45, 57, 62, 63, 64, 73, 74, 102, 119, 122, 125, 126, 129, 137, 149, 150, 153, 158, 159, 160, 181, 188, 189, 206, 217, 227, 234, 240, 266, 267, 270, 271, 308, 313, 422, 423, 424, 425, 426, 435, 436, 437, 438, 439, 441], "seed": [3, 14, 15, 17, 20, 24, 64, 73, 74, 102, 119, 122, 125, 129, 137, 143, 149, 150, 151, 152, 153, 158, 159, 160, 163, 164, 165, 179, 182, 192, 195, 202, 214, 234, 379, 399, 435], "determinist": [3, 14, 15, 17, 20, 21, 22, 23, 24, 30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 174, 189, 212, 227, 233, 234, 237, 239, 244, 253, 262, 282, 292, 303, 312, 315, 316, 319, 327, 344, 394, 417, 422, 423, 424, 425, 426, 428, 429, 432, 435, 437, 441, 442], "preced": [3, 50, 122, 185, 425], "risk": [3, 213], "overlap": [3, 73, 113], "reproduc": [3, 61, 67, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 165, 185, 202, 422, 424, 426, 436], "maximum": [3, 4, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 28, 50, 56, 58, 59, 66, 72, 75, 78, 79, 80, 89, 93, 94, 95, 96, 99, 100, 115, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 194, 218, 225, 226, 228, 247, 295, 296, 297, 319, 327, 329, 334, 335, 342, 344, 345, 349, 381, 396, 417, 422, 423, 424, 425, 428, 435, 436, 439], "max_step": [3, 11, 113, 119, 122, 125, 129, 137, 141, 142, 143, 149, 150, 153, 158, 159, 160, 163, 164, 225, 232, 244, 379, 427, 428, 429, 431, 432, 435, 436, 441, 442], "tensordictmodul": [3, 14, 15, 17, 20, 21, 22, 23, 24, 37, 60, 62, 66, 72, 119, 120, 121, 122, 125, 129, 137, 143, 149, 150, 153, 158, 159, 160, 184, 204, 250, 261, 267, 271, 274, 289, 290, 298, 299, 304, 305, 306, 307, 308, 311, 312, 313, 314, 315, 317, 318, 319, 321, 323, 327, 329, 330, 334, 335, 337, 338, 339, 340, 342, 344, 347, 349, 351, 352, 359, 360, 361, 362, 363, 364, 394, 409, 415, 422, 424, 425, 429, 432, 434, 435, 436, 437, 438, 442], "trail": [3, 241], "treat": [3, 50, 418, 428, 429], "brief": [3, 424, 427, 429, 439], "deliveri": 3, "metaclass": [3, 125, 130], "flank": [3, 418, 425], "dual": 3, "refer": [3, 7, 8, 9, 11, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 60, 61, 66, 67, 68, 69, 72, 77, 80, 81, 82, 83, 84, 119, 122, 125, 128, 129, 130, 134, 137, 149, 150, 153, 158, 159, 160, 185, 202, 232, 234, 241, 244, 248, 261, 262, 274, 275, 276, 277, 278, 279, 282, 283, 291, 292, 306, 309, 326, 329, 336, 337, 338, 339, 346, 349, 361, 366, 374, 421, 422, 424, 426, 428, 429, 430, 431, 435, 436, 439], "union": [3, 23, 30, 34, 35, 37, 42, 43, 44, 48, 49, 50, 52, 54, 55, 60, 61, 67, 68, 69, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244, 277, 298, 333, 335, 347, 410, 413], "assess": [3, 14, 15, 17, 20, 21, 22, 23, 24, 34, 35, 43, 69, 141, 142, 166, 422], "split_trajectori": [3, 14, 15, 17, 20, 21, 22, 23, 24, 100, 107, 108, 415], "adjac": [3, 26, 199, 311], "junction": 3, "inittrack": [3, 267, 271, 311, 422, 425], "tutori": [3, 150, 414, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 437, 438, 439, 440, 442], "scratch": [3, 8, 423, 437], "mere": [3, 20, 426], "batch_lock": [3, 119, 122, 125, 127, 129, 137, 149, 153, 158, 159, 182, 227, 234, 437], "contrast": [3, 265, 287, 341, 439], "notabl": 3, "braxenv": [3, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 215, 415, 427], "jumanjienv": [3, 415], "straightforward": [3, 18, 422, 423, 427, 428, 429, 430, 439], "merg": [3, 57, 64, 73, 74, 437], "correctli": [3, 7, 30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244], "silent": [3, 30, 37, 42, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 246, 247, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 279, 282, 283, 286, 288, 291, 292, 294, 299, 307, 309, 311, 314, 319, 322], "_step": [3, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 179, 181, 182, 184, 185, 186, 189, 190, 192, 193, 195, 196, 197, 198, 199, 200, 203, 204, 211, 213, 214, 215, 217, 220, 221, 224, 225, 226, 227, 228, 229, 231, 232, 233, 237, 238, 240, 241, 244], "temporari": [3, 422], "hold": [3, 233, 357, 358, 437, 439], "arm": 3, "unbatch": [3, 265, 269], "captur": [3, 246, 264, 288, 426], "base_env": [3, 119, 121, 122, 125, 129, 130, 136, 137, 148, 149, 150, 153, 158, 159, 160, 162, 178, 179, 182, 188, 190, 192, 194, 195, 204, 210, 214, 216, 222, 225, 227, 228, 232, 234, 244, 381, 389, 422, 423, 424, 426, 435, 438, 441, 442], "break_when_all_don": [3, 119, 122, 125, 129, 136, 137, 149, 150, 153, 158, 159, 160], "conditionalskip": 3, "programmat": 3, "pretti": [3, 422, 427, 431, 439], "likewis": 3, "break_when_any_don": [3, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 165, 181, 232, 244, 250, 311, 436], "te": 3, "paragraph": 3, "deep": [3, 9, 185, 205, 254, 255, 256, 257, 260, 288, 326, 329, 341, 349, 350, 422, 435], "dive": 3, "gym3": 3, "envpool": [3, 144, 145], "simultan": [3, 23, 136, 144, 145, 149, 158, 437], "advantag": [3, 8, 263, 326, 328, 343, 346, 348, 361, 362, 363, 364, 365, 366, 368, 370, 372, 374, 375, 377, 418, 419, 422, 423, 424, 425, 436, 437, 442], "scale": [3, 4, 27, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 185, 204, 208, 219, 226, 230, 241, 242, 247, 262, 268, 291, 292, 296, 297, 304, 305, 306, 312, 316, 318, 326, 327, 329, 342, 346, 347, 348, 349, 397, 403, 413, 417, 422, 423, 424, 425, 428, 436, 441], "varieti": [3, 11], "inherit": [3, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 273, 277, 278, 344, 419, 424, 435, 436], "from_pixel": [3, 11, 120, 121, 123, 124, 128, 130, 131, 135, 136, 155, 185, 216, 379, 381, 422, 423, 425, 427, 431, 432, 438, 439, 441, 442], "81": [3, 107], "d": [3, 37, 57, 60, 64, 72, 73, 74, 89, 99, 100, 247, 265, 269, 312, 316, 441], "privat": [3, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 240, 437, 442], "absenc": 3, "total": [3, 14, 15, 17, 20, 21, 22, 23, 24, 28, 46, 48, 54, 56, 57, 58, 62, 63, 64, 65, 73, 74, 79, 102, 108, 113, 328, 343, 346, 390, 392, 394, 399, 402, 403, 421, 422, 423, 424, 425, 429, 435, 436, 438, 439, 440, 441], "accord": [3, 14, 15, 17, 20, 21, 22, 23, 24, 45, 56, 58, 65, 66, 79, 102, 105, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 161, 162, 208, 219, 268, 280, 291, 296, 297, 359, 417, 418, 428, 429, 435, 437, 439], "inner": [3, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 194, 234, 419, 423, 424, 436, 442], "kept": [3, 26, 106, 108, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 165, 176, 194, 221, 268, 296, 297, 429, 435], "wherev": 3, "lost": [3, 8, 240], "intern": [3, 45, 76, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 242, 420], "face": [3, 5, 8, 9, 427, 442], "NOT": [3, 90, 91, 98, 108, 213], "right": [3, 6, 7, 26, 66, 100, 107, 423, 424, 426, 436, 437, 442], "preliminari": 3, "warranti": 3, "preclud": 3, "presenc": [3, 37, 60, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 165, 429], "annihil": 3, "supersed": [3, 26], "pettingzoowrapp": [3, 415], "group": [3, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 60, 68, 69, 77, 80, 81, 82, 83, 84, 119, 122, 125, 129, 137, 140, 141, 142, 147, 148, 149, 150, 151, 152, 153, 158, 159, 160, 161, 162, 163, 164, 166, 205, 224, 356, 417, 423, 428, 430, 436, 439], "__not__": [3, 312, 327, 329, 342, 347, 349, 351, 352], "constrain": [3, 204, 267, 271, 346, 442], "li": 3, "fact": [3, 7, 8, 422, 424, 427, 435, 436, 437, 438, 439, 442], "meaning": [3, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84], "perfectli": [3, 419, 422, 426, 437], "meaningless": 3, "val": [3, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 242, 389, 429, 441], "agent0": [3, 426], "agent1": 3, "overrid": [3, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 60, 61, 64, 67, 68, 69, 72, 77, 80, 81, 82, 83, 84, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 181, 244, 259, 381, 413, 417], "bool": [3, 12, 13, 14, 15, 17, 20, 21, 22, 23, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 89, 92, 93, 94, 95, 96, 99, 100, 102, 103, 105, 106, 107, 108, 109, 114, 115, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 170, 176, 177, 178, 179, 181, 182, 185, 186, 190, 192, 194, 195, 196, 197, 199, 202, 204, 206, 207, 208, 210, 212, 214, 215, 217, 219, 220, 221, 224, 225, 227, 230, 231, 232, 234, 235, 236, 237, 239, 241, 242, 244, 245, 246, 247, 248, 250, 251, 252, 254, 255, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 277, 278, 279, 280, 281, 295, 296, 297, 302, 303, 308, 309, 311, 312, 313, 314, 315, 316, 317, 319, 326, 327, 328, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 355, 359, 361, 362, 363, 364, 367, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 381, 388, 389, 392, 393, 394, 396, 397, 399, 413, 423, 424, 426, 437, 441, 442], "500": [3, 422, 423], "note": [3, 4, 14, 15, 17, 20, 21, 22, 23, 24, 30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 173, 177, 192, 195, 232, 241, 242, 244, 249, 265, 267, 269, 271, 288, 312, 316, 336, 415, 418, 423, 426, 428, 434, 435, 436, 442], "launch": [3, 14, 15, 20, 21, 22, 23, 25, 149, 158], "bottleneck": [3, 8, 100, 107, 108], "great": [3, 7, 8, 426, 435, 441], "speedup": [3, 8, 435, 442], "precis": [3, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 176, 192, 195, 266, 270, 422, 424], "misspecifi": 3, "caus": [3, 7, 8, 14, 15, 17, 93, 95, 115, 119, 122, 125, 129, 133, 137, 149, 150, 153, 158, 159, 160, 213, 442], "breakag": 3, "rais": [3, 13, 14, 15, 17, 20, 21, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 60, 61, 65, 67, 68, 69, 72, 77, 79, 80, 81, 82, 83, 84, 93, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 161, 165, 166, 185, 198, 207, 217, 226, 227, 228, 232, 234, 241, 244, 246, 264, 288, 329, 344, 349, 389, 422, 424, 435, 436, 439], "mismatch": [3, 60, 423], "subprocess": [3, 14, 15, 20, 126, 149, 158], "multithreadedenv": [3, 415], "underneath": 3, "higher": [3, 4, 100, 188, 319, 422, 423, 424, 435, 439, 442], "cover": [3, 128, 130, 416, 424, 427, 430, 431, 437, 441], "type": [3, 12, 14, 15, 17, 20, 21, 22, 23, 24, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 89, 102, 119, 122, 125, 129, 137, 140, 143, 146, 149, 150, 151, 152, 153, 158, 159, 160, 167, 173, 174, 176, 182, 185, 189, 192, 193, 196, 197, 202, 204, 206, 212, 214, 215, 221, 225, 227, 231, 232, 233, 234, 235, 237, 239, 241, 242, 244, 246, 251, 252, 272, 277, 278, 281, 289, 298, 300, 308, 312, 315, 316, 323, 326, 327, 329, 330, 331, 333, 335, 336, 337, 342, 344, 346, 347, 348, 349, 351, 352, 354, 356, 359, 367, 379, 411, 415, 417, 422, 423, 424, 426, 430, 435, 436, 437, 439, 442], "atari": [3, 4, 185, 252, 381, 426, 431, 442], "classic": [3, 134, 143, 152, 423], "benchmark_batched_env": 3, "significantli": [3, 13, 21, 22, 23, 107, 108, 185, 418, 422, 423, 429, 436], "asyncenvpool": [3, 153, 159], "pool": [3, 119, 153, 159, 228], "concurr": [3, 119, 435, 436], "contrari": [3, 418], "permit": [3, 188, 199, 224, 236, 326, 328, 343, 346, 348], "job": [3, 7, 21, 22, 23, 25, 64, 73, 74, 102, 439, 441], "famili": 3, "interest": [3, 312, 316, 417, 423, 424, 427, 436, 437, 442], "prefer": [3, 14, 15, 20, 23, 26, 27, 57, 64, 73, 74, 107, 108, 119, 153, 159, 213, 221, 346, 351, 396, 417, 424, 435, 436, 439, 441], "pleas": [3, 30, 37, 42, 50, 60, 61, 67, 72, 76, 119, 122, 125, 128, 129, 137, 149, 150, 151, 152, 153, 158, 159, 160, 182, 185, 202, 228, 232, 234, 244, 277, 278, 279, 329, 349, 416], "lifecycl": 3, "processorasyncenvpool": 3, "inter": [3, 149, 153], "threadingasyncenvpool": 3, "executor": [3, 21, 22, 23, 159], "functool": [3, 14, 15, 17, 20, 119], "s0": [3, 119], "clamp": [3, 119, 316, 319, 338, 399, 418, 435, 437], "env_index": [3, 119], "async_step_send": [3, 119, 153, 159], "s0_result": [3, 119], "async_step_recv": [3, 119, 153, 159], "close": [3, 13, 14, 15, 17, 20, 21, 22, 23, 119, 129, 144, 204, 242, 326, 328, 343, 346, 379, 422, 423, 427, 434, 435, 437, 441], "seamlessli": [3, 437], "paradigm": [3, 20, 436], "decpodp": 3, "game": [3, 4, 5, 122, 141, 142, 147, 148, 252, 381, 426, 431], "thank": [3, 422, 426, 427, 441], "carrier": [3, 424, 425, 427, 439], "particular": [3, 30, 37, 42, 50, 60, 61, 67, 72, 78, 79, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 202, 234, 244, 418, 419, 423, 425, 427, 434, 436, 439], "thu": [3, 343, 436], "vma": [3, 163, 164, 379, 435, 436], "robot": [3, 5, 7, 212, 237, 239, 426, 436], "vmasenv": [3, 379, 415, 435, 436], "balanc": [3, 123, 124, 422, 423], "num_env": [3, 14, 15, 20, 24, 119, 128, 132, 145, 163, 164, 379, 435, 436], "n_agent": [3, 163, 164, 277, 278, 279, 289, 298, 359, 379, 418, 435, 436], "ground_rew": 3, "pos_rew": 3, "style": [3, 57, 64, 73, 74], "vari": [3, 128, 130, 131, 151, 152, 155, 163, 213, 418, 426, 436], "creation": [3, 149, 158, 442], "info_spec": [3, 149], "agent_i_action_spec": 3, "agent_i_reward_spec": 3, "agent_i_observation_spec": 3, "categor": [3, 28, 29, 31, 32, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 119, 120, 121, 122, 125, 128, 129, 130, 131, 134, 135, 136, 137, 141, 142, 144, 145, 147, 148, 149, 150, 151, 152, 153, 155, 158, 159, 160, 161, 162, 163, 164, 177, 178, 179, 196, 214, 261, 284, 287, 290, 308, 309, 312, 313, 314, 331, 334, 335, 359, 415, 425], "simpl": [3, 9, 18, 19, 30, 37, 42, 50, 54, 60, 61, 67, 72, 77, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244, 254, 311, 316, 331, 333, 344, 348, 361, 418, 422, 423, 424, 427, 428, 429, 435, 436, 439, 442], "prefix": [3, 26, 30, 37, 42, 50, 56, 58, 60, 61, 65, 67, 72, 78, 79, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 202, 229, 232, 234, 244, 312, 329, 344, 349, 380, 425, 429, 442], "exactli": [3, 30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 131, 137, 149, 150, 153, 158, 159, 160, 232, 234, 244, 265, 269, 284, 329, 349, 422, 425, 430, 435, 436], "action_kei": [3, 14, 15, 17, 20, 21, 22, 23, 24, 45, 119, 122, 125, 129, 137, 149, 150, 153, 154, 158, 159, 160, 176, 178, 179, 194, 204, 206, 246, 248, 264, 273, 274, 288, 311, 418, 435, 436], "reward_kei": [3, 37, 39, 41, 45, 51, 70, 90, 91, 98, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 176, 244, 248, 274, 393, 397, 435, 436], "set_kei": [3, 196, 326, 328, 329, 331, 334, 335, 336, 342, 343, 344, 346, 347, 348, 349, 359, 365, 422, 435, 436], "awai": [3, 424, 427, 435, 436, 441], "leaf": [3, 14, 15, 17, 19, 20, 21, 22, 23, 24, 28, 29, 31, 32, 33, 34, 35, 38, 43, 45, 46, 47, 48, 49, 52, 53, 54, 55, 69, 77, 79, 80, 81, 82, 83, 84, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 203, 225, 227, 233, 316], "full": [3, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 249, 267, 271, 309, 316, 390, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 441, 442], "autoresettransform": 3, "invalid": [3, 30, 37, 42, 50, 60, 61, 67, 72, 113, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 166, 244, 275, 276], "nan": [3, 181, 240], "auto_reset": [3, 45, 119, 122, 125, 129, 136, 137, 149, 150, 153, 158, 159, 160, 181, 244, 437], "auto_reset_replac": [3, 181], "placehold": [3, 130, 131, 196, 234, 240], "set_gym_backend": [3, 14, 15, 17, 20, 119, 122, 125, 128, 129, 137, 149, 150, 153, 158, 159, 160, 169, 181, 415, 427, 441], "autoresettinggymenv": [3, 181], "self": [3, 14, 15, 17, 20, 21, 22, 23, 24, 27, 30, 34, 35, 37, 42, 43, 50, 56, 58, 60, 61, 65, 67, 69, 72, 79, 119, 122, 125, 129, 137, 143, 149, 150, 153, 158, 159, 160, 179, 181, 182, 184, 185, 186, 189, 190, 192, 193, 195, 196, 197, 198, 200, 203, 204, 211, 212, 213, 214, 215, 217, 220, 221, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 244, 245, 246, 248, 261, 264, 267, 271, 274, 277, 278, 289, 298, 312, 315, 320, 326, 327, 329, 330, 331, 333, 335, 336, 337, 342, 344, 346, 347, 348, 349, 351, 352, 359, 361, 362, 363, 364, 365, 419, 422, 437, 441], "super": [3, 143, 179, 181, 182, 184, 185, 186, 189, 190, 192, 193, 195, 196, 197, 198, 200, 203, 204, 211, 213, 214, 215, 217, 220, 221, 224, 225, 226, 227, 228, 229, 231, 232, 233, 237, 238, 240, 241, 244, 248, 261, 274, 320, 327, 329, 330, 335, 342, 347, 349, 351, 352, 422, 437, 441], "td_reset": [3, 181], "exclud": [3, 8, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 72, 77, 80, 81, 82, 83, 84, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 176, 181, 185, 197, 289, 328, 343, 346, 435, 436, 439], "r": [3, 4, 45, 50, 122, 178, 179, 181, 188, 190, 208, 222, 229, 232, 241, 242, 247, 250, 266, 316, 325, 360, 379, 423, 437, 442], "3633e": [3, 181], "02": [3, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 181, 242, 423, 432], "4877e": [3, 181], "01": [3, 181, 208, 242, 247, 288, 322, 326, 328, 343, 346], "2849e": [3, 181], "7584e": [3, 181], "6609e": [3, 181], "6166e": [3, 181], "8366e": [3, 181], "2761e": [3, 181], "5685e": [3, 181], "4102e": [3, 181], "8111e": [3, 181], "9959e": [3, 181], "0865e": [3, 181], "5644e": [3, 181], "2119e": [3, 181], "2542e": [3, 181], "03": [3, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 181, 208, 229], "9952e": [3, 181], "4059e": [3, 181], "2094e": [3, 181], "9009e": [3, 181], "5140e": [3, 181], "3554e": [3, 181], "2920e": [3, 181], "7893e": [3, 181], "6429e": [3, 181], "3057e": [3, 181], "2867e": [3, 181], "6963e": [3, 181], "3818e": [3, 181], "2576e": [3, 181], "2679e": [3, 181], "1640e": [3, 181], "00": [3, 120, 121, 181, 421, 440], "6972e": [3, 181], "0212e": [3, 181], "5959e": [3, 181], "4637e": [3, 181], "3121e": [3, 181], "2168e": [3, 181], "5232e": [3, 181], "7704e": [3, 181], "7457e": [3, 181], "4127e": [3, 181], "1064e": [3, 181], "0854e": [3, 181], "5712e": [3, 181], "2189e": [3, 181], "5235e": [3, 181], "8289e": [3, 181], "0009e": [3, 181], "0257e": [3, 181], "8893e": [3, 181], "5872e": [3, 181], "9405e": [3, 181], "7766e": [3, 181], "0403e": [3, 181], "0626e": [3, 181], "2959e": [3, 181], "7263e": [3, 181], "2775e": [3, 181], "9564e": [3, 181], "0411e": [3, 181], "6769e": [3, 181], "6354e": [3, 181], "8698e": [3, 181], "1765e": [3, 181], "6292e": [3, 181], "5375e": [3, 181], "1820e": [3, 181], "7023e": [3, 181], "5836e": [3, 181], "9016e": [3, 181], "4826e": [3, 181], "6191e": [3, 181], "6387e": [3, 181], "8667e": [3, 181], "2056e": [3, 181], "1147e": [3, 181], "5991e": [3, 181], "0278e": [3, 181], "5219e": [3, 181], "3067e": [3, 181], "6617e": [3, 181], "3322e": [3, 181], "2629e": [3, 181], "4599e": [3, 181], "7298e": [3, 181], "5848e": [3, 181], "0148e": [3, 181], "5745e": [3, 181], "6982e": [3, 181], "7877e": [3, 181], "3527e": [3, 181], "7285e": [3, 181], "6668e": [3, 181], "0583e": [3, 181], "6956e": [3, 181], "3962e": [3, 181], "9845e": [3, 181], "5015e": [3, 181], "5903e": [3, 181], "9993e": [3, 181], "9418e": [3, 181], "0196e": [3, 181], "6557e": [3, 181], "2109e": [3, 181], "8997e": [3, 181], "1507e": [3, 181], "7363e": [3, 181], "0310e": [3, 181], "9574e": [3, 181], "8980e": [3, 181], "0090e": [3, 181], "forecast": 3, "awar": [3, 7, 93, 94, 95, 96, 109, 111, 115, 267, 271, 423, 425], "detect": [3, 344, 418], "return_contigu": [3, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 165, 434], "tensordictbas": [3, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 26, 28, 29, 31, 32, 33, 34, 35, 37, 38, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 60, 63, 65, 68, 69, 72, 73, 74, 77, 79, 80, 81, 82, 83, 84, 113, 119, 122, 125, 127, 129, 137, 149, 150, 153, 158, 159, 160, 165, 176, 177, 179, 181, 182, 184, 185, 186, 189, 190, 192, 193, 196, 197, 198, 199, 200, 203, 204, 211, 213, 214, 215, 217, 220, 221, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 237, 238, 240, 241, 242, 244, 246, 248, 264, 267, 271, 273, 274, 288, 307, 309, 311, 314, 315, 316, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 340, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 359, 360, 361, 362, 363, 364, 365, 399, 422, 435, 437], "envwithdynamicspec": 3, "max_count": 3, "float": [3, 13, 14, 15, 17, 20, 21, 22, 23, 24, 27, 30, 31, 34, 36, 37, 42, 50, 54, 57, 60, 61, 66, 67, 72, 73, 80, 99, 100, 102, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 178, 181, 185, 189, 192, 195, 204, 205, 208, 212, 217, 218, 219, 226, 227, 230, 233, 234, 237, 239, 242, 244, 246, 247, 249, 250, 259, 262, 265, 268, 269, 272, 275, 276, 280, 281, 287, 291, 292, 295, 297, 315, 319, 322, 324, 325, 326, 327, 328, 329, 333, 334, 335, 338, 339, 340, 341, 342, 343, 345, 346, 347, 348, 349, 350, 351, 352, 360, 366, 367, 368, 369, 370, 371, 372, 373, 374, 397, 422, 423, 439, 442], "_set_se": [3, 179, 182, 192, 195, 214, 437], "lazystackedtensordict": [3, 45, 69, 94, 119, 122, 125, 129, 137, 143, 149, 150, 153, 158, 159, 160, 434], "float32": [3, 14, 15, 17, 31, 34, 37, 39, 45, 56, 57, 58, 60, 65, 66, 70, 72, 73, 74, 77, 78, 79, 80, 93, 94, 95, 99, 100, 107, 115, 119, 120, 121, 122, 125, 128, 129, 130, 135, 136, 137, 143, 146, 147, 148, 149, 150, 153, 156, 157, 158, 159, 160, 161, 163, 164, 170, 176, 178, 182, 192, 195, 196, 197, 202, 205, 208, 210, 214, 215, 217, 221, 224, 225, 227, 230, 235, 248, 250, 260, 261, 267, 271, 274, 288, 289, 290, 298, 303, 304, 305, 306, 307, 308, 311, 312, 313, 314, 315, 318, 320, 323, 326, 327, 329, 330, 331, 333, 334, 335, 342, 346, 347, 348, 349, 351, 352, 359, 417, 437], "exclusive_field": [3, 45, 94, 119], "stack_dim": [3, 45, 94, 119], "dramat": 3, "carefulli": [3, 435, 436, 442], "against": [3, 5, 7, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 60, 61, 67, 68, 69, 72, 77, 80, 81, 82, 83, 84, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 165, 244, 303, 308, 309, 312, 313, 314, 315, 316, 327, 329, 342, 347, 349, 351, 352, 424, 435, 436], "plain": [3, 8, 427], "expens": [3, 100, 107, 108, 379, 439], "absent": [3, 34, 35, 43, 69, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 221, 234], "torchvis": [3, 11, 212, 239, 383, 435, 441, 442], "callabl": [3, 14, 15, 17, 18, 20, 21, 22, 23, 24, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 60, 61, 62, 63, 64, 67, 68, 69, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 102, 119, 122, 125, 126, 129, 137, 143, 149, 150, 153, 158, 159, 160, 175, 180, 182, 189, 190, 196, 202, 227, 234, 235, 244, 245, 251, 252, 272, 279, 316, 325, 344, 379, 404, 405, 411, 412, 413, 423, 439], "bring": [3, 424, 427, 442], "kind": [3, 64, 77, 429, 435, 439], "consult": 3, "resize_par": 3, "revers": [3, 269], "order": [3, 11, 17, 30, 37, 42, 50, 54, 57, 60, 61, 62, 63, 64, 67, 72, 73, 74, 102, 106, 108, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 186, 192, 195, 202, 210, 224, 232, 234, 244, 287, 303, 308, 315, 317, 318, 320, 326, 327, 329, 330, 334, 335, 342, 346, 347, 348, 349, 351, 352, 423, 435, 436], "chain": [3, 56, 57, 58, 64, 65, 73, 74, 79, 137, 189, 194, 251, 252, 318, 442], "in_keys_inv": [3, 171, 188, 192, 193, 195, 202, 208, 209, 210, 214, 215, 217, 222, 231, 233, 235, 236, 422, 434, 437, 442], "append_transform": [3, 45, 57, 62, 63, 64, 73, 74, 102, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 171, 178, 179, 181, 182, 184, 185, 186, 189, 190, 193, 196, 197, 198, 200, 202, 203, 204, 211, 212, 213, 214, 215, 217, 220, 221, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 237, 238, 240, 241, 242, 244, 250, 267, 271, 379, 422, 425, 435, 437, 439, 441, 442], "doubletofloat": [3, 422, 424, 434], "float64": [3, 30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 123, 124, 125, 129, 137, 141, 142, 149, 150, 153, 158, 159, 160, 178, 189, 192, 195, 212, 227, 233, 234, 237, 239, 244, 315], "think": [3, 416, 424, 435, 436, 442], "in_": 3, "out_": 3, "perspect": [3, 261, 309, 336, 424, 426], "outer": [3, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 234, 419, 422, 423, 442], "ob": [3, 4, 8, 26, 34, 35, 43, 45, 57, 62, 63, 64, 69, 72, 73, 74, 79, 99, 102, 107, 108, 113, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 170, 176, 179, 181, 192, 193, 195, 208, 222, 224, 230, 254, 255, 256, 257, 277, 278, 279, 313, 320, 327, 329, 330, 335, 342, 347, 349, 351, 352, 361, 362, 363, 364, 423, 426, 434, 435, 437, 439, 441, 442], "obs_standard": 3, "out_keys_inv": [3, 171, 188, 192, 193, 195, 202, 208, 209, 210, 214, 215, 222, 224, 231, 233, 235, 236, 437], "illustr": [3, 422, 423, 428, 439], "chang": [3, 5, 7, 11, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 60, 61, 64, 67, 68, 69, 72, 73, 74, 77, 80, 81, 82, 83, 84, 93, 94, 95, 96, 100, 106, 107, 109, 111, 115, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 182, 189, 192, 193, 195, 197, 204, 206, 214, 215, 221, 225, 231, 233, 234, 235, 241, 242, 244, 269, 326, 327, 329, 330, 331, 333, 335, 336, 337, 342, 344, 346, 347, 348, 349, 351, 352, 359, 418, 422, 425, 435, 436, 437, 438, 439, 442], "schemat": [3, 418], "outermost": 3, "innermost": 3, "similar": [3, 30, 37, 42, 50, 52, 56, 58, 60, 61, 64, 65, 67, 72, 79, 119, 122, 125, 129, 137, 149, 150, 151, 152, 153, 158, 159, 160, 189, 212, 227, 233, 234, 237, 238, 239, 241, 242, 244, 304, 306, 312, 315, 316, 418, 422, 423, 424, 425, 426, 428, 429, 430, 431, 437, 439, 441, 442], "transform_action_spec": [3, 189, 193, 208, 233, 235, 236, 244], "spec_from_random_valu": 3, "_apply_transform": [3, 179, 181, 182, 184, 185, 186, 189, 190, 193, 196, 197, 198, 200, 203, 204, 211, 213, 214, 215, 217, 220, 221, 224, 225, 226, 227, 228, 229, 231, 232, 233, 237, 238, 240, 241, 244, 437, 442], "rand": [3, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 57, 62, 63, 64, 68, 69, 73, 74, 77, 80, 81, 82, 83, 84, 94, 102, 120, 121, 135, 136, 143, 147, 148, 154, 161, 162, 179, 182, 192, 195, 214, 224, 248, 274, 312, 326, 327, 329, 330, 331, 333, 334, 335, 342, 344, 346, 347, 349, 351, 352, 437, 441, 442], "approach": [3, 57, 64, 73, 74, 185, 208, 247, 277, 278, 351, 422, 424, 429, 430, 435, 442], "insid": [3, 56, 58, 65, 79, 149, 442], "did": [3, 64, 240, 367, 423, 424, 430, 439, 442], "_inv_apply_transform": [3, 178, 233, 244, 437, 442], "actiondiscret": 3, "rand_act": [3, 119, 122, 125, 129, 137, 140, 149, 150, 151, 152, 153, 158, 159, 160, 182, 234, 427], "action_discret": 3, "addonetoob": 3, "Is": [3, 233], "rewrit": [3, 233], "_call": [3, 179, 181, 182, 184, 185, 186, 189, 190, 193, 194, 196, 197, 198, 199, 200, 203, 204, 211, 213, 214, 215, 217, 220, 221, 224, 225, 226, 227, 228, 229, 231, 232, 233, 237, 238, 240, 241, 244, 437], "_inv_cal": [3, 178, 233, 244], "overwrit": [3, 233], "till": [3, 233, 240], "encapsul": [3, 233, 427, 428, 429], "forget": [3, 233, 269], "edit": [3, 233, 244, 430], "top": [3, 4, 113, 120, 121, 135, 136, 191, 233, 248, 274, 428], "transform_output_spec": [3, 182, 189, 192, 193, 197, 204, 206, 214, 215, 221, 225, 231, 233, 235, 242, 244], "transform_input_spec": [3, 178, 182, 189, 192, 193, 194, 206, 210, 214, 215, 220, 224, 225, 226, 227, 231, 233, 235, 238, 244], "transform_observation_spec": [3, 182, 185, 186, 187, 188, 189, 191, 192, 193, 196, 197, 199, 201, 203, 204, 206, 208, 210, 214, 215, 216, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 240, 241, 242, 244, 437], "transform_state_spec": [3, 189, 193, 208, 233, 235, 236, 244], "transform_reward_spec": [3, 182, 183, 188, 189, 192, 193, 197, 204, 205, 206, 214, 215, 218, 219, 220, 221, 222, 224, 225, 231, 233, 235, 236, 242, 244], "rewardsum": [3, 176, 233, 244, 435, 436], "undo": 3, "addonetoact": 3, "subtract": [3, 226], "regist": [3, 16, 18, 19, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 60, 61, 62, 63, 64, 67, 68, 69, 72, 73, 74, 77, 80, 81, 82, 83, 84, 102, 119, 122, 125, 128, 129, 130, 137, 149, 150, 153, 158, 159, 160, 161, 162, 173, 176, 192, 195, 196, 220, 232, 234, 244, 246, 247, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 279, 282, 283, 286, 288, 291, 292, 294, 299, 307, 309, 311, 314, 319, 322, 326, 327, 329, 330, 331, 333, 335, 336, 337, 342, 344, 346, 347, 348, 349, 351, 352, 359, 379, 381, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 419, 422, 424, 427, 439], "manipul": [3, 4, 8, 123, 124, 212, 233, 237], "third_transform": 3, "unexpect": [3, 14, 15, 17, 30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244, 442], "behviour": 3, "fortun": [3, 425, 426, 427, 428, 431], "alreadi": [3, 8, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 60, 61, 65, 67, 68, 69, 72, 77, 78, 79, 80, 81, 82, 83, 84, 93, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 177, 227, 244, 245, 316, 361, 362, 363, 364, 422, 424, 431, 435, 436], "catfram": [3, 311, 423], "notic": [3, 113, 185, 418, 424, 432, 437], "parenthood": 3, "henc": [3, 57, 177, 213, 277, 422, 424, 435, 436, 437], "transform1": 3, "transform2": 3, "transform3": 3, "last_two": 3, "isinst": [3, 149, 158, 234, 379, 389, 437], "discret": [3, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 119, 122, 125, 128, 129, 130, 137, 141, 142, 149, 150, 151, 152, 153, 158, 159, 160, 163, 164, 178, 194, 202, 284, 287, 290, 333, 334, 335, 336, 417, 423, 428, 436], "might": [3, 56, 58, 59, 65, 79, 385, 416, 422, 427, 442], "action_mask": [3, 122, 135, 136, 151, 152, 156, 157, 179], "unavail": [3, 151, 152], "probabl": [3, 4, 8, 66, 102, 105, 249, 250, 259, 261, 264, 265, 267, 269, 271, 272, 275, 276, 284, 296, 297, 312, 316, 329, 346, 417, 418, 423, 426, 428, 441], "probabilistictensordictmodul": [3, 204, 316, 317, 418, 441], "tensordictsequenti": [3, 37, 60, 72, 250, 264, 267, 271, 288, 308, 311, 317, 318, 323, 417, 422, 423, 425, 426, 428, 432, 434, 435, 438, 441], "maskedcategor": [3, 276, 415], "linear": [3, 14, 15, 17, 20, 24, 30, 37, 42, 50, 60, 61, 62, 67, 72, 119, 120, 121, 122, 125, 129, 137, 143, 149, 150, 153, 158, 159, 160, 189, 204, 212, 227, 233, 234, 237, 239, 244, 248, 250, 251, 252, 254, 255, 256, 257, 261, 263, 264, 272, 274, 277, 278, 280, 281, 288, 290, 291, 292, 303, 304, 305, 306, 310, 311, 312, 313, 315, 318, 320, 326, 327, 329, 330, 331, 333, 334, 335, 336, 337, 342, 344, 346, 347, 348, 349, 351, 352, 359, 361, 362, 363, 364, 409, 417, 423, 434, 438, 441], "in_feat": 3, "out_feat": 3, "logit": [3, 58, 66, 260, 275, 276, 284, 287, 309, 312, 334, 335, 417], "dist": [3, 10, 275, 276, 284, 316, 418, 428], "distribution_class": [3, 204, 304, 305, 306, 307, 312, 316, 318, 326, 327, 329, 334, 335, 342, 346, 347, 348, 349, 417, 422, 424, 428, 435, 436, 441], "wrap": [3, 5, 14, 15, 17, 20, 21, 22, 23, 24, 27, 30, 36, 37, 42, 50, 60, 61, 66, 67, 72, 119, 120, 121, 122, 125, 129, 130, 134, 135, 136, 137, 142, 145, 147, 148, 149, 150, 151, 152, 153, 158, 159, 160, 162, 164, 165, 173, 190, 232, 234, 244, 245, 267, 271, 299, 304, 305, 306, 311, 313, 316, 321, 344, 359, 417, 422, 423, 424, 425, 429, 432, 435, 436, 442], "actionmask": [3, 122], "your_base_env": 3, "mask_kei": [3, 26, 179, 213, 244], "itself": [3, 30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 169, 181, 244, 344, 351, 424, 427], "ey": 3, "report": [3, 120, 121, 135, 136, 431], "foremost": 3, "callback": [3, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 436], "ad": [3, 4, 17, 26, 30, 37, 42, 45, 50, 57, 60, 61, 62, 63, 64, 67, 72, 73, 74, 86, 99, 100, 102, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 185, 202, 220, 232, 234, 244, 247, 280, 281, 288, 325, 326, 328, 329, 331, 336, 343, 346, 349, 359, 423, 425, 426, 428, 435, 439, 441, 442], "tensordictrecord": [3, 415], "videorecord": [3, 11, 379, 415, 424, 431, 432, 435], "csvlogger": [3, 11, 379, 381, 415, 423, 431, 432, 435], "wandblogg": [3, 415, 431], "tensorboardlogg": [3, 409, 415, 431], "tag": [3, 7, 11, 379, 381, 383, 386, 413, 431, 432, 435], "mp4": [3, 379, 381, 383, 432, 435], "video_format": [3, 379, 381, 383, 432, 435], "whc": 3, "cwh": 3, "exp": [3, 325, 418], "al": [3, 14, 15, 17, 20, 27, 128, 130, 196, 210, 248, 426, 442], "pong": [3, 14, 15, 17, 20, 145, 210, 426, 442], "v5": [3, 14, 15, 17, 20, 128, 130, 145, 196, 210, 426, 442], "grow": [3, 94], "tediou": [3, 427], "workspac": [3, 79, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 202], "pixelrendertransform": [3, 415, 435], "stream": 3, "alik": [3, 379], "envcreat": [3, 17, 25, 149, 158, 232, 242, 379, 409, 410, 413, 415, 422, 423, 441, 442], "render_mod": [3, 379, 437], "rgb_arrai": [3, 379, 435, 436, 437], "uncom": [3, 431], "line": [3, 7, 30, 37, 42, 45, 50, 60, 61, 67, 72, 79, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244, 423, 431, 435, 436], "comment": [3, 419, 423, 441], "pixels_record": [3, 379], "mission": 3, "irrespect": [3, 315, 316], "dmcontrol": [3, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "jumanji": [3, 119, 122, 125, 129, 135, 136, 137, 149, 150, 153, 158, 159, 160], "framework": [3, 4, 9, 25, 119, 120, 121, 122, 125, 129, 135, 136, 137, 143, 149, 150, 153, 158, 159, 160, 265, 441, 442], "Its": [3, 30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 189, 212, 227, 233, 234, 237, 239, 241, 244, 315, 365], "success": [3, 185, 229, 264, 329, 351, 423, 430, 432, 437, 439, 441], "foundat": [3, 5, 151, 152, 424, 436], "inspir": [3, 426, 437], "gone": [3, 4, 5, 311], "maintain": [3, 5, 9, 36, 52, 185, 242, 437], "concomittantli": 3, "problem": [3, 7, 8, 9, 17, 423, 424, 425, 430, 435, 436, 437, 439, 442], "decor": [3, 8, 173, 175, 245, 267, 271, 302, 344, 361, 362, 363, 364, 389, 425, 441], "relev": [3, 13, 14, 15, 17, 20, 21, 22, 23, 24, 66, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 361, 362, 363, 364, 365, 388, 426, 437], "gym_backend": [3, 175, 415], "env1": [3, 250, 434], "venv": 3, "python3": [3, 6, 7, 10], "site": [3, 6, 7, 122, 175], "env2": [3, 434], "_env": [3, 6, 128, 442], "classic_control": 3, "pendulumenv": [3, 45, 415, 437], "0x15147e190": 3, "0x1629916a0": 3, "mo_gymnasium": [3, 139, 169, 205], "side": [3, 4, 442], "v0": [3, 14, 15, 34, 35, 43, 69, 119, 122, 125, 129, 131, 134, 135, 136, 137, 138, 139, 149, 150, 153, 158, 159, 160, 189, 205, 234, 241, 242, 389, 409], "26": [3, 108, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "fun": [3, 175, 245, 424, 435, 436], "reveal": 4, "curv": 4, "exploit": [4, 428], "cv": 4, "flip": [4, 136], "correspondingli": 4, "invers": [4, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 57, 62, 63, 64, 68, 69, 73, 74, 77, 80, 81, 82, 83, 84, 102, 178, 185, 192, 195, 197, 202, 208, 215, 217, 229, 231, 233, 235, 244, 324, 334, 342, 415, 437], "prescript": 4, "tune": [4, 27, 204, 435, 436, 438], "coeffici": [4, 27, 36, 66, 204, 436], "bonu": [4, 326, 328, 343, 346], "beta": [4, 57, 73, 99, 100, 334, 342, 343, 422, 423, 439, 441], "reduc": [4, 6, 33, 113, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 176, 185, 190, 226, 242, 247, 249, 296, 415, 423, 435], "downstream": [4, 418, 422], "formul": [4, 435, 436], "rate": [4, 11, 241, 242, 360, 423, 424, 435, 436], "gradient": [4, 30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 234, 244, 249, 268, 276, 281, 284, 296, 297, 316, 326, 328, 329, 330, 334, 335, 340, 342, 343, 344, 346, 347, 348, 349, 351, 352, 360, 361, 362, 363, 364, 399, 422, 424, 435, 436, 437], "easier": [4, 61, 417, 422, 441], "local": [4, 7, 10, 13, 14, 15, 17, 18, 20, 21, 22, 23, 24, 30, 37, 42, 50, 60, 61, 63, 67, 72, 100, 107, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 234, 242, 244, 277, 278, 289, 298, 359, 386, 388, 426, 431, 432, 435, 436], "optima": 4, "product": [4, 9, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 265, 266, 269, 270, 411, 412], "sum": [4, 24, 30, 37, 48, 54, 72, 113, 120, 121, 123, 124, 128, 130, 131, 135, 136, 144, 145, 155, 184, 205, 220, 275, 276, 296, 298, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 340, 342, 343, 345, 346, 347, 348, 349, 351, 352, 360, 367, 418, 422, 423, 424, 425, 426, 429, 432, 435, 436, 437, 442], "stat": [4, 208, 241, 242, 403, 413, 423, 424], "w": [4, 102, 122, 147, 148, 185, 187, 191, 216, 230, 265, 288, 381, 423, 439], "yield": [4, 14, 15, 17, 24, 30, 37, 42, 50, 60, 61, 67, 72, 79, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244, 344, 422, 429], "insight": [4, 426], "auxiliari": [4, 429], "credit": 4, "futur": [4, 26, 30, 37, 42, 50, 56, 58, 60, 61, 65, 67, 72, 79, 90, 91, 98, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 202, 212, 232, 234, 239, 244, 272, 326, 327, 329, 330, 331, 333, 335, 336, 337, 342, 344, 346, 347, 348, 349, 351, 352, 359, 416], "spars": [4, 37, 425], "intermedi": [4, 14, 15, 37, 45, 60, 72, 184, 250, 267, 271, 309, 422, 426, 438], "instrument": 4, "greatli": 4, "soccer": 4, "kick": 4, "ball": 4, "likelihood": [4, 422], "discov": 4, "score": [4, 66, 285, 287], "undesir": 4, "unintention": 4, "valuabl": 4, "idiosyncrat": 4, "subtask": 4, "hierarch": 4, "select": [4, 37, 57, 60, 62, 63, 64, 72, 73, 74, 79, 102, 122, 141, 142, 151, 152, 154, 163, 164, 178, 179, 181, 182, 184, 185, 186, 189, 190, 192, 193, 195, 196, 197, 198, 199, 200, 203, 204, 206, 207, 211, 213, 214, 215, 217, 220, 221, 224, 225, 226, 227, 228, 229, 231, 232, 233, 237, 238, 240, 241, 244, 248, 308, 313, 398, 417, 418, 422, 426, 427, 435, 439], "explicit": [4, 14, 15, 17, 245, 439], "curios": 4, "magnitudin": 4, "domin": 4, "smaller": [4, 27, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 269, 334, 342, 424, 436], "addition": [4, 259], "timestep": [4, 66, 217, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 435, 436], "realli": 4, "huge": [4, 278, 425], "std": [4, 208, 241, 246, 286, 422, 442], "torchrl": [4, 5, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 421, 425, 427, 429, 430, 431, 432, 433, 434, 438, 439, 440], "unseen": 4, "extrins": 4, "wrong": [4, 100, 107], "bonus": 4, "denser": 4, "prior": [4, 67, 292, 338, 436], "freshli": 4, "drop": [4, 106, 108, 176, 242], "meant": [4, 50, 143], "encourag": [4, 149, 287, 422, 423, 439], "measur": [4, 93, 95, 115, 120, 121, 135, 136, 179, 181, 182, 184, 185, 186, 189, 190, 193, 196, 197, 198, 200, 203, 204, 211, 213, 214, 215, 217, 220, 221, 224, 225, 226, 227, 228, 229, 231, 232, 233, 237, 238, 240, 241, 244, 424, 430], "novelti": 4, "revisit": 4, "diminish": 4, "decreas": [4, 27, 428], "ideal": [4, 208, 437], "distil": 4, "nois": [4, 243, 281, 288, 301, 347, 351, 352, 394, 413, 422, 435], "exploratori": [4, 326, 328, 343, 346], "misalign": 4, "trade": [4, 428], "unavoid": 4, "bootstrap": [4, 336, 361, 362, 368, 369, 422, 425], "noisi": [4, 280, 281, 301, 417], "unstabl": [4, 268, 296, 297], "inher": [4, 326, 346], "stochast": [4, 204, 262, 281, 282, 292, 327, 329, 332, 334, 335, 340, 342, 345, 347, 349, 417, 424, 428, 436], "enemi": 4, "pomdp": [4, 439], "loos": [4, 316, 417, 423, 424], "nonexist": 4, "sequenc": [4, 14, 15, 17, 20, 27, 28, 29, 31, 32, 33, 34, 35, 37, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 64, 66, 68, 69, 72, 75, 77, 78, 79, 80, 81, 82, 83, 84, 89, 92, 102, 103, 105, 111, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 135, 136, 137, 144, 145, 149, 150, 153, 155, 158, 159, 160, 171, 183, 184, 185, 186, 187, 191, 192, 194, 195, 199, 201, 202, 205, 208, 209, 213, 214, 215, 216, 217, 218, 219, 220, 224, 226, 228, 229, 230, 231, 233, 235, 241, 242, 251, 252, 259, 261, 265, 269, 272, 275, 276, 277, 278, 284, 290, 294, 307, 317, 318, 332, 380, 381, 394, 395, 396, 398, 399, 417, 422, 424, 425, 426, 434, 435, 436, 442], "lstm": [4, 227, 270, 271, 426], "rel": [4, 102, 227, 259, 295, 422, 423, 435, 436, 439], "tend": 4, "stabl": [4, 9, 10, 146], "compens": 4, "descent": [4, 281], "minimum": [4, 80, 119, 149, 158, 218, 262, 295, 296, 297, 319, 322, 325, 327, 329, 335, 344, 345, 349, 390, 418, 422, 424, 432, 435, 436], "manual": [4, 11, 21, 23, 24, 45, 57, 62, 63, 64, 73, 74, 102, 129, 130, 422, 425, 439], "deviat": [4, 208, 241, 242, 246, 248, 262, 274, 280, 281, 286, 287, 346, 351, 352, 422, 428, 436], "radic": 4, "begin": [4, 14, 15, 17, 20, 21, 22, 23, 24, 100, 107, 181, 265, 266, 269, 270, 325, 389, 418, 426, 427, 428, 429, 430, 431, 432], "stabil": [4, 200, 249, 326, 328, 343, 346, 348], "stage": [4, 422, 437], "never": [4, 14, 15, 20, 31, 80, 100, 229, 430, 441], "prevent": [4, 28, 29, 33, 34, 35, 38, 43, 46, 47, 48, 49, 54, 55, 62, 69, 91, 241, 242, 268, 296, 297, 326, 328, 343, 346, 348, 397, 431, 439], "entir": [4, 14, 15, 17, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 185, 242, 277, 424, 427, 437, 439], "submit": [4, 128, 182, 416, 441], "system": [4, 5, 91, 424, 435, 436, 437], "adequ": [4, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 165, 424, 435, 436], "infeas": 4, "allevi": [4, 417], "prune": [4, 137], "fire": [4, 30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244], "illeg": 4, "chess": [4, 122, 147, 148], "grasp": 4, "wherein": 4, "cumul": [4, 37, 220, 226, 248, 367, 424], "q": [4, 9, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 254, 255, 256, 257, 260, 261, 263, 289, 290, 298, 306, 309, 313, 314, 327, 329, 330, 331, 333, 334, 335, 336, 341, 342, 347, 349, 351, 352, 359, 415, 422, 429], "flow": [4, 361, 422, 424, 435, 436, 437, 439], "reparameter": [4, 259, 276, 284], "soft": [4, 341, 349, 350, 435], "critic": [4, 8, 304, 310, 326, 328, 329, 330, 334, 335, 342, 343, 346, 347, 348, 349, 351, 352, 422, 429], "clip": [4, 66, 188, 218, 326, 328, 343, 346, 348, 351, 352, 399, 424, 436, 437], "oppos": [4, 78], "incorrect": [4, 107], "thought": [4, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "region": 4, "squash": [4, 425, 441], "tanh": [4, 251, 252, 265, 266, 268, 269, 270, 272, 278, 295, 296, 297, 319, 424, 428, 435, 436, 437, 438], "prob": [4, 275, 276, 284, 287, 424, 436], "rememb": [4, 435], "remap": 4, "origin": [4, 8, 37, 56, 58, 59, 60, 65, 66, 72, 75, 79, 133, 193, 194, 204, 212, 234, 239, 244, 265, 312, 315, 316, 327, 329, 341, 342, 344, 346, 347, 349, 351, 352, 422, 426, 434, 437, 442], "world": [5, 143, 321, 338, 426, 431, 435, 436, 437, 442], "histor": 5, "ceas": 5, "farama": [5, 138, 139, 151, 152, 424, 437], "gymwrapp": [5, 119, 122, 125, 129, 134, 137, 149, 150, 153, 158, 159, 160, 197, 221, 225, 240, 415, 424, 441], "feel": [5, 416, 432, 441], "free": [5, 7, 13, 14, 15, 17, 20, 21, 22, 23, 24, 176, 192, 195, 326, 338, 346, 419, 424, 432, 436, 441], "gladli": 5, "prepar": [6, 41, 424], "conda": [6, 7, 416], "cmake": 6, "activ": [6, 7, 9, 45, 251, 252, 258, 262, 272, 277, 278, 328, 343, 346, 417, 437, 441], "sim": 6, "bullet": 6, "headless": [6, 7, 134], "cluster": [6, 7, 8, 21, 24, 416], "withbullet": 6, "forg": [6, 7], "aihabitat": [6, 131], "y": [6, 7, 37, 60, 64, 72, 146, 263, 277, 299, 422, 436, 439], "facebookresearch": [6, 131], "subdirectori": 6, "verbos": [6, 432], "magnum_log": 6, "quiet": 6, "habitat_sim_log": 6, "remov": [6, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 60, 61, 65, 67, 68, 69, 72, 77, 79, 80, 81, 82, 83, 84, 86, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 214, 223, 244, 344, 435, 436, 441, 442], "command": [6, 7, 10, 153, 159, 160, 424, 435, 436, 437, 442], "readm": [6, 7, 163, 441], "md": [6, 7], "habitatenv": [6, 415], "_has_habitat": 6, "available_env": [6, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 135, 136, 137, 138, 141, 142, 146, 147, 148, 149, 150, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 442], "startswith": [6, 250, 418, 422, 429], "oserror": 6, "libllvmlit": 6, "ionstal": 6, "pointer": [6, 126, 344, 422], "env_nam": [6, 119, 120, 122, 123, 125, 126, 128, 129, 131, 135, 137, 138, 144, 149, 150, 153, 155, 158, 159, 160, 422, 424, 442], "llvmlite": 6, "config": [6, 7, 212, 239, 253, 258, 286, 403, 404, 405, 407, 410], "var": [6, 7, 30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 202, 232, 234, 242, 244, 329, 344, 349], "ld_preload": [6, 7], "bind": 6, "deactiv": [6, 7, 308, 344], "importerror": [6, 7, 10], "usr": [6, 7, 10], "x86_64": [6, 7], "linux": [6, 7], "gnu": [6, 7], "libopengl": [6, 7], "undefin": [6, 7, 10, 30, 33, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 202, 232, 234, 244, 329, 344, 349, 426, 439], "symbol": [6, 7, 10], "_glapi_tls_curr": [6, 7], "mujoco_env": [6, 7], "libglvnd": [6, 7], "glx": [6, 7], "cos7": [6, 7], "reinstal": [6, 7], "xvfbwrapper": [6, 7], "sysroot": [6, 7], "lib64": [6, 7], "libgldispatch": [6, 7], "offici": [7, 426], "stand": [7, 40, 123, 124, 149, 158, 434, 437], "joint": [7, 423], "contact": [7, 59, 435], "engin": [7, 155, 437], "biomechan": 7, "graphic": 7, "anim": [7, 436], "area": 7, "demand": [7, 431, 442], "fast": [7, 9, 94, 120, 121, 176, 215, 347, 422, 423, 424, 441], "articul": 7, "acquir": [7, 424], "deepmind": [7, 8, 9, 119, 122, 123, 124, 125, 129, 137, 141, 142, 147, 148, 149, 150, 153, 158, 159, 160, 196, 424, 427], "whomev": 7, "licenc": 7, "incorpor": [7, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 246, 264, 288, 351, 425, 428, 437], "relianc": 7, "obsolet": 7, "legaci": [7, 26], "pro": [7, 416], "tip": [7, 416], "glfw": [7, 422], "osmesa": 7, "egl": 7, "advic": [7, 442], "sudo": [7, 416], "apt": [7, 436], "libglfw3": 7, "libglew2": 7, "libgl1": 7, "mesa": 7, "libosmesa6": 7, "workflow": [7, 137, 304, 305, 306], "glew": 7, "mesalib": 7, "anaconda": 7, "libgl": 7, "cos6": 7, "menpo": 7, "glfw3": 7, "mujoco_gl": 7, "pyopengl_platform": 7, "mkdir": 7, "earlier": [7, 418, 422, 424, 425, 435, 436, 439], "roboti": 7, "html": [7, 14, 15, 144, 146, 147, 148], "wget": 7, "mujoco210": 7, "tar": 7, "gz": 7, "xf": 7, "charg": [7, 14, 15, 20, 149, 158], "mjkei": 7, "txt": 7, "mjlib_path": 7, "home": [7, 56, 58, 78, 89], "bin": [7, 261, 287, 309, 417], "libmujoco210": 7, "ld_library_path": 7, "mujoco_py_mujoco_path": 7, "mujoco_py_mjkey_path": 7, "reload": 7, "later": [7, 257, 312, 316, 422, 424, 426, 439], "nvidia": [7, 133, 426], "older": [7, 245], "hack": [7, 422], "adatp": 7, "script": [7, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 165, 389, 409, 413, 417, 418, 419, 422, 423, 426, 431, 435, 436, 437, 439], "unnot": [7, 213], "mujoco_pi": 7, "cymj": 7, "linuxgpuextensionbuild": 7, "filenam": [7, 91, 423, 439], "troubleshoot": 7, "gl": 7, "h": [7, 102, 185, 187, 191, 216, 230, 265, 266, 267, 269, 270, 271, 274, 381, 423, 439], "eglshim": 7, "fatal": 7, "No": [7, 14, 15, 17, 20, 21, 22, 23, 24, 28, 29, 33, 38, 48, 49, 54, 55], "directori": [7, 56, 58, 65, 78, 79, 93, 386, 388, 418, 419, 422, 428, 431, 435], "devel": 7, "ubuntu": [7, 133], "libglew": 7, "dev": 7, "cento": 7, "yum": 7, "glu": 7, "disappear": [7, 423, 425, 434], "libstdc": 7, "glibcxx_3": 7, "29": [7, 107, 108], "compil": [7, 14, 15, 17, 26, 30, 37, 42, 50, 60, 61, 64, 67, 72, 73, 74, 92, 93, 94, 95, 96, 100, 103, 107, 108, 109, 114, 115, 117, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244, 245, 265, 266, 269, 270, 296, 361], "libosmesa": 7, "libgcc": 7, "filenotfounderror": 7, "errno": 7, "patchelf": 7, "fatalerror": 7, "gladloadgl": 7, "mj_env": 7, "912": 7, "glfwerror": 7, "65537": 7, "myscript": 7, "runtimeerror": [7, 8, 14, 15, 17, 20, 30, 33, 34, 35, 37, 42, 43, 50, 60, 61, 67, 69, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 207, 232, 234, 244, 329, 349, 418, 442], "slurm": 7, "mjrendercontext": 7, "pyx": 7, "46": [7, 107, 120, 121], "114": 7, "_setup_opengl_context": 7, "opengl_context": 7, "130": 7, "offscreenopenglcontext": 7, "opengl": [7, 435, 436], "global": [7, 30, 37, 42, 50, 60, 61, 64, 67, 72, 73, 74, 102, 119, 122, 125, 129, 137, 149, 150, 151, 152, 153, 158, 159, 160, 232, 244, 289, 298, 312, 316, 359, 419, 422, 435, 436], "cuda_visible_devic": 7, "id": [7, 19, 26, 66, 79, 100, 102, 107, 108, 119, 122, 125, 128, 129, 137, 149, 150, 153, 158, 159, 160, 161, 162, 288, 329, 347, 384, 388, 430, 439], "slurm_step_gpu": 7, "black": [7, 122, 435], "onscreen": 7, "101": 7, "lgl": 7, "libegl": 7, "x11": [7, 436], "xlib": 7, "libx11": 7, "xorg": 7, "attributeerror": [7, 30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244], "nonetyp": 7, "glgeterror": 7, "this_dir": 7, "pwd": 7, "ln": 7, "libglut": 7, "sketch": [8, 419], "n_training_step": 8, "datapoint": [8, 78, 439], "n_data_per_train": 8, "no_grad": [8, 30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 204, 244, 249, 265, 266, 269, 270, 361, 362, 363, 364, 424, 425, 426, 436], "loss_fn": [8, 425, 429, 430, 441], "zero_grad": [8, 30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244, 287, 419, 422, 424, 425, 426, 429, 432, 435, 436, 437], "backpropag": [8, 120, 121, 135, 136, 149, 326, 327, 328, 334, 335, 336, 337, 338, 339, 342, 343, 344, 346, 347, 348, 349, 352, 359, 429, 436, 437], "differenti": [8, 78, 120, 121, 204, 329, 351, 361, 362, 363, 364, 425, 428, 429, 435, 436, 437], "denomin": 8, "artifact": 8, "numer": [8, 64, 129, 241, 268, 296, 297, 303, 308, 309, 312, 313, 314, 315, 316, 397, 424, 439, 442], "misconcept": 8, "freed": 8, "appear": [8, 11, 31, 54, 79, 80, 100, 107, 108, 125, 418, 437, 439], "compuat": 8, "fix": [8, 36, 149, 227, 327, 329, 345, 349, 423, 432, 437, 442], "retain_graph": [8, 120, 121], "discuss": [8, 9, 430, 435, 436], "inplac": [8, 30, 37, 42, 45, 50, 56, 58, 60, 61, 65, 67, 72, 79, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244, 315, 422], "forward": [8, 14, 15, 17, 20, 21, 22, 23, 24, 30, 37, 42, 50, 57, 60, 61, 62, 63, 64, 67, 72, 73, 74, 102, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 179, 181, 182, 184, 185, 186, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 203, 204, 208, 211, 212, 213, 214, 215, 217, 220, 221, 224, 225, 226, 227, 228, 229, 231, 232, 233, 237, 238, 240, 241, 244, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 277, 278, 279, 280, 282, 283, 286, 288, 289, 291, 292, 294, 298, 299, 307, 309, 311, 312, 314, 315, 316, 319, 320, 322, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 359, 361, 362, 363, 364, 365, 415, 418, 425, 437, 441], "submodul": [8, 30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 169, 227, 244, 267, 271, 323, 344], "param": [8, 30, 37, 42, 50, 60, 61, 66, 67, 72, 119, 122, 125, 129, 137, 143, 149, 150, 153, 158, 159, 160, 182, 189, 192, 193, 197, 204, 206, 214, 215, 221, 225, 231, 233, 235, 242, 244, 259, 261, 277, 278, 279, 295, 307, 312, 315, 318, 344, 354, 358, 361, 362, 363, 364, 365, 422, 426, 432, 435, 436, 437, 438, 441], "grad": [8, 30, 37, 42, 50, 60, 61, 67, 72, 119, 120, 121, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244, 316, 422, 424], "whose": [8, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 60, 61, 66, 67, 68, 69, 72, 77, 80, 81, 82, 83, 84, 119, 122, 125, 129, 137, 149, 150, 151, 152, 153, 158, 159, 160, 189, 212, 227, 233, 234, 237, 239, 244, 289, 315], "fit": [8, 61, 208, 227, 245, 418, 419, 422], "brax": [8, 119, 120, 121, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 215, 427, 442], "jax": [8, 120, 121, 135, 136, 245], "improperli": 8, "underli": [8, 119, 122, 125, 126, 129, 137, 149, 150, 153, 158, 159, 160, 344, 425, 427, 429, 431, 437], "tedeiou": 8, "priorit": [8, 57, 73, 99, 100, 329, 330, 331, 333, 334, 335, 342, 347, 349, 351, 352, 422, 423, 430, 441], "amount": [8, 149, 288, 361, 423, 439], "costli": [8, 437], "constitut": [8, 423, 436, 437], "profil": 8, "frequent": [8, 45, 439], "program": [8, 334, 342, 426, 442], "functorch": [8, 10], "incl": 8, "suit": [8, 124, 424, 427, 441, 442], "mujoco_instal": 8, "valueerror": [8, 30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244], "bad": 8, "fds_to_keep": 8, "new_shap": 8, "permut": [8, 106, 210, 230, 426, 441, 442], "idea": [9, 347, 419, 425, 428, 435, 436], "introductori": 9, "intro": [9, 424, 425], "dai": [9, 441], "2022": [9, 10, 249, 441], "spin": [9, 123, 124], "hug": 9, "syllabu": 9, "lectur": 9, "awesom": 9, "curat": 9, "succinct": [9, 428], "summari": [9, 208, 241, 242, 422, 423, 424, 425], "reddit": 9, "reagent": 9, "orient": [9, 442], "baselines3": 9, "tf": 9, "bandit": [9, 146], "tensorflow": [9, 275, 276], "kera": 9, "acm": 9, "dopamin": 9, "prototyp": [9, 426, 432], "salina": 9, "tianshou": 9, "eleg": 9, "rlpyt": 9, "rllib": 9, "industri": [9, 441], "grade": 9, "factori": [9, 14, 15, 17, 20, 21, 22, 23, 24, 62, 64, 73, 74, 75, 77, 422], "cherri": 9, "jaxrl": 9, "mbrl": [9, 143, 417], "rlmeta": 9, "light": 9, "elegantrl": 9, "cloud": 9, "mtrl": 9, "baselin": 9, "689": 10, "_torchrl": 10, "_zn8pybind116detail11type_casterin2at6tensoreve4loadens_6handleeb": 10, "colab": [10, 424, 425, 435, 436], "notebook": [10, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442], "24": [10, 108, 128, 144, 145, 287, 311, 381, 435], "pip3": [10, 422, 424, 425, 435, 436], "url": [10, 131], "org": [10, 14, 15, 27, 57, 99, 100, 120, 121, 123, 124, 131, 135, 136, 141, 142, 144, 145, 146, 155, 163, 164, 185, 212, 237, 247, 253, 254, 255, 256, 257, 258, 261, 262, 263, 269, 274, 275, 276, 281, 282, 283, 287, 288, 289, 291, 292, 298, 309, 326, 327, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 345, 346, 348, 349, 350, 351, 361, 366, 374, 414, 433, 438], "whl": 10, "u": [10, 265, 266, 269, 270, 437], "upgrad": 10, "lib_version_her": 10, "pyav": 11, "conveni": [11, 185, 424, 435, 436, 437, 439], "power": [11, 423], "knob": 11, "dispos": 11, "clarifi": 11, "behind": [11, 221, 415], "ultim": [11, 268, 296, 297], "ffmpeg": 11, "whatev": [11, 418, 422], "fed": [11, 436, 439], "feed": [11, 212, 239, 344, 417, 422, 435, 436, 439], "suppos": [11, 149, 394, 419, 442], "snippet": [11, 212, 237, 422], "gave": 11, "extrem": [11, 149, 158, 326, 328, 343, 346, 348], "blurri": [11, 426], "stitch": 11, "exp_nam": [11, 381, 382, 383, 386, 387, 388, 409, 423, 431, 432], "my_exp": [11, 431], "pixels_onli": [11, 123, 124, 128, 130, 131, 155, 422, 423, 431, 432, 441, 442], "my_video": [11, 431], "record_env": [11, 431, 432], "codec": 11, "h264": 11, "crf": 11, "preset": 11, "qualiti": [11, 306, 417], "allow_non": 12, "unwrap": [12, 196, 234, 389], "seealso": 12, "timeout": [13, 14, 15, 17, 20, 21, 22, 23, 24, 149], "close_env": [13, 14, 15, 17, 20, 21, 22, 23], "shutdown": [13, 14, 15, 17, 20, 21, 22, 23, 24, 153, 159, 182, 422, 423, 439, 441], "implic": [13, 21, 22, 23], "notimplementederror": [13, 21, 22, 23, 79, 422], "subclass": [13, 14, 15, 17, 20, 21, 22, 23, 24, 30, 31, 34, 37, 42, 60, 61, 67, 72, 80, 102, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 165, 180, 181, 233, 240, 246, 247, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 279, 282, 283, 286, 288, 291, 292, 294, 299, 307, 309, 311, 314, 315, 316, 317, 319, 322, 344, 346, 423, 425, 430, 437, 439], "policy_weight": [13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24], "worker_id": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "kwarg": [13, 14, 15, 17, 20, 21, 23, 24, 29, 30, 31, 32, 34, 35, 37, 38, 42, 43, 44, 47, 49, 50, 52, 53, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 79, 80, 81, 82, 83, 84, 91, 93, 94, 95, 96, 98, 99, 100, 102, 107, 108, 109, 111, 113, 115, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 172, 173, 179, 180, 182, 189, 212, 214, 223, 227, 232, 233, 234, 236, 238, 239, 241, 243, 244, 246, 248, 250, 251, 252, 254, 255, 256, 257, 260, 263, 264, 267, 268, 271, 272, 273, 274, 277, 278, 279, 284, 288, 297, 299, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 354, 359, 360, 361, 362, 363, 364, 365, 379, 381, 385, 386, 388, 392, 399, 404, 405, 410, 411, 412, 418, 424, 426, 436], "upload": [13, 14, 15, 17, 20, 21, 22, 23, 24], "transfer": [13, 14, 15, 17, 20, 21, 22, 23, 24, 316], "fetch": [13, 14, 15, 17, 18, 20, 21, 22, 23, 24, 56, 58, 65, 79, 120, 121, 123, 124, 204, 428, 438, 439], "typeerror": [13, 14, 15, 17, 20, 21, 22, 23, 24], "weight_updat": [13, 14, 15, 17, 20, 21, 22, 23, 24, 423], "overwritten": [13, 14, 15, 17, 20, 21, 22, 23, 24, 45, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 199], "localweightsupdaterbas": [13, 14, 15, 17, 20, 21, 22, 23, 24], "remoteweightsupdaterbas": [13, 14, 15, 17, 20, 21, 22, 23, 24], "create_env_fn": [14, 15, 17, 20, 21, 22, 23, 24, 126, 149, 158, 422, 441], "policy_factori": [14, 15, 17, 20, 21, 22, 23, 24], "device_typ": [14, 17, 20, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 212, 237, 239, 251, 252, 253, 254, 255, 256, 257, 263, 272, 277, 278, 280, 281, 286, 289, 315, 396, 407], "env_devic": [14, 15, 17, 20, 21, 22, 23, 24, 423], "create_env_kwarg": [14, 15, 17, 20, 24, 126, 144, 149, 158, 232, 422, 442], "collector_class": [14, 15, 21, 22, 23, 24], "datacollectorbas": [14, 16, 18, 19, 22, 312, 316, 401, 404, 405, 409, 415], "postproc": [14, 15, 17, 20, 21, 22, 23, 24, 50, 217, 423, 439], "explorationtyp": [14, 15, 17, 20, 21, 22, 23, 24, 312, 344, 394, 417, 422, 423, 424, 425, 428, 435, 441], "interactiontyp": [14, 17, 20, 21, 22, 23, 24, 167, 174, 312, 316, 394], "preemptive_threshold": [14, 15, 20], "num_thread": [14, 15, 20, 56, 58, 65, 79, 129, 149, 158], "num_sub_thread": [14, 15, 20, 149, 158], "str": [14, 15, 17, 20, 21, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 89, 91, 93, 99, 100, 102, 113, 119, 120, 122, 123, 124, 125, 127, 128, 129, 130, 131, 135, 137, 141, 142, 144, 146, 147, 148, 149, 150, 151, 152, 153, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 169, 174, 177, 181, 185, 196, 202, 203, 204, 212, 216, 225, 226, 229, 231, 232, 234, 235, 237, 239, 240, 241, 244, 245, 248, 260, 261, 267, 271, 273, 274, 277, 278, 279, 289, 290, 298, 303, 308, 309, 312, 313, 314, 315, 316, 319, 320, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 355, 359, 360, 361, 362, 363, 364, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 413, 423, 424, 426], "set_trunc": [14, 15, 17, 20, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "use_buff": [14, 15, 17, 149, 158], "extend_buff": [14, 15, 17], "replay_buffer_chunk": 14, "trust_polici": [14, 15, 17, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "compile_polici": [14, 15, 17], "cudagraph_polici": [14, 15, 17], "no_cuda_sync": [14, 15, 17], "datacollector": [14, 15, 17, 20, 24, 50, 346, 424, 430, 439], "recept": 14, "safe": [14, 15, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 56, 58, 65, 68, 69, 77, 79, 80, 81, 82, 83, 84, 100, 107, 246, 288, 295, 296, 303, 308, 309, 312, 313, 314, 315, 316, 318, 417, 441], "sota": [14, 15, 143, 200, 348, 390, 404, 422, 423, 441], "guard": [14, 15], "doc": [14, 15, 75, 131, 134, 135, 136, 146, 155, 388, 418, 423, 435, 436, 439], "env_mak": [14, 15, 17, 24, 62, 119, 409, 442], "2000": [14, 15, 17, 50, 78, 132, 287, 381, 439], "50": [14, 15, 17, 24, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 59, 66, 68, 69, 77, 80, 81, 82, 83, 84, 107, 108, 141, 142, 244, 425, 439], "del": [14, 15, 17, 422, 423, 424, 434, 435, 439, 441, 442], "int64": [14, 15, 17, 26, 28, 29, 33, 38, 39, 45, 46, 47, 48, 49, 54, 55, 56, 58, 59, 60, 65, 66, 70, 73, 75, 78, 79, 89, 99, 107, 119, 122, 125, 129, 137, 140, 141, 142, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 158, 159, 160, 178, 182, 196, 210, 217, 225, 261, 288, 290, 308, 309, 312, 313, 314, 417, 437], "tensordictmodulebas": [14, 15, 17, 20, 21, 22, 23, 24, 37, 60, 72, 184, 299, 308, 311, 313, 425], "undergon": [14, 15, 17, 20, 21, 22, 23, 24, 78], "env_obs_kei": [14, 15, 17, 20, 21, 22, 23, 24], "mustn": [14, 15, 17, 20, 21, 22, 23, 24], "pickl": [14, 15, 17, 20, 21, 22, 23, 24, 30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 241, 242, 244], "exclus": [14, 15, 17, 20, 21, 22, 23, 24, 64, 73, 74, 85, 86, 100, 107, 108, 182, 197, 199, 265, 267, 269, 271, 275, 276, 308, 309, 313, 314, 350, 351, 352, 361, 362, 363, 364, 365, 388, 413, 417], "lifespan": [14, 15, 17, 20, 21, 22, 23, 423], "divis": [14, 15, 17, 20, 21, 22, 23, 30, 100, 107, 108, 242, 247, 436], "endless": [14, 15, 17, 20, 21, 22, 23], "sit": [14, 15, 17, 20, 21, 22, 23, 24, 401, 423], "cast": [14, 15, 17, 20, 21, 22, 23, 24, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 60, 61, 65, 67, 68, 69, 72, 77, 79, 80, 81, 82, 83, 84, 89, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 135, 136, 137, 144, 145, 147, 148, 149, 150, 153, 155, 158, 159, 160, 161, 162, 178, 179, 181, 182, 184, 185, 186, 189, 190, 192, 193, 195, 196, 197, 198, 200, 203, 204, 211, 212, 213, 214, 215, 217, 220, 221, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 244, 315, 435, 442], "deriv": [14, 15, 21, 22, 23, 24, 76, 259, 399], "span": [14, 15, 17, 20, 21, 22, 23, 24, 100, 107, 108], "n_step": [14, 15, 17, 20, 21, 22, 23, 24, 50, 244, 311, 423, 424, 435, 436], "mainli": [14, 15, 17, 20, 21, 22, 23, 24, 66, 388, 417, 435, 436, 437], "round": [14, 15, 17, 20, 21, 22, 23, 24, 122], "closest": [14, 15, 17, 20, 21, 22, 23, 24], "boolm": [14, 15, 20], "ratio": [14, 15, 20, 66, 422, 424], "finish": [14, 15, 17, 20, 24, 129, 217, 442], "earli": [14, 15, 20, 50, 129, 225, 441], "safeti": [14, 15, 20, 143, 149, 158, 242], "harm": [14, 15, 20, 149, 158], "add_truncated_kei": [14, 15, 17, 20, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 234], "trust": [14, 15, 17, 119, 122, 125, 129, 137, 141, 142, 149, 150, 153, 158, 159, 160, 190, 271], "cudagraphmodul": [14, 15, 17, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "behaviour": [14, 15, 17, 37, 60, 72, 425, 426, 441], "bypass": [14, 15, 17, 428], "isaaclab": [14, 15, 17, 130, 134], "maniskil": [14, 15, 17], "crash": [14, 15, 17, 217], "multiprocessedweightupdat": [14, 15], "ordereddict": [14, 15, 17, 20, 24, 30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 202, 232, 234, 241, 242, 244, 329, 349], "worker0": [14, 15, 20], "state_dict0": [14, 15, 20], "worker1": [14, 15, 20], "state_dict1": [14, 15, 20], "reset_idx": [14, 15, 20], "static_se": [14, 15, 17, 20, 24, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 234], "increment": [14, 15, 17, 20, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 208, 343], "env_fn": [14, 15, 17, 20, 126, 411, 412], "env_fn_parallel": [14, 15, 17, 20], "300": [14, 15, 17, 20, 107, 108, 256, 257], "out_se": [14, 15, 17, 20, 442], "irrevers": [14, 15, 20], "pipe": [14, 15, 17, 20, 149], "tqdm": [14, 15, 17, 20, 57, 62, 63, 64, 73, 74, 102, 399, 422, 424, 425, 435, 436, 437], "ale_pi": [14, 15, 17, 20, 426], "10000": [14, 15, 20, 24, 149, 247, 399, 425], "progress": [14, 15, 17, 20, 392, 393, 394, 399, 419, 423, 425, 442], "bar": [14, 15, 17, 20, 93, 95, 115, 307, 392, 393, 394, 399, 419, 423], "pbar": [14, 15, 17, 20, 422, 424, 425, 435, 436, 437], "100_000": [14, 15, 17, 20, 426, 432], "prec_wc": [14, 15, 17, 20], "wc": [14, 15, 17, 20], "write_count": [14, 15, 17, 20, 57, 62, 63, 64, 73, 74, 102], "set_descript": [14, 15, 17, 20, 422, 424, 425, 435, 436, 437], "remote_collector": [16, 24], "max_interv": 16, "leverag": [16, 24, 119, 122, 125, 129, 137, 140, 149, 150, 151, 152, 153, 158, 159, 160, 422, 436, 442], "date": [16, 122, 184, 384], "all_worker_id": [16, 18, 19], "_get_server_weight": [16, 19], "_maybe_map_weight": [16, 19], "_sync_weights_with_work": [16, 19], "_skip_upd": 16, "interv": [16, 178, 229, 380, 381, 391, 401, 423, 437], "raycollector": [16, 62, 415], "scope": [16, 18, 19, 79, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 426, 442], "push_weight": [16, 18, 19], "push": [16, 18, 19], "noth": [16, 18, 19, 45, 137, 422, 424], "register_collector": [16, 18, 19], "return_same_td": 17, "interruptor": 17, "cautious": [17, 346], "whole": [17, 30, 34, 35, 37, 42, 43, 50, 60, 61, 67, 69, 72, 78, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 202, 232, 234, 244, 312, 329, 349, 390, 422, 424], "_interruptor": 17, "outsid": [17, 193, 232, 418, 431, 435, 436, 437], "start_collect": 17, "stop_collect": 17, "preeptiv": 17, "init": [17, 24, 30, 37, 42, 50, 60, 61, 62, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 189, 233, 241, 244, 277, 278, 279, 361, 388, 423, 424], "chunk": [17, 428], "policy_state_dict": 17, "env_state_dict": 17, "256": [17, 89, 141, 142, 202, 258, 423, 424, 426, 435, 436], "weight_gett": 18, "vanillaweightsend": 18, "sender": 18, "weightupdatereceiverbas": 18, "update_weight": [18, 401], "piec": [19, 92, 103, 114, 117, 118, 422, 423, 424, 431, 435, 436, 437, 439], "scheme": [19, 419, 442], "hanld": 19, "unchang": [19, 30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 189, 194, 212, 227, 233, 234, 237, 239, 244, 264, 315, 381, 396, 422, 439], "__call__": [19, 30, 37, 42, 50, 59, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244, 316, 419], "proxi": [19, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 56, 58, 65, 68, 69, 77, 79, 80, 81, 82, 83, 84, 276, 284, 312, 418], "weakref": [19, 45, 79], "registr": [19, 423], "exporationtyp": [21, 22, 23], "collector_kwarg": [21, 22, 23, 24], "num_workers_per_collector": [21, 22, 23, 24], "slurm_kwarg": [21, 22, 23], "update_after_each_batch": [21, 22, 23, 24], "max_weight_update_interv": [21, 22, 23, 24], "tcp_port": [21, 22, 23, 25], "respect": [21, 22, 23, 30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 183, 189, 192, 195, 206, 212, 213, 222, 227, 233, 234, 237, 239, 244, 265, 269, 277, 292, 315, 320, 326, 328, 343, 346, 348, 361, 363, 364, 395, 418, 424, 425, 435, 436], "subnod": [21, 22, 23, 24], "readi": [21, 23, 24, 416, 423, 424, 426, 428, 431, 439, 441], "fashion": [21, 23, 24, 56, 58, 65, 79, 108], "distributed_back": [21, 22], "ucc": [21, 22], "submitit_delai": [21, 25], "former": [21, 22, 23, 26, 30, 37, 42, 57, 60, 61, 64, 67, 72, 73, 74, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 246, 247, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 279, 282, 283, 286, 288, 291, 292, 294, 299, 307, 309, 311, 314, 319, 322, 422], "whilst": [21, 22, 23], "homonym": [21, 22, 23, 437], "visit": [21, 22, 23, 79], "facebookincub": [21, 22, 23], "tcp": [21, 22, 23, 25], "port": [21, 22, 23, 25, 161], "10003": [21, 22, 23, 25], "distributedweightupdat": 21, "liter": [22, 79, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 165, 302], "update_interv": 22, "frequenc": [22, 287, 422], "visible_devic": 23, "tensorpipe_opt": 23, "experiment": [23, 26, 54, 312, 316], "tensorpiperpcbackendopt": 23, "rpcweightupdat": 23, "ray_init_config": [24, 62], "remote_config": [24, 57, 62, 63, 64, 73, 74, 102], "num_collector": [24, 411, 412, 422, 423], "coordin": [24, 191], "autodetect": 24, "num_cpu": [24, 62], "num_gpu": [24, 62], "1024": [24, 62, 258, 439], "equat": [24, 60, 79, 129, 241, 242, 288, 325, 328, 350, 424, 427, 437], "exce": [24, 439], "indefinit": [24, 88], "rayreplaybuff": [24, 415], "enfoc": 24, "rayweightupdat": 24, "distributed_collector": [24, 62], "add_collector": 24, "local_polici": 24, "stop_remote_collector": 24, "num_job": 25, "tcpport": 25, "submitit_main_conf": 25, "slurm_cpus_per_task": 25, "slurm_gpus_per_nod": 25, "slurm_partit": 25, "timeout_min": 25, "submitit_collection_conf": 25, "delai": [25, 351, 429], "jump": [25, 427], "host": [25, 30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 189, 212, 227, 233, 234, 237, 239, 244, 315], "satellit": 25, "rendezv": 25, "hang": 25, "forev": 25, "default_config": [25, 253, 258, 286, 307], "default_slurm_conf_main": 25, "default_slurm_conf": 25, "rollout_tensordict": 26, "nestedkei": [26, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 58, 60, 65, 68, 69, 70, 72, 77, 78, 79, 80, 81, 82, 83, 84, 100, 107, 108, 119, 122, 125, 129, 137, 149, 150, 153, 154, 158, 159, 160, 171, 176, 177, 178, 179, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 199, 201, 202, 203, 204, 205, 208, 209, 210, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 241, 242, 244, 246, 250, 261, 264, 288, 290, 307, 311, 316, 331, 359, 379, 381], "as_nest": 26, "x": [26, 37, 50, 60, 61, 64, 66, 67, 72, 108, 137, 202, 204, 230, 235, 245, 247, 249, 250, 252, 261, 263, 265, 266, 267, 269, 270, 271, 272, 274, 277, 278, 299, 308, 312, 313, 322, 325, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 399, 422, 426, 435, 437, 439, 441], "durat": [26, 436], "meta": [26, 56, 58, 65, 77, 79, 127, 131, 326, 328, 343, 346, 348, 419, 424, 435, 436, 439], "aren": [26, 226, 425], "eventu": [26, 289, 425, 437], "recov": [26, 107, 108, 317, 334, 342, 434], "layout": 26, "to_padded_tensor": 26, "nested_tensor": [26, 128, 130], "stride": [26, 30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244, 251, 252, 254, 255, 263, 277, 423, 435, 441], "jag": 26, "focu": [26, 422, 423, 424, 426, 428, 429, 430, 435], "team": [26, 435, 436, 441], "cat": [26, 45, 320, 327, 329, 330, 342, 347, 349, 351, 352, 435, 439, 441], "arang": [26, 28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 100, 107, 108, 178, 261, 275, 276, 308, 390, 417, 439], "obs_": 26, "trajectory_id": 26, "int32": [26, 30, 31, 45, 74, 80, 107, 135, 136, 147, 148, 160, 170, 311], "data_split": 26, "got": [26, 430], "init_kl_coef": 27, "horizon": [27, 141, 142, 163, 164, 248, 274, 424], "kl": [27, 36, 66, 204, 338, 343], "describ": [27, 56, 58, 65, 77, 79, 154, 186, 295, 296, 331, 384, 418, 422, 424, 435, 436, 437, 442], "ziegler": 27, "et": [27, 248], "relax": [27, 379], "penalti": [27, 66, 340, 343], "strai": [27, 66], "greater": [27, 100, 107, 108, 205, 206, 267, 271, 329, 422, 423], "increas": [27, 91, 185, 228, 249, 288, 435, 436], "pull": [27, 45, 79, 439], "toward": [27, 239], "aggress": 27, "kl_coef": [27, 36, 66], "arxiv": [27, 57, 99, 100, 120, 121, 123, 124, 135, 136, 141, 142, 144, 145, 155, 163, 164, 185, 212, 237, 247, 253, 254, 255, 256, 257, 258, 261, 262, 263, 269, 274, 281, 282, 283, 287, 288, 289, 291, 292, 298, 309, 326, 327, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 345, 346, 349, 350, 351, 361, 366, 374, 438], "pdf": [27, 185, 253, 254, 255, 256, 257, 261, 287, 288, 309, 329, 336, 340, 347, 350, 351, 361, 366, 374], "1909": 27, "08593": 27, "lm": 27, "blob": 27, "master": [27, 435, 436], "lm_human_prefer": 27, "train_polici": 27, "kl_valu": 27, "coef": [27, 204], "newest": 27, "int8": [28, 125, 140, 151, 152, 183], "encod": [28, 29, 30, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 57, 68, 69, 77, 80, 81, 82, 83, 84, 120, 121, 125, 128, 129, 130, 131, 134, 135, 136, 144, 145, 147, 148, 155, 161, 162, 178, 194, 283, 284, 287, 291, 325, 423, 424, 425, 428, 437, 439], "null": [28, 31, 32, 34, 35, 37, 43, 44, 52, 53, 57, 68, 69, 73, 77, 80, 81, 82, 83, 84, 99, 100, 183, 202], "denot": [28, 436], "clariti": [28, 45], "assert_is_in": [28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84], "cardin": [28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 79, 80, 81, 82, 83, 84, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 261, 290, 308, 309, 314, 424], "outcom": [28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 259, 275, 276, 295, 344, 435], "cartesian": [28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84], "clear_device_": [28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84], "is_in": [28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 442], "np": [28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 129, 240, 319, 379, 426, 435, 437], "ndarrai": [28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 129, 288, 319, 379, 426, 435], "ignore_devic": [28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84], "arrai": [28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 57, 66, 68, 69, 77, 80, 81, 82, 83, 84, 99, 119, 122, 125, 129, 130, 137, 149, 150, 153, 158, 159, 160, 196, 265, 266, 269, 270, 422, 435], "use_mask": [28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 151, 152], "erase_memoize_cach": [28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84], "memoiz": [28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 129], "memoize_encod": [28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84], "compliant": [28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84], "singleton": [28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 251, 252, 272, 293, 294, 415, 418], "start_dim": [28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84], "end_dim": [28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84], "classmethod": [28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 62, 63, 64, 65, 68, 69, 72, 73, 74, 77, 79, 80, 81, 82, 83, 84, 102, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 202, 237, 245, 252, 253, 286], "implements_for_spec": [28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84], "torch_funct": [28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84], "index_typ": [28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 52, 53, 68, 69, 77, 80, 81, 82, 83, 84], "tensor_to_index": [28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84], "exanpl": [28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84], "one_hot": [28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 261, 276, 290], "categ": [28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 312], "to_categorical_spec": [28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84], "idx_one_hot": [28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84], "idx_categ": [28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84], "to_categor": [28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84], "make_neg_dim": [28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84], "convert": [28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 60, 61, 65, 67, 68, 69, 71, 72, 77, 78, 79, 80, 81, 82, 83, 84, 119, 120, 121, 122, 125, 128, 129, 130, 131, 134, 135, 136, 137, 144, 145, 147, 148, 149, 150, 153, 155, 158, 159, 160, 161, 162, 189, 192, 195, 212, 227, 233, 234, 237, 239, 241, 242, 244, 315, 325, 344, 422, 423, 424, 437, 439], "shortcut": [28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 437, 442], "ndimens": [28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 422], "violat": [28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 417], "project": [28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 61, 68, 69, 77, 80, 81, 82, 83, 84, 194, 246, 269, 288, 303, 308, 309, 312, 313, 314, 315, 316, 388, 417, 441, 442], "uniformli": [28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 101, 344, 442], "normal": [28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 63, 68, 69, 77, 80, 81, 82, 83, 84, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 208, 241, 242, 246, 247, 251, 252, 268, 272, 275, 276, 296, 297, 312, 316, 328, 329, 343, 346, 394, 397, 413, 417, 419, 425, 428, 436, 442], "drawn": [28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 227, 264, 312, 316, 424, 435, 436], "set_provisional_n": [28, 29, 33, 38, 46, 47], "temporarili": [28, 29, 33, 38, 46, 47, 91, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 165, 430, 439], "dest": [28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 72, 77, 80, 81, 82, 83, 84, 212, 237, 239, 315], "to_numpi": [28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "transformed_in": [28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84, 234, 295, 413], "check_spec_encod": [28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84], "to_one_hot": [28, 29, 33, 38, 46, 47, 48, 49, 54, 55], "hot": [28, 29, 33, 38, 46, 47, 48, 49, 54, 55, 120, 121, 128, 130, 131, 134, 135, 136, 141, 142, 144, 145, 147, 148, 151, 152, 155, 161, 162, 163, 164, 178, 179, 194, 261, 284, 285, 290, 308, 309, 313, 314, 326, 327, 329, 330, 331, 333, 334, 335, 336, 337, 342, 344, 346, 347, 348, 349, 351, 352, 359, 425], "categ_sampl": [28, 29, 33, 38, 48, 49, 54, 55], "onehot_sampl": [28, 29, 33, 38, 48, 49], "to_one_hot_spec": [28, 29, 33, 38, 46, 47, 48, 49, 54, 55], "categoricalbox": [28, 29, 33, 38, 48, 49, 54, 55, 150], "type_check": [28, 29, 31, 32, 33, 34, 35, 38, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 68, 69, 77, 80, 81, 82, 83, 84], "update_mask": [28, 29, 33, 38, 46, 47, 48, 49, 54, 55], "disabl": [28, 29, 30, 33, 37, 38, 42, 46, 47, 48, 49, 50, 54, 55, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 234, 244, 268, 297, 379, 422, 435, 436], "unmask": [28, 29, 33, 38, 46, 47, 48, 49, 54, 55], "ts": [28, 29, 33, 38, 46, 47, 48, 49, 54, 55], "num_bit": 30, "convert_to_binari": 30, "decim": 30, "1001": 30, "bit": [30, 202, 424, 425, 427, 435, 436, 439], "heavysid": 30, "binary_to_decim": 30, "add_modul": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244], "fn": [30, 37, 42, 50, 59, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 202, 235, 244, 411, 412], "recurs": [30, 34, 35, 37, 42, 43, 50, 60, 61, 67, 69, 72, 85, 86, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244, 344, 426], "init_weight": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244], "m": [30, 37, 42, 46, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 194, 244, 250, 316, 423, 437], "fill_": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244, 423, 425], "net": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244, 255, 257, 260, 263, 278, 326, 327, 329, 335, 342, 346, 347, 348, 349, 409, 423, 437, 438, 441], "in_featur": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 189, 212, 227, 233, 234, 237, 239, 244, 251, 252, 254, 255, 256, 257, 263, 272, 277, 278, 280, 281, 304, 315, 323, 331, 333, 426, 428, 429], "out_featur": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 143, 149, 150, 153, 158, 159, 160, 189, 212, 227, 233, 234, 237, 239, 244, 248, 251, 252, 254, 255, 256, 257, 262, 263, 267, 271, 272, 274, 277, 278, 280, 281, 304, 308, 315, 323, 331, 333, 417, 422, 425, 426, 428, 429, 432, 441], "bia": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 189, 202, 212, 227, 232, 233, 234, 237, 239, 244, 247, 251, 252, 254, 255, 256, 257, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 278, 280, 281, 288, 315, 322, 324, 325, 329, 344, 349, 418, 422, 423, 424, 425, 436], "requires_grad": [30, 37, 42, 50, 60, 61, 67, 72, 119, 120, 121, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 204, 232, 234, 244, 287, 316, 329, 349], "bfloat16": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244], "datatyp": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244, 439], "member": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244, 344, 381], "xdoctest": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 189, 202, 212, 227, 232, 233, 234, 237, 239, 244, 315, 329, 344, 349], "buf": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244], "20l": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244, 344], "1l": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244, 344], "5l": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244, 344], "doubl": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 189, 192, 193, 195, 212, 227, 233, 234, 237, 239, 244, 315, 331, 336, 341, 347, 350, 359, 422, 423, 424, 425, 442], "eval": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 234, 241, 244, 249, 417, 422, 423, 424], "evalu": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 130, 137, 141, 142, 149, 150, 153, 158, 159, 160, 234, 244, 249, 259, 275, 276, 284, 297, 347, 404, 405, 423, 424, 432], "dropout": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 234, 244, 249, 250, 265, 267, 269, 271, 272, 417, 425], "batchnorm": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 234, 244, 247], "comparison": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 234, 244, 344, 422, 423], "extra_repr": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244], "recip": [30, 37, 42, 59, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 246, 247, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 279, 282, 283, 286, 288, 291, 292, 294, 299, 307, 309, 311, 314, 319, 322], "get_buff": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244], "get_submodul": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244], "qualifi": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244], "referenc": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244], "resolv": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244], "someth": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 140, 149, 150, 153, 158, 159, 160, 244, 416, 423, 424, 437, 442], "get_extra_st": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 241, 242, 244], "set_extra_st": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 241, 242, 244], "picklabl": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 241, 242, 244], "get_paramet": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244], "net_b": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244], "net_c": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244], "conv": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244, 251, 252, 423], "conv2d": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244, 252, 254, 255, 263, 277], "kernel_s": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244, 251, 252, 254, 255, 263, 277, 282, 423, 441], "diagram": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244], "degre": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 190, 244], "named_modul": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244], "half": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 189, 212, 227, 233, 234, 237, 239, 244, 315, 422], "ipu": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244], "strict": [30, 37, 42, 50, 56, 58, 60, 61, 65, 67, 72, 79, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 232, 234, 244, 329, 349, 426], "descend": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 232, 234, 244, 329, 349], "get_swap_module_params_on_convers": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 232, 234, 244, 329, 349], "persist": [30, 37, 40, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 176, 202, 232, 234, 244, 329, 349], "preserv": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 232, 234, 244, 315, 329, 349], "missing_kei": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 232, 234, 244, 329, 349], "unexpected_kei": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 232, 234, 244, 329, 349], "namedtupl": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 232, 234, 244, 329, 349], "l": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244, 265, 269, 360, 424, 437], "idx": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244], "mtia": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244], "named_buff": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244], "remove_dupl": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244, 344], "prepend": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244, 344, 426], "running_var": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244], "named_children": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244], "conv4": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244], "conv5": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244], "memo": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244], "named_paramet": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 204, 244, 344], "register_backward_hook": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244], "removablehandl": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244], "favor": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 241, 244, 424], "register_full_backward_hook": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244], "register_buff": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244], "running_mean": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244], "alongsid": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244, 431], "num_featur": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244, 247], "register_forward_hook": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244, 261, 290], "with_kwarg": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244], "always_cal": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244], "register_module_forward_hook": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244], "regardless": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244, 328, 343, 346], "register_forward_pre_hook": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244], "invok": [30, 37, 42, 50, 60, 61, 63, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244], "And": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244, 429], "forward_pr": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244], "register_module_forward_pre_hook": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244], "ordinarili": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244], "grad_input": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244], "grad_output": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244], "technic": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244, 423, 425, 426, 428], "caller": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244], "register_module_full_backward_hook": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244], "register_full_backward_pre_hook": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244], "backward_pr": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244], "register_module_full_backward_pre_hook": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244], "register_load_state_dict_post_hook": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244], "incompatible_kei": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244], "thrown": [30, 37, 42, 50, 60, 61, 67, 68, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244, 439], "register_load_state_dict_pre_hook": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244], "local_metadata": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244], "error_msg": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244], "noqa": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 134, 137, 149, 150, 153, 158, 159, 160, 244], "b950": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244], "register_modul": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244, 419], "alia": [30, 37, 42, 50, 57, 60, 61, 62, 63, 64, 67, 72, 73, 74, 79, 93, 94, 95, 96, 102, 109, 111, 115, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244, 326, 327, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 345, 346, 347, 348, 349, 351, 352, 359, 365], "register_paramet": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244], "register_state_dict_post_hook": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244], "register_state_dict_pre_hook": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244], "keep_var": [30, 37, 42, 50, 56, 58, 60, 61, 65, 67, 72, 79, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 202, 232, 234, 244, 329, 349], "requires_grad_": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244, 426], "autograd": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 202, 232, 234, 244, 329, 349], "freez": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 241, 242, 244], "finetun": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244], "gan": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244], "set_submodul": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244], "share_memori": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 126, 129, 137, 149, 150, 153, 158, 159, 160, 244, 422], "share_memory_": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244, 441], "destin": [30, 37, 42, 50, 56, 58, 60, 61, 65, 67, 72, 79, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 176, 184, 192, 193, 195, 202, 232, 234, 237, 241, 244, 329, 349, 381], "averag": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 202, 232, 234, 241, 242, 244, 288, 329, 337, 338, 349, 397, 422, 424], "shallow": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 202, 232, 234, 244, 329, 349, 425], "design": [30, 37, 42, 50, 52, 54, 60, 61, 67, 72, 105, 111, 118, 119, 122, 125, 129, 137, 141, 142, 149, 150, 153, 158, 159, 160, 178, 185, 202, 213, 232, 234, 242, 244, 307, 326, 327, 328, 329, 334, 335, 336, 337, 338, 339, 342, 343, 344, 346, 347, 348, 349, 352, 359, 415, 422, 423, 424, 425, 427, 428, 429, 434, 435, 436, 437, 439, 441, 442], "detach": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 202, 232, 234, 244, 329, 340, 344, 349, 351, 361, 362, 363, 364, 422], "non_block": [30, 37, 42, 50, 56, 58, 60, 61, 65, 67, 72, 79, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 189, 212, 227, 233, 234, 237, 239, 244, 315, 425], "memory_format": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 189, 212, 227, 233, 234, 237, 239, 244, 315], "channels_last": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 189, 212, 227, 233, 234, 237, 239, 244, 315], "tri": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 189, 212, 227, 233, 234, 237, 239, 244, 315, 431], "pin": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 189, 212, 227, 233, 234, 237, 239, 244, 315], "4d": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 189, 212, 227, 233, 234, 237, 239, 244, 315], "ignore_w": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 189, 212, 227, 233, 234, 237, 239, 244, 315], "1913": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 189, 212, 227, 233, 234, 237, 239, 244, 315], "3420": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 189, 212, 227, 233, 234, 237, 239, 244, 315], "5113": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 189, 212, 227, 233, 234, 237, 239, 244, 315], "2325": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 189, 212, 227, 233, 234, 237, 239, 244, 315], "torch_doctest_cuda1": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 189, 212, 227, 233, 234, 237, 239, 244, 315], "gpu1": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 189, 212, 227, 233, 234, 237, 239, 244, 315], "1914": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 189, 212, 227, 233, 234, 237, 239, 244, 315], "5112": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 189, 212, 227, 233, 234, 237, 239, 244, 315], "2324": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 189, 212, 227, 233, 234, 237, 239, 244, 315], "float16": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 189, 212, 227, 233, 234, 237, 239, 244, 266, 270, 315], "cdoubl": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 189, 212, 227, 233, 234, 237, 239, 244, 315], "3741": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 189, 212, 227, 233, 234, 237, 239, 244, 315], "j": [30, 37, 42, 50, 57, 60, 61, 67, 72, 99, 100, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 189, 212, 227, 233, 234, 237, 239, 244, 315, 419, 429], "2382": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 189, 212, 227, 233, 234, 237, 239, 244, 315], "5593": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 189, 212, 227, 233, 234, 237, 239, 244, 315], "4443": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 189, 212, 227, 233, 234, 237, 239, 244, 315], "complex128": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 189, 212, 227, 233, 234, 237, 239, 244, 315], "6122": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 189, 212, 227, 233, 234, 237, 239, 244, 315], "1150": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 189, 212, 227, 233, 234, 237, 239, 244, 315], "to_empti": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244], "dst_type": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244], "xpu": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244], "set_to_non": [30, 37, 42, 50, 60, 61, 67, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 244], "upper": [31, 105, 207], "continuousbox": [31, 34, 80, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 170, 202, 205, 227, 235], "provision": 33, "descript": [34, 134, 163, 181, 423, 424], "akin": 34, "unnam": 34, "compositespec": [34, 415, 437, 442], "constraint": [34, 143, 296, 424, 435, 436], "data_cl": 34, "tensorclass": [34, 56, 58, 65, 79, 89, 93, 95, 115], "pixels_spec": 34, "observation_vector_spec": 34, "composite_spec": 34, "observation_vector": [34, 186, 422], "_nodefault": [34, 35, 43, 69], "is_empti": [34, 35, 43, 69, 437], "include_nest": [34, 35, 43, 69], "leaves_onli": [34, 35, 43, 69], "is_leaf": [34, 35, 43, 69], "_compositespecitemsview": [34, 35, 43, 69], "_compositespeckeysview": [34, 35, 43, 69], "reflect": [34, 35, 43, 69, 130, 151, 152, 176, 202, 240, 344, 402, 423, 424, 425, 436], "lock_": [34, 35, 43, 69], "propag": [34, 35, 43, 69, 326, 328, 329, 330, 334, 335, 342, 343, 346, 347, 348, 349, 351, 352, 361, 362, 363, 364, 424, 435, 436], "succeed": [34, 35, 43, 69, 202, 235], "pop": [34, 35, 43, 69], "keyerror": [34, 35, 43, 69, 234], "extract": [34, 35, 43, 69, 181, 202, 231, 235, 310, 422, 424, 441], "selected_kei": [34, 35, 43, 69, 221, 422], "unlock_": [34, 35, 43, 69], "_compositespecvaluesview": [34, 35, 43, 69], "multipli": [36, 249, 265, 269, 326, 327, 328, 329, 335, 343, 345, 346, 347, 349, 397, 422, 435], "calcul": [36, 66, 217, 265, 326, 328, 333, 343, 346, 348, 351, 361], "reassign": 37, "reward2go": [37, 415], "reward_key_out": 37, "time_dim": [37, 361, 363, 364, 366, 367, 370, 371, 372, 373, 374, 375, 376, 377, 378], "unrol": [37, 337, 366, 367, 370, 371, 372, 373, 374, 375, 376, 377, 378], "discount": [37, 50, 126, 217, 244, 327, 333, 336, 337, 339, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 418, 423, 424, 435, 436], "lastrewardtotraj": 37, "last_reward_to_traj": 37, "new_tensordict": 37, "is_tdmodule_compat": [37, 60, 72], "reset_out_kei": [37, 60, 72], "orign": [37, 60, 72], "mod": [37, 60, 72, 204, 250, 267, 271, 311, 316, 319, 425, 426, 432], "select_out_kei": [37, 60, 72, 326, 327, 329, 330, 334, 335, 342, 346, 347, 349, 351, 352, 426], "reset_parameters_recurs": [37, 60, 72, 344], "relu": [37, 60, 72, 143, 248, 258, 274, 325], "old_param": [37, 60, 72], "bork": [37, 60, 72], "dork": [37, 60, 72], "reset_paramet": [37, 60, 72, 279], "from_modul": [37, 60, 72, 261, 315, 318, 441], "out_keys_sourc": [37, 60, 72], "rubric": [37, 60, 72, 208, 318], "revert": [37, 60, 72, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 165, 428, 439], "seq": [37, 60, 72, 250, 265, 267, 269, 271, 311, 425, 426, 432, 434], "z": [37, 60, 72, 266], "shift_kei": [39, 41, 51, 70], "is_full_kei": [39, 41, 51, 70], "is_ful": [39, 41, 51, 70], "tempfil": [39, 56, 57, 58, 62, 63, 64, 65, 70, 73, 74, 78, 79, 93, 102, 409, 422, 423, 425, 426, 430, 435, 438, 439], "register_save_hook": [39, 57, 62, 63, 64, 70, 73, 74, 102], "temporarydirectori": [39, 56, 57, 58, 62, 63, 64, 65, 70, 73, 74, 78, 79, 102, 422, 423, 425, 426, 430, 435, 438, 439], "tmpdir": [39, 57, 62, 63, 64, 70, 73, 74, 78, 102, 422, 423, 426, 435], "rb_load": [39, 57, 62, 63, 64, 73, 74, 102], "register_load_hook": [39, 57, 62, 63, 64, 73, 74, 102], "filesystem": [40, 439], "ted2nest": [41, 415], "stackedcomposit": [43, 415], "tensordictmap": [45, 415], "observation_kei": [45, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "excluded_kei": [45, 197], "consolid": [45, 72, 86, 95], "lazili": [45, 94, 278, 437], "from_tensordict_pair": [45, 72], "querymodul": [45, 72], "get_keys_from_env": 45, "cattensor": [45, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 422, 434, 437, 442], "unsqueezetransform": [45, 185, 437, 439], "oracl": 45, "obs_kei": 45, "state_kei": [45, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "reset_st": 45, "rollout0": 45, "rollout1": 45, "rollout1b": 45, "collaps": 45, "max_length": [45, 56, 58, 59, 75, 78, 79, 89, 231, 426, 432], "valid_path": [45, 79], "assert_clos": 45, "subtre": [45, 79], "intersect": [45, 245], "Or": [45, 156, 157, 277], "rollout_from_path": [45, 79], "plot": [45, 79, 422, 424, 425, 435, 436, 437], "_nestedkei": [45, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "return_nod": 45, "diverg": [45, 204, 312, 316, 338, 343], "endpoint": 45, "r0": [45, 422], "123": [45, 79], "392": [45, 79], "989": [45, 79], "809": [45, 79], "847": [45, 79], "r1": 45, "235": 45, "td_root": [45, 79], "node_data": [45, 79], "node_id": [45, 79], "nontensordata": [45, 52, 122, 147, 148, 202, 231, 235, 379], "_parent": [45, 79], "nontensorstack": [45, 52, 94, 119, 122, 137, 202, 231, 235], "0x716eeb78fbf0": 45, "0x": 45, "4341220243998689835": 45, "6745467818783115365": 45, "win": [45, 79], "to_str": [45, 79], "node_format_fn": [45, 79], "indent": [45, 79], "rollouts_data": [45, 79], "456": [45, 79], "359": [45, 79], "3094": [45, 79], "75": [45, 79, 107], "948": [45, 79], "68": [45, 79, 107], "9045": [45, 79], "rollout_data": [45, 79], "nvec": [46, 48], "remove_singleton": 46, "ax": [46, 280, 281, 435], "Not": [46, 47, 64, 120, 121, 135, 232, 267, 271], "neither": [46, 47, 48, 49, 161, 437], "use_regist": [48, 54], "mone_hot": [48, 49], "boxlist": [48, 49], "gamma": [50, 217, 244, 274, 326, 327, 329, 330, 331, 333, 335, 336, 337, 339, 342, 344, 346, 347, 348, 349, 351, 352, 353, 354, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 409, 418, 422, 423, 424, 435, 436, 441], "sutton": [50, 418, 435, 436], "1988": 50, "tempor": [50, 267, 271, 274, 362, 363, 368, 369], "44": [50, 107], "ahead": [50, 244, 442], "bias": [50, 265, 266, 269, 270, 322, 418, 422], "mitig": [50, 185], "multisteptransform": [50, 415], "99": [50, 217, 241, 274, 339, 354, 360, 367, 409, 422, 423, 424, 426, 429, 432, 435, 436, 441], "nontermin": 50, "original_reward": 50, "newli": [50, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "OR": 50, "row": [51, 71, 135, 136, 205], "example_data": 52, "conform": 52, "templat": [52, 382], "randomli": [52, 106, 160, 207, 208, 227, 264, 312, 316, 428, 435, 436, 437, 439], "unidimension": 54, "action_valu": [54, 260, 261, 290, 308, 309, 313, 314, 329, 335, 344, 359, 417, 425, 426, 428, 432], "keepdim": 54, "chosen_action_valu": [54, 289, 290, 298, 313, 314, 359, 417, 425, 428], "priori": 54, "uniqu": [54, 79, 107, 108, 137, 141, 142, 185, 196, 226, 227, 228, 232, 311, 388, 430, 439], "tensor_spec": [54, 154, 177, 179, 334, 335, 346, 348], "one_hot_sampl": [54, 55], "chosen_data": [56, 89], "rewarddata": [56, 89, 415], "rejected_data": [56, 89], "copy_exist": [56, 58, 65, 79], "return_earli": [56, 58, 65, 79], "share_non_tensor": [56, 58, 65, 79], "memmap": [56, 58, 65, 79, 93, 149, 158, 241, 381, 383, 396], "dataclass": [56, 58, 65, 77, 79, 344], "from_dataset": [56, 58, 89], "dataset_nam": [56, 58, 66, 78, 89, 146], "550": [56, 58, 66, 78, 89, 107, 108], "root_dir": [56, 58, 78, 89], "from_disk": [56, 58, 78, 89], "carperai": [56, 58, 66, 78], "openai_summarize_comparison": [56, 58, 78], "load_from_disk": [56, 58, 78, 89], "load_dataset": [56, 58, 78, 89], "attention_mask": [56, 58, 59, 65, 66, 75, 78, 89], "92534": 56, "input_id": [56, 58, 59, 65, 66, 75, 78, 89, 137], "end_scor": [56, 65, 66, 89], "sub_data": [56, 58], "from_tensordict": [56, 58, 65, 79], "non_tensordict": [56, 58, 65, 79], "getattr": [56, 58, 65, 79], "load_memmap": [56, 58, 65, 79], "load_": [56, 58, 65, 79], "load_memmap_": [56, 58, 65, 79], "fromkei": [56, 58, 65, 79], "saved_td": [56, 58, 65, 79], "td_load": [56, 58, 65, 79], "fake": [56, 58, 65, 79, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 422, 423, 426], "_subclass": [56, 58, 65, 79], "faketensormod": [56, 58, 65, 79], "faketensor": [56, 58, 65, 79], "from_flatten": [56, 58, 65, 79], "attemptedli": [56, 58, 65, 79], "existsok": [56, 58, 65, 79, 93], "mimic": [56, 58, 65, 79, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "cross": [56, 58, 65, 79, 248], "tensordictfutur": [56, 58, 65, 79], "serialis": [56, 58, 65, 79], "deepli": [56, 58, 65, 79], "memmap_": [56, 58, 65, 79, 241], "memmap_lik": [56, 58, 65, 79], "contentless": [56, 58, 65, 79], "1_000_000": [56, 57, 58, 62, 63, 64, 65, 73, 74, 79, 102, 107, 422, 425, 435], "alloc": [56, 58, 65, 79, 95, 259, 275, 276, 422], "memmap_refresh_": [56, 58, 65, 79], "refresh": [56, 58, 65, 79, 432, 435, 436], "saved_path": [56, 58, 65, 79], "setattr": [56, 58, 65, 79], "tent": [56, 58, 65, 78, 79], "to_tensordict": [56, 58, 65, 79, 425], "retain_non": [56, 58, 65, 79], "discrard": [56, 58, 65, 79], "alpha": [57, 73, 99, 100, 251, 252, 254, 255, 256, 257, 263, 277, 327, 329, 335, 345, 347, 349, 351, 422, 439, 441], "ep": [57, 73, 99, 100, 208, 241, 242, 247, 288, 328, 350, 397, 418, 422, 423, 425, 426, 429, 432], "1e": [57, 73, 99, 100, 208, 241, 242, 247, 259, 262, 295, 422, 423, 424, 436], "08": [57, 73, 99, 100], "pin_memori": [57, 64, 73, 74, 211, 422, 441], "schaul": [57, 99, 100], "quan": [57, 99, 100], "antonogl": [57, 99, 100], "silver": [57, 99, 100], "2015": [57, 99, 100], "ab": [57, 99, 100, 120, 121, 123, 124, 135, 136, 141, 142, 144, 145, 155, 163, 164, 184, 212, 237, 241, 247, 253, 258, 262, 263, 269, 274, 281, 282, 283, 289, 291, 292, 298, 326, 327, 331, 332, 333, 334, 337, 338, 339, 341, 342, 345, 346, 349, 438], "1511": [57, 99, 100, 263], "05952": [57, 99, 100], "expon": [57, 73, 99, 100], "\u03b1": [57, 73, 99, 100], "delta": [57, 73, 99, 100, 265, 269, 295, 312, 316, 415, 418, 435], "1_000": [57, 64, 73, 74, 435, 439], "mini": [57, 64, 73, 74, 436], "decid": [57, 64, 73, 74, 435, 441], "incompat": [57, 64, 73, 74, 348, 439], "drop_last": [57, 64, 73, 74, 106, 108], "notion": [57, 64, 73, 74, 287], "caution": [57, 64, 73, 74, 106, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 165, 442], "codebas": [57, 64, 73, 74, 437], "return_info": [57, 62, 63, 64, 73, 74, 99, 100, 102, 439], "tensordictprioritizedreplaybuff": [57, 415, 441], "simplifi": [57, 173, 428, 437, 439], "_weight": [57, 73, 99, 100], "update_prior": [57, 99, 100, 396, 419, 423, 439, 441], "36278465": 57, "invert": [57, 62, 63, 64, 73, 74, 102, 324, 424], "as_remot": [57, 62, 63, 64, 73, 74, 102], "cl": [57, 62, 63, 64, 73, 74, 102, 423], "quantiti": [57, 62, 63, 64, 73, 74, 102], "reserv": [57, 62, 63, 64, 73, 74, 102, 419], "default_remote_class_config": [57, 62, 63, 64, 73, 74, 102], "randomsampl": [57, 62, 63, 64, 73, 74, 102, 422, 435], "td_error": [57, 62, 63, 64, 73, 74, 102, 329, 330, 331, 333, 334, 335, 336, 342, 344, 347, 349, 351, 352, 359, 422, 439, 441], "update_tensordict_prior": [57, 62, 63, 64, 73, 74, 102, 422, 439, 441], "insert_transform": [57, 62, 63, 64, 73, 74, 102, 180, 234], "insert": [57, 62, 63, 64, 73, 74, 92, 102, 103, 113, 114, 117, 118, 180, 185, 189, 224, 234, 236], "set_sampl": [57, 62, 63, 64, 73, 74, 102], "set_storag": [57, 62, 63, 64, 73, 74, 102], "set_writ": [57, 62, 63, 64, 73, 74, 102], "prompt_rindex": [58, 59, 66], "promptdatatldr": 58, "116722": 58, "prompt": [59, 66], "return_tensordict": [59, 75], "text": [59, 66, 75, 137, 265, 266, 269, 270, 288, 424], "tensodict": [59, 75], "valid_sampl": 59, "eough": 59, "toknen": 59, "meet": 59, "criterion": 59, "autotoken": [59, 75, 78], "from_pretrain": [59, 66, 75, 137], "gpt2": [59, 66, 75, 78, 137, 253, 258, 286], "pad_token": [59, 75], "eos_token": 59, "enough": [59, 439], "inde": [59, 194, 424, 426, 437], "index_kei": [60, 72], "hash_kei": 60, "_hash": 60, "hash_modul": [60, 67, 72], "siphash": [60, 61, 72, 137], "hash_to_int": 60, "hashtoint": 60, "query_modul": [60, 72], "key1": [60, 72, 186, 224, 390, 398, 441], "key2": [60, 72, 186, 224, 390, 398, 441], "write_hash": 60, "n_compon": 61, "dtype_cast": 61, "as_tensor": [61, 67, 426], "init_method": 61, "emb": [61, 425], "sklearn": [61, 146], "byte": [61, 67, 179, 181, 182, 184, 185, 186, 189, 190, 193, 196, 197, 198, 200, 203, 204, 211, 213, 214, 215, 217, 220, 221, 224, 225, 226, 227, 228, 229, 231, 232, 233, 237, 238, 240, 241, 244], "builtin": [61, 67], "pythonhashse": [61, 67], "todo": 61, "optiona": 62, "transform_factori": [62, 64, 73, 74], "asyncio": [62, 119], "ray_buff": 62, "object_store_memori": 62, "600": [62, 66], "await": 62, "invoc": 63, "friendli": [63, 422], "include_info": [63, 73, 74], "storagecheckpointerbas": [64, 109], "roundrobinwrit": 64, "_pytre": [64, 439], "tree_map": [64, 439], "assert0": [64, 439], "ref_model": 66, "reward_model": [66, 321], "max_new_token": 66, "score_clip": 66, "kl_schedul": 66, "klcontrollerbas": 66, "num_step": [66, 426], "causal": 66, "sentenc": 66, "frozen": [66, 204, 241, 242], "gpt2rewardmodel": 66, "get_dataload": [66, 415], "promptdata": [66, 415], "gpt2lmheadmodel": 66, "dl": 66, "block_siz": [66, 89], "tensorclass_typ": [66, 89], "openai_summarize_tldr": 66, "config_class": 66, "model_path": 66, "rollout_from_model": 66, "rollout_from_data": 66, "reward_kl": [66, 204], "reward_raw": 66, "sample_log_prob": [66, 204, 304, 305, 306, 312, 316, 318, 346], "create_rollout_td": 66, "log_prob": [66, 259, 275, 276, 284, 287, 297, 316, 329, 418], "log_ratio": 66, "replic": [66, 418], "rindex": 66, "eo": 66, "generation_config": 66, "generationconfig": 66, "ti": [66, 370, 371, 372, 373, 375, 376, 377, 378, 423], "log_probs_gen": 66, "logprobs_of_label": 66, "hash_a": 67, "4669941682990263259": 67, "3778166555168484291": 67, "9122128731510687521": 67, "hash_b": 67, "heterogen": [68, 69, 94, 119, 122, 125, 129, 137, 140, 149, 150, 151, 152, 153, 158, 159, 160, 165, 277, 278, 422, 423], "220": 70, "resembl": 72, "tensormap": 72, "collat": [72, 102], "subtyp": 72, "embedding_storag": 72, "tensor_dict_storag": 72, "new_index": 72, "key3": 72, "retrieve_valu": 72, "storage_constructor": 72, "write_fn": 72, "tensordictstorag": 72, "thumb": [72, 149, 424], "lazydynamicstorag": 72, "fixedstorag": 72, "randomprojectionhash": 72, "priority_kei": [73, 74, 99, 329, 331, 334, 335, 336, 342, 344, 347, 349, 351, 352, 359, 439, 441], "reduct": [73, 99, 100, 113, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 340, 342, 343, 345, 346, 347, 348, 349, 351, 352], "prioritizedreplaybuff": [73, 415, 441], "min": [73, 99, 100, 113, 288, 327, 328, 329, 335, 345, 347, 349, 423, 424], "median": [73, 99, 100, 113, 129, 135, 136, 178, 312, 316], "huggingfac": [75, 310], "co": [75, 196, 437], "pad_trunc": 75, "am": 75, "me": 75, "reassur": 75, "ok": 75, "_encode_memo_dict": 77, "primarili": [77, 213, 428], "educ": 77, "guess": 77, "knowledg": [77, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 429, 431], "tokenizer_fn": 78, "tensordicttoken": [78, 415], "pre_tokenization_hook": 78, "valid_s": 78, "tokenizer_class": 78, "tokenizer_model_nam": 78, "tokein": 78, "elementwis": 78, "vocabulari": [78, 137, 231], "loader": [78, 424], "185068": 78, "dataset_to_tensordict": 78, "data_dir": 78, "batch_dim": [78, 119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 413], "valid_mask_kei": 78, "batch_dimens": 78, "filder": 78, "from_dict": 78, "data_memmap": 78, "ref": 79, "branching_act": 79, "prev_act": 79, "edg": [79, 426], "travers": 79, "breadth": 79, "bf": 79, "fully_expand": 79, "get_vertex_by_hash": 79, "get_vertex_by_id": 79, "is_termin": 79, "make_nod": 79, "node_observ": 79, "bag": 79, "num_children": 79, "num_vertic": 79, "count_repeat": 79, "recustruct": 79, "plotli": 79, "make_label": 79, "visual": [79, 212, 237, 239, 381, 424, 435, 437], "unsupport": 79, "selected_act": 79, "mctsforest": [79, 137, 415], "key_typ": 79, "recurse_through_entri": 86, "recurse_through_stack": 86, "infinit": [89, 141, 142, 163, 164, 242, 430, 439], "block": [89, 92, 118, 134, 417, 422, 425, 426, 429, 430, 435, 439], "pairwisedataset": [89, 415], "checkpoint_fil": 91, "h5": 91, "h5_kwarg": 91, "iff": 91, "suffix": [91, 394], "h5py": 91, "create_dataset": 91, "consequ": [91, 269, 430], "immut": [92, 119, 122, 125, 129, 137, 149, 153, 158, 159, 215, 234], "scratch_dir": [93, 422, 423, 425, 430, 435, 438, 439], "sent": [93, 95, 115, 241], "mistak": [93, 95, 115], "overewritten": 93, "tensorstoragecheckpoint": 93, "pathlib": [93, 399, 426], "main_ckpt_dir": 93, "rb_memmap": 93, "10_000_000": 93, "myclass": [93, 95, 115], "foo": [93, 95, 115, 307, 439, 442], "attach": [93, 94, 95, 96, 109, 111, 115, 423], "entiti": [93, 94, 95, 96, 109, 111, 115], "lazystacktensordict": 94, "heterougen": 94, "linearli": 94, "densifi": 94, "unlimit": [94, 96], "st": 94, "expans": [95, 344], "zero_": [95, 115, 170], "liststoag": 97, "max_capac": [99, 100, 422, 439], "max_priority_within_buff": [99, 100], "data_0": 99, "data_1": 99, "smoothen": 99, "tdrb": 99, "pack": [99, 265, 269, 424, 427, 442], "nd": [99, 100], "1d": [99, 100, 107, 108, 113], "sum_tre": [99, 100], "min_tre": [99, 100], "slice_len": [100, 107, 108, 381], "end_kei": [100, 107, 108], "cache_valu": [100, 107, 108], "closer": [100, 441], "readili": [100, 107, 108, 316], "conjunct": [100, 107, 108, 423], "Will": [100, 107, 144, 381], "buffer0": [100, 107], "immutablewrit": [100, 107], "buffer1": [100, 107], "other_sampl": [100, 107], "shorter": [100, 107, 108], "short": [100, 107, 108, 119, 120, 121, 122, 125, 129, 135, 136, 137, 149, 150, 153, 158, 159, 160, 165, 269, 270, 423, 424, 427, 428, 436, 439], "Be": [100, 107, 108], "fewer": [100, 107], "tolist": 100, "120110917137936e": 100, "06": [100, 259, 295], "storageensembl": [102, 105], "samplerensembl": 102, "writerensembl": [102, 111], "sample_from_al": [102, 105], "num_buffer_sampl": [102, 105], "ensembl": [102, 105, 111, 112, 118, 315, 347], "forbidden": 102, "0x13a2ef430": 102, "0x13a2f9310": 102, "interpol": [102, 216, 423, 426], "interpolationmod": 102, "bilinear": [102, 216], "0x13a2f9220": 102, "0x13a2f9f70": 102, "0x13a2d9b50": 102, "0x13a2f95b0": 102, "0x128648260": 102, "roundrobin": [103, 114], "buffer_id": [105, 111], "shuffl": [106, 108, 436], "incomplet": [106, 108], "fresh": 106, "haven": [106, 438], "remain": [106, 184, 193, 194, 204, 226, 281, 429], "draw": [106, 264], "use_gpu": [107, 108], "slicesamplerwithoutreplac": [107, 439], "acceler": [107, 108, 129, 435, 436], "reconstruct": [107, 108, 338, 422, 442], "ep_1": [107, 108], "ep_2": [107, 108], "73": 107, "74": 107, "76": 107, "77": 107, "42": [107, 272, 287, 326, 327, 329, 330, 334, 342, 349], "43": 107, "45": 107, "67": [107, 434], "69": 107, "70": 107, "71": 107, "27": [107, 108, 120, 121, 149, 158], "28": [107, 108, 277], "31": [107, 135, 136], "80": [107, 120, 121], "82": 107, "83": 107, "84": [107, 216, 425, 426], "78": 107, "79": 107, "320": [107, 108, 123, 124], "700": [107, 108], "dataid": [107, 108], "available_dataset": [107, 108], "counter": [108, 232, 311, 392, 419, 426], "23": [108, 245], "request": [108, 182, 213], "51": 108, "__len__": 109, "rank_kei": 113, "rank": [113, 248], "samplerwithoutreplac": [113, 424, 436, 439], "get_insert_index": 113, "themselv": [119, 249, 423], "dens": [119, 275, 276], "maybe_dens": 119, "min_get": [119, 153, 159], "maker": [119, 413, 423], "sort": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 186, 288], "another_act": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "discretebox": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "mutabl": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "action_spec_unbatch": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 424, 436], "had": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 428, 430], "all_act": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "any_don": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "loc": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 204, 208, 219, 241, 242, 268, 296, 297, 304, 305, 306, 312, 316, 318, 326, 327, 329, 342, 346, 347, 348, 349, 403, 413, 417, 422, 423, 424, 425, 428, 436, 441], "_callabletransform": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "auto_specs_": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "action_spac": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 196, 261, 290, 308, 309, 313, 314, 326, 327, 329, 330, 331, 333, 334, 335, 336, 337, 342, 344, 346, 347, 348, 349, 351, 352, 359, 425, 426, 428, 432], "check_dtyp": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 165], "discrep": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 165, 326, 328, 330, 331, 343, 346, 348, 359], "broken": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 165], "rng": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 165, 437], "done_keys_group": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "another_don": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "done_spec_unbatch": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "empty_cach": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 234], "fake_tensordict": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 423, 426], "envnam": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "full_action_spec_unbatch": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 435, 436], "full_done_spec_unbatch": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "full_observation_spec_unbatch": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "full_reward_spec_unbatch": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "pipeline_st": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "full_state_spec_unbatch": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "input_spec_unbatch": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "is_spec_lock": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "maybe_reset": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "speak": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 190, 316, 422], "observation_spec_unbatch": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "output_spec_unbatch": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "register_gym": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 427], "entry_point": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "info_kei": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "reward_threshold": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "nondeterminist": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "max_episode_step": [119, 122, 125, 128, 129, 130, 137, 149, 150, 153, 158, 159, 160], "order_enforc": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "autoreset": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "disable_env_check": [119, 122, 125, 128, 129, 137, 144, 145, 149, 150, 153, 158, 159, 160], "apply_api_compat": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "nasium": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 173], "dmcontrolenv": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 381, 415, 422, 427, 434, 442], "dmc": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "cheetah": [119, 122, 123, 124, 125, 129, 137, 149, 150, 153, 158, 159, 160, 381, 422], "removeemptyspec": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "threshold": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 264, 327, 328, 424], "learnt": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 409], "checker": [119, 122, 125, 128, 129, 137, 144, 145, 149, 150, 153, 158, 159, 160], "stepapicompat": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "deem": [119, 122, 125, 129, 137, 141, 142, 149, 150, 153, 158, 159, 160, 163, 164], "task_nam": [119, 122, 123, 125, 129, 137, 149, 150, 153, 158, 159, 160], "envgym": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "0855": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "0215": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "0881": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "0412": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "1101": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "0080": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "0254": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "0424": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "veloc": [119, 122, 123, 124, 125, 129, 137, 149, 150, 153, 158, 159, 160, 185, 435, 436, 437, 442], "9609e": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "9776e": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "04": [119, 122, 125, 129, 133, 137, 149, 150, 153, 158, 159, 160, 229, 242], "6347e": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "3842e": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "5338e": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "3064e": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "0381e": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "6656e": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "05": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 229, 247, 437], "0204e": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "0833": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "0275": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "0612": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "0770": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "1256": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "0082": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "0186": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "0476": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "2221": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "2256": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "5930": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "6937": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "5865": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "5479": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "0187": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "6825": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "5224": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "0018": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "1005": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "0335": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 190], "0268": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "0133": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "0627": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "0074": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "0488": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "0353": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "0075": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "0069": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "0098": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "0058": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "0033": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "0157": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "0004": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 229], "0381": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "0452": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "11355747": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "04257728": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "00408397": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "04155852": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "0389733": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "01409826": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "0978704": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "08808327": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "03970837": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "00535434": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "02353762": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "05116226": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "02788907": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "06848346": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "05154399": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "0371798": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "05128025": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "dydact": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "ant": [119, 120, 121, 122, 125, 129, 132, 134, 137, 149, 150, 153, 158, 159, 160, 438], "gym_env": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 441], "reset_kei": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 185, 220, 226, 227, 228, 435], "multitask": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "multiag": [119, 122, 125, 129, 137, 140, 149, 150, 151, 152, 153, 158, 159, 160, 177, 278, 289, 298, 328, 343, 346, 359], "another_reward": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "reward_spec_unbatch": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "auto_cast_to_devic": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 436], "soon": [119, 122, 125, 129, 137, 149, 150, 151, 152, 153, 158, 159, 160], "__sort": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "as__": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "categorical_action_encod": [119, 120, 121, 122, 125, 128, 129, 130, 131, 134, 135, 136, 137, 144, 145, 149, 150, 153, 155, 158, 159, 160, 173, 426], "argmaxmodul": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "argmax": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 261, 290, 309, 314, 426, 428], "n_act": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 204, 326, 327, 329, 330, 331, 333, 334, 335, 342, 346, 347, 348, 349, 351, 352, 429], "ourselv": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 424, 442], "emul": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "epoch": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 399, 424, 435, 436], "input_td": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "rollout_td": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "state_spec_unbatch": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "prevail": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 177, 186, 220], "next_tensordict": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 176, 182, 186, 197, 198, 199, 211, 214, 215, 221, 224, 237, 241], "precomput": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160], "_stepmdp": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 176], "exclude_act": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 176], "minim": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 383, 439], "reset_data": [119, 122, 125, 129, 137, 149, 150, 153, 158, 159, 160, 442], "googl": [120, 121, 141, 142, 147, 148, 247, 424, 425, 435, 436], "convers": [120, 121, 135, 136, 173, 418], "2106": [120, 121, 332, 351], "13281": [120, 121], "frame_skip": [120, 121, 123, 124, 128, 129, 130, 131, 135, 136, 138, 139, 144, 145, 155, 200, 392, 394, 402, 419, 422, 423, 424, 441], "allow_done_after_reset": [120, 121, 123, 124, 125, 128, 130, 131, 134, 135, 136, 144, 145, 147, 148, 155, 161, 162], "toler": [120, 121, 123, 124, 128, 130, 131, 134, 135, 136, 144, 145, 147, 148, 155, 161, 162, 259, 295], "is_avail": [120, 121, 422, 423, 424, 425, 435, 436, 438], "87": [120, 121], "acrobot": [120, 121, 123, 124, 442], "advant": [120, 121, 135, 136], "timer": [120, 121, 129, 135, 136], "timeit": [120, 121, 135, 136, 426], "310": [120, 121], "ms": [120, 121, 135, 136], "268": [120, 121], "433": [120, 121], "213": [120, 121], "8605": [120, 121], "pipelineenv": 121, "get_environ": 121, "san": 122, "fen": [122, 147, 148], "pgn": 122, "legal": 122, "board": [122, 160], "include_san": 122, "algebra": [122, 437], "notat": 122, "include_fen": 122, "forsyth": 122, "edward": 122, "include_pgn": 122, "portabl": [122, 431], "include_legal_mov": 122, "include_hash": 122, "mask_act": 122, "subset": [122, 437, 438], "29275": 122, "rnbqkbnr": [122, 147, 148], "pppppppp": [122, 147, 148], "kqkq": [122, 147, 148], "legal_mov": 122, "219": 122, "5p2": 122, "ppppp1pp": 122, "event": [122, 275, 276, 284, 370, 371, 372, 373, 375, 376, 377, 378, 439], "white": 122, "f4": 122, "96": 122, "kq": 122, "5n2": 122, "rnbqkb1r": 122, "nf3": 122, "na6": 122, "c4": 122, "f6": 122, "h4": 122, "rb8": 122, "na3": 122, "ra": 122, "get_legal_mov": 122, "uci": 122, "dm_control": [123, 124, 422, 434, 442], "2006": [123, 124, 327, 333], "12983": [123, 124], "240": [123, 124, 441], "swingup": [123, 124, 442], "swingup_spars": [123, 124], "ball_in_cup": [123, 124], "catch": [123, 124, 426], "balance_spars": [123, 124], "three_pol": [123, 124], "two_pol": [123, 124], "finger": [123, 124], "turn_easi": [123, 124], "turn_hard": [123, 124], "fish": [123, 124], "upright": [123, 124, 423], "swim": [123, 124], "hopper": [123, 124], "hop": [123, 124], "humanoid": [123, 124, 149, 158, 434], "walk": [123, 124, 149, 158, 423, 434], "run_pure_st": [123, 124], "bring_bal": [123, 124], "bring_peg": [123, 124], "insert_bal": [123, 124], "insert_peg": [123, 124], "point_mass": [123, 124], "reacher": [123, 124], "swimmer": [123, 124], "swimmer6": [123, 124], "swimmer15": [123, 124], "walker": [123, 124], "dog": [123, 124], "trot": [123, 124], "humanoid_cmu": [123, 124], "lqr": [123, 124], "lqr_2_1": [123, 124], "lqr_6_2": [123, 124], "quadrup": [123, 124], "escap": [123, 124], "stacker": [123, 124], "stack_2": [123, 124], "stack_4": [123, 124], "deviceless": 125, "run_type_check": [125, 143], "hint": 125, "counterenv": 125, "creator": [126, 404, 405, 411, 412, 413], "substitut": [126, 226, 241, 428], "vecnorm": [126, 242, 413], "env_creat": [126, 422], "test_env1": 126, "_td": [126, 337], "observation_count": [126, 442], "test_env2": 126, "ps": 126, "p1": 126, "p2": 126, "9934": 126, "make_vari": [126, 232], "variant": [126, 232, 249, 417], "trajcount": 126, "env_creator_pendulum": 126, "env_creator_cartpol": 126, "env_str": 127, "device_map": 127, "registri": [128, 161], "asyncvectorenv": 128, "pixel_observ": [128, 130, 131, 155], "pixelobservationwrapp": [128, 130, 131, 155], "adventur": [128, 130], "airraid": [128, 130, 442], "alien": [128, 130], "time_limit": 128, "timelimit": [128, 141, 142, 163, 164], "default_info_dict_read": [128, 129, 130, 149], "reader": [128, 129, 130, 149, 423], "set_info_dict_read": [128, 129, 130, 149, 427], "info_dict": [128, 129, 130, 149], "gymlikeenv": [128, 130, 415], "auto_register_info_dict": [128, 129, 130, 149], "multibinari": [128, 130], "multidiscret": [128, 130], "rag": [128, 130], "gym_conversion_exampl": [128, 130], "info_dict_read": [129, 149], "ignore_priv": 129, "baseinfodictread": 129, "tensordictprim": [129, 149, 250, 267, 271, 323, 417, 425], "succe": [129, 149], "underscor": 129, "primer": [129, 227, 250, 267, 271, 323, 425], "halfcheetah": [129, 149, 178, 216, 422, 441], "reward_ctrl": [129, 149], "reward_run": [129, 149], "x_posit": [129, 149], "x_veloc": [129, 149], "raise_if_clos": 129, "fast_encod": 129, "memoize_cach": 129, "adaptive_autorang": 129, "4f": [129, 424, 425, 437], "fp": [129, 381, 386, 388], "10141": 129, "5742fp": 129, "10576": 129, "8388fp": 129, "read_act": 129, "read_don": 129, "nonsens": 129, "fallback": 129, "read_ob": 129, "dictat": [129, 205, 312, 316, 346, 422, 437], "read_reward": 129, "hoc": [129, 149, 428], "dict_read": 129, "my_info_kei": 129, "some_env": 129, "vecenv": 130, "vectorenv": 130, "convert_actions_to_numpi": 130, "missing_obs_valu": [130, 240], "vecgymenvtransform": 130, "secur": 131, "habitat3": 131, "ai": [131, 438], "habitatrenderpick": 131, "isaacgym": [132, 133], "isaacgymwrapp": [132, 415], "isaacgymenv": [133, 415], "webpag": 133, "isaac": [133, 134], "essenc": [133, 427], "scripts_isaaclab": 134, "managerbasedrlenv": 134, "app": 134, "applaunch": 134, "argpars": [134, 410, 413], "parser": [134, 410, 413], "argumentpars": 134, "add_app_launcher_arg": 134, "args_cli": 134, "hydra_arg": 134, "parse_known_arg": 134, "app_launch": 134, "isaaclab_task": 134, "f401": 134, "manager_bas": 134, "ant_env_cfg": 134, "antenvcfg": 134, "isaac_lab": 134, "cfg": [134, 402, 403, 404, 405, 406, 407, 408, 409, 410, 413], "instadeepai": [135, 136], "2306": [135, 136, 242], "09884": [135, 136], "snake": [135, 136], "grid": [135, 136, 381], "bodi": [135, 136], "body_st": [135, 136], "fruit_posit": [135, 136], "col": [135, 136], "head_posit": [135, 136], "tail": [135, 136], "game2048": [135, 136], "maze": [135, 136], "cleaner": [135, 136], "cvrp": [135, 136], "multicvrp": [135, 136], "minesweep": [135, 136], "rubikscub": [135, 136], "knapsack": [135, 136], "sudoku": [135, 136], "tsp": [135, 136], "connector": [135, 136], "v2": [135, 136, 156, 157, 355, 370, 371, 372, 373, 375, 376, 377, 378, 425], "mmst": [135, 136], "graphcolor": [135, 136], "partli": [135, 136], "scrambl": [135, 136], "robotwarehous": [135, 136], "tetri": [135, 136], "binpack": [135, 136], "jobshop": [135, 136], "0x1fca91910": 135, "122": [135, 136, 442], "0x1ff9baee0": 135, "134": [135, 136], "0x1ff9ba7c0": 135, "172": [135, 136], "jit": 136, "eager": 136, "tdreset": [136, 244, 434], "whichev": 136, "overview": [137, 424, 426, 429, 435, 436, 441], "vocab_s": 137, "hashing_modul": 137, "text_output": 137, "decod": [137, 171, 282], "batch_decod": 137, "text_kei": 137, "gpt2token": 137, "make_tensordict": 137, "mo": [138, 139], "minecart": [138, 139], "mo_gym": [139, 205], "qualnam": 140, "neural": [140, 151, 152, 251, 252, 285, 287, 293, 315, 361, 417, 423, 424, 425, 428, 435, 436, 437, 442], "group_map": [140, 141, 142, 147, 148, 151, 152, 161, 162, 163, 164, 166, 435], "constructiuon": [140, 151, 152], "premad": [140, 141, 142, 151, 152, 163, 164, 359], "all_in_one_group": [140, 147, 148, 166], "agent_0": [140, 151, 152, 161, 166, 224], "agent_1": [140, 151, 152, 161, 166, 224], "agent_2": [140, 151, 152, 161, 166], "agent_3": [140, 161], "one_group_per_ag": [140, 151, 152], "meltingpot": [141, 142], "2211": [141, 142], "13746": [141, 142], "melt": [141, 142], "pot": [141, 142], "novel": [141, 142, 429], "social": [141, 142], "familiar": [141, 142, 423, 436, 442], "unfamiliar": [141, 142], "broad": [141, 142], "cooper": [141, 142, 435, 436], "decept": [141, 142], "reciproc": [141, 142], "stubborn": [141, 142], "substrat": [141, 142], "ml_collect": 141, "config_dict": 141, "configdict": 141, "categorical_act": [141, 142, 147, 148, 151, 152, 156, 157, 161, 162, 163, 164], "marlgroupmaptyp": [141, 142, 147, 148, 151, 152, 161, 162, 163, 164, 166, 415, 435], "agent_nam": [141, 142, 163, 164, 166], "agent_names_to_indices_map": [141, 142, 163, 164], "env_torchrl": [141, 142], "commons_harvest__open": [141, 142], "rgb": [141, 142], "144": [141, 142], "192": [141, 142], "collective_reward": [141, 142], "ready_to_shoot": [141, 142], "88": [141, 142, 156, 157], "substrate_config": 142, "get_config": 142, "mp_env": 142, "build_from_config": 142, "default_player_rol": 142, "mymbenv": [143, 248, 274], "world_model": [143, 248, 274, 338], "hidden_observ": [143, 248, 274], "mlp": [143, 248, 251, 252, 254, 255, 256, 257, 263, 267, 271, 274, 278, 279, 304, 308, 323, 331, 333, 417, 423, 426, 428, 429, 432, 434, 438, 441], "worldmodelwrapp": [143, 248, 274], "activation_class": [143, 248, 251, 252, 254, 255, 256, 257, 262, 263, 272, 274, 277, 278, 423, 428, 435, 436, 441], "activate_last_lay": [143, 248, 257, 272, 274], "sail": [144, 145], "sg": [144, 145], "2206": [144, 145], "10558": [144, 145], "readthedoc": [144, 147, 148], "en": [144, 147, 148], "python_interfac": 144, "envpoolmixin": 145, "env_bas": 145, "task_id": 145, "env_typ": 145, "gym_reset_return_info": 145, "envpool_env": 145, "www": [146, 275, 276], "fetch_openml": 146, "adult_num": 146, "adult_onehot": 146, "mushroom_num": 146, "mushroom_onehot": 146, "covertyp": 146, "shuttl": 146, "magic": [146, 426, 427], "106": 146, "openspiel": [147, 148], "open_spiel": [147, 148], "game_str": 147, "return_st": [147, 148, 151, 152], "4672": [147, 148], "current_play": [147, 148], "674": 147, "2048": [147, 148], "add_nois": [147, 148], "amazon": [147, 148], "backgammon": [147, 148], "restor": [147, 148], "td_restor": [147, 148], "pyspiel": 148, "load_gam": 148, "new_initial_st": 148, "3009": 148, "my_env_fun": [149, 158], "custom_attribute_list": [149, 158], "custom_attribut": [149, 158], "custom_method_list": [149, 158], "custom_method": [149, 158], "deploi": [149, 158, 182, 426], "slight": [149, 158, 423], "share_individual_td": [149, 158], "shared_memori": [149, 158], "policy_proof": [149, 158], "ll": [149, 158, 265, 266, 269, 270, 422, 423, 424, 425, 427, 428, 429, 430, 432, 436, 442], "hidden": [149, 158, 184, 254, 262, 265, 266, 267, 269, 270, 271, 282, 283, 291, 292, 304, 305, 306, 307, 315, 318, 328, 343, 346, 417, 425, 434, 441], "serial_for_singl": [149, 158, 423], "circular": [149, 158, 422], "list_of_kwarg": [149, 158], "com_veloc": [149, 158], "head_height": [149, 158], "joint_angl": [149, 158], "torso_vert": [149, 158], "idl": 149, "batched_pipe_timeout": 149, "stringent": [149, 424, 435, 436], "penv": [149, 232], "env_fix": 149, "influenc": 149, "myenv": [149, 182, 192, 195], "update_kwarg": [149, 158], "th": [150, 199, 236, 265, 269, 437], "thdot": [150, 437], "max_spe": [150, 437], "max_torqu": [150, 437], "gen_param": [150, 437], "gravit": [150, 437], "torqu": [150, 437], "pettingzoo": [151, 152, 435, 436], "pet": [151, 152], "zoo": [151, 152], "__": [151, 152], "aecenv": [151, 152], "dead": [151, 152], "done_on_ani": [151, 152, 435], "compulsori": [151, 152], "adversary_0": [151, 152], "adversari": [151, 152, 340, 435], "sisl": 151, "multiwalker_v9": 151, "aec": [151, 152], "n_piston": [151, 152], "pistonball_v6": [151, 152], "piston": [151, 152], "piston_0": [151, 152], "piston_1": [151, 152], "piston_20": [151, 152], "tictactoe_v3": [151, 152], "player": [151, 152, 160], "player_1": [151, 152], "player_2": [151, 152], "butterfli": 152, "parallel_env": [152, 422, 441, 442], "_setup": [153, 159], "queue": [153, 241, 439, 441], "async_reset_send": [153, 159], "async_reset_recv": [153, 159], "cube": 154, "roboh": 155, "expos": [155, 192, 195, 317, 423], "vikashplu": 155, "wiki": 155, "2310": 155, "06828": 155, "from_depth": 155, "smacv2": [156, 157], "starcraft": [156, 157], "challeng": [156, 157, 427, 437, 438], "10gen_terran": [156, 157], "10gen_zerg": [156, 157], "10gen_protoss": [156, 157], "3m": [156, 157], "8m": [156, 157], "25m": [156, 157], "5m_vs_6m": [156, 157], "8m_vs_9m": [156, 157], "10m_vs_11m": [156, 157], "27m_vs_30m": [156, 157], "mmm": [156, 157], "mmm2": [156, 157], "2s3z": [156, 157], "3s5z": [156, 157], "3s5z_vs_3s6z": [156, 157], "3s_vs_3z": [156, 157], "3s_vs_4z": [156, 157], "3s_vs_5z": [156, 157], "1c3s5z": [156, 157], "2m_vs_1z": [156, 157], "corridor": [156, 157], "6h_vs_8z": [156, 157], "2s_vs_1sc": [156, 157], "so_many_banel": [156, 157], "bane_vs_ban": [156, 157], "2c_vs_64zg": [156, 157], "old": [156, 157, 242, 343, 442], "smac": [156, 157], "map_nam": [156, 157], "176": [156, 157], "battle_won": [156, 157], "dead_al": [156, 157], "dead_enemi": [156, 157], "episode_limit": [156, 157], "322": [156, 157], "procedur": [156, 157], "distribution_config": [156, 157], "n_unit": [156, 157], "n_enemi": [156, 157], "team_gen": [156, 157], "dist_typ": [156, 157], "weighted_team": [156, 157], "unit_typ": [156, 157], "marin": [156, 157], "maraud": [156, 157], "medivac": [156, 157], "exception_unit_typ": [156, 157], "start_posit": [156, 157], "surrounded_and_reflect": [156, 157], "map_x": [156, 157], "map_i": [156, 157], "capability_config": [156, 157], "131": [156, 157], "starcraft2env": 157, "tic": 160, "tac": 160, "toe": 160, "single_play": 160, "player1": 160, "desired_batch_s": 160, "player0": 160, "uniti": [161, 162], "ml": [161, 162], "technolog": [161, 162], "llapi": [161, 162], "mlagents_env": [161, 162], "unityenviron": [161, 162], "file_nam": 161, "registered_nam": 161, "nor": 161, "localhost": 161, "connect": 161, "3dball": 161, "group_0": 161, "vectorsensor_size8": 161, "continuous_act": [161, 163, 164, 379, 435, 436], "agent_10": 161, "agent_11": 161, "agent_4": 161, "agent_5": 161, "agent_6": 161, "agent_7": 161, "agent_8": 161, "agent_9": 161, "group_reward": 161, "proroklab": [163, 164], "vectorizedmultiagentsimul": [163, 164], "2207": [163, 164], "03530": [163, 164], "basescenario": 163, "defaultt": 163, "chosen": [163, 164, 226, 227, 289, 290, 298, 314, 381, 417, 431], "sparsiti": 163, "unbatched_action_spec": [163, 164], "unbatched_observation_spec": [163, 164], "unbatched_reward_spec": [163, 164], "het_spec": [163, 164], "het_specs_map": [163, 164], "flock": [163, 164, 379], "agent_collision_rew": [163, 164], "agent_distance_rew": [163, 164], "ca": 166, "environment4": 166, "get_group_map": 166, "sumbodul": 169, "unsqueeze_null_shap": 170, "dynamic_shap": 170, "model_bas": [171, 172, 248, 274], "model_based_env": [171, 337], "dreamerenv": [171, 337, 415], "model_based_env_ev": 171, "spec_typ": 173, "convert_specnam": 173, "remap_state_to_observ": 173, "spectyp": 173, "unus": 173, "probabilistictdmodul": [174, 272, 312, 316, 360, 394], "keep_oth": [176, 437], "exclude_reward": 176, "exclude_don": 176, "next_": 176, "write_full_fals": 177, "_terminated_or_trunc": 177, "num_interv": 178, "out_action_kei": 178, "samplingstrategi": 178, "optino": 178, "intenum": 178, "action_disc": 178, "masker": 179, "maskedenv": 179, "ones_lik": [179, 275], "scatter": 179, "transformthatmeasuresbyt": [179, 181, 182, 184, 185, 186, 189, 190, 193, 196, 197, 198, 200, 203, 204, 211, 213, 214, 215, 217, 220, 221, 224, 225, 226, 227, 228, 229, 231, 232, 233, 237, 238, 240, 241, 244], "bytes_in_td": [179, 181, 182, 184, 185, 186, 189, 190, 193, 196, 197, 198, 200, 203, 204, 211, 213, 214, 215, 217, 220, 221, 224, 225, 226, 227, 228, 229, 231, 232, 233, 237, 238, 240, 241, 244], "fill_float": 181, "fill_int": 181, "fill_bool": 181, "someenvclass": 181, "autoresetenv": 181, "fooenv": 181, "sign": [181, 222, 361, 435], "envtyp": 181, "reshape_fn": [182, 426], "reset_func": 182, "env_kwarg": [182, 411, 412, 422], "accompani": [182, 225], "tensordict_batch_s": 182, "tensordict_reset": [182, 437], "transform_env_batch_s": [182, 189, 233, 244], "transform_full_done_spec": [182, 189, 192, 193, 197, 204, 206, 214, 215, 221, 225, 231, 233, 235, 242, 244], "biner": 183, "burn_in": 184, "burn": 184, "burnt": 184, "gru_modul": [184, 267, 323], "input_s": [184, 227, 265, 266, 267, 269, 270, 271, 323, 425, 426], "hidden_s": [184, 227, 265, 266, 267, 269, 270, 271, 323, 425, 426], "default_recurrent_mod": [184, 267, 271], "burn_in_transform": 184, "gru": [184, 227, 266, 267, 323, 426], "num_lay": [184, 265, 267, 269, 271, 282, 283, 323, 426], "is_init": [184, 203, 267, 271, 288, 311, 323, 361, 425, 426], "86": 184, "3008": 184, "0344": 184, "padding_valu": [185, 275, 276], "as_invers": 185, "movement": 185, "1312": 185, "5602": 185, "consumpt": [185, 415], "pictur": 185, "pixels_trsf": [185, 439], "grayscal": [185, 423, 425, 426, 439, 442], "data_exclud": [185, 439], "make_rb_transform_and_sampl": 185, "sampler_kwarg": 185, "redund": [185, 425], "del_kei": [186, 224, 237, 434, 437], "unsqueeze_if_oor": 186, "observation_posit": 186, "observation_veloc": 186, "delet": [186, 224, 388], "crop": [187, 213, 381], "center": [187, 287, 381], "width": [187, 191, 216], "height": [187, 191, 216], "squar": [187, 191, 268, 296, 297, 381], "scalar": [188, 218, 246, 255, 257, 264, 280, 281, 288, 322, 326, 327, 328, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 346, 347, 348, 349, 350, 352, 359, 361, 362, 363, 364, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 417, 423, 429, 437], "rewardsc": [189, 234, 422, 423, 425], "rewardclip": 189, "transformed_env": [189, 234, 427], "transform_env_devic": [189, 193, 233, 244], "cond": 190, "met": [190, 325, 435, 437], "altogeth": 190, "exectu": 190, "palliat": [190, 428], "step_count_kei": [190, 225], "inner_count": 190, "middle_env": 190, "middle_count": 190, "auto_unwrap": [190, 234, 389], "9670": 190, "2546": 190, "9669": 190, "9802": 190, "1981": 190, "1601": 190, "9926": 190, "1214": 190, "5556": 190, "9994": 190, "7622": 190, "9984": 190, "0561": 190, "7933": 190, "9895": 190, "1445": 190, "7779": 190, "dtype_in": 192, "dtype_out": 192, "scan": [192, 195, 317, 318], "resp": [192, 195], "not_transform": [192, 195], "orig_devic": 193, "unspecifi": 193, "transform_done_spec": [193, 224, 231, 233, 235, 244], "num_actions_effect": 194, "max_act": 194, "include_forward": 194, "num_act": [194, 252, 335, 426, 428], "action_out": 194, "eol_kei": 196, "lives_kei": 196, "eol_attribut": 196, "breakout": 196, "210": [196, 210], "160": [196, 210], "eol_transform": 196, "eol": 196, "dqnloss": [196, 326, 327, 329, 330, 333, 335, 336, 337, 341, 342, 344, 346, 347, 348, 349, 350, 351, 352, 353, 359, 406, 415, 418, 423, 425, 426, 432], "register_kei": 196, "loss_or_advantag": 196, "lossmodul": [196, 399, 408, 409, 415, 418], "valueestimatorbas": [196, 344, 415], "finit": [198, 287, 428, 439], "first_dim": 199, "last_dim": 199, "allow_positive_dim": [199, 224, 236], "frameskip": 199, "repeatedli": [200, 424, 436], "hash_fn": 202, "use_raw_nontensor": [202, 231, 235], "repertoir": 202, "reproducible_hash": 202, "unarytransform": 202, "observation_str": 202, "tobyt": [202, 235], "observation_hash": 202, "x08": 202, "x8b": 202, "xbexav": 202, "xbf": 202, "x00": 202, "xee": 202, "xb5": 202, "x17": 202, "x8f": 202, "xbe": [202, 235], "x88": 202, "xccu": 202, "xc0vr": 202, "get_input_from_hash": 202, "hash_tensor": 202, "init_kei": [203, 311], "tracker": 203, "log_prob_kei": [204, 316, 418], "pi_curr": 204, "pi_0": 204, "overfit": 204, "probabilist": [204, 312, 326, 346, 415, 424, 441], "get_dist": [204, 316, 317], "normalparamextractor": [204, 304, 305, 306, 312, 318, 326, 327, 329, 335, 342, 346, 347, 348, 349, 351, 352, 417, 424, 428, 436, 441], "probabilisticactor": [204, 304, 305, 306, 307, 326, 327, 329, 332, 334, 335, 342, 345, 346, 347, 348, 349, 351, 352, 417, 422, 424, 428, 435, 436], "tanhnorm": [204, 304, 305, 306, 312, 318, 326, 327, 329, 342, 346, 347, 348, 349, 351, 352, 415, 424, 436, 441], "return_log_prob": [204, 304, 305, 306, 312, 316, 318, 348, 417, 424, 428, 435, 436, 441], "apply_": 204, "copy_": [204, 422], "formula": [204, 268, 296, 297, 326, 328, 343, 346, 418, 424], "mogymwrapp": [205, 415], "mo_env": 205, "sea": 205, "treasur": 205, "so_env": 205, "stack_reward": 206, "stack_observ": 206, "auto_batch_size_": 206, "macro": [206, 311], "noop": 207, "trial": 207, "standard_norm": [208, 219, 241, 242, 422, 423, 425], "affin": [208, 219, 241, 242], "layer": [208, 241, 247, 251, 252, 254, 255, 260, 262, 265, 266, 267, 269, 270, 271, 272, 277, 278, 280, 281, 282, 283, 293, 294, 301, 310, 319, 417, 423, 424, 425, 426, 428, 435, 438], "epsilon": [208, 246, 264, 288, 350, 397, 423, 424, 425, 428], "recover": 208, "set_default_tensor_typ": 208, "doubletensor": 208, "isclos": 208, "next_ob": [208, 361, 362, 363, 364, 441], "init_stat": [208, 422, 423, 424, 425], "3752e": 208, "5087e": 208, "9294e": 208, "9636": 208, "5608": 208, "6408": 208, "num_it": [208, 423, 424], "reduce_dim": [208, 422, 423, 424, 425], "cat_dim": [208, 422, 423, 424, 425], "keep_dim": [208, 311, 423, 425], "statist": [208, 241, 242, 247, 348, 413, 422, 423, 424, 442], "gaussian": [208, 227, 246, 248, 274, 280, 281, 286, 424, 426, 435], "empir": [208, 248, 274, 312, 316, 422, 424, 436], "3d": [208, 251], "reorder": 210, "in_keys_in": [210, 236], "channel": [210, 230, 277, 282, 283, 423], "r3m": [212, 438], "resnet": [212, 237, 239], "ego4d": [212, 237, 239], "univers": [212, 237, 239, 427], "suraj": [212, 237], "nair": [212, 237], "aravind": [212, 237], "rajeswaran": [212, 237], "vikash": [212, 237, 239], "kumar": [212, 237, 239], "chelsea": [212, 237], "finn": [212, 237], "abhinav": [212, 237], "gupta": [212, 237], "2203": [212, 237, 274, 438], "12601": [212, 237, 438], "_init": [212, 237, 422], "resnet50": [212, 239, 438], "model_nam": [212, 237, 239, 384], "resnet34": 212, "resnet18": 212, "r3m_vec": [212, 438], "stack_imag": [212, 239], "tread": [212, 239], "hub": [212, 239, 427], "resnet50_weight": [212, 239], "imagenet1k_v1": [212, 239], "download_path": [212, 239], "tensor_pixels_kei": [212, 239], "sub_seq_len": 213, "sample_dim": [213, 422], "hesit": 213, "robust": [213, 247], "mix": [213, 289, 298, 359, 422, 435, 436], "improp": 213, "dummyenv": 214, "another_oth": 214, "other_reward": 214, "create_copi": 215, "stuff": [215, 430], "newnam": 215, "r2g": 217, "reward_to_go": 217, "bernoulli_": 217, "9010": 217, "9404": [217, 367], "9701": [217, 367], "9900": [217, 367], "0000": [217, 228, 229, 264, 287, 319, 367], "clamp_min": 218, "clamp_max": 218, "clip_min": 218, "clip_max": 218, "episode_": 220, "reward1": 220, "reward2": 220, "episode_reward": [220, 435, 436], "keep_reward": 221, "keep_don": 221, "logical_or": 222, "in_key_inv": 224, "unstack": 224, "update_don": 225, "disjunct": 225, "recognis": 225, "target_return": 226, "default_valu": [227, 323], "expand_spec": 227, "single_default_valu": 227, "call_before_env_reset": 227, "unit": [227, 248, 262, 265, 266, 282, 283, 291, 292, 424], "scala": 227, "dataloadingprim": 227, "mykei": 227, "__unless": 227, "exists__": 227, "get_primers_from_modul": [227, 250, 267, 271, 415], "recurrent_st": [227, 267, 271, 323, 425], "10th": 228, "0216": 228, "1149": 228, "1990": 228, "2749": 228, "3281": 228, "9290": 228, "3702": 228, "8978": 228, "time_kei": 229, "elaps": [229, 431], "monitor": [229, 427], "expend": 229, "_polici": 229, "time_reset": 229, "time_polici": 229, "time_step": [229, 270, 311], "0882": 229, "0002": 229, "5797e": 229, "6289e": 229, "7990e": 229, "0824e": 229, "0837e": 229, "6056e": 229, "2016e": 229, "1062e": 229, "7009e": 229, "from_int": 230, "shape_toler": 230, "ri": 230, "pretrainedtokenizerbas": 231, "additional_token": 231, "skip_special_token": 231, "add_special_token": 231, "return_attention_mask": 231, "missing_toler": 231, "call_before_reset": 231, "bert": 231, "uncas": 231, "traj_count": 232, "traj": 232, "countingenv": 232, "mocking_class": 232, "make_env_c0": 232, "make_env_c1": 232, "set_contain": 233, "reset_par": 233, "smoothli": [234, 247], "add_1": 234, "cache_spec": 234, "switch": [234, 242, 268, 297, 379], "set_missing_toler": 234, "inv_fn": 235, "unari": 235, "durin": 235, "ommit": 235, "observation_trsf": 235, "xbc": 235, "x7f": 235, "x859": 235, "x81": 235, "x9a": 235, "xbd": 235, "xb8t8": 235, "test_input_spec": 235, "test_output_spec": 235, "danger": 236, "vc1": 237, "vc1_vec": 237, "untrain": 237, "make_noload_model": 237, "vip": [238, 239, 438], "implicit": [239, 334, 342, 439], "jason": 239, "ma": 239, "shagun": 239, "sodhani": 239, "dinesh": 239, "jayaraman": 239, "osbert": 239, "bastani": 239, "ami": 239, "zhang": 239, "vip_vec": 239, "final_nam": 240, "sb3": 240, "terminal_obs_read": 240, "vecnormv2": 241, "new_api": [241, 242], "to_observation_norm": [241, 242], "frozen_copi": [241, 242], "shared_td": 241, "race": 241, "decai": [241, 242, 246, 264, 350, 397, 422, 423, 425, 442], "underflow": [241, 397], "build_td_for_shared_vecnorm": 241, "memmori": 241, "td_share": 241, "v": [241, 265, 266, 269, 270, 304, 334, 342, 349, 422, 423], "unfreez": [241, 242], "observationnorm": [241, 242, 413, 422, 423, 424, 425, 441], "train_env": 241, "eval_env": 241, "9999": 242, "0001": [242, 262], "shared_data": 242, "reduce_batch_dim": 242, "varianc": [242, 247, 248, 249, 268, 296, 297, 418, 422, 424, 436], "vs": [242, 245], "weigh": 242, "_cast_int_to_float": 242, "env_trsf": 242, "observation_norm": 242, "reward_norm": [242, 397], "unnorm": [242, 275, 276, 284], "7967": 242, "1238": 242, "5911": 242, "5275": 242, "8585": 242, "5028": 242, "2505": 242, "3169": [242, 319], "1332": 242, "1235": 242, "6596e": 242, "3072e": 242, "9170e": 242, "9255e": 242, "9131e": 242, "4671e": 242, "3760e": 242, "2058e": 242, "3484e": 242, "6185e": 242, "1456": 242, "1862": 242, "2053": 242, "2605": 242, "4046": 242, "5185": 242, "8023": 242, "1364": 242, "6183": 242, "5406": 242, "0920": 242, "1492": 242, "2702": 242, "3917": 242, "5001": 242, "7947": 242, "0160": 242, "3347": 242, "9082": 242, "9679": 242, "2199": 242, "2918": 242, "1668": 242, "2083": 242, "4981": 242, "5046": 242, "7950": 242, "9791": 242, "1484": 242, "4182": 242, "2201": 242, "0403": 242, "5206": 242, "7791": 242, "8282": 242, "2279": 242, "2907": 242, "4929": 242, "7793": 242, "8626": 242, "1832": 242, "local_env": 242, "testifi": 242, "4307": 242, "9613": 242, "state_dim": [243, 253, 258, 286, 291, 292, 307], "action_dim": [243, 253, 254, 256, 258, 286, 307, 422, 434], "gsde": [243, 347, 413], "gsdemodul": 243, "rb_transform": 244, "resist": 244, "insensit": 244, "sensit": [244, 423, 425], "_orig": 244, "95": [244, 274, 354, 424, 425], "window": [244, 311, 435, 439, 441], "module_nam": [245, 344], "from_vers": 245, "to_vers": 245, "class_method": 245, "import_modul": 245, "get_class_that_defined_method": 245, "module_set": 245, "setters_dict": 245, "setter": 245, "setter_dict": 245, "po": 246, "sigma_init": [246, 435], "sigma_end": [246, 435], "annealing_num_step": [246, 264, 288, 422, 423, 425, 426, 428, 432, 435], "sigma": [246, 265, 266, 268, 269, 270, 288, 296, 297, 424, 435], "omiss": [246, 264, 288], "momentum": 247, "max_r": 247, "max_d": 247, "warmup_step": 247, "batchrenorm": 247, "1702": 247, "03275": 247, "corenet": 247, "enhanc": 247, "warmup": 247, "phase": [247, 249, 436, 439], "outlier": 247, "period": 247, "warm": 247, "renorm": 247, "entropi": [248, 284, 326, 327, 328, 329, 334, 335, 342, 343, 345, 346, 347, 349, 351, 352, 436], "botev": 248, "2013": 248, "cem": 248, "plan": [248, 273, 274], "k": [248, 250, 265, 266, 269, 270], "maximis": [248, 254, 256, 274, 423, 424, 436], "modelbasedenv": [248, 274], "planning_horizon": [248, 274], "mpc": [248, 273, 274], "num_candid": [248, 274], "candid": [248, 274], "top_k": [248, 274], "modelbasedenvbas": [248, 273, 274, 415], "safemodul": [248, 273, 304, 306, 316, 326, 327, 329, 334, 335, 342, 346, 347, 348, 349, 351, 352, 404, 405, 409, 415, 441], "hausknecht": 249, "wagen": 249, "reus": [249, 254, 388], "consistentdropoutmodul": [249, 417], "capit": 249, "conceptu": 249, "devianc": 249, "set_exploration_typ": [249, 344, 394, 415, 417, 424, 425, 426, 428, 435, 441], "_main_async_collector": 249, "asyncdatacollector": [249, 415], "ditto": 249, "consistentdropout": 250, "input_shap": 250, "batcht": 250, "make_tensordict_prim": [250, 267, 271, 425], "input_dtyp": 250, "get_default_dtyp": [250, 397], "mask_6127171760": 250, "env0": [250, 442], "num_cel": [251, 252, 254, 255, 256, 257, 262, 263, 267, 271, 272, 277, 278, 304, 323, 423, 424, 425, 426, 428, 429, 432, 435, 436, 441], "elu": [251, 252, 254, 255, 256, 257, 262, 263, 277, 423, 441], "activation_kwarg": [251, 252, 272], "norm_class": [251, 252, 254, 255, 272], "norm_kwarg": [251, 252, 272], "bias_last_lay": [251, 252, 254, 255, 256, 257, 263, 272], "aggregator_class": [251, 252, 254, 255, 423, 425, 441], "squashdim": [251, 252, 254, 263, 277, 441], "aggregator_kwarg": [251, 252, 254, 255, 423, 425], "squeeze_output": [251, 252, 254, 255, 423, 425], "convolut": [251, 252, 254, 255, 277, 293, 426, 428], "cell": [251, 252, 265, 266, 267, 269, 270, 271, 272, 277, 278, 424, 426, 427, 428, 429, 430, 431, 432], "kernel": [251, 252, 277], "cnet": [251, 252], "conv3d": 251, "rectangular": [251, 252], "lazyconv2d": [252, 254, 255, 263, 277], "default_atari_dqn": [252, 426], "semin": 252, "transformer_config": [253, 286, 307], "decisiontransform": [253, 286], "dtconfig": [253, 258, 286], "2202": [253, 258, 345], "05607": [253, 258, 345], "return_to_go": [253, 258, 286, 307], "conv_net_kwarg": [254, 255], "mlp_net_kwarg": [254, 255, 256], "use_avg_pool": [254, 255], "WITH": [254, 255, 256, 257, 288, 350], "1509": [254, 255, 256, 257, 274, 288, 331, 341, 350], "02971": [254, 255, 256, 257, 288, 350], "convnet": [254, 255, 263, 277, 425, 426, 428, 441], "ndims_in": 254, "avgpool": [254, 255], "lazylinear": [254, 255, 256, 257, 263, 272, 417, 424, 428, 437, 438], "2304": 254, "adaptiveavgpool2d": [255, 423, 425], "output_s": [255, 423, 425], "squeeze2dlay": 255, "400": [256, 257, 436], "mlp_net_kwargs_net1": 257, "mlp_net_kwargs_net2": 257, "mlp1": 257, "mlp2": 257, "desdescrib": 258, "n_embd": 258, "n_layer": [258, 265, 269], "n_head": 258, "n_inner": 258, "n_posit": 258, "resid_pdrop": 258, "attn_pdrop": 258, "gpt2config": 258, "atol": [259, 295], "rtol": [259, 295], "batch_shap": [259, 284, 295], "event_shap": [259, 295], "absolut": [259, 295, 422], "_instanc": 259, "densiti": [259, 275, 276, 284, 297], "mass": [259, 275, 276, 284, 297, 437], "rsampl": [259, 276, 284, 316], "sample_shap": [259, 275, 276, 284], "softmax": [260, 276, 284, 308, 309], "var_num": [261, 290, 308, 309, 314], "action_value_kei": [261, 290, 308, 309, 313, 314, 329, 344, 359], "action_mask_kei": [261, 264, 290, 308, 309, 313, 314], "1707": [261, 309, 336, 346], "06887": [261, 309, 336], "mult": [261, 278, 290, 308, 309, 313, 314], "tensordict_modul": [261, 265, 266, 269, 270, 290, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 326, 327, 329, 330, 334, 335, 342, 346, 347, 348, 349, 351, 352, 417], "nbin": [261, 308, 417], "customdistributionalqv": 261, "log_softmax": [261, 308], "qvalue_actor": [261, 290, 308, 313, 417], "to_modul": [261, 315, 318, 422, 441], "std_bia": 262, "std_min_val": 262, "belief": [262, 282, 291, 292], "1912": [262, 337, 338, 339], "01603": [262, 337, 338, 339], "softplu": [262, 322, 324, 325], "out_features_valu": 263, "cnn_kwarg": [263, 423], "mlp_kwarg": [263, 423], "duel": 263, "cnn": [263, 277, 423, 426, 428, 441], "06581": 263, "512": 263, "greedi": [264, 290, 309, 314, 423, 425, 426, 428], "eps_init": [264, 288, 423, 425, 426, 428, 432], "eps_end": [264, 288, 423], "explorative_polici": [264, 288], "9055": 264, "9277": 264, "6295": 264, "2532": 264, "grad_fn": [264, 303, 316], "addbackward0": 264, "batch_first": [265, 269, 425], "bidirect": [265, 269, 425], "cudnn": [265, 266, 267, 269, 270, 271, 425, 426], "rnn": [265, 266, 267, 269, 270, 271, 302, 335, 349, 361, 425, 426, 428], "device_count": [265, 266, 269, 270, 442], "n_in": [265, 266, 269, 270], "n_out": [265, 266, 269, 270], "h0": [265, 266, 269, 270], "h1": [265, 266, 269, 270], "vectoris": [265, 266, 269, 270], "call_gru": [265, 266], "h_out": [265, 266, 269, 270], "batched_cal": [265, 266, 269, 270], "gate": [265, 266, 269], "r_t": 265, "w_": [265, 266, 269, 270], "ir": [265, 266], "x_t": [265, 269], "b_": [265, 266, 269, 270], "hr": [265, 266, 269], "h_": [265, 266, 269], "z_t": 265, "iz": [265, 266], "hz": [265, 266], "n_t": 265, "odot": [265, 266, 269, 270], "hn": [265, 266, 269], "h_t": [265, 269], "sigmoid": [265, 266, 269, 270], "hadamard": [265, 266, 269, 270], "multilay": [265, 269], "_t": [265, 269, 436, 437], "ge": [265, 269], "bernoulli": [265, 269], "b_ih": [265, 266, 269, 270, 271], "b_hh": [265, 266, 269, 270, 271], "h_0": [265, 269, 270], "pack_padded_sequ": [265, 269], "pack_sequ": [265, 269], "num": [265, 269, 432], "_layer": [265, 269], "_size": [265, 266, 269, 270], "h_n": [265, 269], "packedsequ": [265, 269], "weight_ih_l": [265, 269], "learnabl": [265, 266, 269, 270], "w_ir": 265, "w_iz": 265, "w_in": 265, "num_direct": [265, 269], "weight_hh_l": [265, 269], "w_hr": 265, "w_hz": 265, "w_hn": 265, "bias_ih_l": [265, 269], "b_ir": 265, "b_iz": 265, "b_in": 265, "bias_hh_l": [265, 269], "b_hr": 265, "b_hz": 265, "b_hn": 265, "mathcal": [265, 266, 269, 270], "sqrt": [265, 266, 269, 270, 288], "frac": [265, 266, 269, 270, 424], "seq_len": [265, 269], "subtli": 265, "matrix": [265, 269, 280, 281], "hx": [265, 266, 269, 270], "lstmcell": [266, 271, 426], "gru_cel": 266, "weight_ih": [266, 270], "weight_hh": [266, 270], "bias_ih": [266, 270], "bias_hh": [266, 270], "rocm": [266, 270], "embedd": [267, 271], "grucel": [267, 315], "python_bas": [267, 271], "custom_kei": [267, 271], "hasn": [267, 271], "set_recurrent_mod": [267, 271, 425], "recurrent_mod": [267, 271, 302], "rs": [267, 422], "gru_module_train": 267, "policy_train": 267, "traj_td": 267, "make_cudnn_bas": [267, 271], "make_python_bas": [267, 271, 426], "supplementari": [267, 271, 424, 442], "That": [267, 271, 424, 435], "dealt": [267, 271], "poorli": [267, 271], "meth": [267, 271, 344, 437], "data_collector": [267, 271, 423], "upscal": [268, 296, 297], "tanh_loc": [268, 296, 297], "event_dim": [268, 295, 296], "poor": [268, 296, 297], "explos": [268, 296, 297], "proj_siz": 269, "c0": [269, 270], "c1": [269, 270], "call_lstm": [269, 270], "c_out": [269, 270], "i_t": 269, "ii": [269, 270], "hi": [269, 270], "f_t": 269, "hf": [269, 270], "g_t": 269, "ig": [269, 270], "hg": [269, 270], "o_t": 269, "ho": [269, 270], "c_t": 269, "c_": 269, "1402": 269, "1128": 269, "c_0": [269, 270], "proj": 269, "c_n": 269, "w_ii": 269, "w_if": 269, "w_ig": 269, "w_io": 269, "w_hi": 269, "w_hf": 269, "w_hg": 269, "w_ho": 269, "b_ii": 269, "b_if": 269, "b_ig": 269, "b_io": 269, "b_hi": 269, "b_hf": 269, "b_hg": 269, "b_ho": 269, "weight_hr_l": 269, "_revers": 269, "analog": [269, 428], "cn": 269, "lstm_cell": 270, "h_1": 270, "c_1": 270, "cx": 270, "recurrent_state_h": 271, "recurrent_state_c": 271, "triplet": [271, 313, 314], "lstm_modul": 271, "rs_h": 271, "rs_c": 271, "single_bias_last_lay": 272, "layer_class": 272, "layer_kwarg": 272, "perceptron": [272, 428], "noisylinear": [272, 280, 415, 423], "noisylazylinear": [272, 415], "mpcplanner": 273, "tensordict_out": [273, 442], "mppi": 274, "covari": 274, "william": [274, 348], "aldrich": 274, "theodor": 274, "01149": 274, "hansen": 274, "wang": 274, "su": 274, "04955": 274, "valueoper": [274, 304, 305, 306, 326, 327, 328, 329, 330, 335, 342, 343, 346, 347, 348, 349, 351, 352, 409, 417, 422, 424, 429], "tdlambdaestim": [274, 415, 422], "value_net": [274, 331, 333, 348, 361, 362, 363, 364, 424, 426, 428, 429, 432], "adv": 274, "lmbda": [274, 354, 361, 364, 366, 372, 373, 374, 377, 378, 418, 422, 424, 436], "value_network": [274, 330, 331, 333, 334, 336, 342, 349, 361, 362, 363, 364, 418, 422, 424, 426, 429, 432, 435], "temperatur": [274, 327, 334, 342], "neg_inf": [275, 276], "inf": [275, 276], "use_cross_entropi": 275, "api_doc": [275, 276], "tf_agent": [275, 276], "sparse_mask": [275, 276], "cross_entropi": 275, "1203": [275, 276], "0928": [275, 276], "0831": [275, 276], "1972": [275, 276], "grad_method": [276, 284], "reparamgradientstrategi": [276, 284], "passthrough": [276, 284], "relaxedonehot": [276, 284], "sample_non_valid": 276, "zeros_lik": [276, 437], "share_param": [277, 278, 279, 435, 436], "use_td_param": [277, 278, 279], "get_stateful_net": [277, 278, 279, 344, 417, 418], "from_stateful_net": [277, 278, 279, 344, 418], "homogen": [277, 278, 435, 436], "tensordictparam": [277, 278, 316], "_empty_net": [277, 278], "roughli": [277, 278, 441], "agent_network": [277, 278], "modulelist": [277, 278], "2592": 277, "decentr": 277, "n_agent_input": [278, 279, 435, 436], "n_agent_output": [278, 279, 435, 436], "toech": 278, "centalis": 278, "shown": [278, 417, 426, 434, 435, 436, 439], "agent_dim": 279, "vmap_random": [279, 344, 418], "stateful_net": [279, 344], "Such": [279, 344], "multiagentmlp": [279, 435, 436], "snet": 279, "hasattr": [279, 422], "kaiming_normal_": 279, "std_init": [280, 281], "initialize_paramet": 280, "isol": [280, 344, 426], "1706": [281, 298], "10295v3": 281, "induc": [281, 316], "aid": 281, "1803": [282, 283, 289], "10122": [282, 283], "rnn_hidden": 282, "latent": 283, "ordin": [285, 415], "parametris": [285, 287], "inres": 286, "mu": [286, 288, 424], "impos": [287, 417], "proxim": [287, 346, 424, 436], "atom": 287, "tang": 287, "agraw": 287, "2020": 287, "1901": 287, "10500": 287, "discretis": 287, "num_atom": 287, "num_sampl": 287, "middl": 287, "adam": [287, 296, 422, 423, 424, 425, 426, 429, 432, 435, 436, 437], "lr": [287, 422, 423, 424, 425, 432, 435, 436, 437], "optimis": [287, 435, 436], "minimis": 287, "penalis": 287, "0308": 287, "1586": 287, "4727": 287, "2260": 287, "1120": 287, "histogram": 287, "return_typ": 287, "hist": [287, 439], "158": 287, "478": 287, "228": 287, "112": 287, "bin_edg": 287, "8000": 287, "6000": 287, "4000": 287, "ornstein": [288, 422, 426], "uhlenbeck": [288, 422, 426], "ou": [288, 422], "correl": 288, "noise_t": 288, "noise_": 288, "theta": [288, 424, 437], "sigma_t": 288, "sigma_": 288, "anneal": [288, 423, 428, 435], "ou_prev_nois": 288, "ou_step": 288, "x0": 288, "sigma_min": 288, "n_steps_ann": 288, "is_init_kei": 288, "_ou_prev_nois": 288, "_ou_step": 288, "state_shap": [289, 359], "mixing_embed_dim": [289, 359], "qmix": [289, 435, 436], "mixer": [289, 298, 359], "monoton": 289, "hyper": 289, "11485": 289, "qmixerloss": [289, 298], "qmix_vdn": [289, 298], "vdn": [289, 298], "hidden_dim": [291, 292], "scale_lb": [291, 292], "posterior": [291, 338], "rssm": [291, 292, 338], "1811": [291, 292], "04551": [291, 292], "obs_embed": 291, "rnn_hidden_dim": 292, "dream": 292, "safe_tanh": 296, "tanhtransform": 296, "overflow": [296, 303, 308, 309, 312, 313, 314, 315, 316], "get_mod": [296, 316], "decomposit": 298, "05296": 298, "hide": [299, 424, 435, 436], "satisfi": [299, 417], "vmap_dim": 299, "lam": 299, "sample_in": 299, "sample_in_td": 299, "vm": 299, "translat": [303, 312], "character": [303, 308, 312, 313, 315, 439], "td_modul": [303, 304, 305, 306, 312, 315, 316, 318, 320, 428, 441], "3635": 303, "0340": 303, "1476": 303, "3911": 303, "1664": 303, "5455": 303, "2247": 303, "4583": 303, "2916": 303, "2160": 303, "5337": 303, "5193": 303, "addmmbackward0": 303, "actorvalueoper": [304, 328, 343, 346, 417, 428], "get_policy_oper": [304, 305, 306, 328, 343, 346, 417], "standalon": [304, 305, 306, 426, 428], "tdmodul": [304, 305, 306, 409], "get_critic_oper": 304, "common_oper": [304, 306], "policy_oper": [304, 305, 306], "value_oper": [304, 305, 306], "module_hidden": [304, 306], "td_module_hidden": [304, 306], "module_act": [304, 306], "td_module_act": [304, 305, 306], "module_valu": [304, 305, 306], "td_module_valu": [304, 305, 306], "state_action_valu": [304, 320, 327, 329, 334, 342, 349, 360, 409, 417, 422, 435, 441], "td_clone": [304, 305, 306], "tensordictmodulewrapp": [304, 404, 405, 409], "get_policy_head": [304, 305, 306], "safesequenti": [304, 305, 306, 359], "head": [304, 306, 316, 323, 328, 343, 346, 415], "get_value_head": [304, 305, 306], "get_value_oper": [304, 305, 306, 328, 343, 346], "action_modul": 305, "actorcriticoper": [306, 417, 428], "actorcriticwrapp": [306, 417, 422], "inferec": 307, "set_tensor_kei": 307, "dt_inference_wrapp": 307, "baz": 307, "inference_context": 307, "obs_dim": 307, "tanhdelta": [307, 415, 422, 435], "dtactor": 307, "actor_modul": [307, 441], "dist_class": 307, "dist_kwarg": 307, "distribution_kwarg": [307, 312, 316, 424, 435, 436], "inference_actor": 307, "sequence_length": 307, "mask_context": 307, "out_act": 307, "qvaluemodul": [308, 313, 359, 425, 426, 428, 432], "distributionaldqnnet": 308, "make_log_softmax": 308, "my_action_valu": [309, 314], "chanc": 309, "lmheadmodel": 310, "actor_head": [310, 328, 343, 346], "base_model": 310, "lm_head": 310, "lookahead": 311, "reshape_cat": 311, "actor_bas": 311, "obs_cat": 311, "obs_cat_reshap": 311, "action_orig": 311, "multistepenvwrapp": 311, "alter": [311, 344, 417], "ego": 311, "default_interaction_typ": [312, 316, 428], "interaction_typ": [312, 316], "set_interaction_typ": [312, 316], "compositedistribut": [312, 316, 326, 346, 418, 428], "distribution_map": [312, 316], "name_map": [312, 316], "cache_dist": [312, 316], "n_empirical_estim": [312, 316], "compound": [312, 428], "chose": 314, "functionalmodul": 315, "functionalmodulewithbuff": 315, "td_fmodul": 315, "td_function": 315, "td_state": 315, "params_repeat": 315, "td_vmap": [315, 318], "random_sampl": [315, 316], "suppli": 316, "paliat": 316, "get_median": 316, "get_mean": 316, "sample_key_nam": 316, "_log_prob": 316, "composite_lp_aggreg": 316, "clampbackward0": 316, "anihil": 316, "probabilistictensordictsequenti": [317, 326, 328, 343, 346, 348, 404, 405, 418, 441], "partial_toler": [317, 318, 434], "AND": [317, 318, 329], "tensordictsequ": 318, "safeprobabilisticmodul": [318, 417], "spec1": 318, "net1": 318, "module1": 318, "td_module1": 318, "spec2": 318, "module2": 318, "td_module2": 318, "boundari": [319, 424, 426, 435, 436], "resolut": 319, "9944": 319, "9991": 319, "3020": 319, "2299": 319, "5418": 319, "2989": 319, "6849": 319, "2690": 319, "9649": 319, "5686": 319, "8602": 319, "0315": 319, "8455": 319, "6027": 319, "4746": 319, "7843": 319, "7782": 319, "2111": 319, "5115": 319, "4687": 319, "5760": 319, "custommodul": 320, "imaginari": 321, "imagin": 321, "transition_model": 321, "get_reward_oper": 321, "get_transition_model_oper": 321, "min_val": [322, 325], "_bia": 322, "surject": 325, "expln": 325, "biased_softplu": [325, 415], "biased_softplus_": 325, "syntax": [325, 422], "add_custom_map": 325, "1602": 326, "01783v2": 326, "actor_network": [326, 327, 328, 329, 330, 332, 334, 335, 342, 343, 345, 346, 347, 348, 349, 351, 352, 418, 422, 424, 429, 435, 436], "critic_network": [326, 328, 343, 346, 348, 424, 436], "entropy_bonu": [326, 328, 343, 346, 424], "favour": [326, 328, 343, 346], "samples_mc_entropi": [326, 328, 343, 345, 346], "entropy_coef": [326, 328, 343, 346, 424, 436], "critic_coef": [326, 328, 343, 346, 424], "loss_critic_typ": [326, 328, 343, 346, 348, 424], "l1": [326, 328, 330, 331, 335, 343, 346, 347, 348, 351, 352, 355, 359, 417, 422], "l2": [326, 328, 330, 331, 332, 333, 335, 338, 339, 343, 346, 347, 348, 351, 352, 355, 359, 422, 435], "smooth_l1": [326, 327, 328, 329, 330, 331, 334, 335, 342, 343, 346, 347, 348, 349, 351, 352, 355, 359, 424], "separate_loss": [326, 328, 329, 330, 334, 335, 342, 343, 346, 347, 348, 349, 351, 352], "advantage_kei": [326, 328, 343, 346, 348, 361, 362, 363, 364], "value_target_kei": [326, 328, 343, 346, 348, 361, 362, 363, 364], "value_target": [326, 328, 343, 346, 348, 361, 362, 363, 364, 424, 436], "ddp": [326, 328, 343, 346, 348], "fsdp": [326, 328, 343, 346, 348], "divid": [326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 340, 342, 343, 345, 346, 347, 348, 349, 351, 352, 402, 422, 435, 436, 437], "clip_valu": [326, 328, 343, 346, 348], "loss_crit": [326, 346, 424, 436], "loss_entropi": [326, 346, 424, 436], "loss_object": [326, 346, 424, 436], "next_reward": [326, 327, 329, 330, 331, 333, 334, 335, 342, 346, 347, 348, 349, 351, 352, 361, 362, 363, 364], "next_don": [326, 327, 329, 330, 331, 333, 334, 335, 342, 346, 347, 348, 349, 351, 352, 361, 362, 363, 364], "next_termin": [326, 327, 329, 330, 331, 333, 334, 335, 342, 346, 347, 348, 349, 351, 352, 361, 362, 363, 364], "loss_obj": 326, "next_observ": [326, 327, 329, 330, 331, 333, 334, 335, 342, 346, 347, 348, 349, 351, 352, 434], "sacloss": [326, 341, 350, 415], "default_kei": [326, 327, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 345, 346, 347, 348, 349, 351, 352, 359, 365], "_acceptedkei": [326, 327, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 344, 345, 346, 347, 348, 349, 351, 352, 359, 365], "fraction": 326, "make_value_estim": [326, 327, 329, 330, 331, 333, 335, 336, 337, 342, 344, 346, 347, 348, 349, 351, 352, 353, 359, 418, 422, 423, 435, 436, 441], "value_typ": [326, 327, 329, 330, 331, 333, 335, 336, 337, 342, 344, 346, 347, 348, 349, 351, 352, 354, 359, 422], "valueestim": [326, 327, 329, 330, 331, 333, 335, 336, 337, 342, 344, 346, 347, 348, 349, 351, 352, 354, 359, 415, 418, 422, 435, 436], "hyperparam": [326, 327, 329, 330, 331, 333, 335, 336, 337, 342, 344, 346, 347, 348, 349, 351, 352, 359, 422], "enum": [326, 327, 329, 330, 331, 333, 335, 336, 337, 342, 344, 346, 347, 348, 349, 351, 352, 354, 359, 422], "default_value_estim": [326, 327, 329, 330, 331, 333, 335, 336, 337, 342, 344, 346, 347, 348, 349, 351, 352, 359, 422, 441], "default_value_kwarg": [326, 327, 329, 330, 331, 333, 335, 336, 337, 342, 344, 346, 347, 348, 349, 351, 352, 359, 415, 422], "dqn_loss": [326, 327, 329, 330, 331, 333, 335, 336, 337, 342, 344, 346, 347, 348, 349, 351, 352, 353, 359], "td1": [326, 327, 329, 330, 331, 333, 335, 336, 337, 342, 344, 346, 347, 348, 349, 351, 352, 359, 422], "conserv": [327, 333], "04779": [327, 333], "qvalue_network": [327, 329, 334, 335, 342, 347, 349, 351, 352], "unti": [327, 329, 342, 347, 349, 351, 352], "loss_funct": [327, 329, 330, 331, 332, 333, 334, 335, 342, 347, 349, 351, 352, 355, 359, 422, 435], "alpha_init": [327, 329, 335, 345, 347, 349], "min_alpha": [327, 329, 335, 345, 347, 349], "max_alpha": [327, 329, 335, 345, 347, 349], "fixed_alpha": [327, 329, 335, 345, 347, 349], "target_entropi": [327, 329, 335, 345, 347, 349], "prod": [327, 329, 345, 349], "delay_actor": [327, 330, 349, 351, 352], "delay_qvalu": [327, 335, 347, 349, 351, 352], "min_q_weight": 327, "max_q_backup": 327, "backup": 327, "deterministic_backup": 327, "num_random": 327, "with_lagrang": 327, "lagrang": 327, "lagrange_thresh": 327, "valueclass": [327, 329, 330, 335, 347, 349, 351, 352], "qvalu": [327, 329, 334, 335, 342, 347, 349, 351, 352], "loss_actor": [327, 329, 330, 334, 335, 342, 347, 348, 349, 351, 352, 395, 422, 435], "loss_actor_bc": 327, "loss_alpha": [327, 329, 335, 347, 349], "loss_cql": [327, 333], "loss_qvalu": [327, 329, 333, 334, 335, 342, 347, 349, 351, 352], "loss_alpha_prim": 327, "clip_epsilon": [328, 424, 436], "normalize_advantag": [328, 343, 346, 436], "normalize_advantage_exclude_dim": [328, 343, 346], "multiobject": [328, 343, 346], "value_kei": [328, 343, 346, 361, 362, 363, 364, 422], "somemodul": [328, 343, 346], "someactor": [328, 343, 346], "value_head": [328, 343, 346], "somevalu": [328, 343, 346], "loss_modul": [328, 341, 343, 344, 346, 350, 399, 408, 409, 418, 419, 422, 423, 424, 435, 436, 439], "IN": 329, "FOR": 329, "simplic": [329, 423, 424, 430, 438, 439, 441], "openreview": [329, 347], "pczqttstix": 329, "qvalue_loss": [329, 351], "actor_loss": [329, 351], "alpha_loss": 329, "num_qvalue_net": [329, 334, 335, 342, 347, 349, 351, 352], "maybe_init_target_entropi": 329, "fault_toler": 329, "target_entropy_buff": 329, "delay_valu": [330, 331, 333, 336, 348, 349, 359, 423, 425, 426, 432, 435], "loss_valu": [330, 334, 342, 348, 349, 422, 424, 435, 436], "pred_valu": [330, 333, 351, 352, 422], "pred_value_max": [330, 422], "target_valu": [330, 333, 347, 351, 352, 360, 418, 422], "target_value_max": [330, 422], "qvalueactor": [331, 333, 359, 423, 425], "double_dqn": 331, "06461": [331, 341], "mult_one_hot": [331, 334, 335, 359], "loss_val": [331, 333, 418, 422, 424, 425, 426, 429, 430, 432, 435, 436, 439], "01345": 332, "distanc": [333, 343, 355, 360, 361, 436], "dcql_loss": 333, "2110": [334, 342], "06169": [334, 342], "expectil": [334, 342], "tau": [334, 342, 350, 422, 423, 435], "antmaz": [334, 342], "sticht": [334, 342], "onehotcategor": [334, 335, 415], "target_entropy_weight": 335, "skip_done_st": [335, 349], "disctount": 336, "distributionalqvalueactor": [336, 417], "input_tensordict": [336, 422], "actor_model": 337, "value_model": [337, 339], "imagination_horizon": 337, "discount_loss": [337, 339], "lambda_kl": 338, "lambda_reco": 338, "lambda_reward": 338, "reco_loss": 338, "reward_loss": 338, "free_nat": 338, "nat": 338, "delayed_clamp": 338, "global_averag": 338, "value_loss": 339, "fake_data": 339, "1606": 340, "03476": 340, "discriminator_network": 340, "use_grad_penalti": 340, "gp_lambda": 340, "discrimin": 340, "ddpgloss": [341, 350, 409, 415, 422, 429, 435, 441], "td3loss": [341, 350, 415], "value_network_update_interv": 341, "qvalueclass": 342, "loss_value_diff": 342, "diff": 342, "old_polici": 343, "new_polici": 343, "apart": [343, 436], "dtarg": 343, "samples_mc_kl": 343, "analyt": 343, "decrement": 343, "loss_": [344, 395, 418, 422, 429], "equip": [344, 425, 426, 428], "gh": 344, "_forward_value_estimator_kei": 344, "value_estim": [344, 361, 362, 363, 364, 365, 418, 422, 436], "myloss": 344, "action2": 344, "augment": [344, 430, 432, 439], "deterministic_sampling_mod": 344, "convert_to_funct": [344, 422], "expand_dim": 344, "create_target_param": [344, 422], "compare_against": [344, 422], "_param": 344, "resampl": 344, "_target_param": 344, "network_nam": 344, "blend": 344, "add_random_modul": [344, 418], "flavor": [346, 422, 435, 436, 441], "clipppoloss": [346, 415, 424, 436], "klpenppoloss": [346, 415], "06347": 346, "gae": [346, 415, 418, 422, 424, 436], "ppo_loss": 346, "tdlambda": [346, 354, 418, 422], "base_lay": 346, "randn_lik": 346, "samplelogprob": 346, "ay8zfzm0tdd": 347, "sub_sample_len": 347, "subsampl": [347, 390, 419], "action_log_prob_actor": 347, "state_action_value_actor": [347, 351, 352], "connectionist": 348, "1992": 348, "doi": 348, "1007": 348, "bf00992696": 348, "actor_net": [348, 422, 424], "1801": 349, "01290": 349, "applic": [349, 359, 427, 428, 437], "1812": 349, "05905": 349, "redqloss": [350, 415], "math": 350, "theta_t": [350, 437], "theta_": [350, 437], "polyak": 350, "minimalist": 351, "06860": 351, "policy_nois": [351, 352], "noise_clip": [351, 352], "td3_bc": 351, "bc_loss": 351, "lmbd": 351, "td0": [353, 422, 435], "strict_shap": 355, "view_a": 355, "qmixer": [359, 415], "local_valu": 359, "visibl": [359, 436], "acceptedkei": 359, "global_valu": 359, "penultim": 359, "local_value_network": 359, "mixer_network": 359, "value_modul": [359, 424, 441], "qnet": [359, 422], "next_val_kei": 360, "pred_next_v": 360, "mse": 360, "q_valu": 360, "n_steps_to_next": 360, "value_next_st": 360, "1506": [361, 366, 374], "02438": [361, 366, 374], "exponenti": [361, 362, 363, 364, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 397], "average_ga": [361, 424], "skip_exist": [361, 362, 363, 364], "get_default_devic": [361, 362, 363, 364, 365], "auto_reset_env": 361, "next_valu": [361, 362, 363, 364, 365], "deactivate_vmap": 361, "gradient_mod": 361, "value_error": [361, 362, 363, 364, 365], "marker": [361, 422], "trajecotri": 361, "fair": 361, "target_param": [361, 362, 363, 364, 365, 422, 436], "98": [361, 362, 363, 364], "94": [361, 364], "unpack": [361, 362, 363, 364], "tensor_kei": [361, 362, 363, 364, 365], "aka": [362, 423, 435], "average_reward": [362, 363, 364], "tdestim": [362, 363, 365], "infti": 363, "valuefunctionbas": 365, "old_stat": [366, 368, 370, 372, 374, 375, 377], "new_stat": [366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378], "rolling_gamma": [370, 371, 372, 373, 375, 376, 377, 378], "g1": [370, 371, 372, 373, 375, 376, 377, 378], "g2": [370, 371, 372, 373, 375, 376, 377, 378], "g3": [370, 371, 372, 373, 375, 376, 377, 378], "g4": [370, 371, 372, 373, 375, 376, 377, 378], "v3": [370, 371, 372, 373, 375, 376, 377, 378], "preproc": [379, 426, 435], "as_non_tensor": [379, 435], "render_method": 379, "pass_tensordict": 379, "syntact": 379, "sugar": 379, "out_file_bas": 380, "skip_reset": 380, "center_crop": 381, "make_grid": 381, "log_video": 381, "csv": [381, 383, 385, 423, 431, 432], "wandb": [381, 385, 388, 431, 441], "tensorboard": [381, 385, 387, 431, 441], "log_dir": [381, 382, 383, 385, 387, 388, 423, 432], "cheetah_video": 381, "run_video": 381, "openxexperiencereplai": 381, "sec": [381, 437], "video_fp": [381, 383, 386], "cmu_stretch": 381, "run_video_0": 381, "pt": [383, 419], "cur_dir": 383, "csv_log": 383, "add_video": 383, "video_": 383, "experiment_nam": [384, 385], "uuid": [384, 423, 442], "logger_typ": 385, "logger_nam": 385, "mlflow": [385, 386], "wandb_kwarg": 385, "mlflow_kwarg": 385, "tracking_uri": 386, "uri": 386, "datastor": 386, "tb_log": 387, "tensoarboard": 387, "td_log": 387, "save_dir": 388, "resum": 388, "uncategor": 388, "my_funct": 389, "sub_traj_len": 390, "min_sub_traj_len": 390, "register_op": [390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 419, 423], "process_optim_batch": [390, 396, 397, 419], "td_out": [390, 398], "_process_optim_batch_hook": [390, 419], "batch_subsampl": 390, "clear_cuda": 391, "pre_optim_step": [391, 419], "log_pbar": [392, 393, 394, 397, 419, 423], "count_fram": 392, "pre_steps_log": [392, 393, 419], "count_frames_log": 392, "lognam": 393, "r_train": 393, "log_reward": [393, 423], "record_interv": [394, 422, 423], "record_fram": [394, 402, 422, 423], "policy_explor": [394, 409, 422, 423, 426, 428, 432], "log_kei": [394, 423], "underestim": 394, "r_evalu": [394, 422], "loss_compon": 395, "appl": 395, "optimizer_hook": 395, "flatten_tensordict": [396, 423], "max_dim": 396, "rb_trainer": 396, "batch_process": [396, 397, 398, 419], "post_loss": [396, 419], "999": [397, 423], "jitter": 397, "finfo": 397, "default_dtyp": 397, "update_reward_stat": 397, "normalize_reward": 397, "make_train": [398, 415], "_process_batch_hook": [398, 419], "select_kei": [398, 419], "versatil": [399, 427], "optim_steps_per_batch": [399, 419, 423], "clip_grad_norm": 399, "clip_norm": 399, "progress_bar": 399, "save_trainer_interv": 399, "log_interv": [399, 423], "save_trainer_fil": [399, 419], "load_from_fil": [399, 419], "update_weights_interv": [401, 423], "post_step": [401, 419, 423], "dictconfig": [402, 403, 404, 405, 407, 408, 409, 410, 413], "unknowingli": 402, "annealing_fram": [402, 422], "init_env_step": [402, 403, 422], "proof_environ": [403, 422], "sta": 403, "ot": 403, "actor_model_explor": [404, 405, 422], "make_env_kwarg": [404, 405], "targetnetupdat": [406, 408, 409], "replayargsconfig": 407, "target_net_updat": [409, 422, 423], "constitu": 409, "egreedywrapp": 409, "env_proof": 409, "obs_spec": 409, "net_valu": 409, "dir": [409, 419, 423], "gettempdir": 409, "namespac": [410, 413], "transformed_env_constructor": [410, 415], "num_env_per_collector": [411, 412], "video_tag": 413, "norm_obs_onli": 413, "use_env_cr": 413, "custom_env_mak": 413, "custom_env": 413, "return_transformed_env": 413, "action_dim_gsd": 413, "state_dim_gsd": 413, "obs_norm_state_dict": 413, "weightupdat": 415, "distributedsyncdatacollector": 415, "submitit_delayed_launch": 415, "remotetensordictreplaybuff": 415, "rational": 415, "footnot": 415, "binarydiscretetensorspec": 415, "boundedtensorspec": 415, "discretetensorspec": 415, "lazystackedcompositespec": 415, "lazystackedtensorspec": 415, "multidiscretetensorspec": 415, "multionehotdiscretetensorspec": 415, "nontensorspec": 415, "onehotdiscretetensorspec": 415, "unboundedcontinuoustensorspec": 415, "unboundeddiscretetensorspec": 415, "prompttensordicttoken": 415, "rolloutfrommodel": 415, "tokenizeddatasetload": 415, "create_infinite_iter": 415, "constantklcontrol": 415, "adaptiveklcontrol": 415, "densifyreward": 415, "h5combin": 415, "h5split": 415, "nested2t": 415, "check_no_exclusive_kei": 415, "consolidate_spec": 415, "contains_lazy_spec": 415, "envmetadata": 415, "chessenv": 415, "tictactoeenv": 415, "llmhashingenv": 415, "check_marl_group": 415, "get_available_librari": 415, "terminated_or_trunc": 415, "dreamerdecod": 415, "braxwrapp": 415, "dmcontrolwrapp": 415, "isaaclabwrapp": 415, "jumanjiwrapp": 415, "meltingpotenv": 415, "meltingpotwrapp": 415, "mogymenv": 415, "multithreadedenvwrapp": 415, "openmlenv": 415, "openspielwrapp": 415, "openspielenv": 415, "pettingzooenv": [415, 435], "robohiveenv": 415, "smacv2env": 415, "smacv2wrapp": 415, "unitymlagentsenv": 415, "unitymlagentswrapp": 415, "vmaswrapp": 415, "register_gym_spec_convers": 415, "qvaluehook": 415, "distributionalqvaluehook": 415, "reset_nois": 415, "cemplann": 415, "mpcplannerbas": 415, "mppiplann": 415, "independentnorm": 415, "truncatednorm": 415, "maskedonehotcategor": 415, "onehotordin": 415, "inv_softplu": 415, "vmapmodul": 415, "distributionaldqnloss": [415, 423], "discretesacloss": 415, "crossqloss": 415, "iqlloss": 415, "discreteiqlloss": 415, "cqlloss": 415, "discretecqlloss": 415, "gailloss": 415, "dtloss": 415, "onlinedtloss": 415, "td3bcloss": 415, "ppoloss": 415, "a2closs": 415, "reinforceloss": 415, "dreameractorloss": 415, "dreamermodelloss": 415, "dreamervalueloss": 415, "td0estim": [415, 422], "td1estim": [415, 422], "td0_return_estim": 415, "td0_advantage_estim": 415, "td1_return_estim": 415, "vec_td1_return_estim": 415, "td1_advantage_estim": 415, "vec_td1_advantage_estim": 415, "td_lambda_return_estim": 415, "vec_td_lambda_return_estim": 415, "td_lambda_advantage_estim": 415, "vec_td_lambda_advantage_estim": 415, "generalized_advantage_estim": 415, "vec_generalized_advantage_estim": 415, "hardupd": [415, 422, 429], "softupd": [415, 422, 423, 425, 426, 429, 432, 435], "distance_loss": [415, 422], "group_optim": 415, "hold_out_net": 415, "hold_out_param": [415, 422], "batchsubsampl": [415, 419], "clearcudacach": 415, "countframeslog": 415, "logscalar": [415, 419, 423], "optimizerhook": [415, 423], "logvalidationreward": [415, 419, 422, 423], "replaybuffertrain": [415, 419, 423], "rewardnorm": 415, "selectkei": [415, 419], "trainerhookbas": [415, 419, 423], "updateweight": [415, 419, 423], "make_collector_offpolici": 415, "make_collector_onpolici": 415, "make_dqn_loss": 415, "make_replay_buff": [415, 422], "make_target_updat": 415, "parallel_env_constructor": [415, 422], "sync_async_collector": 415, "sync_sync_collector": 415, "correct_for_frame_skip": 415, "get_stats_random_rollout": 415, "mlflowlogg": 415, "get_logg": 415, "generate_exp_nam": 415, "journei": 416, "textbook": 416, "highlight": [416, 435], "ever": [416, 436], "bump": 416, "benefit": [416, 427, 435, 436, 439], "pr": 416, "ground": [417, 422, 437], "recycl": [417, 439], "noisier": 417, "Their": [417, 435, 436], "sd": [417, 442], "prob_modul": 417, "uncertainti": 417, "soften": 417, "backbon": [417, 425, 428, 434, 441], "make_actor": 417, "make_valu": 417, "shared_param": 417, "make_common": 417, "reusabl": [418, 422, 439], "swappabl": [418, 422], "characterist": [418, 422, 437], "trainabl": [418, 422, 429, 438], "smth": [418, 422], "metric": [418, 422], "plenti": [418, 426], "amort": [418, 423, 424], "told": [418, 424], "pseudo": [418, 430, 437], "buri": 418, "str_valu": 418, "nutshel": [418, 422], "barto": [418, 435, 436], "chapter": [418, 431], "value_net_loss": 418, "pow": [418, 422], "room": 418, "signifi": [418, 435, 436], "underperform": 418, "thin": 418, "intric": [418, 428], "set_composite_lp_aggreg": [418, 436], "action_td": 418, "action0": 418, "f0": 418, "action1": 418, "f1": 418, "f2": 418, "f3": 418, "action0_log_prob": 418, "action1_log_prob": 418, "inferior": 418, "multivari": 418, "dirichlet": 418, "prev_log_prob": 418, "new_log_prob": 418, "log_weight": 418, "appreci": [418, 427], "multihead": 418, "believ": 419, "substanti": 419, "_pre_steps_log_hook": 419, "_pre_optim_hook": 419, "sub_batch": 419, "_post_loss_hook": 419, "_post_optim_hook": 419, "post_optim": [419, 423], "_post_optim_log": 419, "post_optim_log": 419, "_post_steps_hook": 419, "_post_steps_log_hook": 419, "post_steps_log": 419, "logginghook": 419, "logging_hook": 419, "save_dict": 419, "some_valu": 419, "torchsnapshot": 419, "ckpt_backend": 419, "filepath": 419, "save_train": 419, "000": [421, 440], "galleri": [421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442], "mem": [421, 440], "mb": [421, 440], "coding_ddpg": [421, 422, 440], "coding_dqn": [421, 423, 440], "coding_ppo": [421, 424, 440], "dqn_with_rnn": [421, 425, 440], "multi_task": [421, 434, 440], "multiagent_competitive_ddpg": [421, 435, 440], "multiagent_ppo": [421, 436, 440], "pretrained_model": [421, 438, 440], "rb_tutori": [421, 439, 440], "torchrl_demo": [421, 440, 441], "torchrl_env": [421, 440, 442], "author": [422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 435, 436, 437, 439, 442], "vincent": [422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 437, 439, 442], "moen": [422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 437, 439, 442], "assembl": 422, "focus": [422, 429], "maxim": [422, 429, 437], "transpar": [422, 425], "bash": 422, "is_fork": [422, 423, 424, 425, 435, 436, 438], "get_start_method": [422, 423, 424, 425, 435, 436, 438], "collector_devic": 422, "loss_dict": 422, "modal": 422, "oblivi": [422, 424, 439], "elementari": 422, "didact": [422, 426], "dilut": 422, "pessimist": [422, 423, 424], "target_actor_network_param": 422, "actor_in_kei": 422, "actor_crit": 422, "compromis": 422, "hp": 422, "_value_estim": 422, "elif": [422, 423], "unknown": 422, "_loss_actor": 422, "td_copi": 422, "actor_network_param": [422, 435], "value_network_param": [422, 435], "_loss_valu": 422, "pred_val": 422, "target_value_network_param": 422, "glue": 422, "_forward": 422, "remaind": 422, "env_librari": 422, "env_task": 422, "env_arg": [422, 423], "torchr": 422, "rescal": 422, "presum": 422, "make_transformed_env": 422, "reward_sc": 422, "env_per_collector": 422, "transform_state_dict": 422, "make_t_env": 422, "cheat": 422, "10m": 422, "cautiou": 422, "magnitud": [422, 435], "thousand": [422, 425], "get_env_stat": 422, "proof_env": 422, "5000": [422, 426, 432], "recal": [422, 424, 439], "ddpgmlpactor": 422, "ddpgmlpqnet": 422, "materi": 422, "ornsteinuhlenbeckprocessmodul": [422, 428], "make_ddpg_actor": 422, "q_net": 422, "tight": 422, "10_000": [422, 424], "traj_len": [422, 425], "make_record": 422, "recorder_obj": 422, "pick": [422, 423, 428], "buffer_s": [422, 423], "random_crop_len": 422, "prb": 422, "buffer_scratch_dir": [422, 423, 425, 430, 438], "25": 422, "dataflow": 422, "ceil_div": 422, "utd": [422, 425], "update_to_data": 422, "realiz": 422, "_must_": 422, "001": [422, 437], "outdat": 422, "trick": [422, 423], "despit": 422, "optimizer_actor": 422, "weight_decai": [422, 423], "optimizer_valu": 422, "total_collection_step": 422, "rewards_ev": 422, "collected_fram": 422, "numel": [422, 424, 425, 426, 432, 435, 438, 439], "current_fram": [422, 435], "sampled_tensordict": 422, "gn1": 422, "clip_grad_norm_": [422, 424, 435, 436, 437], "gn2": 422, "gn": [422, 437], "td_record": 422, "rn": 422, "2f": 422, "mention": [422, 425, 439, 442], "matplotlib": [422, 424, 425, 426, 435, 436, 437, 439, 442], "pyplot": [422, 424, 425, 426, 435, 436, 437, 439, 442], "plt": [422, 424, 425, 426, 435, 436, 437, 439, 442], "zip": [422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442], "legend": [422, 435], "xlabel": [422, 425, 436, 437], "ylabel": [422, 436], "tight_layout": 422, "takeawai": [422, 423, 426], "distpatch": 422, "jupyt": [422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442], "ipynb": [422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 441, 442], "sphinx": [422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442], "road": 423, "aspect": [423, 429], "highest": [423, 428], "prerequisit": [423, 425], "lookup": 423, "cart": 423, "pole": 423, "un": 423, "actuat": 423, "frictionless": 423, "duelingcnndqnet": 423, "egreedymodul": [423, 425, 426, 428, 432], "is_notebook": 423, "shell": 423, "get_ipython": 423, "__class__": 423, "zmqinteractiveshel": 423, "qtconsol": 423, "terminalinteractiveshel": 423, "ipython": [423, 436, 437], "nameerror": [423, 435], "umbrella": 423, "misplac": 423, "misus": 423, "orchestr": [423, 429, 431], "five": 423, "64x64": 423, "motion": [423, 437], "obs_norm_sd": 423, "mp_context": 423, "simpler": [423, 427], "get_norm_stat": 423, "test_env": 423, "mathbb": 423, "rightarrow": 423, "make_model": 423, "dummy_env": 423, "init_bia": 423, "exploration_modul": [423, 425, 426, 428, 432], "eps_greedy_v": 423, "eps_greedy_val_env": 423, "actor_explor": 423, "get_replay_buff": 423, "n_optim": [423, 429, 430], "parametriz": 423, "get_collector": 423, "bunch": 423, "ubiquit": [423, 427], "get_loss_modul": 423, "target_updat": [423, 435], "995": 423, "hopefulli": 423, "variat": 423, "2e": [423, 437], "wd": 423, "upd": 423, "harder": [423, 441], "5_000": 423, "500000": 423, "100000": 423, "005": [423, 435], "mandatori": [423, 424, 436, 437], "fairer": 423, "budget": 423, "dqn_exp_": 423, "uuid1": [423, 442], "cumbersom": 423, "buffer_hook": 423, "aliv": 423, "total_reward": 423, "print_csv_files_in_fold": 423, "folder_path": 423, "csv_file": 423, "output_str": 423, "dirpath": 423, "endswith": 423, "strip": 423, "qvaluenetwork": 423, "accuraci": 423, "fanci": [423, 430], "demonstr": [424, 426, 430, 435, 436, 437, 439, 442], "talk": 424, "six": 424, "sophist": [424, 436], "invent": 424, "theta_k": 424, "pi_": 424, "exceed": 424, "discourag": [424, 437], "indispens": 424, "analyz": 424, "lingua": 424, "franca": 424, "defaultdict": [424, 437], "3e": [424, 425, 435, 436], "max_grad_norm": [424, 435, 436], "sub_batch_s": 424, "num_epoch": [424, 436], "entropy_ep": [424, 436], "charact": [424, 426], "inverteddoublependulum": 424, "transmit": 424, "stai": 424, "confid": [424, 435, 436], "ran": 424, "f_": 424, "mu_": 424, "difficulti": [424, 442], "d_ob": 424, "d_action": 424, "policy_modul": [424, 435, 436], "briefli": [424, 435, 436], "refil": [424, 436], "easiest": [424, 429, 435, 436], "mathemat": [424, 435, 436], "tradeoff": [424, 436], "advantage_modul": 424, "lr_schedul": [424, 437], "cosineannealinglr": [424, 437], "eval_str": 424, "tensordict_data": [424, 436], "data_view": [424, 436], "subdata": [424, 435, 436], "cum_reward_str": 424, "stepcount_str": 424, "param_group": [424, 435], "lr_str": 424, "eval_rollout": 424, "nice": [424, 427, 430], "cap": [424, 439], "figsiz": [424, 437], "subplot": [424, 435, 437, 442], "titl": [424, 425, 426, 436, 437], "84x84": [425, 426], "accessori": 425, "stamp": 425, "assist": 425, "n_cell": 425, "customiz": 425, "wouldn": 425, "qval": 425, "stoch_polici": 425, "opportun": [425, 435], "uniniti": 425, "again": [425, 426, 427, 428, 430, 436, 438, 439, 442], "strongli": 425, "million": 425, "sake": [425, 438, 439], "20_000": [425, 437], "longest": 425, "npai": 425, "action_spread": 425, "strong": 426, "impress": 426, "arduino": 426, "raspberri": 426, "pi": [426, 435, 436, 437], "alon": 426, "examplifi": 426, "ship": 426, "stick": 426, "nearest": 426, "value_mlp": [426, 432], "init_rand_step": [426, 432], "total_count": [426, 432], "total_episod": [426, 432], "t0": [426, 432], "screen": [426, 435], "color": [426, 435], "unblock": 426, "policy_transform": 426, "fake_td": 426, "exported_polici": 426, "div": 426, "graph_modul": 426, "print_read": 426, "group0": 426, "group0_agent0_ob": 426, "collid": [426, 436], "group0_agent0": 426, "agent0_ob": 426, "comma": 426, "digress": 426, "exported_stochastic_polici": 426, "trace": 426, "batchsizetransform": 426, "hidden0": 426, "hidden1": 426, "recurrent_polici": 426, "fake_ob": 426, "fake_hidden0": 426, "fake_hidden1": 426, "fake_is_init": 426, "exported_recurrent_polici": 426, "platform": [426, 441], "aoti": 426, "_inductor": 426, "aoti_compile_and_packag": 426, "aoti_load_packag": 426, "pt2": 426, "pkg_path": 426, "package_path": 426, "compiled_modul": 426, "onnxruntim": 426, "showcas": [426, 437], "web": 426, "explain": [426, 438], "tensorrt": 426, "android": 426, "aleinterfac": 426, "rom": 426, "loadrom": 426, "reset_gam": 426, "screen_ob": 426, "getscreenrgb": 426, "tick_param": 426, "bottom": 426, "labelleft": 426, "labelbottom": 426, "imshow": [426, 442], "dynamo_export": 426, "onnx_policy_export": 426, "onnx_file_path": 426, "ort_sess": 426, "inferencesess": 426, "cpuexecutionprovid": 426, "onnxruntime_input": 426, "get_input": 426, "onnx_polici": 426, "lightweight": [426, 431], "onnxruntime_output": 426, "topic": [427, 428, 429], "straight": 427, "backtrack": 427, "reset_with_act": 427, "stepped_data": 427, "spatial": 427, "useless": 427, "policyless": 427, "examin": [427, 435], "tackl": 428, "delv": 428, "extractor": 428, "additivegaussianmodul": [428, 435], "exploration_polici": [428, 435], "greedili": 428, "2d": [428, 435, 436], "innov": [428, 429], "rollout_explor": 428, "sole": 429, "supervis": [429, 430, 439, 442], "n_collect": 429, "get_next_batch": 429, "concis": 429, "ddpg_loss": 429, "total_loss": 429, "prove": 429, "reliev": 429, "concern": 429, "accustom": 430, "surprisingli": 430, "fundament": 430, "art": [430, 435, 436], "countless": 430, "yourself": [430, 435, 436], "everywher": 431, "log_scalar": 431, "my_scalar": 431, "saw": [431, 437, 439], "excess": 431, "lesson": 432, "voluntarili": 432, "torchrl_logg": 432, "training_loop": 432, "video_record": 432, "arbitrarili": 432, "t1": 432, "conclud": [432, 438], "tutorials_python": 433, "tutorials_jupyt": 433, "env1_obs_kei": 434, "observation_stand": 434, "env2_obs_kei": 434, "observation_walk": 434, "tdreset1": 434, "tdreset2": 434, "lazy_stack": 434, "policy_common": 434, "policy_stand": 434, "policy_walk": 434, "But": 434, "env1_mak": 434, "env2_mak": 434, "_single_task": 434, "td_rollout": 434, "matteo": [435, 436], "bettini": [435, 436], "benchmarl": [435, 436], "simple_tag": 435, "maddpg": [435, 436], "multiagentparticleenviron": 435, "mpe": 435, "centralis": [435, 436], "tie": [435, 436], "iddpg": [435, 436], "richard": 435, "andrew": 435, "mit": 435, "press": 435, "2018": 435, "mathbf": [435, 436], "decentralis": [435, 436], "literatur": [435, 436], "overcom": [435, 436], "stationari": [435, 436], "establish": 435, "gui": [435, 436], "is_sphinx": 435, "__sphinx_build__": 435, "n_iter": [435, 436, 437], "evad": 435, "iteration_when_stop_training_evad": 435, "memory_s": 435, "n_optimiser_step": 435, "train_batch_s": 435, "polyak_tau": 435, "chaser": 435, "red": 435, "circl": [435, 436], "green": 435, "touch": [435, 437], "penal": [435, 436], "obstacl": 435, "drag": [435, 436], "elast": [435, 436], "collis": [435, 436], "imped": 435, "n_chaser": 435, "n_evad": 435, "n_obstacl": 435, "use_vma": 435, "simple_tag_v3": 435, "num_good": 435, "num_adversari": 435, "num_obstacl": 435, "max_cycl": 435, "num_vmas_env": [435, 436], "num_good_ag": 435, "num_landmark": 435, "four": [435, 436, 437], "n_agents_in_that_group": 435, "stress": [435, 436], "paramount": [435, 436], "n_rollout_step": [435, 436], "evolut": [435, 436], "group_nam": 435, "n_agents_in_group": 435, "minor": 435, "agents_exploration_polici": 435, "utilis": [435, 436], "n_obs_per_ag": [435, 436], "n_actions_per_ag": [435, 436], "share_parameters_polici": [435, 436], "policy_net": [435, 436], "_agent": 435, "grant": [435, 436], "converg": [435, 436], "share_parameters_crit": [435, 436], "obs_act": 435, "cat_modul": 435, "critic_modul": 435, "fantast": [435, 436], "reset_td": 435, "interfer": 435, "subject": [435, 437], "flatten_kei": 435, "process_batch": 435, "group_shap": 435, "get_item_shap": [435, 436], "nested_done_kei": 435, "nested_terminated_kei": 435, "desc": [435, 436], "episode_reward_mean_": 435, "episode_reward_mean_map": 435, "train_group_map": 435, "group_batch": 435, "_group": 435, "loss_nam": 435, "episode_reward_mean": [435, 436], "fig": [435, 439], "set_ylabel": 435, "axvlin": 435, "orang": 435, "set_xlabel": 435, "video_logg": 435, "vmas_log": 435, "env_with_rend": 435, "vmas_rend": 435, "print_log_dir": 435, "profici": [435, 436], "lidar": 436, "sensor": 436, "mappo": 436, "ippo": 436, "analys": 436, "visualis": 436, "vmas_devic": 436, "6_000": 436, "minibatch_s": 436, "generalis": 436, "simd": 436, "warp": 436, "todai": 436, "surround": 436, "dot": [436, 437], "scenario_nam": 436, "critic_net": 436, "minibatch": 436, "episode_reward_mean_list": 436, "critic_network_param": 436, "target_critic_network_param": 436, "xvfb": 436, "pyvirtualdisplai": 436, "1400": 436, "900": 436, "pil": 436, "rendering_callback": 436, "fromarrai": 436, "gif": 436, "save_al": 436, "append_imag": 436, "freeli": 437, "broader": 437, "wider": 437, "acquaint": 437, "avenu": 437, "_apply_to_composit": 437, "default_x": 437, "default_i": 437, "upward": 437, "angular": 437, "sin": 437, "rad": 437, "angl": 437, "deleg": 437, "new_th": 437, "new_thdot": 437, "g_forc": 437, "angle_norm": 437, "albeit": 437, "high_th": 437, "high_thdot": 437, "low_th": 437, "low_thdot": 437, "trivial": 437, "irrelev": 437, "_make_spec": 437, "td_param": 437, "render_fp": 437, "random_": 437, "_make_step": 437, "staticmethod": 437, "skeleton": 437, "unitari": 437, "sine": 437, "cosin": 437, "sintransform": 437, "costransform": 437, "t_sin": 437, "t_co": 437, "cat_transform": 437, "simple_rollout": 437, "unexplor": 437, "init_td": 437, "traj_return": 437, "last_reward": 437, "is_ipython": 437, "inlin": 437, "get_backend": 437, "ion": 437, "gcf": 437, "clear_output": 437, "r3mtransform": 438, "embodi": 438, "env_transform": [438, 442], "wiser": 438, "batteri": 439, "gc": 439, "buffer_list": 439, "lowest": 439, "medium": 439, "buffer_lazytensor": 439, "tempdir": 439, "buffer_lazymemmap": 439, "fullest": 439, "mydata": 439, "buffer_lazi": 439, "question": [439, 441], "_i": 439, "artifici": 439, "hamper": 439, "she": 439, "pars": 439, "proport": 439, "reappear": 439, "unfold": 439, "problemat": 439, "4th": 439, "prioritizedslicesampl": 439, "tensordictmaxvaluewrit": 439, "demo": 441, "icml": 441, "vmoen": 441, "fb": 441, "invest": 441, "media": 441, "predominantli": 441, "data2": 441, "sub_key1": 441, "scturctur": 441, "data_stack": 441, "data_sampl": 441, "_sampler": 441, "_sum_tre": 441, "modulenotfounderror": 441, "noopresetenv": [441, 442], "backbone_modul": 441, "params_expand": 441, "exec_sequ": 441, "tensordict_exp": 441, "base_modul": 441, "tensordicts_prealloc": 441, "tensordicts_stack": 441, "tensordict_rollout": [441, 442], "automatical": 441, "60": 441, "particularili": 441, "concatmodul": 441, "loss_td": 441, "contributor": 441, "curiou": 441, "nascent": 441, "unsupervis": 442, "unifi": 442, "_build_env": 442, "deserv": 442, "__episode__": 442, "__trajectory__": 442, "void": 442, "reproduct": 442, "tensordict_tprim": 442, "wrapper1": 442, "wrapper2": 442, "obviou": 442, "truth": 442, "env_transformed_bi": 442, "stanc": 442, "transformeddistribut": 442, "base_dist": 442, "concat": 442, "mofidi": 442, "transformedenviron": 442, "moderet": 442, "computation": 442, "incom": 442, "amongst": 442, "has_cuda": 442, "convention": 442, "markovian": 442, "bar_": 442, "get_someth": 442, "aargh": 442, "is_clos": 442, "foo_list": 442, "121": 442, "evolv": 442, "steadi": 442, "approx": 442, "absor": 442, "_extra_st": 442}, "objects": {"torchrl": [[12, 0, 1, "", "auto_unwrap_transformed_env"], [245, 0, 1, "", "implement_for"], [389, 0, 1, "", "set_auto_unwrap_transformed_env"]], "torchrl.collectors": [[13, 0, 1, "", "DataCollectorBase"], [14, 0, 1, "", "MultiSyncDataCollector"], [15, 0, 1, "", "MultiaSyncDataCollector"], [16, 0, 1, "", "RayWeightUpdater"], [17, 0, 1, "", "SyncDataCollector"], [18, 0, 1, "", "VanillaWeightUpdater"], [19, 0, 1, "", "WeightUpdaterBase"], [20, 0, 1, "", "aSyncDataCollector"]], "torchrl.collectors.DataCollectorBase": [[13, 1, 1, "", "async_shutdown"], [13, 1, 1, "", "pause"], [13, 1, 1, "", "start"], [13, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.MultiSyncDataCollector": [[14, 1, 1, "", "async_shutdown"], [14, 1, 1, "", "load_state_dict"], [14, 1, 1, "", "pause"], [14, 1, 1, "", "reset"], [14, 1, 1, "", "set_seed"], [14, 1, 1, "", "shutdown"], [14, 1, 1, "", "start"], [14, 1, 1, "", "state_dict"], [14, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.MultiaSyncDataCollector": [[15, 1, 1, "", "async_shutdown"], [15, 1, 1, "", "load_state_dict"], [15, 1, 1, "", "pause"], [15, 1, 1, "", "reset"], [15, 1, 1, "", "set_seed"], [15, 1, 1, "", "shutdown"], [15, 1, 1, "", "start"], [15, 1, 1, "", "state_dict"], [15, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.RayWeightUpdater": [[16, 1, 1, "", "_get_server_weights"], [16, 1, 1, "", "_maybe_map_weights"], [16, 1, 1, "", "_skip_update"], [16, 1, 1, "", "_sync_weights_with_worker"], [16, 1, 1, "id0", "all_worker_ids"], [16, 2, 1, "", "collector"], [16, 1, 1, "", "push_weights"], [16, 1, 1, "", "register_collector"]], "torchrl.collectors.SyncDataCollector": [[17, 1, 1, "", "async_shutdown"], [17, 1, 1, "", "iterator"], [17, 1, 1, "", "load_state_dict"], [17, 1, 1, "", "pause"], [17, 1, 1, "", "reset"], [17, 1, 1, "", "rollout"], [17, 1, 1, "", "set_seed"], [17, 1, 1, "", "shutdown"], [17, 1, 1, "", "start"], [17, 1, 1, "", "state_dict"], [17, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.VanillaWeightUpdater": [[18, 1, 1, "", "all_worker_ids"], [18, 2, 1, "", "collector"], [18, 1, 1, "", "push_weights"], [18, 1, 1, "", "register_collector"]], "torchrl.collectors.WeightUpdaterBase": [[19, 1, 1, "", "all_worker_ids"], [19, 2, 1, "", "collector"], [19, 1, 1, "id0", "push_weights"], [19, 1, 1, "id1", "register_collector"]], "torchrl.collectors.aSyncDataCollector": [[20, 1, 1, "", "async_shutdown"], [20, 1, 1, "", "load_state_dict"], [20, 1, 1, "", "pause"], [20, 1, 1, "", "reset"], [20, 1, 1, "", "set_seed"], [20, 1, 1, "", "shutdown"], [20, 1, 1, "", "start"], [20, 1, 1, "", "state_dict"], [20, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed": [[21, 0, 1, "", "DistributedDataCollector"], [22, 0, 1, "", "DistributedSyncDataCollector"], [23, 0, 1, "", "RPCDataCollector"], [24, 0, 1, "", "RayCollector"], [25, 0, 1, "", "submitit_delayed_launcher"]], "torchrl.collectors.distributed.DistributedDataCollector": [[21, 1, 1, "", "async_shutdown"], [21, 1, 1, "", "pause"], [21, 1, 1, "", "start"], [21, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.DistributedSyncDataCollector": [[22, 1, 1, "", "async_shutdown"], [22, 1, 1, "", "pause"], [22, 1, 1, "", "start"], [22, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RPCDataCollector": [[23, 1, 1, "", "async_shutdown"], [23, 1, 1, "", "pause"], [23, 1, 1, "", "start"], [23, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RayCollector": [[24, 1, 1, "", "add_collectors"], [24, 1, 1, "", "async_shutdown"], [24, 1, 1, "", "load_state_dict"], [24, 1, 1, "", "local_policy"], [24, 1, 1, "", "pause"], [24, 2, 1, "", "remote_collectors"], [24, 1, 1, "", "set_seed"], [24, 1, 1, "", "shutdown"], [24, 1, 1, "", "start"], [24, 1, 1, "", "state_dict"], [24, 1, 1, "", "stop_remote_collectors"], [24, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.utils": [[26, 3, 1, "", "split_trajectories"]], "torchrl.data": [[27, 0, 1, "", "AdaptiveKLController"], [28, 0, 1, "", "Binary"], [29, 0, 1, "", "BinaryDiscreteTensorSpec"], [30, 0, 1, "", "BinaryToDecimal"], [31, 0, 1, "", "Bounded"], [32, 0, 1, "", "BoundedTensorSpec"], [33, 0, 1, "", "Categorical"], [34, 0, 1, "", "Composite"], [35, 0, 1, "", "CompositeSpec"], [36, 0, 1, "", "ConstantKLController"], [37, 0, 1, "", "DensifyReward"], [38, 0, 1, "", "DiscreteTensorSpec"], [39, 0, 1, "", "Flat2TED"], [40, 0, 1, "", "H5Combine"], [41, 0, 1, "", "H5Split"], [42, 0, 1, "", "HashToInt"], [43, 0, 1, "", "LazyStackedCompositeSpec"], [44, 0, 1, "", "LazyStackedTensorSpec"], [45, 0, 1, "", "MCTSForest"], [46, 0, 1, "", "MultiCategorical"], [47, 0, 1, "", "MultiDiscreteTensorSpec"], [48, 0, 1, "", "MultiOneHot"], [49, 0, 1, "", "MultiOneHotDiscreteTensorSpec"], [50, 0, 1, "", "MultiStep"], [51, 0, 1, "", "Nested2TED"], [52, 0, 1, "", "NonTensor"], [53, 0, 1, "", "NonTensorSpec"], [54, 0, 1, "", "OneHot"], [55, 0, 1, "", "OneHotDiscreteTensorSpec"], [56, 0, 1, "", "PairwiseDataset"], [57, 0, 1, "", "PrioritizedReplayBuffer"], [58, 0, 1, "", "PromptData"], [59, 0, 1, "", "PromptTensorDictTokenizer"], [60, 0, 1, "", "QueryModule"], [61, 0, 1, "", "RandomProjectionHash"], [62, 0, 1, "", "RayReplayBuffer"], [63, 0, 1, "", "RemoteTensorDictReplayBuffer"], [64, 0, 1, "", "ReplayBuffer"], [65, 0, 1, "", "RewardData"], [66, 0, 1, "", "RolloutFromModel"], [67, 0, 1, "", "SipHash"], [68, 0, 1, "", "Stacked"], [69, 0, 1, "", "StackedComposite"], [70, 0, 1, "", "TED2Flat"], [71, 0, 1, "", "TED2Nested"], [72, 0, 1, "", "TensorDictMap"], [73, 0, 1, "", "TensorDictPrioritizedReplayBuffer"], [74, 0, 1, "", "TensorDictReplayBuffer"], [75, 0, 1, "", "TensorDictTokenizer"], [76, 0, 1, "", "TensorMap"], [77, 0, 1, "", "TensorSpec"], [78, 0, 1, "", "TokenizedDatasetLoader"], [79, 0, 1, "", "Tree"], [80, 0, 1, "", "Unbounded"], [81, 0, 1, "", "UnboundedContinuous"], [82, 0, 1, "", "UnboundedContinuousTensorSpec"], [83, 0, 1, "", "UnboundedDiscrete"], [84, 0, 1, "", "UnboundedDiscreteTensorSpec"], [85, 0, 1, "", "check_no_exclusive_keys"], [86, 0, 1, "", "consolidate_spec"], [87, 0, 1, "", "contains_lazy_spec"], [88, 0, 1, "", "create_infinite_iterator"], [89, 0, 1, "", "get_dataloader"]], "torchrl.data.AdaptiveKLController": [[27, 1, 1, "", "update"]], "torchrl.data.Binary": [[28, 1, 1, "", "assert_is_in"], [28, 1, 1, "", "cardinality"], [28, 1, 1, "", "clear_device_"], [28, 1, 1, "", "clone"], [28, 1, 1, "", "contains"], [28, 1, 1, "", "cpu"], [28, 1, 1, "", "cuda"], [28, 4, 1, "", "device"], [28, 1, 1, "", "encode"], [28, 1, 1, "", "enumerate"], [28, 1, 1, "", "erase_memoize_cache"], [28, 1, 1, "", "expand"], [28, 1, 1, "", "flatten"], [28, 1, 1, "", "implements_for_spec"], [28, 1, 1, "", "index"], [28, 1, 1, "", "is_in"], [28, 1, 1, "", "make_neg_dim"], [28, 1, 1, "", "memoize_encode"], [28, 2, 1, "", "ndim"], [28, 1, 1, "", "ndimension"], [28, 1, 1, "", "one"], [28, 1, 1, "", "ones"], [28, 1, 1, "", "project"], [28, 1, 1, "", "rand"], [28, 1, 1, "", "reshape"], [28, 1, 1, "", "sample"], [28, 1, 1, "", "set_provisional_n"], [28, 1, 1, "", "squeeze"], [28, 1, 1, "", "to"], [28, 1, 1, "", "to_categorical"], [28, 1, 1, "", "to_categorical_spec"], [28, 1, 1, "", "to_numpy"], [28, 1, 1, "", "to_one_hot"], [28, 1, 1, "", "to_one_hot_spec"], [28, 1, 1, "", "type_check"], [28, 1, 1, "", "unflatten"], [28, 1, 1, "", "unsqueeze"], [28, 1, 1, "", "update_mask"], [28, 1, 1, "", "view"], [28, 1, 1, "", "zero"], [28, 1, 1, "", "zeros"]], "torchrl.data.BinaryDiscreteTensorSpec": [[29, 1, 1, "", "assert_is_in"], [29, 1, 1, "", "cardinality"], [29, 1, 1, "", "clear_device_"], [29, 1, 1, "", "clone"], [29, 1, 1, "", "contains"], [29, 1, 1, "", "cpu"], [29, 1, 1, "", "cuda"], [29, 4, 1, "", "device"], [29, 1, 1, "", "encode"], [29, 1, 1, "", "enumerate"], [29, 1, 1, "", "erase_memoize_cache"], [29, 1, 1, "", "expand"], [29, 1, 1, "", "flatten"], [29, 1, 1, "", "implements_for_spec"], [29, 1, 1, "", "index"], [29, 1, 1, "", "is_in"], [29, 1, 1, "", "make_neg_dim"], [29, 1, 1, "", "memoize_encode"], [29, 2, 1, "", "ndim"], [29, 1, 1, "", "ndimension"], [29, 1, 1, "", "one"], [29, 1, 1, "", "ones"], [29, 1, 1, "", "project"], [29, 1, 1, "", "rand"], [29, 1, 1, "", "reshape"], [29, 1, 1, "", "sample"], [29, 1, 1, "", "set_provisional_n"], [29, 1, 1, "", "squeeze"], [29, 1, 1, "", "to"], [29, 1, 1, "", "to_categorical"], [29, 1, 1, "", "to_categorical_spec"], [29, 1, 1, "", "to_numpy"], [29, 1, 1, "", "to_one_hot"], [29, 1, 1, "", "to_one_hot_spec"], [29, 1, 1, "", "type_check"], [29, 1, 1, "", "unflatten"], [29, 1, 1, "", "unsqueeze"], [29, 1, 1, "", "update_mask"], [29, 1, 1, "", "view"], [29, 1, 1, "", "zero"], [29, 1, 1, "", "zeros"]], "torchrl.data.BinaryToDecimal": [[30, 1, 1, "", "add_module"], [30, 1, 1, "", "apply"], [30, 1, 1, "", "bfloat16"], [30, 1, 1, "", "buffers"], [30, 1, 1, "", "children"], [30, 1, 1, "", "compile"], [30, 1, 1, "", "cpu"], [30, 1, 1, "", "cuda"], [30, 1, 1, "", "double"], [30, 1, 1, "", "eval"], [30, 1, 1, "", "extra_repr"], [30, 1, 1, "", "float"], [30, 1, 1, "", "forward"], [30, 1, 1, "", "get_buffer"], [30, 1, 1, "", "get_extra_state"], [30, 1, 1, "", "get_parameter"], [30, 1, 1, "", "get_submodule"], [30, 1, 1, "", "half"], [30, 1, 1, "", "ipu"], [30, 1, 1, "", "load_state_dict"], [30, 1, 1, "", "modules"], [30, 1, 1, "", "mtia"], [30, 1, 1, "", "named_buffers"], [30, 1, 1, "", "named_children"], [30, 1, 1, "", "named_modules"], [30, 1, 1, "", "named_parameters"], [30, 1, 1, "", "parameters"], [30, 1, 1, "", "register_backward_hook"], [30, 1, 1, "", "register_buffer"], [30, 1, 1, "", "register_forward_hook"], [30, 1, 1, "", "register_forward_pre_hook"], [30, 1, 1, "", "register_full_backward_hook"], [30, 1, 1, "", "register_full_backward_pre_hook"], [30, 1, 1, "", "register_load_state_dict_post_hook"], [30, 1, 1, "", "register_load_state_dict_pre_hook"], [30, 1, 1, "", "register_module"], [30, 1, 1, "", "register_parameter"], [30, 1, 1, "", "register_state_dict_post_hook"], [30, 1, 1, "", "register_state_dict_pre_hook"], [30, 1, 1, "", "requires_grad_"], [30, 1, 1, "", "set_extra_state"], [30, 1, 1, "", "set_submodule"], [30, 1, 1, "", "share_memory"], [30, 1, 1, "", "state_dict"], [30, 1, 1, "", "to"], [30, 1, 1, "", "to_empty"], [30, 1, 1, "", "train"], [30, 1, 1, "", "type"], [30, 1, 1, "", "xpu"], [30, 1, 1, "", "zero_grad"]], "torchrl.data.Bounded": [[31, 1, 1, "", "assert_is_in"], [31, 1, 1, "", "cardinality"], [31, 1, 1, "", "clear_device_"], [31, 1, 1, "", "clone"], [31, 1, 1, "", "contains"], [31, 1, 1, "", "cpu"], [31, 1, 1, "", "cuda"], [31, 2, 1, "", "device"], [31, 1, 1, "", "encode"], [31, 1, 1, "", "enumerate"], [31, 1, 1, "", "erase_memoize_cache"], [31, 1, 1, "", "expand"], [31, 1, 1, "", "flatten"], [31, 1, 1, "", "implements_for_spec"], [31, 1, 1, "", "index"], [31, 1, 1, "", "is_in"], [31, 1, 1, "", "make_neg_dim"], [31, 1, 1, "", "memoize_encode"], [31, 2, 1, "", "ndim"], [31, 1, 1, "", "ndimension"], [31, 1, 1, "", "one"], [31, 1, 1, "", "ones"], [31, 1, 1, "", "project"], [31, 1, 1, "", "rand"], [31, 1, 1, "", "reshape"], [31, 1, 1, "", "sample"], [31, 1, 1, "", "squeeze"], [31, 1, 1, "", "to"], [31, 1, 1, "", "to_numpy"], [31, 1, 1, "", "type_check"], [31, 1, 1, "", "unflatten"], [31, 1, 1, "", "unsqueeze"], [31, 1, 1, "", "view"], [31, 1, 1, "", "zero"], [31, 1, 1, "", "zeros"]], "torchrl.data.BoundedTensorSpec": [[32, 1, 1, "", "assert_is_in"], [32, 1, 1, "", "cardinality"], [32, 1, 1, "", "clear_device_"], [32, 1, 1, "", "clone"], [32, 1, 1, "", "contains"], [32, 1, 1, "", "cpu"], [32, 1, 1, "", "cuda"], [32, 2, 1, "", "device"], [32, 1, 1, "", "encode"], [32, 1, 1, "", "enumerate"], [32, 1, 1, "", "erase_memoize_cache"], [32, 1, 1, "", "expand"], [32, 1, 1, "", "flatten"], [32, 1, 1, "", "implements_for_spec"], [32, 1, 1, "", "index"], [32, 1, 1, "", "is_in"], [32, 1, 1, "", "make_neg_dim"], [32, 1, 1, "", "memoize_encode"], [32, 2, 1, "", "ndim"], [32, 1, 1, "", "ndimension"], [32, 1, 1, "", "one"], [32, 1, 1, "", "ones"], [32, 1, 1, "", "project"], [32, 1, 1, "", "rand"], [32, 1, 1, "", "reshape"], [32, 1, 1, "", "sample"], [32, 1, 1, "", "squeeze"], [32, 1, 1, "", "to"], [32, 1, 1, "", "to_numpy"], [32, 1, 1, "", "type_check"], [32, 1, 1, "", "unflatten"], [32, 1, 1, "", "unsqueeze"], [32, 1, 1, "", "view"], [32, 1, 1, "", "zero"], [32, 1, 1, "", "zeros"]], "torchrl.data.Categorical": [[33, 1, 1, "", "assert_is_in"], [33, 1, 1, "", "cardinality"], [33, 1, 1, "", "clear_device_"], [33, 1, 1, "", "clone"], [33, 1, 1, "", "contains"], [33, 1, 1, "", "cpu"], [33, 1, 1, "", "cuda"], [33, 4, 1, "", "device"], [33, 1, 1, "", "encode"], [33, 1, 1, "", "enumerate"], [33, 1, 1, "", "erase_memoize_cache"], [33, 1, 1, "", "expand"], [33, 1, 1, "", "flatten"], [33, 1, 1, "", "implements_for_spec"], [33, 1, 1, "", "index"], [33, 1, 1, "", "is_in"], [33, 1, 1, "", "make_neg_dim"], [33, 1, 1, "", "memoize_encode"], [33, 2, 1, "", "ndim"], [33, 1, 1, "", "ndimension"], [33, 1, 1, "", "one"], [33, 1, 1, "", "ones"], [33, 1, 1, "", "project"], [33, 1, 1, "", "rand"], [33, 1, 1, "", "reshape"], [33, 1, 1, "", "sample"], [33, 1, 1, "", "set_provisional_n"], [33, 1, 1, "", "squeeze"], [33, 1, 1, "", "to"], [33, 1, 1, "", "to_categorical"], [33, 1, 1, "", "to_categorical_spec"], [33, 1, 1, "", "to_numpy"], [33, 1, 1, "", "to_one_hot"], [33, 1, 1, "", "to_one_hot_spec"], [33, 1, 1, "", "type_check"], [33, 1, 1, "", "unflatten"], [33, 1, 1, "", "unsqueeze"], [33, 1, 1, "", "update_mask"], [33, 1, 1, "", "view"], [33, 1, 1, "", "zero"], [33, 1, 1, "", "zeros"]], "torchrl.data.Composite": [[34, 1, 1, "", "assert_is_in"], [34, 1, 1, "", "cardinality"], [34, 1, 1, "", "clear_device_"], [34, 1, 1, "", "clone"], [34, 1, 1, "", "contains"], [34, 1, 1, "", "cpu"], [34, 1, 1, "", "cuda"], [34, 2, 1, "", "device"], [34, 1, 1, "", "empty"], [34, 1, 1, "", "encode"], [34, 1, 1, "", "enumerate"], [34, 1, 1, "", "erase_memoize_cache"], [34, 1, 1, "", "expand"], [34, 1, 1, "", "flatten"], [34, 1, 1, "", "get"], [34, 1, 1, "", "implements_for_spec"], [34, 1, 1, "", "index"], [34, 1, 1, "", "is_empty"], [34, 1, 1, "", "is_in"], [34, 1, 1, "", "items"], [34, 1, 1, "", "keys"], [34, 1, 1, "", "lock_"], [34, 1, 1, "", "make_neg_dim"], [34, 1, 1, "", "memoize_encode"], [34, 2, 1, "", "ndim"], [34, 1, 1, "", "ndimension"], [34, 1, 1, "", "one"], [34, 1, 1, "", "ones"], [34, 1, 1, "", "pop"], [34, 1, 1, "", "project"], [34, 1, 1, "", "rand"], [34, 1, 1, "", "reshape"], [34, 1, 1, "", "sample"], [34, 1, 1, "", "separates"], [34, 1, 1, "", "set"], [34, 1, 1, "", "squeeze"], [34, 1, 1, "", "to"], [34, 1, 1, "", "to_numpy"], [34, 1, 1, "", "type_check"], [34, 1, 1, "", "unflatten"], [34, 1, 1, "", "unlock_"], [34, 1, 1, "", "unsqueeze"], [34, 1, 1, "", "values"], [34, 1, 1, "", "view"], [34, 1, 1, "", "zero"], [34, 1, 1, "", "zeros"]], "torchrl.data.CompositeSpec": [[35, 1, 1, "", "assert_is_in"], [35, 1, 1, "", "cardinality"], [35, 1, 1, "", "clear_device_"], [35, 1, 1, "", "clone"], [35, 1, 1, "", "contains"], [35, 1, 1, "", "cpu"], [35, 1, 1, "", "cuda"], [35, 2, 1, "", "device"], [35, 1, 1, "", "empty"], [35, 1, 1, "", "encode"], [35, 1, 1, "", "enumerate"], [35, 1, 1, "", "erase_memoize_cache"], [35, 1, 1, "", "expand"], [35, 1, 1, "", "flatten"], [35, 1, 1, "", "get"], [35, 1, 1, "", "implements_for_spec"], [35, 1, 1, "", "index"], [35, 1, 1, "", "is_empty"], [35, 1, 1, "", "is_in"], [35, 1, 1, "", "items"], [35, 1, 1, "", "keys"], [35, 1, 1, "", "lock_"], [35, 1, 1, "", "make_neg_dim"], [35, 1, 1, "", "memoize_encode"], [35, 2, 1, "", "ndim"], [35, 1, 1, "", "ndimension"], [35, 1, 1, "", "one"], [35, 1, 1, "", "ones"], [35, 1, 1, "", "pop"], [35, 1, 1, "", "project"], [35, 1, 1, "", "rand"], [35, 1, 1, "", "reshape"], [35, 1, 1, "", "sample"], [35, 1, 1, "", "separates"], [35, 1, 1, "", "set"], [35, 1, 1, "", "squeeze"], [35, 1, 1, "", "to"], [35, 1, 1, "", "to_numpy"], [35, 1, 1, "", "type_check"], [35, 1, 1, "", "unflatten"], [35, 1, 1, "", "unlock_"], [35, 1, 1, "", "unsqueeze"], [35, 1, 1, "", "values"], [35, 1, 1, "", "view"], [35, 1, 1, "", "zero"], [35, 1, 1, "", "zeros"]], "torchrl.data.DensifyReward": [[37, 1, 1, "", "add_module"], [37, 1, 1, "", "apply"], [37, 1, 1, "", "bfloat16"], [37, 1, 1, "", "buffers"], [37, 1, 1, "", "children"], [37, 1, 1, "", "compile"], [37, 1, 1, "", "cpu"], [37, 1, 1, "", "cuda"], [37, 1, 1, "", "double"], [37, 1, 1, "", "eval"], [37, 1, 1, "", "extra_repr"], [37, 1, 1, "", "float"], [37, 1, 1, "", "forward"], [37, 1, 1, "", "get_buffer"], [37, 1, 1, "", "get_extra_state"], [37, 1, 1, "", "get_parameter"], [37, 1, 1, "", "get_submodule"], [37, 1, 1, "", "half"], [37, 1, 1, "", "ipu"], [37, 1, 1, "", "is_tdmodule_compatible"], [37, 1, 1, "", "load_state_dict"], [37, 1, 1, "", "modules"], [37, 1, 1, "", "mtia"], [37, 1, 1, "", "named_buffers"], [37, 1, 1, "", "named_children"], [37, 1, 1, "", "named_modules"], [37, 1, 1, "", "named_parameters"], [37, 1, 1, "", "parameters"], [37, 1, 1, "", "register_backward_hook"], [37, 1, 1, "", "register_buffer"], [37, 1, 1, "", "register_forward_hook"], [37, 1, 1, "", "register_forward_pre_hook"], [37, 1, 1, "", "register_full_backward_hook"], [37, 1, 1, "", "register_full_backward_pre_hook"], [37, 1, 1, "", "register_load_state_dict_post_hook"], [37, 1, 1, "", "register_load_state_dict_pre_hook"], [37, 1, 1, "", "register_module"], [37, 1, 1, "", "register_parameter"], [37, 1, 1, "", "register_state_dict_post_hook"], [37, 1, 1, "", "register_state_dict_pre_hook"], [37, 1, 1, "", "requires_grad_"], [37, 1, 1, "", "reset_out_keys"], [37, 1, 1, "", "reset_parameters_recursive"], [37, 1, 1, "", "select_out_keys"], [37, 1, 1, "", "set_extra_state"], [37, 1, 1, "", "set_submodule"], [37, 1, 1, "", "share_memory"], [37, 1, 1, "", "state_dict"], [37, 1, 1, "", "to"], [37, 1, 1, "", "to_empty"], [37, 1, 1, "", "train"], [37, 1, 1, "", "type"], [37, 1, 1, "", "xpu"], [37, 1, 1, "", "zero_grad"]], "torchrl.data.DiscreteTensorSpec": [[38, 1, 1, "", "assert_is_in"], [38, 1, 1, "", "cardinality"], [38, 1, 1, "", "clear_device_"], [38, 1, 1, "", "clone"], [38, 1, 1, "", "contains"], [38, 1, 1, "", "cpu"], [38, 1, 1, "", "cuda"], [38, 4, 1, "", "device"], [38, 1, 1, "", "encode"], [38, 1, 1, "", "enumerate"], [38, 1, 1, "", "erase_memoize_cache"], [38, 1, 1, "", "expand"], [38, 1, 1, "", "flatten"], [38, 1, 1, "", "implements_for_spec"], [38, 1, 1, "", "index"], [38, 1, 1, "", "is_in"], [38, 1, 1, "", "make_neg_dim"], [38, 1, 1, "", "memoize_encode"], [38, 2, 1, "", "ndim"], [38, 1, 1, "", "ndimension"], [38, 1, 1, "", "one"], [38, 1, 1, "", "ones"], [38, 1, 1, "", "project"], [38, 1, 1, "", "rand"], [38, 1, 1, "", "reshape"], [38, 1, 1, "", "sample"], [38, 1, 1, "", "set_provisional_n"], [38, 1, 1, "", "squeeze"], [38, 1, 1, "", "to"], [38, 1, 1, "", "to_categorical"], [38, 1, 1, "", "to_categorical_spec"], [38, 1, 1, "", "to_numpy"], [38, 1, 1, "", "to_one_hot"], [38, 1, 1, "", "to_one_hot_spec"], [38, 1, 1, "", "type_check"], [38, 1, 1, "", "unflatten"], [38, 1, 1, "", "unsqueeze"], [38, 1, 1, "", "update_mask"], [38, 1, 1, "", "view"], [38, 1, 1, "", "zero"], [38, 1, 1, "", "zeros"]], "torchrl.data.HashToInt": [[42, 1, 1, "", "add_module"], [42, 1, 1, "", "apply"], [42, 1, 1, "", "bfloat16"], [42, 1, 1, "", "buffers"], [42, 1, 1, "", "children"], [42, 1, 1, "", "compile"], [42, 1, 1, "", "cpu"], [42, 1, 1, "", "cuda"], [42, 1, 1, "", "double"], [42, 1, 1, "", "eval"], [42, 1, 1, "", "extra_repr"], [42, 1, 1, "", "float"], [42, 1, 1, "", "forward"], [42, 1, 1, "", "get_buffer"], [42, 1, 1, "", "get_extra_state"], [42, 1, 1, "", "get_parameter"], [42, 1, 1, "", "get_submodule"], [42, 1, 1, "", "half"], [42, 1, 1, "", "ipu"], [42, 1, 1, "", "load_state_dict"], [42, 1, 1, "", "modules"], [42, 1, 1, "", "mtia"], [42, 1, 1, "", "named_buffers"], [42, 1, 1, "", "named_children"], [42, 1, 1, "", "named_modules"], [42, 1, 1, "", "named_parameters"], [42, 1, 1, "", "parameters"], [42, 1, 1, "", "register_backward_hook"], [42, 1, 1, "", "register_buffer"], [42, 1, 1, "", "register_forward_hook"], [42, 1, 1, "", "register_forward_pre_hook"], [42, 1, 1, "", "register_full_backward_hook"], [42, 1, 1, "", "register_full_backward_pre_hook"], [42, 1, 1, "", "register_load_state_dict_post_hook"], [42, 1, 1, "", "register_load_state_dict_pre_hook"], [42, 1, 1, "", "register_module"], [42, 1, 1, "", "register_parameter"], [42, 1, 1, "", "register_state_dict_post_hook"], [42, 1, 1, "", "register_state_dict_pre_hook"], [42, 1, 1, "", "requires_grad_"], [42, 1, 1, "", "set_extra_state"], [42, 1, 1, "", "set_submodule"], [42, 1, 1, "", "share_memory"], [42, 1, 1, "", "state_dict"], [42, 1, 1, "", "to"], [42, 1, 1, "", "to_empty"], [42, 1, 1, "", "train"], [42, 1, 1, "", "type"], [42, 1, 1, "", "xpu"], [42, 1, 1, "", "zero_grad"]], "torchrl.data.LazyStackedCompositeSpec": [[43, 1, 1, "", "assert_is_in"], [43, 1, 1, "", "cardinality"], [43, 1, 1, "", "clear_device_"], [43, 1, 1, "", "clone"], [43, 1, 1, "", "contains"], [43, 1, 1, "", "cpu"], [43, 1, 1, "", "cuda"], [43, 2, 1, "", "device"], [43, 1, 1, "", "empty"], [43, 1, 1, "", "encode"], [43, 1, 1, "", "enumerate"], [43, 1, 1, "", "erase_memoize_cache"], [43, 1, 1, "", "expand"], [43, 1, 1, "", "flatten"], [43, 1, 1, "", "get"], [43, 1, 1, "", "implements_for_spec"], [43, 1, 1, "", "index"], [43, 1, 1, "", "is_empty"], [43, 1, 1, "", "is_in"], [43, 1, 1, "", "items"], [43, 1, 1, "", "keys"], [43, 1, 1, "", "lock_"], [43, 1, 1, "", "make_neg_dim"], [43, 1, 1, "", "memoize_encode"], [43, 2, 1, "", "ndim"], [43, 1, 1, "", "ndimension"], [43, 1, 1, "", "one"], [43, 1, 1, "", "ones"], [43, 1, 1, "", "pop"], [43, 1, 1, "", "project"], [43, 1, 1, "", "rand"], [43, 1, 1, "", "reshape"], [43, 1, 1, "", "sample"], [43, 1, 1, "", "separates"], [43, 1, 1, "", "set"], [43, 1, 1, "", "squeeze"], [43, 1, 1, "", "to"], [43, 1, 1, "", "to_numpy"], [43, 1, 1, "", "type_check"], [43, 1, 1, "", "unflatten"], [43, 1, 1, "", "unlock_"], [43, 1, 1, "", "unsqueeze"], [43, 1, 1, "", "values"], [43, 1, 1, "", "view"], [43, 1, 1, "", "zero"], [43, 1, 1, "", "zeros"]], "torchrl.data.LazyStackedTensorSpec": [[44, 1, 1, "", "assert_is_in"], [44, 1, 1, "", "cardinality"], [44, 1, 1, "", "clear_device_"], [44, 1, 1, "", "clone"], [44, 1, 1, "", "contains"], [44, 1, 1, "", "cpu"], [44, 1, 1, "", "cuda"], [44, 2, 1, "", "device"], [44, 1, 1, "", "encode"], [44, 1, 1, "", "enumerate"], [44, 1, 1, "", "erase_memoize_cache"], [44, 1, 1, "", "expand"], [44, 1, 1, "", "flatten"], [44, 1, 1, "", "implements_for_spec"], [44, 1, 1, "", "index"], [44, 1, 1, "", "is_in"], [44, 1, 1, "", "make_neg_dim"], [44, 1, 1, "", "memoize_encode"], [44, 2, 1, "", "ndim"], [44, 1, 1, "", "ndimension"], [44, 1, 1, "", "one"], [44, 1, 1, "", "ones"], [44, 1, 1, "", "project"], [44, 1, 1, "", "rand"], [44, 1, 1, "", "reshape"], [44, 1, 1, "", "sample"], [44, 1, 1, "", "squeeze"], [44, 1, 1, "", "to"], [44, 1, 1, "", "to_numpy"], [44, 1, 1, "", "type_check"], [44, 1, 1, "", "unflatten"], [44, 1, 1, "", "unsqueeze"], [44, 1, 1, "", "view"], [44, 1, 1, "", "zero"], [44, 1, 1, "", "zeros"]], "torchrl.data.MCTSForest": [[45, 2, 1, "", "action_keys"], [45, 2, 1, "", "done_keys"], [45, 1, 1, "", "extend"], [45, 1, 1, "", "get_keys_from_env"], [45, 2, 1, "", "observation_keys"], [45, 2, 1, "", "reward_keys"], [45, 1, 1, "", "to_string"]], "torchrl.data.MultiCategorical": [[46, 1, 1, "", "assert_is_in"], [46, 1, 1, "", "cardinality"], [46, 1, 1, "", "clear_device_"], [46, 1, 1, "", "clone"], [46, 1, 1, "", "contains"], [46, 1, 1, "", "cpu"], [46, 1, 1, "", "cuda"], [46, 4, 1, "", "device"], [46, 1, 1, "", "encode"], [46, 1, 1, "", "enumerate"], [46, 1, 1, "", "erase_memoize_cache"], [46, 1, 1, "", "expand"], [46, 1, 1, "", "flatten"], [46, 1, 1, "", "implements_for_spec"], [46, 1, 1, "", "index"], [46, 1, 1, "", "is_in"], [46, 1, 1, "", "make_neg_dim"], [46, 1, 1, "", "memoize_encode"], [46, 2, 1, "", "ndim"], [46, 1, 1, "", "ndimension"], [46, 1, 1, "", "one"], [46, 1, 1, "", "ones"], [46, 1, 1, "", "project"], [46, 1, 1, "", "rand"], [46, 1, 1, "", "reshape"], [46, 1, 1, "", "sample"], [46, 1, 1, "", "set_provisional_n"], [46, 1, 1, "", "squeeze"], [46, 1, 1, "", "to"], [46, 1, 1, "", "to_categorical"], [46, 1, 1, "", "to_categorical_spec"], [46, 1, 1, "", "to_numpy"], [46, 1, 1, "", "to_one_hot"], [46, 1, 1, "", "to_one_hot_spec"], [46, 1, 1, "", "type_check"], [46, 1, 1, "", "unflatten"], [46, 1, 1, "", "unsqueeze"], [46, 1, 1, "", "update_mask"], [46, 1, 1, "", "view"], [46, 1, 1, "", "zero"], [46, 1, 1, "", "zeros"]], "torchrl.data.MultiDiscreteTensorSpec": [[47, 1, 1, "", "assert_is_in"], [47, 1, 1, "", "cardinality"], [47, 1, 1, "", "clear_device_"], [47, 1, 1, "", "clone"], [47, 1, 1, "", "contains"], [47, 1, 1, "", "cpu"], [47, 1, 1, "", "cuda"], [47, 4, 1, "", "device"], [47, 1, 1, "", "encode"], [47, 1, 1, "", "enumerate"], [47, 1, 1, "", "erase_memoize_cache"], [47, 1, 1, "", "expand"], [47, 1, 1, "", "flatten"], [47, 1, 1, "", "implements_for_spec"], [47, 1, 1, "", "index"], [47, 1, 1, "", "is_in"], [47, 1, 1, "", "make_neg_dim"], [47, 1, 1, "", "memoize_encode"], [47, 2, 1, "", "ndim"], [47, 1, 1, "", "ndimension"], [47, 1, 1, "", "one"], [47, 1, 1, "", "ones"], [47, 1, 1, "", "project"], [47, 1, 1, "", "rand"], [47, 1, 1, "", "reshape"], [47, 1, 1, "", "sample"], [47, 1, 1, "", "set_provisional_n"], [47, 1, 1, "", "squeeze"], [47, 1, 1, "", "to"], [47, 1, 1, "", "to_categorical"], [47, 1, 1, "", "to_categorical_spec"], [47, 1, 1, "", "to_numpy"], [47, 1, 1, "", "to_one_hot"], [47, 1, 1, "", "to_one_hot_spec"], [47, 1, 1, "", "type_check"], [47, 1, 1, "", "unflatten"], [47, 1, 1, "", "unsqueeze"], [47, 1, 1, "", "update_mask"], [47, 1, 1, "", "view"], [47, 1, 1, "", "zero"], [47, 1, 1, "", "zeros"]], "torchrl.data.MultiOneHot": [[48, 1, 1, "", "assert_is_in"], [48, 1, 1, "", "cardinality"], [48, 1, 1, "", "clear_device_"], [48, 1, 1, "", "clone"], [48, 1, 1, "", "contains"], [48, 1, 1, "", "cpu"], [48, 1, 1, "", "cuda"], [48, 4, 1, "", "device"], [48, 1, 1, "", "encode"], [48, 1, 1, "", "enumerate"], [48, 1, 1, "", "erase_memoize_cache"], [48, 1, 1, "", "expand"], [48, 1, 1, "", "flatten"], [48, 1, 1, "", "implements_for_spec"], [48, 1, 1, "", "index"], [48, 1, 1, "", "is_in"], [48, 1, 1, "", "make_neg_dim"], [48, 1, 1, "", "memoize_encode"], [48, 2, 1, "", "ndim"], [48, 1, 1, "", "ndimension"], [48, 1, 1, "", "one"], [48, 1, 1, "", "ones"], [48, 1, 1, "", "project"], [48, 1, 1, "", "rand"], [48, 1, 1, "", "reshape"], [48, 1, 1, "", "sample"], [48, 1, 1, "", "squeeze"], [48, 1, 1, "", "to"], [48, 1, 1, "", "to_categorical"], [48, 1, 1, "", "to_categorical_spec"], [48, 1, 1, "", "to_numpy"], [48, 1, 1, "", "to_one_hot"], [48, 1, 1, "", "to_one_hot_spec"], [48, 1, 1, "", "type_check"], [48, 1, 1, "", "unflatten"], [48, 1, 1, "", "unsqueeze"], [48, 1, 1, "", "update_mask"], [48, 1, 1, "", "view"], [48, 1, 1, "", "zero"], [48, 1, 1, "", "zeros"]], "torchrl.data.MultiOneHotDiscreteTensorSpec": [[49, 1, 1, "", "assert_is_in"], [49, 1, 1, "", "cardinality"], [49, 1, 1, "", "clear_device_"], [49, 1, 1, "", "clone"], [49, 1, 1, "", "contains"], [49, 1, 1, "", "cpu"], [49, 1, 1, "", "cuda"], [49, 4, 1, "", "device"], [49, 1, 1, "", "encode"], [49, 1, 1, "", "enumerate"], [49, 1, 1, "", "erase_memoize_cache"], [49, 1, 1, "", "expand"], [49, 1, 1, "", "flatten"], [49, 1, 1, "", "implements_for_spec"], [49, 1, 1, "", "index"], [49, 1, 1, "", "is_in"], [49, 1, 1, "", "make_neg_dim"], [49, 1, 1, "", "memoize_encode"], [49, 2, 1, "", "ndim"], [49, 1, 1, "", "ndimension"], [49, 1, 1, "", "one"], [49, 1, 1, "", "ones"], [49, 1, 1, "", "project"], [49, 1, 1, "", "rand"], [49, 1, 1, "", "reshape"], [49, 1, 1, "", "sample"], [49, 1, 1, "", "squeeze"], [49, 1, 1, "", "to"], [49, 1, 1, "", "to_categorical"], [49, 1, 1, "", "to_categorical_spec"], [49, 1, 1, "", "to_numpy"], [49, 1, 1, "", "to_one_hot"], [49, 1, 1, "", "to_one_hot_spec"], [49, 1, 1, "", "type_check"], [49, 1, 1, "", "unflatten"], [49, 1, 1, "", "unsqueeze"], [49, 1, 1, "", "update_mask"], [49, 1, 1, "", "view"], [49, 1, 1, "", "zero"], [49, 1, 1, "", "zeros"]], "torchrl.data.MultiStep": [[50, 1, 1, "", "add_module"], [50, 1, 1, "", "apply"], [50, 1, 1, "", "bfloat16"], [50, 1, 1, "", "buffers"], [50, 1, 1, "", "children"], [50, 1, 1, "", "compile"], [50, 1, 1, "", "cpu"], [50, 1, 1, "", "cuda"], [50, 1, 1, "", "double"], [50, 1, 1, "", "eval"], [50, 1, 1, "", "extra_repr"], [50, 1, 1, "", "float"], [50, 1, 1, "", "forward"], [50, 1, 1, "", "get_buffer"], [50, 1, 1, "", "get_extra_state"], [50, 1, 1, "", "get_parameter"], [50, 1, 1, "", "get_submodule"], [50, 1, 1, "", "half"], [50, 1, 1, "", "ipu"], [50, 1, 1, "", "load_state_dict"], [50, 1, 1, "", "modules"], [50, 1, 1, "", "mtia"], [50, 1, 1, "", "named_buffers"], [50, 1, 1, "", "named_children"], [50, 1, 1, "", "named_modules"], [50, 1, 1, "", "named_parameters"], [50, 1, 1, "", "parameters"], [50, 1, 1, "", "register_backward_hook"], [50, 1, 1, "", "register_buffer"], [50, 1, 1, "", "register_forward_hook"], [50, 1, 1, "", "register_forward_pre_hook"], [50, 1, 1, "", "register_full_backward_hook"], [50, 1, 1, "", "register_full_backward_pre_hook"], [50, 1, 1, "", "register_load_state_dict_post_hook"], [50, 1, 1, "", "register_load_state_dict_pre_hook"], [50, 1, 1, "", "register_module"], [50, 1, 1, "", "register_parameter"], [50, 1, 1, "", "register_state_dict_post_hook"], [50, 1, 1, "", "register_state_dict_pre_hook"], [50, 1, 1, "", "requires_grad_"], [50, 1, 1, "", "set_extra_state"], [50, 1, 1, "", "set_submodule"], [50, 1, 1, "", "share_memory"], [50, 1, 1, "", "state_dict"], [50, 1, 1, "", "to"], [50, 1, 1, "", "to_empty"], [50, 1, 1, "", "train"], [50, 1, 1, "", "type"], [50, 1, 1, "", "xpu"], [50, 1, 1, "", "zero_grad"]], "torchrl.data.NonTensor": [[52, 1, 1, "", "assert_is_in"], [52, 1, 1, "", "cardinality"], [52, 1, 1, "", "clear_device_"], [52, 1, 1, "", "clone"], [52, 1, 1, "", "contains"], [52, 1, 1, "", "cpu"], [52, 1, 1, "", "cuda"], [52, 2, 1, "", "device"], [52, 1, 1, "", "encode"], [52, 1, 1, "", "enumerate"], [52, 1, 1, "", "erase_memoize_cache"], [52, 1, 1, "", "expand"], [52, 1, 1, "", "flatten"], [52, 1, 1, "", "implements_for_spec"], [52, 1, 1, "", "index"], [52, 1, 1, "", "is_in"], [52, 1, 1, "", "make_neg_dim"], [52, 1, 1, "", "memoize_encode"], [52, 2, 1, "", "ndim"], [52, 1, 1, "", "ndimension"], [52, 1, 1, "", "one"], [52, 1, 1, "", "ones"], [52, 1, 1, "", "project"], [52, 1, 1, "", "rand"], [52, 1, 1, "", "reshape"], [52, 1, 1, "", "sample"], [52, 1, 1, "", "squeeze"], [52, 1, 1, "", "to"], [52, 1, 1, "", "to_numpy"], [52, 1, 1, "", "type_check"], [52, 1, 1, "", "unflatten"], [52, 1, 1, "", "unsqueeze"], [52, 1, 1, "", "view"], [52, 1, 1, "", "zero"], [52, 1, 1, "", "zeros"]], "torchrl.data.NonTensorSpec": [[53, 1, 1, "", "assert_is_in"], [53, 1, 1, "", "cardinality"], [53, 1, 1, "", "clear_device_"], [53, 1, 1, "", "clone"], [53, 1, 1, "", "contains"], [53, 1, 1, "", "cpu"], [53, 1, 1, "", "cuda"], [53, 2, 1, "", "device"], [53, 1, 1, "", "encode"], [53, 1, 1, "", "enumerate"], [53, 1, 1, "", "erase_memoize_cache"], [53, 1, 1, "", "expand"], [53, 1, 1, "", "flatten"], [53, 1, 1, "", "implements_for_spec"], [53, 1, 1, "", "index"], [53, 1, 1, "", "is_in"], [53, 1, 1, "", "make_neg_dim"], [53, 1, 1, "", "memoize_encode"], [53, 2, 1, "", "ndim"], [53, 1, 1, "", "ndimension"], [53, 1, 1, "", "one"], [53, 1, 1, "", "ones"], [53, 1, 1, "", "project"], [53, 1, 1, "", "rand"], [53, 1, 1, "", "reshape"], [53, 1, 1, "", "sample"], [53, 1, 1, "", "squeeze"], [53, 1, 1, "", "to"], [53, 1, 1, "", "to_numpy"], [53, 1, 1, "", "type_check"], [53, 1, 1, "", "unflatten"], [53, 1, 1, "", "unsqueeze"], [53, 1, 1, "", "view"], [53, 1, 1, "", "zero"], [53, 1, 1, "", "zeros"]], "torchrl.data.OneHot": [[54, 1, 1, "", "assert_is_in"], [54, 1, 1, "", "cardinality"], [54, 1, 1, "", "clear_device_"], [54, 1, 1, "", "clone"], [54, 1, 1, "", "contains"], [54, 1, 1, "", "cpu"], [54, 1, 1, "", "cuda"], [54, 4, 1, "", "device"], [54, 1, 1, "", "encode"], [54, 1, 1, "", "enumerate"], [54, 1, 1, "", "erase_memoize_cache"], [54, 1, 1, "", "expand"], [54, 1, 1, "", "flatten"], [54, 1, 1, "", "implements_for_spec"], [54, 1, 1, "", "index"], [54, 1, 1, "", "is_in"], [54, 1, 1, "", "make_neg_dim"], [54, 1, 1, "", "memoize_encode"], [54, 2, 1, "", "ndim"], [54, 1, 1, "", "ndimension"], [54, 1, 1, "", "one"], [54, 1, 1, "", "ones"], [54, 1, 1, "", "project"], [54, 1, 1, "", "rand"], [54, 1, 1, "", "reshape"], [54, 1, 1, "", "sample"], [54, 1, 1, "", "squeeze"], [54, 1, 1, "", "to"], [54, 1, 1, "", "to_categorical"], [54, 1, 1, "", "to_categorical_spec"], [54, 1, 1, "", "to_numpy"], [54, 1, 1, "", "to_one_hot"], [54, 1, 1, "", "to_one_hot_spec"], [54, 1, 1, "", "type_check"], [54, 1, 1, "", "unflatten"], [54, 1, 1, "", "unsqueeze"], [54, 1, 1, "", "update_mask"], [54, 1, 1, "", "view"], [54, 1, 1, "", "zero"], [54, 1, 1, "", "zeros"]], "torchrl.data.OneHotDiscreteTensorSpec": [[55, 1, 1, "", "assert_is_in"], [55, 1, 1, "", "cardinality"], [55, 1, 1, "", "clear_device_"], [55, 1, 1, "", "clone"], [55, 1, 1, "", "contains"], [55, 1, 1, "", "cpu"], [55, 1, 1, "", "cuda"], [55, 4, 1, "", "device"], [55, 1, 1, "", "encode"], [55, 1, 1, "", "enumerate"], [55, 1, 1, "", "erase_memoize_cache"], [55, 1, 1, "", "expand"], [55, 1, 1, "", "flatten"], [55, 1, 1, "", "implements_for_spec"], [55, 1, 1, "", "index"], [55, 1, 1, "", "is_in"], [55, 1, 1, "", "make_neg_dim"], [55, 1, 1, "", "memoize_encode"], [55, 2, 1, "", "ndim"], [55, 1, 1, "", "ndimension"], [55, 1, 1, "", "one"], [55, 1, 1, "", "ones"], [55, 1, 1, "", "project"], [55, 1, 1, "", "rand"], [55, 1, 1, "", "reshape"], [55, 1, 1, "", "sample"], [55, 1, 1, "", "squeeze"], [55, 1, 1, "", "to"], [55, 1, 1, "", "to_categorical"], [55, 1, 1, "", "to_categorical_spec"], [55, 1, 1, "", "to_numpy"], [55, 1, 1, "", "to_one_hot"], [55, 1, 1, "", "to_one_hot_spec"], [55, 1, 1, "", "type_check"], [55, 1, 1, "", "unflatten"], [55, 1, 1, "", "unsqueeze"], [55, 1, 1, "", "update_mask"], [55, 1, 1, "", "view"], [55, 1, 1, "", "zero"], [55, 1, 1, "", "zeros"]], "torchrl.data.PairwiseDataset": [[56, 2, 1, "", "device"], [56, 1, 1, "", "dumps"], [56, 1, 1, "", "fields"], [56, 1, 1, "", "from_dataset"], [56, 1, 1, "", "from_tensordict"], [56, 1, 1, "", "get"], [56, 1, 1, "", "load"], [56, 1, 1, "", "load_"], [56, 1, 1, "", "load_memmap"], [56, 1, 1, "", "load_state_dict"], [56, 1, 1, "", "memmap"], [56, 1, 1, "", "memmap_"], [56, 1, 1, "", "memmap_like"], [56, 1, 1, "", "memmap_refresh_"], [56, 1, 1, "", "save"], [56, 1, 1, "", "set"], [56, 1, 1, "", "state_dict"], [56, 1, 1, "", "to_tensordict"], [56, 1, 1, "", "unbind"]], "torchrl.data.PrioritizedReplayBuffer": [[57, 1, 1, "", "add"], [57, 1, 1, "", "append_transform"], [57, 1, 1, "", "as_remote"], [57, 1, 1, "", "dump"], [57, 1, 1, "", "dumps"], [57, 1, 1, "", "empty"], [57, 1, 1, "", "extend"], [57, 1, 1, "", "insert_transform"], [57, 1, 1, "", "load"], [57, 1, 1, "", "loads"], [57, 1, 1, "", "register_load_hook"], [57, 1, 1, "", "register_save_hook"], [57, 1, 1, "", "sample"], [57, 2, 1, "", "sampler"], [57, 1, 1, "", "save"], [57, 1, 1, "", "set_sampler"], [57, 1, 1, "", "set_storage"], [57, 1, 1, "", "set_writer"], [57, 2, 1, "", "storage"], [57, 2, 1, "", "write_count"], [57, 2, 1, "", "writer"]], "torchrl.data.PromptData": [[58, 2, 1, "", "device"], [58, 1, 1, "", "dumps"], [58, 1, 1, "", "fields"], [58, 1, 1, "", "from_dataset"], [58, 1, 1, "", "from_tensordict"], [58, 1, 1, "", "get"], [58, 1, 1, "", "load"], [58, 1, 1, "", "load_"], [58, 1, 1, "", "load_memmap"], [58, 1, 1, "", "load_state_dict"], [58, 1, 1, "", "memmap"], [58, 1, 1, "", "memmap_"], [58, 1, 1, "", "memmap_like"], [58, 1, 1, "", "memmap_refresh_"], [58, 1, 1, "", "save"], [58, 1, 1, "", "set"], [58, 1, 1, "", "state_dict"], [58, 1, 1, "", "to_tensordict"], [58, 1, 1, "", "unbind"]], "torchrl.data.QueryModule": [[60, 1, 1, "", "add_module"], [60, 1, 1, "", "apply"], [60, 1, 1, "", "bfloat16"], [60, 1, 1, "", "buffers"], [60, 1, 1, "", "children"], [60, 1, 1, "", "compile"], [60, 1, 1, "", "cpu"], [60, 1, 1, "", "cuda"], [60, 1, 1, "", "double"], [60, 1, 1, "", "eval"], [60, 1, 1, "", "extra_repr"], [60, 1, 1, "", "float"], [60, 1, 1, "", "forward"], [60, 1, 1, "", "get_buffer"], [60, 1, 1, "", "get_extra_state"], [60, 1, 1, "", "get_parameter"], [60, 1, 1, "", "get_submodule"], [60, 1, 1, "", "half"], [60, 1, 1, "", "ipu"], [60, 1, 1, "", "is_tdmodule_compatible"], [60, 1, 1, "", "load_state_dict"], [60, 1, 1, "", "modules"], [60, 1, 1, "", "mtia"], [60, 1, 1, "", "named_buffers"], [60, 1, 1, "", "named_children"], [60, 1, 1, "", "named_modules"], [60, 1, 1, "", "named_parameters"], [60, 1, 1, "", "parameters"], [60, 1, 1, "", "register_backward_hook"], [60, 1, 1, "", "register_buffer"], [60, 1, 1, "", "register_forward_hook"], [60, 1, 1, "", "register_forward_pre_hook"], [60, 1, 1, "", "register_full_backward_hook"], [60, 1, 1, "", "register_full_backward_pre_hook"], [60, 1, 1, "", "register_load_state_dict_post_hook"], [60, 1, 1, "", "register_load_state_dict_pre_hook"], [60, 1, 1, "", "register_module"], [60, 1, 1, "", "register_parameter"], [60, 1, 1, "", "register_state_dict_post_hook"], [60, 1, 1, "", "register_state_dict_pre_hook"], [60, 1, 1, "", "requires_grad_"], [60, 1, 1, "", "reset_out_keys"], [60, 1, 1, "", "reset_parameters_recursive"], [60, 1, 1, "", "select_out_keys"], [60, 1, 1, "", "set_extra_state"], [60, 1, 1, "", "set_submodule"], [60, 1, 1, "", "share_memory"], [60, 1, 1, "", "state_dict"], [60, 1, 1, "", "to"], [60, 1, 1, "", "to_empty"], [60, 1, 1, "", "train"], [60, 1, 1, "", "type"], [60, 1, 1, "", "xpu"], [60, 1, 1, "", "zero_grad"]], "torchrl.data.RandomProjectionHash": [[61, 1, 1, "", "add_module"], [61, 1, 1, "", "apply"], [61, 1, 1, "", "bfloat16"], [61, 1, 1, "", "buffers"], [61, 1, 1, "", "children"], [61, 1, 1, "", "compile"], [61, 1, 1, "", "cpu"], [61, 1, 1, "", "cuda"], [61, 1, 1, "", "double"], [61, 1, 1, "", "eval"], [61, 1, 1, "", "extra_repr"], [61, 1, 1, "", "fit"], [61, 1, 1, "", "float"], [61, 1, 1, "", "forward"], [61, 1, 1, "", "get_buffer"], [61, 1, 1, "", "get_extra_state"], [61, 1, 1, "", "get_parameter"], [61, 1, 1, "", "get_submodule"], [61, 1, 1, "", "half"], [61, 1, 1, "", "ipu"], [61, 1, 1, "", "load_state_dict"], [61, 1, 1, "", "modules"], [61, 1, 1, "", "mtia"], [61, 1, 1, "", "named_buffers"], [61, 1, 1, "", "named_children"], [61, 1, 1, "", "named_modules"], [61, 1, 1, "", "named_parameters"], [61, 1, 1, "", "parameters"], [61, 1, 1, "", "register_backward_hook"], [61, 1, 1, "", "register_buffer"], [61, 1, 1, "", "register_forward_hook"], [61, 1, 1, "", "register_forward_pre_hook"], [61, 1, 1, "", "register_full_backward_hook"], [61, 1, 1, "", "register_full_backward_pre_hook"], [61, 1, 1, "", "register_load_state_dict_post_hook"], [61, 1, 1, "", "register_load_state_dict_pre_hook"], [61, 1, 1, "", "register_module"], [61, 1, 1, "", "register_parameter"], [61, 1, 1, "", "register_state_dict_post_hook"], [61, 1, 1, "", "register_state_dict_pre_hook"], [61, 1, 1, "", "requires_grad_"], [61, 1, 1, "", "set_extra_state"], [61, 1, 1, "", "set_submodule"], [61, 1, 1, "", "share_memory"], [61, 1, 1, "", "state_dict"], [61, 1, 1, "", "to"], [61, 1, 1, "", "to_empty"], [61, 1, 1, "", "train"], [61, 1, 1, "", "type"], [61, 1, 1, "", "xpu"], [61, 1, 1, "", "zero_grad"]], "torchrl.data.RayReplayBuffer": [[62, 1, 1, "", "add"], [62, 1, 1, "", "append_transform"], [62, 1, 1, "", "as_remote"], [62, 1, 1, "", "dump"], [62, 1, 1, "", "dumps"], [62, 1, 1, "", "empty"], [62, 1, 1, "", "extend"], [62, 1, 1, "", "insert_transform"], [62, 1, 1, "", "load"], [62, 1, 1, "", "loads"], [62, 1, 1, "", "register_load_hook"], [62, 1, 1, "", "register_save_hook"], [62, 1, 1, "", "sample"], [62, 2, 1, "", "sampler"], [62, 1, 1, "", "save"], [62, 1, 1, "", "set_sampler"], [62, 1, 1, "", "set_storage"], [62, 1, 1, "", "set_writer"], [62, 2, 1, "", "storage"], [62, 2, 1, "", "write_count"], [62, 2, 1, "", "writer"]], "torchrl.data.RemoteTensorDictReplayBuffer": [[63, 1, 1, "", "add"], [63, 1, 1, "", "append_transform"], [63, 1, 1, "", "as_remote"], [63, 1, 1, "", "dump"], [63, 1, 1, "", "dumps"], [63, 1, 1, "", "empty"], [63, 1, 1, "", "extend"], [63, 1, 1, "", "insert_transform"], [63, 1, 1, "", "load"], [63, 1, 1, "", "loads"], [63, 1, 1, "", "register_load_hook"], [63, 1, 1, "", "register_save_hook"], [63, 1, 1, "", "sample"], [63, 2, 1, "", "sampler"], [63, 1, 1, "", "save"], [63, 1, 1, "", "set_sampler"], [63, 1, 1, "", "set_storage"], [63, 1, 1, "", "set_writer"], [63, 2, 1, "", "storage"], [63, 2, 1, "", "write_count"], [63, 2, 1, "", "writer"]], "torchrl.data.ReplayBuffer": [[64, 1, 1, "", "add"], [64, 1, 1, "", "append_transform"], [64, 1, 1, "", "as_remote"], [64, 1, 1, "", "dump"], [64, 1, 1, "", "dumps"], [64, 1, 1, "", "empty"], [64, 1, 1, "", "extend"], [64, 1, 1, "", "insert_transform"], [64, 1, 1, "", "load"], [64, 1, 1, "", "loads"], [64, 1, 1, "", "register_load_hook"], [64, 1, 1, "", "register_save_hook"], [64, 1, 1, "", "sample"], [64, 2, 1, "", "sampler"], [64, 1, 1, "", "save"], [64, 1, 1, "", "set_sampler"], [64, 1, 1, "", "set_storage"], [64, 1, 1, "", "set_writer"], [64, 2, 1, "", "storage"], [64, 2, 1, "", "write_count"], [64, 2, 1, "", "writer"]], "torchrl.data.RewardData": [[65, 2, 1, "", "device"], [65, 1, 1, "", "dumps"], [65, 1, 1, "", "fields"], [65, 1, 1, "", "from_tensordict"], [65, 1, 1, "", "get"], [65, 1, 1, "", "load"], [65, 1, 1, "", "load_"], [65, 1, 1, "", "load_memmap"], [65, 1, 1, "", "load_state_dict"], [65, 1, 1, "", "memmap"], [65, 1, 1, "", "memmap_"], [65, 1, 1, "", "memmap_like"], [65, 1, 1, "", "memmap_refresh_"], [65, 1, 1, "", "save"], [65, 1, 1, "", "set"], [65, 1, 1, "", "state_dict"], [65, 1, 1, "", "to_tensordict"], [65, 1, 1, "", "unbind"]], "torchrl.data.RolloutFromModel": [[66, 1, 1, "", "create_rollout_td"], [66, 1, 1, "", "generate"], [66, 1, 1, "", "logprobs_of_labels"]], "torchrl.data.SipHash": [[67, 1, 1, "", "add_module"], [67, 1, 1, "", "apply"], [67, 1, 1, "", "bfloat16"], [67, 1, 1, "", "buffers"], [67, 1, 1, "", "children"], [67, 1, 1, "", "compile"], [67, 1, 1, "", "cpu"], [67, 1, 1, "", "cuda"], [67, 1, 1, "", "double"], [67, 1, 1, "", "eval"], [67, 1, 1, "", "extra_repr"], [67, 1, 1, "", "float"], [67, 1, 1, "", "forward"], [67, 1, 1, "", "get_buffer"], [67, 1, 1, "", "get_extra_state"], [67, 1, 1, "", "get_parameter"], [67, 1, 1, "", "get_submodule"], [67, 1, 1, "", "half"], [67, 1, 1, "", "ipu"], [67, 1, 1, "", "load_state_dict"], [67, 1, 1, "", "modules"], [67, 1, 1, "", "mtia"], [67, 1, 1, "", "named_buffers"], [67, 1, 1, "", "named_children"], [67, 1, 1, "", "named_modules"], [67, 1, 1, "", "named_parameters"], [67, 1, 1, "", "parameters"], [67, 1, 1, "", "register_backward_hook"], [67, 1, 1, "", "register_buffer"], [67, 1, 1, "", "register_forward_hook"], [67, 1, 1, "", "register_forward_pre_hook"], [67, 1, 1, "", "register_full_backward_hook"], [67, 1, 1, "", "register_full_backward_pre_hook"], [67, 1, 1, "", "register_load_state_dict_post_hook"], [67, 1, 1, "", "register_load_state_dict_pre_hook"], [67, 1, 1, "", "register_module"], [67, 1, 1, "", "register_parameter"], [67, 1, 1, "", "register_state_dict_post_hook"], [67, 1, 1, "", "register_state_dict_pre_hook"], [67, 1, 1, "", "requires_grad_"], [67, 1, 1, "", "set_extra_state"], [67, 1, 1, "", "set_submodule"], [67, 1, 1, "", "share_memory"], [67, 1, 1, "", "state_dict"], [67, 1, 1, "", "to"], [67, 1, 1, "", "to_empty"], [67, 1, 1, "", "train"], [67, 1, 1, "", "type"], [67, 1, 1, "", "xpu"], [67, 1, 1, "", "zero_grad"]], "torchrl.data.Stacked": [[68, 1, 1, "", "assert_is_in"], [68, 1, 1, "", "cardinality"], [68, 1, 1, "", "clear_device_"], [68, 1, 1, "", "clone"], [68, 1, 1, "", "contains"], [68, 1, 1, "", "cpu"], [68, 1, 1, "", "cuda"], [68, 2, 1, "", "device"], [68, 1, 1, "", "encode"], [68, 1, 1, "", "enumerate"], [68, 1, 1, "", "erase_memoize_cache"], [68, 1, 1, "", "expand"], [68, 1, 1, "", "flatten"], [68, 1, 1, "", "implements_for_spec"], [68, 1, 1, "", "index"], [68, 1, 1, "", "is_in"], [68, 1, 1, "", "make_neg_dim"], [68, 1, 1, "", "memoize_encode"], [68, 2, 1, "", "ndim"], [68, 1, 1, "", "ndimension"], [68, 1, 1, "", "one"], [68, 1, 1, "", "ones"], [68, 1, 1, "", "project"], [68, 1, 1, "", "rand"], [68, 1, 1, "", "reshape"], [68, 1, 1, "", "sample"], [68, 1, 1, "", "squeeze"], [68, 1, 1, "", "to"], [68, 1, 1, "", "to_numpy"], [68, 1, 1, "", "type_check"], [68, 1, 1, "", "unflatten"], [68, 1, 1, "", "unsqueeze"], [68, 1, 1, "", "view"], [68, 1, 1, "", "zero"], [68, 1, 1, "", "zeros"]], "torchrl.data.StackedComposite": [[69, 1, 1, "", "assert_is_in"], [69, 1, 1, "", "cardinality"], [69, 1, 1, "", "clear_device_"], [69, 1, 1, "", "clone"], [69, 1, 1, "", "contains"], [69, 1, 1, "", "cpu"], [69, 1, 1, "", "cuda"], [69, 2, 1, "", "device"], [69, 1, 1, "", "empty"], [69, 1, 1, "", "encode"], [69, 1, 1, "", "enumerate"], [69, 1, 1, "", "erase_memoize_cache"], [69, 1, 1, "", "expand"], [69, 1, 1, "", "flatten"], [69, 1, 1, "", "get"], [69, 1, 1, "", "implements_for_spec"], [69, 1, 1, "", "index"], [69, 1, 1, "", "is_empty"], [69, 1, 1, "", "is_in"], [69, 1, 1, "", "items"], [69, 1, 1, "", "keys"], [69, 1, 1, "", "lock_"], [69, 1, 1, "", "make_neg_dim"], [69, 1, 1, "", "memoize_encode"], [69, 2, 1, "", "ndim"], [69, 1, 1, "", "ndimension"], [69, 1, 1, "", "one"], [69, 1, 1, "", "ones"], [69, 1, 1, "", "pop"], [69, 1, 1, "", "project"], [69, 1, 1, "", "rand"], [69, 1, 1, "", "reshape"], [69, 1, 1, "", "sample"], [69, 1, 1, "", "separates"], [69, 1, 1, "", "set"], [69, 1, 1, "", "squeeze"], [69, 1, 1, "", "to"], [69, 1, 1, "", "to_numpy"], [69, 1, 1, "", "type_check"], [69, 1, 1, "", "unflatten"], [69, 1, 1, "", "unlock_"], [69, 1, 1, "", "unsqueeze"], [69, 1, 1, "", "values"], [69, 1, 1, "", "view"], [69, 1, 1, "", "zero"], [69, 1, 1, "", "zeros"]], "torchrl.data.TensorDictMap": [[72, 1, 1, "", "add_module"], [72, 1, 1, "", "apply"], [72, 1, 1, "", "bfloat16"], [72, 1, 1, "", "buffers"], [72, 1, 1, "", "children"], [72, 1, 1, "", "compile"], [72, 1, 1, "", "cpu"], [72, 1, 1, "", "cuda"], [72, 1, 1, "", "double"], [72, 1, 1, "", "eval"], [72, 1, 1, "", "extra_repr"], [72, 1, 1, "", "float"], [72, 1, 1, "", "forward"], [72, 1, 1, "", "from_tensordict_pair"], [72, 1, 1, "", "get_buffer"], [72, 1, 1, "", "get_extra_state"], [72, 1, 1, "", "get_parameter"], [72, 1, 1, "", "get_submodule"], [72, 1, 1, "", "half"], [72, 1, 1, "", "ipu"], [72, 1, 1, "", "is_tdmodule_compatible"], [72, 1, 1, "", "load_state_dict"], [72, 1, 1, "", "modules"], [72, 1, 1, "", "mtia"], [72, 1, 1, "", "named_buffers"], [72, 1, 1, "", "named_children"], [72, 1, 1, "", "named_modules"], [72, 1, 1, "", "named_parameters"], [72, 1, 1, "", "parameters"], [72, 1, 1, "", "register_backward_hook"], [72, 1, 1, "", "register_buffer"], [72, 1, 1, "", "register_forward_hook"], [72, 1, 1, "", "register_forward_pre_hook"], [72, 1, 1, "", "register_full_backward_hook"], [72, 1, 1, "", "register_full_backward_pre_hook"], [72, 1, 1, "", "register_load_state_dict_post_hook"], [72, 1, 1, "", "register_load_state_dict_pre_hook"], [72, 1, 1, "", "register_module"], [72, 1, 1, "", "register_parameter"], [72, 1, 1, "", "register_state_dict_post_hook"], [72, 1, 1, "", "register_state_dict_pre_hook"], [72, 1, 1, "", "requires_grad_"], [72, 1, 1, "", "reset_out_keys"], [72, 1, 1, "", "reset_parameters_recursive"], [72, 1, 1, "", "select_out_keys"], [72, 1, 1, "", "set_extra_state"], [72, 1, 1, "", "set_submodule"], [72, 1, 1, "", "share_memory"], [72, 1, 1, "", "state_dict"], [72, 1, 1, "", "to"], [72, 1, 1, "", "to_empty"], [72, 1, 1, "", "train"], [72, 1, 1, "", "type"], [72, 1, 1, "", "xpu"], [72, 1, 1, "", "zero_grad"]], "torchrl.data.TensorDictPrioritizedReplayBuffer": [[73, 1, 1, "", "add"], [73, 1, 1, "", "append_transform"], [73, 1, 1, "", "as_remote"], [73, 1, 1, "", "dump"], [73, 1, 1, "", "dumps"], [73, 1, 1, "", "empty"], [73, 1, 1, "", "extend"], [73, 1, 1, "", "insert_transform"], [73, 1, 1, "", "load"], [73, 1, 1, "", "loads"], [73, 1, 1, "", "register_load_hook"], [73, 1, 1, "", "register_save_hook"], [73, 1, 1, "", "sample"], [73, 2, 1, "", "sampler"], [73, 1, 1, "", "save"], [73, 1, 1, "", "set_sampler"], [73, 1, 1, "", "set_storage"], [73, 1, 1, "", "set_writer"], [73, 2, 1, "", "storage"], [73, 2, 1, "", "write_count"], [73, 2, 1, "", "writer"]], "torchrl.data.TensorDictReplayBuffer": [[74, 1, 1, "", "add"], [74, 1, 1, "", "append_transform"], [74, 1, 1, "", "as_remote"], [74, 1, 1, "", "dump"], [74, 1, 1, "", "dumps"], [74, 1, 1, "", "empty"], [74, 1, 1, "", "extend"], [74, 1, 1, "", "insert_transform"], [74, 1, 1, "", "load"], [74, 1, 1, "", "loads"], [74, 1, 1, "", "register_load_hook"], [74, 1, 1, "", "register_save_hook"], [74, 1, 1, "", "sample"], [74, 2, 1, "", "sampler"], [74, 1, 1, "", "save"], [74, 1, 1, "", "set_sampler"], [74, 1, 1, "", "set_storage"], [74, 1, 1, "", "set_writer"], [74, 2, 1, "", "storage"], [74, 2, 1, "", "write_count"], [74, 2, 1, "", "writer"]], "torchrl.data.TensorSpec": [[77, 1, 1, "", "assert_is_in"], [77, 1, 1, "", "cardinality"], [77, 1, 1, "", "clear_device_"], [77, 1, 1, "", "clone"], [77, 1, 1, "", "contains"], [77, 1, 1, "", "cpu"], [77, 1, 1, "", "cuda"], [77, 2, 1, "", "device"], [77, 1, 1, "", "encode"], [77, 1, 1, "", "enumerate"], [77, 1, 1, "", "erase_memoize_cache"], [77, 1, 1, "", "expand"], [77, 1, 1, "", "flatten"], [77, 1, 1, "", "implements_for_spec"], [77, 1, 1, "", "index"], [77, 1, 1, "", "is_in"], [77, 1, 1, "", "make_neg_dim"], [77, 1, 1, "", "memoize_encode"], [77, 2, 1, "", "ndim"], [77, 1, 1, "", "ndimension"], [77, 1, 1, "", "one"], [77, 1, 1, "", "ones"], [77, 1, 1, "", "project"], [77, 1, 1, "", "rand"], [77, 1, 1, "", "reshape"], [77, 1, 1, "", "sample"], [77, 1, 1, "", "squeeze"], [77, 1, 1, "", "to"], [77, 1, 1, "", "to_numpy"], [77, 1, 1, "", "type_check"], [77, 1, 1, "", "unflatten"], [77, 1, 1, "", "unsqueeze"], [77, 1, 1, "", "view"], [77, 1, 1, "", "zero"], [77, 1, 1, "", "zeros"]], "torchrl.data.TokenizedDatasetLoader": [[78, 1, 1, "", "dataset_to_tensordict"], [78, 1, 1, "", "load"]], "torchrl.data.Tree": [[79, 2, 1, "", "branching_action"], [79, 2, 1, "", "device"], [79, 1, 1, "", "dumps"], [79, 1, 1, "", "edges"], [79, 1, 1, "", "fields"], [79, 1, 1, "", "from_tensordict"], [79, 2, 1, "", "full_action_spec"], [79, 2, 1, "", "full_done_spec"], [79, 2, 1, "", "full_observation_spec"], [79, 2, 1, "", "full_reward_spec"], [79, 2, 1, "", "full_state_spec"], [79, 1, 1, "", "fully_expanded"], [79, 1, 1, "", "get"], [79, 1, 1, "", "get_vertex_by_hash"], [79, 1, 1, "", "get_vertex_by_id"], [79, 2, 1, "", "is_terminal"], [79, 1, 1, "", "load"], [79, 1, 1, "", "load_"], [79, 1, 1, "", "load_memmap"], [79, 1, 1, "", "load_state_dict"], [79, 1, 1, "", "make_node"], [79, 1, 1, "", "max_length"], [79, 1, 1, "", "memmap"], [79, 1, 1, "", "memmap_"], [79, 1, 1, "", "memmap_like"], [79, 1, 1, "", "memmap_refresh_"], [79, 2, 1, "", "node_observation"], [79, 2, 1, "", "node_observations"], [79, 2, 1, "", "num_children"], [79, 1, 1, "", "num_vertices"], [79, 2, 1, "", "parent"], [79, 1, 1, "", "plot"], [79, 2, 1, "", "prev_action"], [79, 1, 1, "", "rollout_from_path"], [79, 1, 1, "", "save"], [79, 2, 1, "", "selected_actions"], [79, 1, 1, "", "set"], [79, 1, 1, "", "state_dict"], [79, 1, 1, "", "to_string"], [79, 1, 1, "", "to_tensordict"], [79, 1, 1, "", "unbind"], [79, 1, 1, "", "valid_paths"], [79, 1, 1, "", "vertices"], [79, 2, 1, "", "visits"]], "torchrl.data.Unbounded": [[80, 1, 1, "", "assert_is_in"], [80, 1, 1, "", "cardinality"], [80, 1, 1, "", "clear_device_"], [80, 1, 1, "", "clone"], [80, 1, 1, "", "contains"], [80, 1, 1, "", "cpu"], [80, 1, 1, "", "cuda"], [80, 2, 1, "", "device"], [80, 1, 1, "", "encode"], [80, 1, 1, "", "enumerate"], [80, 1, 1, "", "erase_memoize_cache"], [80, 1, 1, "", "expand"], [80, 1, 1, "", "flatten"], [80, 1, 1, "", "implements_for_spec"], [80, 1, 1, "", "index"], [80, 1, 1, "", "is_in"], [80, 1, 1, "", "make_neg_dim"], [80, 1, 1, "", "memoize_encode"], [80, 2, 1, "", "ndim"], [80, 1, 1, "", "ndimension"], [80, 1, 1, "", "one"], [80, 1, 1, "", "ones"], [80, 1, 1, "", "project"], [80, 1, 1, "", "rand"], [80, 1, 1, "", "reshape"], [80, 1, 1, "", "sample"], [80, 1, 1, "", "squeeze"], [80, 1, 1, "", "to"], [80, 1, 1, "", "to_numpy"], [80, 1, 1, "", "type_check"], [80, 1, 1, "", "unflatten"], [80, 1, 1, "", "unsqueeze"], [80, 1, 1, "", "view"], [80, 1, 1, "", "zero"], [80, 1, 1, "", "zeros"]], "torchrl.data.UnboundedContinuous": [[81, 1, 1, "", "assert_is_in"], [81, 1, 1, "", "cardinality"], [81, 1, 1, "", "clear_device_"], [81, 1, 1, "", "clone"], [81, 1, 1, "", "contains"], [81, 1, 1, "", "cpu"], [81, 1, 1, "", "cuda"], [81, 2, 1, "", "device"], [81, 1, 1, "", "encode"], [81, 1, 1, "", "enumerate"], [81, 1, 1, "", "erase_memoize_cache"], [81, 1, 1, "", "expand"], [81, 1, 1, "", "flatten"], [81, 1, 1, "", "implements_for_spec"], [81, 1, 1, "", "index"], [81, 1, 1, "", "is_in"], [81, 1, 1, "", "make_neg_dim"], [81, 1, 1, "", "memoize_encode"], [81, 2, 1, "", "ndim"], [81, 1, 1, "", "ndimension"], [81, 1, 1, "", "one"], [81, 1, 1, "", "ones"], [81, 1, 1, "", "project"], [81, 1, 1, "", "rand"], [81, 1, 1, "", "reshape"], [81, 1, 1, "", "sample"], [81, 1, 1, "", "squeeze"], [81, 1, 1, "", "to"], [81, 1, 1, "", "to_numpy"], [81, 1, 1, "", "type_check"], [81, 1, 1, "", "unflatten"], [81, 1, 1, "", "unsqueeze"], [81, 1, 1, "", "view"], [81, 1, 1, "", "zero"], [81, 1, 1, "", "zeros"]], "torchrl.data.UnboundedContinuousTensorSpec": [[82, 1, 1, "", "assert_is_in"], [82, 1, 1, "", "cardinality"], [82, 1, 1, "", "clear_device_"], [82, 1, 1, "", "clone"], [82, 1, 1, "", "contains"], [82, 1, 1, "", "cpu"], [82, 1, 1, "", "cuda"], [82, 2, 1, "", "device"], [82, 1, 1, "", "encode"], [82, 1, 1, "", "enumerate"], [82, 1, 1, "", "erase_memoize_cache"], [82, 1, 1, "", "expand"], [82, 1, 1, "", "flatten"], [82, 1, 1, "", "implements_for_spec"], [82, 1, 1, "", "index"], [82, 1, 1, "", "is_in"], [82, 1, 1, "", "make_neg_dim"], [82, 1, 1, "", "memoize_encode"], [82, 2, 1, "", "ndim"], [82, 1, 1, "", "ndimension"], [82, 1, 1, "", "one"], [82, 1, 1, "", "ones"], [82, 1, 1, "", "project"], [82, 1, 1, "", "rand"], [82, 1, 1, "", "reshape"], [82, 1, 1, "", "sample"], [82, 1, 1, "", "squeeze"], [82, 1, 1, "", "to"], [82, 1, 1, "", "to_numpy"], [82, 1, 1, "", "type_check"], [82, 1, 1, "", "unflatten"], [82, 1, 1, "", "unsqueeze"], [82, 1, 1, "", "view"], [82, 1, 1, "", "zero"], [82, 1, 1, "", "zeros"]], "torchrl.data.UnboundedDiscrete": [[83, 1, 1, "", "assert_is_in"], [83, 1, 1, "", "cardinality"], [83, 1, 1, "", "clear_device_"], [83, 1, 1, "", "clone"], [83, 1, 1, "", "contains"], [83, 1, 1, "", "cpu"], [83, 1, 1, "", "cuda"], [83, 2, 1, "", "device"], [83, 1, 1, "", "encode"], [83, 1, 1, "", "enumerate"], [83, 1, 1, "", "erase_memoize_cache"], [83, 1, 1, "", "expand"], [83, 1, 1, "", "flatten"], [83, 1, 1, "", "implements_for_spec"], [83, 1, 1, "", "index"], [83, 1, 1, "", "is_in"], [83, 1, 1, "", "make_neg_dim"], [83, 1, 1, "", "memoize_encode"], [83, 2, 1, "", "ndim"], [83, 1, 1, "", "ndimension"], [83, 1, 1, "", "one"], [83, 1, 1, "", "ones"], [83, 1, 1, "", "project"], [83, 1, 1, "", "rand"], [83, 1, 1, "", "reshape"], [83, 1, 1, "", "sample"], [83, 1, 1, "", "squeeze"], [83, 1, 1, "", "to"], [83, 1, 1, "", "to_numpy"], [83, 1, 1, "", "type_check"], [83, 1, 1, "", "unflatten"], [83, 1, 1, "", "unsqueeze"], [83, 1, 1, "", "view"], [83, 1, 1, "", "zero"], [83, 1, 1, "", "zeros"]], "torchrl.data.UnboundedDiscreteTensorSpec": [[84, 1, 1, "", "assert_is_in"], [84, 1, 1, "", "cardinality"], [84, 1, 1, "", "clear_device_"], [84, 1, 1, "", "clone"], [84, 1, 1, "", "contains"], [84, 1, 1, "", "cpu"], [84, 1, 1, "", "cuda"], [84, 2, 1, "", "device"], [84, 1, 1, "", "encode"], [84, 1, 1, "", "enumerate"], [84, 1, 1, "", "erase_memoize_cache"], [84, 1, 1, "", "expand"], [84, 1, 1, "", "flatten"], [84, 1, 1, "", "implements_for_spec"], [84, 1, 1, "", "index"], [84, 1, 1, "", "is_in"], [84, 1, 1, "", "make_neg_dim"], [84, 1, 1, "", "memoize_encode"], [84, 2, 1, "", "ndim"], [84, 1, 1, "", "ndimension"], [84, 1, 1, "", "one"], [84, 1, 1, "", "ones"], [84, 1, 1, "", "project"], [84, 1, 1, "", "rand"], [84, 1, 1, "", "reshape"], [84, 1, 1, "", "sample"], [84, 1, 1, "", "squeeze"], [84, 1, 1, "", "to"], [84, 1, 1, "", "to_numpy"], [84, 1, 1, "", "type_check"], [84, 1, 1, "", "unflatten"], [84, 1, 1, "", "unsqueeze"], [84, 1, 1, "", "view"], [84, 1, 1, "", "zero"], [84, 1, 1, "", "zeros"]], "torchrl.data.replay_buffers": [[90, 0, 1, "", "FlatStorageCheckpointer"], [91, 0, 1, "", "H5StorageCheckpointer"], [92, 0, 1, "", "ImmutableDatasetWriter"], [93, 0, 1, "", "LazyMemmapStorage"], [94, 0, 1, "", "LazyStackStorage"], [95, 0, 1, "", "LazyTensorStorage"], [96, 0, 1, "", "ListStorage"], [97, 0, 1, "", "ListStorageCheckpointer"], [98, 0, 1, "", "NestedStorageCheckpointer"], [99, 0, 1, "", "PrioritizedSampler"], [100, 0, 1, "", "PrioritizedSliceSampler"], [101, 0, 1, "", "RandomSampler"], [102, 0, 1, "", "ReplayBufferEnsemble"], [103, 0, 1, "", "RoundRobinWriter"], [104, 0, 1, "", "Sampler"], [105, 0, 1, "", "SamplerEnsemble"], [106, 0, 1, "", "SamplerWithoutReplacement"], [107, 0, 1, "", "SliceSampler"], [108, 0, 1, "", "SliceSamplerWithoutReplacement"], [109, 0, 1, "", "Storage"], [110, 0, 1, "", "StorageCheckpointerBase"], [111, 0, 1, "", "StorageEnsemble"], [112, 0, 1, "", "StorageEnsembleCheckpointer"], [113, 0, 1, "", "TensorDictMaxValueWriter"], [114, 0, 1, "", "TensorDictRoundRobinWriter"], [115, 0, 1, "", "TensorStorage"], [116, 0, 1, "", "TensorStorageCheckpointer"], [117, 0, 1, "", "Writer"], [118, 0, 1, "", "WriterEnsemble"]], "torchrl.data.replay_buffers.ImmutableDatasetWriter": [[92, 1, 1, "", "add"], [92, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.LazyMemmapStorage": [[93, 1, 1, "", "attach"], [93, 1, 1, "", "dump"], [93, 1, 1, "", "load"], [93, 1, 1, "", "save"]], "torchrl.data.replay_buffers.LazyStackStorage": [[94, 1, 1, "", "attach"], [94, 1, 1, "", "dump"], [94, 1, 1, "", "load"], [94, 1, 1, "", "save"]], "torchrl.data.replay_buffers.LazyTensorStorage": [[95, 1, 1, "", "attach"], [95, 1, 1, "", "dump"], [95, 1, 1, "", "load"], [95, 1, 1, "", "save"]], "torchrl.data.replay_buffers.ListStorage": [[96, 1, 1, "", "attach"], [96, 1, 1, "", "dump"], [96, 1, 1, "", "load"], [96, 1, 1, "", "save"]], "torchrl.data.replay_buffers.PrioritizedSampler": [[99, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.PrioritizedSliceSampler": [[100, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.ReplayBufferEnsemble": [[102, 1, 1, "", "add"], [102, 1, 1, "", "append_transform"], [102, 1, 1, "", "as_remote"], [102, 1, 1, "", "dump"], [102, 1, 1, "", "dumps"], [102, 1, 1, "", "empty"], [102, 1, 1, "", "extend"], [102, 1, 1, "", "insert_transform"], [102, 1, 1, "", "load"], [102, 1, 1, "", "loads"], [102, 1, 1, "", "register_load_hook"], [102, 1, 1, "", "register_save_hook"], [102, 1, 1, "", "sample"], [102, 2, 1, "", "sampler"], [102, 1, 1, "", "save"], [102, 1, 1, "", "set_sampler"], [102, 1, 1, "", "set_storage"], [102, 1, 1, "", "set_writer"], [102, 2, 1, "", "storage"], [102, 2, 1, "", "write_count"], [102, 2, 1, "", "writer"]], "torchrl.data.replay_buffers.RoundRobinWriter": [[103, 1, 1, "", "add"], [103, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.Storage": [[109, 1, 1, "", "attach"], [109, 1, 1, "", "dump"], [109, 1, 1, "", "load"], [109, 1, 1, "", "save"]], "torchrl.data.replay_buffers.StorageEnsemble": [[111, 1, 1, "", "attach"], [111, 1, 1, "", "dump"], [111, 1, 1, "", "load"], [111, 1, 1, "", "save"]], "torchrl.data.replay_buffers.TensorDictMaxValueWriter": [[113, 1, 1, "", "add"], [113, 1, 1, "", "extend"], [113, 1, 1, "", "get_insert_index"]], "torchrl.data.replay_buffers.TensorDictRoundRobinWriter": [[114, 1, 1, "", "add"], [114, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.TensorStorage": [[115, 1, 1, "", "attach"], [115, 1, 1, "", "dump"], [115, 1, 1, "", "load"], [115, 1, 1, "", "save"]], "torchrl.data.replay_buffers.Writer": [[117, 1, 1, "", "add"], [117, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.WriterEnsemble": [[118, 1, 1, "", "add"], [118, 1, 1, "", "extend"]], "torchrl.envs": [[119, 0, 1, "", "AsyncEnvPool"], [120, 3, 1, "", "BraxEnv"], [121, 3, 1, "", "BraxWrapper"], [122, 0, 1, "", "ChessEnv"], [123, 3, 1, "", "DMControlEnv"], [124, 3, 1, "", "DMControlWrapper"], [125, 0, 1, "", "EnvBase"], [126, 0, 1, "", "EnvCreator"], [127, 0, 1, "", "EnvMetaData"], [128, 3, 1, "", "GymEnv"], [129, 0, 1, "", "GymLikeEnv"], [130, 3, 1, "", "GymWrapper"], [131, 3, 1, "", "HabitatEnv"], [132, 3, 1, "", "IsaacGymEnv"], [133, 3, 1, "", "IsaacGymWrapper"], [134, 3, 1, "", "IsaacLabWrapper"], [135, 3, 1, "", "JumanjiEnv"], [136, 3, 1, "", "JumanjiWrapper"], [137, 0, 1, "", "LLMHashingEnv"], [138, 3, 1, "", "MOGymEnv"], [139, 3, 1, "", "MOGymWrapper"], [140, 3, 1, "", "MarlGroupMapType"], [141, 3, 1, "", "MeltingpotEnv"], [142, 3, 1, "", "MeltingpotWrapper"], [143, 3, 1, "", "ModelBasedEnvBase"], [144, 3, 1, "", "MultiThreadedEnv"], [145, 3, 1, "", "MultiThreadedEnvWrapper"], [146, 3, 1, "", "OpenMLEnv"], [147, 3, 1, "", "OpenSpielEnv"], [148, 3, 1, "", "OpenSpielWrapper"], [149, 0, 1, "", "ParallelEnv"], [150, 0, 1, "", "PendulumEnv"], [151, 3, 1, "", "PettingZooEnv"], [152, 3, 1, "", "PettingZooWrapper"], [153, 0, 1, "", "ProcessorAsyncEnvPool"], [154, 3, 1, "", "RandomPolicy"], [155, 3, 1, "", "RoboHiveEnv"], [156, 3, 1, "", "SMACv2Env"], [157, 3, 1, "", "SMACv2Wrapper"], [158, 0, 1, "", "SerialEnv"], [159, 0, 1, "", "ThreadingAsyncEnvPool"], [160, 0, 1, "", "TicTacToeEnv"], [161, 3, 1, "", "UnityMLAgentsEnv"], [162, 3, 1, "", "UnityMLAgentsWrapper"], [163, 3, 1, "", "VmasEnv"], [164, 3, 1, "", "VmasWrapper"], [165, 3, 1, "", "check_env_specs"], [166, 3, 1, "", "check_marl_grouping"], [167, 3, 1, "", "exploration_type"], [168, 3, 1, "", "get_available_libraries"], [169, 3, 1, "", "gym_backend"], [170, 3, 1, "", "make_composite_from_td"], [143, 1, 1, "", "rand_step"], [173, 3, 1, "", "register_gym_spec_conversion"], [143, 1, 1, "", "reset"], [143, 1, 1, "", "rollout"], [174, 3, 1, "", "set_exploration_type"], [175, 3, 1, "", "set_gym_backend"], [143, 1, 1, "", "set_seed"], [143, 1, 1, "", "step"], [176, 3, 1, "", "step_mdp"], [177, 3, 1, "", "terminated_or_truncated"]], "torchrl.envs.AsyncEnvPool": [[119, 2, 1, "", "action_key"], [119, 2, 1, "", "action_keys"], [119, 2, 1, "", "action_spec"], [119, 2, 1, "", "action_spec_unbatched"], [119, 1, 1, "", "add_module"], [119, 1, 1, "", "add_truncated_keys"], [119, 1, 1, "", "all_actions"], [119, 1, 1, "", "any_done"], [119, 1, 1, "", "append_transform"], [119, 1, 1, "", "apply"], [119, 1, 1, "", "auto_specs_"], [119, 2, 1, "", "batch_dims"], [119, 2, 1, "", "batch_locked"], [119, 2, 1, "", "batch_size"], [119, 1, 1, "", "bfloat16"], [119, 1, 1, "", "buffers"], [119, 1, 1, "", "cardinality"], [119, 1, 1, "", "check_env_specs"], [119, 1, 1, "", "children"], [119, 1, 1, "", "compile"], [119, 1, 1, "", "cpu"], [119, 1, 1, "", "cuda"], [119, 2, 1, "", "done_key"], [119, 2, 1, "", "done_keys"], [119, 2, 1, "", "done_keys_groups"], [119, 2, 1, "", "done_spec"], [119, 2, 1, "", "done_spec_unbatched"], [119, 1, 1, "", "double"], [119, 1, 1, "", "empty_cache"], [119, 1, 1, "", "eval"], [119, 1, 1, "", "extra_repr"], [119, 1, 1, "", "fake_tensordict"], [119, 1, 1, "", "float"], [119, 1, 1, "", "forward"], [119, 2, 1, "", "full_action_spec"], [119, 2, 1, "", "full_action_spec_unbatched"], [119, 2, 1, "", "full_done_spec"], [119, 2, 1, "", "full_done_spec_unbatched"], [119, 2, 1, "", "full_observation_spec_unbatched"], [119, 2, 1, "", "full_reward_spec"], [119, 2, 1, "", "full_reward_spec_unbatched"], [119, 2, 1, "", "full_state_spec"], [119, 2, 1, "", "full_state_spec_unbatched"], [119, 1, 1, "", "get_buffer"], [119, 1, 1, "", "get_extra_state"], [119, 1, 1, "", "get_parameter"], [119, 1, 1, "", "get_submodule"], [119, 1, 1, "", "half"], [119, 2, 1, "", "input_spec"], [119, 2, 1, "", "input_spec_unbatched"], [119, 1, 1, "", "ipu"], [119, 2, 1, "", "is_spec_locked"], [119, 1, 1, "", "load_state_dict"], [119, 1, 1, "", "maybe_reset"], [119, 1, 1, "", "modules"], [119, 1, 1, "", "mtia"], [119, 1, 1, "", "named_buffers"], [119, 1, 1, "", "named_children"], [119, 1, 1, "", "named_modules"], [119, 1, 1, "", "named_parameters"], [119, 2, 1, "", "observation_keys"], [119, 2, 1, "", "observation_spec"], [119, 2, 1, "", "observation_spec_unbatched"], [119, 2, 1, "", "output_spec"], [119, 2, 1, "", "output_spec_unbatched"], [119, 1, 1, "", "parameters"], [119, 1, 1, "", "rand_action"], [119, 1, 1, "", "rand_step"], [119, 1, 1, "", "register_backward_hook"], [119, 1, 1, "", "register_buffer"], [119, 1, 1, "", "register_forward_hook"], [119, 1, 1, "", "register_forward_pre_hook"], [119, 1, 1, "", "register_full_backward_hook"], [119, 1, 1, "", "register_full_backward_pre_hook"], [119, 1, 1, "", "register_gym"], [119, 1, 1, "", "register_load_state_dict_post_hook"], [119, 1, 1, "", "register_load_state_dict_pre_hook"], [119, 1, 1, "", "register_module"], [119, 1, 1, "", "register_parameter"], [119, 1, 1, "", "register_state_dict_post_hook"], [119, 1, 1, "", "register_state_dict_pre_hook"], [119, 1, 1, "", "requires_grad_"], [119, 1, 1, "", "reset"], [119, 2, 1, "", "reset_keys"], [119, 2, 1, "", "reward_key"], [119, 2, 1, "", "reward_keys"], [119, 2, 1, "", "reward_spec"], [119, 2, 1, "", "reward_spec_unbatched"], [119, 1, 1, "", "rollout"], [119, 1, 1, "", "set_extra_state"], [119, 1, 1, "", "set_seed"], [119, 1, 1, "", "set_spec_lock_"], [119, 1, 1, "", "set_submodule"], [119, 2, 1, "", "shape"], [119, 1, 1, "", "share_memory"], [119, 2, 1, "", "specs"], [119, 1, 1, "", "state_dict"], [119, 2, 1, "", "state_keys"], [119, 2, 1, "", "state_spec"], [119, 2, 1, "", "state_spec_unbatched"], [119, 1, 1, "", "step"], [119, 1, 1, "", "step_and_maybe_reset"], [119, 1, 1, "", "step_mdp"], [119, 1, 1, "", "to"], [119, 1, 1, "", "to_empty"], [119, 1, 1, "", "train"], [119, 1, 1, "", "type"], [119, 1, 1, "", "xpu"], [119, 1, 1, "", "zero_grad"]], "torchrl.envs.ChessEnv": [[122, 2, 1, "", "action_key"], [122, 2, 1, "", "action_keys"], [122, 2, 1, "", "action_spec"], [122, 2, 1, "", "action_spec_unbatched"], [122, 1, 1, "", "add_module"], [122, 1, 1, "", "add_truncated_keys"], [122, 1, 1, "", "all_actions"], [122, 1, 1, "", "any_done"], [122, 1, 1, "", "append_transform"], [122, 1, 1, "", "apply"], [122, 1, 1, "", "auto_specs_"], [122, 2, 1, "", "batch_dims"], [122, 2, 1, "", "batch_locked"], [122, 2, 1, "", "batch_size"], [122, 1, 1, "", "bfloat16"], [122, 1, 1, "", "buffers"], [122, 1, 1, "", "cardinality"], [122, 1, 1, "", "check_env_specs"], [122, 1, 1, "", "children"], [122, 1, 1, "", "compile"], [122, 1, 1, "", "cpu"], [122, 1, 1, "", "cuda"], [122, 2, 1, "", "done_key"], [122, 2, 1, "", "done_keys"], [122, 2, 1, "", "done_keys_groups"], [122, 2, 1, "", "done_spec"], [122, 2, 1, "", "done_spec_unbatched"], [122, 1, 1, "", "double"], [122, 1, 1, "", "empty_cache"], [122, 1, 1, "", "eval"], [122, 1, 1, "", "extra_repr"], [122, 1, 1, "", "fake_tensordict"], [122, 1, 1, "", "float"], [122, 1, 1, "", "forward"], [122, 2, 1, "", "full_action_spec"], [122, 2, 1, "", "full_action_spec_unbatched"], [122, 2, 1, "", "full_done_spec"], [122, 2, 1, "", "full_done_spec_unbatched"], [122, 2, 1, "", "full_observation_spec_unbatched"], [122, 2, 1, "", "full_reward_spec"], [122, 2, 1, "", "full_reward_spec_unbatched"], [122, 2, 1, "", "full_state_spec"], [122, 2, 1, "", "full_state_spec_unbatched"], [122, 1, 1, "", "get_buffer"], [122, 1, 1, "", "get_extra_state"], [122, 1, 1, "", "get_legal_moves"], [122, 1, 1, "", "get_parameter"], [122, 1, 1, "", "get_submodule"], [122, 1, 1, "", "half"], [122, 2, 1, "", "input_spec"], [122, 2, 1, "", "input_spec_unbatched"], [122, 1, 1, "", "ipu"], [122, 2, 1, "", "is_spec_locked"], [122, 1, 1, "", "load_state_dict"], [122, 1, 1, "", "maybe_reset"], [122, 1, 1, "", "modules"], [122, 1, 1, "", "mtia"], [122, 1, 1, "", "named_buffers"], [122, 1, 1, "", "named_children"], [122, 1, 1, "", "named_modules"], [122, 1, 1, "", "named_parameters"], [122, 2, 1, "", "observation_keys"], [122, 2, 1, "", "observation_spec"], [122, 2, 1, "", "observation_spec_unbatched"], [122, 2, 1, "", "output_spec"], [122, 2, 1, "", "output_spec_unbatched"], [122, 1, 1, "", "parameters"], [122, 1, 1, "", "rand_action"], [122, 1, 1, "", "rand_step"], [122, 1, 1, "", "register_backward_hook"], [122, 1, 1, "", "register_buffer"], [122, 1, 1, "", "register_forward_hook"], [122, 1, 1, "", "register_forward_pre_hook"], [122, 1, 1, "", "register_full_backward_hook"], [122, 1, 1, "", "register_full_backward_pre_hook"], [122, 1, 1, "", "register_gym"], [122, 1, 1, "", "register_load_state_dict_post_hook"], [122, 1, 1, "", "register_load_state_dict_pre_hook"], [122, 1, 1, "", "register_module"], [122, 1, 1, "", "register_parameter"], [122, 1, 1, "", "register_state_dict_post_hook"], [122, 1, 1, "", "register_state_dict_pre_hook"], [122, 1, 1, "", "requires_grad_"], [122, 1, 1, "", "reset"], [122, 2, 1, "", "reset_keys"], [122, 2, 1, "", "reward_key"], [122, 2, 1, "", "reward_keys"], [122, 2, 1, "", "reward_spec"], [122, 2, 1, "", "reward_spec_unbatched"], [122, 1, 1, "", "rollout"], [122, 1, 1, "", "set_extra_state"], [122, 1, 1, "", "set_seed"], [122, 1, 1, "", "set_spec_lock_"], [122, 1, 1, "", "set_submodule"], [122, 2, 1, "", "shape"], [122, 1, 1, "", "share_memory"], [122, 2, 1, "", "specs"], [122, 1, 1, "", "state_dict"], [122, 2, 1, "", "state_keys"], [122, 2, 1, "", "state_spec"], [122, 2, 1, "", "state_spec_unbatched"], [122, 1, 1, "", "step"], [122, 1, 1, "", "step_and_maybe_reset"], [122, 1, 1, "", "step_mdp"], [122, 1, 1, "", "to"], [122, 1, 1, "", "to_empty"], [122, 1, 1, "", "train"], [122, 1, 1, "", "type"], [122, 1, 1, "", "xpu"], [122, 1, 1, "", "zero_grad"]], "torchrl.envs.EnvBase": [[125, 2, 1, "", "action_key"], [125, 2, 1, "", "action_keys"], [125, 2, 1, "", "action_spec"], [125, 2, 1, "", "action_spec_unbatched"], [125, 1, 1, "", "add_module"], [125, 1, 1, "", "add_truncated_keys"], [125, 1, 1, "", "all_actions"], [125, 1, 1, "", "any_done"], [125, 1, 1, "", "append_transform"], [125, 1, 1, "", "apply"], [125, 1, 1, "", "auto_specs_"], [125, 2, 1, "", "batch_dims"], [125, 2, 1, "", "batch_locked"], [125, 2, 1, "", "batch_size"], [125, 1, 1, "", "bfloat16"], [125, 1, 1, "", "buffers"], [125, 1, 1, "", "cardinality"], [125, 1, 1, "", "check_env_specs"], [125, 1, 1, "", "children"], [125, 1, 1, "", "compile"], [125, 1, 1, "", "cpu"], [125, 1, 1, "", "cuda"], [125, 2, 1, "", "done_key"], [125, 2, 1, "", "done_keys"], [125, 2, 1, "", "done_keys_groups"], [125, 2, 1, "", "done_spec"], [125, 2, 1, "", "done_spec_unbatched"], [125, 1, 1, "", "double"], [125, 1, 1, "", "empty_cache"], [125, 1, 1, "", "eval"], [125, 1, 1, "", "extra_repr"], [125, 1, 1, "", "fake_tensordict"], [125, 1, 1, "", "float"], [125, 1, 1, "", "forward"], [125, 2, 1, "", "full_action_spec"], [125, 2, 1, "", "full_action_spec_unbatched"], [125, 2, 1, "", "full_done_spec"], [125, 2, 1, "", "full_done_spec_unbatched"], [125, 2, 1, "", "full_observation_spec_unbatched"], [125, 2, 1, "", "full_reward_spec"], [125, 2, 1, "", "full_reward_spec_unbatched"], [125, 2, 1, "", "full_state_spec"], [125, 2, 1, "", "full_state_spec_unbatched"], [125, 1, 1, "", "get_buffer"], [125, 1, 1, "", "get_extra_state"], [125, 1, 1, "", "get_parameter"], [125, 1, 1, "", "get_submodule"], [125, 1, 1, "", "half"], [125, 2, 1, "", "input_spec"], [125, 2, 1, "", "input_spec_unbatched"], [125, 1, 1, "", "ipu"], [125, 2, 1, "", "is_spec_locked"], [125, 1, 1, "", "load_state_dict"], [125, 1, 1, "", "maybe_reset"], [125, 1, 1, "", "modules"], [125, 1, 1, "", "mtia"], [125, 1, 1, "", "named_buffers"], [125, 1, 1, "", "named_children"], [125, 1, 1, "", "named_modules"], [125, 1, 1, "", "named_parameters"], [125, 2, 1, "", "observation_keys"], [125, 2, 1, "", "observation_spec"], [125, 2, 1, "", "observation_spec_unbatched"], [125, 2, 1, "", "output_spec"], [125, 2, 1, "", "output_spec_unbatched"], [125, 1, 1, "", "parameters"], [125, 1, 1, "", "rand_action"], [125, 1, 1, "id0", "rand_step"], [125, 1, 1, "", "register_backward_hook"], [125, 1, 1, "", "register_buffer"], [125, 1, 1, "", "register_forward_hook"], [125, 1, 1, "", "register_forward_pre_hook"], [125, 1, 1, "", "register_full_backward_hook"], [125, 1, 1, "", "register_full_backward_pre_hook"], [125, 1, 1, "", "register_gym"], [125, 1, 1, "", "register_load_state_dict_post_hook"], [125, 1, 1, "", "register_load_state_dict_pre_hook"], [125, 1, 1, "", "register_module"], [125, 1, 1, "", "register_parameter"], [125, 1, 1, "", "register_state_dict_post_hook"], [125, 1, 1, "", "register_state_dict_pre_hook"], [125, 1, 1, "", "requires_grad_"], [125, 1, 1, "id1", "reset"], [125, 2, 1, "", "reset_keys"], [125, 2, 1, "", "reward_key"], [125, 2, 1, "", "reward_keys"], [125, 2, 1, "", "reward_spec"], [125, 2, 1, "", "reward_spec_unbatched"], [125, 1, 1, "id2", "rollout"], [125, 1, 1, "", "set_extra_state"], [125, 1, 1, "id3", "set_seed"], [125, 1, 1, "", "set_spec_lock_"], [125, 1, 1, "", "set_submodule"], [125, 2, 1, "", "shape"], [125, 1, 1, "", "share_memory"], [125, 2, 1, "", "specs"], [125, 1, 1, "", "state_dict"], [125, 2, 1, "", "state_keys"], [125, 2, 1, "", "state_spec"], [125, 2, 1, "", "state_spec_unbatched"], [125, 1, 1, "id4", "step"], [125, 1, 1, "", "step_and_maybe_reset"], [125, 1, 1, "", "step_mdp"], [125, 1, 1, "", "to"], [125, 1, 1, "", "to_empty"], [125, 1, 1, "", "train"], [125, 1, 1, "", "type"], [125, 1, 1, "", "xpu"], [125, 1, 1, "", "zero_grad"]], "torchrl.envs.EnvCreator": [[126, 1, 1, "", "make_variant"]], "torchrl.envs.GymLikeEnv": [[129, 2, 1, "", "action_key"], [129, 2, 1, "", "action_keys"], [129, 2, 1, "", "action_spec"], [129, 2, 1, "", "action_spec_unbatched"], [129, 1, 1, "", "add_module"], [129, 1, 1, "", "add_truncated_keys"], [129, 1, 1, "", "all_actions"], [129, 1, 1, "", "any_done"], [129, 1, 1, "", "append_transform"], [129, 1, 1, "", "apply"], [129, 1, 1, "", "auto_register_info_dict"], [129, 1, 1, "", "auto_specs_"], [129, 2, 1, "", "batch_dims"], [129, 2, 1, "", "batch_locked"], [129, 2, 1, "", "batch_size"], [129, 1, 1, "", "bfloat16"], [129, 1, 1, "", "buffers"], [129, 1, 1, "", "cardinality"], [129, 1, 1, "", "check_env_specs"], [129, 1, 1, "", "children"], [129, 1, 1, "", "close"], [129, 1, 1, "", "compile"], [129, 1, 1, "", "cpu"], [129, 1, 1, "", "cuda"], [129, 2, 1, "", "done_key"], [129, 2, 1, "", "done_keys"], [129, 2, 1, "", "done_keys_groups"], [129, 2, 1, "", "done_spec"], [129, 2, 1, "", "done_spec_unbatched"], [129, 1, 1, "", "double"], [129, 1, 1, "", "empty_cache"], [129, 1, 1, "", "eval"], [129, 1, 1, "", "extra_repr"], [129, 1, 1, "", "fake_tensordict"], [129, 1, 1, "", "fast_encoding"], [129, 1, 1, "", "float"], [129, 1, 1, "", "forward"], [129, 2, 1, "", "full_action_spec"], [129, 2, 1, "", "full_action_spec_unbatched"], [129, 2, 1, "", "full_done_spec"], [129, 2, 1, "", "full_done_spec_unbatched"], [129, 2, 1, "", "full_observation_spec_unbatched"], [129, 2, 1, "", "full_reward_spec"], [129, 2, 1, "", "full_reward_spec_unbatched"], [129, 2, 1, "", "full_state_spec"], [129, 2, 1, "", "full_state_spec_unbatched"], [129, 1, 1, "", "get_buffer"], [129, 1, 1, "", "get_extra_state"], [129, 1, 1, "", "get_parameter"], [129, 1, 1, "", "get_submodule"], [129, 1, 1, "", "half"], [129, 2, 1, "", "input_spec"], [129, 2, 1, "", "input_spec_unbatched"], [129, 1, 1, "", "ipu"], [129, 2, 1, "", "is_spec_locked"], [129, 1, 1, "", "load_state_dict"], [129, 1, 1, "", "maybe_reset"], [129, 1, 1, "", "modules"], [129, 1, 1, "", "mtia"], [129, 1, 1, "", "named_buffers"], [129, 1, 1, "", "named_children"], [129, 1, 1, "", "named_modules"], [129, 1, 1, "", "named_parameters"], [129, 2, 1, "", "observation_keys"], [129, 2, 1, "", "observation_spec"], [129, 2, 1, "", "observation_spec_unbatched"], [129, 2, 1, "", "output_spec"], [129, 2, 1, "", "output_spec_unbatched"], [129, 1, 1, "", "parameters"], [129, 1, 1, "", "rand_action"], [129, 1, 1, "", "rand_step"], [129, 1, 1, "", "read_action"], [129, 1, 1, "", "read_done"], [129, 1, 1, "", "read_obs"], [129, 1, 1, "", "read_reward"], [129, 1, 1, "", "register_backward_hook"], [129, 1, 1, "", "register_buffer"], [129, 1, 1, "", "register_forward_hook"], [129, 1, 1, "", "register_forward_pre_hook"], [129, 1, 1, "", "register_full_backward_hook"], [129, 1, 1, "", "register_full_backward_pre_hook"], [129, 1, 1, "", "register_gym"], [129, 1, 1, "", "register_load_state_dict_post_hook"], [129, 1, 1, "", "register_load_state_dict_pre_hook"], [129, 1, 1, "", "register_module"], [129, 1, 1, "", "register_parameter"], [129, 1, 1, "", "register_state_dict_post_hook"], [129, 1, 1, "", "register_state_dict_pre_hook"], [129, 1, 1, "", "requires_grad_"], [129, 1, 1, "", "reset"], [129, 2, 1, "", "reset_keys"], [129, 2, 1, "", "reward_key"], [129, 2, 1, "", "reward_keys"], [129, 2, 1, "", "reward_spec"], [129, 2, 1, "", "reward_spec_unbatched"], [129, 1, 1, "", "rollout"], [129, 1, 1, "", "set_extra_state"], [129, 1, 1, "", "set_info_dict_reader"], [129, 1, 1, "", "set_seed"], [129, 1, 1, "", "set_spec_lock_"], [129, 1, 1, "", "set_submodule"], [129, 2, 1, "", "shape"], [129, 1, 1, "", "share_memory"], [129, 2, 1, "", "specs"], [129, 1, 1, "", "state_dict"], [129, 2, 1, "", "state_keys"], [129, 2, 1, "", "state_spec"], [129, 2, 1, "", "state_spec_unbatched"], [129, 1, 1, "", "step"], [129, 1, 1, "", "step_and_maybe_reset"], [129, 1, 1, "", "step_mdp"], [129, 1, 1, "", "to"], [129, 1, 1, "", "to_empty"], [129, 1, 1, "", "train"], [129, 1, 1, "", "type"], [129, 1, 1, "", "xpu"], [129, 1, 1, "", "zero_grad"]], "torchrl.envs.LLMHashingEnv": [[137, 2, 1, "", "action_key"], [137, 2, 1, "", "action_keys"], [137, 2, 1, "", "action_spec"], [137, 2, 1, "", "action_spec_unbatched"], [137, 1, 1, "", "add_module"], [137, 1, 1, "", "add_truncated_keys"], [137, 1, 1, "", "all_actions"], [137, 1, 1, "", "any_done"], [137, 1, 1, "", "append_transform"], [137, 1, 1, "", "apply"], [137, 1, 1, "", "auto_specs_"], [137, 2, 1, "", "batch_dims"], [137, 2, 1, "", "batch_locked"], [137, 2, 1, "", "batch_size"], [137, 1, 1, "", "bfloat16"], [137, 1, 1, "", "buffers"], [137, 1, 1, "", "cardinality"], [137, 1, 1, "", "check_env_specs"], [137, 1, 1, "", "children"], [137, 1, 1, "", "compile"], [137, 1, 1, "", "cpu"], [137, 1, 1, "", "cuda"], [137, 2, 1, "", "done_key"], [137, 2, 1, "", "done_keys"], [137, 2, 1, "", "done_keys_groups"], [137, 2, 1, "", "done_spec"], [137, 2, 1, "", "done_spec_unbatched"], [137, 1, 1, "", "double"], [137, 1, 1, "", "empty_cache"], [137, 1, 1, "", "eval"], [137, 1, 1, "", "extra_repr"], [137, 1, 1, "", "fake_tensordict"], [137, 1, 1, "", "float"], [137, 1, 1, "", "forward"], [137, 2, 1, "", "full_action_spec"], [137, 2, 1, "", "full_action_spec_unbatched"], [137, 2, 1, "", "full_done_spec"], [137, 2, 1, "", "full_done_spec_unbatched"], [137, 2, 1, "", "full_observation_spec_unbatched"], [137, 2, 1, "", "full_reward_spec"], [137, 2, 1, "", "full_reward_spec_unbatched"], [137, 2, 1, "", "full_state_spec"], [137, 2, 1, "", "full_state_spec_unbatched"], [137, 1, 1, "", "get_buffer"], [137, 1, 1, "", "get_extra_state"], [137, 1, 1, "", "get_parameter"], [137, 1, 1, "", "get_submodule"], [137, 1, 1, "", "half"], [137, 2, 1, "", "input_spec"], [137, 2, 1, "", "input_spec_unbatched"], [137, 1, 1, "", "ipu"], [137, 2, 1, "", "is_spec_locked"], [137, 1, 1, "", "load_state_dict"], [137, 1, 1, "", "make_tensordict"], [137, 1, 1, "", "maybe_reset"], [137, 1, 1, "", "modules"], [137, 1, 1, "", "mtia"], [137, 1, 1, "", "named_buffers"], [137, 1, 1, "", "named_children"], [137, 1, 1, "", "named_modules"], [137, 1, 1, "", "named_parameters"], [137, 2, 1, "", "observation_keys"], [137, 2, 1, "", "observation_spec"], [137, 2, 1, "", "observation_spec_unbatched"], [137, 2, 1, "", "output_spec"], [137, 2, 1, "", "output_spec_unbatched"], [137, 1, 1, "", "parameters"], [137, 1, 1, "", "rand_action"], [137, 1, 1, "", "rand_step"], [137, 1, 1, "", "register_backward_hook"], [137, 1, 1, "", "register_buffer"], [137, 1, 1, "", "register_forward_hook"], [137, 1, 1, "", "register_forward_pre_hook"], [137, 1, 1, "", "register_full_backward_hook"], [137, 1, 1, "", "register_full_backward_pre_hook"], [137, 1, 1, "", "register_gym"], [137, 1, 1, "", "register_load_state_dict_post_hook"], [137, 1, 1, "", "register_load_state_dict_pre_hook"], [137, 1, 1, "", "register_module"], [137, 1, 1, "", "register_parameter"], [137, 1, 1, "", "register_state_dict_post_hook"], [137, 1, 1, "", "register_state_dict_pre_hook"], [137, 1, 1, "", "requires_grad_"], [137, 1, 1, "", "reset"], [137, 2, 1, "", "reset_keys"], [137, 2, 1, "", "reward_key"], [137, 2, 1, "", "reward_keys"], [137, 2, 1, "", "reward_spec"], [137, 2, 1, "", "reward_spec_unbatched"], [137, 1, 1, "", "rollout"], [137, 1, 1, "", "set_extra_state"], [137, 1, 1, "", "set_seed"], [137, 1, 1, "", "set_spec_lock_"], [137, 1, 1, "", "set_submodule"], [137, 2, 1, "", "shape"], [137, 1, 1, "", "share_memory"], [137, 2, 1, "", "specs"], [137, 1, 1, "", "state_dict"], [137, 2, 1, "", "state_keys"], [137, 2, 1, "", "state_spec"], [137, 2, 1, "", "state_spec_unbatched"], [137, 1, 1, "", "step"], [137, 1, 1, "", "step_and_maybe_reset"], [137, 1, 1, "", "step_mdp"], [137, 1, 1, "", "to"], [137, 1, 1, "", "to_empty"], [137, 1, 1, "", "train"], [137, 1, 1, "", "type"], [137, 1, 1, "", "xpu"], [137, 1, 1, "", "zero_grad"]], "torchrl.envs.ParallelEnv": [[149, 2, 1, "", "action_key"], [149, 2, 1, "", "action_keys"], [149, 2, 1, "", "action_spec"], [149, 2, 1, "", "action_spec_unbatched"], [149, 1, 1, "", "add_module"], [149, 1, 1, "", "add_truncated_keys"], [149, 1, 1, "", "all_actions"], [149, 1, 1, "", "any_done"], [149, 1, 1, "", "append_transform"], [149, 1, 1, "", "apply"], [149, 1, 1, "", "auto_specs_"], [149, 2, 1, "", "batch_dims"], [149, 2, 1, "", "batch_locked"], [149, 2, 1, "", "batch_size"], [149, 1, 1, "", "bfloat16"], [149, 1, 1, "", "buffers"], [149, 1, 1, "", "cardinality"], [149, 1, 1, "", "check_env_specs"], [149, 1, 1, "", "children"], [149, 1, 1, "", "compile"], [149, 1, 1, "", "cpu"], [149, 1, 1, "", "cuda"], [149, 2, 1, "", "done_key"], [149, 2, 1, "", "done_keys"], [149, 2, 1, "", "done_keys_groups"], [149, 2, 1, "", "done_spec"], [149, 2, 1, "", "done_spec_unbatched"], [149, 1, 1, "", "double"], [149, 1, 1, "", "empty_cache"], [149, 1, 1, "", "eval"], [149, 1, 1, "", "extra_repr"], [149, 1, 1, "", "fake_tensordict"], [149, 1, 1, "", "float"], [149, 1, 1, "", "forward"], [149, 2, 1, "", "full_action_spec"], [149, 2, 1, "", "full_action_spec_unbatched"], [149, 2, 1, "", "full_done_spec"], [149, 2, 1, "", "full_done_spec_unbatched"], [149, 2, 1, "", "full_observation_spec_unbatched"], [149, 2, 1, "", "full_reward_spec"], [149, 2, 1, "", "full_reward_spec_unbatched"], [149, 2, 1, "", "full_state_spec"], [149, 2, 1, "", "full_state_spec_unbatched"], [149, 1, 1, "", "get_buffer"], [149, 1, 1, "", "get_extra_state"], [149, 1, 1, "", "get_parameter"], [149, 1, 1, "", "get_submodule"], [149, 1, 1, "", "half"], [149, 2, 1, "", "input_spec"], [149, 2, 1, "", "input_spec_unbatched"], [149, 1, 1, "", "ipu"], [149, 2, 1, "", "is_spec_locked"], [149, 1, 1, "", "load_state_dict"], [149, 1, 1, "", "maybe_reset"], [149, 1, 1, "", "modules"], [149, 1, 1, "", "mtia"], [149, 1, 1, "", "named_buffers"], [149, 1, 1, "", "named_children"], [149, 1, 1, "", "named_modules"], [149, 1, 1, "", "named_parameters"], [149, 2, 1, "", "observation_keys"], [149, 2, 1, "", "observation_spec"], [149, 2, 1, "", "observation_spec_unbatched"], [149, 2, 1, "", "output_spec"], [149, 2, 1, "", "output_spec_unbatched"], [149, 1, 1, "", "parameters"], [149, 1, 1, "", "rand_action"], [149, 1, 1, "", "rand_step"], [149, 1, 1, "", "register_backward_hook"], [149, 1, 1, "", "register_buffer"], [149, 1, 1, "", "register_forward_hook"], [149, 1, 1, "", "register_forward_pre_hook"], [149, 1, 1, "", "register_full_backward_hook"], [149, 1, 1, "", "register_full_backward_pre_hook"], [149, 1, 1, "", "register_gym"], [149, 1, 1, "", "register_load_state_dict_post_hook"], [149, 1, 1, "", "register_load_state_dict_pre_hook"], [149, 1, 1, "", "register_module"], [149, 1, 1, "", "register_parameter"], [149, 1, 1, "", "register_state_dict_post_hook"], [149, 1, 1, "", "register_state_dict_pre_hook"], [149, 1, 1, "", "requires_grad_"], [149, 1, 1, "", "reset"], [149, 2, 1, "", "reset_keys"], [149, 2, 1, "", "reward_key"], [149, 2, 1, "", "reward_keys"], [149, 2, 1, "", "reward_spec"], [149, 2, 1, "", "reward_spec_unbatched"], [149, 1, 1, "", "rollout"], [149, 1, 1, "", "set_extra_state"], [149, 1, 1, "", "set_seed"], [149, 1, 1, "", "set_spec_lock_"], [149, 1, 1, "", "set_submodule"], [149, 2, 1, "", "shape"], [149, 1, 1, "", "share_memory"], [149, 2, 1, "", "specs"], [149, 1, 1, "", "state_dict"], [149, 2, 1, "", "state_keys"], [149, 2, 1, "", "state_spec"], [149, 2, 1, "", "state_spec_unbatched"], [149, 1, 1, "", "step"], [149, 1, 1, "", "step_and_maybe_reset"], [149, 1, 1, "", "step_mdp"], [149, 1, 1, "", "to"], [149, 1, 1, "", "to_empty"], [149, 1, 1, "", "train"], [149, 1, 1, "", "type"], [149, 1, 1, "", "update_kwargs"], [149, 1, 1, "", "xpu"], [149, 1, 1, "", "zero_grad"]], "torchrl.envs.PendulumEnv": [[150, 2, 1, "", "action_key"], [150, 2, 1, "", "action_keys"], [150, 2, 1, "", "action_spec"], [150, 2, 1, "", "action_spec_unbatched"], [150, 1, 1, "", "add_module"], [150, 1, 1, "", "add_truncated_keys"], [150, 1, 1, "", "all_actions"], [150, 1, 1, "", "any_done"], [150, 1, 1, "", "append_transform"], [150, 1, 1, "", "apply"], [150, 1, 1, "", "auto_specs_"], [150, 2, 1, "", "batch_dims"], [150, 2, 1, "", "batch_size"], [150, 1, 1, "", "bfloat16"], [150, 1, 1, "", "buffers"], [150, 1, 1, "", "cardinality"], [150, 1, 1, "", "check_env_specs"], [150, 1, 1, "", "children"], [150, 1, 1, "", "compile"], [150, 1, 1, "", "cpu"], [150, 1, 1, "", "cuda"], [150, 2, 1, "", "done_key"], [150, 2, 1, "", "done_keys"], [150, 2, 1, "", "done_keys_groups"], [150, 2, 1, "", "done_spec"], [150, 2, 1, "", "done_spec_unbatched"], [150, 1, 1, "", "double"], [150, 1, 1, "", "empty_cache"], [150, 1, 1, "", "eval"], [150, 1, 1, "", "extra_repr"], [150, 1, 1, "", "fake_tensordict"], [150, 1, 1, "", "float"], [150, 1, 1, "", "forward"], [150, 2, 1, "", "full_action_spec"], [150, 2, 1, "", "full_action_spec_unbatched"], [150, 2, 1, "", "full_done_spec"], [150, 2, 1, "", "full_done_spec_unbatched"], [150, 2, 1, "", "full_observation_spec_unbatched"], [150, 2, 1, "", "full_reward_spec"], [150, 2, 1, "", "full_reward_spec_unbatched"], [150, 2, 1, "", "full_state_spec"], [150, 2, 1, "", "full_state_spec_unbatched"], [150, 1, 1, "", "gen_params"], [150, 1, 1, "", "get_buffer"], [150, 1, 1, "", "get_extra_state"], [150, 1, 1, "", "get_parameter"], [150, 1, 1, "", "get_submodule"], [150, 1, 1, "", "half"], [150, 2, 1, "", "input_spec"], [150, 2, 1, "", "input_spec_unbatched"], [150, 1, 1, "", "ipu"], [150, 2, 1, "", "is_spec_locked"], [150, 1, 1, "", "load_state_dict"], [150, 1, 1, "", "maybe_reset"], [150, 1, 1, "", "modules"], [150, 1, 1, "", "mtia"], [150, 1, 1, "", "named_buffers"], [150, 1, 1, "", "named_children"], [150, 1, 1, "", "named_modules"], [150, 1, 1, "", "named_parameters"], [150, 2, 1, "", "observation_keys"], [150, 2, 1, "", "observation_spec"], [150, 2, 1, "", "observation_spec_unbatched"], [150, 2, 1, "", "output_spec"], [150, 2, 1, "", "output_spec_unbatched"], [150, 1, 1, "", "parameters"], [150, 1, 1, "", "rand_action"], [150, 1, 1, "", "rand_step"], [150, 1, 1, "", "register_backward_hook"], [150, 1, 1, "", "register_buffer"], [150, 1, 1, "", "register_forward_hook"], [150, 1, 1, "", "register_forward_pre_hook"], [150, 1, 1, "", "register_full_backward_hook"], [150, 1, 1, "", "register_full_backward_pre_hook"], [150, 1, 1, "", "register_gym"], [150, 1, 1, "", "register_load_state_dict_post_hook"], [150, 1, 1, "", "register_load_state_dict_pre_hook"], [150, 1, 1, "", "register_module"], [150, 1, 1, "", "register_parameter"], [150, 1, 1, "", "register_state_dict_post_hook"], [150, 1, 1, "", "register_state_dict_pre_hook"], [150, 1, 1, "", "requires_grad_"], [150, 1, 1, "", "reset"], [150, 2, 1, "", "reset_keys"], [150, 2, 1, "", "reward_key"], [150, 2, 1, "", "reward_keys"], [150, 2, 1, "", "reward_spec"], [150, 2, 1, "", "reward_spec_unbatched"], [150, 1, 1, "", "rollout"], [150, 1, 1, "", "set_extra_state"], [150, 1, 1, "", "set_seed"], [150, 1, 1, "", "set_spec_lock_"], [150, 1, 1, "", "set_submodule"], [150, 2, 1, "", "shape"], [150, 1, 1, "", "share_memory"], [150, 2, 1, "", "specs"], [150, 1, 1, "", "state_dict"], [150, 2, 1, "", "state_keys"], [150, 2, 1, "", "state_spec"], [150, 2, 1, "", "state_spec_unbatched"], [150, 1, 1, "", "step"], [150, 1, 1, "", "step_and_maybe_reset"], [150, 1, 1, "", "step_mdp"], [150, 1, 1, "", "to"], [150, 1, 1, "", "to_empty"], [150, 1, 1, "", "train"], [150, 1, 1, "", "type"], [150, 1, 1, "", "xpu"], [150, 1, 1, "", "zero_grad"]], "torchrl.envs.ProcessorAsyncEnvPool": [[153, 1, 1, "", "_setup"], [153, 2, 1, "", "action_key"], [153, 2, 1, "", "action_keys"], [153, 2, 1, "", "action_spec"], [153, 2, 1, "", "action_spec_unbatched"], [153, 1, 1, "", "add_module"], [153, 1, 1, "", "add_truncated_keys"], [153, 1, 1, "", "all_actions"], [153, 1, 1, "", "any_done"], [153, 1, 1, "", "append_transform"], [153, 1, 1, "", "apply"], [153, 1, 1, "", "async_reset_recv"], [153, 1, 1, "", "async_reset_send"], [153, 1, 1, "", "async_step_recv"], [153, 1, 1, "", "async_step_send"], [153, 1, 1, "", "auto_specs_"], [153, 2, 1, "", "batch_dims"], [153, 2, 1, "", "batch_locked"], [153, 2, 1, "", "batch_size"], [153, 1, 1, "", "bfloat16"], [153, 1, 1, "", "buffers"], [153, 1, 1, "", "cardinality"], [153, 1, 1, "", "check_env_specs"], [153, 1, 1, "", "children"], [153, 1, 1, "", "compile"], [153, 1, 1, "", "cpu"], [153, 1, 1, "", "cuda"], [153, 2, 1, "", "done_key"], [153, 2, 1, "", "done_keys"], [153, 2, 1, "", "done_keys_groups"], [153, 2, 1, "", "done_spec"], [153, 2, 1, "", "done_spec_unbatched"], [153, 1, 1, "", "double"], [153, 1, 1, "", "empty_cache"], [153, 1, 1, "", "eval"], [153, 1, 1, "", "extra_repr"], [153, 1, 1, "", "fake_tensordict"], [153, 1, 1, "", "float"], [153, 1, 1, "", "forward"], [153, 2, 1, "", "full_action_spec"], [153, 2, 1, "", "full_action_spec_unbatched"], [153, 2, 1, "", "full_done_spec"], [153, 2, 1, "", "full_done_spec_unbatched"], [153, 2, 1, "", "full_observation_spec_unbatched"], [153, 2, 1, "", "full_reward_spec"], [153, 2, 1, "", "full_reward_spec_unbatched"], [153, 2, 1, "", "full_state_spec"], [153, 2, 1, "", "full_state_spec_unbatched"], [153, 1, 1, "", "get_buffer"], [153, 1, 1, "", "get_extra_state"], [153, 1, 1, "", "get_parameter"], [153, 1, 1, "", "get_submodule"], [153, 1, 1, "", "half"], [153, 2, 1, "", "input_spec"], [153, 2, 1, "", "input_spec_unbatched"], [153, 1, 1, "", "ipu"], [153, 2, 1, "", "is_spec_locked"], [153, 1, 1, "", "load_state_dict"], [153, 1, 1, "", "maybe_reset"], [153, 1, 1, "", "modules"], [153, 1, 1, "", "mtia"], [153, 1, 1, "", "named_buffers"], [153, 1, 1, "", "named_children"], [153, 1, 1, "", "named_modules"], [153, 1, 1, "", "named_parameters"], [153, 2, 1, "", "observation_keys"], [153, 2, 1, "", "observation_spec"], [153, 2, 1, "", "observation_spec_unbatched"], [153, 2, 1, "", "output_spec"], [153, 2, 1, "", "output_spec_unbatched"], [153, 1, 1, "", "parameters"], [153, 1, 1, "", "rand_action"], [153, 1, 1, "", "rand_step"], [153, 1, 1, "", "register_backward_hook"], [153, 1, 1, "", "register_buffer"], [153, 1, 1, "", "register_forward_hook"], [153, 1, 1, "", "register_forward_pre_hook"], [153, 1, 1, "", "register_full_backward_hook"], [153, 1, 1, "", "register_full_backward_pre_hook"], [153, 1, 1, "", "register_gym"], [153, 1, 1, "", "register_load_state_dict_post_hook"], [153, 1, 1, "", "register_load_state_dict_pre_hook"], [153, 1, 1, "", "register_module"], [153, 1, 1, "", "register_parameter"], [153, 1, 1, "", "register_state_dict_post_hook"], [153, 1, 1, "", "register_state_dict_pre_hook"], [153, 1, 1, "", "requires_grad_"], [153, 1, 1, "", "reset"], [153, 2, 1, "", "reset_keys"], [153, 2, 1, "", "reward_key"], [153, 2, 1, "", "reward_keys"], [153, 2, 1, "", "reward_spec"], [153, 2, 1, "", "reward_spec_unbatched"], [153, 1, 1, "", "rollout"], [153, 1, 1, "", "set_extra_state"], [153, 1, 1, "", "set_seed"], [153, 1, 1, "", "set_spec_lock_"], [153, 1, 1, "", "set_submodule"], [153, 2, 1, "", "shape"], [153, 1, 1, "", "share_memory"], [153, 1, 1, "", "shutdown"], [153, 2, 1, "", "specs"], [153, 1, 1, "", "state_dict"], [153, 2, 1, "", "state_keys"], [153, 2, 1, "", "state_spec"], [153, 2, 1, "", "state_spec_unbatched"], [153, 1, 1, "", "step"], [153, 1, 1, "", "step_and_maybe_reset"], [153, 1, 1, "", "step_mdp"], [153, 1, 1, "", "to"], [153, 1, 1, "", "to_empty"], [153, 1, 1, "", "train"], [153, 1, 1, "", "type"], [153, 1, 1, "", "xpu"], [153, 1, 1, "", "zero_grad"]], "torchrl.envs.SerialEnv": [[158, 2, 1, "", "action_key"], [158, 2, 1, "", "action_keys"], [158, 2, 1, "", "action_spec"], [158, 2, 1, "", "action_spec_unbatched"], [158, 1, 1, "", "add_module"], [158, 1, 1, "", "add_truncated_keys"], [158, 1, 1, "", "all_actions"], [158, 1, 1, "", "any_done"], [158, 1, 1, "", "append_transform"], [158, 1, 1, "", "apply"], [158, 1, 1, "", "auto_specs_"], [158, 2, 1, "", "batch_dims"], [158, 2, 1, "", "batch_locked"], [158, 2, 1, "", "batch_size"], [158, 1, 1, "", "bfloat16"], [158, 1, 1, "", "buffers"], [158, 1, 1, "", "cardinality"], [158, 1, 1, "", "check_env_specs"], [158, 1, 1, "", "children"], [158, 1, 1, "", "compile"], [158, 1, 1, "", "cpu"], [158, 1, 1, "", "cuda"], [158, 2, 1, "", "done_key"], [158, 2, 1, "", "done_keys"], [158, 2, 1, "", "done_keys_groups"], [158, 2, 1, "", "done_spec"], [158, 2, 1, "", "done_spec_unbatched"], [158, 1, 1, "", "double"], [158, 1, 1, "", "empty_cache"], [158, 1, 1, "", "eval"], [158, 1, 1, "", "extra_repr"], [158, 1, 1, "", "fake_tensordict"], [158, 1, 1, "", "float"], [158, 1, 1, "", "forward"], [158, 2, 1, "", "full_action_spec"], [158, 2, 1, "", "full_action_spec_unbatched"], [158, 2, 1, "", "full_done_spec"], [158, 2, 1, "", "full_done_spec_unbatched"], [158, 2, 1, "", "full_observation_spec_unbatched"], [158, 2, 1, "", "full_reward_spec"], [158, 2, 1, "", "full_reward_spec_unbatched"], [158, 2, 1, "", "full_state_spec"], [158, 2, 1, "", "full_state_spec_unbatched"], [158, 1, 1, "", "get_buffer"], [158, 1, 1, "", "get_extra_state"], [158, 1, 1, "", "get_parameter"], [158, 1, 1, "", "get_submodule"], [158, 1, 1, "", "half"], [158, 2, 1, "", "input_spec"], [158, 2, 1, "", "input_spec_unbatched"], [158, 1, 1, "", "ipu"], [158, 2, 1, "", "is_spec_locked"], [158, 1, 1, "", "load_state_dict"], [158, 1, 1, "", "maybe_reset"], [158, 1, 1, "", "modules"], [158, 1, 1, "", "mtia"], [158, 1, 1, "", "named_buffers"], [158, 1, 1, "", "named_children"], [158, 1, 1, "", "named_modules"], [158, 1, 1, "", "named_parameters"], [158, 2, 1, "", "observation_keys"], [158, 2, 1, "", "observation_spec"], [158, 2, 1, "", "observation_spec_unbatched"], [158, 2, 1, "", "output_spec"], [158, 2, 1, "", "output_spec_unbatched"], [158, 1, 1, "", "parameters"], [158, 1, 1, "", "rand_action"], [158, 1, 1, "", "rand_step"], [158, 1, 1, "", "register_backward_hook"], [158, 1, 1, "", "register_buffer"], [158, 1, 1, "", "register_forward_hook"], [158, 1, 1, "", "register_forward_pre_hook"], [158, 1, 1, "", "register_full_backward_hook"], [158, 1, 1, "", "register_full_backward_pre_hook"], [158, 1, 1, "", "register_gym"], [158, 1, 1, "", "register_load_state_dict_post_hook"], [158, 1, 1, "", "register_load_state_dict_pre_hook"], [158, 1, 1, "", "register_module"], [158, 1, 1, "", "register_parameter"], [158, 1, 1, "", "register_state_dict_post_hook"], [158, 1, 1, "", "register_state_dict_pre_hook"], [158, 1, 1, "", "requires_grad_"], [158, 1, 1, "", "reset"], [158, 2, 1, "", "reset_keys"], [158, 2, 1, "", "reward_key"], [158, 2, 1, "", "reward_keys"], [158, 2, 1, "", "reward_spec"], [158, 2, 1, "", "reward_spec_unbatched"], [158, 1, 1, "", "rollout"], [158, 1, 1, "", "set_extra_state"], [158, 1, 1, "", "set_seed"], [158, 1, 1, "", "set_spec_lock_"], [158, 1, 1, "", "set_submodule"], [158, 2, 1, "", "shape"], [158, 1, 1, "", "share_memory"], [158, 2, 1, "", "specs"], [158, 1, 1, "", "state_dict"], [158, 2, 1, "", "state_keys"], [158, 2, 1, "", "state_spec"], [158, 2, 1, "", "state_spec_unbatched"], [158, 1, 1, "", "step"], [158, 1, 1, "", "step_and_maybe_reset"], [158, 1, 1, "", "step_mdp"], [158, 1, 1, "", "to"], [158, 1, 1, "", "to_empty"], [158, 1, 1, "", "train"], [158, 1, 1, "", "type"], [158, 1, 1, "", "update_kwargs"], [158, 1, 1, "", "xpu"], [158, 1, 1, "", "zero_grad"]], "torchrl.envs.ThreadingAsyncEnvPool": [[159, 1, 1, "", "_setup"], [159, 2, 1, "", "action_key"], [159, 2, 1, "", "action_keys"], [159, 2, 1, "", "action_spec"], [159, 2, 1, "", "action_spec_unbatched"], [159, 1, 1, "", "add_module"], [159, 1, 1, "", "add_truncated_keys"], [159, 1, 1, "", "all_actions"], [159, 1, 1, "", "any_done"], [159, 1, 1, "", "append_transform"], [159, 1, 1, "", "apply"], [159, 1, 1, "", "async_reset_recv"], [159, 1, 1, "", "async_reset_send"], [159, 1, 1, "", "async_step_recv"], [159, 1, 1, "", "async_step_send"], [159, 1, 1, "", "auto_specs_"], [159, 2, 1, "", "batch_dims"], [159, 2, 1, "", "batch_locked"], [159, 2, 1, "", "batch_size"], [159, 1, 1, "", "bfloat16"], [159, 1, 1, "", "buffers"], [159, 1, 1, "", "cardinality"], [159, 1, 1, "", "check_env_specs"], [159, 1, 1, "", "children"], [159, 1, 1, "", "compile"], [159, 1, 1, "", "cpu"], [159, 1, 1, "", "cuda"], [159, 2, 1, "", "done_key"], [159, 2, 1, "", "done_keys"], [159, 2, 1, "", "done_keys_groups"], [159, 2, 1, "", "done_spec"], [159, 2, 1, "", "done_spec_unbatched"], [159, 1, 1, "", "double"], [159, 1, 1, "", "empty_cache"], [159, 1, 1, "", "eval"], [159, 1, 1, "", "extra_repr"], [159, 1, 1, "", "fake_tensordict"], [159, 1, 1, "", "float"], [159, 1, 1, "", "forward"], [159, 2, 1, "", "full_action_spec"], [159, 2, 1, "", "full_action_spec_unbatched"], [159, 2, 1, "", "full_done_spec"], [159, 2, 1, "", "full_done_spec_unbatched"], [159, 2, 1, "", "full_observation_spec_unbatched"], [159, 2, 1, "", "full_reward_spec"], [159, 2, 1, "", "full_reward_spec_unbatched"], [159, 2, 1, "", "full_state_spec"], [159, 2, 1, "", "full_state_spec_unbatched"], [159, 1, 1, "", "get_buffer"], [159, 1, 1, "", "get_extra_state"], [159, 1, 1, "", "get_parameter"], [159, 1, 1, "", "get_submodule"], [159, 1, 1, "", "half"], [159, 2, 1, "", "input_spec"], [159, 2, 1, "", "input_spec_unbatched"], [159, 1, 1, "", "ipu"], [159, 2, 1, "", "is_spec_locked"], [159, 1, 1, "", "load_state_dict"], [159, 1, 1, "", "maybe_reset"], [159, 1, 1, "", "modules"], [159, 1, 1, "", "mtia"], [159, 1, 1, "", "named_buffers"], [159, 1, 1, "", "named_children"], [159, 1, 1, "", "named_modules"], [159, 1, 1, "", "named_parameters"], [159, 2, 1, "", "observation_keys"], [159, 2, 1, "", "observation_spec"], [159, 2, 1, "", "observation_spec_unbatched"], [159, 2, 1, "", "output_spec"], [159, 2, 1, "", "output_spec_unbatched"], [159, 1, 1, "", "parameters"], [159, 1, 1, "", "rand_action"], [159, 1, 1, "", "rand_step"], [159, 1, 1, "", "register_backward_hook"], [159, 1, 1, "", "register_buffer"], [159, 1, 1, "", "register_forward_hook"], [159, 1, 1, "", "register_forward_pre_hook"], [159, 1, 1, "", "register_full_backward_hook"], [159, 1, 1, "", "register_full_backward_pre_hook"], [159, 1, 1, "", "register_gym"], [159, 1, 1, "", "register_load_state_dict_post_hook"], [159, 1, 1, "", "register_load_state_dict_pre_hook"], [159, 1, 1, "", "register_module"], [159, 1, 1, "", "register_parameter"], [159, 1, 1, "", "register_state_dict_post_hook"], [159, 1, 1, "", "register_state_dict_pre_hook"], [159, 1, 1, "", "requires_grad_"], [159, 1, 1, "", "reset"], [159, 2, 1, "", "reset_keys"], [159, 2, 1, "", "reward_key"], [159, 2, 1, "", "reward_keys"], [159, 2, 1, "", "reward_spec"], [159, 2, 1, "", "reward_spec_unbatched"], [159, 1, 1, "", "rollout"], [159, 1, 1, "", "set_extra_state"], [159, 1, 1, "", "set_seed"], [159, 1, 1, "", "set_spec_lock_"], [159, 1, 1, "", "set_submodule"], [159, 2, 1, "", "shape"], [159, 1, 1, "", "share_memory"], [159, 1, 1, "", "shutdown"], [159, 2, 1, "", "specs"], [159, 1, 1, "", "state_dict"], [159, 2, 1, "", "state_keys"], [159, 2, 1, "", "state_spec"], [159, 2, 1, "", "state_spec_unbatched"], [159, 1, 1, "", "step"], [159, 1, 1, "", "step_and_maybe_reset"], [159, 1, 1, "", "step_mdp"], [159, 1, 1, "", "to"], [159, 1, 1, "", "to_empty"], [159, 1, 1, "", "train"], [159, 1, 1, "", "type"], [159, 1, 1, "", "xpu"], [159, 1, 1, "", "zero_grad"]], "torchrl.envs.TicTacToeEnv": [[160, 2, 1, "", "action_key"], [160, 2, 1, "", "action_keys"], [160, 2, 1, "", "action_spec"], [160, 2, 1, "", "action_spec_unbatched"], [160, 1, 1, "", "add_module"], [160, 1, 1, "", "add_truncated_keys"], [160, 1, 1, "", "all_actions"], [160, 1, 1, "", "any_done"], [160, 1, 1, "", "append_transform"], [160, 1, 1, "", "apply"], [160, 1, 1, "", "auto_specs_"], [160, 2, 1, "", "batch_dims"], [160, 2, 1, "", "batch_size"], [160, 1, 1, "", "bfloat16"], [160, 1, 1, "", "buffers"], [160, 1, 1, "", "cardinality"], [160, 1, 1, "", "check_env_specs"], [160, 1, 1, "", "children"], [160, 1, 1, "", "compile"], [160, 1, 1, "", "cpu"], [160, 1, 1, "", "cuda"], [160, 2, 1, "", "done_key"], [160, 2, 1, "", "done_keys"], [160, 2, 1, "", "done_keys_groups"], [160, 2, 1, "", "done_spec"], [160, 2, 1, "", "done_spec_unbatched"], [160, 1, 1, "", "double"], [160, 1, 1, "", "empty_cache"], [160, 1, 1, "", "eval"], [160, 1, 1, "", "extra_repr"], [160, 1, 1, "", "fake_tensordict"], [160, 1, 1, "", "float"], [160, 1, 1, "", "forward"], [160, 2, 1, "", "full_action_spec"], [160, 2, 1, "", "full_action_spec_unbatched"], [160, 2, 1, "", "full_done_spec"], [160, 2, 1, "", "full_done_spec_unbatched"], [160, 2, 1, "", "full_observation_spec_unbatched"], [160, 2, 1, "", "full_reward_spec"], [160, 2, 1, "", "full_reward_spec_unbatched"], [160, 2, 1, "", "full_state_spec"], [160, 2, 1, "", "full_state_spec_unbatched"], [160, 1, 1, "", "get_buffer"], [160, 1, 1, "", "get_extra_state"], [160, 1, 1, "", "get_parameter"], [160, 1, 1, "", "get_submodule"], [160, 1, 1, "", "half"], [160, 2, 1, "", "input_spec"], [160, 2, 1, "", "input_spec_unbatched"], [160, 1, 1, "", "ipu"], [160, 2, 1, "", "is_spec_locked"], [160, 1, 1, "", "load_state_dict"], [160, 1, 1, "", "maybe_reset"], [160, 1, 1, "", "modules"], [160, 1, 1, "", "mtia"], [160, 1, 1, "", "named_buffers"], [160, 1, 1, "", "named_children"], [160, 1, 1, "", "named_modules"], [160, 1, 1, "", "named_parameters"], [160, 2, 1, "", "observation_keys"], [160, 2, 1, "", "observation_spec"], [160, 2, 1, "", "observation_spec_unbatched"], [160, 2, 1, "", "output_spec"], [160, 2, 1, "", "output_spec_unbatched"], [160, 1, 1, "", "parameters"], [160, 1, 1, "", "rand_action"], [160, 1, 1, "", "rand_step"], [160, 1, 1, "", "register_backward_hook"], [160, 1, 1, "", "register_buffer"], [160, 1, 1, "", "register_forward_hook"], [160, 1, 1, "", "register_forward_pre_hook"], [160, 1, 1, "", "register_full_backward_hook"], [160, 1, 1, "", "register_full_backward_pre_hook"], [160, 1, 1, "", "register_gym"], [160, 1, 1, "", "register_load_state_dict_post_hook"], [160, 1, 1, "", "register_load_state_dict_pre_hook"], [160, 1, 1, "", "register_module"], [160, 1, 1, "", "register_parameter"], [160, 1, 1, "", "register_state_dict_post_hook"], [160, 1, 1, "", "register_state_dict_pre_hook"], [160, 1, 1, "", "requires_grad_"], [160, 1, 1, "", "reset"], [160, 2, 1, "", "reset_keys"], [160, 2, 1, "", "reward_key"], [160, 2, 1, "", "reward_keys"], [160, 2, 1, "", "reward_spec"], [160, 2, 1, "", "reward_spec_unbatched"], [160, 1, 1, "", "rollout"], [160, 1, 1, "", "set_extra_state"], [160, 1, 1, "", "set_seed"], [160, 1, 1, "", "set_spec_lock_"], [160, 1, 1, "", "set_submodule"], [160, 2, 1, "", "shape"], [160, 1, 1, "", "share_memory"], [160, 2, 1, "", "specs"], [160, 1, 1, "", "state_dict"], [160, 2, 1, "", "state_keys"], [160, 2, 1, "", "state_spec"], [160, 2, 1, "", "state_spec_unbatched"], [160, 1, 1, "", "step"], [160, 1, 1, "", "step_and_maybe_reset"], [160, 1, 1, "", "step_mdp"], [160, 1, 1, "", "to"], [160, 1, 1, "", "to_empty"], [160, 1, 1, "", "train"], [160, 1, 1, "", "type"], [160, 1, 1, "", "xpu"], [160, 1, 1, "", "zero_grad"]], "torchrl.envs.model_based.dreamer": [[171, 3, 1, "", "DreamerDecoder"], [172, 3, 1, "", "DreamerEnv"]], "torchrl.envs.transforms": [[178, 0, 1, "", "ActionDiscretizer"], [179, 0, 1, "", "ActionMask"], [180, 0, 1, "", "AutoResetEnv"], [181, 0, 1, "", "AutoResetTransform"], [182, 0, 1, "", "BatchSizeTransform"], [183, 0, 1, "", "BinarizeReward"], [184, 0, 1, "", "BurnInTransform"], [185, 0, 1, "", "CatFrames"], [186, 0, 1, "", "CatTensors"], [187, 0, 1, "", "CenterCrop"], [188, 0, 1, "", "ClipTransform"], [189, 0, 1, "", "Compose"], [190, 0, 1, "", "ConditionalSkip"], [191, 0, 1, "", "Crop"], [192, 0, 1, "", "DTypeCastTransform"], [193, 0, 1, "", "DeviceCastTransform"], [194, 0, 1, "", "DiscreteActionProjection"], [195, 0, 1, "", "DoubleToFloat"], [196, 0, 1, "", "EndOfLifeTransform"], [197, 0, 1, "", "ExcludeTransform"], [198, 0, 1, "", "FiniteTensorDictCheck"], [199, 0, 1, "", "FlattenObservation"], [200, 0, 1, "", "FrameSkipTransform"], [201, 0, 1, "", "GrayScale"], [202, 0, 1, "", "Hash"], [203, 0, 1, "", "InitTracker"], [204, 0, 1, "", "KLRewardTransform"], [205, 0, 1, "", "LineariseRewards"], [206, 0, 1, "", "MultiAction"], [207, 0, 1, "", "NoopResetEnv"], [208, 0, 1, "", "ObservationNorm"], [209, 0, 1, "", "ObservationTransform"], [210, 0, 1, "", "PermuteTransform"], [211, 0, 1, "", "PinMemoryTransform"], [212, 0, 1, "", "R3MTransform"], [213, 0, 1, "", "RandomCropTensorDict"], [214, 0, 1, "", "RemoveEmptySpecs"], [215, 0, 1, "", "RenameTransform"], [216, 0, 1, "", "Resize"], [217, 0, 1, "", "Reward2GoTransform"], [218, 0, 1, "", "RewardClipping"], [219, 0, 1, "", "RewardScaling"], [220, 0, 1, "", "RewardSum"], [221, 0, 1, "", "SelectTransform"], [222, 0, 1, "", "SignTransform"], [223, 0, 1, "", "SqueezeTransform"], [224, 0, 1, "", "Stack"], [225, 0, 1, "", "StepCounter"], [226, 0, 1, "", "TargetReturn"], [227, 0, 1, "", "TensorDictPrimer"], [228, 0, 1, "", "TimeMaxPool"], [229, 0, 1, "", "Timer"], [230, 0, 1, "", "ToTensorImage"], [231, 0, 1, "", "Tokenizer"], [232, 0, 1, "", "TrajCounter"], [233, 0, 1, "", "Transform"], [234, 0, 1, "", "TransformedEnv"], [235, 0, 1, "", "UnaryTransform"], [236, 0, 1, "", "UnsqueezeTransform"], [237, 0, 1, "", "VC1Transform"], [238, 0, 1, "", "VIPRewardTransform"], [239, 0, 1, "", "VIPTransform"], [240, 0, 1, "", "VecGymEnvTransform"], [241, 0, 1, "", "VecNorm"], [242, 0, 1, "", "VecNormV2"], [243, 0, 1, "", "gSDENoise"]], "torchrl.envs.transforms.ActionDiscretizer": [[178, 0, 1, "", "SamplingStrategy"], [178, 1, 1, "", "inv"], [178, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.ActionMask": [[179, 1, 1, "", "forward"]], "torchrl.envs.transforms.AutoResetEnv": [[180, 1, 1, "", "insert_transform"]], "torchrl.envs.transforms.AutoResetTransform": [[181, 1, 1, "", "forward"]], "torchrl.envs.transforms.BatchSizeTransform": [[182, 1, 1, "", "forward"], [182, 1, 1, "", "transform_env_batch_size"], [182, 1, 1, "", "transform_input_spec"], [182, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.BinarizeReward": [[183, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.BurnInTransform": [[184, 1, 1, "", "forward"]], "torchrl.envs.transforms.CatFrames": [[185, 1, 1, "", "forward"], [185, 1, 1, "", "make_rb_transform_and_sampler"], [185, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CatTensors": [[186, 1, 1, "", "forward"], [186, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CenterCrop": [[187, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ClipTransform": [[188, 1, 1, "", "transform_observation_spec"], [188, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.Compose": [[189, 1, 1, "", "append"], [189, 1, 1, "", "forward"], [189, 1, 1, "", "init"], [189, 1, 1, "", "insert"], [189, 1, 1, "", "to"], [189, 1, 1, "", "transform_action_spec"], [189, 1, 1, "", "transform_env_batch_size"], [189, 1, 1, "", "transform_env_device"], [189, 1, 1, "", "transform_input_spec"], [189, 1, 1, "", "transform_observation_spec"], [189, 1, 1, "", "transform_output_spec"], [189, 1, 1, "", "transform_reward_spec"], [189, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.ConditionalSkip": [[190, 1, 1, "", "forward"]], "torchrl.envs.transforms.Crop": [[191, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.DTypeCastTransform": [[192, 1, 1, "", "forward"], [192, 1, 1, "", "transform_input_spec"], [192, 1, 1, "", "transform_observation_spec"], [192, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.DeviceCastTransform": [[193, 1, 1, "", "forward"], [193, 1, 1, "", "transform_action_spec"], [193, 1, 1, "", "transform_done_spec"], [193, 1, 1, "", "transform_env_device"], [193, 1, 1, "", "transform_input_spec"], [193, 1, 1, "", "transform_observation_spec"], [193, 1, 1, "", "transform_output_spec"], [193, 1, 1, "", "transform_reward_spec"], [193, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.DiscreteActionProjection": [[194, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.EndOfLifeTransform": [[196, 1, 1, "", "forward"], [196, 1, 1, "", "register_keys"], [196, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ExcludeTransform": [[197, 1, 1, "", "forward"], [197, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.FiniteTensorDictCheck": [[198, 1, 1, "", "forward"]], "torchrl.envs.transforms.FlattenObservation": [[199, 1, 1, "", "forward"], [199, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.FrameSkipTransform": [[200, 1, 1, "", "forward"]], "torchrl.envs.transforms.GrayScale": [[201, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Hash": [[202, 1, 1, "", "get_input_from_hash"], [202, 1, 1, "", "reproducible_hash"], [202, 1, 1, "", "state_dict"]], "torchrl.envs.transforms.InitTracker": [[203, 1, 1, "", "forward"], [203, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.KLRewardTransform": [[204, 1, 1, "", "forward"], [204, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.LineariseRewards": [[205, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.MultiAction": [[206, 1, 1, "", "transform_input_spec"], [206, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.ObservationNorm": [[208, 1, 1, "", "init_stats"], [208, 1, 1, "", "transform_action_spec"], [208, 1, 1, "", "transform_observation_spec"], [208, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.PermuteTransform": [[210, 1, 1, "", "transform_input_spec"], [210, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PinMemoryTransform": [[211, 1, 1, "", "forward"]], "torchrl.envs.transforms.R3MTransform": [[212, 1, 1, "", "to"]], "torchrl.envs.transforms.RandomCropTensorDict": [[213, 1, 1, "", "forward"]], "torchrl.envs.transforms.RemoveEmptySpecs": [[214, 1, 1, "", "forward"], [214, 1, 1, "", "transform_input_spec"], [214, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.RenameTransform": [[215, 1, 1, "", "forward"], [215, 1, 1, "", "transform_input_spec"], [215, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.Resize": [[216, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Reward2GoTransform": [[217, 1, 1, "", "forward"]], "torchrl.envs.transforms.RewardClipping": [[218, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardScaling": [[219, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardSum": [[220, 1, 1, "", "forward"], [220, 1, 1, "", "transform_input_spec"], [220, 1, 1, "", "transform_observation_spec"], [220, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.SelectTransform": [[221, 1, 1, "", "forward"], [221, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.SignTransform": [[222, 1, 1, "", "transform_observation_spec"], [222, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.Stack": [[224, 1, 1, "", "forward"], [224, 1, 1, "", "transform_done_spec"], [224, 1, 1, "", "transform_input_spec"], [224, 1, 1, "", "transform_observation_spec"], [224, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.StepCounter": [[225, 1, 1, "", "forward"], [225, 1, 1, "", "transform_input_spec"], [225, 1, 1, "", "transform_observation_spec"], [225, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.TargetReturn": [[226, 1, 1, "", "forward"], [226, 1, 1, "", "transform_input_spec"], [226, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TensorDictPrimer": [[227, 1, 1, "", "forward"], [227, 1, 1, "", "to"], [227, 1, 1, "", "transform_input_spec"], [227, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TimeMaxPool": [[228, 1, 1, "", "forward"], [228, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Timer": [[229, 1, 1, "", "forward"], [229, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ToTensorImage": [[230, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Tokenizer": [[231, 1, 1, "", "forward"], [231, 1, 1, "", "transform_done_spec"], [231, 1, 1, "", "transform_input_spec"], [231, 1, 1, "", "transform_observation_spec"], [231, 1, 1, "", "transform_output_spec"], [231, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.TrajCounter": [[232, 1, 1, "", "forward"], [232, 1, 1, "", "load_state_dict"], [232, 1, 1, "", "state_dict"], [232, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Transform": [[233, 1, 1, "", "clone"], [233, 2, 1, "", "container"], [233, 1, 1, "", "forward"], [233, 1, 1, "", "init"], [233, 1, 1, "", "inv"], [233, 2, 1, "", "parent"], [233, 1, 1, "", "reset_parent"], [233, 1, 1, "", "set_container"], [233, 1, 1, "", "to"], [233, 1, 1, "", "transform_action_spec"], [233, 1, 1, "", "transform_done_spec"], [233, 1, 1, "", "transform_env_batch_size"], [233, 1, 1, "", "transform_env_device"], [233, 1, 1, "", "transform_input_spec"], [233, 1, 1, "", "transform_observation_spec"], [233, 1, 1, "", "transform_output_spec"], [233, 1, 1, "", "transform_reward_spec"], [233, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.TransformedEnv": [[234, 1, 1, "", "add_truncated_keys"], [234, 1, 1, "", "append_transform"], [234, 2, 1, "", "batch_locked"], [234, 2, 1, "", "batch_size"], [234, 1, 1, "", "empty_cache"], [234, 1, 1, "", "eval"], [234, 2, 1, "", "input_spec"], [234, 1, 1, "", "insert_transform"], [234, 1, 1, "", "load_state_dict"], [234, 2, 1, "", "output_spec"], [234, 1, 1, "", "rand_action"], [234, 1, 1, "", "set_missing_tolerance"], [234, 1, 1, "", "set_seed"], [234, 1, 1, "", "state_dict"], [234, 1, 1, "", "to"], [234, 1, 1, "", "train"]], "torchrl.envs.transforms.UnaryTransform": [[235, 1, 1, "", "transform_action_spec"], [235, 1, 1, "", "transform_done_spec"], [235, 1, 1, "", "transform_input_spec"], [235, 1, 1, "", "transform_observation_spec"], [235, 1, 1, "", "transform_output_spec"], [235, 1, 1, "", "transform_reward_spec"], [235, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.UnsqueezeTransform": [[236, 1, 1, "", "transform_action_spec"], [236, 1, 1, "", "transform_observation_spec"], [236, 1, 1, "", "transform_reward_spec"], [236, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.VC1Transform": [[237, 1, 1, "", "forward"], [237, 1, 1, "", "make_noload_model"], [237, 1, 1, "", "to"], [237, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VIPRewardTransform": [[238, 1, 1, "", "forward"], [238, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.VIPTransform": [[239, 1, 1, "", "to"]], "torchrl.envs.transforms.VecGymEnvTransform": [[240, 1, 1, "", "forward"], [240, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VecNorm": [[241, 1, 1, "", "build_td_for_shared_vecnorm"], [241, 1, 1, "", "forward"], [241, 1, 1, "", "freeze"], [241, 1, 1, "", "frozen_copy"], [241, 1, 1, "", "get_extra_state"], [241, 2, 1, "", "loc"], [241, 2, 1, "", "scale"], [241, 1, 1, "", "set_extra_state"], [241, 2, 1, "", "standard_normal"], [241, 1, 1, "", "to_observation_norm"], [241, 1, 1, "", "transform_observation_spec"], [241, 1, 1, "", "unfreeze"]], "torchrl.envs.transforms.VecNormV2": [[242, 1, 1, "", "clone"], [242, 1, 1, "id0", "freeze"], [242, 1, 1, "id1", "frozen_copy"], [242, 1, 1, "id2", "get_extra_state"], [242, 2, 1, "id3", "loc"], [242, 2, 1, "id4", "scale"], [242, 1, 1, "id5", "set_extra_state"], [242, 2, 1, "id6", "standard_normal"], [242, 1, 1, "", "to_observation_norm"], [242, 1, 1, "id7", "transform_observation_spec"], [242, 1, 1, "id8", "transform_output_spec"], [242, 1, 1, "id9", "transform_reward_spec"], [242, 1, 1, "id10", "unfreeze"]], "torchrl.envs.transforms.rb_transforms": [[244, 0, 1, "", "MultiStepTransform"]], "torchrl.envs.transforms.rb_transforms.MultiStepTransform": [[244, 1, 1, "", "add_module"], [244, 1, 1, "", "apply"], [244, 1, 1, "", "bfloat16"], [244, 1, 1, "", "buffers"], [244, 1, 1, "", "children"], [244, 1, 1, "", "compile"], [244, 2, 1, "", "container"], [244, 1, 1, "", "cpu"], [244, 1, 1, "", "cuda"], [244, 1, 1, "", "double"], [244, 1, 1, "", "eval"], [244, 1, 1, "", "extra_repr"], [244, 1, 1, "", "float"], [244, 1, 1, "", "forward"], [244, 1, 1, "", "get_buffer"], [244, 1, 1, "", "get_extra_state"], [244, 1, 1, "", "get_parameter"], [244, 1, 1, "", "get_submodule"], [244, 1, 1, "", "half"], [244, 1, 1, "", "init"], [244, 1, 1, "", "inv"], [244, 1, 1, "", "ipu"], [244, 1, 1, "", "load_state_dict"], [244, 1, 1, "", "modules"], [244, 1, 1, "", "mtia"], [244, 2, 1, "", "n_steps"], [244, 1, 1, "", "named_buffers"], [244, 1, 1, "", "named_children"], [244, 1, 1, "", "named_modules"], [244, 1, 1, "", "named_parameters"], [244, 1, 1, "", "parameters"], [244, 2, 1, "", "parent"], [244, 1, 1, "", "register_backward_hook"], [244, 1, 1, "", "register_buffer"], [244, 1, 1, "", "register_forward_hook"], [244, 1, 1, "", "register_forward_pre_hook"], [244, 1, 1, "", "register_full_backward_hook"], [244, 1, 1, "", "register_full_backward_pre_hook"], [244, 1, 1, "", "register_load_state_dict_post_hook"], [244, 1, 1, "", "register_load_state_dict_pre_hook"], [244, 1, 1, "", "register_module"], [244, 1, 1, "", "register_parameter"], [244, 1, 1, "", "register_state_dict_post_hook"], [244, 1, 1, "", "register_state_dict_pre_hook"], [244, 1, 1, "", "requires_grad_"], [244, 1, 1, "", "set_extra_state"], [244, 1, 1, "", "set_submodule"], [244, 1, 1, "", "share_memory"], [244, 1, 1, "", "state_dict"], [244, 1, 1, "", "to"], [244, 1, 1, "", "to_empty"], [244, 1, 1, "", "train"], [244, 1, 1, "", "transform_action_spec"], [244, 1, 1, "", "transform_done_spec"], [244, 1, 1, "", "transform_env_batch_size"], [244, 1, 1, "", "transform_env_device"], [244, 1, 1, "", "transform_input_spec"], [244, 1, 1, "", "transform_observation_spec"], [244, 1, 1, "", "transform_output_spec"], [244, 1, 1, "", "transform_reward_spec"], [244, 1, 1, "", "transform_state_spec"], [244, 1, 1, "", "type"], [244, 1, 1, "", "xpu"], [244, 1, 1, "", "zero_grad"]], "torchrl.implement_for": [[245, 1, 1, "", "get_class_that_defined_method"], [245, 1, 1, "", "import_module"], [245, 1, 1, "", "module_set"], [245, 1, 1, "", "reset"]], "torchrl.modules": [[246, 0, 1, "", "AdditiveGaussianModule"], [247, 0, 1, "", "BatchRenorm1d"], [248, 0, 1, "", "CEMPlanner"], [249, 0, 1, "", "ConsistentDropout"], [250, 0, 1, "", "ConsistentDropoutModule"], [251, 0, 1, "", "Conv3dNet"], [252, 0, 1, "", "ConvNet"], [253, 0, 1, "", "DTActor"], [254, 0, 1, "", "DdpgCnnActor"], [255, 0, 1, "", "DdpgCnnQNet"], [256, 0, 1, "", "DdpgMlpActor"], [257, 0, 1, "", "DdpgMlpQNet"], [258, 0, 1, "", "DecisionTransformer"], [259, 0, 1, "", "Delta"], [260, 0, 1, "", "DistributionalDQNnet"], [261, 0, 1, "", "DistributionalQValueHook"], [262, 0, 1, "", "DreamerActor"], [263, 0, 1, "", "DuelingCnnDQNet"], [264, 0, 1, "", "EGreedyModule"], [265, 0, 1, "", "GRU"], [266, 0, 1, "", "GRUCell"], [267, 0, 1, "", "GRUModule"], [268, 0, 1, "", "IndependentNormal"], [269, 0, 1, "", "LSTM"], [270, 0, 1, "", "LSTMCell"], [271, 0, 1, "", "LSTMModule"], [272, 0, 1, "", "MLP"], [273, 0, 1, "", "MPCPlannerBase"], [274, 0, 1, "", "MPPIPlanner"], [275, 0, 1, "", "MaskedCategorical"], [276, 0, 1, "", "MaskedOneHotCategorical"], [277, 0, 1, "", "MultiAgentConvNet"], [278, 0, 1, "", "MultiAgentMLP"], [279, 0, 1, "", "MultiAgentNetBase"], [280, 0, 1, "", "NoisyLazyLinear"], [281, 0, 1, "", "NoisyLinear"], [282, 0, 1, "", "ObsDecoder"], [283, 0, 1, "", "ObsEncoder"], [284, 0, 1, "", "OneHotCategorical"], [285, 0, 1, "", "OneHotOrdinal"], [286, 0, 1, "", "OnlineDTActor"], [287, 0, 1, "", "Ordinal"], [288, 0, 1, "", "OrnsteinUhlenbeckProcessModule"], [289, 0, 1, "", "QMixer"], [290, 0, 1, "", "QValueHook"], [291, 0, 1, "", "RSSMPosterior"], [292, 0, 1, "", "RSSMPrior"], [293, 0, 1, "", "Squeeze2dLayer"], [294, 0, 1, "", "SqueezeLayer"], [295, 0, 1, "", "TanhDelta"], [296, 0, 1, "", "TanhNormal"], [297, 0, 1, "", "TruncatedNormal"], [298, 0, 1, "", "VDNMixer"], [299, 0, 1, "", "VmapModule"], [300, 0, 1, "", "recurrent_mode"], [301, 0, 1, "", "reset_noise"], [302, 0, 1, "", "set_recurrent_mode"]], "torchrl.modules.AdditiveGaussianModule": [[246, 1, 1, "", "forward"], [246, 1, 1, "", "step"]], "torchrl.modules.BatchRenorm1d": [[247, 1, 1, "", "forward"]], "torchrl.modules.CEMPlanner": [[248, 1, 1, "", "planning"]], "torchrl.modules.ConsistentDropout": [[249, 1, 1, "", "forward"]], "torchrl.modules.ConsistentDropoutModule": [[250, 1, 1, "", "forward"], [250, 1, 1, "", "make_tensordict_primer"]], "torchrl.modules.Conv3dNet": [[251, 1, 1, "", "forward"]], "torchrl.modules.ConvNet": [[252, 1, 1, "", "default_atari_dqn"], [252, 1, 1, "", "forward"]], "torchrl.modules.DTActor": [[253, 1, 1, "", "default_config"], [253, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnActor": [[254, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnQNet": [[255, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpActor": [[256, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpQNet": [[257, 1, 1, "", "forward"]], "torchrl.modules.DecisionTransformer": [[258, 0, 1, "", "DTConfig"], [258, 1, 1, "", "forward"]], "torchrl.modules.Delta": [[259, 1, 1, "", "expand"], [259, 1, 1, "", "log_prob"], [259, 2, 1, "", "mean"], [259, 2, 1, "", "mode"], [259, 1, 1, "", "rsample"], [259, 1, 1, "", "sample"]], "torchrl.modules.DistributionalDQNnet": [[260, 1, 1, "", "forward"]], "torchrl.modules.DreamerActor": [[262, 1, 1, "", "forward"]], "torchrl.modules.DuelingCnnDQNet": [[263, 1, 1, "", "forward"]], "torchrl.modules.EGreedyModule": [[264, 1, 1, "", "forward"], [264, 1, 1, "", "step"]], "torchrl.modules.GRU": [[265, 1, 1, "", "forward"]], "torchrl.modules.GRUCell": [[266, 1, 1, "", "forward"]], "torchrl.modules.GRUModule": [[267, 1, 1, "", "forward"], [267, 1, 1, "", "make_cudnn_based"], [267, 1, 1, "", "make_python_based"], [267, 1, 1, "id0", "make_tensordict_primer"], [267, 1, 1, "", "set_recurrent_mode"]], "torchrl.modules.IndependentNormal": [[268, 2, 1, "", "mode"]], "torchrl.modules.LSTM": [[269, 1, 1, "", "forward"]], "torchrl.modules.LSTMCell": [[270, 1, 1, "", "forward"]], "torchrl.modules.LSTMModule": [[271, 1, 1, "", "forward"], [271, 1, 1, "", "make_cudnn_based"], [271, 1, 1, "", "make_python_based"], [271, 1, 1, "id0", "make_tensordict_primer"], [271, 1, 1, "", "set_recurrent_mode"]], "torchrl.modules.MLP": [[272, 1, 1, "", "forward"]], "torchrl.modules.MPCPlannerBase": [[273, 1, 1, "", "forward"], [273, 1, 1, "", "planning"]], "torchrl.modules.MPPIPlanner": [[274, 1, 1, "", "planning"]], "torchrl.modules.MaskedCategorical": [[275, 1, 1, "", "log_prob"], [275, 1, 1, "", "sample"]], "torchrl.modules.MaskedOneHotCategorical": [[276, 1, 1, "", "log_prob"], [276, 2, 1, "", "mode"], [276, 1, 1, "", "rsample"], [276, 1, 1, "", "sample"]], "torchrl.modules.MultiAgentNetBase": [[279, 1, 1, "", "forward"], [279, 1, 1, "", "from_stateful_net"], [279, 1, 1, "", "get_stateful_net"], [279, 1, 1, "", "reset_parameters"]], "torchrl.modules.NoisyLazyLinear": [[280, 1, 1, "", "initialize_parameters"]], "torchrl.modules.ObsDecoder": [[282, 1, 1, "", "forward"]], "torchrl.modules.ObsEncoder": [[283, 1, 1, "", "forward"]], "torchrl.modules.OneHotCategorical": [[284, 1, 1, "", "entropy"], [284, 1, 1, "", "log_prob"], [284, 2, 1, "", "mode"], [284, 1, 1, "", "rsample"], [284, 1, 1, "", "sample"]], "torchrl.modules.OnlineDTActor": [[286, 1, 1, "", "default_config"], [286, 1, 1, "", "forward"]], "torchrl.modules.OrnsteinUhlenbeckProcessModule": [[288, 1, 1, "", "forward"], [288, 1, 1, "", "step"]], "torchrl.modules.QMixer": [[289, 1, 1, "", "mix"]], "torchrl.modules.RSSMPosterior": [[291, 1, 1, "", "forward"]], "torchrl.modules.RSSMPrior": [[292, 1, 1, "", "forward"]], "torchrl.modules.SqueezeLayer": [[294, 1, 1, "", "forward"]], "torchrl.modules.TanhDelta": [[295, 2, 1, "", "mean"], [295, 2, 1, "", "mode"]], "torchrl.modules.TanhNormal": [[296, 1, 1, "", "get_mode"], [296, 2, 1, "", "mean"], [296, 2, 1, "", "mode"], [296, 2, 1, "", "support"]], "torchrl.modules.TruncatedNormal": [[297, 1, 1, "", "log_prob"], [297, 2, 1, "", "mode"]], "torchrl.modules.VDNMixer": [[298, 1, 1, "", "mix"]], "torchrl.modules.VmapModule": [[299, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module": [[303, 0, 1, "", "Actor"], [304, 0, 1, "", "ActorCriticOperator"], [305, 0, 1, "", "ActorCriticWrapper"], [306, 0, 1, "", "ActorValueOperator"], [307, 0, 1, "", "DecisionTransformerInferenceWrapper"], [308, 0, 1, "", "DistributionalQValueActor"], [309, 0, 1, "", "DistributionalQValueModule"], [310, 0, 1, "", "LMHeadActorValueOperator"], [311, 0, 1, "", "MultiStepActorWrapper"], [312, 0, 1, "", "ProbabilisticActor"], [313, 0, 1, "", "QValueActor"], [314, 0, 1, "", "QValueModule"], [315, 0, 1, "", "SafeModule"], [316, 0, 1, "", "SafeProbabilisticModule"], [317, 0, 1, "", "SafeProbabilisticTensorDictSequential"], [318, 0, 1, "", "SafeSequential"], [319, 0, 1, "", "TanhModule"], [320, 0, 1, "", "ValueOperator"], [321, 0, 1, "", "WorldModelWrapper"]], "torchrl.modules.tensordict_module.ActorCriticOperator": [[304, 1, 1, "", "get_critic_operator"], [304, 1, 1, "", "get_policy_head"], [304, 1, 1, "", "get_value_head"], [304, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorCriticWrapper": [[305, 1, 1, "", "get_policy_head"], [305, 1, 1, "", "get_policy_operator"], [305, 1, 1, "", "get_value_head"], [305, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorValueOperator": [[306, 1, 1, "", "get_policy_head"], [306, 1, 1, "", "get_policy_operator"], [306, 1, 1, "", "get_value_head"], [306, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper": [[307, 1, 1, "", "forward"], [307, 1, 1, "", "mask_context"], [307, 1, 1, "", "set_tensor_keys"]], "torchrl.modules.tensordict_module.DistributionalQValueModule": [[309, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.MultiStepActorWrapper": [[311, 1, 1, "", "forward"], [311, 2, 1, "", "init_key"]], "torchrl.modules.tensordict_module.QValueModule": [[314, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.SafeModule": [[315, 1, 1, "", "random"], [315, 1, 1, "", "random_sample"], [315, 1, 1, "", "to"]], "torchrl.modules.tensordict_module.SafeProbabilisticModule": [[316, 1, 1, "", "random"], [316, 1, 1, "", "random_sample"]], "torchrl.modules.tensordict_module.TanhModule": [[319, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.WorldModelWrapper": [[321, 1, 1, "", "get_reward_operator"], [321, 1, 1, "", "get_transition_model_operator"]], "torchrl.modules.utils": [[322, 0, 1, "", "biased_softplus"], [323, 0, 1, "", "get_primers_from_module"], [324, 0, 1, "", "inv_softplus"], [325, 0, 1, "", "mappings"]], "torchrl.modules.utils.biased_softplus": [[322, 1, 1, "", "forward"]], "torchrl.objectives": [[326, 0, 1, "", "A2CLoss"], [327, 0, 1, "", "CQLLoss"], [328, 0, 1, "", "ClipPPOLoss"], [329, 0, 1, "", "CrossQLoss"], [330, 0, 1, "", "DDPGLoss"], [331, 0, 1, "", "DQNLoss"], [332, 0, 1, "", "DTLoss"], [333, 0, 1, "", "DiscreteCQLLoss"], [334, 0, 1, "", "DiscreteIQLLoss"], [335, 0, 1, "", "DiscreteSACLoss"], [336, 0, 1, "", "DistributionalDQNLoss"], [337, 0, 1, "", "DreamerActorLoss"], [338, 0, 1, "", "DreamerModelLoss"], [339, 0, 1, "", "DreamerValueLoss"], [340, 0, 1, "", "GAILLoss"], [341, 0, 1, "", "HardUpdate"], [342, 0, 1, "", "IQLLoss"], [343, 0, 1, "", "KLPENPPOLoss"], [344, 0, 1, "", "LossModule"], [345, 0, 1, "", "OnlineDTLoss"], [346, 0, 1, "", "PPOLoss"], [347, 0, 1, "", "REDQLoss"], [348, 0, 1, "", "ReinforceLoss"], [349, 0, 1, "", "SACLoss"], [350, 0, 1, "", "SoftUpdate"], [351, 0, 1, "", "TD3BCLoss"], [352, 0, 1, "", "TD3Loss"], [353, 0, 1, "", "ValueEstimators"], [354, 0, 1, "", "default_value_kwargs"], [355, 0, 1, "", "distance_loss"], [356, 0, 1, "", "group_optimizers"], [357, 0, 1, "", "hold_out_net"], [358, 0, 1, "", "hold_out_params"], [360, 0, 1, "", "next_state_value"]], "torchrl.objectives.A2CLoss": [[326, 4, 1, "", "default_keys"], [326, 1, 1, "", "forward"], [326, 2, 1, "", "functional"], [326, 1, 1, "", "loss_critic"], [326, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.CQLLoss": [[327, 4, 1, "", "default_keys"], [327, 1, 1, "", "forward"], [327, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ClipPPOLoss": [[328, 1, 1, "", "forward"]], "torchrl.objectives.CrossQLoss": [[329, 1, 1, "", "actor_loss"], [329, 1, 1, "", "alpha_loss"], [329, 4, 1, "", "default_keys"], [329, 1, 1, "", "forward"], [329, 1, 1, "", "load_state_dict"], [329, 1, 1, "", "make_value_estimator"], [329, 1, 1, "", "maybe_init_target_entropy"], [329, 1, 1, "", "qvalue_loss"], [329, 1, 1, "", "set_keys"], [329, 1, 1, "", "state_dict"], [329, 2, 1, "", "target_entropy_buffer"]], "torchrl.objectives.DDPGLoss": [[330, 4, 1, "", "default_keys"], [330, 1, 1, "", "forward"], [330, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DQNLoss": [[331, 4, 1, "", "default_keys"], [331, 1, 1, "", "forward"], [331, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DTLoss": [[332, 4, 1, "", "default_keys"], [332, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteCQLLoss": [[333, 4, 1, "", "default_keys"], [333, 1, 1, "", "forward"], [333, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DiscreteIQLLoss": [[334, 4, 1, "", "default_keys"], [334, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteSACLoss": [[335, 4, 1, "", "default_keys"], [335, 1, 1, "", "forward"], [335, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DistributionalDQNLoss": [[336, 4, 1, "", "default_keys"], [336, 1, 1, "", "forward"], [336, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerActorLoss": [[337, 4, 1, "", "default_keys"], [337, 1, 1, "", "forward"], [337, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerModelLoss": [[338, 4, 1, "", "default_keys"], [338, 1, 1, "", "forward"]], "torchrl.objectives.DreamerValueLoss": [[339, 4, 1, "", "default_keys"], [339, 1, 1, "", "forward"]], "torchrl.objectives.GAILLoss": [[340, 4, 1, "", "default_keys"], [340, 1, 1, "", "forward"]], "torchrl.objectives.IQLLoss": [[342, 4, 1, "", "default_keys"], [342, 1, 1, "", "forward"], [342, 1, 1, "", "loss_value_diff"], [342, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.KLPENPPOLoss": [[343, 1, 1, "", "forward"]], "torchrl.objectives.LossModule": [[344, 1, 1, "", "convert_to_functional"], [344, 1, 1, "", "forward"], [344, 1, 1, "", "from_stateful_net"], [344, 2, 1, "", "functional"], [344, 1, 1, "", "get_stateful_net"], [344, 1, 1, "", "make_value_estimator"], [344, 1, 1, "", "named_parameters"], [344, 1, 1, "", "parameters"], [344, 1, 1, "", "reset_parameters_recursive"], [344, 1, 1, "", "set_keys"], [344, 2, 1, "", "value_estimator"], [344, 2, 1, "", "vmap_randomness"]], "torchrl.objectives.OnlineDTLoss": [[345, 4, 1, "", "default_keys"], [345, 1, 1, "", "forward"]], "torchrl.objectives.PPOLoss": [[346, 4, 1, "", "default_keys"], [346, 1, 1, "", "forward"], [346, 2, 1, "", "functional"], [346, 1, 1, "", "loss_critic"], [346, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.REDQLoss": [[347, 4, 1, "", "default_keys"], [347, 1, 1, "", "forward"], [347, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ReinforceLoss": [[348, 4, 1, "", "default_keys"], [348, 1, 1, "", "forward"], [348, 2, 1, "", "functional"], [348, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.SACLoss": [[349, 4, 1, "", "default_keys"], [349, 1, 1, "", "forward"], [349, 1, 1, "", "load_state_dict"], [349, 1, 1, "", "make_value_estimator"], [349, 1, 1, "", "state_dict"]], "torchrl.objectives.TD3BCLoss": [[351, 1, 1, "", "actor_loss"], [351, 4, 1, "", "default_keys"], [351, 1, 1, "", "forward"], [351, 1, 1, "", "make_value_estimator"], [351, 1, 1, "", "qvalue_loss"]], "torchrl.objectives.TD3Loss": [[352, 4, 1, "", "default_keys"], [352, 1, 1, "", "forward"], [352, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.multiagent": [[359, 0, 1, "", "QMixerLoss"]], "torchrl.objectives.multiagent.QMixerLoss": [[359, 4, 1, "", "default_keys"], [359, 1, 1, "", "forward"], [359, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.value": [[361, 0, 1, "", "GAE"], [362, 0, 1, "", "TD0Estimator"], [363, 0, 1, "", "TD1Estimator"], [364, 0, 1, "", "TDLambdaEstimator"], [365, 0, 1, "", "ValueEstimatorBase"]], "torchrl.objectives.value.GAE": [[361, 1, 1, "", "forward"], [361, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD0Estimator": [[362, 1, 1, "", "forward"], [362, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD1Estimator": [[363, 1, 1, "", "forward"], [363, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TDLambdaEstimator": [[364, 1, 1, "", "forward"], [364, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.ValueEstimatorBase": [[365, 4, 1, "", "default_keys"], [365, 1, 1, "", "forward"], [365, 1, 1, "", "set_keys"], [365, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.functional": [[366, 0, 1, "", "generalized_advantage_estimate"], [367, 0, 1, "", "reward2go"], [368, 0, 1, "", "td0_advantage_estimate"], [369, 0, 1, "", "td0_return_estimate"], [370, 0, 1, "", "td1_advantage_estimate"], [371, 0, 1, "", "td1_return_estimate"], [372, 0, 1, "", "td_lambda_advantage_estimate"], [373, 0, 1, "", "td_lambda_return_estimate"], [374, 0, 1, "", "vec_generalized_advantage_estimate"], [375, 0, 1, "", "vec_td1_advantage_estimate"], [376, 0, 1, "", "vec_td1_return_estimate"], [377, 0, 1, "", "vec_td_lambda_advantage_estimate"], [378, 0, 1, "", "vec_td_lambda_return_estimate"]], "torchrl.record": [[379, 3, 1, "", "PixelRenderTransform"], [380, 3, 1, "", "TensorDictRecorder"], [381, 3, 1, "", "VideoRecorder"]], "torchrl.record.loggers": [[382, 3, 1, "", "Logger"], [384, 3, 1, "", "generate_exp_name"], [385, 3, 1, "", "get_logger"]], "torchrl.record.loggers.csv": [[383, 3, 1, "", "CSVLogger"]], "torchrl.record.loggers.mlflow": [[386, 3, 1, "", "MLFlowLogger"]], "torchrl.record.loggers.tensorboard": [[387, 3, 1, "", "TensorboardLogger"]], "torchrl.record.loggers.wandb": [[388, 3, 1, "", "WandbLogger"]], "torchrl.trainers": [[390, 0, 1, "", "BatchSubSampler"], [391, 0, 1, "", "ClearCudaCache"], [392, 0, 1, "", "CountFramesLog"], [393, 0, 1, "", "LogScalar"], [394, 0, 1, "", "LogValidationReward"], [395, 0, 1, "", "OptimizerHook"], [396, 0, 1, "", "ReplayBufferTrainer"], [397, 0, 1, "", "RewardNormalizer"], [398, 0, 1, "", "SelectKeys"], [399, 0, 1, "", "Trainer"], [400, 0, 1, "", "TrainerHookBase"], [401, 0, 1, "", "UpdateWeights"]], "torchrl.trainers.BatchSubSampler": [[390, 1, 1, "", "register"]], "torchrl.trainers.ClearCudaCache": [[391, 1, 1, "", "register"]], "torchrl.trainers.CountFramesLog": [[392, 1, 1, "", "register"]], "torchrl.trainers.LogScalar": [[393, 1, 1, "", "register"]], "torchrl.trainers.LogValidationReward": [[394, 1, 1, "", "register"]], "torchrl.trainers.OptimizerHook": [[395, 1, 1, "", "register"]], "torchrl.trainers.ReplayBufferTrainer": [[396, 1, 1, "", "register"]], "torchrl.trainers.RewardNormalizer": [[397, 1, 1, "", "register"]], "torchrl.trainers.SelectKeys": [[398, 1, 1, "", "register"]], "torchrl.trainers.Trainer": [[399, 1, 1, "", "load_from_file"]], "torchrl.trainers.TrainerHookBase": [[400, 1, 1, "", "register"]], "torchrl.trainers.UpdateWeights": [[401, 1, 1, "", "register"]], "torchrl.trainers.helpers": [[402, 3, 1, "", "correct_for_frame_skip"], [403, 3, 1, "", "get_stats_random_rollout"], [404, 3, 1, "", "make_collector_offpolicy"], [405, 3, 1, "", "make_collector_onpolicy"], [406, 3, 1, "", "make_dqn_loss"], [407, 3, 1, "", "make_replay_buffer"], [408, 3, 1, "", "make_target_updater"], [409, 3, 1, "", "make_trainer"], [410, 3, 1, "", "parallel_env_constructor"], [411, 3, 1, "", "sync_async_collector"], [412, 3, 1, "", "sync_sync_collector"], [413, 3, 1, "", "transformed_env_constructor"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:property", "3": "py:function", "4": "py:attribute"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "property", "Python property"], "3": ["py", "function", "Python function"], "4": ["py", "attribute", "Python attribute"]}, "titleterms": {"torchrl": [0, 1, 2, 3, 6, 9, 417, 418, 419, 420, 422, 423, 424, 426, 428, 435, 436, 437, 441, 442], "instal": [0, 6, 7, 441], "get": [0, 427, 428, 429, 430, 431, 432], "start": [0, 427, 428, 429, 430, 431, 432], "tutori": [0, 424, 435, 436], "basic": [0, 439], "intermedi": [0, 8], "advanc": 0, "refer": [0, 415], "knowledg": [0, 416], "base": [0, 2, 7, 416, 426], "indic": 0, "tabl": 0, "collector": [1, 422, 423, 424, 425, 430, 432, 435, 436, 441], "packag": [1, 2, 3, 417, 418, 419, 420], "batch": [1, 3, 422, 437, 439], "size": [1, 3, 422, 439], "polici": [1, 2, 4, 418, 422, 424, 425, 426, 428, 432, 434, 435, 436, 437], "copi": 1, "weight": 1, "synchron": 1, "distribut": [1, 417], "environ": [1, 3, 4, 6, 7, 422, 423, 424, 425, 427, 432, 434, 435, 436, 437, 441, 442], "send": 1, "receiv": 1, "model": [1, 2, 4, 417, 422, 423, 425, 426, 429, 438, 441], "weightupdat": 1, "extend": 1, "updat": [1, 422], "class": [1, 3, 437, 441], "replai": [1, 2, 3, 422, 423, 424, 425, 430, 432, 435, 436, 439, 441], "buffer": [1, 2, 3, 422, 423, 424, 425, 430, 432, 435, 436, 439, 441], "interoper": 1, "run": [1, 426, 427, 442], "asynchron": 1, "singl": [1, 4], "node": 1, "data": [1, 2, 4, 422, 423, 424, 430, 432, 435, 436, 441], "helper": [1, 3], "function": [1, 4, 418, 423, 424, 429, 435, 436, 441], "compos": [2, 189], "support": 2, "type": 2, "choos": 2, "storag": [2, 109, 422, 430, 439], "sampl": [2, 439], "index": 2, "share": 2, "across": 2, "process": 2, "store": [2, 423, 439], "trajectori": [2, 439], "checkpoint": [2, 419], "episod": [2, 4], "format": 2, "ted": [2, 427], "The": [2, 422], "rational": 2, "behind": 2, "structur": [2, 439], "A": [2, 423, 439], "note": 2, "singleton": [2, 4], "dimens": 2, "flatten": 2, "reduc": 2, "memori": 2, "consumpt": 2, "dimension": [2, 4], "tensordict": [2, 417, 439, 441], "special": [2, 428, 441], "case": 2, "footnot": 2, "multi": [2, 3, 417, 418, 434, 435, 436], "agent": [2, 3, 4, 417, 418, 435, 436], "present": 2, "rnn": 2, "transform": [2, 3, 233, 422, 424, 427, 435, 436, 437, 439, 441, 442], "step": [2, 3, 422, 424, 427, 430, 435, 436, 439, 442], "what": [2, 5], "about": 2, "requir": 2, "dataset": 2, "tensorspec": [2, 77], "numer": 2, "subclass": [2, 3], "categor": [2, 33], "tree": [2, 79], "forest": 2, "tensordictmap": [2, 72], "mctsforest": [2, 45], "larg": 2, "languag": 2, "reinforc": [2, 418, 424, 435, 436], "learn": [2, 4, 417, 424, 435, 436], "from": [2, 6, 7], "human": 2, "feedback": 2, "rlhf": 2, "util": [2, 417, 418, 419, 435], "env": [3, 437, 441, 442], "spec": [3, 437, 442], "lock": 3, "method": [3, 422], "partial": 3, "reset": [3, 437, 442], "vector": [3, 441], "async": [3, 441], "exampl": [3, 11, 423, 439], "custom": [3, 11, 437, 439], "nativ": 3, "auto": 3, "dynam": [3, 4, 439], "forward": [3, 4, 422], "invers": 3, "understand": 3, "kei": 3, "tensor": [3, 439], "expos": 3, "outsid": 3, "world": 3, "design": [3, 432], "your": [3, 4, 6, 422, 426, 432, 437], "own": [3, 432], "tip": 3, "us": [3, 4, 6, 9, 418, 425, 438, 439, 441], "clone": [3, 7], "mask": 3, "action": [3, 4, 418, 425, 437], "record": [3, 419, 422, 431], "video": [3, 11, 431], "domain": [3, 417], "specif": [3, 417, 434], "librari": [3, 441], "thing": [4, 422, 437], "consid": 4, "when": [4, 7], "debug": 4, "rl": [4, 9, 427, 429, 441], "gener": [4, 11, 417], "have": 4, "you": 4, "valid": 4, "algorithm": [4, 417], "implement": 4, "few": 4, "small": 4, "toi": 4, "problem": 4, "known": 4, "optim": [4, 422, 423, 429, 432], "return": [4, 418], "e": 4, "g": 4, "gridworld": 4, "mountaincar": 4, "visual": 4, "Be": 4, "veri": 4, "care": 4, "ani": 4, "augment": 4, "doe": 4, "entropi": 4, "converg": 4, "too": [4, 8], "quickli": 4, "slowli": 4, "chang": [4, 441], "drastic": 4, "reward": 4, "beyond": 4, "go": 4, "up": [4, 6], "Is": 4, "favor": 4, "compon": 4, "i": 4, "veloc": 4, "vs": 4, "l2": 4, "magnitud": 4, "task": [4, 434], "horizon": 4, "extrem": 4, "long": 4, "ar": 4, "normal": [4, 422, 423, 424], "standard": 4, "explor": [4, 417, 422, 423, 428], "valu": [4, 417, 418, 422, 424, 425, 428], "loss": [4, 422, 423, 424, 425, 432, 435, 436], "earli": 4, "train": [4, 8, 418, 422, 424, 425, 426, 429, 432, 435, 436, 437], "roughli": 4, "uniformli": 4, "random": [4, 418, 435, 436], "intrins": 4, "decai": 4, "progress": 4, "remain": 4, "constant": [4, 423], "increas": 4, "an": [4, 424, 425, 427, 437], "can": 4, "low": 4, "also": 4, "offlin": 4, "observ": [4, 422], "space": 4, "effect": [4, 437], "dramat": 4, "dure": [4, 7], "high": 4, "work": [5, 6, 7, 426], "gym": [5, 441, 442], "openai": 5, "version": [5, 7, 10], "habitat": 6, "lab": 6, "set": [6, 11], "pip": [6, 7], "common": [6, 7, 8], "issu": [6, 7, 10], "mujoco": 7, "prerequisit": [7, 422], "render": [7, 11, 432, 435, 436, 442], "all": 7, "new": 7, "bindindg": 7, "2": 7, "1": 7, "old": 7, "bind": 7, "py": 7, "option": 7, "repo": [7, 9], "import": [7, 422], "pytorch": [8, 9, 10, 426], "error": 8, "solut": 8, "gradient": 8, "relat": 8, "newcom": 8, "my": 8, "slow": 8, "bug": 8, "resourc": 9, "paper": 9, "document": 9, "functorch": 9, "blog": 9, "websit": 9, "educ": 9, "forum": 9, "how": 10, "reproduc": [10, 437], "workaround": 10, "customis": 11, "tweak": 11, "principl": 11, "auto_unwrap_transformed_env": 12, "datacollectorbas": 13, "multisyncdatacollector": 14, "multiasyncdatacollector": 15, "rayweightupdat": 16, "syncdatacollector": 17, "vanillaweightupdat": 18, "weightupdaterbas": 19, "asyncdatacollector": 20, "distributeddatacollector": 21, "distributedsyncdatacollector": 22, "rpcdatacollector": 23, "raycollector": 24, "submitit_delayed_launch": 25, "split_trajectori": 26, "adaptiveklcontrol": 27, "binari": [28, 426], "binarydiscretetensorspec": 29, "binarytodecim": 30, "bound": 31, "boundedtensorspec": 32, "composit": 34, "compositespec": 35, "constantklcontrol": 36, "densifyreward": 37, "discretetensorspec": 38, "flat2t": 39, "h5combin": 40, "h5split": 41, "hashtoint": 42, "lazystackedcompositespec": 43, "lazystackedtensorspec": 44, "multicategor": 46, "multidiscretetensorspec": 47, "multionehot": 48, "multionehotdiscretetensorspec": 49, "multistep": 50, "nested2t": 51, "nontensor": 52, "nontensorspec": 53, "onehot": 54, "onehotdiscretetensorspec": 55, "pairwisedataset": 56, "prioritizedreplaybuff": 57, "promptdata": 58, "prompttensordicttoken": 59, "querymodul": 60, "randomprojectionhash": 61, "rayreplaybuff": 62, "remotetensordictreplaybuff": 63, "replaybuff": 64, "rewarddata": 65, "rolloutfrommodel": 66, "siphash": 67, "stack": [68, 224], "stackedcomposit": 69, "ted2flat": 70, "ted2nest": 71, "tensordictprioritizedreplaybuff": 73, "tensordictreplaybuff": 74, "tensordicttoken": 75, "tensormap": 76, "tokenizeddatasetload": 78, "unbound": 80, "unboundedcontinu": 81, "unboundedcontinuoustensorspec": 82, "unboundeddiscret": 83, "unboundeddiscretetensorspec": 84, "check_no_exclusive_kei": 85, "consolidate_spec": 86, "contains_lazy_spec": 87, "create_infinite_iter": 88, "get_dataload": 89, "flatstoragecheckpoint": 90, "h5storagecheckpoint": 91, "immutabledatasetwrit": 92, "lazymemmapstorag": 93, "lazystackstorag": 94, "lazytensorstorag": 95, "liststorag": 96, "liststoragecheckpoint": 97, "nestedstoragecheckpoint": 98, "prioritizedsampl": 99, "prioritizedslicesampl": 100, "randomsampl": 101, "replaybufferensembl": 102, "roundrobinwrit": 103, "sampler": 104, "samplerensembl": 105, "samplerwithoutreplac": 106, "slicesampl": 107, "slicesamplerwithoutreplac": 108, "storagecheckpointerbas": 110, "storageensembl": 111, "storageensemblecheckpoint": 112, "tensordictmaxvaluewrit": 113, "tensordictroundrobinwrit": 114, "tensorstorag": 115, "tensorstoragecheckpoint": 116, "writer": 117, "writerensembl": 118, "asyncenvpool": 119, "braxenv": 120, "braxwrapp": 121, "chessenv": 122, "dmcontrolenv": 123, "dmcontrolwrapp": 124, "envbas": [125, 437], "envcreat": 126, "envmetadata": 127, "gymenv": 128, "gymlikeenv": 129, "gymwrapp": 130, "habitatenv": 131, "isaacgymenv": 132, "isaacgymwrapp": 133, "isaaclabwrapp": 134, "jumanjienv": 135, "jumanjiwrapp": 136, "llmhashingenv": 137, "mogymenv": 138, "mogymwrapp": 139, "marlgroupmaptyp": 140, "meltingpotenv": 141, "meltingpotwrapp": 142, "modelbasedenvbas": 143, "multithreadedenv": 144, "multithreadedenvwrapp": 145, "openmlenv": 146, "openspielenv": 147, "openspielwrapp": 148, "parallelenv": 149, "pendulumenv": 150, "pettingzooenv": 151, "pettingzoowrapp": 152, "processorasyncenvpool": 153, "randompolici": 154, "robohiveenv": 155, "smacv2env": 156, "smacv2wrapp": 157, "serialenv": 158, "threadingasyncenvpool": 159, "tictactoeenv": 160, "unitymlagentsenv": 161, "unitymlagentswrapp": 162, "vmasenv": 163, "vmaswrapp": 164, "check_env_spec": 165, "check_marl_group": 166, "exploration_typ": 167, "get_available_librari": 168, "gym_backend": 169, "make_composite_from_td": 170, "dreamerdecod": 171, "dreamerenv": 172, "register_gym_spec_convers": 173, "set_exploration_typ": 174, "set_gym_backend": 175, "step_mdp": 176, "terminated_or_trunc": 177, "actiondiscret": 178, "actionmask": 179, "autoresetenv": 180, "autoresettransform": 181, "batchsizetransform": 182, "binarizereward": 183, "burnintransform": 184, "catfram": [185, 439], "cattensor": 186, "centercrop": 187, "cliptransform": 188, "conditionalskip": 190, "crop": 191, "dtypecasttransform": 192, "devicecasttransform": 193, "discreteactionproject": 194, "doubletofloat": 195, "endoflifetransform": 196, "excludetransform": 197, "finitetensordictcheck": 198, "flattenobserv": 199, "frameskiptransform": 200, "grayscal": 201, "hash": 202, "inittrack": 203, "klrewardtransform": 204, "linearisereward": 205, "multiact": 206, "noopresetenv": 207, "observationnorm": 208, "observationtransform": 209, "permutetransform": 210, "pinmemorytransform": 211, "r3mtransform": 212, "randomcroptensordict": 213, "removeemptyspec": 214, "renametransform": 215, "resiz": 216, "reward2gotransform": 217, "rewardclip": 218, "rewardsc": 219, "rewardsum": 220, "selecttransform": 221, "signtransform": 222, "squeezetransform": 223, "stepcount": 225, "targetreturn": 226, "tensordictprim": 227, "timemaxpool": 228, "timer": 229, "totensorimag": 230, "token": 231, "trajcount": 232, "transformedenv": 234, "unarytransform": 235, "unsqueezetransform": 236, "vc1transform": 237, "viprewardtransform": 238, "viptransform": 239, "vecgymenvtransform": 240, "vecnorm": [241, 442], "vecnormv2": 242, "gsdenois": 243, "multisteptransform": 244, "implement_for": 245, "additivegaussianmodul": 246, "batchrenorm1d": 247, "cemplann": 248, "consistentdropout": 249, "consistentdropoutmodul": 250, "conv3dnet": 251, "convnet": 252, "dtactor": 253, "ddpgcnnactor": 254, "ddpgcnnqnet": 255, "ddpgmlpactor": 256, "ddpgmlpqnet": 257, "decisiontransform": 258, "delta": 259, "distributionaldqnnet": 260, "distributionalqvaluehook": 261, "dreameractor": 262, "duelingcnndqnet": 263, "egreedymodul": 264, "gru": 265, "grucel": 266, "grumodul": 267, "independentnorm": 268, "lstm": [269, 425], "lstmcell": 270, "lstmmodul": 271, "mlp": [272, 425], "mpcplannerbas": 273, "mppiplann": 274, "maskedcategor": 275, "maskedonehotcategor": 276, "multiagentconvnet": 277, "multiagentmlp": 278, "multiagentnetbas": 279, "noisylazylinear": 280, "noisylinear": 281, "obsdecod": 282, "obsencod": 283, "onehotcategor": 284, "onehotordin": 285, "onlinedtactor": 286, "ordin": 287, "ornsteinuhlenbeckprocessmodul": 288, "qmixer": [289, 418], "qvaluehook": 290, "rssmposterior": 291, "rssmprior": 292, "squeeze2dlay": 293, "squeezelay": 294, "tanhdelta": 295, "tanhnorm": 296, "truncatednorm": 297, "vdnmixer": 298, "vmapmodul": 299, "recurrent_mod": 300, "reset_nois": 301, "set_recurrent_mod": 302, "actor": [303, 417, 422, 428], "actorcriticoper": 304, "actorcriticwrapp": 305, "actorvalueoper": 306, "decisiontransformerinferencewrapp": 307, "distributionalqvalueactor": 308, "distributionalqvaluemodul": 309, "lmheadactorvalueoper": 310, "multistepactorwrapp": 311, "probabilisticactor": 312, "qvalueactor": [313, 417], "qvaluemodul": 314, "safemodul": [315, 417], "safeprobabilisticmodul": 316, "safeprobabilistictensordictsequenti": 317, "safesequenti": 318, "tanhmodul": 319, "valueoper": 320, "worldmodelwrapp": 321, "biased_softplu": 322, "get_primers_from_modul": 323, "inv_softplu": 324, "map": [325, 435], "a2closs": 326, "cqlloss": 327, "clipppoloss": 328, "crossqloss": 329, "ddpgloss": 330, "dqnloss": 331, "dtloss": 332, "discretecqlloss": 333, "discreteiqlloss": 334, "discretesacloss": 335, "distributionaldqnloss": 336, "dreameractorloss": 337, "dreamermodelloss": 338, "dreamervalueloss": 339, "gailloss": 340, "hardupd": 341, "iqlloss": 342, "klpenppoloss": 343, "lossmodul": [344, 422, 429], "onlinedtloss": 345, "ppoloss": 346, "redqloss": 347, "reinforceloss": 348, "sacloss": 349, "softupd": 350, "td3bcloss": 351, "td3loss": 352, "valueestim": 353, "default_value_kwarg": 354, "distance_loss": 355, "group_optim": 356, "hold_out_net": 357, "hold_out_param": 358, "qmixerloss": 359, "next_state_valu": 360, "gae": 361, "td0estim": 362, "td1estim": 363, "tdlambdaestim": 364, "valueestimatorbas": 365, "generalized_advantage_estim": 366, "reward2go": 367, "td0_advantage_estim": 368, "td0_return_estim": 369, "td1_advantage_estim": 370, "td1_return_estim": 371, "td_lambda_advantage_estim": 372, "td_lambda_return_estim": 373, "vec_generalized_advantage_estim": 374, "vec_td1_advantage_estim": 375, "vec_td1_return_estim": 376, "vec_td_lambda_advantage_estim": 377, "vec_td_lambda_return_estim": 378, "pixelrendertransform": 379, "tensordictrecord": 380, "videorecord": 381, "logger": [382, 419, 431, 432], "csvlogger": 383, "generate_exp_nam": 384, "get_logg": 385, "mlflowlogg": 386, "tensorboardlogg": 387, "wandblogg": 388, "set_auto_unwrap_transformed_env": 389, "batchsubsampl": 390, "clearcudacach": 391, "countframeslog": 392, "logscalar": 393, "logvalidationreward": 394, "optimizerhook": 395, "replaybuffertrain": 396, "rewardnorm": 397, "selectkei": 398, "trainer": [399, 419, 423], "trainerhookbas": 400, "updateweight": 401, "correct_for_frame_skip": 402, "get_stats_random_rollout": 403, "make_collector_offpolici": 404, "make_collector_onpolici": 405, "make_dqn_loss": 406, "make_replay_buff": 407, "make_target_updat": 408, "make_train": 409, "parallel_env_constructor": 410, "sync_async_collector": 411, "sync_sync_collector": 412, "transformed_env_constructor": 413, "readm": [414, 433], "tuto": [414, 433], "api": 415, "contribut": [416, 441], "content": 416, "modul": [417, 422, 425, 426, 428, 432, 441], "tensordictmodul": [417, 426, 428, 441], "wrapper": [417, 428], "probabilist": [417, 428], "q": [417, 423, 425, 428], "oper": 417, "join": 417, "hook": [417, 419, 423], "regular": 417, "planner": 417, "object": [418, 422, 429, 441], "torch": 418, "vmap": [418, 441], "dqn": [418, 423, 425], "ddpg": [418, 422, 435], "sac": 418, "redq": 418, "crossq": 418, "iql": 418, "cql": 418, "gail": 418, "dt": 418, "td3": 418, "bc": 418, "ppo": [418, 424, 436], "head": 418, "a2c": 418, "dreamer": 418, "builder": 419, "_util": 420, "comput": [421, 423, 437, 440], "time": [421, 422, 440], "code": [422, 437], "overview": [422, 425], "setup": [422, 425], "__init__": 422, "estim": 422, "put": 422, "togeth": [422, 437], "call": 422, "parallel": [422, 434, 442], "execut": [422, 434, 437], "stat": 422, "build": [422, 423, 432, 439], "evalu": 422, "construct": 422, "target": [422, 423, 429], "network": [422, 423, 424, 425, 428, 435, 436], "experi": [422, 437], "result": [422, 424, 435, 436], "conclus": [422, 423, 424, 425, 426, 435, 436, 437, 439], "next": [422, 424, 427, 430, 435, 436, 439], "deep": 423, "collect": [423, 424, 430], "paramet": [423, 424, 429], "hyperparamet": [423, 424, 435, 436], "regist": 423, "possibl": 423, "improv": 423, "defin": [424, 435, 436], "loop": [424, 425, 426, 432, 435, 436, 437], "recurr": [425, 426], "convolut": 425, "select": 425, "further": [425, 429], "read": 425, "export": 426, "introduct": [426, 441], "fast": 426, "recap": 426, "simpl": [426, 437], "stochast": 426, "aotinductor": 426, "free": 426, "c": 426, "onnx": 426, "rollout": [426, 427, 434, 435, 436, 437, 442], "creat": 427, "s": [428, 429], "output": 429, "consider": 429, "log": 431, "first": 432, "divers": 434, "competit": 435, "group": 435, "critic": [435, 436], "pendulum": 437, "write": 437, "_step": 437, "simul": 437, "_reset": 437, "metadata": 437, "_spec": 437, "shape": 437, "seed": [437, 442], "wrap": 437, "test": 437, "our": 437, "pretrain": 438, "vanilla": 439, "integr": 439, "tensorclass": 439, "other": 439, "pytre": 439, "iter": 439, "over": 439, "fix": 439, "priorit": 439, "save": 439, "raw": 439, "imag": 439, "more": 439, "complex": 439, "config": 441, "sequenc": 441, "program": 441, "ensembl": 441, "meta": 441, "sync": 441, "multiprocess": 441, "frame_skip": 442, "deepmind": 442, "control": 442, "devic": 442, "close": 442, "access": 442, "attribut": 442, "kwarg": 442}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 56}})