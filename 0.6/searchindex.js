Search.setIndex({"docnames": ["index", "reference/collectors", "reference/data", "reference/envs", "reference/generated/knowledge_base/DEBUGGING_RL", "reference/generated/knowledge_base/GYM", "reference/generated/knowledge_base/HABITAT", "reference/generated/knowledge_base/MUJOCO_INSTALLATION", "reference/generated/knowledge_base/PRO-TIPS", "reference/generated/knowledge_base/RESOURCES", "reference/generated/knowledge_base/VERSIONING_ISSUES", "reference/generated/knowledge_base/VIDEO_CUSTOMISATION", "reference/generated/torchrl._utils.implement_for", "reference/generated/torchrl.collectors.DataCollectorBase", "reference/generated/torchrl.collectors.MultiSyncDataCollector", "reference/generated/torchrl.collectors.MultiaSyncDataCollector", "reference/generated/torchrl.collectors.SyncDataCollector", "reference/generated/torchrl.collectors.aSyncDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector", "reference/generated/torchrl.collectors.distributed.RPCDataCollector", "reference/generated/torchrl.collectors.distributed.RayCollector", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher", "reference/generated/torchrl.collectors.utils.split_trajectories", "reference/generated/torchrl.data.AdaptiveKLController", "reference/generated/torchrl.data.Binary", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec", "reference/generated/torchrl.data.BinaryToDecimal", "reference/generated/torchrl.data.Bounded", "reference/generated/torchrl.data.BoundedTensorSpec", "reference/generated/torchrl.data.Categorical", "reference/generated/torchrl.data.Composite", "reference/generated/torchrl.data.CompositeSpec", "reference/generated/torchrl.data.ConstantKLController", "reference/generated/torchrl.data.DiscreteTensorSpec", "reference/generated/torchrl.data.Flat2TED", "reference/generated/torchrl.data.H5Combine", "reference/generated/torchrl.data.H5Split", "reference/generated/torchrl.data.HashToInt", "reference/generated/torchrl.data.LazyStackedCompositeSpec", "reference/generated/torchrl.data.LazyStackedTensorSpec", "reference/generated/torchrl.data.MultiCategorical", "reference/generated/torchrl.data.MultiDiscreteTensorSpec", "reference/generated/torchrl.data.MultiOneHot", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec", "reference/generated/torchrl.data.MultiStep", "reference/generated/torchrl.data.Nested2TED", "reference/generated/torchrl.data.NonTensor", "reference/generated/torchrl.data.NonTensorSpec", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec", "reference/generated/torchrl.data.PairwiseDataset", "reference/generated/torchrl.data.PrioritizedReplayBuffer", "reference/generated/torchrl.data.PromptData", "reference/generated/torchrl.data.PromptTensorDictTokenizer", "reference/generated/torchrl.data.QueryModule", "reference/generated/torchrl.data.RandomProjectionHash", "reference/generated/torchrl.data.ReplayBuffer", "reference/generated/torchrl.data.RewardData", "reference/generated/torchrl.data.RolloutFromModel", "reference/generated/torchrl.data.SipHash", "reference/generated/torchrl.data.Stacked", "reference/generated/torchrl.data.StackedComposite", "reference/generated/torchrl.data.TED2Flat", "reference/generated/torchrl.data.TED2Nested", "reference/generated/torchrl.data.TensorDictMap", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer", "reference/generated/torchrl.data.TensorDictReplayBuffer", "reference/generated/torchrl.data.TensorDictTokenizer", "reference/generated/torchrl.data.TensorMap", "reference/generated/torchrl.data.TensorSpec", "reference/generated/torchrl.data.TokenizedDatasetLoader", "reference/generated/torchrl.data.Unbounded", "reference/generated/torchrl.data.UnboundedContinuous", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec", "reference/generated/torchrl.data.UnboundedDiscrete", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec", "reference/generated/torchrl.data.check_no_exclusive_keys", "reference/generated/torchrl.data.consolidate_spec", "reference/generated/torchrl.data.contains_lazy_spec", "reference/generated/torchrl.data.create_infinite_iterator", "reference/generated/torchrl.data.datasets.AtariDQNExperienceReplay", "reference/generated/torchrl.data.datasets.BaseDatasetExperienceReplay", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay", "reference/generated/torchrl.data.datasets.GenDGRLExperienceReplay", "reference/generated/torchrl.data.datasets.MinariExperienceReplay", "reference/generated/torchrl.data.datasets.OpenMLExperienceReplay", "reference/generated/torchrl.data.datasets.OpenXExperienceReplay", "reference/generated/torchrl.data.datasets.RobosetExperienceReplay", "reference/generated/torchrl.data.datasets.VD4RLExperienceReplay", "reference/generated/torchrl.data.get_dataloader", "reference/generated/torchrl.data.replay_buffers.FlatStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.H5StorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.ImmutableDatasetWriter", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage", "reference/generated/torchrl.data.replay_buffers.ListStorage", "reference/generated/torchrl.data.replay_buffers.ListStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.NestedStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler", "reference/generated/torchrl.data.replay_buffers.PrioritizedSliceSampler", "reference/generated/torchrl.data.replay_buffers.RandomSampler", "reference/generated/torchrl.data.replay_buffers.ReplayBufferEnsemble", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.Sampler", "reference/generated/torchrl.data.replay_buffers.SamplerEnsemble", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.SliceSampler", "reference/generated/torchrl.data.replay_buffers.SliceSamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.Storage", "reference/generated/torchrl.data.replay_buffers.StorageCheckpointerBase", "reference/generated/torchrl.data.replay_buffers.StorageEnsemble", "reference/generated/torchrl.data.replay_buffers.StorageEnsembleCheckpointer", "reference/generated/torchrl.data.replay_buffers.TensorDictMaxValueWriter", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.TensorStorage", "reference/generated/torchrl.data.replay_buffers.TensorStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.Writer", "reference/generated/torchrl.data.replay_buffers.WriterEnsemble", "reference/generated/torchrl.envs.BraxEnv", "reference/generated/torchrl.envs.BraxWrapper", "reference/generated/torchrl.envs.DMControlEnv", "reference/generated/torchrl.envs.DMControlWrapper", "reference/generated/torchrl.envs.EnvBase", "reference/generated/torchrl.envs.EnvCreator", "reference/generated/torchrl.envs.EnvMetaData", "reference/generated/torchrl.envs.GymEnv", "reference/generated/torchrl.envs.GymLikeEnv", "reference/generated/torchrl.envs.GymWrapper", "reference/generated/torchrl.envs.HabitatEnv", "reference/generated/torchrl.envs.IsaacGymEnv", "reference/generated/torchrl.envs.IsaacGymWrapper", "reference/generated/torchrl.envs.JumanjiEnv", "reference/generated/torchrl.envs.JumanjiWrapper", "reference/generated/torchrl.envs.MOGymEnv", "reference/generated/torchrl.envs.MOGymWrapper", "reference/generated/torchrl.envs.MarlGroupMapType", "reference/generated/torchrl.envs.MeltingpotEnv", "reference/generated/torchrl.envs.MeltingpotWrapper", "reference/generated/torchrl.envs.ModelBasedEnvBase", "reference/generated/torchrl.envs.MultiThreadedEnv", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper", "reference/generated/torchrl.envs.OpenMLEnv", "reference/generated/torchrl.envs.OpenSpielEnv", "reference/generated/torchrl.envs.OpenSpielWrapper", "reference/generated/torchrl.envs.ParallelEnv", "reference/generated/torchrl.envs.PendulumEnv", "reference/generated/torchrl.envs.PettingZooEnv", "reference/generated/torchrl.envs.PettingZooWrapper", "reference/generated/torchrl.envs.RoboHiveEnv", "reference/generated/torchrl.envs.SMACv2Env", "reference/generated/torchrl.envs.SMACv2Wrapper", "reference/generated/torchrl.envs.SerialEnv", "reference/generated/torchrl.envs.TicTacToeEnv", "reference/generated/torchrl.envs.UnityMLAgentsEnv", "reference/generated/torchrl.envs.UnityMLAgentsWrapper", "reference/generated/torchrl.envs.VmasEnv", "reference/generated/torchrl.envs.VmasWrapper", "reference/generated/torchrl.envs.check_marl_grouping", "reference/generated/torchrl.envs.gym_backend", "reference/generated/torchrl.envs.model_based.dreamer.DreamerDecoder", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv", "reference/generated/torchrl.envs.set_gym_backend", "reference/generated/torchrl.envs.transforms.ActionDiscretizer", "reference/generated/torchrl.envs.transforms.ActionMask", "reference/generated/torchrl.envs.transforms.AutoResetEnv", "reference/generated/torchrl.envs.transforms.AutoResetTransform", "reference/generated/torchrl.envs.transforms.BatchSizeTransform", "reference/generated/torchrl.envs.transforms.BinarizeReward", "reference/generated/torchrl.envs.transforms.BurnInTransform", "reference/generated/torchrl.envs.transforms.CatFrames", "reference/generated/torchrl.envs.transforms.CatTensors", "reference/generated/torchrl.envs.transforms.CenterCrop", "reference/generated/torchrl.envs.transforms.ClipTransform", "reference/generated/torchrl.envs.transforms.Compose", "reference/generated/torchrl.envs.transforms.Crop", "reference/generated/torchrl.envs.transforms.DTypeCastTransform", "reference/generated/torchrl.envs.transforms.DeviceCastTransform", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection", "reference/generated/torchrl.envs.transforms.DoubleToFloat", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform", "reference/generated/torchrl.envs.transforms.ExcludeTransform", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck", "reference/generated/torchrl.envs.transforms.FlattenObservation", "reference/generated/torchrl.envs.transforms.FrameSkipTransform", "reference/generated/torchrl.envs.transforms.GrayScale", "reference/generated/torchrl.envs.transforms.InitTracker", "reference/generated/torchrl.envs.transforms.KLRewardTransform", "reference/generated/torchrl.envs.transforms.NoopResetEnv", "reference/generated/torchrl.envs.transforms.ObservationNorm", "reference/generated/torchrl.envs.transforms.ObservationTransform", "reference/generated/torchrl.envs.transforms.PermuteTransform", "reference/generated/torchrl.envs.transforms.PinMemoryTransform", "reference/generated/torchrl.envs.transforms.R3MTransform", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict", "reference/generated/torchrl.envs.transforms.RemoveEmptySpecs", "reference/generated/torchrl.envs.transforms.RenameTransform", "reference/generated/torchrl.envs.transforms.Resize", "reference/generated/torchrl.envs.transforms.Reward2GoTransform", "reference/generated/torchrl.envs.transforms.RewardClipping", "reference/generated/torchrl.envs.transforms.RewardScaling", "reference/generated/torchrl.envs.transforms.RewardSum", "reference/generated/torchrl.envs.transforms.SelectTransform", "reference/generated/torchrl.envs.transforms.SignTransform", "reference/generated/torchrl.envs.transforms.SqueezeTransform", "reference/generated/torchrl.envs.transforms.StepCounter", "reference/generated/torchrl.envs.transforms.TargetReturn", "reference/generated/torchrl.envs.transforms.TensorDictPrimer", "reference/generated/torchrl.envs.transforms.TimeMaxPool", "reference/generated/torchrl.envs.transforms.ToTensorImage", "reference/generated/torchrl.envs.transforms.Transform", "reference/generated/torchrl.envs.transforms.TransformedEnv", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform", "reference/generated/torchrl.envs.transforms.VC1Transform", "reference/generated/torchrl.envs.transforms.VIPRewardTransform", "reference/generated/torchrl.envs.transforms.VIPTransform", "reference/generated/torchrl.envs.transforms.VecGymEnvTransform", "reference/generated/torchrl.envs.transforms.VecNorm", "reference/generated/torchrl.envs.transforms.gSDENoise", "reference/generated/torchrl.envs.transforms.rb_transforms.MultiStepTransform", "reference/generated/torchrl.envs.utils.RandomPolicy", "reference/generated/torchrl.envs.utils.check_env_specs", "reference/generated/torchrl.envs.utils.exploration_type", "reference/generated/torchrl.envs.utils.get_available_libraries", "reference/generated/torchrl.envs.utils.make_composite_from_td", "reference/generated/torchrl.envs.utils.set_exploration_type", "reference/generated/torchrl.envs.utils.step_mdp", "reference/generated/torchrl.envs.utils.terminated_or_truncated", "reference/generated/torchrl.modules.AdditiveGaussianModule", "reference/generated/torchrl.modules.AdditiveGaussianWrapper", "reference/generated/torchrl.modules.BatchRenorm1d", "reference/generated/torchrl.modules.CEMPlanner", "reference/generated/torchrl.modules.ConsistentDropoutModule", "reference/generated/torchrl.modules.Conv3dNet", "reference/generated/torchrl.modules.ConvNet", "reference/generated/torchrl.modules.DTActor", "reference/generated/torchrl.modules.DdpgCnnActor", "reference/generated/torchrl.modules.DdpgCnnQNet", "reference/generated/torchrl.modules.DdpgMlpActor", "reference/generated/torchrl.modules.DdpgMlpQNet", "reference/generated/torchrl.modules.DecisionTransformer", "reference/generated/torchrl.modules.Delta", "reference/generated/torchrl.modules.DistributionalDQNnet", "reference/generated/torchrl.modules.DistributionalQValueHook", "reference/generated/torchrl.modules.DreamerActor", "reference/generated/torchrl.modules.DuelingCnnDQNet", "reference/generated/torchrl.modules.EGreedyModule", "reference/generated/torchrl.modules.EGreedyWrapper", "reference/generated/torchrl.modules.GRU", "reference/generated/torchrl.modules.GRUCell", "reference/generated/torchrl.modules.GRUModule", "reference/generated/torchrl.modules.IndependentNormal", "reference/generated/torchrl.modules.LSTM", "reference/generated/torchrl.modules.LSTMCell", "reference/generated/torchrl.modules.LSTMModule", "reference/generated/torchrl.modules.MLP", "reference/generated/torchrl.modules.MPCPlannerBase", "reference/generated/torchrl.modules.MPPIPlanner", "reference/generated/torchrl.modules.MaskedCategorical", "reference/generated/torchrl.modules.MaskedOneHotCategorical", "reference/generated/torchrl.modules.MultiAgentConvNet", "reference/generated/torchrl.modules.MultiAgentMLP", "reference/generated/torchrl.modules.MultiAgentNetBase", "reference/generated/torchrl.modules.NoisyLazyLinear", "reference/generated/torchrl.modules.NoisyLinear", "reference/generated/torchrl.modules.NormalParamWrapper", "reference/generated/torchrl.modules.ObsDecoder", "reference/generated/torchrl.modules.ObsEncoder", "reference/generated/torchrl.modules.OneHotCategorical", "reference/generated/torchrl.modules.OnlineDTActor", "reference/generated/torchrl.modules.OrnsteinUhlenbeckProcessModule", "reference/generated/torchrl.modules.OrnsteinUhlenbeckProcessWrapper", "reference/generated/torchrl.modules.QMixer", "reference/generated/torchrl.modules.QValueHook", "reference/generated/torchrl.modules.RSSMPosterior", "reference/generated/torchrl.modules.RSSMPrior", "reference/generated/torchrl.modules.Squeeze2dLayer", "reference/generated/torchrl.modules.SqueezeLayer", "reference/generated/torchrl.modules.TanhDelta", "reference/generated/torchrl.modules.TanhNormal", "reference/generated/torchrl.modules.TruncatedNormal", "reference/generated/torchrl.modules.VDNMixer", "reference/generated/torchrl.modules.VmapModule", "reference/generated/torchrl.modules.reset_noise", "reference/generated/torchrl.modules.tensordict_module.Actor", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.MultiStepActorWrapper", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor", "reference/generated/torchrl.modules.tensordict_module.QValueActor", "reference/generated/torchrl.modules.tensordict_module.QValueModule", "reference/generated/torchrl.modules.tensordict_module.SafeModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential", "reference/generated/torchrl.modules.tensordict_module.SafeSequential", "reference/generated/torchrl.modules.tensordict_module.TanhModule", "reference/generated/torchrl.modules.tensordict_module.ValueOperator", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper", "reference/generated/torchrl.modules.utils.biased_softplus", "reference/generated/torchrl.modules.utils.get_primers_from_module", "reference/generated/torchrl.modules.utils.inv_softplus", "reference/generated/torchrl.modules.utils.mappings", "reference/generated/torchrl.objectives.A2CLoss", "reference/generated/torchrl.objectives.CQLLoss", "reference/generated/torchrl.objectives.ClipPPOLoss", "reference/generated/torchrl.objectives.CrossQLoss", "reference/generated/torchrl.objectives.DDPGLoss", "reference/generated/torchrl.objectives.DQNLoss", "reference/generated/torchrl.objectives.DTLoss", "reference/generated/torchrl.objectives.DiscreteCQLLoss", "reference/generated/torchrl.objectives.DiscreteIQLLoss", "reference/generated/torchrl.objectives.DiscreteSACLoss", "reference/generated/torchrl.objectives.DistributionalDQNLoss", "reference/generated/torchrl.objectives.DreamerActorLoss", "reference/generated/torchrl.objectives.DreamerModelLoss", "reference/generated/torchrl.objectives.DreamerValueLoss", "reference/generated/torchrl.objectives.GAILLoss", "reference/generated/torchrl.objectives.HardUpdate", "reference/generated/torchrl.objectives.IQLLoss", "reference/generated/torchrl.objectives.KLPENPPOLoss", "reference/generated/torchrl.objectives.LossModule", "reference/generated/torchrl.objectives.OnlineDTLoss", "reference/generated/torchrl.objectives.PPOLoss", "reference/generated/torchrl.objectives.REDQLoss", "reference/generated/torchrl.objectives.ReinforceLoss", "reference/generated/torchrl.objectives.SACLoss", "reference/generated/torchrl.objectives.SoftUpdate", "reference/generated/torchrl.objectives.TD3BCLoss", "reference/generated/torchrl.objectives.TD3Loss", "reference/generated/torchrl.objectives.ValueEstimators", "reference/generated/torchrl.objectives.default_value_kwargs", "reference/generated/torchrl.objectives.distance_loss", "reference/generated/torchrl.objectives.hold_out_net", "reference/generated/torchrl.objectives.hold_out_params", "reference/generated/torchrl.objectives.multiagent.QMixerLoss", "reference/generated/torchrl.objectives.next_state_value", "reference/generated/torchrl.objectives.value.GAE", "reference/generated/torchrl.objectives.value.TD0Estimator", "reference/generated/torchrl.objectives.value.TD1Estimator", "reference/generated/torchrl.objectives.value.TDLambdaEstimator", "reference/generated/torchrl.objectives.value.ValueEstimatorBase", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.reward2go", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate", "reference/generated/torchrl.record.PixelRenderTransform", "reference/generated/torchrl.record.TensorDictRecorder", "reference/generated/torchrl.record.VideoRecorder", "reference/generated/torchrl.record.loggers.Logger", "reference/generated/torchrl.record.loggers.csv.CSVLogger", "reference/generated/torchrl.record.loggers.generate_exp_name", "reference/generated/torchrl.record.loggers.get_logger", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger", "reference/generated/torchrl.record.loggers.wandb.WandbLogger", "reference/generated/torchrl.trainers.BatchSubSampler", "reference/generated/torchrl.trainers.ClearCudaCache", "reference/generated/torchrl.trainers.CountFramesLog", "reference/generated/torchrl.trainers.LogReward", "reference/generated/torchrl.trainers.OptimizerHook", "reference/generated/torchrl.trainers.Recorder", "reference/generated/torchrl.trainers.ReplayBufferTrainer", "reference/generated/torchrl.trainers.RewardNormalizer", "reference/generated/torchrl.trainers.SelectKeys", "reference/generated/torchrl.trainers.Trainer", "reference/generated/torchrl.trainers.TrainerHookBase", "reference/generated/torchrl.trainers.UpdateWeights", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy", "reference/generated/torchrl.trainers.helpers.make_dqn_loss", "reference/generated/torchrl.trainers.helpers.make_replay_buffer", "reference/generated/torchrl.trainers.helpers.make_target_updater", "reference/generated/torchrl.trainers.helpers.make_trainer", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor", "reference/generated/torchrl.trainers.helpers.sync_async_collector", "reference/generated/torchrl.trainers.helpers.sync_sync_collector", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor", "reference/generated/tutorials/README", "reference/index", "reference/knowledge_base", "reference/modules", "reference/objectives", "reference/trainers", "reference/utils", "sg_execution_times", "tutorials/coding_ddpg", "tutorials/coding_dqn", "tutorials/coding_ppo", "tutorials/dqn_with_rnn", "tutorials/getting-started-0", "tutorials/getting-started-1", "tutorials/getting-started-2", "tutorials/getting-started-3", "tutorials/getting-started-4", "tutorials/getting-started-5", "tutorials/index", "tutorials/multi_task", "tutorials/multiagent_competitive_ddpg", "tutorials/multiagent_ppo", "tutorials/pendulum", "tutorials/pretrained_models", "tutorials/rb_tutorial", "tutorials/sg_execution_times", "tutorials/torchrl_demo", "tutorials/torchrl_envs"], "filenames": ["index.rst", "reference/collectors.rst", "reference/data.rst", "reference/envs.rst", "reference/generated/knowledge_base/DEBUGGING_RL.rst", "reference/generated/knowledge_base/GYM.rst", "reference/generated/knowledge_base/HABITAT.rst", "reference/generated/knowledge_base/MUJOCO_INSTALLATION.rst", "reference/generated/knowledge_base/PRO-TIPS.rst", "reference/generated/knowledge_base/RESOURCES.rst", "reference/generated/knowledge_base/VERSIONING_ISSUES.rst", "reference/generated/knowledge_base/VIDEO_CUSTOMISATION.rst", "reference/generated/torchrl._utils.implement_for.rst", "reference/generated/torchrl.collectors.DataCollectorBase.rst", "reference/generated/torchrl.collectors.MultiSyncDataCollector.rst", "reference/generated/torchrl.collectors.MultiaSyncDataCollector.rst", "reference/generated/torchrl.collectors.SyncDataCollector.rst", "reference/generated/torchrl.collectors.aSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RPCDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RayCollector.rst", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher.rst", "reference/generated/torchrl.collectors.utils.split_trajectories.rst", "reference/generated/torchrl.data.AdaptiveKLController.rst", "reference/generated/torchrl.data.Binary.rst", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec.rst", "reference/generated/torchrl.data.BinaryToDecimal.rst", "reference/generated/torchrl.data.Bounded.rst", "reference/generated/torchrl.data.BoundedTensorSpec.rst", "reference/generated/torchrl.data.Categorical.rst", "reference/generated/torchrl.data.Composite.rst", "reference/generated/torchrl.data.CompositeSpec.rst", "reference/generated/torchrl.data.ConstantKLController.rst", "reference/generated/torchrl.data.DiscreteTensorSpec.rst", "reference/generated/torchrl.data.Flat2TED.rst", "reference/generated/torchrl.data.H5Combine.rst", "reference/generated/torchrl.data.H5Split.rst", "reference/generated/torchrl.data.HashToInt.rst", "reference/generated/torchrl.data.LazyStackedCompositeSpec.rst", "reference/generated/torchrl.data.LazyStackedTensorSpec.rst", "reference/generated/torchrl.data.MultiCategorical.rst", "reference/generated/torchrl.data.MultiDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiOneHot.rst", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiStep.rst", "reference/generated/torchrl.data.Nested2TED.rst", "reference/generated/torchrl.data.NonTensor.rst", "reference/generated/torchrl.data.NonTensorSpec.rst", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.PairwiseDataset.rst", "reference/generated/torchrl.data.PrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.PromptData.rst", "reference/generated/torchrl.data.PromptTensorDictTokenizer.rst", "reference/generated/torchrl.data.QueryModule.rst", "reference/generated/torchrl.data.RandomProjectionHash.rst", "reference/generated/torchrl.data.ReplayBuffer.rst", "reference/generated/torchrl.data.RewardData.rst", "reference/generated/torchrl.data.RolloutFromModel.rst", "reference/generated/torchrl.data.SipHash.rst", "reference/generated/torchrl.data.Stacked.rst", "reference/generated/torchrl.data.StackedComposite.rst", "reference/generated/torchrl.data.TED2Flat.rst", "reference/generated/torchrl.data.TED2Nested.rst", "reference/generated/torchrl.data.TensorDictMap.rst", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictTokenizer.rst", "reference/generated/torchrl.data.TensorMap.rst", "reference/generated/torchrl.data.TensorSpec.rst", "reference/generated/torchrl.data.TokenizedDatasetLoader.rst", "reference/generated/torchrl.data.Unbounded.rst", "reference/generated/torchrl.data.UnboundedContinuous.rst", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec.rst", "reference/generated/torchrl.data.UnboundedDiscrete.rst", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec.rst", "reference/generated/torchrl.data.check_no_exclusive_keys.rst", "reference/generated/torchrl.data.consolidate_spec.rst", "reference/generated/torchrl.data.contains_lazy_spec.rst", "reference/generated/torchrl.data.create_infinite_iterator.rst", "reference/generated/torchrl.data.datasets.AtariDQNExperienceReplay.rst", "reference/generated/torchrl.data.datasets.BaseDatasetExperienceReplay.rst", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.GenDGRLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.MinariExperienceReplay.rst", "reference/generated/torchrl.data.datasets.OpenMLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.OpenXExperienceReplay.rst", "reference/generated/torchrl.data.datasets.RobosetExperienceReplay.rst", "reference/generated/torchrl.data.datasets.VD4RLExperienceReplay.rst", "reference/generated/torchrl.data.get_dataloader.rst", "reference/generated/torchrl.data.replay_buffers.FlatStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.H5StorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.ImmutableDatasetWriter.rst", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage.rst", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.ListStorage.rst", "reference/generated/torchrl.data.replay_buffers.ListStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.NestedStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSliceSampler.rst", "reference/generated/torchrl.data.replay_buffers.RandomSampler.rst", "reference/generated/torchrl.data.replay_buffers.ReplayBufferEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.Sampler.rst", "reference/generated/torchrl.data.replay_buffers.SamplerEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.SliceSampler.rst", "reference/generated/torchrl.data.replay_buffers.SliceSamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.Storage.rst", "reference/generated/torchrl.data.replay_buffers.StorageCheckpointerBase.rst", "reference/generated/torchrl.data.replay_buffers.StorageEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.StorageEnsembleCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictMaxValueWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.TensorStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.Writer.rst", "reference/generated/torchrl.data.replay_buffers.WriterEnsemble.rst", "reference/generated/torchrl.envs.BraxEnv.rst", "reference/generated/torchrl.envs.BraxWrapper.rst", "reference/generated/torchrl.envs.DMControlEnv.rst", "reference/generated/torchrl.envs.DMControlWrapper.rst", "reference/generated/torchrl.envs.EnvBase.rst", "reference/generated/torchrl.envs.EnvCreator.rst", "reference/generated/torchrl.envs.EnvMetaData.rst", "reference/generated/torchrl.envs.GymEnv.rst", "reference/generated/torchrl.envs.GymLikeEnv.rst", "reference/generated/torchrl.envs.GymWrapper.rst", "reference/generated/torchrl.envs.HabitatEnv.rst", "reference/generated/torchrl.envs.IsaacGymEnv.rst", "reference/generated/torchrl.envs.IsaacGymWrapper.rst", "reference/generated/torchrl.envs.JumanjiEnv.rst", "reference/generated/torchrl.envs.JumanjiWrapper.rst", "reference/generated/torchrl.envs.MOGymEnv.rst", "reference/generated/torchrl.envs.MOGymWrapper.rst", "reference/generated/torchrl.envs.MarlGroupMapType.rst", "reference/generated/torchrl.envs.MeltingpotEnv.rst", "reference/generated/torchrl.envs.MeltingpotWrapper.rst", "reference/generated/torchrl.envs.ModelBasedEnvBase.rst", "reference/generated/torchrl.envs.MultiThreadedEnv.rst", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper.rst", "reference/generated/torchrl.envs.OpenMLEnv.rst", "reference/generated/torchrl.envs.OpenSpielEnv.rst", "reference/generated/torchrl.envs.OpenSpielWrapper.rst", "reference/generated/torchrl.envs.ParallelEnv.rst", "reference/generated/torchrl.envs.PendulumEnv.rst", "reference/generated/torchrl.envs.PettingZooEnv.rst", "reference/generated/torchrl.envs.PettingZooWrapper.rst", "reference/generated/torchrl.envs.RoboHiveEnv.rst", "reference/generated/torchrl.envs.SMACv2Env.rst", "reference/generated/torchrl.envs.SMACv2Wrapper.rst", "reference/generated/torchrl.envs.SerialEnv.rst", "reference/generated/torchrl.envs.TicTacToeEnv.rst", "reference/generated/torchrl.envs.UnityMLAgentsEnv.rst", "reference/generated/torchrl.envs.UnityMLAgentsWrapper.rst", "reference/generated/torchrl.envs.VmasEnv.rst", "reference/generated/torchrl.envs.VmasWrapper.rst", "reference/generated/torchrl.envs.check_marl_grouping.rst", "reference/generated/torchrl.envs.gym_backend.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerDecoder.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv.rst", "reference/generated/torchrl.envs.set_gym_backend.rst", "reference/generated/torchrl.envs.transforms.ActionDiscretizer.rst", "reference/generated/torchrl.envs.transforms.ActionMask.rst", "reference/generated/torchrl.envs.transforms.AutoResetEnv.rst", "reference/generated/torchrl.envs.transforms.AutoResetTransform.rst", "reference/generated/torchrl.envs.transforms.BatchSizeTransform.rst", "reference/generated/torchrl.envs.transforms.BinarizeReward.rst", "reference/generated/torchrl.envs.transforms.BurnInTransform.rst", "reference/generated/torchrl.envs.transforms.CatFrames.rst", "reference/generated/torchrl.envs.transforms.CatTensors.rst", "reference/generated/torchrl.envs.transforms.CenterCrop.rst", "reference/generated/torchrl.envs.transforms.ClipTransform.rst", "reference/generated/torchrl.envs.transforms.Compose.rst", "reference/generated/torchrl.envs.transforms.Crop.rst", "reference/generated/torchrl.envs.transforms.DTypeCastTransform.rst", "reference/generated/torchrl.envs.transforms.DeviceCastTransform.rst", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection.rst", "reference/generated/torchrl.envs.transforms.DoubleToFloat.rst", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform.rst", "reference/generated/torchrl.envs.transforms.ExcludeTransform.rst", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck.rst", "reference/generated/torchrl.envs.transforms.FlattenObservation.rst", "reference/generated/torchrl.envs.transforms.FrameSkipTransform.rst", "reference/generated/torchrl.envs.transforms.GrayScale.rst", "reference/generated/torchrl.envs.transforms.InitTracker.rst", "reference/generated/torchrl.envs.transforms.KLRewardTransform.rst", "reference/generated/torchrl.envs.transforms.NoopResetEnv.rst", "reference/generated/torchrl.envs.transforms.ObservationNorm.rst", "reference/generated/torchrl.envs.transforms.ObservationTransform.rst", "reference/generated/torchrl.envs.transforms.PermuteTransform.rst", "reference/generated/torchrl.envs.transforms.PinMemoryTransform.rst", "reference/generated/torchrl.envs.transforms.R3MTransform.rst", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict.rst", "reference/generated/torchrl.envs.transforms.RemoveEmptySpecs.rst", "reference/generated/torchrl.envs.transforms.RenameTransform.rst", "reference/generated/torchrl.envs.transforms.Resize.rst", "reference/generated/torchrl.envs.transforms.Reward2GoTransform.rst", "reference/generated/torchrl.envs.transforms.RewardClipping.rst", "reference/generated/torchrl.envs.transforms.RewardScaling.rst", "reference/generated/torchrl.envs.transforms.RewardSum.rst", "reference/generated/torchrl.envs.transforms.SelectTransform.rst", "reference/generated/torchrl.envs.transforms.SignTransform.rst", "reference/generated/torchrl.envs.transforms.SqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.StepCounter.rst", "reference/generated/torchrl.envs.transforms.TargetReturn.rst", "reference/generated/torchrl.envs.transforms.TensorDictPrimer.rst", "reference/generated/torchrl.envs.transforms.TimeMaxPool.rst", "reference/generated/torchrl.envs.transforms.ToTensorImage.rst", "reference/generated/torchrl.envs.transforms.Transform.rst", "reference/generated/torchrl.envs.transforms.TransformedEnv.rst", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.VC1Transform.rst", "reference/generated/torchrl.envs.transforms.VIPRewardTransform.rst", "reference/generated/torchrl.envs.transforms.VIPTransform.rst", "reference/generated/torchrl.envs.transforms.VecGymEnvTransform.rst", "reference/generated/torchrl.envs.transforms.VecNorm.rst", "reference/generated/torchrl.envs.transforms.gSDENoise.rst", "reference/generated/torchrl.envs.transforms.rb_transforms.MultiStepTransform.rst", "reference/generated/torchrl.envs.utils.RandomPolicy.rst", "reference/generated/torchrl.envs.utils.check_env_specs.rst", "reference/generated/torchrl.envs.utils.exploration_type.rst", "reference/generated/torchrl.envs.utils.get_available_libraries.rst", "reference/generated/torchrl.envs.utils.make_composite_from_td.rst", "reference/generated/torchrl.envs.utils.set_exploration_type.rst", "reference/generated/torchrl.envs.utils.step_mdp.rst", "reference/generated/torchrl.envs.utils.terminated_or_truncated.rst", "reference/generated/torchrl.modules.AdditiveGaussianModule.rst", "reference/generated/torchrl.modules.AdditiveGaussianWrapper.rst", "reference/generated/torchrl.modules.BatchRenorm1d.rst", "reference/generated/torchrl.modules.CEMPlanner.rst", "reference/generated/torchrl.modules.ConsistentDropoutModule.rst", "reference/generated/torchrl.modules.Conv3dNet.rst", "reference/generated/torchrl.modules.ConvNet.rst", "reference/generated/torchrl.modules.DTActor.rst", "reference/generated/torchrl.modules.DdpgCnnActor.rst", "reference/generated/torchrl.modules.DdpgCnnQNet.rst", "reference/generated/torchrl.modules.DdpgMlpActor.rst", "reference/generated/torchrl.modules.DdpgMlpQNet.rst", "reference/generated/torchrl.modules.DecisionTransformer.rst", "reference/generated/torchrl.modules.Delta.rst", "reference/generated/torchrl.modules.DistributionalDQNnet.rst", "reference/generated/torchrl.modules.DistributionalQValueHook.rst", "reference/generated/torchrl.modules.DreamerActor.rst", "reference/generated/torchrl.modules.DuelingCnnDQNet.rst", "reference/generated/torchrl.modules.EGreedyModule.rst", "reference/generated/torchrl.modules.EGreedyWrapper.rst", "reference/generated/torchrl.modules.GRU.rst", "reference/generated/torchrl.modules.GRUCell.rst", "reference/generated/torchrl.modules.GRUModule.rst", "reference/generated/torchrl.modules.IndependentNormal.rst", "reference/generated/torchrl.modules.LSTM.rst", "reference/generated/torchrl.modules.LSTMCell.rst", "reference/generated/torchrl.modules.LSTMModule.rst", "reference/generated/torchrl.modules.MLP.rst", "reference/generated/torchrl.modules.MPCPlannerBase.rst", "reference/generated/torchrl.modules.MPPIPlanner.rst", "reference/generated/torchrl.modules.MaskedCategorical.rst", "reference/generated/torchrl.modules.MaskedOneHotCategorical.rst", "reference/generated/torchrl.modules.MultiAgentConvNet.rst", "reference/generated/torchrl.modules.MultiAgentMLP.rst", "reference/generated/torchrl.modules.MultiAgentNetBase.rst", "reference/generated/torchrl.modules.NoisyLazyLinear.rst", "reference/generated/torchrl.modules.NoisyLinear.rst", "reference/generated/torchrl.modules.NormalParamWrapper.rst", "reference/generated/torchrl.modules.ObsDecoder.rst", "reference/generated/torchrl.modules.ObsEncoder.rst", "reference/generated/torchrl.modules.OneHotCategorical.rst", "reference/generated/torchrl.modules.OnlineDTActor.rst", "reference/generated/torchrl.modules.OrnsteinUhlenbeckProcessModule.rst", "reference/generated/torchrl.modules.OrnsteinUhlenbeckProcessWrapper.rst", "reference/generated/torchrl.modules.QMixer.rst", "reference/generated/torchrl.modules.QValueHook.rst", "reference/generated/torchrl.modules.RSSMPosterior.rst", "reference/generated/torchrl.modules.RSSMPrior.rst", "reference/generated/torchrl.modules.Squeeze2dLayer.rst", "reference/generated/torchrl.modules.SqueezeLayer.rst", "reference/generated/torchrl.modules.TanhDelta.rst", "reference/generated/torchrl.modules.TanhNormal.rst", "reference/generated/torchrl.modules.TruncatedNormal.rst", "reference/generated/torchrl.modules.VDNMixer.rst", "reference/generated/torchrl.modules.VmapModule.rst", "reference/generated/torchrl.modules.reset_noise.rst", "reference/generated/torchrl.modules.tensordict_module.Actor.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.MultiStepActorWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential.rst", "reference/generated/torchrl.modules.tensordict_module.SafeSequential.rst", "reference/generated/torchrl.modules.tensordict_module.TanhModule.rst", "reference/generated/torchrl.modules.tensordict_module.ValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper.rst", "reference/generated/torchrl.modules.utils.biased_softplus.rst", "reference/generated/torchrl.modules.utils.get_primers_from_module.rst", "reference/generated/torchrl.modules.utils.inv_softplus.rst", "reference/generated/torchrl.modules.utils.mappings.rst", "reference/generated/torchrl.objectives.A2CLoss.rst", "reference/generated/torchrl.objectives.CQLLoss.rst", "reference/generated/torchrl.objectives.ClipPPOLoss.rst", "reference/generated/torchrl.objectives.CrossQLoss.rst", "reference/generated/torchrl.objectives.DDPGLoss.rst", "reference/generated/torchrl.objectives.DQNLoss.rst", "reference/generated/torchrl.objectives.DTLoss.rst", "reference/generated/torchrl.objectives.DiscreteCQLLoss.rst", "reference/generated/torchrl.objectives.DiscreteIQLLoss.rst", "reference/generated/torchrl.objectives.DiscreteSACLoss.rst", "reference/generated/torchrl.objectives.DistributionalDQNLoss.rst", "reference/generated/torchrl.objectives.DreamerActorLoss.rst", "reference/generated/torchrl.objectives.DreamerModelLoss.rst", "reference/generated/torchrl.objectives.DreamerValueLoss.rst", "reference/generated/torchrl.objectives.GAILLoss.rst", "reference/generated/torchrl.objectives.HardUpdate.rst", "reference/generated/torchrl.objectives.IQLLoss.rst", "reference/generated/torchrl.objectives.KLPENPPOLoss.rst", "reference/generated/torchrl.objectives.LossModule.rst", "reference/generated/torchrl.objectives.OnlineDTLoss.rst", "reference/generated/torchrl.objectives.PPOLoss.rst", "reference/generated/torchrl.objectives.REDQLoss.rst", "reference/generated/torchrl.objectives.ReinforceLoss.rst", "reference/generated/torchrl.objectives.SACLoss.rst", "reference/generated/torchrl.objectives.SoftUpdate.rst", "reference/generated/torchrl.objectives.TD3BCLoss.rst", "reference/generated/torchrl.objectives.TD3Loss.rst", "reference/generated/torchrl.objectives.ValueEstimators.rst", "reference/generated/torchrl.objectives.default_value_kwargs.rst", "reference/generated/torchrl.objectives.distance_loss.rst", "reference/generated/torchrl.objectives.hold_out_net.rst", "reference/generated/torchrl.objectives.hold_out_params.rst", "reference/generated/torchrl.objectives.multiagent.QMixerLoss.rst", "reference/generated/torchrl.objectives.next_state_value.rst", "reference/generated/torchrl.objectives.value.GAE.rst", "reference/generated/torchrl.objectives.value.TD0Estimator.rst", "reference/generated/torchrl.objectives.value.TD1Estimator.rst", "reference/generated/torchrl.objectives.value.TDLambdaEstimator.rst", "reference/generated/torchrl.objectives.value.ValueEstimatorBase.rst", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.reward2go.rst", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate.rst", "reference/generated/torchrl.record.PixelRenderTransform.rst", "reference/generated/torchrl.record.TensorDictRecorder.rst", "reference/generated/torchrl.record.VideoRecorder.rst", "reference/generated/torchrl.record.loggers.Logger.rst", "reference/generated/torchrl.record.loggers.csv.CSVLogger.rst", "reference/generated/torchrl.record.loggers.generate_exp_name.rst", "reference/generated/torchrl.record.loggers.get_logger.rst", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger.rst", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger.rst", "reference/generated/torchrl.record.loggers.wandb.WandbLogger.rst", "reference/generated/torchrl.trainers.BatchSubSampler.rst", "reference/generated/torchrl.trainers.ClearCudaCache.rst", "reference/generated/torchrl.trainers.CountFramesLog.rst", "reference/generated/torchrl.trainers.LogReward.rst", "reference/generated/torchrl.trainers.OptimizerHook.rst", "reference/generated/torchrl.trainers.Recorder.rst", "reference/generated/torchrl.trainers.ReplayBufferTrainer.rst", "reference/generated/torchrl.trainers.RewardNormalizer.rst", "reference/generated/torchrl.trainers.SelectKeys.rst", "reference/generated/torchrl.trainers.Trainer.rst", "reference/generated/torchrl.trainers.TrainerHookBase.rst", "reference/generated/torchrl.trainers.UpdateWeights.rst", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip.rst", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout.rst", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_loss.rst", "reference/generated/torchrl.trainers.helpers.make_replay_buffer.rst", "reference/generated/torchrl.trainers.helpers.make_target_updater.rst", "reference/generated/torchrl.trainers.helpers.make_trainer.rst", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor.rst", "reference/generated/torchrl.trainers.helpers.sync_async_collector.rst", "reference/generated/torchrl.trainers.helpers.sync_sync_collector.rst", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor.rst", "reference/generated/tutorials/README.rst", "reference/index.rst", "reference/knowledge_base.rst", "reference/modules.rst", "reference/objectives.rst", "reference/trainers.rst", "reference/utils.rst", "sg_execution_times.rst", "tutorials/coding_ddpg.rst", "tutorials/coding_dqn.rst", "tutorials/coding_ppo.rst", "tutorials/dqn_with_rnn.rst", "tutorials/getting-started-0.rst", "tutorials/getting-started-1.rst", "tutorials/getting-started-2.rst", "tutorials/getting-started-3.rst", "tutorials/getting-started-4.rst", "tutorials/getting-started-5.rst", "tutorials/index.rst", "tutorials/multi_task.rst", "tutorials/multiagent_competitive_ddpg.rst", "tutorials/multiagent_ppo.rst", "tutorials/pendulum.rst", "tutorials/pretrained_models.rst", "tutorials/rb_tutorial.rst", "tutorials/sg_execution_times.rst", "tutorials/torchrl_demo.rst", "tutorials/torchrl_envs.rst"], "titles": ["TorchRL", "torchrl.collectors package", "torchrl.data package", "torchrl.envs package", "Things to consider when debugging RL", "Working with gym", "Working with <code class=\"docutils literal notranslate\"><span class=\"pre\">habitat-lab</span></code>", "Working with MuJoCo-based environments", "Common PyTorch errors and solutions", "Useful resources", "Versioning Issues", "Customising Video Renders", "implement_for", "DataCollectorBase", "MultiSyncDataCollector", "MultiaSyncDataCollector", "SyncDataCollector", "aSyncDataCollector", "DistributedDataCollector", "DistributedSyncDataCollector", "RPCDataCollector", "RayCollector", "submitit_delayed_launcher", "split_trajectories", "AdaptiveKLController", "Binary", "BinaryDiscreteTensorSpec", "BinaryToDecimal", "Bounded", "BoundedTensorSpec", "Categorical", "Composite", "CompositeSpec", "ConstantKLController", "DiscreteTensorSpec", "Flat2TED", "H5Combine", "H5Split", "HashToInt", "LazyStackedCompositeSpec", "LazyStackedTensorSpec", "MultiCategorical", "MultiDiscreteTensorSpec", "MultiOneHot", "MultiOneHotDiscreteTensorSpec", "MultiStep", "Nested2TED", "NonTensor", "NonTensorSpec", "OneHotDiscreteTensorSpec", "PairwiseDataset", "PrioritizedReplayBuffer", "PromptData", "PromptTensorDictTokenizer", "QueryModule", "RandomProjectionHash", "ReplayBuffer", "RewardData", "RolloutFromModel", "SipHash", "Stacked", "StackedComposite", "TED2Flat", "TED2Nested", "TensorDictMap", "TensorDictPrioritizedReplayBuffer", "TensorDictReplayBuffer", "TensorDictTokenizer", "TensorMap", "TensorSpec", "TokenizedDatasetLoader", "Unbounded", "UnboundedContinuous", "UnboundedContinuousTensorSpec", "UnboundedDiscrete", "UnboundedDiscreteTensorSpec", "check_no_exclusive_keys", "consolidate_spec", "contains_lazy_spec", "create_infinite_iterator", "AtariDQNExperienceReplay", "BaseDatasetExperienceReplay", "D4RLExperienceReplay", "GenDGRLExperienceReplay", "MinariExperienceReplay", "OpenMLExperienceReplay", "OpenXExperienceReplay", "RobosetExperienceReplay", "VD4RLExperienceReplay", "get_dataloader", "FlatStorageCheckpointer", "H5StorageCheckpointer", "ImmutableDatasetWriter", "LazyMemmapStorage", "LazyTensorStorage", "ListStorage", "ListStorageCheckpointer", "NestedStorageCheckpointer", "PrioritizedSampler", "PrioritizedSliceSampler", "RandomSampler", "ReplayBufferEnsemble", "RoundRobinWriter", "Sampler", "SamplerEnsemble", "SamplerWithoutReplacement", "SliceSampler", "SliceSamplerWithoutReplacement", "Storage", "StorageCheckpointerBase", "StorageEnsemble", "StorageEnsembleCheckpointer", "TensorDictMaxValueWriter", "TensorDictRoundRobinWriter", "TensorStorage", "TensorStorageCheckpointer", "Writer", "WriterEnsemble", "BraxEnv", "BraxWrapper", "DMControlEnv", "DMControlWrapper", "EnvBase", "EnvCreator", "EnvMetaData", "GymEnv", "GymLikeEnv", "GymWrapper", "HabitatEnv", "IsaacGymEnv", "IsaacGymWrapper", "JumanjiEnv", "JumanjiWrapper", "MOGymEnv", "MOGymWrapper", "MarlGroupMapType", "MeltingpotEnv", "MeltingpotWrapper", "ModelBasedEnvBase", "MultiThreadedEnv", "MultiThreadedEnvWrapper", "OpenMLEnv", "OpenSpielEnv", "OpenSpielWrapper", "ParallelEnv", "PendulumEnv", "PettingZooEnv", "PettingZooWrapper", "RoboHiveEnv", "SMACv2Env", "SMACv2Wrapper", "SerialEnv", "TicTacToeEnv", "UnityMLAgentsEnv", "UnityMLAgentsWrapper", "VmasEnv", "VmasWrapper", "check_marl_grouping", "gym_backend", "DreamerDecoder", "DreamerEnv", "set_gym_backend", "ActionDiscretizer", "ActionMask", "AutoResetEnv", "AutoResetTransform", "BatchSizeTransform", "BinarizeReward", "BurnInTransform", "CatFrames", "CatTensors", "CenterCrop", "ClipTransform", "Compose", "Crop", "DTypeCastTransform", "DeviceCastTransform", "DiscreteActionProjection", "DoubleToFloat", "EndOfLifeTransform", "ExcludeTransform", "FiniteTensorDictCheck", "FlattenObservation", "FrameSkipTransform", "GrayScale", "InitTracker", "KLRewardTransform", "NoopResetEnv", "ObservationNorm", "ObservationTransform", "PermuteTransform", "PinMemoryTransform", "R3MTransform", "RandomCropTensorDict", "RemoveEmptySpecs", "RenameTransform", "Resize", "Reward2GoTransform", "RewardClipping", "RewardScaling", "RewardSum", "SelectTransform", "SignTransform", "SqueezeTransform", "StepCounter", "TargetReturn", "TensorDictPrimer", "TimeMaxPool", "ToTensorImage", "Transform", "TransformedEnv", "UnsqueezeTransform", "VC1Transform", "VIPRewardTransform", "VIPTransform", "VecGymEnvTransform", "VecNorm", "gSDENoise", "MultiStepTransform", "RandomPolicy", "check_env_specs", "exploration_type", "get_available_libraries", "make_composite_from_td", "set_exploration_type", "step_mdp", "terminated_or_truncated", "AdditiveGaussianModule", "AdditiveGaussianWrapper", "BatchRenorm1d", "CEMPlanner", "ConsistentDropoutModule", "Conv3dNet", "ConvNet", "DTActor", "DdpgCnnActor", "DdpgCnnQNet", "DdpgMlpActor", "DdpgMlpQNet", "DecisionTransformer", "Delta", "DistributionalDQNnet", "DistributionalQValueHook", "DreamerActor", "DuelingCnnDQNet", "EGreedyModule", "EGreedyWrapper", "GRU", "GRUCell", "GRUModule", "IndependentNormal", "LSTM", "LSTMCell", "LSTMModule", "MLP", "MPCPlannerBase", "MPPIPlanner", "MaskedCategorical", "MaskedOneHotCategorical", "MultiAgentConvNet", "MultiAgentMLP", "MultiAgentNetBase", "NoisyLazyLinear", "NoisyLinear", "NormalParamWrapper", "ObsDecoder", "ObsEncoder", "OneHotCategorical", "OnlineDTActor", "OrnsteinUhlenbeckProcessModule", "OrnsteinUhlenbeckProcessWrapper", "QMixer", "QValueHook", "RSSMPosterior", "RSSMPrior", "Squeeze2dLayer", "SqueezeLayer", "TanhDelta", "TanhNormal", "TruncatedNormal", "VDNMixer", "VmapModule", "reset_noise", "Actor", "ActorCriticOperator", "ActorCriticWrapper", "ActorValueOperator", "DecisionTransformerInferenceWrapper", "DistributionalQValueActor", "DistributionalQValueModule", "LMHeadActorValueOperator", "MultiStepActorWrapper", "ProbabilisticActor", "QValueActor", "QValueModule", "SafeModule", "SafeProbabilisticModule", "SafeProbabilisticTensorDictSequential", "SafeSequential", "TanhModule", "ValueOperator", "WorldModelWrapper", "biased_softplus", "get_primers_from_module", "inv_softplus", "mappings", "A2CLoss", "CQLLoss", "ClipPPOLoss", "CrossQLoss", "DDPGLoss", "DQNLoss", "DTLoss", "DiscreteCQLLoss", "DiscreteIQLLoss", "DiscreteSACLoss", "DistributionalDQNLoss", "DreamerActorLoss", "DreamerModelLoss", "DreamerValueLoss", "GAILLoss", "HardUpdate", "IQLLoss", "KLPENPPOLoss", "LossModule", "OnlineDTLoss", "PPOLoss", "REDQLoss", "ReinforceLoss", "SACLoss", "SoftUpdate", "TD3BCLoss", "TD3Loss", "ValueEstimators", "default_value_kwargs", "distance_loss", "hold_out_net", "hold_out_params", "QMixerLoss", "next_state_value", "GAE", "TD0Estimator", "TD1Estimator", "TDLambdaEstimator", "ValueEstimatorBase", "generalized_advantage_estimate", "reward2go", "td0_advantage_estimate", "td0_return_estimate", "td1_advantage_estimate", "td1_return_estimate", "td_lambda_advantage_estimate", "td_lambda_return_estimate", "vec_generalized_advantage_estimate", "vec_td1_advantage_estimate", "vec_td1_return_estimate", "vec_td_lambda_advantage_estimate", "vec_td_lambda_return_estimate", "PixelRenderTransform", "TensorDictRecorder", "VideoRecorder", "Logger", "CSVLogger", "generate_exp_name", "get_logger", "MLFlowLogger", "TensorboardLogger", "WandbLogger", "BatchSubSampler", "ClearCudaCache", "CountFramesLog", "LogReward", "OptimizerHook", "Recorder", "ReplayBufferTrainer", "RewardNormalizer", "SelectKeys", "Trainer", "TrainerHookBase", "UpdateWeights", "correct_for_frame_skip", "get_stats_random_rollout", "make_collector_offpolicy", "make_collector_onpolicy", "make_dqn_loss", "make_replay_buffer", "make_target_updater", "make_trainer", "parallel_env_constructor", "sync_async_collector", "sync_sync_collector", "transformed_env_constructor", "README Tutos", "API Reference", "Knowledge Base", "torchrl.modules package", "torchrl.objectives package", "torchrl.trainers package", "torchrl._utils package", "Computation times", "TorchRL objectives: Coding a DDPG loss", "TorchRL trainer: A DQN example", "Reinforcement Learning (PPO) with TorchRL Tutorial", "Recurrent DQN: Training recurrent policies", "Get started with Environments, TED and transforms", "Get started with TorchRL\u2019s modules", "Getting started with model optimization", "Get started with data collection and storage", "Get started with logging", "Get started with your own first training loop", "README Tutos", "Task-specific policy in multi-task environments", "Competitive Multi-Agent Reinforcement Learning (DDPG) with TorchRL Tutorial", "Multi-Agent Reinforcement Learning (PPO) with TorchRL Tutorial", "Pendulum: Writing your environment and transforms with TorchRL", "Using pretrained models", "Using Replay Buffers", "Computation times", "Introduction to TorchRL", "TorchRL envs"], "terms": {"an": [0, 1, 2, 3, 5, 8, 9, 10, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 64, 65, 66, 68, 69, 71, 72, 73, 74, 75, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 92, 93, 94, 95, 99, 101, 102, 104, 106, 108, 110, 112, 113, 114, 116, 117, 120, 121, 122, 123, 125, 126, 127, 128, 138, 139, 141, 144, 145, 146, 147, 148, 151, 152, 153, 157, 162, 163, 165, 166, 168, 169, 171, 175, 177, 178, 181, 187, 188, 192, 193, 194, 195, 197, 205, 206, 207, 208, 209, 210, 212, 215, 216, 218, 220, 228, 229, 232, 233, 235, 236, 237, 238, 245, 247, 249, 251, 253, 254, 255, 259, 260, 262, 269, 270, 275, 276, 278, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 296, 297, 301, 305, 306, 307, 308, 309, 311, 314, 315, 316, 317, 318, 319, 322, 323, 324, 326, 327, 328, 329, 332, 338, 340, 341, 342, 343, 344, 358, 360, 363, 367, 372, 373, 377, 378, 381, 388, 389, 390, 391, 394, 395, 396, 400, 401, 405, 406, 407, 408, 409, 411, 412, 413, 415, 416, 418, 419], "open": [0, 5, 7, 12, 50, 52, 57, 86, 93, 401, 412, 413, 418], "sourc": [0, 1, 4, 7, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419], "reinforc": [0, 3, 9, 83, 136, 137, 169, 235, 236, 237, 238, 242, 269, 270, 289, 306, 307, 309, 312, 313, 314, 316, 321, 322, 328, 329, 330, 331, 393, 399, 401, 404, 405, 410, 414, 417, 418], "learn": [0, 3, 7, 8, 9, 18, 45, 83, 84, 85, 87, 88, 122, 136, 137, 141, 144, 151, 169, 235, 236, 237, 238, 242, 256, 263, 269, 270, 289, 306, 307, 309, 312, 313, 314, 316, 320, 321, 322, 327, 328, 329, 330, 331, 393, 395, 396, 399, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 414, 416, 417, 418, 419], "rl": [0, 1, 2, 3, 5, 8, 10, 14, 15, 16, 17, 80, 138, 205, 263, 283, 292, 300, 306, 308, 323, 324, 326, 328, 368, 392, 394, 395, 396, 397, 400, 401, 402, 407, 410, 412, 413, 415, 416, 419], "librari": [0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 14, 15, 18, 19, 20, 53, 67, 120, 121, 130, 139, 222, 393, 394, 395, 398, 400, 401, 402, 404, 405, 407, 412, 413, 414, 419], "pytorch": [0, 1, 2, 3, 23, 84, 155, 156, 208, 220, 247, 251, 262, 263, 377, 392, 394, 395, 397, 400, 402, 403, 406, 410, 412, 413, 414, 415, 416, 418, 419], "you": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 27, 38, 45, 54, 55, 59, 64, 67, 83, 122, 126, 130, 135, 136, 137, 144, 145, 146, 147, 149, 150, 151, 152, 155, 156, 161, 216, 218, 251, 367, 394, 395, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 418, 419], "can": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 98, 99, 101, 105, 106, 107, 112, 118, 119, 120, 121, 122, 123, 125, 126, 127, 130, 131, 132, 135, 136, 137, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 155, 156, 161, 162, 163, 165, 166, 168, 169, 172, 173, 175, 177, 178, 179, 187, 188, 192, 193, 197, 200, 204, 205, 206, 209, 210, 212, 214, 216, 218, 220, 226, 228, 230, 231, 232, 233, 235, 245, 246, 247, 249, 250, 251, 253, 255, 256, 259, 260, 261, 263, 264, 279, 281, 283, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 322, 323, 324, 326, 327, 328, 329, 331, 332, 338, 339, 340, 341, 342, 343, 344, 358, 360, 367, 373, 389, 390, 391, 394, 395, 396, 397, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 418, 419], "directli": [0, 3, 4, 8, 23, 80, 101, 118, 119, 122, 125, 126, 138, 144, 145, 151, 152, 188, 197, 215, 324, 331, 391, 395, 401, 402, 404, 412, 413, 414, 416], "from": [0, 1, 3, 4, 5, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 94, 95, 98, 99, 101, 104, 105, 106, 107, 108, 110, 112, 114, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 131, 132, 135, 136, 137, 138, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 161, 162, 163, 165, 166, 168, 169, 170, 172, 175, 176, 177, 178, 179, 180, 185, 186, 188, 190, 192, 193, 194, 195, 196, 197, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 212, 214, 215, 216, 218, 219, 223, 225, 226, 228, 229, 230, 231, 232, 235, 236, 237, 238, 239, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 264, 267, 268, 269, 270, 271, 272, 278, 279, 280, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 303, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 322, 323, 324, 326, 327, 328, 329, 331, 332, 334, 338, 339, 340, 341, 342, 343, 346, 358, 359, 360, 368, 374, 377, 380, 381, 385, 387, 388, 391, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419], "pypi": [0, 2, 418], "see": [0, 1, 2, 3, 6, 7, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 54, 55, 56, 59, 60, 61, 64, 65, 66, 67, 69, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 99, 101, 106, 122, 126, 129, 132, 136, 137, 139, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 156, 173, 192, 206, 208, 209, 210, 212, 214, 216, 217, 218, 231, 232, 233, 247, 249, 250, 251, 253, 254, 260, 261, 262, 271, 279, 280, 284, 286, 292, 295, 296, 309, 320, 324, 331, 360, 367, 374, 395, 396, 400, 401, 402, 403, 404, 405, 406, 407, 408, 412, 413, 414, 416, 419], "more": [0, 1, 2, 3, 4, 6, 8, 9, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 54, 55, 56, 59, 60, 61, 64, 65, 66, 67, 69, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 99, 101, 112, 122, 125, 126, 127, 129, 130, 132, 136, 137, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 156, 208, 212, 217, 218, 227, 228, 229, 231, 242, 251, 254, 262, 264, 283, 288, 289, 295, 300, 306, 316, 324, 326, 340, 345, 353, 367, 372, 394, 395, 396, 397, 400, 401, 402, 403, 404, 405, 406, 407, 411, 412, 413, 414, 415, 419], "about": [0, 3, 5, 7, 9, 18, 19, 20, 43, 67, 84, 87, 88, 122, 144, 151, 396, 400, 401, 402, 404, 405, 406, 407, 408, 409, 412, 413, 414, 416, 418, 419], "instruct": [0, 6, 7, 10, 22, 82, 177, 179, 400, 401, 402, 403, 412, 413, 416], "dedic": [0, 1, 2, 3, 18, 19, 20, 21, 56, 65, 66, 101, 144, 151, 284, 285, 286, 395, 400, 404, 406, 407, 409, 411, 413], "section": [0, 2, 3, 4, 24, 247, 251, 401, 404, 409, 412, 413], "below": [0, 2, 3, 7, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 45, 54, 55, 56, 59, 64, 71, 89, 122, 126, 144, 145, 151, 152, 173, 192, 206, 209, 210, 212, 214, 218, 232, 233, 247, 250, 251, 254, 260, 279, 292, 295, 374, 400, 401, 402, 403, 404, 412, 414], "pip": [0, 10, 85, 404, 405, 406, 407, 408, 409, 413, 418, 419], "provid": [0, 1, 2, 3, 5, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 33, 38, 41, 43, 45, 50, 51, 52, 54, 55, 56, 57, 59, 64, 65, 66, 70, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 95, 99, 100, 101, 104, 106, 107, 115, 118, 119, 120, 121, 122, 125, 126, 127, 128, 131, 132, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 162, 166, 168, 169, 170, 171, 172, 174, 175, 178, 182, 187, 188, 190, 192, 193, 196, 197, 200, 201, 205, 206, 207, 210, 211, 212, 214, 215, 216, 218, 226, 228, 232, 233, 239, 242, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 257, 258, 259, 260, 270, 281, 283, 289, 291, 292, 293, 294, 299, 306, 307, 308, 309, 310, 311, 313, 315, 316, 317, 322, 323, 324, 326, 327, 328, 329, 331, 332, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 364, 368, 374, 381, 387, 394, 395, 396, 397, 400, 401, 402, 403, 404, 405, 407, 408, 411, 412, 413, 414, 415, 416, 418, 419], "python": [0, 3, 5, 6, 7, 10, 14, 15, 21, 59, 64, 140, 153, 154, 161, 247, 248, 249, 251, 252, 253, 257, 258, 397, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419], "first": [0, 1, 2, 3, 4, 5, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 31, 32, 39, 41, 42, 43, 44, 54, 61, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 94, 99, 106, 107, 112, 114, 122, 125, 126, 127, 132, 144, 145, 151, 152, 165, 166, 169, 170, 182, 188, 192, 193, 208, 210, 212, 233, 247, 249, 251, 253, 254, 260, 262, 266, 283, 287, 288, 289, 292, 293, 295, 296, 308, 318, 323, 324, 326, 359, 360, 376, 395, 399, 400, 401, 402, 403, 404, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419], "low": [0, 3, 28, 31, 55, 64, 69, 71, 99, 122, 126, 144, 145, 151, 152, 162, 172, 177, 223, 277, 278, 279, 287, 289, 292, 299, 400, 401, 402, 403, 412, 413, 414, 418, 419], "high": [0, 3, 9, 28, 31, 50, 52, 57, 65, 71, 99, 122, 126, 144, 145, 151, 152, 162, 172, 177, 187, 223, 277, 278, 279, 287, 289, 292, 299, 340, 345, 353, 400, 401, 402, 403, 412, 413, 414, 416, 418, 419], "level": [0, 2, 3, 4, 22, 31, 32, 39, 51, 56, 61, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 125, 127, 169, 204, 323, 400, 401, 407, 418], "abstract": [0, 3, 8, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 47, 48, 60, 61, 68, 69, 71, 72, 73, 74, 75, 80, 81, 85, 116, 122, 189, 255, 344, 369, 378, 397, 402, 414, 418], "ar": [0, 1, 2, 3, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 30, 31, 32, 34, 38, 39, 41, 42, 43, 44, 45, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 69, 70, 76, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 97, 101, 104, 105, 107, 108, 110, 112, 114, 122, 123, 125, 126, 127, 135, 136, 137, 138, 141, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 156, 162, 164, 165, 166, 168, 169, 172, 173, 175, 176, 177, 178, 179, 181, 182, 186, 187, 190, 192, 197, 200, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 218, 223, 225, 226, 230, 238, 240, 245, 247, 248, 249, 251, 252, 253, 255, 257, 258, 259, 260, 261, 263, 267, 270, 271, 274, 287, 288, 291, 292, 293, 295, 296, 297, 298, 299, 303, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 326, 327, 328, 329, 331, 332, 335, 338, 339, 340, 341, 342, 343, 344, 358, 367, 374, 387, 391, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 418, 419], "intend": [0, 7, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 70, 71, 72, 73, 74, 75, 168, 177, 281, 324, 395, 418], "effici": [0, 1, 2, 4, 8, 247, 263, 309, 395, 400, 401, 402, 403, 406, 407, 409, 411, 412, 413, 415, 416, 418], "modular": [0, 80, 298, 416, 418], "document": [0, 2, 5, 7, 11, 18, 19, 21, 27, 38, 45, 54, 55, 59, 64, 86, 122, 126, 142, 143, 144, 145, 151, 152, 153, 154, 210, 218, 392, 401, 403, 404, 407, 410, 418], "properli": [0, 1, 71, 122, 126, 144, 145, 151, 152, 225, 249, 253, 402, 408, 412, 413, 414, 418], "test": [0, 3, 5, 118, 119, 131, 132, 136, 137, 212, 220, 249, 253, 373, 387, 402, 403, 418], "The": [0, 1, 3, 4, 5, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 98, 99, 101, 104, 106, 107, 108, 112, 118, 119, 120, 121, 122, 125, 126, 127, 128, 130, 131, 132, 139, 140, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 155, 156, 162, 165, 166, 168, 169, 173, 175, 178, 179, 180, 188, 190, 192, 197, 199, 200, 201, 204, 205, 206, 209, 210, 212, 214, 215, 216, 218, 220, 225, 226, 227, 229, 230, 235, 236, 237, 238, 239, 242, 247, 248, 249, 251, 252, 253, 255, 256, 257, 258, 259, 263, 264, 269, 270, 272, 273, 274, 283, 284, 287, 288, 289, 291, 292, 293, 294, 295, 296, 298, 300, 301, 302, 303, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 326, 327, 328, 329, 331, 332, 338, 339, 340, 341, 342, 343, 344, 346, 358, 360, 362, 365, 366, 367, 368, 372, 387, 389, 390, 393, 395, 396, 397, 401, 402, 403, 404, 405, 406, 407, 408, 409, 412, 413, 414, 415, 416, 418, 419], "code": [0, 3, 5, 7, 8, 14, 15, 55, 59, 86, 122, 126, 144, 145, 151, 152, 192, 210, 212, 229, 247, 248, 249, 251, 252, 253, 292, 298, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 416, 417, 418, 419], "aim": [0, 2, 3, 7, 60, 61, 192, 212, 214, 254, 380, 394, 395, 396, 400, 401, 418], "support": [0, 1, 3, 14, 15, 16, 17, 18, 19, 20, 21, 50, 52, 54, 57, 64, 85, 88, 89, 93, 94, 108, 110, 114, 115, 117, 118, 119, 125, 127, 131, 139, 141, 144, 146, 148, 166, 169, 179, 188, 206, 207, 209, 222, 242, 278, 281, 288, 289, 292, 295, 298, 316, 324, 340, 341, 342, 343, 365, 393, 395, 397, 402, 403, 404, 405, 413, 414, 416, 418], "research": [0, 7, 9, 136, 137, 229, 418], "most": [0, 1, 2, 3, 7, 8, 14, 15, 45, 106, 107, 122, 126, 144, 145, 151, 152, 177, 215, 220, 400, 402, 404, 405, 406, 407, 408, 409, 414, 418, 419], "written": [0, 1, 2, 3, 12, 35, 50, 51, 52, 54, 56, 57, 62, 65, 66, 70, 80, 81, 82, 83, 84, 85, 86, 87, 88, 91, 93, 99, 101, 106, 107, 120, 121, 122, 125, 126, 127, 128, 144, 145, 148, 151, 152, 162, 169, 179, 186, 200, 204, 207, 215, 218, 225, 226, 231, 269, 270, 283, 292, 295, 296, 300, 306, 308, 323, 326, 328, 339, 358, 359, 360, 395, 396, 397, 400, 403, 405, 411, 414, 418], "highli": [0, 2, 404, 418, 419], "wai": [0, 1, 2, 3, 4, 80, 84, 101, 112, 130, 192, 195, 214, 215, 249, 251, 253, 326, 340, 341, 342, 343, 395, 400, 401, 402, 404, 406, 407, 411, 412, 413, 414, 415, 416, 418, 419], "easili": [0, 1, 2, 3, 7, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75, 122, 126, 144, 145, 151, 152, 396, 400, 401, 402, 404, 405, 406, 409, 412, 413, 418, 419], "swap": [0, 1, 3, 125, 215, 402, 415, 418], "compon": [0, 1, 2, 3, 51, 55, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 94, 95, 101, 108, 110, 114, 242, 272, 288, 289, 294, 306, 307, 308, 314, 315, 316, 317, 318, 319, 322, 323, 324, 326, 327, 328, 329, 332, 338, 372, 377, 400, 401, 402, 403, 405, 406, 409, 411, 412, 413, 414, 415, 418], "transform": [0, 1, 4, 8, 14, 15, 16, 17, 18, 19, 20, 21, 45, 51, 53, 56, 58, 65, 66, 67, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 97, 101, 110, 115, 122, 123, 126, 136, 137, 144, 145, 146, 147, 151, 152, 155, 156, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 225, 231, 234, 235, 239, 242, 243, 249, 253, 268, 271, 272, 278, 280, 287, 290, 291, 299, 302, 303, 305, 312, 325, 358, 360, 374, 391, 393, 399, 401, 403, 405, 407, 408, 409, 410, 415, 417], "them": [0, 2, 3, 7, 9, 11, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 51, 53, 54, 55, 56, 59, 64, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 112, 117, 122, 123, 126, 130, 135, 136, 137, 144, 145, 146, 147, 151, 152, 155, 156, 175, 178, 206, 210, 216, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 243, 244, 245, 247, 248, 249, 251, 252, 253, 254, 261, 264, 265, 266, 268, 269, 270, 273, 274, 276, 280, 281, 287, 289, 291, 294, 299, 302, 323, 360, 400, 401, 403, 404, 405, 407, 408, 411, 412, 413, 414, 415, 416, 418, 419], "write": [0, 2, 3, 8, 23, 45, 50, 51, 52, 53, 56, 57, 65, 66, 70, 80, 81, 82, 83, 84, 85, 86, 87, 88, 99, 101, 106, 110, 117, 122, 126, 172, 190, 191, 200, 202, 204, 208, 211, 226, 283, 295, 296, 298, 300, 309, 310, 311, 313, 314, 315, 322, 327, 329, 331, 332, 339, 344, 360, 395, 397, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 415, 416, 417, 418, 419], "new": [0, 1, 2, 3, 4, 8, 14, 15, 16, 17, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 64, 65, 66, 69, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 98, 99, 101, 105, 122, 126, 139, 144, 145, 149, 150, 151, 152, 166, 200, 209, 216, 218, 225, 226, 247, 249, 253, 269, 270, 295, 296, 301, 306, 307, 308, 311, 314, 315, 316, 317, 318, 319, 322, 323, 324, 326, 327, 328, 329, 332, 338, 367, 396, 400, 402, 403, 404, 406, 412, 413, 414, 418, 419], "ones": [0, 2, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 54, 55, 56, 59, 60, 61, 64, 65, 66, 69, 71, 72, 73, 74, 75, 122, 126, 144, 145, 146, 147, 151, 152, 170, 173, 175, 176, 178, 188, 192, 197, 206, 209, 210, 212, 214, 218, 219, 257, 258, 281, 295, 306, 307, 309, 310, 322, 326, 327, 329, 331, 332, 346, 400, 402, 412, 413, 414, 416, 418, 419], "littl": [0, 1, 3, 67, 122, 126, 144, 145, 151, 152, 210, 306, 308, 323, 326, 328, 402, 403, 407, 416, 418, 419], "effort": [0, 3, 414, 416, 418], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 93, 94, 95, 97, 98, 99, 101, 104, 105, 106, 107, 108, 110, 112, 114, 115, 117, 118, 119, 122, 125, 126, 127, 128, 131, 132, 135, 136, 137, 138, 141, 144, 145, 146, 147, 151, 152, 153, 155, 156, 161, 162, 163, 165, 166, 168, 169, 170, 172, 173, 175, 176, 177, 178, 179, 180, 181, 183, 185, 186, 188, 192, 193, 194, 195, 197, 200, 201, 202, 204, 206, 207, 209, 210, 212, 213, 214, 215, 216, 218, 219, 220, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 276, 278, 279, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 299, 301, 302, 303, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 338, 340, 341, 342, 343, 344, 358, 359, 367, 368, 370, 373, 374, 377, 379, 380, 381, 387, 391, 394, 395, 396, 397, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 418, 419], "repo": [0, 6, 82, 169, 207, 212, 394, 413, 418], "attempt": [0, 14, 15, 16, 17, 18, 19, 20, 21, 106, 107, 120, 121, 125, 127, 128, 148, 228, 246, 270, 311, 314, 322, 338, 406, 418], "align": [0, 247, 251, 418], "exist": [0, 2, 3, 4, 12, 18, 21, 27, 38, 45, 50, 52, 54, 55, 57, 59, 64, 70, 93, 122, 126, 144, 145, 151, 152, 170, 176, 210, 218, 309, 329, 381, 391, 412, 413, 418, 419], "ecosystem": [0, 407, 418], "ha": [0, 1, 2, 3, 4, 5, 7, 8, 10, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 69, 71, 72, 73, 74, 75, 80, 86, 93, 94, 101, 104, 106, 112, 114, 122, 123, 126, 130, 136, 137, 144, 145, 151, 152, 155, 156, 166, 169, 204, 205, 206, 207, 210, 218, 227, 228, 246, 247, 249, 251, 253, 259, 261, 270, 278, 289, 291, 296, 306, 309, 323, 324, 326, 328, 360, 400, 401, 402, 403, 404, 407, 408, 411, 412, 413, 414, 415, 416, 418, 419], "dataset": [0, 37, 50, 51, 52, 53, 56, 57, 58, 63, 65, 66, 70, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 99, 101, 104, 106, 107, 141, 216, 360, 393, 400, 401, 404, 415, 416, 418, 419], "pillar": [0, 418], "environ": [0, 1, 2, 5, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 55, 59, 60, 61, 69, 71, 72, 73, 74, 75, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 160, 162, 163, 165, 166, 168, 169, 170, 175, 176, 177, 178, 183, 187, 188, 192, 193, 194, 197, 200, 204, 205, 206, 207, 209, 210, 212, 215, 216, 220, 228, 230, 231, 249, 253, 255, 256, 270, 291, 313, 317, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 368, 370, 373, 380, 381, 382, 383, 387, 388, 389, 390, 391, 393, 394, 395, 399, 405, 406, 407, 408, 410, 415, 416, 417], "model": [0, 1, 3, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 33, 38, 45, 50, 52, 54, 55, 57, 58, 59, 64, 70, 122, 126, 138, 144, 145, 151, 152, 175, 192, 206, 212, 214, 217, 218, 232, 233, 234, 239, 241, 249, 253, 254, 255, 256, 260, 261, 268, 271, 280, 284, 285, 286, 290, 295, 301, 303, 306, 307, 308, 309, 311, 312, 313, 314, 317, 318, 319, 322, 323, 324, 326, 327, 328, 329, 338, 377, 382, 383, 384, 393, 394, 396, 397, 399, 402, 404, 407, 410, 412, 413, 414, 416, 417, 419], "data": [0, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 131, 132, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 163, 166, 168, 169, 175, 176, 178, 180, 186, 188, 194, 197, 204, 210, 215, 218, 219, 220, 223, 226, 230, 242, 245, 246, 249, 253, 256, 259, 260, 269, 270, 272, 281, 283, 288, 291, 292, 293, 295, 298, 299, 300, 306, 307, 309, 310, 311, 313, 314, 315, 322, 326, 327, 328, 329, 331, 332, 338, 340, 341, 342, 343, 344, 358, 360, 367, 368, 374, 377, 379, 382, 387, 389, 390, 391, 393, 395, 396, 397, 399, 403, 404, 405, 406, 410, 414, 415, 416, 417, 419], "util": [0, 3, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 27, 38, 45, 54, 55, 56, 58, 59, 64, 118, 119, 122, 126, 131, 132, 137, 144, 145, 146, 147, 151, 152, 157, 169, 192, 197, 214, 218, 219, 220, 221, 222, 223, 224, 225, 226, 229, 231, 232, 233, 239, 247, 249, 251, 253, 302, 303, 304, 305, 324, 387, 393, 398, 400, 402, 405, 406, 407, 413, 414, 416, 418, 419], "e": [0, 1, 2, 3, 7, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 27, 31, 32, 38, 39, 45, 50, 52, 54, 55, 57, 59, 61, 64, 93, 94, 98, 99, 112, 114, 122, 123, 126, 144, 145, 151, 152, 155, 166, 168, 170, 173, 174, 182, 188, 192, 200, 206, 209, 210, 212, 214, 218, 220, 247, 249, 250, 251, 253, 256, 260, 264, 272, 278, 279, 287, 289, 291, 292, 294, 295, 296, 306, 308, 309, 310, 314, 315, 322, 323, 326, 327, 328, 329, 331, 332, 339, 340, 341, 342, 343, 358, 368, 380, 390, 395, 401, 402, 405, 406, 408, 412, 413, 415, 416, 418, 419], "g": [0, 1, 2, 3, 7, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 45, 50, 52, 54, 55, 57, 59, 64, 112, 122, 123, 126, 144, 145, 151, 152, 155, 166, 168, 170, 173, 182, 188, 192, 200, 206, 209, 210, 212, 214, 218, 220, 247, 249, 250, 251, 252, 253, 256, 260, 278, 279, 287, 292, 295, 296, 309, 329, 339, 349, 350, 351, 352, 354, 355, 356, 357, 358, 390, 395, 401, 402, 405, 408, 412, 413, 414, 415, 416, 418, 419], "collector": [0, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 35, 45, 58, 62, 80, 86, 122, 126, 144, 145, 151, 152, 166, 169, 197, 204, 218, 219, 249, 253, 269, 270, 374, 377, 379, 382, 383, 387, 389, 390, 393, 396, 397, 416, 419], "contain": [0, 2, 3, 7, 13, 14, 15, 16, 17, 19, 20, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 92, 98, 99, 101, 102, 104, 106, 107, 108, 113, 116, 117, 122, 126, 138, 144, 145, 151, 152, 162, 173, 175, 178, 192, 206, 209, 210, 212, 214, 215, 216, 218, 225, 226, 230, 232, 233, 247, 248, 251, 252, 254, 256, 259, 260, 283, 288, 289, 292, 294, 295, 300, 303, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 322, 323, 324, 326, 327, 328, 329, 331, 332, 338, 339, 340, 341, 342, 343, 344, 346, 364, 368, 380, 387, 388, 389, 390, 391, 395, 396, 397, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 412, 413, 414, 415, 416, 418, 419], "etc": [0, 2, 3, 7, 8, 12, 27, 38, 45, 54, 55, 59, 64, 69, 86, 122, 126, 144, 145, 151, 152, 186, 210, 218, 254, 260, 278, 401, 402, 407, 416, 418, 419], "have": [0, 1, 2, 3, 5, 6, 7, 8, 9, 14, 15, 17, 18, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 54, 55, 56, 58, 59, 60, 61, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 105, 108, 122, 126, 144, 145, 146, 147, 151, 152, 162, 165, 169, 175, 178, 179, 186, 187, 188, 204, 209, 210, 216, 218, 220, 226, 232, 233, 254, 259, 260, 261, 281, 291, 297, 298, 306, 308, 323, 326, 328, 331, 335, 338, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 360, 368, 377, 395, 396, 397, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 418, 419], "few": [0, 2, 8, 126, 360, 368, 402, 403, 405, 412, 413, 416, 418, 419], "depend": [0, 1, 2, 3, 4, 7, 8, 28, 50, 52, 71, 125, 127, 128, 148, 155, 156, 175, 178, 300, 326, 395, 400, 402, 403, 412, 413, 414, 418, 419], "possibl": [0, 2, 3, 4, 23, 25, 26, 27, 30, 34, 38, 41, 42, 43, 44, 45, 49, 54, 55, 59, 60, 64, 83, 86, 88, 99, 106, 112, 122, 126, 144, 145, 151, 152, 162, 173, 192, 206, 209, 210, 212, 214, 218, 232, 233, 247, 248, 251, 252, 295, 358, 373, 377, 395, 400, 402, 403, 405, 407, 408, 412, 413, 414, 416, 418, 419], "standard": [0, 3, 188, 199, 216, 227, 228, 229, 230, 243, 256, 262, 263, 268, 287, 331, 332, 340, 341, 342, 343, 400, 401, 404, 405, 413, 416, 418], "numpi": [0, 3, 12, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75, 122, 126, 127, 144, 145, 151, 152, 208, 377, 414, 416, 418, 419], "common": [0, 2, 3, 4, 21, 69, 126, 131, 163, 284, 285, 286, 290, 306, 307, 308, 309, 314, 315, 322, 323, 326, 327, 328, 329, 331, 332, 387, 394, 395, 397, 400, 402, 405, 408, 411, 412, 413, 414, 415, 418, 419], "openai": [0, 7, 24, 125, 127, 148, 402, 414, 418, 419], "gym": [0, 1, 3, 4, 8, 12, 14, 15, 16, 17, 21, 22, 122, 123, 125, 126, 127, 128, 130, 136, 137, 139, 140, 144, 145, 148, 151, 152, 155, 156, 158, 161, 165, 169, 172, 179, 185, 186, 188, 190, 195, 197, 200, 206, 209, 215, 216, 218, 387, 394, 400, 401, 402, 403, 404, 408, 409, 414, 415, 416, 418], "onli": [0, 1, 2, 3, 4, 7, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 54, 55, 56, 59, 60, 61, 64, 65, 66, 69, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 94, 98, 99, 101, 106, 107, 114, 120, 121, 122, 125, 126, 127, 128, 130, 132, 139, 140, 144, 145, 146, 147, 148, 151, 152, 162, 165, 169, 170, 172, 173, 175, 177, 178, 182, 188, 192, 193, 197, 204, 205, 206, 207, 209, 210, 212, 214, 216, 218, 251, 253, 259, 260, 283, 287, 288, 292, 293, 295, 296, 297, 298, 306, 308, 309, 310, 314, 315, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 340, 341, 342, 343, 344, 360, 367, 381, 396, 397, 400, 401, 402, 403, 405, 406, 407, 408, 409, 411, 412, 413, 414, 416, 418, 419], "option": [0, 1, 2, 3, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 94, 95, 98, 99, 100, 101, 104, 105, 106, 107, 108, 110, 114, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 131, 132, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 156, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 218, 220, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 277, 278, 279, 281, 283, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 362, 365, 367, 368, 370, 371, 372, 373, 374, 375, 377, 381, 382, 383, 384, 386, 387, 389, 390, 391, 395, 403, 404, 407, 412, 413, 414, 416, 418], "On": [0, 3, 7, 18, 19, 20, 21, 31, 83, 248, 252, 395, 401, 412, 413], "end": [0, 2, 3, 14, 15, 17, 27, 38, 45, 51, 54, 55, 56, 59, 64, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 91, 99, 101, 105, 106, 107, 122, 126, 144, 145, 151, 152, 179, 190, 204, 205, 210, 218, 232, 233, 247, 248, 251, 252, 255, 291, 309, 329, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 418, 419], "come": [0, 1, 2, 3, 8, 45, 112, 122, 126, 135, 144, 145, 151, 152, 175, 178, 283, 284, 285, 286, 292, 300, 306, 308, 323, 326, 328, 360, 400, 401, 402, 403, 406, 407, 408, 409, 412, 413, 416, 418, 419], "set": [0, 1, 2, 3, 7, 9, 12, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 30, 31, 34, 38, 41, 42, 43, 44, 45, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 64, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 94, 101, 105, 108, 114, 122, 124, 126, 127, 136, 137, 138, 144, 145, 146, 147, 151, 152, 155, 156, 161, 163, 165, 166, 169, 170, 173, 175, 178, 185, 186, 192, 197, 204, 205, 206, 207, 209, 210, 212, 214, 216, 218, 220, 224, 226, 228, 247, 249, 251, 253, 255, 259, 260, 278, 287, 295, 308, 309, 315, 320, 324, 326, 329, 344, 368, 373, 374, 383, 391, 394, 395, 396, 398, 400, 401, 402, 403, 405, 406, 407, 411, 412, 413, 414, 415, 416, 418, 419], "re": [0, 2, 3, 8, 27, 38, 45, 51, 54, 55, 56, 59, 64, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 105, 122, 126, 144, 145, 151, 152, 218, 253, 257, 258, 261, 292, 296, 367, 397, 400, 402, 403, 404, 406, 411, 412, 414, 418, 419], "usabl": [0, 397, 403, 418], "function": [0, 2, 3, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 52, 53, 54, 55, 57, 58, 59, 60, 61, 64, 67, 69, 70, 71, 72, 73, 74, 75, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 94, 95, 101, 108, 110, 114, 122, 123, 126, 127, 144, 145, 151, 152, 161, 165, 166, 175, 178, 210, 216, 218, 220, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 247, 248, 249, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 273, 274, 276, 279, 281, 284, 285, 286, 287, 289, 291, 292, 294, 295, 296, 298, 299, 300, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 322, 323, 324, 326, 327, 328, 329, 331, 332, 333, 334, 335, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 387, 393, 395, 400, 403, 404, 405, 408, 411, 414, 416, 419], "cost": [0, 2, 30, 86, 306, 308, 323, 326, 328, 396, 400, 401, 412, 413, 414, 416], "return": [0, 2, 3, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 99, 101, 102, 104, 106, 107, 110, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 131, 132, 136, 137, 138, 139, 140, 141, 144, 145, 146, 147, 148, 151, 152, 155, 156, 158, 161, 162, 163, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 184, 185, 186, 188, 190, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 221, 222, 225, 226, 230, 234, 235, 236, 237, 238, 240, 242, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 264, 267, 268, 271, 273, 274, 277, 278, 279, 280, 283, 284, 285, 286, 287, 291, 292, 294, 295, 296, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 326, 327, 328, 329, 331, 332, 335, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 360, 364, 377, 380, 382, 387, 388, 389, 390, 391, 393, 395, 397, 400, 401, 402, 403, 405, 406, 408, 411, 412, 413, 414, 415, 416, 418, 419], "process": [0, 1, 3, 4, 5, 8, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 45, 50, 51, 52, 54, 55, 57, 59, 64, 67, 70, 80, 83, 87, 88, 98, 99, 106, 122, 123, 126, 130, 135, 139, 144, 145, 146, 147, 151, 152, 168, 175, 178, 206, 208, 216, 218, 249, 253, 259, 260, 269, 270, 289, 294, 393, 397, 400, 401, 403, 404, 412, 413, 414, 415, 416, 418, 419], "good": [0, 1, 4, 9, 144, 400, 402, 403, 405, 413, 418, 419], "runtim": [0, 2, 3, 23, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218, 414], "perform": [0, 2, 3, 4, 8, 14, 15, 17, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 54, 55, 58, 59, 60, 61, 64, 69, 70, 71, 72, 73, 74, 75, 120, 121, 122, 125, 126, 127, 128, 144, 145, 148, 151, 152, 157, 175, 178, 187, 210, 218, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 243, 244, 245, 247, 248, 249, 251, 252, 253, 254, 255, 256, 261, 264, 265, 266, 268, 269, 270, 273, 274, 276, 281, 287, 289, 291, 294, 299, 302, 308, 309, 318, 326, 329, 373, 377, 396, 400, 401, 402, 403, 404, 407, 409, 411, 412, 413, 414, 419], "To": [0, 2, 3, 4, 6, 7, 8, 9, 18, 19, 20, 27, 38, 45, 51, 54, 55, 56, 58, 59, 64, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 91, 99, 101, 106, 107, 110, 117, 118, 119, 122, 125, 126, 127, 131, 132, 135, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 204, 206, 216, 218, 231, 249, 253, 269, 270, 284, 285, 286, 309, 315, 320, 324, 331, 360, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 395, 396, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 412, 413, 414, 415, 416, 418, 419], "read": [0, 2, 3, 7, 23, 31, 32, 35, 39, 51, 53, 56, 58, 61, 62, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 94, 95, 98, 101, 108, 110, 114, 122, 125, 126, 127, 144, 145, 151, 152, 163, 165, 166, 168, 169, 170, 172, 173, 175, 176, 177, 179, 180, 181, 182, 183, 185, 186, 190, 191, 193, 194, 195, 197, 200, 201, 202, 204, 205, 206, 207, 209, 211, 212, 213, 215, 216, 218, 226, 231, 267, 283, 284, 285, 286, 288, 291, 292, 295, 296, 298, 300, 301, 306, 307, 308, 314, 315, 316, 317, 318, 319, 322, 323, 324, 326, 327, 328, 329, 332, 338, 340, 341, 342, 343, 344, 360, 373, 377, 395, 400, 401, 402, 404, 405, 411, 412, 413, 414, 415, 419], "philosophi": [0, 9], "capabl": [0, 1, 3, 7, 9, 11, 23, 397, 400, 404, 407, 411, 415, 419], "beyond": [0, 122, 126, 144, 145, 151, 152], "api": [0, 2, 3, 5, 23, 54, 64, 69, 146, 147, 148, 192, 214, 216, 395, 396, 397, 404, 405, 406, 407, 408, 412, 413, 414, 416, 418, 419], "check": [0, 2, 3, 4, 5, 6, 7, 9, 12, 18, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 54, 55, 56, 59, 60, 61, 64, 69, 71, 72, 73, 74, 75, 76, 78, 90, 91, 97, 106, 122, 123, 125, 126, 127, 138, 144, 145, 151, 152, 157, 169, 170, 181, 186, 193, 206, 208, 210, 218, 220, 249, 253, 283, 288, 289, 292, 293, 294, 295, 296, 309, 320, 331, 360, 392, 395, 396, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 419], "paper": [0, 83, 86, 118, 119, 120, 121, 128, 131, 132, 136, 137, 139, 140, 148, 155, 156, 192, 212, 214, 247, 271, 280, 313, 321, 331, 400, 402, 412, 413], "releas": [0, 4, 7, 10, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 210, 218, 309, 329, 418], "sync": [0, 14, 15, 17, 18, 19, 20, 21, 379, 387, 397, 400, 418], "so": [0, 2, 3, 4, 6, 7, 10, 11, 27, 38, 45, 50, 51, 52, 54, 55, 56, 57, 58, 59, 64, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 122, 126, 136, 137, 144, 145, 151, 152, 206, 216, 218, 297, 298, 400, 402, 403, 406, 409, 412, 413, 414, 419], "make": [0, 2, 3, 4, 7, 11, 27, 38, 45, 50, 51, 52, 54, 55, 56, 57, 58, 59, 64, 65, 66, 69, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 104, 108, 110, 117, 122, 126, 127, 130, 132, 134, 140, 144, 145, 151, 152, 162, 180, 188, 192, 193, 197, 204, 212, 218, 220, 229, 231, 247, 248, 249, 251, 252, 253, 259, 260, 262, 288, 296, 306, 308, 323, 326, 328, 340, 341, 342, 343, 358, 374, 383, 391, 395, 396, 400, 401, 402, 403, 404, 405, 406, 408, 409, 411, 412, 413, 414, 415, 416, 418, 419], "sure": [0, 3, 4, 7, 85, 108, 126, 130, 197, 288, 391, 395, 400, 402, 403, 406, 412, 413, 414, 416, 418, 419], "alwai": [0, 2, 3, 14, 15, 20, 27, 28, 31, 32, 38, 39, 45, 54, 55, 59, 61, 64, 69, 71, 80, 89, 90, 91, 97, 122, 126, 144, 145, 151, 152, 186, 187, 216, 218, 316, 324, 395, 396, 401, 402, 403, 412, 413, 414, 416], "enjoi": [0, 2, 3, 86, 407], "latest": [0, 2, 3, 10, 139, 142, 143, 146, 147, 374, 402, 412, 413, 414, 418], "featur": [0, 2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 23, 27, 54, 64, 69, 70, 84, 99, 106, 107, 122, 126, 135, 144, 145, 146, 147, 149, 150, 151, 152, 166, 169, 182, 186, 190, 206, 207, 211, 216, 220, 229, 232, 233, 243, 244, 247, 248, 249, 251, 252, 253, 254, 259, 262, 263, 296, 303, 306, 308, 323, 326, 328, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 391, 395, 400, 401, 402, 403, 405, 406, 407, 409, 414, 416, 419], "recent": [0, 7, 12, 215, 419], "version": [0, 1, 2, 3, 6, 12, 26, 27, 29, 32, 34, 38, 39, 40, 42, 44, 45, 48, 49, 50, 52, 54, 55, 58, 59, 64, 72, 73, 74, 75, 83, 88, 106, 122, 125, 126, 127, 128, 139, 140, 144, 145, 146, 148, 151, 152, 155, 156, 215, 216, 218, 225, 229, 261, 286, 306, 308, 323, 324, 326, 328, 329, 340, 343, 394, 395, 396, 400, 402, 403, 404, 406, 409, 412, 413, 414, 415, 419], "although": [0, 1, 3, 8, 27, 38, 54, 55, 59, 64, 71, 122, 126, 144, 145, 151, 152, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 243, 244, 245, 247, 248, 249, 251, 252, 253, 254, 261, 264, 265, 266, 268, 269, 270, 273, 274, 276, 281, 287, 289, 291, 294, 299, 302, 397, 400, 401, 407, 416], "core": [0, 3, 8, 397, 403, 405, 418], "guarante": [0, 2, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 52, 54, 55, 57, 59, 60, 61, 64, 69, 71, 72, 73, 74, 75, 93, 94, 95, 108, 110, 114, 122, 126, 144, 145, 151, 152, 216, 218, 407, 418], "backward": [0, 8, 27, 38, 45, 54, 55, 59, 64, 118, 119, 122, 126, 144, 145, 151, 152, 216, 218, 247, 248, 251, 252, 306, 307, 309, 310, 314, 315, 322, 326, 327, 328, 329, 331, 332, 400, 402, 403, 406, 407, 409, 412, 413, 414], "compat": [0, 2, 3, 7, 12, 14, 15, 16, 23, 27, 38, 45, 54, 55, 59, 64, 82, 101, 104, 106, 107, 108, 112, 122, 126, 128, 141, 144, 145, 151, 152, 169, 204, 212, 216, 218, 247, 248, 249, 251, 252, 253, 293, 306, 307, 309, 310, 311, 313, 314, 315, 322, 324, 326, 327, 328, 329, 331, 332, 335, 400, 403, 416, 418], "2": [0, 1, 2, 3, 8, 9, 10, 12, 14, 15, 16, 21, 22, 23, 24, 25, 26, 27, 30, 31, 32, 34, 35, 38, 39, 41, 42, 43, 44, 45, 49, 51, 52, 53, 54, 55, 56, 59, 61, 62, 64, 65, 66, 67, 70, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 94, 98, 99, 101, 106, 107, 112, 114, 118, 119, 122, 123, 126, 131, 132, 135, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 155, 156, 165, 166, 168, 170, 173, 175, 176, 177, 178, 186, 188, 190, 192, 194, 197, 200, 204, 205, 206, 209, 210, 212, 214, 216, 218, 223, 226, 231, 232, 233, 234, 235, 236, 237, 238, 239, 242, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 268, 269, 270, 278, 281, 287, 288, 289, 291, 295, 299, 300, 306, 307, 308, 309, 310, 314, 315, 322, 323, 326, 327, 328, 329, 331, 332, 339, 340, 341, 342, 343, 345, 346, 349, 350, 351, 352, 353, 354, 355, 356, 357, 360, 368, 395, 396, 399, 400, 401, 402, 403, 405, 406, 407, 408, 411, 412, 413, 414, 416, 417, 418, 419], "0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 15, 17, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 69, 71, 72, 73, 74, 75, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 94, 98, 99, 101, 106, 107, 114, 118, 119, 122, 125, 126, 128, 129, 131, 132, 138, 139, 140, 142, 143, 144, 145, 148, 149, 150, 151, 152, 162, 163, 165, 167, 169, 170, 172, 173, 174, 176, 177, 186, 187, 188, 192, 197, 200, 202, 205, 206, 207, 208, 209, 210, 212, 214, 215, 216, 218, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 256, 258, 259, 260, 262, 263, 264, 267, 269, 270, 273, 274, 277, 278, 279, 281, 283, 287, 289, 294, 295, 298, 299, 302, 303, 306, 307, 308, 309, 310, 311, 313, 315, 316, 317, 318, 319, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 338, 339, 340, 341, 342, 343, 346, 347, 348, 368, 375, 387, 391, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419], "nightli": [0, 6], "via": [0, 1, 3, 4, 7, 8, 51, 54, 56, 64, 65, 66, 82, 84, 85, 86, 87, 88, 126, 144, 151, 192, 195, 209, 214, 309, 312, 324, 396, 397, 400, 401, 402, 403, 405, 407, 416, 419], "tensordict": [0, 1, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 28, 29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 93, 94, 95, 97, 98, 99, 101, 104, 106, 107, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 132, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 162, 163, 165, 166, 168, 169, 170, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 188, 190, 191, 192, 193, 194, 195, 197, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 221, 223, 225, 226, 227, 228, 230, 231, 241, 242, 245, 246, 249, 253, 255, 256, 259, 260, 269, 270, 271, 272, 280, 281, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 303, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 338, 339, 340, 341, 342, 343, 344, 358, 359, 368, 372, 373, 374, 376, 377, 393, 396, 397, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 419], "git": [0, 6, 7, 10], "clone": [0, 2, 4, 8, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 54, 59, 60, 61, 64, 69, 71, 72, 73, 74, 75, 93, 186, 194, 284, 285, 286, 295, 314, 322, 331, 393, 400, 412, 414, 418], "willing": 0, "contribut": [0, 2], "cd": [0, 7], "path": [0, 3, 6, 7, 27, 38, 45, 50, 51, 52, 54, 55, 56, 57, 59, 64, 65, 66, 70, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 93, 101, 109, 115, 122, 126, 144, 145, 151, 152, 153, 161, 192, 214, 218, 256, 362, 367, 377, 397, 401, 409, 412], "root": [0, 2, 3, 31, 32, 39, 51, 56, 61, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 97, 101, 144, 169, 207, 225, 249, 250, 253, 278, 279, 403, 404, 412, 413, 414, 415, 416, 419], "http": [0, 2, 5, 6, 7, 10, 14, 15, 18, 19, 20, 24, 51, 67, 80, 83, 84, 85, 86, 87, 88, 98, 99, 118, 119, 120, 121, 128, 130, 131, 132, 136, 137, 139, 140, 141, 142, 143, 146, 147, 148, 153, 154, 155, 156, 169, 192, 212, 229, 234, 235, 236, 237, 238, 239, 242, 243, 244, 251, 256, 257, 258, 263, 265, 266, 269, 270, 271, 273, 274, 280, 289, 306, 307, 309, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 325, 326, 327, 328, 329, 330, 331, 340, 345, 353, 392, 410, 415, 418], "github": [0, 2, 5, 6, 7, 10, 18, 19, 20, 24, 80, 83, 84, 86, 118, 119, 120, 121, 125, 128, 131, 132, 136, 137, 139, 140, 142, 143, 146, 147, 148, 153, 154, 155, 156, 166, 212, 229, 405, 409, 412, 413, 418], "com": [0, 2, 5, 6, 7, 10, 18, 19, 20, 24, 83, 86, 87, 118, 119, 120, 121, 128, 130, 131, 132, 136, 137, 139, 140, 142, 143, 146, 147, 148, 153, 154, 155, 156, 229, 415, 418], "setup": [0, 7, 118, 119, 130, 131, 132, 153], "py": [0, 3, 24, 125, 127, 161, 271, 280, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419], "develop": [0, 3, 4, 7, 130, 400, 418], "A": [0, 1, 2, 3, 8, 9, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 34, 35, 38, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 105, 106, 108, 112, 113, 114, 115, 116, 122, 124, 126, 128, 129, 144, 145, 148, 151, 152, 159, 162, 164, 165, 166, 168, 172, 177, 183, 186, 192, 193, 195, 202, 206, 209, 210, 212, 213, 215, 216, 217, 218, 219, 220, 225, 227, 228, 230, 231, 232, 233, 242, 245, 247, 248, 249, 251, 252, 253, 254, 256, 257, 258, 260, 261, 263, 264, 281, 287, 288, 289, 291, 292, 293, 296, 298, 299, 302, 303, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 335, 338, 340, 341, 342, 343, 344, 346, 358, 361, 362, 365, 367, 370, 377, 379, 387, 396, 399, 400, 402, 405, 406, 407, 410, 414, 417, 419], "seri": [0, 2, 3, 7, 8, 92, 102, 112, 113, 116, 117, 151, 187, 209, 360, 395, 396, 400, 401, 402, 408, 409, 412, 413, 416, 419], "quick": [0, 80], "ramp": 0, "up": [0, 1, 2, 3, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 30, 58, 82, 88, 122, 126, 144, 145, 151, 152, 165, 168, 207, 209, 218, 229, 326, 394, 395, 396, 400, 401, 402, 403, 405, 409, 412, 413, 414, 416, 419], "If": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 94, 95, 99, 101, 104, 105, 106, 107, 112, 114, 120, 121, 122, 123, 125, 126, 127, 128, 130, 136, 137, 138, 139, 140, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 156, 158, 162, 165, 166, 169, 170, 171, 172, 174, 175, 176, 177, 178, 180, 182, 186, 187, 188, 192, 193, 196, 197, 200, 201, 205, 206, 207, 208, 209, 210, 212, 214, 216, 218, 225, 226, 228, 231, 232, 233, 245, 246, 247, 248, 249, 251, 252, 253, 254, 257, 258, 259, 260, 261, 269, 270, 281, 283, 287, 288, 289, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 305, 306, 307, 308, 309, 310, 311, 313, 315, 316, 317, 318, 320, 322, 323, 324, 326, 327, 328, 329, 331, 332, 338, 339, 340, 341, 342, 343, 344, 354, 355, 356, 357, 358, 364, 367, 372, 374, 377, 379, 381, 387, 391, 394, 396, 400, 401, 402, 403, 404, 406, 408, 409, 411, 412, 413, 414, 416, 418, 419], "hurri": [0, 404], "last": [0, 1, 2, 3, 4, 12, 14, 15, 16, 17, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 53, 54, 60, 61, 69, 71, 72, 73, 74, 75, 82, 105, 106, 107, 118, 119, 120, 121, 122, 125, 126, 127, 128, 131, 132, 139, 140, 144, 145, 148, 151, 152, 162, 165, 168, 182, 188, 193, 205, 207, 208, 227, 228, 232, 233, 245, 247, 249, 251, 253, 254, 257, 258, 265, 275, 278, 281, 287, 291, 296, 309, 340, 342, 343, 401, 402, 403, 404, 405, 412, 413, 414, 415, 416, 418, 419], "item": [0, 2, 8, 14, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 51, 56, 60, 61, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 99, 101, 105, 112, 162, 181, 257, 258, 310, 311, 313, 368, 396, 397, 400, 402, 403, 406, 407, 412, 413, 414, 416], "navig": [0, 413], "previou": [0, 3, 4, 10, 45, 51, 56, 58, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 122, 126, 144, 145, 151, 152, 206, 218, 226, 247, 251, 274, 287, 402, 403, 404, 405, 409, 414, 419], "whenev": [0, 1, 2, 3, 23, 45, 51, 54, 56, 64, 65, 66, 80, 86, 98, 99, 106, 107, 120, 121, 125, 127, 128, 136, 137, 148, 155, 156, 161, 185, 210, 215, 324, 340, 341, 342, 343, 358, 379, 395, 408, 416], "want": [0, 2, 3, 6, 7, 8, 54, 64, 107, 188, 306, 307, 309, 310, 311, 313, 315, 316, 317, 322, 324, 326, 327, 328, 329, 331, 332, 338, 395, 400, 401, 402, 403, 404, 406, 407, 408, 412, 413, 414, 415, 416, 418, 419], "ted": [0, 35, 46, 62, 63, 80, 82, 83, 84, 85, 86, 87, 88, 90, 91, 97, 393, 399, 410, 417], "s": [0, 1, 2, 3, 6, 7, 8, 11, 27, 31, 38, 45, 50, 51, 52, 54, 55, 56, 57, 59, 64, 65, 66, 69, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 106, 107, 112, 118, 119, 122, 126, 130, 131, 132, 136, 137, 139, 144, 145, 146, 147, 151, 152, 155, 156, 169, 173, 192, 204, 206, 208, 209, 210, 212, 214, 216, 218, 220, 227, 228, 232, 233, 245, 249, 253, 258, 259, 260, 263, 271, 278, 280, 284, 286, 289, 291, 292, 295, 296, 299, 307, 309, 314, 320, 322, 324, 329, 331, 340, 341, 342, 343, 344, 358, 395, 399, 400, 401, 402, 403, 404, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419], "modul": [0, 2, 3, 4, 8, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 33, 38, 45, 54, 55, 58, 59, 64, 112, 118, 119, 122, 126, 135, 138, 141, 144, 145, 151, 152, 161, 168, 173, 177, 179, 186, 192, 193, 205, 206, 209, 210, 212, 214, 216, 217, 218, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 336, 338, 340, 341, 342, 343, 344, 358, 377, 384, 387, 393, 396, 397, 399, 401, 402, 404, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 419], "optim": [0, 1, 2, 8, 27, 38, 45, 54, 55, 58, 59, 64, 118, 119, 122, 126, 144, 145, 151, 152, 210, 218, 230, 256, 262, 263, 278, 307, 309, 324, 325, 326, 329, 372, 373, 377, 387, 396, 397, 399, 402, 403, 404, 405, 407, 410, 412, 413, 414, 417], "collect": [0, 1, 2, 3, 4, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 45, 51, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 105, 122, 126, 144, 145, 148, 151, 152, 166, 169, 188, 192, 214, 220, 269, 270, 291, 307, 310, 313, 315, 327, 329, 331, 332, 360, 368, 374, 377, 379, 380, 381, 387, 397, 399, 400, 403, 404, 405, 406, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419], "storag": [0, 1, 8, 27, 35, 38, 45, 50, 51, 52, 54, 55, 56, 57, 59, 62, 64, 65, 66, 68, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 93, 94, 95, 96, 97, 98, 99, 101, 105, 106, 107, 109, 110, 111, 112, 114, 115, 122, 124, 126, 144, 145, 151, 152, 168, 169, 175, 178, 197, 218, 393, 397, 399, 401, 402, 403, 404, 406, 409, 410, 412, 413, 415, 417], "log": [0, 3, 4, 8, 11, 58, 240, 241, 242, 257, 258, 267, 278, 279, 288, 289, 292, 296, 306, 307, 308, 309, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 326, 327, 328, 329, 332, 338, 367, 370, 371, 373, 377, 387, 395, 396, 397, 399, 400, 401, 402, 404, 405, 409, 410, 412, 413, 414, 417, 418], "your": [0, 2, 3, 7, 8, 10, 11, 14, 15, 18, 27, 38, 45, 54, 55, 59, 64, 122, 126, 130, 135, 144, 145, 146, 147, 151, 152, 216, 218, 391, 394, 395, 396, 399, 401, 402, 403, 404, 405, 406, 407, 408, 410, 412, 413, 416, 417, 418], "own": [0, 1, 3, 14, 15, 17, 22, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 146, 147, 151, 152, 218, 360, 399, 401, 402, 404, 410, 412, 413, 414, 417], "train": [0, 1, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 27, 30, 38, 45, 50, 52, 54, 55, 57, 58, 59, 64, 70, 80, 83, 89, 122, 126, 136, 137, 144, 145, 146, 147, 151, 152, 175, 183, 192, 205, 210, 212, 214, 218, 220, 227, 228, 229, 235, 237, 245, 246, 249, 253, 269, 270, 306, 307, 308, 309, 310, 314, 315, 316, 317, 318, 319, 322, 323, 324, 326, 327, 328, 329, 331, 332, 338, 340, 377, 379, 387, 393, 395, 397, 399, 401, 404, 407, 408, 410, 415, 416, 417, 419], "loop": [0, 8, 50, 52, 57, 122, 126, 144, 145, 151, 152, 225, 227, 228, 245, 246, 269, 270, 326, 377, 396, 397, 399, 400, 401, 404, 406, 407, 408, 410, 411, 416, 417], "ppo": [0, 4, 8, 292, 296, 308, 323, 326, 393, 395, 399, 400, 401, 405, 406, 410, 412, 417], "pendulum": [0, 3, 14, 15, 16, 17, 21, 22, 112, 120, 121, 122, 123, 125, 126, 127, 139, 144, 145, 151, 152, 169, 172, 173, 180, 185, 186, 188, 195, 197, 202, 204, 206, 207, 209, 210, 216, 218, 231, 249, 253, 387, 395, 399, 401, 402, 404, 405, 406, 410, 417, 418, 419], "introduct": [0, 396, 399, 404, 410, 412, 413, 417, 419], "multi": [0, 1, 7, 9, 27, 38, 45, 51, 54, 55, 56, 59, 60, 61, 64, 65, 66, 90, 91, 97, 122, 126, 136, 137, 144, 145, 149, 150, 151, 152, 210, 218, 247, 249, 251, 253, 254, 259, 260, 261, 291, 338, 340, 341, 342, 343, 393, 399, 400, 401, 402, 403, 404, 405, 410, 414, 417, 418], "agent": [0, 9, 60, 61, 135, 136, 137, 142, 143, 146, 147, 149, 150, 153, 154, 155, 156, 157, 204, 205, 257, 258, 259, 260, 261, 263, 271, 280, 338, 393, 399, 404, 410, 414, 417], "env": [0, 1, 2, 5, 6, 7, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 27, 35, 38, 45, 54, 55, 58, 59, 62, 64, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 112, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 230, 231, 249, 253, 255, 256, 291, 295, 324, 358, 359, 360, 381, 382, 383, 387, 389, 390, 391, 393, 395, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 416, 417], "us": [0, 1, 2, 3, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 97, 98, 99, 100, 101, 106, 107, 112, 114, 118, 119, 122, 123, 125, 126, 127, 128, 131, 132, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 161, 162, 163, 165, 166, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 185, 186, 188, 192, 193, 194, 195, 197, 200, 201, 204, 205, 206, 207, 208, 209, 210, 212, 214, 216, 218, 220, 224, 225, 226, 227, 230, 231, 232, 233, 234, 235, 236, 239, 241, 242, 243, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 263, 264, 267, 268, 269, 270, 271, 272, 278, 279, 280, 281, 283, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 299, 300, 301, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 326, 327, 328, 329, 331, 332, 335, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 353, 358, 360, 363, 364, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 385, 387, 391, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 417, 419], "pretrain": [0, 399, 410, 417], "recurr": [0, 2, 168, 247, 248, 249, 251, 253, 274, 399, 401, 405, 410, 416, 417], "dqn": [0, 2, 80, 162, 179, 242, 288, 289, 306, 307, 309, 310, 311, 313, 315, 316, 317, 321, 322, 324, 326, 327, 328, 329, 330, 331, 332, 338, 384, 393, 395, 399, 405, 406, 409, 410, 417], "polici": [0, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 35, 45, 62, 118, 119, 122, 126, 138, 144, 145, 151, 152, 177, 186, 205, 219, 224, 227, 228, 231, 242, 245, 246, 249, 253, 259, 260, 263, 269, 270, 272, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 299, 306, 307, 308, 309, 310, 314, 315, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 373, 379, 382, 383, 387, 389, 390, 393, 395, 396, 397, 399, 401, 404, 406, 407, 410, 415, 416, 417, 418, 419], "replai": [0, 8, 16, 45, 51, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 98, 99, 100, 101, 102, 103, 105, 107, 108, 110, 112, 113, 117, 168, 169, 177, 193, 197, 206, 218, 309, 310, 311, 313, 314, 315, 322, 327, 329, 331, 332, 374, 377, 385, 387, 393, 397, 399, 410, 414, 415, 417], "buffer": [0, 3, 4, 8, 14, 15, 16, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 64, 65, 66, 69, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 112, 113, 114, 117, 122, 126, 138, 144, 145, 151, 152, 168, 169, 173, 177, 192, 193, 197, 206, 209, 210, 212, 214, 218, 295, 298, 309, 310, 311, 313, 314, 315, 322, 327, 329, 331, 332, 374, 377, 385, 387, 393, 397, 399, 408, 410, 414, 415, 417, 419], "competit": [0, 3, 136, 137, 399, 410, 413, 417], "ddpg": [0, 235, 236, 237, 238, 310, 321, 330, 393, 395, 399, 401, 406, 410, 413, 417], "task": [0, 2, 3, 9, 58, 60, 61, 70, 83, 86, 120, 121, 122, 126, 129, 136, 137, 144, 145, 146, 147, 148, 151, 152, 155, 156, 192, 204, 210, 212, 214, 314, 322, 399, 400, 401, 402, 403, 404, 405, 410, 412, 413, 414, 417, 418, 419], "specif": [0, 1, 2, 5, 8, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 65, 66, 69, 71, 72, 73, 74, 75, 126, 142, 143, 144, 151, 155, 206, 239, 249, 253, 287, 306, 324, 326, 328, 360, 377, 393, 396, 397, 399, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 416, 417], "object": [0, 2, 3, 4, 6, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 31, 38, 45, 47, 50, 52, 54, 55, 57, 59, 64, 69, 70, 93, 94, 95, 101, 104, 108, 110, 114, 117, 122, 126, 131, 144, 145, 151, 152, 162, 175, 178, 179, 188, 192, 209, 210, 212, 216, 218, 219, 249, 253, 256, 259, 260, 271, 278, 280, 283, 284, 292, 295, 296, 297, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 360, 381, 382, 383, 386, 387, 391, 393, 395, 397, 399, 401, 402, 403, 407, 409, 410, 412, 413, 414, 416, 417, 419], "loss": [0, 3, 8, 52, 179, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 338, 339, 340, 372, 377, 384, 387, 396, 397, 399, 404, 406, 407, 408, 410, 414, 416, 417, 418], "trainer": [0, 306, 307, 308, 314, 315, 316, 317, 318, 319, 322, 323, 324, 326, 327, 328, 329, 332, 338, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 399, 400, 410, 417], "exampl": [0, 1, 2, 3, 4, 9, 10, 12, 14, 15, 16, 17, 18, 21, 22, 23, 25, 26, 27, 28, 30, 31, 32, 34, 35, 38, 39, 41, 42, 43, 44, 45, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 70, 71, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 94, 98, 99, 101, 106, 107, 112, 114, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 165, 166, 168, 169, 170, 172, 173, 175, 176, 177, 178, 179, 180, 185, 186, 188, 190, 192, 194, 195, 196, 197, 200, 202, 204, 205, 206, 207, 208, 209, 210, 212, 214, 216, 218, 219, 223, 225, 226, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 256, 259, 260, 261, 264, 267, 268, 269, 270, 271, 272, 280, 281, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 298, 299, 300, 303, 306, 307, 309, 310, 311, 313, 314, 315, 316, 317, 322, 324, 326, 327, 328, 329, 331, 332, 333, 334, 338, 340, 341, 342, 343, 346, 358, 360, 368, 369, 370, 371, 372, 374, 375, 376, 379, 387, 395, 396, 397, 399, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419], "packag": [0, 6, 7, 10, 161, 393, 394, 419], "batch": [0, 2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 23, 31, 45, 50, 51, 52, 53, 56, 57, 58, 65, 66, 67, 69, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 94, 95, 99, 100, 101, 105, 106, 107, 112, 114, 118, 119, 120, 121, 122, 125, 126, 127, 128, 131, 132, 138, 139, 141, 142, 143, 144, 145, 151, 152, 153, 154, 155, 156, 166, 169, 173, 182, 188, 190, 193, 197, 206, 209, 210, 211, 215, 216, 218, 226, 229, 240, 247, 248, 249, 251, 252, 253, 257, 258, 259, 260, 261, 262, 267, 269, 270, 271, 277, 281, 291, 295, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 322, 323, 324, 326, 327, 328, 329, 331, 332, 338, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 368, 371, 374, 375, 376, 377, 379, 389, 390, 391, 393, 395, 396, 397, 401, 402, 403, 404, 407, 409, 411, 412, 413, 415, 418, 419], "size": [0, 2, 3, 14, 15, 16, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 94, 95, 98, 99, 100, 101, 105, 106, 107, 108, 114, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 131, 132, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 162, 166, 168, 170, 173, 174, 175, 178, 179, 180, 182, 190, 192, 194, 195, 197, 201, 203, 204, 206, 208, 209, 210, 211, 214, 216, 218, 223, 225, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 256, 257, 258, 259, 260, 264, 267, 268, 269, 270, 271, 272, 273, 274, 277, 280, 281, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 298, 300, 303, 306, 307, 309, 310, 311, 313, 314, 315, 322, 324, 326, 327, 328, 329, 331, 332, 338, 339, 340, 341, 342, 343, 344, 360, 368, 374, 393, 395, 401, 402, 403, 404, 405, 406, 407, 408, 411, 412, 413, 414, 415, 418, 419], "copi": [0, 2, 3, 12, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 52, 54, 55, 57, 58, 59, 60, 61, 64, 69, 70, 71, 72, 73, 74, 75, 86, 93, 122, 126, 144, 145, 151, 152, 165, 195, 205, 210, 216, 218, 225, 249, 253, 261, 287, 309, 324, 329, 358, 393, 396, 400, 401, 403, 404, 412, 416], "interoper": [0, 14, 15, 393], "singl": [0, 2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 27, 36, 38, 43, 45, 50, 51, 52, 54, 55, 56, 57, 59, 64, 65, 66, 67, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 112, 122, 125, 126, 136, 137, 144, 145, 151, 152, 155, 156, 162, 169, 170, 192, 197, 210, 214, 218, 232, 233, 247, 248, 249, 251, 252, 253, 254, 260, 294, 298, 307, 308, 309, 311, 313, 315, 316, 322, 323, 326, 327, 329, 331, 332, 340, 341, 342, 343, 349, 350, 351, 352, 354, 355, 356, 357, 358, 391, 393, 400, 401, 402, 403, 404, 405, 406, 407, 411, 412, 413, 414, 415, 416], "node": [0, 2, 18, 19, 20, 21, 22, 31, 32, 39, 50, 52, 57, 61, 88, 393, 407], "distribut": [0, 2, 3, 4, 9, 10, 18, 19, 20, 21, 22, 56, 65, 66, 101, 146, 147, 186, 188, 227, 228, 230, 240, 241, 242, 243, 250, 256, 257, 258, 264, 267, 268, 273, 274, 277, 278, 279, 287, 288, 289, 292, 296, 297, 306, 307, 308, 309, 314, 315, 316, 322, 323, 326, 327, 328, 329, 331, 332, 393, 397, 401, 402, 405, 407, 412, 413, 414, 418, 419], "helper": [0, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 400, 401, 403, 412, 414], "compos": [0, 3, 27, 38, 45, 51, 54, 55, 56, 59, 64, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 100, 101, 102, 103, 112, 113, 122, 126, 144, 145, 151, 152, 169, 196, 209, 210, 216, 218, 290, 291, 309, 318, 329, 360, 393, 400, 401, 402, 403, 407, 411, 413, 414, 416, 418, 419], "episod": [0, 3, 80, 81, 82, 83, 84, 85, 86, 87, 88, 99, 106, 107, 122, 126, 144, 145, 151, 152, 165, 197, 200, 205, 225, 230, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 393, 401, 404, 409, 412, 413, 416], "format": [0, 3, 27, 35, 38, 43, 44, 45, 46, 49, 54, 55, 59, 62, 63, 64, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 97, 104, 112, 122, 126, 144, 145, 146, 151, 152, 173, 192, 206, 209, 210, 212, 214, 218, 295, 360, 393, 400, 401, 404, 406, 408, 419], "tensorspec": [0, 3, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 71, 72, 73, 74, 75, 76, 77, 78, 122, 126, 138, 144, 145, 151, 152, 155, 156, 162, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 182, 184, 185, 186, 188, 190, 194, 195, 196, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 218, 219, 226, 227, 228, 245, 246, 269, 270, 274, 283, 287, 288, 289, 292, 293, 294, 295, 296, 297, 299, 307, 309, 311, 314, 315, 327, 329, 331, 332, 338, 393, 414], "tree": [0, 1, 50, 52, 57, 122, 126, 144, 145, 151, 152, 393, 412, 416], "forest": [0, 393], "human": [0, 24, 84, 393, 414], "feedback": [0, 393, 409, 418], "rlhf": [0, 58, 70, 89, 186, 393, 395], "envbas": [0, 2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 123, 126, 144, 145, 151, 152, 163, 166, 175, 178, 187, 194, 195, 209, 210, 216, 218, 220, 230, 249, 253, 255, 256, 373, 381, 382, 383, 387, 389, 390, 391, 393, 404], "gymlikeenv": [0, 125, 127, 393], "envmetadata": [0, 393], "vector": [0, 1, 8, 25, 118, 119, 127, 131, 132, 135, 146, 147, 148, 155, 156, 177, 215, 235, 237, 247, 248, 251, 252, 254, 340, 343, 353, 354, 355, 356, 357, 393, 396, 400, 401, 403, 411, 412, 413, 414, 415, 419], "custom": [0, 2, 5, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 212, 218, 259, 260, 299, 316, 326, 333, 391, 393, 395, 400, 401, 402, 403, 405, 406, 408, 412, 413], "nativ": [0, 1, 7, 9, 84, 122, 126, 144, 145, 151, 152, 169, 360, 393, 403, 416], "auto": [0, 94, 114, 164, 165, 215, 269, 270, 307, 309, 315, 325, 327, 329, 331, 332, 393, 396, 412, 413], "reset": [0, 1, 2, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 45, 51, 54, 55, 56, 59, 64, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 107, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 131, 132, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 164, 165, 166, 169, 179, 182, 185, 187, 192, 200, 204, 205, 206, 207, 209, 210, 212, 215, 216, 218, 220, 226, 231, 247, 249, 253, 261, 269, 270, 282, 291, 324, 359, 393, 396, 400, 401, 402, 403, 404, 407, 411, 412, 413, 418], "dynam": [0, 2, 7, 14, 15, 16, 83, 86, 88, 122, 144, 151, 218, 314, 322, 393, 402, 404, 414], "spec": [0, 1, 2, 14, 15, 16, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75, 76, 77, 78, 82, 118, 119, 122, 124, 125, 126, 127, 128, 131, 132, 138, 139, 140, 142, 143, 144, 145, 148, 151, 152, 153, 154, 155, 156, 162, 163, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 184, 185, 186, 188, 190, 192, 194, 195, 196, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 218, 219, 220, 223, 225, 226, 227, 228, 242, 245, 246, 249, 253, 269, 270, 272, 274, 283, 287, 288, 289, 292, 293, 294, 295, 296, 298, 299, 306, 307, 309, 310, 311, 313, 314, 315, 322, 326, 327, 328, 329, 331, 332, 338, 393, 395, 400, 401, 402, 403, 404, 405, 409, 411, 412, 413, 418], "mask": [0, 1, 4, 23, 25, 26, 30, 34, 41, 42, 43, 44, 49, 146, 147, 152, 163, 193, 218, 231, 242, 245, 246, 257, 258, 272, 287, 288, 289, 293, 294, 374, 393, 401, 403, 419], "action": [0, 2, 8, 9, 14, 15, 16, 17, 21, 35, 58, 62, 64, 80, 81, 82, 83, 84, 85, 86, 87, 88, 98, 99, 118, 119, 120, 121, 122, 125, 126, 127, 128, 131, 132, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 162, 163, 166, 172, 175, 177, 178, 179, 180, 183, 186, 187, 190, 194, 195, 197, 201, 204, 210, 215, 219, 223, 225, 227, 228, 230, 231, 234, 235, 236, 237, 238, 239, 241, 242, 243, 245, 246, 249, 253, 254, 255, 256, 257, 258, 259, 268, 269, 270, 271, 272, 274, 277, 278, 280, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 296, 299, 300, 306, 307, 309, 310, 311, 313, 314, 315, 322, 324, 326, 327, 328, 329, 331, 332, 338, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 387, 391, 393, 395, 396, 397, 400, 401, 402, 404, 405, 406, 407, 408, 411, 412, 413, 415, 416, 418, 419], "record": [0, 2, 11, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 159, 162, 186, 218, 326, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 387, 393, 401, 402, 405, 409, 412], "domain": [0, 2, 8, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75, 122, 126, 144, 145, 151, 152, 177, 206, 223, 283, 288, 289, 292, 293, 294, 295, 296, 297, 298, 303, 393, 402, 403, 405, 406, 412, 413, 414, 418, 419], "actor": [0, 3, 4, 21, 186, 219, 230, 234, 235, 237, 242, 243, 245, 246, 256, 268, 269, 270, 272, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 320, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 338, 393, 396, 401, 403, 404, 406, 409, 412, 415, 418], "explor": [0, 1, 217, 227, 228, 245, 246, 263, 269, 270, 283, 288, 289, 292, 293, 294, 295, 296, 306, 324, 373, 382, 383, 387, 393, 402, 403, 404, 406, 407, 409, 412, 413, 414], "valu": [0, 1, 2, 3, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 98, 99, 101, 106, 107, 112, 122, 126, 135, 144, 145, 151, 152, 161, 162, 165, 167, 169, 170, 172, 175, 176, 177, 178, 179, 187, 188, 192, 193, 196, 197, 198, 200, 202, 206, 207, 209, 210, 214, 216, 218, 223, 226, 227, 228, 229, 231, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 249, 250, 253, 254, 256, 257, 258, 259, 260, 262, 263, 264, 267, 269, 270, 271, 272, 277, 278, 279, 280, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 299, 300, 302, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 360, 368, 370, 371, 372, 373, 374, 377, 387, 393, 397, 401, 406, 407, 408, 411, 412, 413, 414, 416, 418, 419], "gener": [0, 1, 2, 3, 7, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 51, 54, 56, 58, 60, 61, 65, 66, 69, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 103, 105, 122, 123, 126, 136, 137, 138, 141, 144, 145, 146, 147, 149, 150, 151, 152, 166, 173, 175, 176, 180, 186, 188, 194, 195, 200, 201, 204, 206, 209, 215, 218, 226, 231, 240, 249, 253, 257, 258, 267, 283, 292, 296, 300, 301, 320, 327, 334, 340, 345, 353, 363, 377, 393, 396, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419], "hook": [0, 2, 27, 35, 38, 45, 51, 54, 55, 56, 59, 62, 64, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 115, 122, 126, 144, 145, 151, 152, 218, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 247, 248, 249, 251, 252, 253, 254, 261, 264, 265, 266, 268, 269, 270, 272, 273, 274, 276, 281, 287, 289, 291, 294, 299, 302, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 393], "planner": [0, 230, 256, 393], "torch": [0, 1, 2, 3, 8, 9, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 94, 98, 99, 101, 102, 105, 106, 107, 112, 113, 114, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 131, 132, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 162, 163, 165, 166, 167, 168, 170, 173, 175, 176, 177, 178, 179, 180, 186, 188, 190, 192, 194, 195, 197, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 212, 214, 216, 218, 219, 223, 225, 226, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 267, 268, 269, 270, 271, 272, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 299, 300, 303, 304, 306, 307, 309, 310, 311, 313, 314, 315, 316, 317, 322, 324, 326, 327, 328, 329, 331, 332, 338, 340, 341, 342, 343, 344, 345, 346, 350, 352, 353, 355, 357, 358, 362, 368, 375, 376, 387, 393, 395, 397, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 418, 419], "vmap": [0, 247, 248, 251, 252, 261, 281, 295, 298, 324, 393, 395, 418], "random": [0, 1, 3, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 55, 58, 60, 61, 69, 71, 72, 73, 74, 75, 86, 88, 100, 112, 122, 126, 138, 144, 145, 151, 152, 162, 177, 187, 188, 206, 219, 220, 231, 245, 247, 249, 251, 253, 292, 295, 296, 303, 307, 324, 327, 373, 381, 393, 395, 400, 401, 402, 403, 404, 405, 407, 414, 415, 416, 418, 419], "sac": [0, 315, 327, 329, 393], "redq": [0, 327, 393], "crossq": [0, 309, 393], "iql": [0, 314, 322, 393, 400, 412, 413], "cql": [0, 307, 313, 393], "gail": [0, 320, 393], "dt": [0, 145, 269, 270, 393, 414], "td3": [0, 331, 332, 393], "bc": [0, 5, 331, 393, 418], "a2c": [0, 306, 393], "dreamer": [0, 159, 160, 243, 317, 318, 319, 393, 395], "checkpoint": [0, 56, 91, 93, 96, 108, 109, 111, 115, 393, 415, 416], "builder": [0, 393, 401, 419], "logger": [0, 3, 11, 358, 360, 362, 363, 364, 365, 366, 367, 371, 377, 387, 391, 393, 401, 412], "_util": [0, 3, 12, 393, 409], "implement_for": [0, 3, 393], "thing": [0, 3, 7, 8, 122, 126, 144, 145, 151, 152, 259, 260, 394, 402, 403, 404, 405, 406, 407, 408, 412, 413, 416, 419], "consid": [0, 1, 2, 3, 8, 20, 27, 31, 32, 38, 39, 45, 51, 54, 55, 56, 59, 61, 64, 65, 66, 93, 94, 114, 122, 126, 144, 145, 151, 152, 177, 216, 218, 240, 259, 260, 277, 307, 309, 322, 327, 329, 331, 332, 340, 342, 343, 394, 400, 404, 405, 406, 414, 416], "when": [0, 1, 2, 3, 5, 8, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 54, 55, 56, 59, 60, 61, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 93, 94, 95, 97, 98, 99, 100, 101, 105, 106, 107, 108, 110, 114, 122, 123, 125, 126, 127, 135, 136, 137, 139, 141, 144, 145, 146, 147, 151, 152, 155, 156, 163, 165, 168, 169, 173, 175, 177, 178, 186, 187, 188, 192, 193, 200, 206, 209, 210, 212, 214, 215, 216, 218, 224, 225, 229, 230, 242, 247, 248, 251, 252, 254, 255, 256, 257, 258, 259, 260, 262, 272, 278, 291, 292, 295, 296, 298, 302, 307, 308, 309, 311, 316, 322, 323, 324, 326, 327, 329, 331, 332, 333, 338, 339, 340, 341, 342, 343, 358, 359, 360, 362, 374, 391, 394, 395, 396, 397, 400, 401, 402, 403, 405, 407, 408, 412, 413, 414, 415, 416, 419], "debug": [0, 6, 8, 58, 80, 81, 82, 83, 84, 85, 86, 87, 88, 394, 419], "work": [0, 1, 2, 3, 4, 8, 12, 27, 38, 45, 54, 55, 56, 59, 64, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 99, 104, 106, 107, 110, 117, 122, 125, 126, 127, 130, 144, 145, 148, 151, 152, 170, 186, 192, 212, 215, 216, 218, 225, 232, 233, 254, 289, 294, 299, 308, 323, 326, 377, 394, 395, 400, 401, 402, 403, 404, 407, 411, 412, 413, 414, 415, 416, 418, 419], "habitat": [0, 3, 128, 394, 415], "lab": [0, 3, 120, 121, 128, 394], "mujoco": [0, 6, 8, 148, 394, 400, 402, 403], "error": [0, 1, 3, 7, 10, 12, 25, 26, 27, 30, 34, 38, 41, 42, 43, 44, 45, 49, 50, 52, 54, 55, 57, 59, 60, 64, 93, 122, 126, 144, 145, 151, 152, 153, 157, 193, 218, 220, 324, 394, 396, 400, 402, 412, 413, 419], "solut": [0, 2, 3, 6, 7, 9, 21, 394, 395, 397, 418], "resourc": [0, 1, 21, 128, 394, 400, 402, 412, 413], "issu": [0, 3, 4, 5, 8, 80, 84, 91, 93, 94, 114, 125, 130, 169, 193, 207, 225, 283, 288, 289, 292, 293, 294, 295, 296, 394, 418], "customis": [0, 394, 401, 408], "video": [0, 4, 9, 360, 362, 373, 391, 393, 394, 409, 412, 413], "render": [0, 3, 8, 132, 155, 358, 360, 373, 394, 400, 401, 402, 404, 408], "index": [0, 3, 7, 8, 10, 16, 25, 26, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 60, 61, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 92, 93, 94, 98, 99, 101, 102, 104, 110, 112, 113, 114, 116, 117, 122, 126, 136, 137, 142, 143, 144, 145, 151, 152, 155, 156, 164, 169, 173, 177, 210, 225, 257, 258, 393, 404, 411, 412, 413, 416, 418], "search": [0, 141, 226, 401], "page": [0, 7, 24, 367, 406], "somewhat": [1, 2, 396, 405, 419], "equival": [1, 3, 25, 26, 27, 30, 31, 34, 38, 41, 42, 43, 44, 45, 49, 50, 51, 52, 54, 55, 56, 57, 59, 64, 65, 66, 70, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 118, 119, 122, 125, 126, 127, 128, 131, 132, 139, 140, 142, 143, 144, 145, 148, 151, 152, 153, 154, 166, 176, 179, 210, 218, 242, 251, 254, 272, 288, 289, 293, 294, 326, 374, 407, 418, 419], "dataload": [1, 89, 105, 107, 401, 407, 416], "except": [1, 2, 3, 14, 15, 16, 17, 18, 19, 20, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 52, 54, 55, 57, 59, 60, 61, 64, 69, 71, 72, 73, 74, 75, 86, 122, 126, 144, 145, 151, 152, 169, 181, 197, 205, 206, 207, 210, 218, 227, 228, 245, 246, 247, 249, 251, 253, 267, 269, 270, 306, 309, 324, 326, 329, 360, 395, 401, 404, 412, 416, 418, 419], "1": [1, 2, 3, 4, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 94, 98, 99, 101, 106, 107, 112, 114, 118, 119, 120, 121, 122, 123, 125, 126, 127, 131, 132, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 155, 156, 162, 163, 165, 166, 167, 168, 169, 170, 172, 173, 175, 176, 177, 178, 179, 180, 183, 186, 188, 190, 192, 193, 194, 195, 197, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 212, 214, 216, 218, 219, 223, 225, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 262, 263, 264, 267, 268, 269, 270, 271, 273, 274, 276, 277, 278, 279, 280, 283, 284, 285, 286, 287, 289, 291, 292, 293, 294, 295, 298, 299, 300, 302, 303, 306, 307, 308, 309, 310, 311, 313, 314, 315, 318, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 338, 339, 340, 341, 342, 343, 346, 348, 349, 350, 354, 355, 357, 358, 360, 368, 373, 374, 375, 387, 391, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419], "thei": [1, 2, 3, 4, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 54, 55, 56, 59, 60, 61, 64, 65, 66, 69, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 99, 101, 122, 125, 126, 127, 135, 136, 137, 144, 145, 146, 147, 151, 152, 155, 156, 165, 168, 181, 186, 192, 201, 209, 210, 214, 218, 253, 306, 307, 308, 309, 314, 315, 316, 317, 318, 319, 322, 323, 324, 326, 327, 328, 329, 331, 332, 338, 374, 377, 395, 396, 397, 400, 401, 402, 403, 406, 411, 412, 413, 414, 415, 416, 418, 419], "over": [1, 2, 3, 4, 8, 14, 15, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 54, 55, 56, 59, 60, 61, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 79, 80, 86, 99, 101, 105, 106, 122, 126, 136, 137, 144, 145, 151, 152, 162, 177, 188, 200, 207, 218, 225, 278, 281, 298, 316, 318, 324, 346, 358, 380, 397, 400, 401, 402, 404, 405, 406, 407, 412, 413, 414, 419], "non": [1, 2, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 25, 27, 28, 29, 31, 32, 38, 39, 40, 45, 47, 48, 50, 51, 52, 54, 55, 57, 59, 60, 61, 64, 65, 66, 69, 71, 72, 73, 74, 75, 86, 95, 122, 126, 144, 145, 146, 147, 151, 152, 166, 167, 173, 182, 192, 206, 209, 210, 211, 212, 214, 218, 225, 231, 247, 249, 251, 253, 259, 295, 296, 306, 307, 309, 310, 311, 313, 314, 315, 316, 317, 318, 322, 324, 326, 327, 328, 329, 331, 332, 338, 340, 341, 342, 343, 395, 400, 403, 412, 413, 414, 416, 419], "static": [1, 12, 54, 58, 64, 70, 99, 106, 107, 128, 145, 216, 322, 404, 414, 416], "like": [1, 2, 3, 4, 7, 11, 21, 27, 31, 32, 38, 39, 45, 47, 51, 54, 55, 56, 59, 61, 64, 65, 66, 70, 95, 101, 107, 122, 126, 128, 135, 144, 145, 146, 147, 151, 152, 179, 206, 208, 218, 220, 247, 251, 260, 290, 306, 308, 323, 326, 327, 328, 396, 400, 402, 403, 404, 405, 406, 407, 408, 409, 412, 413, 414, 415, 416, 419], "being": [1, 2, 3, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 45, 54, 55, 59, 60, 64, 89, 112, 115, 122, 125, 126, 127, 128, 144, 145, 148, 151, 152, 168, 175, 177, 178, 187, 195, 206, 210, 218, 224, 245, 249, 253, 269, 270, 308, 309, 323, 324, 326, 329, 360, 374, 379, 389, 390, 391, 395, 400, 401, 402, 403, 407, 412, 413, 414, 416], "accept": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 45, 54, 55, 56, 59, 64, 71, 83, 84, 87, 88, 89, 122, 126, 138, 144, 145, 151, 152, 164, 169, 173, 182, 192, 200, 206, 209, 210, 211, 212, 214, 218, 254, 281, 295, 296, 297, 309, 329, 360, 397, 402, 404, 408, 416, 419], "two": [1, 2, 3, 4, 8, 10, 27, 38, 41, 42, 43, 44, 45, 51, 54, 55, 56, 58, 59, 64, 65, 66, 86, 101, 105, 107, 122, 126, 144, 145, 151, 152, 166, 188, 192, 214, 218, 238, 247, 249, 251, 253, 259, 260, 275, 278, 296, 323, 331, 335, 373, 377, 396, 400, 401, 402, 403, 404, 405, 407, 408, 411, 412, 413, 414, 416, 418, 419], "main": [1, 2, 3, 5, 14, 15, 20, 22, 23, 88, 123, 296, 377, 395, 396, 400, 401, 411, 419], "argument": [1, 2, 3, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 64, 65, 66, 69, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 93, 94, 98, 99, 101, 104, 105, 106, 107, 110, 112, 114, 118, 119, 120, 121, 122, 125, 126, 127, 128, 131, 132, 136, 137, 139, 140, 142, 143, 144, 145, 146, 148, 151, 152, 153, 154, 155, 156, 165, 166, 170, 172, 173, 176, 192, 200, 201, 204, 206, 208, 209, 210, 211, 212, 214, 218, 225, 227, 228, 229, 231, 232, 233, 245, 246, 247, 249, 251, 253, 254, 257, 258, 259, 260, 262, 269, 270, 281, 283, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 299, 300, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 320, 321, 322, 323, 325, 326, 327, 328, 329, 331, 332, 334, 338, 340, 341, 342, 343, 344, 348, 358, 359, 360, 367, 370, 380, 387, 388, 391, 400, 401, 402, 403, 404, 405, 407, 412, 413, 414, 416, 419], "list": [1, 2, 3, 6, 7, 8, 9, 14, 15, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 95, 101, 104, 105, 106, 107, 108, 110, 120, 121, 122, 125, 126, 127, 128, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 156, 157, 167, 168, 172, 175, 176, 178, 186, 188, 190, 192, 200, 202, 208, 210, 211, 212, 214, 216, 218, 225, 231, 232, 233, 235, 241, 244, 249, 253, 254, 257, 258, 265, 272, 289, 291, 293, 294, 296, 298, 299, 300, 307, 309, 322, 324, 327, 329, 331, 332, 337, 340, 343, 358, 359, 373, 374, 389, 390, 395, 396, 400, 402, 404, 405, 406, 407, 411, 412, 414, 415, 416, 418, 419], "constructor": [1, 2, 16, 18, 19, 20, 21, 56, 70, 86, 98, 112, 122, 126, 139, 144, 145, 151, 152, 155, 165, 209, 232, 233, 254, 292, 306, 307, 309, 310, 311, 313, 315, 316, 317, 322, 324, 326, 327, 328, 329, 331, 332, 338, 340, 341, 342, 343, 344, 388, 391, 395, 400, 401, 402, 404, 407, 412, 413, 416], "iter": [1, 2, 3, 12, 15, 16, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 54, 55, 56, 59, 60, 61, 64, 65, 66, 69, 71, 72, 73, 74, 75, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 95, 101, 105, 118, 119, 122, 126, 131, 132, 144, 145, 151, 152, 180, 188, 201, 218, 229, 231, 232, 233, 254, 259, 260, 276, 283, 288, 292, 293, 295, 297, 298, 300, 324, 337, 373, 376, 377, 396, 397, 400, 402, 403, 407, 409, 412, 413, 414], "execut": [1, 2, 3, 6, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 45, 51, 53, 54, 55, 56, 59, 64, 65, 66, 69, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 101, 118, 119, 122, 123, 126, 127, 128, 130, 131, 132, 138, 139, 144, 145, 148, 151, 152, 153, 163, 210, 218, 245, 247, 249, 251, 253, 261, 291, 297, 298, 324, 331, 381, 391, 395, 397, 399, 401, 402, 403, 404, 405, 406, 407, 408, 412, 413, 416, 417, 419], "step": [1, 3, 4, 8, 14, 15, 16, 17, 18, 19, 20, 21, 45, 58, 80, 90, 91, 97, 99, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 131, 132, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 163, 168, 182, 185, 188, 204, 205, 206, 207, 210, 215, 218, 225, 226, 227, 228, 229, 230, 243, 245, 246, 247, 249, 251, 253, 255, 256, 269, 270, 291, 292, 296, 306, 317, 326, 339, 340, 341, 342, 343, 346, 347, 348, 359, 362, 368, 373, 377, 397, 401, 403, 405, 406, 408, 409, 411, 414, 415, 418], "queri": [1, 3, 14, 27, 38, 45, 50, 52, 54, 55, 57, 59, 64, 122, 126, 144, 145, 151, 152, 192, 209, 212, 216, 218, 298, 396, 400, 406, 414, 418], "defin": [1, 2, 12, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 54, 55, 59, 60, 61, 64, 69, 71, 72, 73, 74, 75, 86, 122, 126, 144, 145, 151, 152, 193, 205, 218, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 243, 244, 245, 247, 248, 249, 251, 252, 253, 254, 259, 261, 264, 265, 266, 268, 269, 270, 273, 274, 276, 281, 287, 289, 291, 294, 299, 302, 303, 311, 313, 324, 340, 341, 342, 343, 344, 359, 388, 400, 401, 403, 406, 409, 414, 416, 419], "number": [1, 2, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 94, 95, 98, 99, 101, 104, 106, 107, 114, 118, 119, 122, 125, 126, 127, 131, 132, 138, 139, 140, 141, 144, 145, 146, 147, 151, 152, 155, 156, 162, 168, 169, 177, 183, 187, 188, 199, 204, 207, 210, 216, 218, 227, 228, 229, 230, 232, 233, 240, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 259, 260, 264, 265, 266, 269, 270, 271, 273, 274, 277, 278, 279, 280, 283, 287, 291, 292, 295, 296, 300, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 320, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 368, 370, 373, 377, 379, 380, 381, 389, 390, 391, 395, 396, 400, 401, 402, 403, 404, 405, 407, 409, 412, 413, 414, 415, 416, 419], "befor": [1, 2, 3, 4, 6, 7, 10, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 45, 54, 55, 59, 64, 70, 85, 105, 112, 122, 126, 127, 144, 145, 151, 152, 162, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 184, 185, 186, 187, 188, 190, 194, 195, 196, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 211, 212, 213, 215, 216, 218, 220, 247, 249, 253, 254, 262, 263, 306, 307, 308, 309, 314, 315, 316, 317, 318, 319, 322, 323, 324, 326, 327, 328, 329, 331, 332, 338, 341, 342, 343, 374, 400, 402, 403, 407, 408, 412, 413, 414, 416, 419], "deliv": [1, 2, 3, 16, 86, 400, 401, 404, 407, 418], "stack": [1, 2, 3, 7, 8, 14, 15, 16, 18, 20, 21, 40, 50, 51, 52, 56, 57, 61, 64, 65, 66, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 98, 101, 122, 125, 126, 127, 135, 144, 145, 146, 147, 151, 152, 216, 247, 249, 251, 252, 253, 291, 297, 298, 307, 309, 322, 327, 329, 331, 332, 359, 368, 393, 395, 401, 404, 411, 412, 414, 418], "user": [1, 2, 3, 5, 8, 23, 27, 38, 45, 54, 55, 59, 64, 80, 82, 86, 88, 99, 107, 122, 126, 144, 145, 151, 152, 153, 170, 205, 210, 218, 220, 239, 309, 326, 329, 331, 360, 388, 396, 397, 400, 401, 404, 406, 407, 414, 418, 419], "reach": [1, 3, 14, 15, 16, 17, 18, 19, 20, 21, 22, 58, 105, 122, 126, 136, 137, 144, 145, 151, 152, 155, 156, 204, 227, 228, 245, 246, 269, 270, 400, 402, 409, 412, 413, 418, 419], "done": [1, 2, 3, 4, 7, 8, 14, 15, 16, 17, 22, 23, 25, 26, 28, 29, 30, 31, 32, 34, 35, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 58, 60, 61, 62, 64, 69, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 97, 99, 101, 106, 107, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 131, 132, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 162, 163, 165, 166, 169, 175, 176, 178, 179, 180, 187, 188, 190, 194, 195, 197, 199, 201, 204, 206, 207, 209, 210, 216, 218, 225, 226, 230, 247, 249, 253, 256, 278, 291, 306, 307, 308, 309, 310, 311, 313, 314, 315, 322, 323, 326, 327, 328, 329, 331, 332, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 395, 396, 400, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 418, 419], "state": [1, 2, 3, 4, 14, 15, 16, 17, 27, 35, 38, 45, 51, 54, 55, 56, 58, 59, 62, 64, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 97, 101, 118, 119, 120, 121, 122, 125, 126, 127, 128, 131, 132, 138, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 165, 168, 169, 170, 172, 179, 188, 195, 204, 205, 209, 210, 216, 218, 220, 225, 226, 230, 234, 239, 243, 247, 248, 249, 251, 252, 253, 254, 256, 261, 265, 268, 271, 273, 274, 280, 284, 291, 295, 301, 306, 308, 309, 313, 323, 324, 326, 327, 328, 329, 338, 339, 340, 341, 342, 343, 344, 391, 395, 396, 400, 401, 402, 403, 404, 405, 406, 407, 412, 413, 414, 419], "after": [1, 2, 3, 8, 14, 15, 17, 18, 20, 21, 27, 35, 38, 45, 50, 52, 54, 55, 57, 58, 59, 64, 80, 101, 118, 119, 120, 121, 122, 125, 126, 127, 128, 130, 131, 132, 139, 140, 142, 143, 144, 145, 148, 151, 152, 153, 154, 162, 163, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 182, 184, 185, 186, 187, 188, 190, 194, 195, 196, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 218, 225, 227, 228, 229, 245, 247, 249, 253, 262, 288, 293, 309, 318, 329, 331, 401, 402, 403, 404, 405, 407, 409, 412, 413, 414, 415, 416, 419], "predefin": [1, 401, 403, 407, 416], "becaus": [1, 3, 4, 7, 50, 52, 57, 58, 80, 122, 126, 144, 145, 151, 152, 179, 186, 204, 209, 215, 218, 238, 260, 283, 288, 289, 291, 292, 293, 294, 295, 296, 306, 326, 395, 400, 401, 403, 405, 406, 407, 411, 412, 413, 414, 416, 419], "potenti": [1, 2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75, 414, 416], "comput": [1, 3, 4, 8, 14, 16, 21, 27, 30, 38, 45, 54, 55, 58, 59, 64, 118, 119, 122, 126, 131, 132, 144, 145, 151, 152, 188, 202, 210, 213, 218, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 273, 274, 276, 278, 279, 281, 284, 287, 289, 291, 292, 294, 296, 299, 302, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 381, 396, 400, 402, 403, 404, 405, 411, 412, 413, 415, 416], "heavi": [1, 8, 80, 416], "crucial": [1, 2, 3, 227, 228, 245, 246, 269, 270, 314, 322, 324, 400, 401, 402, 403, 404, 406, 408, 412, 413, 414, 419], "configur": [1, 8, 21, 22, 58, 186, 234, 239, 268, 324, 326, 395, 400, 401, 402, 406, 412, 413, 414], "hyperparamet": [1, 104, 218, 306, 307, 309, 310, 311, 313, 314, 315, 316, 317, 322, 324, 326, 327, 328, 329, 331, 332, 338, 400, 408, 414, 416], "appropri": [1, 3, 4, 7, 92, 102, 112, 113, 116, 117, 144, 151, 179, 388, 391, 400, 408, 416], "paramet": [1, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 94, 95, 98, 99, 100, 101, 104, 105, 108, 110, 112, 114, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 131, 132, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 156, 157, 158, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 362, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 387, 388, 389, 390, 391, 395, 396, 400, 403, 405, 409, 412, 413, 414, 415, 418], "take": [1, 2, 3, 8, 23, 27, 38, 54, 55, 58, 59, 64, 83, 109, 115, 118, 119, 122, 126, 131, 132, 144, 145, 151, 152, 172, 204, 207, 209, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 259, 261, 264, 265, 266, 268, 269, 270, 273, 274, 276, 281, 287, 289, 290, 291, 292, 294, 299, 302, 305, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 360, 368, 379, 395, 397, 400, 401, 402, 404, 405, 406, 412, 413, 414, 416, 419], "consider": [1, 2, 3, 8, 125, 127, 401, 412, 413, 416], "whether": [1, 2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 53, 54, 55, 56, 58, 59, 60, 61, 64, 65, 66, 67, 69, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 101, 122, 126, 132, 136, 137, 138, 144, 145, 146, 147, 151, 152, 155, 156, 165, 175, 178, 205, 210, 216, 218, 226, 232, 233, 249, 253, 254, 300, 306, 307, 308, 309, 310, 311, 313, 315, 316, 320, 323, 324, 326, 327, 328, 329, 331, 332, 338, 340, 343, 400, 401, 402, 404, 412, 413, 414, 418, 419], "should": [1, 2, 3, 4, 5, 7, 8, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 95, 99, 101, 106, 107, 108, 112, 115, 120, 121, 122, 125, 126, 127, 128, 132, 135, 138, 144, 145, 146, 147, 151, 152, 155, 156, 162, 165, 166, 169, 172, 173, 175, 176, 179, 180, 182, 186, 188, 193, 194, 195, 197, 200, 201, 204, 205, 207, 209, 210, 215, 216, 218, 220, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 243, 244, 245, 247, 248, 249, 251, 252, 253, 254, 259, 260, 261, 264, 265, 266, 268, 269, 270, 273, 274, 276, 281, 287, 289, 291, 292, 294, 295, 296, 299, 302, 306, 308, 309, 315, 321, 323, 324, 326, 327, 328, 330, 331, 339, 340, 341, 342, 343, 344, 360, 362, 372, 373, 374, 377, 387, 389, 390, 391, 395, 397, 400, 401, 402, 403, 405, 407, 408, 411, 412, 413, 414, 415, 416, 418, 419], "occur": [1, 8, 15, 54, 60, 61, 64, 80, 122, 126, 128, 144, 145, 151, 152, 170, 180, 188, 193, 215, 226, 229, 283, 288, 289, 292, 293, 294, 295, 296, 318, 416, 419], "serial": [1, 2, 3, 27, 38, 45, 51, 54, 55, 56, 59, 62, 64, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 122, 126, 144, 145, 151, 152, 216, 218], "parallel": [1, 3, 8, 122, 125, 126, 127, 144, 145, 146, 147, 151, 152, 210, 215, 220, 249, 253, 306, 388, 389, 390, 391, 401, 402, 412, 413], "syncdatacollector": [1, 2, 3, 14, 15, 17, 18, 19, 20, 21, 35, 45, 62, 166, 169, 197, 249, 253, 387, 390, 393, 400, 401, 402, 403, 407, 409, 412, 413, 416], "class": [1, 2, 3, 5, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 122, 123, 124, 125, 126, 127, 128, 135, 138, 141, 144, 145, 146, 147, 148, 151, 152, 153, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 389, 390, 391, 395, 396, 397, 400, 401, 402, 403, 404, 405, 406, 407, 408, 412, 413, 416, 419], "worker": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 22, 50, 52, 57, 69, 70, 83, 88, 89, 123, 139, 144, 151, 216, 389, 390, 391, 400, 401, 402, 418, 419], "multisyncdatacollector": [1, 15, 18, 19, 20, 21, 390, 393, 402, 407, 418], "split": [1, 14, 15, 16, 17, 18, 19, 20, 21, 37, 50, 52, 70, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 99, 106, 107, 135, 146, 147, 247, 251, 306, 307, 308, 314, 315, 316, 317, 318, 319, 322, 323, 324, 326, 327, 328, 329, 332, 338, 395, 397, 402, 405, 416, 418], "workload": 1, "across": [1, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 51, 55, 56, 59, 65, 66, 99, 106, 107, 118, 119, 120, 121, 125, 127, 128, 130, 131, 132, 139, 140, 144, 148, 152, 216, 218, 249, 253, 259, 269, 270, 324, 379, 393, 395, 396, 400, 404, 408, 412, 413, 414], "aggreg": [1, 3, 27, 54, 80, 99, 112, 146, 147, 226, 232, 233, 235, 236, 298], "result": [1, 2, 3, 7, 14, 15, 16, 17, 18, 19, 20, 21, 23, 27, 28, 38, 45, 50, 51, 52, 53, 54, 55, 56, 57, 59, 64, 65, 66, 71, 80, 81, 82, 83, 84, 85, 86, 87, 88, 99, 101, 105, 106, 107, 122, 123, 126, 144, 145, 151, 152, 162, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 182, 184, 185, 186, 187, 188, 190, 194, 195, 196, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 218, 220, 225, 226, 227, 245, 247, 249, 251, 253, 254, 259, 272, 278, 287, 289, 294, 306, 307, 309, 310, 311, 313, 315, 316, 317, 322, 324, 326, 327, 328, 329, 331, 332, 338, 340, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 379, 395, 396, 401, 403, 404, 405, 408, 409, 414, 415, 418, 419], "final": [1, 2, 3, 4, 21, 50, 52, 57, 58, 206, 215, 227, 228, 245, 246, 247, 249, 251, 253, 259, 269, 270, 290, 297, 340, 373, 395, 400, 401, 402, 408, 409, 412, 413, 414, 419], "multiasyncdatacollector": [1, 17, 18, 19, 20, 21, 389, 393, 400, 401, 402, 407, 418], "sever": [1, 2, 3, 8, 27, 38, 41, 45, 54, 55, 59, 64, 70, 83, 122, 126, 144, 145, 151, 152, 170, 172, 210, 218, 326, 400, 402, 408, 409, 416, 419], "gather": [1, 3, 18, 20, 21, 70, 89, 93, 94, 99, 106, 114, 193, 258, 261, 267, 324, 339, 381, 394, 401, 402, 403, 407, 412, 413, 414, 416, 419], "continu": [1, 2, 9, 28, 31, 71, 72, 73, 107, 122, 126, 144, 145, 146, 147, 151, 152, 155, 156, 162, 223, 235, 236, 237, 238, 269, 270, 298, 303, 307, 330, 340, 345, 353, 395, 400, 402, 403, 405, 412, 413, 414, 416, 418, 419], "concomitantli": [1, 122, 126, 144, 145, 151, 152], "network": [1, 4, 8, 27, 38, 45, 54, 55, 59, 64, 122, 126, 135, 144, 145, 146, 147, 151, 152, 218, 232, 233, 235, 236, 237, 238, 241, 243, 244, 251, 254, 259, 260, 261, 263, 265, 266, 271, 273, 274, 275, 280, 284, 285, 286, 287, 295, 299, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 336, 338, 340, 341, 342, 343, 344, 386, 387, 395, 396, 397, 406, 409, 411, 414, 419], "impli": [1, 419], "weight": [1, 4, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 45, 51, 54, 55, 58, 59, 64, 99, 101, 104, 118, 119, 122, 126, 144, 145, 149, 150, 151, 152, 173, 192, 206, 209, 210, 212, 214, 218, 247, 248, 249, 251, 252, 253, 259, 261, 263, 295, 306, 307, 308, 309, 315, 318, 329, 331, 379, 386, 395, 397, 400, 401, 402, 403, 411, 414, 416, 418], "mai": [1, 2, 3, 4, 5, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 23, 27, 38, 45, 50, 52, 54, 55, 57, 59, 60, 61, 64, 69, 82, 88, 91, 99, 122, 125, 126, 127, 128, 144, 145, 148, 151, 152, 186, 188, 201, 210, 211, 216, 218, 220, 229, 249, 253, 254, 259, 395, 396, 397, 400, 401, 402, 403, 404, 405, 406, 407, 412, 413, 414, 415, 416, 418, 419], "slightli": [1, 23, 80, 395, 396, 403, 412, 414, 415, 416, 419], "lag": [1, 400, 401, 402], "therefor": [1, 2, 3, 7, 51, 56, 65, 66, 87, 88, 122, 126, 144, 145, 151, 152, 197, 326, 338, 406, 412, 419], "fastest": 1, "price": [1, 2], "suitabl": [1, 2], "where": [1, 2, 3, 4, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 25, 27, 35, 37, 46, 50, 51, 52, 53, 54, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 70, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 93, 94, 99, 101, 106, 107, 112, 114, 115, 122, 126, 135, 138, 141, 144, 145, 146, 147, 151, 152, 162, 163, 166, 169, 179, 186, 192, 197, 200, 204, 205, 207, 209, 211, 214, 215, 225, 226, 227, 228, 245, 246, 247, 248, 249, 251, 252, 253, 257, 258, 259, 269, 270, 292, 295, 296, 305, 306, 307, 308, 309, 314, 315, 316, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 339, 340, 341, 342, 343, 344, 345, 346, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 362, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 396, 397, 400, 401, 402, 404, 411, 412, 413, 414, 416, 419], "asynchron": [1, 9, 15, 21, 27, 38, 45, 50, 52, 54, 55, 57, 59, 64, 122, 126, 144, 145, 151, 152, 173, 192, 206, 209, 210, 212, 214, 218, 295, 306, 389, 400, 401, 402], "off": [1, 2, 4, 250, 279, 288, 329, 358, 373, 382, 395, 397, 400, 401, 402, 405, 406, 412, 413, 415, 419], "curriculum": [1, 4], "For": [1, 2, 3, 4, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 34, 38, 41, 42, 43, 44, 45, 47, 48, 49, 51, 54, 55, 56, 59, 64, 65, 66, 69, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 94, 99, 101, 106, 114, 122, 125, 126, 127, 144, 145, 146, 147, 151, 152, 153, 155, 175, 178, 182, 188, 205, 210, 215, 218, 220, 242, 247, 249, 251, 253, 260, 262, 284, 286, 287, 289, 293, 306, 314, 316, 322, 326, 373, 395, 397, 400, 401, 402, 403, 404, 405, 407, 408, 412, 413, 414, 415, 416, 419], "remot": [1, 2, 18, 19, 20, 21, 144, 151, 419], "rollout": [1, 2, 3, 11, 14, 15, 16, 17, 21, 23, 58, 64, 112, 118, 119, 122, 126, 128, 129, 131, 132, 136, 137, 138, 139, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 162, 163, 165, 166, 169, 172, 175, 178, 179, 180, 186, 190, 194, 195, 200, 201, 202, 204, 205, 207, 216, 218, 220, 230, 231, 249, 253, 256, 269, 270, 291, 306, 358, 360, 381, 395, 400, 402, 403, 405, 406, 407, 408, 409, 415, 416, 418], "necessari": [1, 4, 6, 8, 14, 15, 16, 17, 18, 19, 20, 21, 80, 83, 84, 86, 87, 88, 122, 126, 136, 137, 144, 145, 151, 152, 155, 156, 201, 327, 340, 341, 342, 343, 344, 396, 400, 402, 405, 406, 407], "synchronis": [1, 123, 412, 413], "either": [1, 2, 5, 22, 25, 27, 38, 45, 51, 54, 55, 56, 58, 59, 64, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 101, 122, 126, 144, 145, 151, 152, 204, 205, 218, 301, 324, 331, 332, 364, 397, 400, 401, 403, 412, 415, 416, 418, 419], "update_policy_weights_": [1, 13, 14, 15, 16, 17, 18, 19, 20, 21, 400, 413, 418], "update_at_each_batch": [1, 14, 15, 17], "true": [1, 2, 3, 4, 8, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 98, 99, 101, 104, 105, 106, 107, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 131, 132, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 162, 163, 165, 166, 168, 169, 170, 173, 177, 180, 182, 185, 186, 187, 188, 192, 193, 195, 196, 199, 200, 201, 204, 206, 208, 209, 210, 211, 212, 214, 216, 218, 220, 223, 225, 226, 228, 229, 230, 232, 233, 235, 236, 237, 238, 244, 247, 248, 249, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 270, 278, 279, 283, 284, 285, 286, 288, 289, 292, 293, 294, 295, 296, 297, 298, 299, 306, 307, 308, 309, 310, 311, 313, 314, 315, 317, 318, 319, 320, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 335, 340, 341, 342, 343, 346, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 367, 370, 371, 373, 374, 377, 391, 395, 396, 397, 400, 401, 402, 403, 404, 405, 408, 409, 411, 412, 413, 414, 415, 416, 418, 419], "second": [1, 3, 8, 23, 41, 42, 43, 44, 80, 83, 112, 166, 247, 249, 251, 253, 289, 308, 323, 326, 329, 362, 376, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 418, 419], "devic": [1, 2, 3, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 94, 98, 114, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 162, 166, 173, 175, 176, 178, 179, 180, 186, 190, 191, 192, 194, 195, 197, 201, 204, 206, 208, 209, 210, 212, 214, 216, 218, 223, 225, 230, 231, 232, 233, 234, 235, 236, 237, 238, 241, 242, 244, 247, 248, 249, 251, 252, 253, 254, 256, 259, 260, 262, 263, 268, 269, 270, 271, 272, 280, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 298, 300, 303, 306, 307, 309, 310, 311, 313, 314, 315, 322, 326, 327, 328, 329, 331, 332, 338, 340, 341, 342, 343, 358, 374, 379, 385, 395, 400, 401, 402, 403, 404, 405, 406, 407, 408, 411, 412, 413, 414, 415, 416, 418], "oper": [1, 2, 3, 4, 7, 8, 14, 15, 17, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 52, 53, 54, 55, 57, 59, 60, 61, 64, 69, 70, 71, 72, 73, 74, 75, 99, 106, 122, 126, 144, 145, 151, 152, 166, 182, 186, 209, 218, 241, 242, 248, 252, 264, 284, 285, 286, 288, 289, 290, 295, 301, 306, 308, 310, 311, 316, 323, 326, 328, 338, 339, 340, 341, 342, 343, 377, 393, 396, 397, 400, 401, 402, 403, 404, 405, 411, 412, 413, 414, 419], "instanc": [1, 2, 3, 4, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 27, 28, 38, 45, 50, 51, 52, 53, 54, 55, 56, 57, 59, 64, 65, 66, 67, 69, 70, 71, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 93, 94, 97, 99, 101, 106, 107, 114, 121, 122, 123, 125, 126, 127, 138, 144, 145, 151, 152, 169, 188, 206, 209, 210, 216, 218, 223, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 243, 244, 245, 247, 248, 249, 251, 252, 253, 254, 255, 259, 260, 261, 264, 265, 266, 268, 269, 270, 273, 274, 276, 281, 287, 288, 289, 291, 292, 293, 294, 296, 297, 298, 299, 302, 307, 309, 311, 314, 315, 322, 324, 327, 329, 331, 332, 338, 340, 341, 342, 343, 358, 360, 364, 373, 381, 382, 383, 387, 389, 390, 395, 396, 397, 400, 402, 403, 404, 405, 414, 416, 419], "cpu": [1, 2, 3, 8, 10, 14, 15, 16, 17, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 94, 98, 114, 118, 119, 120, 121, 122, 125, 126, 127, 131, 132, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 162, 166, 173, 175, 176, 178, 179, 180, 190, 192, 194, 195, 197, 201, 204, 206, 209, 210, 212, 214, 218, 223, 225, 230, 231, 241, 247, 248, 249, 251, 252, 253, 256, 262, 263, 269, 271, 272, 280, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 298, 300, 303, 306, 307, 309, 310, 311, 313, 314, 315, 322, 326, 327, 328, 329, 331, 332, 338, 358, 374, 395, 400, 401, 402, 403, 404, 405, 406, 407, 408, 411, 412, 413, 414, 415, 416, 418, 419], "slower": 1, "than": [1, 2, 3, 4, 8, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 27, 54, 80, 82, 86, 99, 106, 107, 110, 112, 122, 126, 130, 142, 143, 144, 145, 148, 151, 152, 195, 227, 228, 238, 249, 251, 253, 254, 264, 281, 283, 288, 295, 300, 324, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 394, 396, 400, 401, 402, 404, 406, 407, 412, 413, 414, 416, 418, 419], "one": [1, 2, 3, 4, 5, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 69, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 97, 98, 99, 101, 102, 106, 107, 108, 110, 112, 113, 116, 117, 118, 119, 122, 123, 125, 126, 127, 128, 130, 131, 132, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 156, 162, 163, 166, 169, 172, 175, 176, 177, 178, 187, 188, 192, 197, 200, 203, 205, 206, 207, 209, 210, 211, 214, 216, 218, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 247, 248, 249, 251, 252, 253, 254, 260, 261, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 276, 281, 283, 287, 288, 289, 291, 292, 293, 294, 295, 296, 299, 300, 302, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 338, 340, 341, 342, 343, 347, 348, 362, 370, 372, 373, 377, 381, 391, 394, 395, 396, 397, 400, 401, 402, 403, 404, 405, 406, 407, 408, 411, 412, 413, 414, 415, 416, 419], "cuda": [1, 2, 3, 7, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 54, 55, 59, 60, 61, 64, 69, 71, 72, 73, 74, 75, 118, 119, 122, 126, 128, 129, 130, 144, 145, 151, 152, 173, 186, 191, 192, 206, 209, 210, 212, 214, 218, 247, 248, 251, 252, 295, 369, 400, 401, 402, 403, 412, 413, 415, 419], "multipl": [1, 2, 3, 5, 8, 14, 15, 16, 17, 18, 19, 20, 21, 43, 54, 67, 101, 118, 119, 131, 132, 144, 151, 152, 170, 172, 177, 185, 187, 197, 200, 204, 209, 216, 247, 251, 253, 259, 262, 263, 283, 288, 292, 293, 295, 296, 299, 308, 315, 323, 326, 346, 391, 395, 396, 397, 400, 401, 402, 404, 406, 407, 412, 413, 414, 416, 418], "infer": [1, 144, 151, 169, 216, 249, 253, 262, 287, 292, 313, 358, 400, 402, 407, 409, 416], "run": [1, 2, 3, 4, 5, 6, 7, 8, 10, 14, 15, 17, 21, 27, 38, 45, 54, 55, 59, 64, 80, 83, 99, 106, 107, 118, 119, 120, 121, 122, 125, 126, 131, 132, 138, 139, 140, 144, 145, 151, 152, 187, 188, 210, 216, 218, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 243, 244, 245, 247, 248, 249, 251, 252, 253, 254, 261, 264, 265, 266, 268, 269, 270, 273, 274, 276, 281, 287, 289, 291, 294, 297, 298, 299, 302, 309, 329, 360, 367, 373, 389, 390, 391, 394, 397, 400, 401, 402, 403, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 418], "dispatch": [1, 18, 19, 20, 21, 54, 64, 281, 291, 360, 400], "avail": [1, 2, 3, 4, 6, 21, 51, 56, 65, 66, 80, 83, 88, 99, 105, 106, 107, 120, 121, 130, 136, 137, 142, 143, 144, 146, 147, 148, 153, 154, 155, 156, 162, 165, 168, 186, 242, 272, 292, 296, 324, 360, 389, 390, 395, 400, 401, 402, 403, 404, 405, 412, 413, 414, 416, 419], "speed": [1, 2, 4, 8, 30, 122, 126, 144, 145, 151, 152, 396, 400, 401, 402, 403, 412, 413, 414, 416], "avoid": [1, 2, 3, 27, 38, 45, 54, 55, 59, 64, 93, 94, 114, 122, 126, 144, 145, 151, 152, 161, 210, 216, 218, 229, 278, 283, 295, 300, 308, 309, 323, 326, 329, 380, 402, 413], "oom": [1, 3, 50, 52, 57, 93, 94, 114], "choic": [1, 2, 82, 88, 144, 264, 395, 396, 400, 401, 406, 412, 413], "pass": [1, 2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 27, 31, 32, 38, 39, 45, 51, 54, 55, 56, 58, 59, 61, 64, 65, 66, 69, 70, 80, 83, 84, 86, 87, 88, 91, 93, 94, 99, 101, 106, 107, 112, 114, 122, 123, 124, 126, 127, 135, 139, 144, 145, 146, 147, 151, 152, 155, 165, 166, 175, 178, 195, 209, 211, 216, 218, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 243, 244, 245, 247, 248, 249, 251, 252, 253, 254, 259, 260, 261, 262, 264, 265, 266, 268, 269, 270, 271, 273, 274, 276, 280, 281, 283, 287, 288, 289, 291, 292, 293, 294, 295, 296, 298, 299, 300, 302, 307, 308, 309, 322, 323, 324, 326, 327, 329, 331, 332, 340, 341, 342, 343, 344, 358, 374, 389, 390, 391, 395, 400, 401, 402, 403, 404, 405, 406, 407, 411, 412, 413, 414, 416, 419], "ie": [1, 3, 18, 20, 22, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 54, 60, 61, 64, 65, 69, 70, 71, 72, 73, 74, 75, 86, 98, 107, 122, 126, 130, 141, 144, 145, 151, 152, 162, 169, 182, 211, 216, 226, 249, 253, 287, 395, 396, 401, 413], "store": [1, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 27, 31, 36, 37, 38, 45, 50, 51, 52, 53, 54, 55, 56, 57, 59, 64, 65, 66, 67, 70, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 93, 94, 95, 98, 99, 101, 106, 112, 114, 122, 126, 144, 145, 151, 152, 215, 216, 218, 230, 256, 306, 307, 309, 310, 311, 313, 315, 316, 317, 322, 324, 326, 327, 328, 329, 331, 332, 338, 367, 393, 397, 400, 402, 403, 405, 407, 409, 412, 413, 415, 419], "while": [1, 2, 3, 7, 8, 23, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 197, 210, 218, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 243, 244, 245, 247, 248, 249, 251, 252, 253, 254, 261, 264, 265, 266, 268, 269, 270, 273, 274, 276, 281, 287, 289, 291, 294, 299, 302, 309, 314, 322, 323, 326, 329, 395, 396, 400, 402, 403, 405, 407, 408, 412, 413, 414, 415, 416, 418], "wait": [1, 20, 21, 22, 153, 403, 414], "also": [1, 2, 3, 8, 9, 11, 12, 14, 15, 23, 25, 26, 27, 30, 34, 38, 41, 42, 43, 44, 45, 49, 50, 52, 54, 55, 56, 57, 59, 64, 65, 69, 80, 83, 84, 86, 87, 88, 89, 93, 94, 99, 101, 106, 107, 112, 114, 122, 126, 136, 137, 144, 145, 146, 147, 151, 152, 155, 156, 161, 165, 166, 168, 169, 177, 188, 195, 197, 200, 201, 204, 206, 210, 218, 225, 232, 233, 247, 251, 274, 291, 292, 297, 298, 299, 306, 307, 309, 310, 311, 313, 314, 315, 320, 322, 326, 329, 331, 340, 347, 348, 358, 360, 395, 396, 397, 400, 401, 402, 403, 404, 405, 406, 407, 411, 412, 413, 414, 416, 419], "impact": [1, 2, 3, 86, 132, 175, 178, 229, 306, 308, 323, 326, 328, 401, 403, 412, 413], "memori": [1, 3, 8, 21, 27, 30, 38, 45, 50, 52, 54, 55, 57, 59, 64, 70, 80, 82, 83, 84, 86, 87, 88, 91, 93, 97, 122, 123, 126, 130, 144, 145, 151, 152, 169, 173, 192, 206, 209, 210, 212, 214, 216, 218, 251, 252, 295, 391, 393, 397, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 418, 419], "manag": [1, 8, 336, 337, 340, 341, 342, 343, 373, 395, 406], "kei": [1, 2, 3, 7, 14, 15, 16, 17, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 82, 90, 98, 99, 101, 104, 106, 107, 112, 122, 126, 131, 132, 144, 145, 146, 147, 151, 152, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 188, 191, 192, 193, 194, 195, 197, 200, 201, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 218, 225, 226, 227, 228, 230, 231, 241, 242, 245, 246, 249, 253, 255, 256, 269, 270, 272, 283, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 326, 327, 328, 329, 331, 332, 338, 339, 340, 341, 342, 343, 344, 358, 360, 371, 372, 373, 375, 376, 377, 381, 396, 397, 400, 402, 403, 404, 406, 411, 412, 413, 414, 416, 418, 419], "control": [1, 3, 5, 8, 16, 23, 24, 33, 56, 65, 66, 99, 101, 106, 120, 121, 122, 126, 135, 144, 145, 146, 147, 151, 152, 177, 225, 235, 236, 237, 238, 249, 253, 255, 256, 269, 270, 274, 281, 295, 296, 297, 306, 308, 309, 323, 324, 326, 330, 340, 345, 353, 358, 395, 397, 400, 401, 402, 404, 405, 406, 412, 413, 414, 416, 418], "which": [1, 2, 3, 4, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 101, 104, 105, 112, 118, 119, 120, 121, 122, 125, 126, 127, 128, 130, 131, 132, 136, 137, 139, 140, 142, 143, 144, 145, 148, 151, 152, 153, 154, 155, 156, 169, 170, 175, 178, 183, 186, 187, 188, 192, 193, 195, 204, 206, 207, 209, 210, 212, 216, 218, 220, 241, 247, 248, 249, 250, 251, 252, 253, 257, 258, 259, 260, 261, 279, 284, 285, 286, 287, 291, 292, 295, 296, 298, 306, 307, 308, 309, 311, 314, 315, 316, 317, 318, 319, 322, 323, 324, 326, 327, 328, 329, 331, 332, 335, 338, 340, 341, 342, 343, 358, 360, 368, 372, 395, 396, 397, 400, 401, 402, 403, 404, 405, 406, 407, 411, 412, 413, 414, 415, 416, 419], "storing_devic": [1, 14, 15, 16, 17, 18, 19, 20, 21, 401, 413], "dure": [1, 2, 3, 14, 15, 16, 17, 18, 19, 20, 25, 26, 30, 34, 41, 42, 43, 44, 49, 51, 52, 55, 56, 58, 59, 65, 66, 70, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 95, 99, 101, 104, 106, 122, 126, 144, 145, 146, 147, 151, 152, 165, 166, 169, 172, 175, 178, 180, 183, 190, 202, 210, 211, 216, 218, 229, 231, 249, 253, 260, 340, 342, 343, 373, 377, 396, 400, 401, 402, 403, 405, 406, 407, 409, 412, 413, 414, 416, 419], "heurist": [1, 4, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75, 270, 291, 400, 407, 419], "usual": [1, 2, 3, 4, 6, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 82, 104, 112, 118, 119, 122, 126, 131, 132, 144, 145, 151, 152, 263, 326, 331, 340, 341, 342, 343, 344, 359, 394, 395, 397, 400, 401, 402, 403, 405, 407, 408, 413, 416, 419], "same": [1, 2, 3, 4, 12, 16, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 52, 54, 55, 57, 59, 60, 61, 64, 67, 69, 70, 71, 72, 73, 74, 75, 82, 86, 105, 106, 110, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 131, 132, 135, 139, 140, 144, 145, 146, 147, 148, 151, 152, 162, 169, 175, 177, 178, 183, 187, 188, 209, 210, 216, 218, 232, 233, 248, 249, 252, 253, 254, 257, 258, 259, 260, 269, 270, 278, 287, 299, 307, 309, 322, 324, 327, 329, 331, 332, 396, 400, 401, 402, 404, 405, 407, 411, 412, 413, 415, 416, 419], "default": [1, 2, 3, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 93, 94, 98, 99, 101, 104, 105, 106, 107, 112, 114, 118, 119, 120, 121, 122, 125, 126, 127, 128, 131, 132, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 156, 162, 163, 165, 166, 167, 168, 169, 170, 174, 175, 176, 177, 178, 179, 180, 182, 186, 187, 188, 190, 192, 193, 197, 199, 200, 201, 204, 205, 206, 207, 208, 210, 211, 212, 214, 215, 216, 218, 220, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 272, 273, 274, 276, 277, 278, 279, 283, 287, 288, 289, 291, 292, 293, 294, 295, 296, 299, 300, 302, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 334, 335, 338, 339, 340, 341, 342, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 362, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 387, 391, 396, 397, 400, 401, 402, 403, 405, 412, 415, 416, 418, 419], "behavior": [1, 2, 3, 4, 14, 15, 21, 27, 38, 45, 54, 55, 59, 64, 69, 86, 122, 126, 144, 145, 151, 152, 170, 175, 178, 188, 193, 205, 210, 218, 225, 229, 249, 250, 253, 279, 314, 322, 331, 358, 373, 395, 401, 403, 412, 413, 414, 416], "besid": 1, "those": [1, 2, 3, 5, 7, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75, 122, 126, 144, 145, 151, 152, 169, 175, 178, 188, 206, 207, 253, 292, 296, 297, 298, 379, 389, 390, 395, 400, 401, 404, 405, 413, 414, 419], "choos": [1, 11, 135, 249, 253, 326, 393, 395, 396, 400, 401, 402, 412, 413, 416], "follow": [1, 2, 3, 6, 7, 8, 11, 27, 38, 45, 50, 52, 53, 54, 55, 57, 58, 59, 64, 69, 80, 82, 83, 84, 85, 86, 87, 88, 99, 118, 119, 122, 125, 126, 127, 131, 132, 138, 141, 144, 145, 146, 147, 149, 150, 151, 152, 155, 156, 165, 186, 192, 212, 216, 218, 232, 233, 247, 249, 251, 253, 254, 289, 292, 293, 294, 305, 306, 307, 308, 309, 310, 314, 315, 322, 323, 326, 327, 328, 329, 331, 332, 360, 377, 395, 396, 397, 400, 401, 402, 403, 406, 407, 411, 412, 413, 414, 416, 418, 419], "max_frames_per_traj": [1, 14, 15, 16, 17, 18, 19, 20, 21, 380, 400, 402, 418], "frame": [1, 2, 11, 14, 15, 16, 17, 18, 19, 20, 21, 45, 80, 169, 183, 218, 227, 228, 245, 269, 270, 291, 359, 360, 362, 370, 373, 377, 380, 381, 400, 401, 402, 403, 405, 412, 413, 416, 418, 419], "call": [1, 2, 3, 7, 8, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 94, 95, 99, 100, 101, 105, 106, 108, 110, 114, 115, 118, 119, 120, 121, 122, 125, 126, 127, 128, 131, 132, 139, 140, 141, 142, 143, 144, 145, 148, 151, 152, 153, 154, 165, 166, 169, 172, 173, 177, 180, 182, 185, 186, 188, 190, 191, 192, 200, 202, 206, 209, 210, 211, 212, 214, 215, 216, 218, 220, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 256, 260, 261, 262, 264, 265, 266, 268, 269, 270, 273, 274, 276, 281, 287, 289, 291, 294, 295, 296, 298, 299, 302, 308, 309, 323, 324, 326, 329, 331, 339, 340, 341, 342, 343, 358, 359, 362, 373, 396, 397, 401, 402, 403, 404, 405, 407, 408, 412, 413, 414, 416, 418, 419], "frames_per_batch": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 35, 45, 62, 166, 169, 197, 249, 253, 380, 400, 401, 402, 403, 407, 409, 412, 413, 416, 418], "each": [1, 2, 3, 4, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 27, 37, 38, 41, 43, 45, 46, 54, 55, 56, 58, 59, 63, 64, 65, 80, 82, 83, 86, 99, 101, 104, 106, 107, 109, 112, 122, 123, 126, 136, 137, 144, 145, 146, 147, 151, 152, 155, 156, 162, 185, 192, 197, 200, 204, 205, 206, 207, 214, 216, 218, 227, 228, 242, 245, 247, 248, 249, 251, 253, 259, 260, 265, 271, 272, 280, 288, 289, 294, 298, 346, 349, 350, 351, 352, 354, 355, 356, 357, 360, 373, 374, 389, 390, 395, 396, 400, 401, 402, 403, 405, 406, 407, 409, 412, 413, 414, 415, 416, 418, 419], "init_random_fram": [1, 14, 15, 16, 17, 18, 19, 20, 21, 380, 400, 401, 409], "rand_step": [1, 2, 3, 35, 62, 120, 121, 122, 123, 125, 126, 127, 133, 134, 138, 139, 140, 144, 145, 151, 152, 185, 206, 216, 414, 418, 419], "reset_at_each_it": [1, 14, 15, 16, 17, 18, 19, 20, 21, 400], "split_traj": [1, 14, 15, 16, 17, 18, 19, 20, 21, 82, 84, 86, 87, 88, 400, 401, 402], "trajectori": [1, 3, 14, 15, 16, 17, 18, 19, 20, 21, 23, 36, 37, 45, 46, 63, 65, 80, 82, 83, 84, 86, 87, 88, 98, 99, 106, 107, 112, 118, 119, 122, 126, 131, 132, 144, 145, 151, 152, 193, 204, 209, 218, 230, 253, 256, 269, 270, 326, 340, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 368, 393, 396, 400, 401, 402, 403, 404, 407, 409, 414, 418, 419], "pad": [1, 2, 3, 23, 53, 67, 82, 84, 86, 87, 88, 169, 232, 233, 235, 236, 253, 257, 258, 259, 374], "along": [1, 2, 3, 14, 15, 23, 25, 50, 52, 57, 58, 60, 61, 70, 82, 84, 86, 87, 88, 94, 99, 101, 106, 107, 112, 114, 125, 127, 168, 169, 170, 188, 190, 193, 200, 208, 253, 254, 257, 258, 263, 288, 292, 295, 296, 309, 324, 331, 395, 400, 401, 403, 404, 406, 412, 413, 414, 416], "point": [1, 2, 3, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 54, 55, 59, 60, 61, 64, 69, 71, 72, 73, 74, 75, 85, 92, 98, 99, 102, 112, 113, 116, 117, 122, 126, 144, 145, 151, 152, 162, 165, 168, 169, 173, 192, 205, 206, 208, 209, 210, 212, 214, 218, 255, 295, 305, 316, 377, 394, 401, 402, 411, 412, 413, 414, 416, 419], "boolean": [1, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 58, 60, 61, 69, 71, 72, 73, 74, 75, 99, 106, 107, 126, 165, 193, 204, 226, 228, 257, 258, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 397, 403], "repres": [1, 2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 31, 32, 35, 39, 61, 62, 64, 65, 84, 120, 121, 122, 125, 126, 127, 144, 145, 151, 152, 155, 156, 183, 193, 216, 218, 242, 257, 258, 272, 278, 288, 289, 293, 294, 296, 335, 340, 374, 400, 402, 403, 404, 405, 406, 412, 413], "valid": [1, 2, 3, 23, 50, 52, 53, 70, 89, 112, 157, 165, 193, 210, 218, 227, 228, 232, 233, 254, 257, 258, 269, 270, 323, 340, 341, 342, 343, 374, 397, 419], "exploration_typ": [1, 14, 15, 16, 17, 18, 19, 20, 21, 373, 393, 395, 400, 401], "strategi": [1, 2, 16, 86, 104, 135, 162, 245, 258, 267, 395, 397, 400, 401, 405, 412, 413, 416], "reset_when_don": [1, 14, 15, 16, 17], "its": [1, 2, 3, 4, 5, 7, 9, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 52, 54, 55, 56, 57, 59, 60, 61, 64, 65, 69, 71, 72, 73, 74, 75, 77, 101, 122, 126, 132, 138, 144, 145, 146, 147, 151, 152, 155, 157, 166, 168, 169, 179, 186, 204, 205, 206, 209, 210, 215, 216, 218, 227, 228, 232, 233, 257, 258, 259, 260, 288, 292, 293, 296, 299, 306, 307, 308, 309, 314, 315, 316, 317, 318, 319, 322, 323, 324, 325, 326, 327, 328, 329, 332, 338, 360, 377, 387, 397, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 412, 413, 414, 415, 416, 419], "organ": [1, 2, 414, 416], "within": [1, 2, 3, 14, 15, 17, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 52, 54, 55, 57, 59, 60, 61, 64, 65, 66, 69, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 98, 99, 122, 125, 126, 127, 144, 145, 148, 151, 152, 166, 169, 175, 178, 179, 197, 204, 215, 216, 218, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 243, 244, 245, 247, 248, 249, 251, 252, 253, 254, 261, 264, 265, 266, 268, 269, 270, 273, 274, 276, 281, 287, 289, 291, 294, 299, 302, 303, 311, 316, 331, 338, 358, 360, 395, 396, 401, 404, 405, 406, 407, 408, 409, 412, 414, 418], "differ": [1, 2, 3, 4, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 54, 55, 56, 58, 59, 60, 61, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 82, 83, 86, 101, 104, 118, 119, 122, 126, 131, 132, 135, 144, 145, 146, 147, 151, 152, 165, 169, 176, 177, 188, 195, 210, 211, 218, 242, 247, 248, 249, 251, 252, 253, 254, 256, 259, 260, 261, 272, 322, 324, 326, 335, 340, 341, 342, 346, 347, 348, 373, 377, 379, 389, 390, 395, 396, 397, 400, 401, 402, 404, 406, 408, 411, 412, 413, 414, 415, 416, 419], "how": [1, 2, 3, 11, 18, 19, 20, 24, 27, 38, 45, 51, 54, 55, 59, 64, 65, 86, 98, 99, 118, 119, 120, 121, 122, 125, 126, 127, 128, 131, 132, 136, 137, 139, 140, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 156, 162, 218, 261, 292, 306, 308, 321, 323, 324, 326, 360, 362, 377, 394, 395, 400, 401, 402, 403, 404, 405, 407, 408, 411, 412, 413, 414, 415, 416, 418, 419], "tabl": [1, 27, 395, 401, 405], "summar": [1, 3, 414], "what": [1, 3, 8, 11, 33, 51, 69, 80, 99, 106, 122, 126, 144, 145, 151, 152, 179, 206, 220, 225, 293, 309, 320, 324, 331, 394, 395, 396, 400, 401, 402, 403, 404, 405, 406, 407, 409, 412, 413, 414, 415, 416, 418, 419], "expect": [1, 2, 3, 4, 7, 27, 31, 38, 45, 54, 55, 56, 59, 64, 69, 70, 99, 105, 106, 122, 126, 138, 141, 144, 145, 151, 152, 162, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 182, 184, 185, 186, 188, 190, 192, 194, 195, 196, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 218, 220, 247, 248, 249, 251, 252, 253, 259, 260, 269, 270, 289, 295, 298, 306, 307, 308, 309, 310, 311, 313, 314, 315, 320, 322, 323, 324, 326, 327, 328, 329, 331, 332, 338, 381, 394, 395, 396, 397, 400, 402, 403, 404, 405, 406, 407, 412, 413, 414, 416, 419], "n": [1, 2, 3, 6, 7, 25, 26, 27, 30, 34, 38, 43, 44, 45, 49, 54, 55, 58, 59, 64, 122, 126, 144, 145, 151, 152, 169, 177, 182, 211, 218, 247, 248, 251, 256, 269, 270, 291, 296, 306, 307, 315, 324, 339, 374, 395, 397, 401, 403, 405, 412, 413, 416, 419], "b": [1, 2, 3, 7, 8, 23, 31, 32, 39, 50, 52, 54, 56, 57, 58, 59, 61, 64, 65, 66, 93, 112, 247, 248, 251, 252, 259, 260, 262, 263, 271, 280, 299, 340, 341, 342, 343, 344, 346, 360, 395, 401, 415, 416], "cat_result": [1, 14, 15], "na": 1, "t": [1, 2, 3, 4, 6, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 64, 65, 66, 69, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 98, 99, 101, 105, 112, 122, 123, 125, 126, 139, 140, 144, 145, 151, 152, 162, 165, 169, 175, 178, 179, 192, 196, 197, 205, 207, 214, 216, 218, 220, 225, 247, 251, 269, 270, 288, 295, 306, 330, 340, 341, 342, 343, 344, 346, 360, 367, 377, 379, 391, 394, 400, 401, 402, 403, 404, 405, 406, 407, 408, 411, 412, 413, 414, 415, 416, 418, 419], "p": [1, 2, 4, 101, 104, 123, 149, 150, 231], "In": [1, 2, 3, 4, 5, 7, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 27, 38, 45, 54, 55, 59, 64, 80, 82, 84, 86, 87, 88, 118, 119, 122, 126, 131, 132, 144, 145, 146, 147, 151, 152, 173, 175, 176, 178, 185, 192, 197, 201, 205, 206, 208, 209, 210, 212, 214, 215, 218, 247, 250, 251, 254, 259, 274, 278, 279, 295, 298, 305, 306, 307, 309, 310, 311, 313, 314, 315, 322, 324, 326, 327, 328, 329, 331, 332, 379, 389, 390, 391, 395, 396, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 412, 413, 414, 415, 416, 419], "case": [1, 3, 4, 5, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 56, 57, 60, 61, 65, 66, 69, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 97, 98, 99, 101, 112, 122, 125, 126, 144, 145, 151, 152, 175, 176, 178, 185, 188, 208, 210, 220, 253, 254, 260, 261, 292, 295, 296, 298, 299, 305, 306, 307, 309, 310, 311, 313, 314, 315, 322, 324, 326, 327, 328, 329, 331, 332, 340, 341, 342, 343, 360, 368, 379, 389, 390, 391, 393, 395, 396, 397, 400, 401, 402, 403, 404, 405, 407, 408, 412, 413, 414, 416, 419], "dimens": [1, 2, 3, 14, 15, 16, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 52, 56, 57, 58, 60, 61, 69, 70, 71, 72, 73, 74, 75, 82, 84, 86, 87, 88, 93, 94, 99, 106, 107, 112, 114, 120, 121, 122, 125, 126, 127, 128, 144, 145, 151, 152, 155, 156, 162, 168, 169, 170, 182, 188, 190, 193, 200, 203, 208, 211, 216, 232, 233, 234, 239, 249, 251, 253, 254, 257, 258, 259, 262, 263, 268, 271, 275, 276, 277, 278, 281, 288, 291, 306, 307, 308, 314, 315, 316, 317, 318, 319, 322, 323, 324, 326, 327, 328, 329, 332, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 391, 395, 400, 401, 402, 403, 404, 412, 413, 414, 416], "time": [1, 2, 3, 4, 7, 8, 14, 15, 16, 18, 19, 20, 21, 23, 27, 38, 45, 51, 54, 55, 56, 58, 59, 64, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 93, 101, 112, 118, 119, 122, 123, 126, 131, 132, 135, 141, 144, 145, 146, 147, 148, 151, 152, 161, 168, 170, 193, 200, 206, 207, 210, 216, 218, 225, 231, 243, 247, 251, 253, 269, 270, 291, 307, 308, 309, 315, 318, 322, 323, 324, 326, 327, 329, 331, 332, 340, 341, 342, 343, 344, 345, 346, 349, 350, 351, 352, 353, 354, 355, 356, 357, 377, 395, 396, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 418, 419], "adapt": [1, 24, 163, 204, 229, 323, 400, 414], "equal": [1, 14, 15, 17, 27, 80, 99, 106, 107, 139, 142, 143, 144, 151, 187, 188, 232, 233, 247, 249, 251, 253, 254, 260, 330, 335, 368, 389, 390, 400, 402, 415], "introduc": [1, 2, 144, 151, 247, 249, 251, 253, 269, 270, 400, 412], "some": [1, 2, 3, 4, 7, 8, 9, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 54, 55, 56, 59, 60, 61, 64, 69, 70, 71, 72, 73, 74, 75, 82, 88, 93, 94, 101, 112, 114, 118, 119, 122, 125, 126, 127, 131, 132, 136, 137, 144, 145, 146, 147, 151, 152, 155, 156, 165, 192, 206, 210, 212, 218, 220, 235, 249, 253, 276, 296, 297, 298, 360, 368, 380, 395, 397, 400, 401, 402, 403, 404, 405, 406, 407, 408, 412, 413, 414, 416, 418, 419], "confus": [1, 25, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 210, 218], "other": [1, 2, 3, 4, 7, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 57, 59, 60, 61, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 80, 82, 84, 86, 87, 88, 93, 94, 95, 101, 104, 105, 106, 107, 108, 110, 114, 122, 125, 126, 127, 138, 144, 145, 151, 152, 172, 176, 177, 194, 201, 208, 212, 216, 218, 245, 247, 249, 253, 263, 264, 287, 289, 294, 296, 306, 307, 308, 314, 315, 316, 317, 318, 319, 322, 323, 324, 326, 327, 328, 329, 332, 338, 340, 358, 374, 389, 390, 395, 396, 397, 400, 401, 402, 403, 404, 405, 406, 407, 408, 412, 413, 414, 415, 418, 419], "better": [1, 3, 8, 9, 14, 15, 23, 249, 253, 396, 402, 404, 414, 418], "consist": [1, 2, 3, 27, 38, 45, 51, 54, 55, 56, 59, 64, 65, 66, 83, 86, 122, 126, 144, 145, 151, 152, 186, 215, 218, 233, 254, 400, 401, 402, 414, 415, 419], "interact": [1, 2, 3, 4, 5, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 86, 122, 126, 136, 137, 144, 145, 151, 152, 210, 292, 296, 400, 402, 404, 405, 407, 412, 413, 414, 419], "keep": [1, 3, 4, 7, 8, 15, 51, 56, 65, 66, 101, 105, 112, 144, 151, 188, 192, 214, 216, 218, 225, 269, 270, 370, 377, 400, 401, 402, 403, 407, 408, 409, 413, 414, 416, 418, 419], "separ": [1, 2, 4, 8, 14, 15, 17, 18, 20, 21, 23, 80, 83, 192, 214, 307, 310, 313, 315, 327, 329, 331, 332, 396, 400, 401, 405, 406, 412, 413, 416, 419], "interchang": [1, 259, 260, 402, 404, 408, 415, 416], "between": [1, 2, 3, 4, 5, 14, 15, 17, 21, 24, 27, 38, 45, 50, 51, 52, 54, 55, 56, 57, 58, 59, 64, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 99, 101, 105, 106, 107, 122, 126, 136, 137, 144, 145, 151, 152, 155, 156, 177, 187, 198, 210, 216, 218, 220, 232, 233, 241, 247, 249, 253, 254, 259, 260, 289, 292, 296, 306, 308, 309, 310, 313, 314, 315, 318, 319, 322, 323, 324, 326, 327, 328, 329, 331, 332, 335, 340, 373, 377, 396, 400, 401, 403, 407, 412, 413, 414, 416, 419], "wherea": [1, 2, 22, 86, 118, 119, 120, 121, 125, 127, 128, 131, 132, 139, 140, 148, 177, 218, 324, 397, 408], "correspond": [1, 2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 57, 59, 60, 61, 64, 65, 69, 71, 72, 73, 74, 75, 83, 86, 88, 98, 99, 122, 126, 138, 144, 145, 151, 152, 192, 206, 210, 214, 216, 218, 245, 246, 249, 251, 253, 257, 258, 269, 270, 292, 296, 309, 311, 314, 315, 329, 338, 340, 341, 342, 343, 344, 400, 401, 402, 404, 406, 407, 408, 412, 413, 414, 415], "sub": [1, 2, 3, 14, 15, 17, 18, 19, 20, 21, 80, 86, 99, 106, 112, 122, 126, 144, 145, 151, 152, 193, 297, 298, 368, 377, 395, 400, 401, 402, 407, 411, 418, 419], "doesn": [1, 4, 12, 112, 139, 175, 178, 404], "understood": [1, 3, 400], "serv": [1, 18, 20, 21, 128, 416, 419], "basi": [1, 112, 259, 416], "we": [1, 2, 3, 5, 7, 9, 11, 12, 23, 24, 27, 31, 38, 45, 51, 54, 55, 56, 58, 59, 64, 65, 66, 80, 82, 86, 88, 93, 105, 107, 112, 118, 119, 122, 123, 126, 130, 131, 132, 144, 145, 151, 152, 169, 186, 192, 195, 212, 215, 216, 218, 220, 230, 253, 259, 260, 261, 306, 307, 309, 310, 311, 313, 315, 316, 317, 322, 324, 326, 327, 328, 329, 331, 332, 338, 360, 394, 395, 396, 397, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 418, 419], "anoth": [1, 2, 3, 8, 64, 69, 86, 99, 106, 122, 125, 126, 127, 130, 144, 145, 151, 152, 166, 175, 176, 178, 206, 209, 254, 292, 306, 307, 308, 314, 315, 316, 317, 318, 319, 322, 323, 324, 326, 327, 328, 329, 332, 338, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 395, 396, 400, 402, 403, 405, 406, 411, 412, 413, 414, 419], "wise": 1, "requir": [1, 3, 4, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 59, 60, 61, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 82, 84, 86, 98, 99, 106, 107, 122, 126, 130, 139, 144, 145, 148, 151, 152, 166, 173, 192, 206, 209, 210, 212, 214, 218, 249, 253, 254, 261, 281, 295, 297, 298, 306, 307, 308, 309, 314, 315, 316, 317, 318, 319, 322, 323, 324, 326, 327, 328, 329, 331, 332, 338, 358, 360, 362, 395, 397, 400, 401, 402, 403, 404, 405, 406, 408, 412, 413, 414, 416, 419], "method": [1, 2, 3, 4, 12, 16, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 94, 95, 98, 99, 101, 106, 107, 108, 109, 110, 112, 114, 122, 125, 126, 127, 128, 144, 145, 148, 151, 152, 165, 166, 169, 173, 175, 176, 179, 180, 182, 186, 188, 192, 194, 195, 196, 197, 201, 204, 206, 209, 210, 212, 214, 218, 219, 227, 230, 231, 245, 249, 253, 259, 260, 261, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 303, 306, 307, 309, 310, 311, 313, 314, 315, 316, 317, 320, 322, 324, 326, 327, 328, 329, 331, 332, 338, 344, 358, 359, 388, 396, 397, 398, 401, 402, 403, 404, 405, 406, 407, 408, 412, 414, 416, 419], "op": [1, 25, 26, 28, 29, 30, 34, 41, 42, 43, 44, 47, 48, 49, 69, 71, 72, 73, 74, 75, 187, 215, 227, 228, 245, 360, 379], "sinc": [1, 2, 3, 4, 5, 7, 11, 23, 27, 38, 45, 51, 54, 55, 56, 59, 64, 65, 66, 80, 88, 98, 99, 107, 112, 122, 126, 144, 145, 146, 147, 148, 151, 152, 218, 220, 225, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 259, 261, 264, 265, 266, 268, 269, 270, 273, 274, 276, 281, 287, 288, 289, 291, 293, 294, 299, 302, 358, 360, 396, 400, 401, 402, 403, 404, 405, 406, 412, 414, 415, 416, 418, 419], "goal": [1, 3, 4, 80, 81, 82, 83, 84, 85, 86, 87, 88, 205, 400, 401, 402, 403, 413, 414], "policy_devic": [1, 14, 15, 16, 17, 18, 19, 20, 21, 401], "explicitli": [1, 2, 3, 4, 30, 90, 91, 97, 165, 292, 396, 401, 403, 407, 412, 413, 416], "do": [1, 2, 3, 4, 7, 88, 122, 126, 144, 145, 151, 152, 155, 156, 162, 193, 215, 216, 225, 249, 253, 260, 262, 285, 324, 340, 396, 397, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 416, 418, 419], "deepcopi": [1, 261, 324, 412], "structur": [1, 3, 7, 50, 51, 52, 56, 57, 58, 65, 66, 69, 70, 112, 122, 126, 144, 145, 151, 152, 175, 178, 226, 259, 269, 270, 306, 326, 340, 341, 342, 343, 344, 393, 396, 400, 402, 403, 404, 407, 412, 413, 414, 415], "place": [1, 2, 3, 24, 27, 31, 32, 33, 38, 39, 45, 50, 52, 54, 55, 57, 59, 61, 64, 93, 94, 101, 104, 114, 122, 123, 126, 144, 145, 151, 152, 155, 156, 165, 173, 179, 192, 206, 209, 210, 212, 214, 215, 216, 218, 226, 261, 287, 291, 295, 374, 379, 380, 396, 401, 402, 405, 408, 412, 413, 414, 416], "instanti": [1, 2, 3, 14, 15, 21, 50, 51, 52, 56, 57, 65, 66, 69, 98, 99, 130, 165, 209, 260, 358, 400, 401, 405, 406, 408, 412, 413, 414, 416, 419], "all": [1, 2, 3, 4, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 64, 65, 66, 69, 71, 72, 73, 74, 75, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 120, 121, 122, 123, 125, 126, 127, 128, 136, 137, 138, 142, 143, 144, 145, 146, 147, 151, 152, 155, 156, 157, 162, 168, 169, 172, 173, 175, 176, 178, 181, 186, 187, 188, 192, 200, 202, 206, 207, 209, 210, 212, 214, 216, 218, 222, 223, 224, 225, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 243, 244, 245, 247, 248, 249, 251, 252, 253, 254, 259, 260, 261, 264, 265, 266, 268, 269, 270, 273, 274, 276, 281, 287, 289, 291, 294, 295, 296, 298, 299, 302, 303, 306, 307, 309, 318, 322, 324, 326, 327, 328, 329, 331, 332, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 360, 372, 377, 380, 389, 390, 391, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 416, 418, 419], "graph": [1, 3, 4, 8, 54, 64, 118, 119, 131, 132, 336, 337, 400, 414], "reli": [1, 3, 11, 23, 55, 59, 206, 247, 248, 249, 251, 252, 253, 306, 326, 396, 400, 402, 405, 407, 414, 419], "third": [1, 188, 289, 412, 413], "parti": 1, "try": [1, 4, 7, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 31, 32, 39, 50, 52, 57, 61, 401, 402, 403, 406, 407, 412, 413, 414, 418, 419], "limit": [1, 2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 58, 60, 61, 69, 71, 72, 73, 74, 75, 122, 126, 138, 144, 145, 151, 152, 169, 186, 306, 308, 323, 324, 326, 328, 396, 400, 401, 403, 412, 413, 414], "chart": 1, "show": [1, 2, 3, 11, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218, 260, 360, 395, 400, 402, 403, 412, 413, 414, 416, 418], "decis": [1, 2, 3, 234, 268, 287, 312, 325, 403, 404, 405, 412, 413, 416, 419], "simplest": [1, 54, 64, 112, 299, 400, 402, 403, 405, 412, 413, 416, 419], "scenario": [1, 2, 136, 137, 144, 155, 156, 358, 400, 405, 412, 413, 414], "transit": [1, 27, 38, 45, 54, 55, 59, 64, 82, 86, 99, 107, 112, 122, 126, 144, 145, 151, 152, 218, 229, 301, 400, 403, 404, 405, 407, 412, 414, 416], "sampl": [1, 4, 8, 9, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 54, 56, 58, 60, 61, 64, 65, 66, 69, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 94, 98, 99, 100, 101, 104, 105, 106, 107, 110, 112, 114, 122, 126, 138, 141, 144, 145, 151, 152, 162, 168, 169, 193, 197, 221, 224, 227, 228, 230, 240, 245, 246, 250, 256, 257, 258, 267, 268, 269, 270, 273, 278, 279, 283, 288, 289, 290, 292, 293, 294, 295, 296, 306, 307, 308, 309, 310, 311, 313, 323, 325, 326, 331, 332, 368, 374, 377, 380, 393, 395, 400, 401, 402, 403, 404, 405, 407, 409, 412, 413, 415, 418, 419], "attent": [1, 2, 8, 400, 403, 419], "given": [1, 2, 3, 14, 15, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 54, 55, 56, 58, 59, 60, 61, 64, 65, 66, 69, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 99, 101, 106, 107, 122, 126, 138, 142, 143, 144, 145, 151, 152, 153, 154, 173, 177, 188, 192, 206, 209, 210, 212, 214, 216, 218, 225, 230, 231, 242, 243, 245, 247, 249, 251, 253, 256, 261, 270, 272, 276, 283, 288, 289, 291, 294, 295, 296, 297, 298, 300, 305, 310, 311, 313, 324, 339, 340, 341, 342, 343, 344, 346, 369, 373, 387, 395, 397, 400, 401, 402, 404, 405, 406, 407, 408, 413, 414, 419], "built": [1, 2, 3, 5, 7, 101, 118, 119, 125, 131, 132, 141, 142, 306, 307, 309, 310, 311, 313, 315, 316, 317, 322, 324, 326, 327, 328, 329, 331, 332, 333, 338, 385, 387, 388, 391, 400, 401, 402, 403, 406, 408, 414, 416, 419], "flatten": [1, 25, 26, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 52, 57, 60, 61, 69, 71, 72, 73, 74, 75, 112, 166, 182, 374, 393, 403, 413], "suffici": [1, 3, 4, 400], "preprocess": [1, 2, 70, 80, 81, 82, 83, 84, 85, 86, 87, 88, 401], "popul": [1, 2, 3, 14, 15, 16, 51, 56, 63, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 185, 206, 261, 324, 400, 402, 403, 405, 407, 414, 416], "replaybuff": [1, 2, 14, 15, 16, 35, 51, 62, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 98, 99, 101, 106, 116, 169, 193, 197, 218, 311, 316, 338, 385, 387, 393, 402, 407, 409, 412, 413, 415, 416, 418], "lazytensorstorag": [1, 2, 51, 56, 64, 65, 66, 98, 112, 197, 218, 402, 409, 413, 416], "lambda": [1, 2, 12, 14, 15, 16, 17, 21, 22, 54, 56, 64, 112, 122, 123, 126, 144, 145, 151, 152, 161, 166, 186, 206, 218, 231, 281, 288, 291, 292, 293, 317, 319, 320, 331, 340, 343, 351, 352, 356, 357, 358, 387, 396, 400, 412, 413, 416, 418, 419], "reshap": [1, 2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75, 86, 106, 112, 166, 249, 253, 254, 358, 402, 412, 413], "extend": [1, 2, 8, 35, 51, 54, 56, 62, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 92, 93, 95, 98, 99, 101, 102, 106, 107, 110, 112, 113, 116, 117, 168, 197, 218, 229, 324, 374, 396, 397, 400, 401, 402, 403, 407, 409, 412, 413, 415, 416, 418], "slice": [1, 2, 3, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 51, 56, 60, 61, 65, 66, 69, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 99, 101, 106, 107, 162, 168, 416], "recommend": [1, 2, 4, 7, 14, 15, 16, 17, 18, 19, 20, 21, 50, 51, 52, 56, 57, 65, 66, 112, 130, 261, 407, 412, 413], "achiev": [1, 2, 3, 4, 27, 38, 45, 54, 55, 59, 64, 122, 126, 130, 144, 145, 151, 152, 205, 218, 226, 231, 292, 374, 397, 400, 401, 402, 403, 412, 413, 414, 416, 419], "creat": [1, 2, 3, 4, 5, 6, 7, 10, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 95, 101, 112, 122, 123, 126, 130, 144, 145, 146, 151, 152, 155, 156, 166, 169, 192, 209, 210, 212, 215, 216, 218, 223, 225, 232, 233, 235, 236, 237, 238, 239, 244, 249, 253, 254, 255, 259, 260, 287, 296, 303, 309, 311, 316, 327, 329, 338, 360, 374, 381, 382, 383, 387, 389, 390, 395, 400, 401, 402, 403, 405, 408, 412, 413, 414, 415, 416, 418, 419], "multidimension": [1, 2, 65, 98, 99, 416], "slicesampl": [1, 2, 80, 99, 416], "sampler": [1, 2, 51, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 94, 95, 98, 99, 100, 101, 104, 105, 106, 107, 108, 110, 112, 114, 193, 311, 316, 338, 400, 402, 412, 413, 416], "One": [1, 2, 4, 8, 25, 26, 30, 34, 43, 44, 49, 70, 112, 118, 119, 144, 151, 169, 197, 212, 227, 228, 267, 295, 299, 330, 335, 364, 400, 401, 416, 419], "must": [1, 2, 3, 7, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 54, 55, 56, 58, 59, 60, 61, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 94, 95, 99, 101, 106, 107, 108, 109, 110, 112, 114, 118, 122, 123, 126, 131, 142, 144, 145, 146, 147, 148, 151, 152, 153, 155, 162, 165, 166, 169, 172, 179, 183, 186, 188, 190, 201, 205, 206, 207, 210, 211, 216, 218, 232, 233, 242, 249, 253, 254, 257, 258, 259, 260, 272, 283, 288, 289, 291, 292, 293, 294, 295, 296, 299, 300, 306, 307, 309, 310, 311, 313, 314, 315, 316, 317, 322, 324, 326, 327, 328, 329, 330, 331, 332, 338, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 362, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 396, 400, 401, 402, 403, 405, 411, 414, 416], "ensur": [1, 2, 3, 27, 38, 45, 51, 54, 55, 59, 64, 65, 98, 99, 105, 122, 126, 144, 145, 151, 152, 162, 169, 192, 204, 210, 212, 216, 218, 249, 253, 288, 395, 401, 402, 414, 416], "shape": [1, 2, 3, 14, 15, 16, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 52, 53, 54, 57, 58, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 94, 98, 101, 112, 114, 120, 121, 122, 125, 126, 127, 131, 132, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 155, 156, 162, 166, 168, 170, 175, 178, 179, 180, 186, 188, 190, 194, 195, 197, 201, 204, 206, 208, 216, 217, 218, 220, 223, 225, 230, 231, 234, 235, 236, 237, 238, 239, 240, 241, 244, 247, 248, 249, 251, 252, 253, 254, 256, 257, 258, 259, 260, 262, 264, 267, 268, 269, 271, 272, 277, 278, 280, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 298, 299, 300, 303, 306, 307, 309, 310, 311, 313, 314, 315, 322, 326, 327, 328, 329, 331, 332, 335, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 368, 374, 377, 387, 395, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 415, 416, 418, 419], "clearli": [1, 2], "practic": [1, 2, 3, 4, 5, 8, 80, 250, 278, 279, 305, 394, 400, 401, 402, 403, 406, 412, 413, 415, 419], "need": [1, 2, 3, 4, 7, 8, 10, 12, 18, 19, 20, 21, 24, 27, 33, 38, 45, 50, 52, 54, 55, 59, 64, 69, 108, 112, 122, 126, 130, 135, 144, 145, 146, 147, 151, 152, 169, 172, 182, 192, 195, 207, 210, 214, 216, 218, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 243, 244, 245, 247, 248, 249, 251, 252, 253, 254, 261, 262, 264, 265, 266, 268, 269, 270, 273, 274, 276, 281, 287, 289, 291, 292, 293, 294, 295, 299, 302, 305, 315, 328, 329, 339, 344, 360, 377, 391, 395, 396, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 412, 413, 414, 416, 418, 419], "dimension": [1, 51, 55, 56, 64, 65, 66, 177, 249, 253, 340, 345, 353, 413], "num_slic": [1, 2, 80, 86, 99, 106, 107, 416], "4": [1, 2, 3, 7, 25, 27, 31, 32, 35, 39, 43, 44, 45, 51, 54, 56, 58, 59, 61, 62, 64, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 94, 101, 106, 107, 114, 118, 119, 120, 121, 122, 126, 131, 132, 133, 134, 135, 138, 140, 144, 145, 149, 150, 151, 152, 162, 163, 165, 166, 169, 179, 197, 204, 205, 216, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 242, 243, 244, 245, 246, 247, 248, 251, 252, 254, 256, 259, 260, 264, 265, 266, 267, 268, 269, 270, 271, 272, 280, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 298, 300, 306, 307, 309, 310, 311, 313, 314, 315, 316, 317, 322, 324, 326, 327, 328, 329, 331, 332, 338, 358, 359, 395, 399, 400, 401, 402, 403, 405, 407, 408, 412, 413, 414, 415, 416, 417, 418, 419], "trajectory_kei": [1, 23], "traj_id": [1, 2, 3, 14, 15, 16, 23, 35, 62, 166, 197, 403, 407, 416, 418], "total_fram": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 35, 45, 62, 166, 169, 197, 377, 380, 387, 397, 400, 401, 402, 403, 407, 409, 412, 413, 416, 418], "dim": [1, 2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 56, 57, 60, 61, 65, 66, 69, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 106, 169, 170, 190, 203, 206, 211, 216, 252, 276, 281, 291, 391, 401, 402, 412, 414, 416], "ndim": [1, 2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 51, 56, 60, 61, 65, 66, 69, 71, 72, 73, 74, 75, 93, 94, 98, 99, 112, 114, 122, 126, 144, 145, 151, 152, 218, 291], "parallelenv": [1, 2, 3, 14, 15, 16, 17, 20, 112, 122, 126, 139, 145, 146, 147, 148, 151, 152, 358, 388, 393, 400, 401, 402, 404, 411, 418, 419], "make_env": [1, 3, 144, 151, 156, 216, 358, 382, 383, 400, 401, 418, 419], "regular": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 50, 52, 57, 98, 104, 122, 126, 144, 145, 151, 152, 210, 229, 241, 272, 289, 293, 294, 295, 296, 316, 326, 379, 393, 397, 400, 401, 404, 405, 409, 416, 419], "behav": [1, 3, 128, 138, 247, 251, 267, 314, 322, 324, 415], "iif": 1, "accordingli": [1, 2, 99, 204, 205, 251, 293, 403], "3": [1, 2, 3, 6, 7, 10, 11, 12, 14, 15, 16, 17, 21, 25, 26, 27, 30, 31, 32, 34, 38, 39, 41, 42, 43, 44, 45, 49, 50, 51, 52, 54, 55, 56, 57, 59, 61, 64, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 94, 99, 101, 106, 107, 112, 114, 120, 121, 122, 125, 126, 127, 128, 129, 135, 136, 137, 139, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 163, 165, 166, 169, 173, 177, 179, 180, 186, 188, 190, 192, 194, 195, 197, 200, 201, 204, 205, 206, 208, 209, 210, 212, 214, 218, 219, 223, 229, 230, 231, 232, 233, 235, 236, 237, 239, 242, 244, 247, 248, 249, 251, 252, 253, 254, 256, 259, 260, 261, 264, 267, 271, 281, 283, 284, 285, 286, 288, 289, 292, 294, 295, 298, 299, 300, 306, 307, 309, 310, 311, 313, 314, 315, 316, 317, 318, 322, 324, 326, 327, 328, 329, 331, 332, 338, 340, 341, 342, 343, 346, 349, 350, 351, 352, 354, 355, 356, 357, 358, 360, 376, 395, 397, 399, 400, 401, 402, 403, 404, 405, 407, 408, 412, 413, 414, 415, 416, 417, 418, 419], "isn": [1, 2, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 50, 52, 57, 86, 98, 112, 165, 179, 220, 288, 295, 405, 406, 408, 412, 413], "current": [1, 2, 3, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 69, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 96, 99, 101, 107, 122, 126, 128, 139, 142, 143, 144, 145, 151, 152, 165, 166, 169, 193, 205, 206, 207, 209, 210, 218, 221, 225, 243, 269, 270, 274, 278, 291, 306, 308, 309, 316, 323, 326, 328, 329, 363, 397, 400, 401, 402, 403, 406, 412, 413, 414, 416, 418, 419], "fulli": [1, 8, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218, 248, 252, 401, 406, 414, 416], "aniconsecut": [1, 3, 80, 105, 130, 253, 269, 270, 360, 403, 404, 407, 413, 416, 419], "won": [1, 4, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 45, 50, 52, 54, 55, 57, 59, 64, 86, 122, 123, 125, 126, 139, 140, 144, 145, 151, 152, 192, 214, 218, 306, 377, 391, 401, 402, 404, 405], "therebi": [1, 24, 358, 396, 400, 401], "interrupt": [1, 2, 126, 291, 346], "These": [1, 2, 7, 58, 83, 88, 115, 155, 192, 214, 395, 396, 400, 402, 412, 413, 414, 416, 419], "tool": [1, 2, 3, 5, 403, 404, 412, 414, 416, 419], "backend": [1, 3, 7, 12, 18, 19, 21, 22, 122, 125, 126, 144, 145, 151, 152, 158, 161, 397, 400, 402, 403, 404, 407, 408, 414], "gloo": [1, 18, 19, 22], "nccl": [1, 18, 19], "mpi": [1, 18, 19], "distributeddatacollector": [1, 22, 393], "rpc": [1, 20, 22], "rpcdatacollector": [1, 22, 393], "launcher": [1, 18, 19, 20, 22], "rai": [1, 21], "submitit": [1, 18, 19, 20, 22], "multiprocess": [1, 2, 3, 14, 15, 18, 19, 20, 56, 65, 66, 80, 88, 101, 123, 124, 144, 151, 216, 400, 401, 402, 403, 412, 413, 414, 415, 419], "synchron": [1, 14, 19, 21, 50, 52, 57, 139, 389, 390, 401, 402, 412], "mode": [1, 6, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 45, 54, 55, 59, 64, 122, 126, 139, 144, 145, 151, 152, 175, 178, 205, 210, 216, 218, 240, 249, 250, 253, 258, 267, 277, 278, 279, 292, 296, 324, 358, 373, 395, 396, 400, 401, 403, 412, 413, 418, 419], "find": [1, 4, 6, 7, 18, 19, 20, 51, 53, 67, 106, 107, 227, 228, 251, 269, 270, 371, 375, 400, 401, 405, 406, 412, 413], "folder": [1, 2, 50, 52, 57, 155, 401], "variou": [1, 2, 3, 249, 253, 306, 307, 308, 314, 315, 316, 317, 318, 319, 322, 323, 324, 326, 327, 328, 329, 332, 333, 338, 360, 389, 390, 400, 401, 402, 404, 405, 406, 408, 412, 413, 416, 419], "machin": [1, 2, 7, 18, 19, 20, 45, 85, 130, 412, 413, 418], "wonder": 1, "why": [1, 2, 3, 225, 412, 414, 419], "instead": [1, 4, 7, 8, 12, 14, 15, 16, 25, 27, 38, 45, 54, 55, 59, 64, 68, 86, 122, 126, 144, 145, 151, 152, 182, 206, 218, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 243, 244, 245, 247, 248, 249, 251, 252, 253, 254, 261, 264, 265, 266, 268, 269, 270, 273, 274, 276, 281, 287, 289, 291, 294, 299, 302, 306, 308, 309, 311, 314, 315, 316, 322, 323, 326, 327, 328, 329, 338, 340, 344, 348, 391, 395, 396, 404, 405, 409, 414, 416, 419], "lower": [1, 2, 3, 21, 27, 28, 172, 216, 273, 274, 299, 402, 412, 414], "io": [1, 11, 80, 86, 131, 132, 139, 142, 143, 153, 154, 251, 252], "footprint": [1, 2, 416], "commun": [1, 2, 3, 144, 151, 394, 402, 419], "yet": [1, 118, 119, 131, 415], "plai": [1, 3, 146, 147, 152, 169, 401, 402, 406, 416, 419], "role": [1, 3, 137, 401, 406, 419], "opposit": [1, 412], "direct": [1, 2, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218, 247, 251, 324, 401, 406], "faster": [1, 2, 4, 23, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75, 87, 88, 139, 340, 341, 342, 343, 403, 412, 413], "share": [1, 3, 6, 8, 23, 50, 52, 56, 57, 65, 66, 69, 91, 93, 94, 95, 99, 101, 106, 108, 110, 114, 123, 144, 151, 216, 249, 253, 259, 260, 284, 285, 286, 306, 307, 308, 309, 310, 314, 315, 322, 323, 326, 327, 328, 329, 331, 332, 391, 393, 395, 402, 403, 409, 411, 412, 413, 418, 419], "among": [1, 3, 146, 147, 412, 413], "prohibit": [1, 3, 112], "slow": [1, 3, 4, 11, 50, 52, 57], "compar": [1, 3, 86, 112, 307, 309, 322, 327, 329, 331, 332, 373, 396, 400, 402, 405, 406, 412, 413, 416, 419], "gpu": [1, 7, 8, 27, 38, 45, 54, 55, 59, 64, 93, 94, 114, 122, 126, 127, 130, 144, 145, 151, 152, 218, 400, 402, 403, 412, 413, 419], "driver": [1, 7], "mean": [1, 2, 3, 4, 7, 14, 15, 16, 17, 18, 19, 20, 21, 50, 52, 57, 65, 69, 80, 98, 99, 106, 112, 118, 119, 126, 152, 165, 188, 216, 227, 228, 229, 230, 240, 243, 247, 249, 251, 253, 256, 268, 277, 278, 292, 296, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 320, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 340, 341, 342, 343, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 395, 396, 400, 401, 402, 405, 412, 413, 414, 416, 418, 419], "keyword": [1, 2, 3, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 64, 65, 66, 69, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 93, 94, 98, 99, 101, 104, 106, 107, 110, 114, 118, 119, 120, 121, 122, 125, 126, 127, 128, 131, 132, 136, 137, 139, 140, 142, 143, 144, 145, 148, 151, 152, 153, 154, 155, 156, 165, 166, 170, 172, 173, 176, 192, 200, 201, 206, 208, 209, 210, 211, 212, 214, 218, 227, 228, 229, 231, 245, 246, 249, 253, 257, 258, 259, 260, 269, 270, 283, 287, 288, 291, 292, 293, 295, 296, 299, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 320, 321, 322, 323, 325, 326, 327, 328, 329, 331, 332, 334, 338, 340, 341, 342, 343, 344, 348, 358, 367, 388, 400, 401, 402, 405, 408, 412, 413, 416, 419], "build": [1, 3, 7, 23, 27, 31, 38, 45, 51, 54, 55, 56, 59, 64, 65, 66, 69, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 118, 119, 122, 126, 127, 128, 131, 132, 136, 137, 139, 142, 143, 144, 145, 148, 151, 152, 153, 154, 155, 156, 197, 216, 218, 230, 249, 253, 256, 290, 292, 296, 377, 384, 385, 386, 395, 397, 402, 403, 405, 406, 407, 408, 412, 413, 414, 415, 418, 419], "mani": [1, 2, 3, 4, 56, 118, 119, 120, 121, 122, 125, 127, 128, 131, 132, 139, 140, 148, 306, 308, 315, 323, 326, 395, 400, 401, 402, 404, 405, 407, 409, 412, 413, 414, 416, 419], "eg": [1, 2, 3, 12, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 52, 57, 60, 61, 69, 71, 72, 73, 74, 75, 93, 94, 95, 108, 110, 114, 120, 121, 122, 125, 126, 127, 128, 130, 144, 145, 148, 151, 152, 177, 204, 210, 259, 287, 360], "gymnasium": [1, 2, 3, 5, 12, 64, 122, 125, 126, 127, 133, 134, 144, 145, 151, 152, 158, 161, 180, 201, 204, 215, 401, 402, 414, 418], "warn": [1, 3, 55, 59, 227, 228, 245, 246, 269, 270, 401], "quickli": [1, 3, 401, 412, 413, 419], "becom": [1, 3, 4, 21, 247, 251, 412, 413, 419], "quit": [1, 3, 11, 80, 122, 126, 144, 145, 151, 152, 395, 400, 401, 402, 405, 412, 413, 419], "annoi": [1, 3], "By": [1, 2, 3, 31, 32, 39, 61, 120, 121, 122, 125, 126, 127, 128, 136, 137, 144, 145, 146, 147, 148, 151, 152, 155, 156, 281, 296, 324, 373, 391, 396, 400, 412, 415, 416, 419], "filter": [1, 2, 3, 4, 70, 99, 106, 107, 306, 307, 309, 310, 314, 315, 322, 326, 327, 329, 404], "out": [1, 2, 3, 4, 5, 9, 21, 27, 38, 45, 50, 52, 54, 55, 57, 59, 64, 70, 82, 86, 91, 99, 106, 107, 122, 126, 144, 145, 146, 147, 151, 152, 206, 218, 220, 247, 248, 251, 257, 258, 261, 262, 263, 270, 283, 287, 288, 289, 292, 293, 294, 295, 296, 324, 336, 337, 396, 397, 400, 401, 402, 403, 404, 405, 407, 412, 413, 414, 416, 418, 419], "still": [1, 2, 3, 9, 54, 64, 71, 86, 118, 119, 122, 126, 131, 132, 144, 145, 151, 152, 228, 323, 324, 400, 401, 403, 411, 414, 416, 419], "wish": [1, 3, 11, 14, 15, 17, 86, 161, 406, 416], "displai": [1, 3, 7, 122, 126, 144, 145, 151, 152, 377, 397, 400, 401, 413, 414], "filter_warnings_subprocess": [1, 3], "fals": [1, 2, 3, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 97, 98, 99, 101, 104, 105, 106, 107, 114, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 131, 132, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 162, 163, 165, 166, 169, 170, 173, 175, 178, 179, 180, 182, 185, 186, 187, 188, 190, 192, 193, 194, 195, 197, 199, 200, 201, 204, 206, 208, 209, 210, 211, 212, 214, 216, 218, 220, 225, 226, 228, 229, 230, 231, 232, 233, 235, 241, 242, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 269, 270, 271, 272, 278, 279, 280, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 298, 299, 300, 306, 307, 308, 309, 310, 311, 313, 314, 315, 317, 318, 319, 320, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 335, 338, 340, 341, 342, 343, 349, 350, 351, 352, 354, 355, 356, 357, 358, 360, 367, 370, 371, 373, 374, 375, 377, 391, 395, 397, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 418, 419], "central": [2, 259, 260, 261, 400, 401, 404, 412, 413, 416], "part": [2, 3, 4, 8, 27, 38, 45, 54, 55, 58, 59, 64, 80, 83, 84, 86, 87, 88, 118, 122, 126, 131, 142, 144, 145, 151, 152, 168, 188, 197, 200, 218, 225, 249, 253, 300, 368, 391, 400, 402, 403, 409, 412, 414, 419], "algorithm": [2, 3, 8, 9, 138, 162, 306, 326, 327, 329, 393, 396, 397, 400, 401, 402, 403, 405, 406, 407, 408, 412, 413, 415, 416, 418], "implement": [2, 3, 9, 12, 14, 15, 16, 27, 38, 45, 54, 55, 59, 64, 68, 96, 108, 109, 122, 126, 138, 139, 144, 145, 151, 152, 166, 173, 175, 176, 180, 183, 186, 194, 195, 201, 204, 209, 210, 216, 218, 232, 247, 248, 249, 250, 251, 252, 253, 277, 278, 279, 306, 307, 309, 312, 313, 314, 320, 322, 324, 325, 326, 328, 329, 331, 358, 368, 382, 395, 397, 400, 401, 402, 403, 412, 413, 414, 418], "wide": [2, 3, 5], "give": [2, 3, 7, 65, 83, 122, 126, 138, 144, 145, 151, 152, 169, 394, 396, 400, 401, 412, 413, 414, 415, 418], "abil": [2, 324, 414, 416], "panel": [2, 402], "usag": [2, 3, 5, 7, 14, 15, 16, 17, 18, 19, 20, 21, 54, 64, 82, 88, 91, 112, 166, 169, 179, 249, 253, 309, 314, 322, 329, 333, 395, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 418, 419], "includ": [2, 3, 4, 7, 9, 21, 27, 38, 45, 54, 55, 59, 64, 69, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 93, 94, 95, 97, 108, 110, 114, 122, 126, 138, 142, 143, 144, 145, 151, 152, 205, 210, 216, 218, 249, 253, 306, 309, 324, 329, 380, 395, 397, 400, 401, 402, 403, 412, 413, 414, 416, 419], "almost": [2, 403], "physic": [2, 6, 7, 91, 144, 145, 148, 397, 400, 412, 413, 414], "theori": 2, "crude": 2, "made": [2, 3, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 54, 55, 56, 59, 60, 61, 64, 69, 71, 72, 73, 74, 75, 80, 93, 94, 95, 108, 110, 114, 122, 125, 126, 127, 144, 145, 151, 152, 218, 261, 269, 270, 311, 324, 338, 400, 401, 403, 412, 413, 415, 416], "liststorag": [2, 51, 56, 64, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 416], "veri": [2, 3, 131, 132, 401, 404, 407, 412, 414, 416, 418, 419], "ineffici": [2, 4], "allow": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 31, 32, 38, 39, 45, 50, 52, 54, 55, 56, 57, 59, 60, 61, 64, 65, 66, 80, 86, 99, 101, 104, 106, 107, 118, 119, 122, 126, 131, 132, 144, 145, 151, 152, 165, 166, 195, 218, 225, 254, 306, 307, 309, 310, 311, 313, 315, 316, 317, 322, 324, 326, 327, 328, 329, 331, 332, 333, 335, 338, 395, 397, 400, 402, 403, 404, 405, 406, 412, 413, 414, 416, 419], "complex": [2, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 173, 192, 206, 209, 210, 212, 214, 218, 295, 400, 401, 404, 405], "tensor": [2, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 104, 106, 107, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 131, 132, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 155, 156, 162, 163, 165, 166, 168, 169, 170, 173, 175, 177, 178, 179, 180, 182, 185, 188, 190, 192, 193, 194, 195, 197, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 216, 218, 223, 225, 226, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 264, 267, 268, 269, 270, 271, 272, 275, 276, 277, 278, 279, 280, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 298, 299, 300, 302, 304, 306, 307, 309, 310, 311, 313, 314, 315, 318, 319, 322, 324, 326, 327, 328, 329, 331, 332, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 395, 397, 400, 401, 402, 403, 404, 405, 406, 407, 408, 411, 412, 413, 414, 415, 418, 419], "contigu": [2, 3, 8, 28, 31, 38, 71, 83, 86, 87, 122, 126, 144, 145, 151, 152, 223, 402, 403, 412, 413, 414, 416, 418, 419], "tensorstorag": [2, 56, 64, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 98, 99, 112, 115, 407, 416], "lazymemmapstorag": [2, 35, 51, 56, 62, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 99, 101, 106, 107, 168, 169, 400, 401, 403, 407, 412, 415, 416], "citizen": 2, "pytre": [2, 51, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 95, 101, 115], "tupl": [2, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, 65, 66, 69, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 91, 95, 99, 101, 106, 110, 112, 120, 121, 122, 125, 126, 127, 144, 145, 151, 152, 186, 188, 218, 231, 235, 241, 242, 249, 252, 253, 254, 261, 264, 268, 271, 272, 288, 289, 293, 294, 299, 306, 307, 309, 310, 314, 315, 317, 322, 324, 326, 327, 328, 329, 331, 332, 340, 341, 342, 343, 371, 373, 375, 384, 416], "dictionari": [2, 14, 15, 16, 17, 18, 19, 20, 21, 27, 31, 38, 45, 50, 52, 54, 55, 57, 59, 64, 70, 99, 104, 106, 107, 122, 125, 126, 127, 136, 137, 144, 145, 151, 152, 155, 156, 206, 210, 218, 292, 296, 309, 329, 331, 373, 389, 390, 391, 397, 401, 402, 404, 406, 412, 414, 419], "nest": [2, 3, 23, 27, 31, 32, 35, 37, 38, 39, 45, 46, 50, 52, 54, 55, 56, 57, 59, 61, 62, 63, 64, 76, 93, 94, 97, 101, 114, 122, 125, 126, 127, 144, 145, 151, 152, 169, 204, 207, 218, 226, 291, 340, 341, 342, 343, 344, 358, 397, 401, 402, 413, 414, 416, 418], "construct": [2, 3, 5, 23, 27, 38, 45, 51, 54, 55, 56, 59, 64, 65, 66, 69, 80, 101, 122, 125, 126, 144, 145, 146, 151, 152, 175, 178, 218, 220, 249, 253, 274, 296, 377, 395, 401, 402, 403, 405, 412, 414, 416, 419], "ram": [2, 125, 127, 408, 416, 419], "prealloc": [2, 3, 144, 151, 414], "ve": [2, 58, 400, 403, 409], "been": [2, 3, 5, 7, 8, 18, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 58, 60, 61, 69, 71, 72, 73, 74, 75, 101, 105, 122, 126, 130, 136, 137, 144, 145, 151, 152, 186, 204, 205, 209, 228, 246, 247, 251, 261, 270, 291, 306, 324, 326, 328, 400, 401, 402, 403, 411, 412, 413, 414, 416, 419], "here": [2, 3, 4, 7, 8, 9, 10, 14, 15, 87, 88, 112, 120, 121, 122, 126, 130, 144, 145, 146, 147, 151, 152, 169, 261, 367, 395, 396, 397, 400, 401, 402, 403, 404, 405, 407, 409, 412, 413, 414, 416, 418, 419], "start": [2, 3, 4, 5, 14, 21, 24, 69, 70, 80, 88, 99, 106, 107, 123, 126, 135, 144, 151, 174, 225, 372, 399, 400, 401, 410, 413, 414, 416, 417, 419], "replay_buff": [2, 8, 14, 15, 16, 51, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 374, 387, 400, 401, 402, 407, 412, 413, 416], "import": [2, 3, 4, 6, 10, 11, 12, 14, 15, 16, 17, 21, 22, 23, 35, 45, 50, 51, 52, 53, 54, 56, 57, 58, 62, 64, 65, 66, 67, 70, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 94, 98, 99, 101, 106, 107, 112, 114, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 131, 132, 134, 136, 137, 138, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 157, 158, 161, 162, 163, 165, 166, 168, 169, 172, 179, 180, 185, 186, 188, 190, 192, 194, 195, 196, 197, 200, 201, 202, 204, 205, 206, 207, 209, 214, 216, 218, 219, 223, 225, 226, 230, 231, 235, 236, 237, 238, 241, 242, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 256, 259, 260, 261, 264, 269, 270, 271, 272, 280, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 298, 299, 300, 303, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 322, 324, 326, 327, 328, 329, 331, 332, 338, 340, 341, 342, 343, 358, 360, 370, 373, 387, 395, 396, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 418, 419], "rb": [2, 35, 51, 56, 62, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 98, 99, 101, 106, 107, 112, 169, 197, 218, 401, 403, 407, 409, 413, 415, 416, 418], "10": [2, 3, 7, 22, 23, 25, 26, 27, 30, 34, 41, 45, 51, 56, 58, 64, 65, 66, 67, 70, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 94, 98, 101, 106, 107, 112, 114, 118, 119, 122, 123, 126, 131, 132, 138, 144, 145, 146, 147, 149, 150, 151, 152, 155, 156, 162, 163, 166, 168, 169, 205, 207, 208, 218, 230, 231, 234, 235, 237, 239, 241, 245, 246, 247, 248, 249, 251, 252, 253, 256, 268, 269, 270, 281, 292, 299, 303, 307, 311, 313, 320, 326, 327, 328, 332, 338, 340, 341, 342, 343, 346, 360, 368, 397, 400, 401, 402, 403, 404, 405, 409, 412, 413, 414, 416, 418, 419], "add": [2, 3, 4, 6, 21, 27, 38, 45, 51, 54, 55, 56, 59, 64, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 92, 98, 101, 102, 112, 113, 116, 117, 122, 126, 144, 145, 151, 152, 169, 186, 210, 218, 249, 253, 262, 290, 306, 372, 402, 403, 404, 405, 406, 407, 408, 409, 412, 413, 414, 416, 418], "string": [2, 18, 19, 20, 27, 38, 45, 53, 54, 55, 59, 64, 70, 89, 122, 126, 136, 142, 144, 145, 151, 152, 161, 192, 204, 214, 218, 249, 253, 288, 291, 292, 293, 305, 359, 376, 396, 400, 402, 403, 416], "element": [2, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 41, 43, 51, 56, 65, 66, 69, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 94, 95, 98, 99, 101, 106, 107, 112, 114, 141, 144, 151, 162, 169, 193, 202, 205, 206, 227, 228, 232, 233, 247, 248, 251, 283, 288, 291, 295, 296, 300, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 320, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 368, 396, 400, 402, 405, 407, 416, 419], "30": [2, 3, 56, 64, 84, 165, 187, 273, 274, 358, 362, 399, 401, 402, 407, 412, 413, 414, 416, 417], "none": [2, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 97, 98, 99, 101, 104, 106, 107, 108, 110, 112, 114, 122, 123, 125, 126, 135, 136, 137, 138, 142, 143, 144, 145, 146, 147, 151, 152, 153, 154, 155, 156, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 182, 184, 186, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 204, 205, 206, 207, 208, 209, 210, 212, 214, 216, 217, 218, 220, 221, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 278, 280, 281, 283, 284, 285, 286, 287, 288, 289, 292, 293, 294, 295, 296, 298, 299, 300, 303, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 371, 372, 373, 374, 375, 376, 377, 381, 382, 383, 387, 389, 390, 391, 395, 397, 400, 401, 403, 404, 405, 406, 407, 408, 411, 414, 416, 418, 419], "int": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 98, 99, 100, 101, 102, 104, 106, 107, 108, 112, 113, 114, 116, 118, 119, 120, 121, 122, 125, 126, 127, 128, 131, 132, 136, 137, 138, 139, 140, 144, 145, 146, 147, 148, 151, 152, 155, 156, 162, 164, 165, 166, 168, 169, 170, 171, 173, 174, 177, 182, 183, 187, 188, 190, 192, 193, 196, 203, 204, 207, 210, 211, 212, 214, 218, 220, 223, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 254, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 280, 281, 287, 288, 289, 291, 292, 294, 295, 296, 306, 307, 308, 315, 317, 318, 323, 324, 325, 326, 327, 331, 332, 340, 342, 343, 345, 346, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 362, 368, 369, 370, 373, 374, 377, 379, 385, 389, 390, 391, 414, 416], "entri": [2, 3, 14, 15, 17, 23, 27, 31, 32, 35, 38, 39, 45, 50, 52, 53, 54, 55, 57, 59, 61, 62, 64, 70, 77, 82, 83, 84, 85, 87, 88, 106, 107, 120, 121, 122, 125, 126, 127, 128, 136, 137, 144, 145, 148, 151, 152, 155, 156, 165, 169, 171, 172, 174, 175, 176, 178, 179, 182, 185, 188, 190, 192, 195, 197, 200, 202, 204, 205, 206, 211, 214, 216, 218, 225, 226, 249, 257, 258, 287, 288, 291, 293, 294, 307, 309, 329, 340, 341, 342, 343, 395, 400, 402, 403, 404, 405, 406, 408, 412, 413, 414, 415, 416, 419], "onto": [2, 8, 50, 52, 57, 176, 223, 227, 228, 269, 270, 283, 288, 289, 292, 293, 294, 295, 296, 403, 414], "__setitem__": 2, "indic": [2, 3, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 56, 57, 58, 60, 61, 62, 65, 66, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 98, 99, 101, 102, 104, 105, 106, 107, 112, 113, 116, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128, 131, 132, 139, 140, 144, 145, 148, 151, 152, 155, 156, 162, 169, 170, 204, 205, 206, 207, 210, 218, 226, 232, 233, 254, 257, 258, 260, 269, 270, 291, 293, 294, 302, 306, 307, 309, 310, 311, 313, 315, 316, 317, 322, 324, 326, 327, 328, 329, 331, 332, 338, 381, 391, 394, 397, 402, 403, 407, 408, 409, 414, 416, 419], "without": [2, 3, 7, 9, 14, 15, 16, 27, 38, 45, 50, 52, 54, 55, 57, 58, 59, 64, 69, 80, 82, 86, 106, 107, 122, 126, 144, 145, 151, 152, 155, 156, 163, 165, 175, 178, 208, 218, 247, 248, 251, 252, 285, 286, 306, 307, 309, 310, 311, 313, 314, 315, 322, 326, 327, 328, 329, 331, 332, 339, 340, 341, 342, 343, 344, 387, 394, 395, 400, 401, 402, 404, 405, 406, 407, 412, 413, 414, 416, 419], "updat": [2, 3, 4, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 33, 38, 45, 50, 51, 52, 54, 55, 57, 58, 59, 64, 65, 98, 99, 122, 126, 138, 144, 145, 146, 147, 151, 152, 153, 154, 163, 165, 166, 175, 177, 178, 194, 204, 205, 210, 213, 216, 218, 226, 227, 228, 230, 245, 246, 247, 249, 253, 256, 261, 269, 270, 292, 293, 294, 295, 296, 306, 307, 308, 309, 310, 311, 313, 315, 316, 317, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 338, 340, 341, 342, 343, 344, 373, 377, 379, 382, 383, 386, 387, 397, 401, 402, 403, 406, 409, 412, 413, 414, 416, 418, 419], "length": [2, 20, 25, 26, 27, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 52, 53, 54, 58, 60, 61, 67, 69, 70, 71, 72, 73, 74, 75, 80, 86, 89, 99, 106, 107, 110, 122, 126, 131, 132, 144, 145, 151, 152, 162, 193, 216, 230, 232, 233, 235, 237, 239, 247, 251, 254, 256, 259, 260, 283, 295, 300, 368, 374, 400, 402, 403, 407, 409, 414, 416, 419], "cursor": [2, 51, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101], "afterward": [2, 27, 38, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 243, 244, 245, 247, 248, 249, 251, 252, 253, 254, 261, 264, 265, 266, 268, 269, 270, 273, 274, 276, 281, 287, 289, 291, 294, 299, 302, 412, 419], "tell": [2, 3, 4, 7, 146, 147, 400, 403, 407, 412, 413], "our": [2, 3, 7, 8, 11, 18, 56, 169, 360, 395, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 415, 416, 418], "far": [2, 51, 56, 58, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 250, 278, 279, 409, 414, 419], "restrict": [2, 3, 401, 415, 416, 419], "empti": [2, 3, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 64, 65, 66, 69, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 95, 101, 122, 126, 141, 144, 145, 151, 152, 175, 178, 192, 194, 207, 210, 212, 214, 218, 223, 364, 400, 414], "64": [2, 3, 50, 52, 57, 80, 86, 101, 169, 196, 235, 236, 244, 249, 253, 260, 261, 271, 338, 400, 401, 402, 403, 405, 409, 411, 413, 414, 415, 416, 418, 419], "dtype": [2, 3, 14, 15, 16, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 94, 98, 99, 106, 107, 114, 118, 119, 120, 121, 122, 125, 126, 127, 131, 132, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 155, 156, 162, 163, 166, 167, 173, 175, 176, 177, 178, 179, 180, 186, 188, 190, 192, 194, 195, 197, 201, 204, 206, 208, 209, 210, 212, 214, 218, 220, 223, 225, 226, 230, 231, 241, 242, 247, 248, 249, 251, 252, 253, 256, 262, 263, 269, 270, 271, 272, 280, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 298, 300, 303, 306, 307, 309, 310, 311, 313, 314, 315, 322, 326, 327, 328, 329, 331, 332, 338, 340, 341, 342, 343, 346, 395, 402, 403, 404, 405, 406, 407, 408, 411, 412, 413, 414, 415, 416, 418, 419], "unit8": 2, "img": 2, "randint": [2, 70, 101, 208, 416], "255": [2, 101, 208, 414, 416], "uint8": [2, 3, 31, 50, 52, 57, 80, 86, 120, 121, 136, 137, 179, 190, 208, 401, 408, 415, 416, 418, 419], "next": [2, 3, 4, 8, 14, 15, 16, 23, 31, 32, 35, 37, 39, 45, 51, 56, 58, 61, 62, 64, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 97, 99, 101, 106, 107, 112, 118, 119, 120, 121, 122, 123, 125, 126, 127, 131, 132, 136, 137, 138, 142, 143, 144, 145, 149, 150, 151, 152, 153, 155, 156, 162, 165, 166, 168, 169, 175, 178, 179, 180, 185, 186, 190, 194, 195, 197, 200, 201, 204, 206, 215, 216, 218, 223, 225, 230, 248, 249, 252, 253, 256, 274, 291, 301, 303, 306, 307, 309, 310, 311, 313, 314, 315, 316, 322, 326, 327, 328, 329, 331, 332, 338, 339, 340, 341, 342, 343, 344, 360, 371, 373, 375, 401, 403, 405, 408, 409, 411, 414, 415, 418, 419], "ask": [2, 8, 80, 86, 99, 106, 107, 360, 402, 403, 404, 405, 412, 413, 415, 419], "automat": [2, 3, 5, 28, 69, 71, 88, 93, 94, 101, 114, 122, 125, 126, 127, 144, 145, 146, 147, 151, 152, 165, 175, 178, 188, 206, 215, 232, 249, 253, 283, 291, 292, 358, 395, 400, 402, 404, 405, 412, 413, 414, 416, 418], "hand": [2, 3, 7, 21, 31, 412, 413, 414], "look": [2, 3, 5, 7, 8, 27, 38, 45, 54, 55, 59, 64, 99, 122, 126, 135, 144, 145, 146, 147, 151, 152, 192, 193, 212, 218, 292, 296, 297, 298, 396, 402, 403, 404, 405, 406, 407, 408, 409, 412, 413, 414, 415, 416, 418, 419], "assum": [2, 3, 6, 14, 15, 16, 31, 58, 59, 65, 66, 82, 84, 86, 87, 88, 90, 91, 97, 106, 122, 126, 144, 145, 151, 152, 168, 171, 174, 182, 192, 193, 200, 206, 210, 212, 214, 223, 231, 249, 253, 281, 299, 311, 316, 329, 338, 349, 350, 351, 352, 354, 355, 356, 357, 360, 400, 402, 403, 411, 414], "lead": [2, 3, 4, 8, 10, 12, 23, 31, 32, 39, 45, 51, 56, 61, 65, 66, 82, 105, 120, 121, 122, 125, 127, 128, 206, 250, 271, 278, 279, 400, 403, 412, 413, 414, 416, 418], "leav": [2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 52, 56, 57, 60, 61, 69, 71, 72, 73, 74, 75, 122, 220, 226, 400, 407, 416], "match": [2, 3, 6, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 53, 54, 55, 56, 59, 60, 61, 64, 65, 66, 69, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 101, 110, 120, 121, 122, 123, 125, 126, 127, 128, 144, 145, 151, 152, 162, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 182, 184, 185, 186, 188, 190, 194, 195, 196, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 218, 232, 233, 240, 249, 253, 254, 259, 260, 277, 283, 287, 288, 292, 293, 295, 296, 299, 300, 307, 309, 315, 323, 325, 327, 329, 374, 379, 395, 400, 402, 411, 413, 414, 416, 419], "don": [2, 3, 4, 6, 7, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75, 169, 401, 402, 407, 416, 418, 419], "throw": [2, 27, 38, 45, 50, 52, 54, 55, 57, 59, 64, 122, 126, 144, 145, 151, 152, 218, 419], "rb_td": 2, "batch_siz": [2, 3, 8, 14, 15, 16, 23, 31, 35, 50, 51, 52, 53, 54, 56, 57, 58, 62, 64, 65, 66, 67, 70, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 94, 98, 99, 100, 101, 106, 107, 112, 114, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 162, 166, 168, 169, 173, 175, 178, 179, 180, 190, 194, 195, 197, 201, 204, 206, 209, 210, 218, 219, 225, 226, 230, 231, 239, 241, 242, 245, 246, 249, 253, 256, 269, 270, 271, 272, 280, 281, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 298, 299, 300, 306, 307, 309, 310, 311, 313, 314, 315, 322, 326, 327, 328, 329, 331, 332, 338, 360, 368, 374, 395, 400, 401, 402, 403, 404, 405, 406, 407, 408, 411, 412, 413, 414, 415, 416, 418, 419], "max": [2, 23, 52, 65, 70, 89, 98, 99, 112, 177, 207, 269, 270, 279, 307, 308, 309, 315, 325, 327, 329, 400, 402, 403, 409], "label": [2, 52, 53, 58, 70, 400, 412, 416], "100": [2, 14, 15, 16, 17, 27, 38, 45, 51, 54, 55, 56, 59, 64, 65, 66, 67, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 94, 101, 112, 118, 119, 122, 126, 131, 132, 144, 145, 151, 152, 172, 179, 188, 197, 202, 204, 218, 259, 289, 291, 360, 369, 387, 401, 402, 403, 404, 406, 409, 411, 412, 413, 414, 415, 416, 418, 419], "rb_pytre": 2, "randn": [2, 51, 54, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 94, 99, 101, 106, 107, 114, 168, 188, 223, 231, 234, 235, 239, 241, 242, 247, 248, 251, 252, 257, 258, 259, 264, 267, 268, 272, 283, 284, 285, 286, 287, 288, 292, 293, 295, 298, 299, 300, 306, 307, 309, 310, 311, 313, 314, 315, 322, 324, 326, 327, 328, 329, 331, 332, 340, 341, 342, 343, 376, 395, 416, 418, 419], "c": [2, 3, 6, 7, 31, 50, 52, 54, 56, 57, 64, 65, 66, 85, 188, 208, 251, 252, 401, 416], "zero": [2, 3, 4, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 94, 101, 106, 107, 112, 114, 122, 126, 144, 145, 151, 152, 166, 168, 170, 175, 177, 178, 188, 194, 197, 218, 223, 225, 229, 230, 236, 237, 238, 244, 245, 246, 247, 248, 249, 251, 252, 253, 257, 258, 260, 261, 269, 270, 271, 280, 294, 302, 306, 307, 309, 310, 311, 313, 314, 315, 322, 326, 327, 328, 329, 331, 332, 338, 340, 341, 342, 343, 346, 403, 416, 418], "assert": [2, 3, 6, 16, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 54, 56, 57, 59, 60, 61, 64, 65, 66, 69, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 112, 126, 129, 144, 151, 161, 162, 166, 169, 172, 175, 178, 186, 195, 202, 216, 220, 223, 231, 260, 264, 281, 340, 341, 342, 343, 368, 376, 407, 411, 416, 419], "len": [2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 51, 56, 60, 61, 65, 66, 69, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 94, 101, 114, 190, 232, 233, 254, 260, 400, 407, 409, 412, 414, 415, 416, 418], "ambigu": [2, 51, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101], "signatur": [2, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 45, 51, 54, 55, 56, 59, 64, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 110, 122, 126, 144, 145, 151, 152, 166, 173, 192, 206, 209, 210, 212, 214, 218, 295, 396, 400, 404, 414], "deal": [2, 3, 51, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 324, 396, 400, 402, 413, 416], "interpret": [2, 3, 51, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 401], "put": [2, 51, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 126, 136, 137, 152, 155, 156, 216, 367, 391, 395, 401, 402, 403, 404, 412, 414], "solv": [2, 4, 9, 10, 51, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 394, 400, 401, 402, 407, 409, 412, 413, 414, 416], "clear": [2, 3, 11, 27, 31, 32, 38, 39, 40, 45, 51, 54, 55, 56, 59, 60, 61, 64, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 122, 126, 130, 144, 145, 151, 152, 218, 369, 404, 407], "cut": [2, 51, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101], "distinct": [2, 3, 51, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 166, 406, 411], "view": [2, 3, 8, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 54, 55, 56, 59, 60, 61, 64, 65, 66, 69, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 122, 126, 144, 145, 151, 152, 163, 218, 242, 247, 251, 254, 404, 414, 416, 418, 419], "through": [2, 3, 4, 5, 8, 12, 14, 15, 16, 17, 18, 20, 21, 31, 32, 39, 51, 55, 56, 59, 61, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 118, 119, 122, 125, 126, 127, 130, 131, 132, 135, 144, 145, 146, 147, 151, 152, 165, 175, 178, 193, 231, 254, 271, 291, 292, 296, 297, 298, 302, 324, 340, 341, 342, 343, 395, 396, 400, 401, 402, 404, 406, 411, 412, 413, 414, 415, 416, 419], "collate_fn": [2, 51, 56, 64, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 416, 418], "__init__": [2, 3, 7, 122, 138, 153, 161, 163, 166, 175, 178, 194, 230, 242, 247, 251, 256, 300, 307, 309, 310, 315, 322, 327, 329, 331, 332, 397, 414, 419], "major": 2, "worri": [2, 67], "even": [2, 3, 4, 8, 11, 15, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 64, 69, 71, 72, 73, 74, 75, 93, 94, 95, 99, 106, 108, 110, 114, 122, 123, 126, 130, 144, 145, 151, 152, 165, 226, 400, 402, 404, 412, 413, 414, 419], "though": [2, 4, 11, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75, 122, 126, 144, 145, 151, 152, 254, 402, 412, 413], "too": [2, 7, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 53, 54, 58, 60, 61, 64, 69, 71, 72, 73, 74, 75, 122, 126, 144, 145, 151, 152, 187, 206, 250, 278, 279, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 322, 323, 324, 326, 327, 328, 329, 331, 332, 338, 340, 341, 342, 343, 401, 405, 408, 414, 416, 419], "latter": [2, 18, 19, 20, 27, 38, 45, 54, 55, 59, 64, 82, 122, 126, 144, 145, 151, 152, 218, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 243, 244, 245, 247, 248, 249, 251, 252, 253, 254, 261, 264, 265, 266, 268, 269, 270, 273, 274, 276, 281, 287, 289, 291, 294, 299, 302, 326, 389, 390], "inv": [2, 3, 172, 177, 180, 190, 197, 202, 211, 414], "obvious": 2, "ignor": [2, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 53, 54, 55, 59, 60, 61, 64, 67, 69, 71, 72, 73, 74, 75, 91, 122, 126, 144, 145, 151, 152, 177, 180, 201, 208, 218, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 243, 244, 245, 247, 248, 249, 251, 252, 253, 254, 257, 258, 261, 264, 265, 266, 268, 269, 270, 273, 274, 276, 281, 287, 289, 291, 294, 299, 302, 340, 416], "multithread": [2, 3, 51, 56, 65, 66, 80, 82, 83, 84, 85, 86, 87, 88, 89, 139, 140, 407, 416], "thread": [2, 14, 15, 17, 50, 52, 57, 118, 119, 131, 132, 144, 151], "prefetch": [2, 51, 56, 65, 66, 80, 82, 83, 84, 85, 86, 87, 88, 89, 400, 401, 403, 416], "advis": [2, 11, 83, 408, 419], "benchmark": [2, 3, 9, 118, 119, 131, 132], "techniqu": [2, 8, 144, 151, 401, 407, 416], "real": [2, 5, 86, 296, 396, 403, 414], "life": [2, 179], "adopt": [2, 3, 5, 400, 419], "throughput": [2, 9, 132, 400], "constant": [2, 11, 33, 169, 188, 205, 397, 400, 402, 403, 419], "throughout": [2, 3, 306, 307, 308, 314, 315, 316, 317, 318, 319, 322, 323, 324, 326, 327, 328, 329, 332, 338, 402, 412, 419], "further": [2, 3, 5, 24, 400, 402, 404], "refin": [2, 86, 306, 307, 309, 310, 311, 313, 315, 316, 317, 322, 324, 326, 327, 328, 329, 331, 332, 338], "coupl": [2, 403, 405, 406, 414, 416], "get": [2, 3, 4, 6, 7, 8, 9, 31, 32, 39, 50, 51, 52, 54, 55, 56, 57, 59, 61, 64, 80, 82, 86, 93, 94, 99, 106, 107, 108, 110, 112, 114, 122, 123, 126, 144, 145, 151, 152, 163, 168, 170, 175, 177, 178, 186, 188, 193, 205, 206, 208, 210, 216, 245, 246, 283, 292, 293, 296, 303, 340, 341, 342, 343, 344, 360, 364, 395, 399, 400, 401, 402, 403, 410, 412, 413, 414, 416, 417, 418, 419], "first_elt": 2, "128": [2, 80, 82, 86, 107, 118, 119, 131, 132, 236, 239, 401, 403, 409, 412, 414, 415, 416], "wa": [2, 3, 5, 7, 51, 54, 56, 64, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 99, 101, 105, 106, 122, 126, 144, 145, 151, 152, 210, 220, 226, 251, 306, 308, 321, 323, 326, 328, 330, 346, 396, 401, 402, 404, 405, 411, 412, 416, 418], "print": [2, 3, 6, 7, 14, 15, 16, 21, 22, 23, 25, 27, 31, 32, 35, 38, 39, 45, 50, 51, 52, 53, 54, 55, 56, 57, 59, 61, 62, 64, 65, 66, 70, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 98, 99, 101, 106, 107, 112, 118, 119, 120, 121, 122, 123, 125, 126, 127, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 155, 156, 158, 161, 162, 165, 166, 169, 170, 175, 176, 177, 178, 185, 188, 194, 195, 197, 200, 204, 206, 207, 208, 216, 218, 223, 225, 226, 232, 233, 235, 236, 237, 238, 239, 242, 244, 245, 246, 249, 253, 254, 257, 258, 259, 260, 264, 267, 269, 270, 272, 283, 284, 285, 286, 287, 288, 291, 292, 293, 295, 298, 300, 303, 324, 358, 387, 395, 397, 401, 402, 403, 404, 405, 406, 407, 408, 411, 412, 413, 414, 415, 416, 418, 419], "influenti": 2, "latenc": 2, "especi": [2, 3, 7, 8, 170], "larger": [2, 4, 64, 249, 253, 314, 322, 418], "volum": 2, "due": [2, 3, 5, 23, 406, 415, 416, 419], "memorymappedtensor": [2, 35, 50, 52, 62, 70, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 362, 407, 415], "well": [2, 3, 8, 21, 23, 27, 38, 45, 51, 53, 54, 55, 56, 59, 64, 65, 66, 69, 99, 104, 108, 115, 122, 126, 144, 145, 151, 152, 210, 218, 235, 251, 273, 274, 324, 331, 344, 400, 401, 403, 404, 405, 406, 408, 415, 416, 418, 419], "specifi": [2, 12, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 54, 55, 56, 59, 60, 61, 64, 65, 66, 69, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 122, 126, 136, 137, 144, 145, 146, 147, 151, 152, 153, 154, 155, 156, 174, 175, 176, 178, 200, 203, 205, 211, 218, 230, 251, 295, 296, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 367, 395, 400, 402, 403, 407, 412], "file": [2, 6, 7, 8, 50, 52, 57, 80, 82, 83, 84, 86, 87, 88, 91, 155, 359, 360, 362, 397, 399, 401, 412, 416, 417, 419], "locat": [2, 7, 50, 52, 57, 70, 80, 81, 82, 83, 84, 85, 86, 87, 88, 122, 126, 144, 145, 151, 152, 174, 179, 188, 199, 250, 264, 278, 279, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 400, 401, 402, 408, 412, 413, 416], "improv": [2, 4, 11, 183, 306, 396, 412, 413, 416], "failur": [2, 4], "recoveri": 2, "were": [2, 7, 14, 15, 16, 17, 18, 19, 20, 21, 144, 151, 402, 412, 416], "found": [2, 3, 6, 7, 10, 14, 15, 16, 17, 21, 23, 27, 31, 38, 45, 50, 52, 54, 55, 57, 59, 64, 70, 80, 82, 83, 84, 86, 87, 88, 106, 107, 120, 121, 122, 125, 126, 127, 130, 144, 145, 151, 152, 163, 169, 197, 200, 207, 216, 218, 226, 245, 246, 259, 260, 292, 296, 323, 324, 326, 400, 401, 403, 404, 406, 408, 414, 416], "rough": 2, "1x": 2, "83x": 2, "44x": 2, "long": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 53, 60, 61, 69, 71, 72, 73, 74, 75, 93, 99, 142, 143, 177, 229, 251, 252, 314, 403, 407, 416], "sharabl": [2, 144, 151], "collabor": [2, 86], "rather": [2, 4, 110, 142, 143, 195, 400, 401, 402, 404, 406, 412, 413, 416], "incur": [2, 118, 119, 131, 132], "transmiss": 2, "overhead": [2, 118, 119, 131, 132, 144, 151], "content": [2, 8, 16, 31, 32, 39, 50, 51, 52, 56, 57, 61, 65, 66, 105, 122, 125, 126, 127, 139, 144, 145, 151, 152, 194, 232, 233, 254, 259, 260, 292, 324, 402, 414, 418], "map": [2, 3, 8, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 93, 97, 98, 99, 122, 126, 135, 136, 137, 144, 145, 146, 147, 149, 150, 151, 152, 155, 156, 157, 162, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 184, 185, 186, 188, 190, 194, 195, 196, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 211, 212, 213, 215, 216, 218, 223, 242, 264, 283, 284, 285, 286, 288, 292, 293, 295, 296, 298, 299, 300, 301, 309, 329, 338, 373, 393, 395, 396, 400, 401, 402, 403, 405, 406, 415, 418], "writer": [2, 51, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 92, 99, 101, 102, 106, 112, 113, 117, 402, 416], "tensordictroundrobinwrit": [2, 101], "goe": [2, 4, 146, 147, 400, 402, 412, 413, 419], "prioritizedsampl": [2, 51, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 99, 101, 311, 316, 338, 400, 416], "access": [2, 3, 7, 8, 11, 27, 38, 45, 51, 54, 55, 59, 64, 83, 85, 122, 126, 144, 145, 151, 152, 192, 212, 218, 391, 394, 400, 404, 412, 413, 414, 416], "tensordictreplaybuff": [2, 51, 56, 65, 80, 81, 82, 83, 84, 85, 86, 87, 88, 98, 99, 101, 106, 107, 112, 168, 169, 374, 387, 393, 400, 401, 403, 416], "mp": [2, 18, 19, 20, 80, 81, 82, 83, 84, 85, 86, 87, 88, 123, 216], "def": [2, 3, 12, 22, 27, 38, 45, 51, 54, 55, 56, 59, 64, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 122, 123, 126, 138, 144, 145, 151, 152, 161, 163, 165, 166, 175, 178, 194, 210, 218, 230, 242, 247, 248, 251, 252, 256, 261, 291, 292, 300, 307, 309, 310, 315, 322, 324, 327, 329, 331, 332, 358, 397, 400, 401, 411, 412, 413, 414, 416, 418, 419], "td": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 31, 35, 50, 51, 52, 54, 56, 57, 62, 64, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 101, 112, 118, 119, 120, 121, 122, 125, 126, 127, 131, 132, 133, 134, 142, 143, 144, 145, 151, 152, 153, 154, 163, 166, 168, 170, 175, 176, 177, 178, 185, 186, 188, 197, 200, 206, 208, 210, 216, 219, 225, 230, 231, 241, 242, 245, 246, 249, 253, 255, 256, 269, 270, 271, 272, 280, 283, 284, 285, 286, 287, 288, 292, 293, 295, 298, 300, 338, 341, 342, 343, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 359, 368, 376, 395, 396, 400, 403, 413, 414, 418, 419], "__name__": [2, 3, 14, 15, 22, 123, 358, 401, 418], "__main__": [2, 3, 14, 15, 22, 123, 358, 418], "21": [2, 86, 87, 107, 144, 146, 147, 151, 400, 401, 402, 411, 412, 414], "proc": 2, "target": [2, 4, 8, 21, 24, 27, 38, 45, 54, 55, 59, 64, 122, 123, 126, 144, 145, 151, 152, 205, 209, 218, 295, 296, 306, 307, 308, 309, 310, 311, 313, 315, 316, 319, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 338, 339, 340, 341, 342, 343, 344, 380, 386, 387, 396, 397, 403, 409, 412, 414], "arg": [2, 14, 15, 16, 17, 18, 19, 20, 21, 26, 27, 28, 29, 31, 32, 34, 38, 39, 40, 42, 44, 45, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 61, 63, 64, 65, 66, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 94, 95, 99, 101, 106, 107, 108, 110, 114, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 160, 163, 164, 173, 192, 194, 203, 206, 209, 210, 211, 213, 214, 218, 227, 228, 230, 231, 232, 233, 241, 245, 246, 249, 253, 254, 255, 256, 269, 270, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 338, 340, 341, 342, 343, 344, 367, 370, 374, 377, 391, 401], "join": [2, 123, 393, 401, 402, 412], "now": [2, 3, 7, 51, 56, 65, 66, 101, 142, 143, 144, 169, 260, 400, 401, 402, 403, 404, 405, 406, 407, 408, 411, 412, 413, 415, 416, 419], "20": [2, 64, 70, 87, 106, 107, 112, 122, 126, 130, 142, 143, 144, 145, 151, 152, 205, 218, 244, 247, 248, 251, 252, 287, 368, 400, 401, 402, 403, 412, 413, 414, 416, 418, 419], "_data": [2, 414], "It": [2, 3, 4, 7, 23, 27, 38, 45, 53, 54, 55, 58, 59, 64, 65, 67, 70, 82, 88, 101, 104, 112, 117, 122, 126, 128, 138, 139, 144, 145, 146, 147, 151, 152, 155, 156, 166, 168, 179, 186, 188, 193, 205, 210, 215, 218, 220, 227, 235, 237, 243, 245, 259, 260, 269, 270, 271, 273, 274, 280, 281, 289, 291, 294, 296, 306, 307, 308, 309, 314, 315, 316, 317, 318, 319, 322, 323, 324, 326, 327, 328, 329, 330, 332, 338, 339, 340, 358, 367, 373, 394, 395, 396, 400, 401, 403, 404, 412, 413, 414, 415, 416, 418, 419], "difficult": [2, 4, 144, 408], "pai": [2, 8, 400, 403], "word": [2, 3, 11, 58, 80, 82, 84, 86, 87, 88, 324, 400, 407, 414, 419], "1m": [2, 80, 86, 380, 400, 402, 403], "doe": [2, 3, 18, 50, 51, 52, 57, 65, 70, 80, 82, 86, 90, 91, 97, 98, 99, 106, 108, 110, 117, 122, 126, 136, 137, 144, 145, 151, 152, 155, 156, 216, 239, 247, 248, 249, 251, 252, 253, 262, 281, 287, 297, 298, 306, 308, 316, 323, 324, 326, 339, 377, 395, 397, 400, 401, 402, 403, 404, 407, 412, 414, 416, 419], "howev": [2, 3, 5, 7, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 169, 200, 205, 210, 218, 306, 308, 309, 323, 326, 328, 329, 395, 400, 401, 403, 406, 414, 416, 419], "capac": [2, 51, 56, 65, 66, 93, 94, 98, 106, 114, 402, 407], "There": [2, 10, 101, 249, 253, 306, 326, 395, 397, 402, 403, 405, 407, 412, 413, 414, 416, 419], "circumv": 2, "account": [2, 93, 94, 114, 125, 127, 152, 165, 169, 257, 258, 395, 401, 403, 416, 419], "save": [2, 3, 8, 27, 38, 45, 50, 51, 52, 54, 55, 56, 57, 59, 62, 64, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 93, 94, 95, 97, 101, 108, 109, 110, 114, 115, 122, 126, 144, 145, 151, 152, 215, 218, 359, 360, 362, 367, 377, 397, 407, 408, 409, 412, 413], "convent": [2, 3, 80, 82, 83, 84, 85, 86, 87, 88, 122, 126, 144, 145, 151, 152, 155, 156, 396, 400, 403, 412, 413, 414], "overridden": [2, 3, 27, 38, 54, 55, 59, 64, 80, 83, 84, 86, 87, 88, 122, 126, 144, 145, 151, 152, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 243, 244, 245, 247, 248, 249, 251, 252, 253, 254, 261, 264, 265, 266, 268, 269, 270, 273, 274, 276, 281, 287, 289, 291, 294, 299, 302, 340, 342, 343, 403, 412], "dim_extend": [2, 51, 56, 65, 66], "obtain": [2, 7, 58, 80, 122, 126, 144, 145, 151, 152, 168, 192, 205, 214, 230, 231, 271, 374, 400, 402, 404, 405, 406, 412, 413], "counterpart": 2, "desir": [2, 3, 11, 27, 30, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 164, 166, 173, 188, 190, 192, 193, 206, 209, 210, 212, 214, 218, 224, 232, 233, 254, 260, 283, 288, 289, 292, 293, 294, 295, 296, 395, 400, 412, 413, 414, 416], "diversifi": 2, "offer": [2, 3, 7, 118, 119, 122, 126, 131, 132, 136, 137, 144, 145, 151, 152, 358, 395, 400, 401, 404, 406, 407, 412, 414, 416, 419], "accomplish": [2, 220, 404], "__especially__": 2, "offlin": [2, 8, 14, 15, 16, 17, 18, 19, 20, 21, 80, 81, 83, 169, 220, 307, 313, 314, 322, 331, 367, 397, 404, 415, 416, 418], "docstr": [2, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218, 404, 405], "extens": [2, 51, 56, 65, 66, 107, 397, 416], "detail": [2, 3, 5, 6, 7, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 54, 55, 59, 60, 61, 64, 69, 71, 72, 73, 74, 75, 122, 126, 144, 145, 146, 147, 151, 152, 208, 210, 218, 242, 247, 251, 261, 289, 306, 316, 324, 326, 394, 397, 401, 407, 411, 416], "note": [2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 45, 51, 54, 55, 56, 59, 64, 65, 66, 122, 126, 144, 145, 151, 152, 175, 178, 216, 218, 226, 247, 249, 251, 253, 269, 270, 292, 296, 316, 401, 405, 411, 412, 413, 419], "happi": 2, "concaten": [2, 8, 14, 15, 21, 41, 43, 86, 169, 170, 188, 209, 251, 254, 298, 400, 401, 405, 412, 413, 414, 416, 419], "schedul": [2, 4, 7, 58, 373, 402, 414], "transformedenv": [2, 3, 11, 45, 122, 123, 126, 144, 145, 151, 152, 162, 163, 166, 169, 172, 173, 175, 178, 179, 180, 182, 185, 186, 187, 188, 190, 194, 195, 196, 197, 200, 201, 202, 204, 205, 206, 207, 209, 216, 218, 249, 253, 291, 360, 400, 401, 402, 403, 404, 408, 409, 411, 412, 413, 414, 415, 416, 418, 419], "stepcount": [2, 45, 122, 126, 136, 137, 144, 145, 151, 152, 155, 156, 209, 218, 231, 400, 401, 402, 403, 404, 409, 412, 413, 418], "gymenv": [2, 3, 5, 11, 14, 15, 16, 17, 21, 22, 35, 45, 62, 64, 112, 122, 123, 126, 128, 144, 145, 151, 152, 162, 165, 166, 169, 172, 173, 179, 185, 186, 188, 190, 195, 196, 197, 200, 202, 205, 206, 207, 209, 210, 216, 218, 231, 249, 253, 291, 358, 360, 387, 393, 395, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 415, 416, 418, 419], "randompolici": [2, 14, 15, 16, 17, 18, 19, 20, 21, 22, 45, 169, 197, 393, 407, 416], "cartpol": [2, 3, 11, 35, 45, 62, 64, 120, 121, 122, 126, 144, 145, 151, 152, 165, 166, 169, 200, 205, 216, 218, 291, 358, 401, 403, 405, 407, 408, 409, 416, 419], "v1": [2, 3, 11, 14, 15, 16, 17, 21, 22, 35, 45, 62, 64, 82, 84, 112, 122, 123, 125, 126, 127, 131, 132, 139, 144, 145, 151, 152, 165, 166, 169, 172, 180, 185, 186, 188, 195, 197, 200, 202, 204, 205, 206, 207, 209, 216, 218, 231, 249, 253, 291, 335, 349, 350, 351, 352, 354, 355, 356, 357, 358, 395, 401, 403, 404, 405, 406, 407, 408, 409, 414, 416, 418, 419], "action_spec": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 45, 118, 119, 122, 126, 131, 132, 138, 144, 145, 146, 147, 151, 152, 162, 163, 166, 169, 175, 178, 186, 194, 197, 219, 230, 242, 256, 272, 274, 283, 288, 292, 293, 307, 309, 311, 313, 327, 329, 331, 332, 387, 395, 400, 401, 402, 403, 405, 406, 407, 409, 411, 412, 413, 414, 415, 416, 418, 419], "8": [2, 3, 6, 7, 45, 56, 64, 80, 81, 82, 83, 84, 85, 86, 87, 88, 98, 99, 106, 107, 118, 119, 120, 121, 122, 126, 142, 143, 144, 145, 151, 152, 153, 162, 165, 205, 232, 233, 235, 236, 244, 254, 284, 285, 286, 292, 295, 298, 322, 399, 400, 401, 403, 407, 412, 413, 414, 415, 416, 417, 418], "traj_kei": [2, 99, 106, 107, 416], "truncated_kei": [2, 99, 106, 107, 197, 204], "strict_length": [2, 80, 86, 99, 106, 107, 360], "i": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 27, 31, 32, 35, 38, 39, 45, 51, 54, 55, 56, 59, 61, 62, 64, 66, 67, 93, 94, 98, 99, 106, 107, 114, 122, 126, 144, 145, 151, 152, 174, 192, 197, 200, 210, 214, 218, 248, 252, 264, 272, 289, 291, 292, 294, 295, 296, 306, 308, 309, 310, 314, 315, 322, 323, 326, 327, 328, 329, 331, 332, 340, 341, 342, 343, 368, 380, 400, 401, 402, 403, 405, 406, 407, 408, 409, 412, 413, 414, 416, 418, 419], "enumer": [2, 14, 15, 16, 21, 27, 35, 38, 45, 54, 55, 56, 59, 62, 64, 66, 107, 122, 126, 144, 145, 151, 152, 218, 333, 396, 400, 401, 402, 403, 409, 412, 416, 418], "break": [2, 5, 14, 15, 16, 21, 27, 38, 45, 54, 55, 56, 59, 64, 66, 80, 83, 84, 86, 87, 88, 89, 99, 106, 107, 112, 122, 126, 144, 145, 151, 152, 166, 169, 197, 216, 218, 249, 253, 278, 360, 401, 407, 409, 416, 418], "step_count": [2, 14, 15, 16, 45, 122, 126, 131, 132, 144, 145, 151, 152, 204, 218, 402, 403, 404, 409, 418], "32": [2, 22, 31, 51, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 107, 149, 150, 155, 156, 232, 233, 234, 235, 236, 238, 239, 244, 254, 259, 260, 265, 266, 268, 271, 280, 338, 358, 400, 401, 402, 403, 405, 406, 414, 415, 416, 418, 419], "33": [2, 27, 31, 38, 45, 54, 55, 59, 64, 101, 122, 126, 144, 145, 151, 152, 218, 232, 233, 254, 401, 413, 414], "34": [2, 232, 233, 254, 400, 401, 414, 416], "35": [2, 232, 233, 254, 401, 403, 414, 415], "36": [2, 401, 414], "37": [2, 168, 401, 403, 414, 415], "38": [2, 7, 401, 402, 403, 414, 415], "39": [2, 84, 131, 132, 400, 401, 413, 414, 415], "40": [2, 64, 131, 132, 399, 400, 401, 402, 412, 413, 414, 415, 416, 417], "41": [2, 401, 414], "11": [2, 10, 23, 64, 70, 93, 94, 98, 107, 114, 123, 162, 208, 218, 230, 256, 400, 401, 402, 403, 413, 414, 415, 416], "12": [2, 10, 64, 87, 93, 94, 107, 114, 131, 132, 144, 149, 150, 151, 218, 400, 401, 402, 403, 412, 414, 416], "13": [2, 5, 12, 64, 106, 107, 148, 215, 218, 400, 401, 412, 414, 415, 416], "14": [2, 6, 12, 64, 80, 81, 82, 83, 84, 85, 86, 87, 88, 106, 107, 122, 126, 144, 145, 151, 152, 188, 218, 399, 400, 401, 402, 408, 412, 414, 416, 417], "15": [2, 23, 80, 81, 82, 83, 84, 85, 86, 87, 88, 107, 122, 126, 144, 145, 151, 152, 218, 269, 270, 287, 317, 401, 402, 412, 414, 416], "16": [2, 3, 27, 38, 45, 54, 55, 59, 64, 87, 99, 107, 118, 119, 122, 126, 131, 132, 144, 145, 151, 152, 169, 218, 399, 400, 401, 403, 412, 413, 414, 415, 416, 417], "17": [2, 11, 87, 107, 126, 144, 162, 218, 400, 401, 402, 403, 414, 415], "could": [2, 3, 4, 6, 23, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75, 401, 402, 408, 412, 413, 415, 419], "sai": [2, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218, 259, 412, 415, 419], "interleav": 2, "cannot": [2, 3, 4, 7, 22, 31, 32, 39, 43, 61, 95, 99, 106, 107, 122, 125, 126, 127, 130, 144, 145, 151, 152, 175, 178, 193, 200, 259, 260, 293, 306, 326, 401, 402, 403, 412, 413, 414], "handl": [2, 3, 21, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 215, 216, 218, 253, 254, 306, 324, 326, 377, 389, 390, 400, 401, 402, 404, 406, 413, 416], "suggest": [2, 338, 400, 413], "serialenv": [2, 3, 122, 126, 144, 145, 152, 206, 218, 231, 291, 393, 418, 419], "squeez": [2, 3, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75, 165, 166, 169, 203, 205, 232, 233, 275, 276, 400, 414, 416], "6": [2, 3, 7, 14, 15, 16, 17, 23, 45, 56, 59, 64, 80, 87, 88, 99, 107, 120, 121, 126, 144, 149, 150, 162, 165, 188, 190, 205, 231, 232, 233, 235, 236, 237, 240, 244, 248, 254, 259, 260, 261, 265, 277, 291, 292, 300, 399, 400, 401, 403, 407, 412, 413, 414, 416, 417, 418, 419], "5": [2, 3, 14, 15, 23, 31, 32, 39, 41, 42, 43, 44, 45, 51, 56, 59, 61, 64, 65, 66, 80, 101, 106, 107, 112, 122, 123, 126, 131, 132, 136, 137, 139, 144, 145, 149, 150, 151, 152, 155, 156, 162, 165, 166, 168, 197, 204, 205, 218, 229, 230, 231, 232, 233, 235, 236, 241, 242, 243, 244, 247, 250, 251, 254, 256, 259, 260, 265, 272, 278, 279, 287, 288, 291, 293, 299, 323, 326, 328, 331, 332, 358, 395, 399, 400, 401, 405, 407, 409, 412, 413, 414, 416, 417, 418, 419], "7": [2, 3, 6, 10, 45, 51, 56, 64, 65, 99, 107, 122, 126, 136, 137, 144, 145, 151, 152, 162, 165, 205, 230, 231, 232, 233, 236, 254, 256, 259, 346, 399, 400, 401, 403, 407, 412, 413, 414, 416, 417, 418], "9": [2, 3, 7, 23, 27, 45, 51, 56, 64, 65, 87, 88, 99, 107, 112, 120, 121, 135, 146, 147, 152, 162, 165, 205, 216, 218, 306, 307, 309, 310, 311, 313, 315, 316, 317, 322, 324, 326, 327, 328, 329, 331, 332, 333, 338, 396, 399, 400, 401, 402, 403, 407, 412, 413, 414, 416, 417], "18": [2, 87, 107, 149, 150, 155, 156, 218, 260, 399, 400, 401, 402, 412, 413, 414, 417], "19": [2, 87, 106, 107, 112, 218, 400, 401, 402, 414, 415], "independ": [2, 14, 15, 16, 17, 18, 19, 20, 21, 83, 144, 151, 209, 211, 260, 306, 326, 396, 397, 400, 401, 413, 416, 418], "congruent": 2, "name": [2, 3, 6, 7, 12, 16, 27, 38, 45, 50, 52, 54, 55, 57, 59, 64, 70, 80, 83, 85, 88, 89, 118, 120, 122, 126, 131, 135, 136, 137, 139, 142, 144, 145, 146, 147, 148, 151, 152, 155, 156, 157, 176, 177, 180, 195, 200, 201, 204, 210, 212, 215, 218, 226, 249, 253, 288, 293, 306, 307, 308, 309, 314, 315, 316, 317, 318, 319, 322, 323, 324, 326, 327, 328, 329, 332, 338, 340, 342, 343, 344, 358, 362, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 397, 400, 401, 402, 403, 406, 408, 412, 413, 414, 419], "randomcroptensordict": [2, 400], "unlik": [2, 25, 105, 126, 136, 137, 155, 156, 229, 291, 316, 326, 360, 395, 401, 405, 407, 418], "stop": [2, 3, 16, 21, 58, 88, 99, 106, 107, 122, 126, 144, 145, 151, 152, 402, 407, 412, 413, 418, 419], "signal": [2, 3, 14, 15, 16, 17, 23, 80, 82, 84, 86, 87, 88, 99, 106, 107, 112, 126, 136, 137, 155, 156, 169, 179, 204, 207, 226, 396, 400, 402, 412, 413, 416, 419], "disk": [2, 3, 50, 51, 52, 56, 57, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 101, 377, 397, 400, 401, 403, 407, 408, 416], "dump": [2, 3, 11, 35, 51, 56, 62, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 91, 93, 94, 95, 101, 108, 110, 114, 358, 359, 360, 408, 409, 412], "load": [2, 6, 7, 14, 15, 16, 17, 27, 35, 38, 45, 50, 51, 52, 54, 55, 56, 57, 58, 59, 62, 64, 65, 66, 70, 80, 81, 82, 83, 84, 85, 86, 87, 88, 91, 93, 94, 95, 101, 108, 109, 110, 114, 115, 121, 122, 126, 144, 145, 151, 152, 153, 161, 216, 218, 391, 397, 400, 402, 416], "json": 2, "metadata": [2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75, 80, 82, 122, 126, 144, 145, 151, 152, 309, 331, 402, 404, 406, 407, 412, 413, 419], "anticip": [2, 175, 178], "compli": [2, 86, 395], "back": [2, 24, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 51, 60, 61, 69, 71, 72, 73, 74, 75, 82, 215, 220, 261, 283, 288, 289, 292, 293, 294, 295, 296, 402, 412, 413, 414, 416], "exact": [2, 3, 23, 144, 251], "statu": [2, 3, 122], "prioriti": [2, 4, 51, 65, 66, 93, 94, 95, 98, 99, 108, 110, 114, 309, 310, 311, 313, 314, 315, 316, 322, 327, 329, 331, 332, 338, 397, 400, 401, 416], "heap": 2, "under": [2, 3, 4, 21, 27, 38, 45, 54, 55, 58, 59, 64, 80, 82, 83, 84, 86, 87, 88, 120, 121, 122, 125, 126, 127, 128, 144, 145, 148, 151, 152, 218, 283, 288, 289, 292, 293, 294, 295, 296, 324, 340, 341, 342, 343, 344, 360, 396, 400, 401, 405, 412, 414, 419], "hood": [2, 21, 80, 122, 126, 144, 145, 151, 152, 414], "naiv": [2, 212, 404], "just": [2, 3, 4, 12, 110, 118, 119, 120, 121, 122, 125, 126, 127, 128, 131, 132, 135, 139, 140, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 165, 172, 226, 260, 368, 395, 397, 400, 401, 402, 403, 404, 405, 407, 412, 413, 414, 416, 418, 419], "public": [2, 85, 109, 192, 214], "serializ": 2, "consum": [2, 105, 107, 291, 401, 402, 407, 413, 416], "much": [2, 8, 14, 15, 17, 51, 65, 86, 98, 99, 144, 151, 323, 326, 402, 404, 408, 412, 413, 414, 416, 419], "duplic": [2, 27, 38, 45, 54, 55, 59, 64, 105, 122, 126, 144, 145, 151, 152, 218, 307, 309, 311, 316, 322, 324, 327, 329, 331, 332, 338], "observ": [2, 3, 8, 14, 15, 16, 17, 21, 24, 35, 45, 62, 64, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 97, 99, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 131, 132, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 159, 162, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 179, 180, 182, 184, 185, 186, 188, 189, 190, 194, 195, 196, 197, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 218, 225, 231, 234, 235, 236, 237, 238, 239, 242, 245, 246, 249, 253, 259, 265, 266, 268, 269, 270, 272, 273, 283, 284, 285, 286, 287, 288, 291, 292, 293, 300, 301, 306, 307, 308, 309, 310, 311, 313, 314, 315, 318, 322, 323, 326, 327, 328, 329, 331, 332, 338, 340, 341, 342, 343, 344, 358, 360, 387, 395, 397, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 416, 418, 419], "plu": [2, 14, 15, 17, 58, 144, 151, 414], "enabl": [2, 7, 8, 82, 93, 94, 105, 114, 166, 249, 253, 269, 270, 291, 358, 360, 373, 402, 404, 412, 413, 414, 416], "three": [2, 25, 26, 30, 34, 41, 42, 43, 44, 49, 54, 89, 309, 395, 397, 402, 404, 405, 412, 413, 414, 416, 419], "flatstoragecheckpoint": 2, "discard": [2, 3, 70, 82, 84, 126, 212, 225, 359, 416, 419], "compress": 2, "At": [2, 245, 255, 401, 402, 403, 407, 411, 414, 415], "correct": [2, 4, 50, 52, 57, 122, 126, 144, 145, 151, 152, 186, 380, 402, 403], "addit": [2, 3, 4, 27, 38, 45, 54, 55, 59, 64, 82, 122, 126, 144, 145, 151, 152, 155, 173, 192, 206, 209, 210, 212, 214, 218, 227, 228, 247, 287, 291, 295, 305, 324, 340, 358, 396, 400, 401, 404, 412, 413, 416], "nestedstoragecheckpoint": 2, "represent": [2, 27, 38, 45, 54, 55, 59, 60, 61, 64, 122, 126, 144, 145, 151, 152, 192, 212, 214, 218, 306, 326, 400, 414, 415, 419], "appar": [2, 3, 370], "h5storagecheckpoint": 2, "h5db": 2, "space": [2, 9, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75, 90, 91, 97, 122, 125, 126, 127, 144, 145, 151, 152, 162, 172, 177, 223, 227, 228, 239, 242, 246, 259, 266, 269, 270, 272, 283, 288, 289, 292, 293, 294, 295, 296, 298, 299, 300, 303, 306, 311, 313, 314, 315, 326, 331, 332, 338, 395, 401, 402, 403, 404, 405, 406, 412, 413, 414, 418, 419], "assumpt": [2, 3, 69, 414, 416], "accur": [2, 7, 82, 88, 401, 414, 416], "truncat": [2, 3, 14, 15, 16, 17, 35, 37, 45, 46, 53, 62, 64, 67, 70, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 97, 99, 106, 107, 120, 121, 122, 125, 126, 127, 136, 137, 144, 145, 146, 147, 151, 152, 153, 155, 156, 162, 179, 180, 187, 194, 197, 204, 210, 218, 226, 249, 253, 279, 291, 346, 400, 402, 403, 404, 405, 407, 408, 411, 412, 415, 416, 418, 419], "marl": [2, 135, 157, 169, 207, 259, 260, 261, 404, 412, 413], "extra": [2, 10, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 169, 216, 218, 225, 367, 395, 402, 403, 416], "fail": [2, 7, 22, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75, 144, 163, 220], "concret": [2, 400, 402], "set_se": [2, 3, 14, 15, 16, 17, 21, 35, 45, 62, 64, 118, 119, 122, 126, 131, 132, 138, 144, 145, 151, 152, 165, 188, 195, 200, 205, 207, 210, 218, 407, 409, 414, 418, 419], "manual_se": [2, 3, 25, 35, 41, 42, 51, 56, 62, 64, 65, 66, 83, 87, 88, 106, 107, 118, 119, 122, 126, 144, 145, 151, 152, 163, 165, 177, 188, 197, 200, 205, 207, 218, 245, 246, 257, 258, 267, 269, 270, 283, 289, 299, 306, 307, 309, 310, 314, 322, 329, 407, 409, 412, 413, 414, 418, 419], "200": [2, 14, 15, 16, 21, 27, 35, 38, 45, 54, 55, 59, 62, 64, 80, 122, 125, 126, 127, 144, 145, 151, 152, 155, 156, 197, 218, 235, 236, 243, 273, 274, 358, 360, 400, 403, 407, 409, 414, 416], "22": [2, 86, 106, 107, 215, 399, 400, 401, 407, 409, 413, 414, 415, 417], "rb_test": 2, "_storag": [2, 415, 416], "max_siz": [2, 51, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 94, 95, 108, 112, 114, 402, 407], "102": [2, 414], "path_to_save_dir": 2, "assert_allclose_td": 2, "altern": [2, 4, 30, 50, 52, 57, 139, 239, 257, 258, 259, 305, 309, 358, 400, 402, 412, 413], "state_dict": [2, 14, 15, 16, 17, 21, 27, 38, 45, 50, 52, 54, 55, 57, 59, 64, 122, 126, 144, 145, 151, 152, 210, 216, 218, 259, 260, 309, 329, 391, 397, 400, 401, 419], "load_state_dict": [2, 14, 15, 16, 17, 21, 27, 38, 45, 50, 52, 54, 55, 57, 59, 64, 122, 126, 144, 145, 151, 152, 210, 216, 218, 309, 329, 397, 400], "drawback": 2, "struggl": 2, "big": [2, 402, 407, 416, 419], "sequenti": [2, 9, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 168, 186, 218, 284, 285, 286, 292, 297, 298, 303, 306, 307, 309, 315, 322, 326, 327, 328, 329, 331, 395, 402, 403, 405, 413, 414, 415, 418, 419], "known": [2, 3, 5, 7, 8, 64, 126, 347, 348, 400, 401, 404], "seamless": [2, 254], "integr": [2, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 173, 192, 206, 209, 210, 212, 214, 218, 238, 249, 253, 256, 295, 395, 404, 405, 407, 412, 413, 414, 415], "indiffer": 2, "particularli": 2, "heavili": [2, 11], "smooth": [2, 229, 400, 401, 406], "essenti": [2, 306, 307, 308, 314, 315, 316, 317, 318, 319, 322, 323, 324, 326, 327, 328, 329, 332, 338, 401, 404, 412, 414, 416], "understand": [2, 3, 8, 400, 401, 404, 405, 412, 413], "purpos": [2, 3, 7, 11, 122, 126, 144, 145, 151, 152, 169, 247, 306, 308, 320, 323, 326, 328, 387, 400, 402, 403, 406, 408, 412, 413, 415, 419], "guid": [2, 11, 146, 147, 149, 150, 205, 394, 400, 413], "explan": [2, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "effect": [2, 3, 27, 31, 38, 45, 51, 54, 55, 56, 59, 64, 65, 66, 80, 86, 99, 101, 104, 106, 107, 122, 126, 144, 145, 151, 152, 165, 169, 210, 218, 377, 395, 400, 405, 412, 416, 419], "realm": [2, 405], "As": [2, 3, 4, 45, 56, 65, 66, 69, 80, 101, 122, 126, 135, 144, 145, 146, 147, 151, 152, 197, 296, 340, 395, 400, 401, 402, 403, 404, 406, 407, 412, 413, 414, 415, 416, 418, 419], "practition": 2, "often": [2, 3, 8, 261, 321, 324, 377, 400, 401, 404, 406, 414, 416, 419], "encount": [2, 4, 86, 291, 394, 401, 405, 414], "situat": [2, 136, 137], "sometim": [2, 3, 69, 403, 419], "variabl": [2, 3, 4, 7, 8, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 55, 59, 60, 61, 69, 71, 72, 73, 74, 75, 80, 83, 84, 87, 88, 118, 119, 120, 121, 122, 125, 127, 128, 131, 132, 136, 137, 140, 141, 142, 143, 148, 153, 154, 155, 156, 247, 248, 249, 251, 252, 253, 256, 284, 285, 286, 324, 327, 397, 401], "immedi": [2, 27, 31, 32, 38, 39, 45, 54, 55, 59, 61, 64, 122, 126, 144, 145, 151, 152, 218, 339, 412, 413], "199": [2, 414], "info": [2, 3, 14, 15, 51, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 98, 99, 101, 104, 106, 107, 120, 121, 122, 125, 126, 127, 128, 136, 137, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 212, 215, 217, 367, 404, 409, 412, 413, 416], "glanc": [2, 404], "seem": [2, 400, 403, 404], "togeth": [2, 3, 11, 14, 15, 16, 17, 18, 19, 20, 21, 54, 58, 60, 61, 122, 126, 135, 144, 145, 146, 147, 151, 152, 169, 193, 247, 249, 251, 253, 280, 284, 285, 286, 301, 395, 401, 403, 404, 412], "less": [2, 139, 281, 389, 390, 396, 402, 403, 416, 418], "omit": [2, 372, 402, 406, 414, 416], "proper": [2, 3, 4, 6, 7, 340, 341, 342, 343, 401, 402, 412, 413, 416], "imposs": [2, 3, 112, 220, 306, 308, 323, 326, 328], "determin": [2, 51, 65, 82, 98, 99, 122, 126, 144, 145, 151, 152, 155, 156, 192, 214, 259, 269, 270, 401, 405, 412, 413], "complic": [2, 54, 64, 414, 416, 419], "matter": [2, 33, 407], "inconsist": [2, 419], "miss": [2, 3, 4, 6, 7, 12, 27, 31, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 210, 218, 225, 297, 298, 306, 309, 329, 394, 400, 403], "primari": [2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75, 407], "elimin": [2, 3, 404], "upon": [2, 3, 8, 412, 414], "canon": 2, "definit": [2, 108, 259], "markov": [2, 3, 404, 419], "mdp": [2, 404, 414], "context": [2, 3, 5, 8, 27, 38, 45, 54, 55, 59, 64, 122, 123, 126, 141, 144, 145, 151, 152, 206, 211, 218, 260, 262, 287, 336, 337, 340, 341, 342, 343, 345, 353, 360, 373, 395, 396, 400, 401, 402, 412, 413, 414, 415, 416], "condit": [2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 70, 71, 72, 73, 74, 75, 205, 216, 288, 289, 291, 293, 294, 305, 400, 412, 414, 416], "complet": [2, 7, 9, 105, 122, 125, 126, 127, 144, 145, 151, 152, 169, 204, 394, 396, 400, 402, 404, 411], "termin": [2, 3, 7, 14, 15, 16, 17, 35, 37, 45, 46, 58, 62, 64, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 97, 120, 121, 122, 125, 126, 127, 131, 132, 136, 137, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 155, 156, 162, 165, 166, 179, 194, 218, 226, 230, 249, 253, 256, 291, 297, 306, 307, 309, 310, 311, 313, 314, 315, 322, 326, 327, 328, 329, 331, 332, 338, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 400, 401, 402, 403, 404, 405, 407, 408, 411, 412, 413, 414, 415, 416, 418, 419], "reward": [2, 3, 14, 15, 16, 33, 35, 37, 45, 46, 50, 57, 58, 62, 64, 70, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 98, 99, 112, 118, 119, 120, 121, 122, 125, 126, 127, 128, 131, 132, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 152, 153, 155, 156, 162, 163, 166, 167, 172, 173, 175, 176, 178, 179, 180, 186, 190, 194, 195, 197, 198, 199, 200, 201, 202, 204, 205, 209, 210, 211, 213, 214, 216, 218, 223, 225, 230, 249, 256, 287, 291, 301, 306, 307, 309, 310, 311, 313, 314, 315, 318, 322, 324, 326, 327, 328, 329, 331, 332, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 370, 371, 373, 375, 391, 396, 397, 400, 401, 402, 403, 404, 405, 407, 408, 411, 412, 413, 414, 415, 416, 418, 419], "imit": [2, 3, 320], "inform": [2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 52, 54, 55, 57, 59, 60, 61, 64, 67, 69, 71, 72, 73, 74, 75, 86, 122, 123, 126, 129, 132, 144, 145, 151, 152, 218, 231, 232, 233, 254, 260, 395, 396, 397, 400, 401, 402, 403, 404, 412, 413, 414, 416], "stateless": [2, 3, 122, 126, 144, 145, 151, 152, 166, 209, 324, 358, 400, 404, 414, 419], "simul": [2, 3, 5, 7, 8, 69, 118, 119, 128, 131, 132, 148, 155, 156, 160, 230, 256, 395, 400, 402, 404, 408, 412, 413], "furthermor": [2, 412, 413], "certain": [2, 4, 18, 19, 20, 21, 27, 38, 45, 54, 55, 59, 64, 70, 122, 126, 144, 145, 151, 152, 161, 183, 204, 210, 218, 245, 248, 252, 323, 395, 400, 401, 402, 409, 412, 413, 419], "composit": [2, 3, 25, 26, 28, 29, 30, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75, 77, 104, 110, 117, 122, 124, 126, 138, 144, 145, 151, 152, 163, 166, 175, 176, 177, 178, 180, 186, 194, 195, 201, 204, 206, 209, 218, 223, 226, 227, 228, 230, 256, 283, 292, 298, 299, 303, 306, 326, 393, 400, 402, 403, 405, 412, 413, 414, 419], "accommod": [2, 3, 404, 405], "uniform": [2, 51, 65, 98, 99, 412], "unambigu": 2, "distinguish": [2, 136, 137, 155, 156], "happen": [2, 3, 122, 126, 144, 145, 151, 152, 228, 401, 406, 407, 408, 415, 419], "everyth": [2, 401, 402, 403, 408, 409], "belong": [2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75, 80, 86, 215, 216, 395, 400, 407, 413], "rule": [2, 64, 144, 175, 178, 296, 395, 402], "field": [2, 3, 14, 15, 16, 17, 23, 27, 31, 35, 38, 45, 50, 52, 53, 54, 55, 57, 58, 59, 62, 64, 65, 66, 67, 69, 70, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 94, 98, 114, 118, 119, 120, 121, 122, 125, 126, 127, 131, 132, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 155, 156, 162, 166, 175, 178, 179, 180, 190, 194, 195, 197, 201, 204, 206, 210, 218, 225, 230, 231, 241, 242, 249, 253, 256, 269, 270, 271, 272, 280, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 298, 300, 306, 307, 309, 310, 311, 313, 314, 315, 322, 326, 327, 328, 329, 331, 332, 338, 381, 394, 395, 401, 402, 403, 404, 405, 406, 407, 408, 411, 412, 413, 414, 415, 416, 418, 419], "taken": [2, 3, 25, 26, 30, 34, 41, 42, 43, 44, 49, 122, 126, 144, 145, 151, 152, 162, 196, 246, 257, 258, 396, 400, 402, 403, 405, 412, 413, 414], "is_shar": [2, 3, 14, 15, 16, 23, 31, 35, 50, 52, 53, 54, 57, 58, 62, 64, 65, 66, 67, 70, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 94, 98, 114, 118, 119, 120, 121, 122, 125, 126, 127, 131, 132, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 155, 156, 162, 166, 175, 178, 179, 180, 190, 194, 195, 197, 201, 204, 206, 216, 225, 230, 231, 241, 242, 249, 253, 256, 269, 270, 271, 272, 280, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 298, 300, 306, 307, 309, 310, 311, 313, 314, 315, 322, 326, 327, 328, 329, 331, 332, 338, 395, 402, 403, 404, 405, 406, 407, 408, 411, 412, 413, 414, 415, 416, 418, 419], "brought": [2, 402, 403, 405], "step_mdp": [2, 3, 122, 126, 144, 145, 151, 152, 249, 253, 393, 403, 404, 414, 418, 419], "count": [2, 3, 45, 122, 123, 204, 269, 270, 373, 377, 380, 400, 401, 402, 403, 416, 419], "trigger": [2, 7, 54, 64], "partial": [2, 3, 122, 126, 144, 145, 151, 152, 168, 169, 205, 206, 207, 292, 377, 403], "turn": [2, 18, 19, 20, 21, 50, 52, 55, 57, 59, 152, 184, 211, 215, 288, 358, 373, 396, 400, 401, 403, 405, 414, 415], "retain": 2, "regard": [2, 82, 88, 242, 289, 306, 316, 326, 400, 402, 414], "twice": [2, 8], "feasibl": 2, "mostli": [2, 3, 17, 360, 396, 408, 416, 419], "eas": [2, 3, 412, 413], "flat": [2, 112], "manner": [2, 126, 192, 212, 395, 400, 401, 402, 407, 411, 414, 416], "ted2flat": [2, 35, 393], "flat2t": [2, 393], "unflatten": [2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75, 166, 291], "deseri": [2, 3, 35], "posit": [2, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 54, 55, 56, 59, 60, 61, 64, 65, 66, 69, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 120, 121, 122, 126, 144, 145, 151, 152, 182, 183, 203, 204, 207, 210, 211, 218, 264, 309, 329, 396, 402, 412, 413, 414, 416], "both": [2, 3, 7, 27, 38, 45, 51, 54, 55, 56, 59, 64, 65, 66, 86, 122, 123, 125, 126, 136, 137, 144, 145, 146, 147, 151, 152, 153, 162, 169, 195, 210, 218, 226, 232, 233, 249, 252, 253, 254, 259, 260, 284, 285, 286, 289, 294, 306, 308, 309, 310, 314, 315, 322, 323, 324, 326, 327, 328, 329, 331, 332, 373, 395, 400, 402, 404, 406, 412, 413, 414, 415, 416, 419], "mark": [2, 3, 16, 88, 122, 126, 144, 145, 151, 152, 249, 253, 340, 342, 343, 407, 416], "identifi": [2, 53], "abov": [2, 3, 7, 27, 38, 45, 54, 55, 59, 64, 71, 122, 126, 144, 145, 151, 152, 218, 250, 278, 279, 305, 396, 397, 400, 402, 404, 405, 412, 413, 414, 419], "output": [2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 45, 51, 54, 55, 56, 59, 64, 65, 66, 69, 80, 82, 83, 84, 85, 86, 87, 88, 99, 106, 107, 120, 121, 122, 125, 126, 127, 128, 132, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 156, 166, 167, 169, 172, 173, 174, 175, 176, 178, 180, 186, 188, 192, 194, 195, 200, 201, 204, 207, 209, 210, 212, 214, 215, 218, 220, 226, 227, 228, 232, 233, 234, 235, 236, 239, 241, 242, 243, 247, 248, 249, 251, 252, 253, 254, 259, 260, 264, 269, 270, 272, 281, 283, 284, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 303, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 338, 340, 341, 342, 343, 344, 358, 360, 368, 395, 396, 400, 401, 402, 403, 404, 405, 408, 411, 412, 413, 414, 415, 418, 419], "typic": [2, 3, 4, 8, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 179, 205, 218, 292, 307, 309, 324, 326, 329, 395, 396, 397, 402, 404, 406, 407, 412, 413, 414], "adjust": [2, 11, 400, 412, 413, 414], "grumodul": [2, 168, 303], "lstmmodul": [2, 249, 403], "skip": [2, 3, 27, 38, 45, 54, 55, 59, 64, 80, 122, 126, 144, 145, 151, 152, 183, 210, 218, 220, 292, 296, 309, 324, 329, 340, 341, 342, 343, 359, 360, 370, 373, 400, 401, 414], "accumul": [2, 8, 218], "upcom": [2, 324, 349, 350, 351, 352, 354, 355, 356, 357, 400], "popular": [2, 3, 395, 403, 406, 413], "rainbow": 2, "multistep": [2, 14, 15, 16, 17, 18, 19, 20, 21, 218, 393, 401], "shift": [2, 35, 37, 45, 46, 62, 90, 91, 97, 302, 340, 341, 342, 343, 402], "approxim": [2, 413, 419], "would": [2, 3, 27, 38, 45, 54, 55, 58, 59, 64, 122, 126, 144, 145, 151, 152, 218, 247, 249, 251, 253, 254, 259, 397, 401, 402, 403, 404, 406, 407, 414, 416, 418, 419], "intens": [2, 3, 8], "ataridqnexperiencereplai": 2, "onlin": [2, 8, 14, 17, 169, 239, 268, 306, 312, 325, 326, 368, 391, 402, 403, 413, 416], "2x": 2, "small": [2, 212, 229, 400, 402, 412, 413, 419], "clearer": [2, 405], "lazi": [2, 60, 61, 77, 78, 122, 126, 144, 145, 151, 152, 155, 156, 192, 212, 232, 259, 262, 297, 298, 400, 401, 405, 407, 411, 416, 419], "certainli": 2, "benefici": 2, "welcom": [2, 404], "wrapper": [2, 3, 12, 17, 50, 52, 57, 58, 65, 66, 118, 119, 120, 121, 122, 125, 126, 127, 128, 130, 131, 132, 133, 134, 136, 137, 138, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 215, 219, 228, 231, 246, 264, 270, 281, 287, 291, 296, 301, 340, 365, 366, 367, 391, 393, 402, 403, 404, 412, 413, 415, 419], "around": [2, 5, 7, 17, 65, 66, 138, 219, 291, 296, 340, 400, 401, 413, 419], "selecttransform": [2, 122, 126, 144, 145, 151, 152], "excludetransform": [2, 87, 201, 416], "promptli": 2, "virtual": [2, 3, 125], "instal": [2, 3, 5, 10, 18, 19, 20, 55, 64, 82, 85, 122, 126, 144, 145, 146, 147, 149, 150, 151, 152, 362, 377, 394, 400, 402, 403, 404, 405, 406, 407, 408, 409, 412, 413, 419], "respons": [2, 3, 8, 99, 106, 122, 126, 144, 145, 151, 152, 377, 406, 407, 419], "d4rl": [2, 82, 88], "repositori": [2, 7, 83, 84, 85, 88, 156, 412, 413], "wheel": [2, 402], "publish": 2, "openml": [2, 85, 141], "scikit": [2, 85, 141], "panda": [2, 85], "raw": [2, 3, 4, 58, 250, 278, 279, 401, 407, 414], "go": [2, 3, 7, 47, 135, 144, 193, 197, 287, 346, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 418, 419], "natur": [2, 3, 400, 403, 405, 406, 407, 416], "modifi": [2, 3, 7, 8, 27, 31, 32, 38, 39, 45, 54, 55, 59, 61, 64, 70, 122, 126, 144, 145, 151, 152, 166, 173, 182, 186, 192, 206, 209, 210, 212, 214, 218, 261, 269, 270, 287, 295, 380, 396, 400, 401, 402, 404, 412, 413, 414], "fly": [2, 216, 323, 396, 402, 414, 416, 419], "least": [2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 54, 60, 61, 69, 71, 72, 73, 74, 75, 99, 106, 122, 172, 408, 419], "pre": [2, 7, 22, 27, 38, 45, 54, 55, 59, 64, 70, 86, 94, 122, 126, 144, 145, 151, 152, 192, 212, 214, 218, 419], "appli": [2, 3, 4, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 54, 55, 56, 59, 60, 61, 64, 65, 66, 67, 69, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 122, 126, 144, 145, 151, 152, 163, 165, 166, 168, 169, 170, 173, 175, 176, 177, 179, 180, 181, 182, 183, 185, 186, 187, 191, 193, 194, 195, 197, 200, 201, 204, 205, 206, 207, 209, 210, 212, 213, 215, 216, 218, 247, 251, 261, 278, 288, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 320, 322, 323, 325, 326, 327, 328, 329, 331, 332, 340, 358, 372, 397, 400, 401, 402, 407, 412, 414, 418, 419], "conisder": 2, "per": [2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 83, 99, 106, 112, 130, 131, 132, 144, 146, 147, 172, 200, 232, 233, 243, 245, 259, 260, 291, 362, 377, 389, 390, 400, 401, 402, 403, 405, 406, 409, 412, 413, 416, 418], "pipelin": [2, 3, 7, 395, 402], "replac": [2, 3, 6, 7, 31, 32, 39, 45, 61, 80, 86, 99, 106, 107, 165, 177, 179, 185, 225, 245, 395, 412, 416], "onc": [2, 3, 7, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 45, 50, 52, 54, 55, 57, 59, 64, 86, 101, 122, 126, 144, 145, 151, 152, 165, 197, 210, 218, 227, 228, 246, 269, 270, 291, 375, 395, 397, 401, 402, 403, 405, 408, 414, 416, 419], "produc": [2, 162, 165, 166, 232, 233, 254, 260, 267, 284, 286, 287, 360, 402, 403, 404, 405, 407, 416, 419], "unless": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 54, 55, 59, 60, 61, 64, 69, 71, 72, 73, 74, 75, 86, 90, 105, 122, 126, 144, 145, 146, 147, 151, 152, 210, 218, 306, 307, 309, 322, 324, 326, 327, 328, 329, 331, 332, 402], "download": [2, 7, 10, 80, 82, 83, 84, 86, 87, 88, 130, 192, 214, 360, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419], "forc": [2, 3, 6, 7, 14, 15, 17, 18, 19, 20, 21, 80, 83, 84, 86, 87, 88, 145, 401, 412, 413, 414], "robosetexperiencereplai": [2, 106, 107], "fk1": [2, 87], "v4": [2, 87, 126, 144, 162, 196, 349, 350, 351, 352, 354, 355, 356, 357, 400, 402, 415], "expert": [2, 87], "fk1_microopenrandom_v2d": [2, 87], "func": [2, 80, 81, 82, 83, 84, 85, 86, 87, 88, 217], "obs_norm": 2, "norm": [2, 4, 8, 118, 119, 229, 377, 400, 401, 402, 412, 413, 414], "num_work": [2, 50, 52, 70, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 139, 144, 151, 400, 401], "os": [2, 52, 70, 89, 401], "cpu_count": [2, 52, 70, 89], "num_chunk": [2, 80, 81, 82, 83, 84, 85, 86, 87, 88], "1000": [2, 4, 56, 64, 93, 98, 106, 107, 122, 126, 144, 145, 151, 152, 169, 216, 227, 245, 269, 270, 292, 296, 321, 400, 401, 402, 403, 405, 407, 409, 415, 416], "mp_start_method": [2, 80, 81, 82, 83, 84, 85, 86, 87, 88, 144, 151, 401, 418], "fork": [2, 5, 80, 81, 82, 83, 84, 85, 86, 87, 88, 400, 401, 402, 403, 412, 413, 415, 418], "recreat": [2, 414], "customari": [2, 395], "moreov": [2, 3], "fine": [2, 3, 24, 56, 65, 66, 99, 101, 106, 122, 126, 144, 145, 151, 152, 166, 186, 407, 415], "grain": [2, 3, 56, 65, 66, 99, 101, 106, 122, 126, 144, 145, 151, 152, 166], "nomenclatur": 2, "compact": [2, 62, 90, 91, 97], "propos": [2, 169, 179, 255, 321, 330, 395, 403, 416], "replaybufferensembl": [2, 80, 104, 110, 117], "primit": [2, 3, 4, 86, 306, 307, 309, 310, 311, 313, 314, 315, 322, 326, 327, 328, 329, 331, 332], "individu": [2, 4, 18, 19, 20, 21, 27, 38, 45, 54, 55, 59, 64, 70, 99, 101, 112, 122, 126, 136, 137, 144, 145, 151, 152, 218, 400, 413], "dummi": [2, 3, 152, 358, 400, 407, 419], "semant": [2, 60, 61, 125, 127, 395], "ident": [2, 3, 14, 15, 16, 45, 50, 52, 56, 57, 64, 65, 66, 93, 101, 106, 122, 125, 126, 127, 139, 144, 145, 151, 152, 179, 229, 259, 260, 307, 309, 322, 327, 329, 331, 332, 340, 341, 342, 343, 389, 390, 401, 404, 412, 413], "another_kei": [2, 101], "renam": [2, 3, 50, 52, 57, 101, 195, 197, 225, 400], "resiz": [2, 3, 88, 101, 169, 401, 403, 404, 416, 419], "imag": [2, 3, 4, 7, 11, 86, 171, 174, 192, 208, 214, 254, 358, 360, 400, 401, 404, 408, 413, 415, 419], "comops": 2, "totensorimag": [2, 3, 88, 101, 169, 196, 401, 403, 416, 418, 419], "renametransform": [2, 3, 101, 122, 126, 144, 145, 151, 152], "rb0": [2, 101], "in_kei": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 54, 64, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 118, 119, 122, 126, 138, 144, 145, 151, 152, 159, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 182, 184, 186, 188, 189, 190, 192, 194, 195, 196, 197, 198, 199, 200, 202, 205, 207, 208, 209, 210, 211, 212, 214, 216, 230, 231, 241, 249, 253, 256, 271, 280, 281, 283, 284, 285, 286, 287, 288, 291, 292, 293, 295, 296, 298, 299, 300, 303, 306, 307, 308, 309, 310, 311, 313, 314, 315, 320, 322, 323, 326, 327, 328, 329, 331, 332, 338, 340, 341, 342, 343, 359, 360, 387, 395, 400, 401, 402, 403, 405, 406, 409, 411, 412, 413, 414, 415, 416, 418, 419], "pixel": [2, 3, 7, 31, 88, 101, 120, 121, 125, 127, 128, 148, 169, 171, 174, 179, 182, 184, 188, 190, 192, 196, 208, 212, 214, 235, 265, 266, 358, 360, 395, 400, 401, 403, 408, 412, 415, 416, 418, 419], "rb1": [2, 101], "out_kei": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 54, 64, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 118, 119, 122, 126, 138, 144, 145, 151, 152, 159, 167, 168, 169, 170, 171, 172, 174, 175, 176, 178, 182, 184, 186, 188, 189, 190, 192, 194, 195, 196, 197, 198, 199, 200, 202, 205, 207, 208, 209, 211, 212, 214, 216, 230, 231, 241, 242, 249, 253, 256, 271, 272, 280, 281, 283, 284, 285, 286, 287, 289, 291, 292, 293, 294, 295, 296, 298, 299, 300, 303, 306, 307, 308, 309, 314, 315, 320, 322, 323, 326, 327, 328, 329, 331, 338, 340, 341, 342, 343, 358, 360, 373, 387, 395, 400, 401, 402, 403, 405, 409, 411, 412, 413, 414, 415, 416, 418, 419], "pixels33": [2, 101], "data0": [2, 101], "244": [2, 101, 192, 214, 414], "data1": [2, 101], "_": [2, 8, 51, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 123, 130, 155, 156, 170, 175, 177, 178, 186, 188, 195, 208, 216, 218, 283, 295, 300, 305, 306, 307, 309, 310, 314, 315, 322, 326, 327, 329, 331, 332, 340, 341, 342, 343, 362, 400, 401, 402, 403, 409, 412, 413, 414, 416, 418], "rang": [2, 3, 4, 8, 12, 51, 56, 58, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 94, 101, 112, 122, 123, 126, 136, 137, 144, 145, 151, 152, 197, 208, 216, 218, 248, 252, 323, 331, 332, 396, 397, 400, 402, 403, 406, 407, 409, 412, 413, 414, 416, 418], "parent": [2, 3, 21, 31, 32, 37, 39, 61, 69, 81, 101, 110, 117, 122, 126, 144, 145, 151, 152, 162, 166, 169, 170, 173, 176, 179, 182, 183, 188, 192, 200, 204, 205, 206, 207, 209, 211, 212, 218, 249, 253, 284, 303, 324, 326, 344, 358, 360, 400, 407, 414, 418, 419], "basic": [2, 138, 395, 402, 406, 407, 409, 412, 419], "properti": [2, 3, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 64, 65, 66, 69, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 122, 126, 138, 144, 145, 151, 152, 165, 209, 210, 216, 218, 240, 250, 258, 262, 267, 277, 278, 279, 291, 306, 309, 324, 326, 328, 329, 405, 407, 414, 416], "input": [2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 52, 53, 54, 55, 57, 58, 59, 60, 61, 64, 67, 69, 71, 72, 73, 74, 75, 109, 115, 122, 126, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 151, 152, 153, 154, 155, 156, 162, 163, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 188, 190, 191, 192, 193, 194, 195, 197, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 220, 225, 226, 229, 231, 232, 233, 235, 236, 237, 238, 241, 242, 245, 246, 247, 248, 249, 251, 252, 253, 254, 259, 260, 261, 262, 263, 269, 270, 272, 273, 274, 275, 276, 278, 281, 283, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 303, 305, 306, 307, 308, 309, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 326, 327, 328, 329, 331, 332, 338, 339, 340, 341, 342, 343, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 371, 375, 380, 387, 395, 396, 397, 400, 401, 402, 403, 404, 412, 413, 414, 418, 419], "send": [2, 3, 8, 367, 418], "receiv": [2, 3, 27, 38, 45, 54, 55, 58, 59, 64, 122, 126, 144, 145, 151, 152, 209, 210, 218, 254, 346, 396, 400, 402, 406, 411, 414], "spawn": [2, 3, 4, 18, 22, 130, 139, 144, 151, 401, 412, 413], "check_env_spec": [2, 3, 126, 144, 162, 194, 358, 393, 402, 412, 413, 414], "saniti": [2, 3, 7, 220, 402], "automati": 2, "make_composite_from_td": [2, 69, 393, 414], "fall": [2, 4, 82], "categori": [2, 31, 83, 395, 397], "bound": [2, 3, 4, 21, 27, 29, 31, 38, 45, 54, 55, 59, 64, 71, 122, 126, 144, 145, 151, 152, 172, 187, 216, 218, 219, 245, 246, 269, 270, 273, 274, 283, 288, 289, 292, 293, 294, 295, 296, 299, 306, 307, 309, 310, 322, 326, 327, 329, 331, 332, 393, 395, 400, 401, 402, 412, 414, 418, 419], "unbound": [2, 3, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 56, 57, 60, 61, 65, 66, 69, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 122, 126, 138, 144, 145, 151, 152, 163, 166, 175, 178, 194, 206, 223, 230, 256, 283, 295, 298, 300, 328, 393, 414, 416], "boundeddiscret": [2, 28, 31, 402], "boundedcontinu": [2, 22, 28, 31, 122, 126, 144, 145, 151, 152, 402, 412, 413, 414, 418, 419], "unboundeddiscret": [2, 71, 145, 393, 414, 419], "unboundedcontinu": [2, 71, 122, 126, 144, 145, 151, 152, 194, 223, 298, 303, 393, 402, 403, 412, 413, 414, 419], "implicitli": 2, "onehot": [2, 25, 26, 30, 34, 43, 44, 49, 118, 119, 125, 127, 128, 131, 132, 139, 140, 142, 143, 148, 153, 154, 242, 272, 288, 293, 311, 313, 314, 315, 338, 395, 405], "multionehot": [2, 41, 42, 44, 311, 314, 315, 338, 393], "multicategor": [2, 42, 43, 44, 393], "binari": [2, 3, 7, 26, 27, 153, 163, 167, 242, 272, 288, 289, 293, 294, 311, 314, 315, 338, 393], "concept": [2, 122, 126, 144, 145, 151, 152, 401, 416], "arbitrari": [2, 3, 25, 56, 122, 126, 144, 145, 151, 152, 165, 395, 400, 401, 414, 416], "combin": [2, 4, 36, 55, 209, 331, 401, 408, 416], "relat": [2, 3, 4, 10, 51, 144, 182, 306, 307, 309, 310, 311, 313, 314, 315, 322, 326, 327, 328, 329, 331, 332, 401, 409, 414], "nevertheless": [2, 3, 402, 404, 416], "expand": [2, 8, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 52, 57, 60, 61, 69, 71, 72, 73, 74, 75, 93, 106, 107, 166, 295, 298, 307, 309, 322, 324, 327, 329, 331, 332, 412, 413, 414, 416, 418], "otherwis": [2, 12, 14, 15, 16, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 99, 101, 106, 107, 118, 119, 122, 125, 126, 127, 128, 131, 132, 135, 136, 137, 139, 140, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 156, 169, 170, 177, 188, 205, 206, 207, 210, 216, 218, 229, 247, 250, 251, 259, 260, 278, 279, 288, 293, 299, 307, 309, 318, 324, 325, 329, 340, 342, 343, 373, 374, 397, 400, 401, 402, 403, 414, 419], "similarli": [2, 21, 27, 38, 45, 54, 55, 59, 64, 105, 110, 122, 126, 144, 145, 151, 152, 218, 259, 297, 298, 314, 322, 419], "possess": [2, 69, 82], "unsqueez": [2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75, 99, 163, 166, 169, 170, 208, 211, 223, 400, 403, 412, 413, 414], "move": [2, 4, 27, 38, 45, 54, 55, 59, 64, 69, 88, 122, 126, 127, 144, 145, 151, 152, 162, 173, 176, 192, 206, 209, 210, 212, 214, 216, 218, 225, 254, 295, 375, 400, 401, 403, 404, 418, 419], "unbind": [2, 50, 51, 52, 56, 57, 65, 66, 249, 253], "said": [2, 402], "neg": [2, 8, 14, 15, 16, 17, 18, 19, 20, 21, 51, 54, 65, 69, 98, 99, 169, 182, 193, 211, 317, 340, 342, 343, 396, 402, 412, 413, 414], "seen": [2, 18, 19, 20, 21, 31, 32, 39, 61, 122, 126, 144, 145, 151, 152, 176, 396, 400, 401, 403, 406, 412, 413, 416], "predict": [2, 3, 45, 58, 241, 243, 255, 256, 287, 301, 306, 308, 313, 316, 318, 319, 323, 326, 328, 339, 395, 400, 401, 406], "deprec": [2, 23, 26, 27, 29, 32, 34, 38, 39, 40, 42, 44, 45, 48, 49, 54, 55, 59, 64, 73, 75, 122, 126, 144, 145, 151, 152, 210, 218, 246, 306, 308, 309, 311, 314, 315, 316, 322, 323, 326, 327, 328, 329, 338, 340, 341, 342, 343, 348, 419], "utmost": 2, "commonli": [2, 99, 106, 107, 419], "emploi": [2, 263], "languag": [2, 24, 58], "scarc": 2, "address": [2, 416], "subdomain": 2, "facilit": [2, 3, 7, 191, 192, 206, 212, 214, 284, 285, 286, 395, 400, 403, 405, 414], "extern": [2, 3, 175, 178, 412, 419], "token": [2, 52, 53, 58, 67, 70, 89], "dm": [3, 400, 419], "base": [3, 4, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 51, 56, 59, 60, 61, 65, 66, 69, 70, 71, 72, 73, 74, 75, 86, 103, 109, 112, 113, 115, 116, 118, 119, 122, 126, 130, 131, 132, 138, 139, 140, 144, 145, 151, 152, 155, 176, 197, 206, 212, 213, 259, 261, 284, 290, 306, 307, 309, 310, 311, 313, 314, 315, 317, 322, 326, 327, 328, 329, 331, 332, 341, 342, 367, 377, 395, 396, 397, 400, 401, 403, 404, 405, 406, 408, 412, 413, 414, 416, 419], "abl": [3, 135, 146, 147, 249, 253, 400, 402, 403, 405, 411, 412, 413, 414, 416, 418], "experi": [3, 51, 56, 65, 66, 80, 82, 83, 84, 85, 86, 87, 88, 98, 99, 220, 362, 363, 364, 365, 366, 367, 394, 401, 402, 407, 408, 412, 413, 416], "box": [3, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75, 125, 127, 261, 324], "lib": [3, 5, 6, 7, 9, 10, 14, 15, 16, 17, 21, 22, 122, 123, 126, 136, 137, 144, 145, 146, 147, 149, 150, 151, 152, 169, 172, 179, 185, 186, 188, 190, 195, 197, 200, 206, 209, 215, 216, 218, 358, 387, 400, 401, 402, 403, 411, 413, 415, 416, 418, 419], "hope": [3, 11], "nn": [3, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 33, 38, 45, 54, 55, 58, 59, 64, 118, 119, 122, 126, 138, 144, 145, 151, 152, 173, 177, 179, 186, 192, 206, 209, 210, 212, 214, 218, 221, 230, 231, 232, 233, 235, 236, 237, 238, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 256, 258, 259, 260, 261, 264, 269, 270, 271, 272, 280, 283, 284, 285, 286, 287, 288, 291, 292, 293, 295, 296, 297, 298, 300, 303, 306, 307, 309, 310, 311, 313, 314, 315, 316, 317, 322, 324, 326, 327, 328, 329, 331, 332, 338, 340, 341, 342, 343, 387, 395, 396, 400, 401, 402, 403, 405, 406, 409, 411, 412, 413, 414, 415, 418], "subclass": [3, 14, 15, 16, 17, 18, 19, 20, 21, 27, 28, 38, 54, 55, 59, 64, 71, 101, 122, 126, 144, 145, 151, 152, 164, 165, 209, 215, 220, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 243, 244, 245, 247, 248, 249, 251, 252, 253, 254, 261, 264, 265, 266, 268, 269, 270, 273, 274, 276, 281, 287, 289, 291, 294, 295, 296, 297, 299, 302, 324, 326, 401, 403, 407, 414, 416], "organis": [3, 87, 122, 126, 144, 145, 151, 152, 210, 401], "attribut": [3, 4, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 52, 54, 55, 57, 59, 60, 61, 62, 64, 69, 70, 71, 72, 73, 74, 75, 86, 122, 125, 126, 127, 144, 145, 151, 152, 162, 179, 192, 212, 216, 218, 249, 253, 296, 306, 307, 309, 310, 311, 313, 315, 316, 317, 320, 322, 324, 326, 327, 328, 329, 331, 332, 338, 400, 403, 414], "live": [3, 13, 14, 15, 16, 17, 19, 20, 27, 38, 45, 51, 54, 55, 56, 59, 64, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 122, 126, 138, 144, 145, 151, 152, 179, 218], "actual": [3, 4, 7, 50, 52, 57, 80, 82, 83, 84, 86, 87, 88, 122, 126, 144, 145, 151, 152, 215, 380, 396, 400, 402, 412, 413, 414], "retriev": [3, 50, 51, 52, 56, 57, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 104, 122, 125, 126, 127, 144, 145, 151, 152, 170, 176, 179, 188, 225, 230, 232, 256, 291, 292, 296, 299, 303, 306, 307, 308, 309, 311, 323, 326, 327, 329, 331, 332, 338, 340, 341, 342, 343, 391, 397, 401, 402, 405, 414, 419], "care": [3, 8, 27, 38, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 209, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 243, 244, 245, 247, 248, 249, 251, 252, 253, 254, 261, 264, 265, 266, 268, 269, 270, 273, 274, 276, 281, 287, 289, 291, 294, 299, 302, 360, 400, 402, 412, 413, 414, 416], "parametr": [3, 263, 296, 307, 309, 314, 322, 329, 400, 402], "hardwar": 3, "observation_spec": [3, 122, 126, 138, 144, 145, 151, 152, 163, 166, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 182, 184, 185, 186, 188, 190, 192, 194, 196, 200, 202, 204, 205, 206, 207, 208, 209, 211, 212, 215, 216, 218, 230, 249, 253, 256, 381, 387, 400, 402, 406, 411, 412, 413, 414, 419], "pair": [3, 45, 50, 52, 54, 57, 64, 82, 120, 121, 122, 126, 144, 145, 151, 152, 197, 206, 249, 284, 292, 296, 324, 340, 341, 342, 343, 344, 395, 396, 400, 401, 402, 405, 406, 411, 414, 419], "state_spec": [3, 122, 126, 138, 144, 145, 151, 152, 163, 230, 256, 414, 419], "reward_spec": [3, 122, 126, 138, 144, 145, 151, 152, 163, 166, 167, 172, 173, 175, 176, 178, 194, 198, 199, 200, 202, 209, 211, 218, 230, 256, 402, 412, 413, 414, 419], "done_spec": [3, 122, 126, 144, 145, 151, 152, 175, 176, 178, 179, 194, 209, 218, 226, 412, 413, 414, 419], "flag": [3, 8, 51, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 122, 126, 136, 137, 144, 145, 151, 152, 155, 156, 185, 269, 270, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 395, 412, 413, 414, 415], "input_spec": [3, 122, 126, 138, 144, 145, 151, 152, 162, 166, 173, 175, 176, 177, 188, 190, 194, 195, 200, 201, 204, 205, 206, 209, 210, 211, 213, 218, 402, 414], "full_action_spec": [3, 122, 126, 142, 143, 144, 145, 151, 152, 153, 154, 162, 230, 256, 402, 412, 413], "full_state_spec": [3, 122, 126, 144, 145, 151, 152, 162, 230, 256, 402], "lock": [3, 31, 32, 39, 50, 52, 57, 61, 122, 126, 144, 145, 151, 152, 166, 206, 216, 414], "output_spec": [3, 122, 126, 144, 145, 151, 152, 166, 173, 175, 176, 180, 186, 194, 195, 201, 204, 209, 210, 218, 414], "full_observation_spec": [3, 122, 126, 144, 145, 151, 152, 230, 256], "full_reward_spec": [3, 122, 126, 144, 145, 151, 152, 166, 176, 194, 412, 413], "full_done_spec": [3, 122, 126, 144, 145, 151, 152, 166, 176, 194, 226, 412, 413], "carri": [3, 21, 43, 70, 122, 126, 144, 145, 151, 152, 206, 324, 401, 403, 412, 413, 414, 416], "nontensorspec": [3, 393], "importantli": [3, 292, 296], "action_s": 3, "help": [3, 4, 27, 38, 45, 54, 55, 59, 64, 69, 122, 126, 144, 145, 151, 152, 179, 218, 306, 308, 323, 326, 328, 394, 396, 400, 401, 402, 403, 412, 413], "With": [3, 131, 132, 135, 205, 397, 401, 411, 412, 413, 416, 419], "necessarili": [3, 122, 126, 144, 145, 151, 152, 419], "present": [3, 27, 38, 45, 50, 51, 52, 54, 55, 56, 57, 59, 64, 65, 66, 69, 80, 81, 82, 83, 84, 85, 86, 87, 88, 98, 99, 101, 105, 122, 125, 126, 144, 145, 151, 152, 180, 197, 201, 206, 210, 218, 225, 226, 234, 235, 236, 237, 238, 244, 249, 251, 253, 263, 268, 269, 270, 291, 295, 296, 297, 298, 306, 307, 308, 309, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 338, 340, 341, 342, 343, 344, 391, 397, 400, 409, 411, 412, 413, 416, 418], "0s": [3, 80, 86, 206, 403], "step_and_maybe_reset": [3, 122, 126, 144, 145, 151, 152, 404], "done_kei": [3, 23, 35, 37, 46, 62, 90, 91, 97, 122, 126, 144, 145, 151, 152, 165, 169, 179, 197, 204, 218, 225, 412, 413], "assign": [3, 4, 14, 15, 17, 27, 28, 38, 45, 50, 52, 54, 55, 57, 59, 64, 71, 122, 126, 144, 145, 151, 152, 210, 218, 309, 310, 311, 313, 329, 402, 405, 412, 413, 416], "_reset": [3, 122, 126, 138, 144, 145, 151, 152, 163, 165, 166, 169, 175, 178, 185, 194, 226, 230, 256, 412], "data_": [3, 122, 126, 144, 145, 151, 152], "append": [3, 8, 11, 51, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 122, 123, 126, 144, 145, 151, 152, 165, 172, 173, 197, 206, 210, 215, 248, 249, 252, 253, 288, 293, 400, 401, 402, 403, 412, 413, 414, 415, 416, 418], "seed": [3, 14, 15, 16, 17, 21, 56, 65, 66, 87, 101, 122, 126, 138, 144, 145, 146, 147, 151, 152, 155, 156, 163, 166, 175, 178, 194, 210, 220, 358, 377, 412], "determinist": [3, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 173, 192, 206, 209, 210, 212, 214, 218, 224, 234, 243, 246, 265, 274, 283, 292, 295, 296, 299, 307, 324, 373, 395, 400, 401, 402, 403, 405, 406, 409, 412, 414, 418, 419], "preced": [3, 45, 403], "risk": [3, 193], "overlap": [3, 65, 112], "reproduc": [3, 55, 59, 169, 220, 400, 402, 413], "maximum": [3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 25, 45, 50, 52, 53, 58, 67, 70, 71, 89, 93, 94, 95, 98, 99, 114, 122, 126, 144, 145, 151, 152, 177, 198, 204, 205, 207, 229, 277, 278, 279, 299, 307, 309, 314, 315, 322, 324, 325, 329, 360, 374, 400, 401, 402, 403, 405, 412, 413, 416], "max_step": [3, 11, 112, 122, 126, 136, 137, 138, 144, 145, 151, 152, 155, 156, 204, 218, 358, 404, 405, 406, 408, 409, 412, 413, 418, 419], "tensordictmodul": [3, 14, 15, 16, 17, 18, 19, 20, 21, 54, 58, 64, 118, 119, 122, 126, 138, 144, 145, 151, 152, 168, 186, 228, 231, 242, 246, 249, 253, 256, 270, 271, 272, 280, 281, 284, 285, 286, 287, 288, 291, 292, 293, 294, 295, 297, 298, 299, 301, 303, 307, 309, 310, 314, 315, 317, 318, 319, 320, 322, 324, 327, 329, 331, 332, 338, 339, 340, 341, 342, 343, 373, 387, 393, 400, 402, 403, 406, 409, 411, 412, 413, 414, 415, 419], "trail": [3, 216], "treat": [3, 45, 396, 405, 406], "figur": [3, 400, 402, 403, 413, 414, 419], "brief": [3, 402, 404, 406, 416], "deliveri": 3, "design": [3, 27, 38, 45, 54, 55, 59, 64, 104, 110, 117, 122, 126, 136, 137, 144, 145, 151, 152, 162, 169, 193, 210, 218, 287, 306, 307, 308, 309, 314, 315, 316, 317, 318, 319, 322, 323, 324, 326, 327, 328, 329, 332, 338, 400, 401, 402, 403, 404, 405, 406, 411, 412, 413, 414, 416, 419], "metaclass": 3, "everi": [3, 8, 27, 31, 32, 38, 39, 45, 51, 54, 55, 56, 59, 61, 64, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 108, 122, 126, 144, 145, 151, 152, 204, 205, 216, 218, 223, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 243, 244, 245, 247, 248, 249, 251, 252, 253, 254, 259, 260, 261, 264, 265, 266, 268, 269, 270, 273, 274, 276, 281, 287, 289, 291, 294, 299, 302, 324, 377, 397, 400, 401, 402, 403, 404, 405, 412, 413, 414], "flank": [3, 403], "dual": 3, "strictli": [3, 8, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 210, 218, 309, 329, 400, 402], "refer": [3, 7, 8, 9, 11, 21, 24, 27, 38, 45, 54, 55, 58, 59, 64, 122, 125, 126, 127, 144, 145, 151, 152, 210, 216, 218, 230, 242, 243, 256, 257, 258, 259, 260, 261, 265, 266, 273, 274, 289, 306, 309, 316, 317, 318, 319, 326, 329, 340, 345, 353, 399, 400, 402, 405, 406, 407, 408, 412, 413, 416, 419], "union": [3, 12, 14, 16, 17, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 54, 55, 59, 60, 61, 64, 69, 71, 72, 73, 74, 75, 98, 99, 106, 122, 126, 144, 145, 151, 152, 173, 188, 192, 197, 199, 206, 210, 212, 214, 216, 218, 225, 232, 233, 234, 235, 236, 237, 238, 240, 244, 254, 257, 258, 259, 260, 262, 263, 267, 268, 271, 277, 278, 279, 280, 295, 313, 315, 321, 327, 330, 353, 371, 373, 374, 382, 383, 385, 387, 388, 389, 390, 391], "assess": [3, 14, 15, 16, 17, 18, 19, 20, 21, 136, 137, 157, 400], "split_trajectori": [3, 14, 15, 16, 17, 18, 19, 20, 21, 80, 86, 99, 106, 107, 393], "adjac": [3, 23, 182, 291], "junction": 3, "inittrack": [3, 249, 253, 291, 400, 403], "tutori": [3, 145, 392, 399, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 414, 415, 416, 417, 419], "scratch": [3, 8, 401, 414], "gym3": 3, "envpool": [3, 139, 140], "interfac": [3, 129, 141, 254, 262, 395, 396, 400, 402, 408, 414, 416], "simultan": [3, 20, 139, 140, 144, 151, 414], "advantag": [3, 8, 244, 306, 308, 323, 326, 328, 340, 341, 342, 343, 344, 345, 347, 349, 351, 353, 354, 356, 396, 397, 400, 401, 402, 403, 413, 414, 419], "scale": [3, 4, 24, 82, 122, 126, 144, 145, 151, 152, 169, 186, 188, 199, 205, 208, 216, 229, 243, 250, 264, 273, 274, 278, 279, 284, 285, 286, 292, 296, 298, 306, 307, 309, 322, 326, 327, 328, 329, 375, 381, 391, 395, 400, 401, 402, 403, 405, 413, 418], "varieti": [3, 11], "inherit": [3, 122, 126, 144, 145, 151, 152, 255, 259, 260, 324, 397, 402, 412, 413], "Of": [3, 7, 394, 414, 419], "cours": [3, 4, 394, 414, 419], "from_pixel": [3, 11, 118, 119, 120, 121, 125, 127, 128, 131, 132, 148, 169, 196, 358, 360, 400, 401, 403, 404, 408, 409, 415, 416, 418, 419], "81": [3, 400, 401, 414], "simpli": [3, 6, 50, 52, 57, 70, 110, 112, 117, 180, 201, 215, 324, 340, 395, 396, 400, 402, 406, 412, 413, 419], "d": [3, 51, 54, 56, 64, 65, 66, 83, 85, 87, 88, 89, 98, 99, 229, 247, 251, 292, 296, 418], "privat": [3, 122, 126, 144, 145, 151, 152, 215, 414, 419], "absenc": 3, "total": [3, 14, 15, 16, 17, 18, 19, 20, 21, 25, 41, 43, 50, 51, 52, 56, 57, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 107, 112, 308, 323, 326, 368, 370, 373, 377, 380, 381, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419], "accord": [3, 14, 15, 16, 17, 18, 19, 20, 21, 50, 52, 57, 58, 101, 104, 153, 154, 188, 199, 250, 262, 273, 278, 279, 338, 395, 405, 406, 412, 414, 416], "inner": [3, 122, 126, 144, 145, 151, 152, 177, 397, 401, 402, 413, 419], "logic": [3, 412], "kept": [3, 23, 105, 107, 177, 201, 209, 220, 225, 250, 278, 279, 406, 412], "mind": [3, 80, 86, 99, 106, 107, 122, 126, 144, 145, 151, 152, 412, 413], "desig": 3, "wherev": 3, "expos": [3, 148, 175, 178, 297, 401], "modif": [3, 5, 27, 31, 32, 38, 39, 45, 54, 55, 59, 61, 64, 122, 126, 144, 145, 151, 152, 182, 218, 226, 324, 396, 402, 414], "lost": [3, 8, 215], "eras": [3, 25, 26, 28, 29, 30, 34, 41, 42, 43, 44, 47, 48, 49, 69, 71, 72, 73, 74, 75, 99, 106, 122, 126, 144, 145, 151, 152, 210], "intern": [3, 68, 398], "face": [3, 5, 8, 9, 404, 419], "NOT": [3, 90, 91, 97, 193], "outsid": [3, 16, 176, 396, 408, 412, 413, 414], "right": [3, 6, 7, 23, 58, 99, 106, 401, 402, 413, 414, 419], "preliminari": 3, "warranti": 3, "affect": [3, 8, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 209, 210, 218, 220, 340, 341, 342, 343, 412], "preclud": 3, "presenc": [3, 54, 64, 406], "annihil": 3, "reason": [3, 4, 8, 27, 38, 45, 54, 55, 59, 64, 86, 122, 126, 144, 145, 146, 147, 151, 152, 192, 212, 218, 253, 396, 400, 401, 402, 406, 407, 412, 414, 416], "advanc": [3, 21, 51, 56, 65, 66, 126, 404, 407, 416], "superse": 3, "pettingzoowrapp": [3, 393], "group": [3, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 54, 60, 61, 69, 71, 72, 73, 74, 75, 80, 122, 126, 135, 136, 137, 142, 143, 144, 145, 146, 147, 151, 152, 153, 154, 155, 156, 157, 395, 401, 405, 407, 413, 416], "associ": [3, 27, 38, 45, 50, 52, 54, 55, 57, 59, 64, 122, 126, 144, 145, 151, 152, 218, 273, 391, 400, 416], "environemtn": 3, "__not__": [3, 292, 307, 309, 322, 327, 329, 331, 332], "constrain": [3, 186, 249, 253, 326], "li": 3, "fact": [3, 7, 8, 400, 402, 404, 412, 413, 414, 415, 416, 419], "know": [3, 4, 9, 51, 56, 65, 66, 125, 127, 227, 228, 324, 327, 373, 400, 401, 402, 403, 404, 405, 406, 407, 412, 413, 416], "meaning": [3, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75], "perfectli": [3, 397, 400, 414], "meaningless": 3, "val": [3, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75, 406, 418], "agent0": 3, "agent1": 3, "overrid": [3, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 56, 60, 61, 69, 71, 72, 73, 74, 75, 80, 122, 126, 144, 145, 151, 152, 165, 391, 395], "bool": [3, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 98, 99, 101, 104, 105, 106, 107, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 132, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 162, 163, 165, 166, 169, 170, 175, 177, 178, 179, 180, 182, 186, 187, 188, 190, 192, 194, 195, 197, 199, 200, 201, 204, 206, 208, 210, 211, 212, 214, 216, 218, 220, 223, 225, 226, 229, 230, 231, 232, 233, 235, 236, 247, 248, 249, 250, 251, 252, 253, 254, 256, 259, 260, 261, 262, 263, 270, 278, 279, 283, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 335, 338, 340, 341, 342, 343, 346, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 367, 370, 371, 373, 374, 375, 377, 391, 401, 402, 403, 404, 405, 407, 408, 411, 412, 413, 414, 415, 416, 418, 419], "500": [3, 400, 401, 414, 418, 419], "launch": [3, 14, 15, 17, 18, 19, 20, 22, 80, 83, 144, 151], "bottleneck": [3, 8, 99, 106, 107], "great": [3, 7, 8, 412, 418], "speedup": [3, 8, 412, 419], "precis": [3, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75, 175, 178, 225, 248, 252, 400, 402], "misspecifi": 3, "caus": [3, 7, 8, 93, 94, 114, 122, 126, 130, 144, 145, 151, 152, 193, 419], "breakag": 3, "rais": [3, 14, 15, 16, 17, 18, 19, 20, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 52, 54, 55, 57, 59, 60, 61, 64, 69, 71, 72, 73, 74, 75, 86, 93, 122, 126, 144, 145, 151, 152, 153, 157, 169, 181, 187, 197, 205, 206, 207, 210, 218, 220, 227, 228, 245, 246, 269, 270, 309, 324, 329, 400, 402, 412, 413, 416], "mismatch": [3, 54, 401], "subprocess": [3, 14, 15, 17, 123, 144, 151], "multithreadedenv": [3, 393], "underneath": 3, "higher": [3, 4, 99, 172, 299, 400, 401, 402, 412, 416, 419], "flexibl": [3, 9, 139, 333, 396, 397, 400, 416, 419], "cover": [3, 125, 127, 394, 402, 404, 407, 408, 414, 418], "type": [3, 14, 15, 16, 17, 18, 19, 20, 21, 27, 28, 31, 32, 38, 39, 45, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 64, 65, 66, 67, 69, 70, 71, 88, 89, 101, 122, 126, 135, 138, 141, 144, 145, 146, 147, 151, 152, 166, 173, 175, 176, 179, 180, 186, 192, 194, 195, 201, 204, 206, 209, 210, 212, 214, 216, 218, 221, 224, 227, 228, 232, 233, 254, 259, 260, 263, 271, 280, 288, 292, 295, 296, 303, 306, 307, 309, 310, 311, 313, 315, 316, 317, 322, 324, 326, 327, 328, 329, 331, 332, 334, 338, 346, 358, 389, 393, 395, 400, 401, 402, 407, 412, 413, 414, 416, 419], "atari": [3, 4, 80, 169, 360, 408, 419], "classic": [3, 138, 147, 401], "benchmark_batched_env": 3, "seamlessli": [3, 414], "infrastructur": [3, 412, 413], "act": [3, 4, 106, 107, 146, 147, 210, 241, 260, 307, 309, 310, 322, 327, 329, 331, 332, 403, 412, 413, 416], "world": [3, 5, 138, 301, 318, 408, 412, 413, 414, 419], "paradigm": [3, 17, 413], "decpodp": 3, "game": [3, 4, 5, 80, 136, 137, 142, 143, 360, 408], "thank": [3, 400, 404], "carrier": [3, 402, 403, 404, 416], "particular": [3, 27, 38, 45, 54, 55, 59, 64, 70, 82, 83, 122, 126, 144, 145, 151, 152, 210, 218, 396, 397, 401, 403, 404, 411, 413, 416], "thu": [3, 323, 413], "let": [3, 6, 7, 11, 23, 27, 38, 45, 51, 54, 55, 56, 59, 64, 65, 66, 67, 122, 126, 144, 145, 146, 147, 151, 152, 169, 218, 249, 253, 259, 260, 288, 373, 396, 400, 401, 402, 403, 404, 405, 406, 407, 408, 411, 412, 413, 414, 415, 416, 418, 419], "vma": [3, 155, 156, 358, 412, 413], "robot": [3, 5, 7, 86, 192, 212, 214, 413], "vmasenv": [3, 358, 393, 412, 413], "balanc": [3, 120, 121, 400, 401, 419], "num_env": [3, 21, 125, 129, 140, 155, 156, 358, 412, 413], "n_agent": [3, 155, 156, 259, 260, 261, 271, 280, 338, 358, 412, 413], "ground_rew": 3, "pos_rew": [3, 413], "style": [3, 51, 56, 65, 66, 80, 82, 83, 84, 85, 86, 87, 88], "vari": [3, 125, 127, 128, 146, 147, 148, 155, 193, 413], "creation": [3, 144, 151, 419], "info_spec": [3, 144], "agent_i_action_spec": 3, "agent_i_reward_spec": 3, "agent_i_observation_spec": 3, "categor": [3, 25, 26, 34, 43, 44, 49, 118, 119, 122, 125, 126, 127, 128, 131, 132, 136, 137, 139, 140, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 156, 162, 163, 179, 194, 226, 242, 267, 272, 288, 289, 292, 293, 294, 311, 314, 315, 338, 393, 403, 412, 413, 419], "simpl": [3, 9, 27, 38, 45, 54, 55, 59, 64, 69, 122, 126, 144, 145, 151, 152, 218, 235, 291, 296, 311, 313, 324, 328, 395, 396, 400, 401, 402, 404, 405, 406, 412, 413, 416, 419], "prefix": [3, 23, 27, 38, 45, 50, 52, 54, 55, 57, 59, 64, 70, 122, 126, 144, 145, 151, 152, 210, 218, 292, 309, 324, 329, 359, 403, 406, 419], "exactli": [3, 27, 38, 45, 54, 55, 59, 64, 122, 126, 128, 144, 145, 151, 152, 210, 218, 247, 251, 309, 329, 400, 403, 407, 412, 413], "action_kei": [3, 14, 15, 16, 17, 18, 19, 20, 21, 122, 126, 144, 145, 151, 152, 162, 163, 177, 219, 225, 227, 228, 230, 245, 246, 255, 256, 269, 270, 291, 412, 413], "reward_kei": [3, 35, 37, 46, 62, 90, 91, 97, 122, 126, 144, 145, 151, 152, 218, 225, 230, 256, 371, 375, 412, 413], "set_kei": [3, 179, 306, 308, 309, 311, 314, 315, 316, 322, 323, 324, 326, 327, 328, 329, 338, 344, 400, 412, 413], "awai": [3, 402, 404, 412, 413], "leaf": [3, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 41, 42, 43, 44, 47, 48, 49, 61, 69, 71, 72, 73, 74, 75, 122, 126, 144, 145, 151, 152, 185, 204, 296], "full": [3, 122, 126, 144, 145, 151, 152, 249, 253, 289, 368, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 418, 419], "autoresettransform": 3, "invalid": [3, 27, 38, 45, 54, 55, 59, 64, 112, 122, 126, 144, 145, 151, 152, 157, 218, 257, 258], "nan": [3, 165, 215], "auto_reset": [3, 122, 126, 144, 145, 151, 152, 165, 218, 414], "auto_reset_replac": [3, 165], "placehold": [3, 128, 179, 210], "set_gym_backend": [3, 122, 125, 126, 144, 145, 151, 152, 158, 165, 393, 404, 418], "autoresettinggymenv": [3, 165], "_step": [3, 122, 126, 144, 145, 151, 152, 163, 165, 166, 175, 178, 182, 194, 195], "self": [3, 12, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 31, 32, 38, 39, 45, 50, 52, 54, 55, 57, 59, 61, 64, 122, 126, 138, 144, 145, 151, 152, 163, 165, 166, 173, 175, 178, 192, 194, 206, 209, 210, 212, 214, 218, 227, 228, 230, 242, 245, 256, 259, 260, 271, 280, 292, 295, 300, 306, 307, 309, 310, 311, 313, 315, 316, 317, 322, 324, 326, 327, 328, 329, 331, 332, 338, 340, 341, 342, 343, 344, 397, 400, 414, 418], "super": [3, 138, 163, 165, 166, 175, 178, 194, 230, 242, 256, 300, 307, 309, 310, 315, 322, 327, 329, 331, 332, 400, 414, 418], "td_reset": [3, 165], "exclud": [3, 8, 64, 82, 87, 122, 126, 144, 145, 151, 152, 165, 169, 180, 225, 271, 308, 326, 412, 413, 416], "r": [3, 4, 45, 162, 163, 165, 172, 188, 202, 216, 229, 231, 248, 296, 305, 339, 358, 395, 401, 414, 419], "break_when_any_don": [3, 122, 126, 144, 145, 151, 152, 165, 218, 231, 291, 413], "3633e": [3, 165], "02": [3, 122, 126, 144, 145, 151, 152, 165, 399, 400, 401, 402, 403, 409, 412, 414, 415, 417], "4877e": [3, 165], "01": [3, 165, 188, 229, 269, 270, 302, 306, 308, 323, 326, 399, 400, 401, 403, 414, 415, 417], "2849e": [3, 165], "7584e": [3, 165], "6609e": [3, 165], "6166e": [3, 165], "8366e": [3, 165], "2761e": [3, 165], "5685e": [3, 165], "4102e": [3, 165], "8111e": [3, 165], "9959e": [3, 165], "0865e": [3, 165], "5644e": [3, 165], "2119e": [3, 165], "2542e": [3, 165], "03": [3, 122, 126, 144, 145, 151, 152, 165, 188, 399, 400, 401, 403, 414, 415, 417], "9952e": [3, 165], "4059e": [3, 165], "2094e": [3, 165], "9009e": [3, 165], "5140e": [3, 165], "3554e": [3, 165], "2920e": [3, 165], "7893e": [3, 165], "6429e": [3, 165], "3057e": [3, 165], "2867e": [3, 165], "6963e": [3, 165], "3818e": [3, 165], "2576e": [3, 165], "2679e": [3, 165], "1640e": [3, 165], "00": [3, 118, 119, 165, 399, 400, 401, 402, 403, 412, 413, 414, 415, 417], "6972e": [3, 165], "0212e": [3, 165], "5959e": [3, 165], "4637e": [3, 165], "3121e": [3, 165], "2168e": [3, 165], "5232e": [3, 165], "7704e": [3, 165], "7457e": [3, 165], "4127e": [3, 165], "1064e": [3, 165], "0854e": [3, 165], "5712e": [3, 165], "2189e": [3, 165], "5235e": [3, 165], "8289e": [3, 165], "0009e": [3, 165], "0257e": [3, 165], "8893e": [3, 165], "5872e": [3, 165], "9405e": [3, 165], "7766e": [3, 165], "0403e": [3, 165], "0626e": [3, 165], "2959e": [3, 165], "7263e": [3, 165], "2775e": [3, 165], "9564e": [3, 165], "0411e": [3, 165], "6769e": [3, 165], "6354e": [3, 165], "8698e": [3, 165], "1765e": [3, 165], "6292e": [3, 165], "5375e": [3, 165], "1820e": [3, 165], "7023e": [3, 165], "5836e": [3, 165], "9016e": [3, 165], "4826e": [3, 165], "6191e": [3, 165], "6387e": [3, 165], "8667e": [3, 165], "2056e": [3, 165], "1147e": [3, 165], "5991e": [3, 165], "0278e": [3, 165], "5219e": [3, 165], "3067e": [3, 165], "6617e": [3, 165], "3322e": [3, 165], "2629e": [3, 165], "4599e": [3, 165], "7298e": [3, 165], "5848e": [3, 165], "0148e": [3, 165], "5745e": [3, 165], "6982e": [3, 165], "7877e": [3, 165], "3527e": [3, 165], "7285e": [3, 165], "6668e": [3, 165], "0583e": [3, 165], "6956e": [3, 165], "3962e": [3, 165], "9845e": [3, 165], "5015e": [3, 165], "5903e": [3, 165], "9993e": [3, 165], "9418e": [3, 165], "0196e": [3, 165], "6557e": [3, 165], "2109e": [3, 165], "8997e": [3, 165], "1507e": [3, 165], "7363e": [3, 165], "0310e": [3, 165], "9574e": [3, 165], "8980e": [3, 165], "0090e": [3, 165], "forecast": 3, "awar": [3, 7, 93, 94, 95, 108, 110, 114, 249, 253, 401, 403], "detect": [3, 88, 324, 396], "return_contigu": [3, 122, 126, 144, 145, 151, 152, 220, 411], "tensordictbas": [3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 52, 54, 57, 60, 61, 64, 65, 66, 69, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 112, 122, 124, 126, 144, 145, 151, 152, 163, 165, 166, 168, 169, 170, 173, 175, 176, 179, 180, 181, 182, 185, 186, 191, 193, 194, 195, 197, 200, 201, 204, 205, 206, 207, 209, 210, 215, 216, 218, 225, 226, 227, 228, 230, 245, 249, 253, 255, 256, 269, 270, 287, 289, 291, 294, 295, 296, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 320, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 338, 339, 340, 341, 342, 343, 344, 377, 400, 412, 414], "envwithdynamicspec": 3, "max_count": 3, "float": [3, 14, 15, 17, 24, 27, 28, 31, 33, 38, 45, 51, 54, 55, 58, 59, 64, 65, 71, 86, 98, 99, 101, 122, 126, 144, 145, 151, 152, 162, 165, 169, 173, 175, 178, 186, 188, 192, 197, 198, 199, 205, 206, 208, 209, 210, 212, 214, 216, 218, 227, 228, 229, 231, 240, 243, 247, 250, 251, 254, 257, 258, 262, 263, 273, 274, 277, 279, 295, 299, 302, 304, 305, 306, 307, 308, 309, 313, 314, 315, 318, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 339, 345, 346, 347, 348, 349, 350, 351, 352, 353, 375, 400, 401, 416, 419], "_set_se": [3, 163, 166, 175, 178, 194, 414], "lazystackedtensordict": [3, 61, 80, 122, 126, 138, 144, 145, 151, 152, 411], "float32": [3, 14, 15, 16, 28, 31, 35, 50, 51, 52, 54, 57, 58, 62, 64, 65, 66, 69, 70, 71, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 94, 98, 99, 114, 118, 119, 122, 125, 126, 127, 131, 132, 138, 141, 142, 143, 144, 145, 149, 150, 151, 152, 153, 155, 156, 162, 166, 175, 178, 179, 180, 188, 190, 194, 195, 197, 201, 204, 206, 208, 223, 225, 230, 231, 241, 242, 249, 253, 256, 269, 270, 271, 272, 280, 283, 284, 285, 286, 287, 288, 291, 292, 293, 294, 295, 298, 300, 303, 306, 307, 309, 310, 311, 313, 314, 315, 322, 326, 327, 328, 329, 331, 332, 338, 395, 402, 403, 404, 405, 406, 407, 408, 411, 412, 413, 414, 415, 416, 418, 419], "exclusive_field": [3, 80, 411], "stack_dim": [3, 80, 411], "dramat": 3, "carefulli": [3, 412, 413, 419], "against": [3, 5, 7, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 54, 55, 59, 60, 61, 64, 69, 71, 72, 73, 74, 75, 122, 126, 144, 145, 151, 152, 218, 220, 283, 288, 289, 292, 293, 294, 295, 296, 307, 309, 322, 327, 329, 331, 332, 402, 412, 413], "plain": [3, 8, 404], "larg": [3, 4, 30, 50, 52, 57, 175, 178, 212, 306, 308, 323, 326, 328, 401, 402, 412, 413, 416], "expens": [3, 99, 106, 107, 358, 416], "absent": [3, 31, 32, 39, 61, 64, 82, 122, 126, 144, 145, 151, 152, 210], "torchvis": [3, 11, 192, 214, 362, 412, 418, 419], "base_env": [3, 119, 122, 126, 127, 132, 143, 144, 145, 151, 152, 154, 162, 163, 166, 172, 175, 177, 178, 186, 190, 194, 196, 202, 204, 206, 207, 210, 218, 360, 400, 401, 402, 412, 415, 418, 419], "callabl": [3, 12, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 54, 55, 56, 59, 60, 61, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 122, 123, 126, 138, 144, 145, 151, 152, 161, 164, 166, 173, 179, 206, 210, 218, 232, 233, 254, 261, 305, 324, 358, 382, 383, 389, 390, 391, 401, 416], "bring": [3, 402, 404, 419], "signific": [3, 5, 8, 402, 419], "kind": [3, 56, 69, 225, 406, 412, 416], "consult": 3, "interest": [3, 292, 296, 395, 401, 402, 404, 413, 414, 419], "resize_par": 3, "easi": [3, 5, 11, 80, 85, 120, 121, 122, 126, 131, 132, 144, 145, 151, 152, 227, 228, 245, 246, 269, 270, 395, 396, 400, 401, 402, 413, 415, 416, 419], "revers": [3, 251], "order": [3, 11, 16, 27, 38, 45, 51, 54, 55, 56, 59, 64, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 105, 107, 122, 126, 144, 145, 151, 152, 170, 175, 178, 190, 210, 218, 283, 288, 295, 297, 298, 300, 306, 307, 309, 310, 314, 315, 322, 326, 327, 328, 329, 331, 332, 401, 412, 413], "chain": [3, 50, 51, 52, 56, 57, 65, 66, 80, 82, 83, 84, 85, 86, 87, 88, 173, 177, 232, 233, 298, 419], "in_keys_inv": [3, 159, 172, 175, 176, 178, 188, 189, 190, 194, 195, 197, 202, 209, 211, 400, 411, 414, 419], "append_transform": [3, 51, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 122, 126, 144, 145, 151, 152, 159, 162, 168, 192, 206, 210, 212, 216, 231, 249, 253, 358, 400, 403, 412, 414, 416, 418, 419], "doubletofloat": [3, 400, 402, 411], "float64": [3, 27, 38, 45, 54, 55, 59, 64, 80, 81, 82, 83, 84, 85, 86, 87, 88, 120, 121, 122, 126, 136, 137, 144, 145, 151, 152, 162, 173, 175, 178, 192, 206, 209, 210, 212, 214, 218, 295, 411, 419], "constrast": 3, "out_keys_inv": [3, 159, 172, 175, 176, 178, 188, 189, 190, 194, 195, 202, 209, 211, 414], "chang": [3, 5, 7, 11, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 54, 55, 56, 59, 60, 61, 64, 65, 66, 69, 71, 72, 73, 74, 75, 80, 93, 94, 95, 99, 105, 106, 108, 110, 114, 122, 126, 144, 145, 151, 152, 166, 173, 175, 176, 178, 180, 186, 194, 195, 201, 204, 209, 210, 216, 218, 251, 306, 307, 309, 310, 311, 313, 315, 316, 317, 322, 324, 326, 327, 328, 329, 331, 332, 338, 396, 400, 403, 412, 413, 414, 415, 416, 419], "regist": [3, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 54, 55, 56, 59, 60, 61, 64, 65, 66, 69, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 122, 125, 126, 127, 144, 145, 151, 152, 153, 154, 175, 178, 179, 200, 210, 218, 225, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 243, 244, 245, 247, 248, 249, 251, 252, 253, 254, 261, 264, 265, 266, 268, 269, 270, 273, 274, 276, 281, 287, 289, 291, 294, 299, 302, 306, 307, 309, 310, 311, 313, 315, 316, 317, 322, 324, 326, 327, 328, 329, 331, 332, 338, 358, 360, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 397, 400, 402, 404, 416], "manipul": [3, 4, 8, 120, 121, 192, 212, 419], "third_transform": 3, "unexpect": [3, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218, 419], "behviour": 3, "fortun": [3, 403, 404, 405, 408], "alreadi": [3, 8, 12, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 52, 54, 55, 57, 59, 60, 61, 64, 69, 70, 71, 72, 73, 74, 75, 80, 93, 122, 126, 144, 145, 151, 152, 206, 218, 226, 296, 340, 341, 342, 343, 400, 402, 408, 412, 413], "catfram": [3, 291, 401], "hold": [3, 336, 337, 414, 416], "notic": [3, 112, 169, 402, 409, 414], "parenthood": 3, "henc": [3, 51, 193, 226, 259, 395, 400, 402, 412, 413, 414], "transform1": 3, "transform2": 3, "transform3": 3, "last_two": 3, "isinst": [3, 144, 151, 358, 414], "discret": [3, 25, 26, 28, 30, 31, 34, 41, 42, 43, 44, 49, 71, 74, 75, 122, 125, 126, 127, 136, 137, 144, 145, 146, 147, 151, 152, 155, 156, 162, 177, 267, 272, 313, 314, 315, 316, 395, 401, 402, 405, 412, 413, 414, 419], "might": [3, 50, 52, 53, 57, 364, 394, 400, 404, 419], "action_mask": [3, 131, 132, 146, 147, 149, 150, 163], "unavail": [3, 146, 147], "probabl": [3, 4, 8, 58, 101, 104, 231, 240, 242, 245, 247, 249, 251, 253, 254, 257, 258, 267, 278, 279, 292, 296, 309, 395, 401, 405, 418], "probabilistictensordictmodul": [3, 186, 296, 297, 418], "tensordictsequenti": [3, 54, 64, 231, 245, 249, 253, 269, 288, 291, 297, 303, 395, 400, 401, 403, 405, 409, 411, 412, 415, 418], "maskedcategor": [3, 258, 393], "linear": [3, 14, 15, 16, 17, 21, 27, 38, 45, 54, 55, 59, 64, 118, 119, 122, 126, 138, 144, 145, 151, 152, 173, 186, 192, 206, 209, 210, 212, 214, 218, 230, 231, 232, 233, 235, 236, 237, 238, 242, 244, 245, 246, 254, 256, 259, 260, 262, 263, 264, 269, 270, 272, 273, 274, 283, 284, 285, 286, 290, 291, 292, 293, 295, 298, 300, 306, 307, 309, 310, 311, 313, 314, 315, 316, 317, 322, 324, 326, 327, 328, 329, 331, 332, 338, 340, 341, 342, 343, 387, 395, 401, 411, 415, 418], "in_feat": 3, "out_feat": 3, "logit": [3, 52, 58, 241, 257, 258, 267, 289, 292, 314, 315, 395], "dist": [3, 10, 257, 258, 267, 405], "distribution_class": [3, 186, 284, 285, 286, 287, 292, 296, 298, 306, 307, 309, 314, 315, 322, 326, 327, 328, 329, 395, 400, 402, 405, 412, 413, 418], "wrap": [3, 5, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 33, 38, 45, 54, 55, 58, 59, 64, 84, 118, 119, 122, 126, 127, 131, 132, 137, 140, 142, 143, 144, 145, 146, 147, 151, 152, 154, 156, 218, 220, 228, 246, 249, 253, 270, 281, 284, 285, 286, 291, 293, 301, 324, 338, 395, 400, 401, 402, 403, 406, 409, 412, 413, 419], "actionmask": 3, "your_base_env": 3, "mask_kei": [3, 23, 163, 193, 218], "enviorn": [3, 136, 146, 147, 155, 156], "itself": [3, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 158, 165, 218, 324, 331, 402, 404], "ey": 3, "report": [3, 118, 119, 131, 132, 408], "foremost": 3, "callback": [3, 122, 126, 144, 145, 151, 152, 413], "ad": [3, 4, 16, 23, 27, 38, 45, 51, 54, 55, 56, 59, 64, 65, 66, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 98, 99, 101, 122, 126, 144, 145, 151, 152, 200, 210, 218, 229, 262, 263, 269, 270, 306, 308, 309, 311, 316, 323, 326, 329, 338, 401, 403, 405, 412, 416, 419], "track": [3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 66, 98, 99, 105, 200, 216, 218, 269, 270, 291, 365, 370, 401, 403, 404, 407, 413, 414, 416], "tensordictrecord": [3, 393], "videorecord": [3, 11, 358, 393, 402, 408, 409, 412], "csvlogger": [3, 11, 358, 360, 393, 401, 408, 409, 412], "wandblogg": [3, 393, 408], "tensorboardlogg": [3, 387, 393, 408], "tag": [3, 7, 11, 358, 360, 362, 365, 391, 408, 409, 412], "mp4": [3, 358, 360, 362, 409, 412], "video_format": [3, 358, 360, 362, 409, 412], "whc": 3, "cwh": 3, "exp": [3, 264, 305], "al": [3, 24, 125, 127, 179, 190, 230, 419], "pong": [3, 80, 140, 190, 419], "v5": [3, 125, 127, 140, 179, 190, 419], "cach": [3, 50, 52, 70, 80, 82, 83, 84, 86, 87, 88, 89, 99, 106, 122, 126, 144, 145, 151, 152, 165, 175, 178, 192, 210, 214, 225, 369, 415], "grow": 3, "until": [3, 7, 21, 207, 209, 218, 402, 403, 409, 412, 413], "dumpi": 3, "tediou": [3, 404], "workspac": [3, 122, 126, 144, 145, 151, 152], "pixelrendertransform": [3, 393, 412], "stream": [3, 86], "alik": [3, 358], "envcreat": [3, 16, 22, 144, 151, 358, 387, 388, 391, 393, 400, 401, 418, 419], "render_mod": [3, 358, 414], "rgb_arrai": [3, 358, 412, 413, 414], "uncom": [3, 408], "line": [3, 7, 27, 38, 45, 54, 55, 59, 64, 80, 122, 126, 144, 145, 151, 152, 218, 401, 408, 412, 413, 419], "comment": [3, 397, 401, 418], "pixels_record": [3, 358], "close": [3, 16, 126, 139, 186, 306, 308, 323, 326, 358, 400, 401, 404, 411, 412, 414, 418], "mission": 3, "irrespect": [3, 295, 296], "dmcontrol": [3, 122, 126, 144, 145, 151, 152], "jumanji": [3, 122, 126, 131, 132, 144, 145, 151, 152], "special": [3, 72, 74, 393, 395, 400, 403, 419], "framework": [3, 4, 9, 22, 118, 119, 122, 126, 131, 132, 138, 144, 145, 151, 152, 247, 418, 419], "Its": [3, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 173, 192, 206, 209, 210, 212, 214, 216, 218, 295, 344], "success": [3, 80, 81, 82, 83, 84, 85, 86, 87, 88, 169, 209, 245, 309, 331, 401, 407, 409, 414, 416, 418], "foundat": [3, 5, 146, 147, 402, 413], "inspir": [3, 414], "gone": [3, 4, 5, 291], "hard": [3, 7, 112, 120, 121, 144, 321, 401, 419], "prefer": [3, 14, 15, 17, 20, 23, 24, 51, 56, 65, 66, 193, 201, 326, 331, 374, 395, 402, 412, 413, 416], "maintain": [3, 5, 9, 33, 414], "concomittantli": 3, "problem": [3, 7, 8, 9, 16, 401, 402, 403, 407, 412, 413, 414, 416, 419], "decor": [3, 8, 12, 161, 324, 340, 341, 342, 343, 418], "relev": [3, 58, 340, 341, 342, 343, 344, 367, 414], "gym_backend": [3, 161, 393], "env1": [3, 231, 411], "venv": 3, "python3": [3, 6, 7, 10], "site": [3, 6, 7, 87, 161], "env2": [3, 411], "_env": [3, 6, 125, 419], "classic_control": 3, "pendulumenv": [3, 393, 414], "0x15147e190": 3, "0x1629916a0": 3, "mo_gymnasium": [3, 134, 158], "handi": [3, 122, 126, 144, 145, 151, 152, 408], "side": [3, 4, 419], "v0": [3, 14, 15, 122, 126, 128, 131, 132, 133, 134, 144, 145, 151, 152, 173, 210, 216, 387], "26": [3, 122, 126, 144, 145, 151, 152, 399, 400, 401, 402, 406, 412, 414, 415, 417], "fun": [3, 12, 161, 402, 412, 413], "reveal": 4, "bug": [4, 418], "curv": 4, "exploit": [4, 405], "cv": 4, "flip": 4, "correspondingli": 4, "invers": [4, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 51, 56, 60, 61, 65, 66, 69, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 169, 175, 178, 180, 188, 195, 197, 218, 304, 314, 322, 393, 414], "prescript": 4, "tune": [4, 24, 186, 412, 413, 415], "coeffici": [4, 24, 33, 58, 186, 413], "bonu": [4, 306, 308, 323, 326], "beta": [4, 51, 65, 98, 99, 314, 322, 323, 400, 401, 416, 418], "reduc": [4, 6, 30, 112, 205, 229, 278, 393, 401, 412], "downstream": [4, 396, 400], "formul": [4, 412, 413], "ob": [4, 8, 23, 31, 32, 39, 51, 56, 61, 64, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 98, 101, 106, 107, 112, 122, 126, 144, 145, 151, 152, 163, 165, 175, 176, 178, 188, 202, 208, 223, 225, 235, 236, 237, 238, 259, 260, 261, 293, 300, 307, 309, 310, 315, 322, 327, 329, 331, 332, 340, 341, 342, 343, 401, 411, 412, 414, 416, 418, 419], "rate": [4, 11, 80, 216, 339, 401, 402, 412, 413], "gradient": [4, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 210, 218, 250, 258, 263, 267, 278, 279, 306, 308, 309, 310, 314, 315, 320, 322, 323, 324, 326, 327, 328, 329, 331, 332, 339, 340, 341, 342, 343, 377, 400, 402, 412, 413, 414], "easier": [4, 55, 395, 400], "local": [4, 7, 10, 16, 21, 27, 38, 45, 54, 55, 59, 64, 99, 106, 122, 126, 144, 145, 151, 152, 210, 218, 259, 260, 271, 280, 338, 365, 367, 408, 409, 412, 413], "optima": 4, "sens": [4, 50, 52, 57, 407, 414], "product": [4, 9, 247, 248, 251, 252, 389, 390], "sum": [4, 21, 27, 43, 64, 112, 118, 119, 120, 121, 125, 127, 128, 131, 132, 139, 140, 148, 168, 200, 257, 258, 278, 280, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 320, 322, 323, 325, 326, 327, 328, 329, 331, 332, 339, 346, 396, 400, 401, 402, 403, 406, 409, 412, 413, 414, 419], "stat": [4, 188, 216, 381, 391, 401, 402], "w": [4, 101, 142, 143, 169, 171, 174, 196, 208, 247, 269, 270, 360, 401, 403, 416], "yield": [4, 14, 15, 16, 21, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218, 324, 400, 406], "insight": 4, "auxiliari": [4, 406], "credit": 4, "futur": [4, 23, 27, 38, 45, 50, 52, 54, 55, 57, 59, 64, 90, 91, 97, 122, 126, 144, 145, 151, 152, 192, 210, 214, 218, 254, 306, 307, 309, 310, 311, 313, 315, 316, 317, 322, 324, 326, 327, 328, 329, 331, 332, 338, 394, 418], "past": [4, 291, 401, 416], "spars": [4, 403], "intermedi": [4, 14, 15, 54, 64, 168, 231, 249, 253, 289, 400, 415], "instrument": 4, "greatli": 4, "soccer": 4, "kick": 4, "ball": 4, "likelihood": [4, 400], "discov": 4, "score": [4, 58], "undesir": 4, "unintention": 4, "valuabl": 4, "idiosyncrat": 4, "subtask": 4, "hierarch": [4, 418], "select": [4, 51, 54, 56, 64, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 136, 137, 146, 147, 155, 156, 163, 165, 166, 168, 169, 170, 173, 175, 176, 178, 179, 180, 181, 182, 183, 185, 186, 187, 191, 193, 194, 195, 197, 200, 201, 204, 205, 206, 207, 209, 212, 213, 215, 216, 218, 219, 230, 249, 253, 288, 293, 376, 400, 404, 416], "explicit": [4, 12, 70, 101, 416], "mechan": [4, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 210, 218, 401, 406, 414], "curios": 4, "magnitudin": 4, "domin": 4, "smaller": [4, 24, 122, 126, 144, 145, 151, 152, 251, 314, 322, 402, 413], "addition": 4, "timestep": [4, 58, 82, 197, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 412, 413], "realli": 4, "huge": [4, 260, 403], "std": [4, 188, 216, 227, 228, 264, 268, 400, 419], "torchrl": [4, 5, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 399, 403, 404, 406, 407, 408, 409, 410, 411, 415, 416, 417], "initi": [4, 7, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 30, 34, 38, 41, 42, 43, 44, 45, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 64, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 112, 122, 126, 142, 143, 144, 145, 151, 152, 153, 168, 188, 192, 206, 209, 210, 212, 217, 218, 227, 228, 229, 230, 245, 246, 247, 248, 251, 252, 256, 259, 260, 261, 262, 263, 269, 270, 291, 306, 307, 309, 310, 311, 313, 315, 316, 317, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 338, 391, 395, 396, 400, 401, 403, 404, 405, 407, 412, 414, 419], "estim": [4, 80, 99, 106, 107, 179, 186, 235, 278, 284, 285, 286, 306, 307, 308, 309, 310, 311, 313, 315, 316, 317, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 338, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 396, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 418, 419], "unseen": 4, "extrins": 4, "wrong": [4, 99, 106], "bonus": 4, "denser": 4, "prior": [4, 59, 274, 318, 413], "freshli": 4, "drop": [4, 105, 107, 225], "meant": [4, 45, 138], "encourag": [4, 144, 400, 401, 416], "measur": [4, 93, 94, 114, 118, 119, 131, 132, 402, 407], "novelti": 4, "revisit": 4, "previous": [4, 402, 419], "diminish": 4, "decreas": [4, 24, 405], "ideal": [4, 188, 414], "down": [4, 14, 15, 16, 17, 396, 403, 404], "anyth": [4, 14, 15, 16, 17, 18, 19, 20, 21], "distil": 4, "nois": [4, 217, 263, 269, 270, 282, 327, 331, 332, 373, 391, 400, 412], "exploratori": [4, 306, 308, 323, 326], "misalign": 4, "trade": [4, 405], "unavoid": 4, "divers": [4, 144, 151], "bootstrap": [4, 316, 341, 347, 348, 400, 403], "noisi": [4, 262, 263, 282, 395], "unstabl": [4, 250, 278, 279], "inher": [4, 306, 326], "stochast": [4, 186, 243, 263, 265, 274, 307, 309, 312, 314, 315, 320, 322, 325, 327, 329, 395, 402, 405, 413], "enemi": 4, "pomdp": [4, 416], "loos": [4, 395, 401, 402], "nonexist": 4, "architectur": [4, 239, 406, 412, 413], "sequenc": [4, 14, 15, 16, 17, 24, 31, 32, 39, 41, 43, 51, 53, 54, 56, 58, 61, 64, 67, 70, 86, 89, 92, 101, 102, 104, 110, 113, 116, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128, 131, 132, 139, 140, 144, 145, 148, 151, 152, 159, 167, 168, 169, 170, 171, 174, 175, 177, 178, 182, 184, 188, 189, 193, 194, 195, 196, 197, 198, 199, 200, 205, 207, 208, 209, 216, 232, 233, 240, 242, 247, 251, 254, 257, 258, 259, 260, 267, 272, 276, 287, 297, 298, 312, 359, 360, 372, 373, 374, 376, 377, 395, 400, 402, 403, 411, 412, 413, 419], "lstm": [4, 206, 252, 253, 264], "rel": [4, 101, 206, 240, 277, 400, 401, 412, 413, 416], "tend": 4, "stabl": [4, 9, 10, 141], "compens": 4, "descent": [4, 263], "minimum": [4, 71, 144, 151, 198, 243, 264, 277, 278, 279, 299, 302, 305, 307, 309, 315, 324, 325, 329, 368, 400, 402, 409, 412, 413], "manual": [4, 11, 18, 20, 21, 51, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 126, 127, 400, 403, 416], "deviat": [4, 188, 216, 227, 228, 230, 243, 256, 262, 263, 268, 326, 331, 332, 400, 405, 413], "radic": 4, "begin": [4, 14, 15, 16, 17, 18, 19, 20, 21, 99, 106, 165, 247, 248, 251, 252, 404, 405, 406, 407, 408, 409], "stabil": [4, 183, 306, 308, 323, 326, 328], "stage": [4, 400, 414], "never": [4, 14, 15, 17, 28, 71, 99, 407], "prevent": [4, 25, 26, 30, 31, 32, 34, 39, 41, 42, 43, 44, 49, 61, 91, 216, 250, 278, 279, 306, 308, 323, 326, 328, 375, 408, 416], "entir": [4, 86, 122, 126, 144, 145, 151, 152, 259, 402, 404, 414, 416], "submit": [4, 125, 166, 394, 418], "system": [4, 5, 91, 402, 412, 413, 414], "adequ": [4, 220, 402, 412, 413], "infeas": 4, "allevi": [4, 395], "prune": 4, "fire": [4, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "illeg": 4, "chess": [4, 142, 143], "grasp": 4, "top": [4, 112, 118, 119, 131, 132, 174, 230, 256, 405], "wherein": 4, "cumul": [4, 200, 205, 230, 346, 402], "q": [4, 9, 122, 126, 144, 145, 151, 152, 235, 236, 237, 238, 241, 242, 244, 271, 272, 280, 286, 289, 293, 294, 307, 309, 310, 311, 313, 314, 315, 316, 321, 322, 327, 329, 331, 332, 338, 393, 400, 406], "flow": [4, 400, 402, 412, 413, 414, 416], "reparameter": [4, 240, 258, 267], "soft": [4, 321, 329, 330, 412], "critic": [4, 8, 284, 290, 306, 308, 309, 310, 314, 315, 322, 323, 326, 327, 328, 329, 331, 332, 400, 406], "clip": [4, 58, 172, 198, 306, 308, 323, 326, 328, 331, 332, 377, 402, 413, 414], "oppos": [4, 70], "incorrect": 4, "thought": [4, 122, 126, 144, 145, 151, 152], "region": 4, "squash": [4, 403, 418], "tanh": [4, 232, 233, 247, 248, 250, 251, 252, 254, 260, 277, 278, 279, 299, 402, 405, 412, 413, 414, 415, 418], "prob": [4, 257, 258, 267, 402, 413], "rememb": [4, 412], "remap": 4, "origin": [4, 8, 50, 52, 54, 57, 58, 64, 130, 176, 177, 186, 192, 210, 214, 218, 247, 292, 295, 296, 307, 309, 321, 322, 324, 326, 327, 329, 331, 332, 400, 411, 414, 419], "histor": 5, "ceas": 5, "farama": [5, 84, 133, 134, 146, 147, 402, 414], "best": [5, 9, 130, 249, 253, 412, 413, 416, 418], "gymwrapp": [5, 122, 126, 144, 145, 151, 152, 180, 201, 204, 215, 393, 402, 418], "feel": [5, 394, 409, 418], "free": [5, 7, 175, 178, 306, 318, 326, 397, 402, 409, 413, 418], "gladli": 5, "prepar": [6, 37, 83, 402], "conda": [6, 7, 394], "cmake": 6, "activ": [6, 7, 9, 232, 233, 239, 243, 254, 259, 260, 308, 323, 326, 395, 414, 418], "sim": 6, "bullet": 6, "headless": [6, 7], "cluster": [6, 7, 8, 18, 21, 83, 394], "withbullet": 6, "forg": [6, 7], "aihabitat": [6, 128], "y": [6, 7, 54, 56, 64, 141, 244, 259, 281, 400, 413, 416], "facebookresearch": [6, 83, 128], "subdirectori": 6, "verbos": [6, 409], "export": [6, 7], "magnum_log": 6, "quiet": 6, "habitat_sim_log": 6, "remov": [6, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 52, 54, 55, 57, 59, 60, 61, 64, 69, 71, 72, 73, 74, 75, 77, 122, 126, 144, 145, 151, 152, 194, 203, 218, 324, 412, 413, 418, 419], "command": [6, 7, 10, 152, 402, 412, 413, 414, 419], "readm": [6, 7, 155], "md": [6, 7], "habitatenv": [6, 393], "_has_habitat": 6, "available_env": [6, 118, 119, 120, 121, 122, 125, 126, 127, 128, 131, 132, 133, 136, 137, 141, 142, 143, 144, 145, 148, 149, 150, 151, 152, 153, 154, 155, 156, 419], "startswith": [6, 231, 396, 400, 406], "oserror": 6, "libllvmlit": 6, "ionstal": 6, "pointer": [6, 123, 324, 400], "env_nam": [6, 118, 120, 122, 125, 126, 128, 131, 133, 139, 144, 145, 148, 151, 152, 400, 402, 419], "llvmlite": 6, "config": [6, 7, 192, 214, 234, 239, 268, 381, 382, 383, 385, 388], "var": [6, 7, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 210, 218, 309, 324, 329], "ld_preload": [6, 7], "bind": 6, "deactiv": [6, 7, 288, 324], "importerror": [6, 7, 10], "usr": [6, 7, 10], "x86_64": [6, 7], "linux": [6, 7], "gnu": [6, 7], "libopengl": [6, 7], "undefin": [6, 7, 10, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 210, 218, 309, 324, 329, 416], "symbol": [6, 7, 10], "_glapi_tls_curr": [6, 7], "link": [6, 7, 122, 401, 409], "mujoco_env": [6, 7], "libglvnd": [6, 7], "glx": [6, 7], "cos7": [6, 7], "reinstal": [6, 7], "xvfbwrapper": [6, 7], "sysroot": [6, 7], "lib64": [6, 7], "libgldispatch": [6, 7], "offici": [7, 82], "stand": [7, 36, 120, 121, 144, 151, 411, 414, 419], "joint": [7, 401], "contact": [7, 53, 412], "engin": [7, 148, 414], "biomechan": 7, "graphic": 7, "anim": [7, 413], "area": 7, "demand": [7, 408, 419], "fast": [7, 9, 118, 119, 195, 225, 327, 400, 401, 402], "articul": 7, "acquir": [7, 402], "deepmind": [7, 8, 9, 86, 120, 121, 122, 126, 136, 137, 142, 143, 144, 145, 151, 152, 179, 402, 404], "whomev": 7, "licenc": 7, "incorpor": [7, 122, 126, 144, 145, 151, 152, 227, 228, 245, 246, 269, 270, 331, 403, 405, 414], "relianc": 7, "obsolet": 7, "legaci": [7, 23], "pro": [7, 394], "tip": [7, 394], "glfw": [7, 400], "osmesa": 7, "egl": 7, "advic": [7, 86, 419], "sudo": [7, 394], "apt": [7, 413], "libglfw3": 7, "libglew2": 7, "libgl1": 7, "mesa": 7, "libosmesa6": 7, "workflow": [7, 284, 285, 286], "glew": 7, "mesalib": 7, "anaconda": 7, "libgl": 7, "cos6": 7, "menpo": 7, "glfw3": 7, "mujoco_gl": 7, "pyopengl_platform": 7, "mkdir": 7, "earlier": [7, 400, 402, 403, 412, 413, 416], "roboti": 7, "html": [7, 14, 15, 139, 141, 142, 143], "wget": 7, "mujoco210": 7, "tar": [7, 83], "gz": 7, "xf": 7, "charg": [7, 14, 15, 17, 144, 151], "mjkei": 7, "txt": 7, "mjlib_path": 7, "home": [7, 50, 52, 70, 89], "bin": [7, 242, 289, 395], "libmujoco210": 7, "ld_library_path": 7, "mujoco_py_mujoco_path": 7, "mujoco_py_mjkey_path": 7, "reload": 7, "later": [7, 238, 292, 296, 400, 402, 416], "nvidia": [7, 130], "older": [7, 12], "hack": [7, 400], "adatp": 7, "script": [7, 83, 220, 387, 391, 395, 396, 397, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 418, 419], "unnot": [7, 193], "mujoco_pi": 7, "cymj": 7, "linuxgpuextensionbuild": 7, "filenam": [7, 91, 401, 416], "troubleshoot": 7, "gl": 7, "h": [7, 101, 169, 171, 174, 196, 208, 247, 248, 249, 251, 252, 253, 256, 360, 401, 403, 416], "eglshim": 7, "fatal": 7, "No": [7, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 30, 34, 43, 44, 49], "directori": [7, 50, 52, 57, 70, 80, 82, 83, 84, 86, 87, 88, 93, 365, 367, 397, 400, 405, 408, 412], "devel": 7, "ubuntu": [7, 130], "libglew": 7, "dev": 7, "cento": 7, "yum": 7, "glu": 7, "disappear": [7, 401, 403, 411], "libstdc": 7, "glibcxx_3": 7, "29": [7, 401, 414], "compil": [7, 14, 15, 16, 23, 27, 38, 45, 54, 55, 59, 64, 99, 106, 107, 122, 126, 144, 145, 151, 152, 218, 247, 248, 251, 252, 278], "libosmesa": 7, "libgcc": 7, "Then": [7, 14, 15, 16, 17, 18, 19, 20, 21, 215, 402, 411], "filenotfounderror": 7, "errno": 7, "patchelf": 7, "fatalerror": 7, "gladloadgl": 7, "mj_env": 7, "912": 7, "glfwerror": 7, "65537": 7, "sovl": 7, "myscript": 7, "runtimeerror": [7, 8, 27, 31, 32, 38, 39, 45, 54, 55, 59, 61, 64, 122, 126, 144, 145, 151, 152, 187, 210, 218, 309, 329, 396, 419], "job": [7, 18, 19, 20, 22, 56, 65, 66, 101, 416, 418], "slurm": 7, "mjrendercontext": 7, "pyx": 7, "46": [7, 118, 119, 399, 401, 403, 404, 405, 414, 417], "114": [7, 414], "_setup_opengl_context": 7, "opengl_context": 7, "130": [7, 403, 414], "offscreenopenglcontext": 7, "opengl": [7, 412, 413], "global": [7, 27, 38, 45, 54, 55, 56, 59, 64, 65, 66, 101, 122, 126, 144, 145, 146, 147, 151, 152, 218, 271, 280, 292, 296, 338, 397, 400, 412, 413], "cuda_visible_devic": 7, "id": [7, 23, 58, 99, 101, 106, 107, 122, 125, 126, 144, 145, 151, 152, 153, 154, 269, 270, 309, 327, 363, 367, 407, 416], "slurm_step_gpu": 7, "enviro": [7, 10], "black": [7, 412], "onscreen": 7, "101": [7, 414], "correctli": [7, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "lgl": 7, "libegl": 7, "x11": [7, 413], "xlib": 7, "libx11": 7, "xorg": 7, "sketch": [8, 397], "n_training_step": 8, "datapoint": [8, 70, 416], "n_data_per_train": 8, "no_grad": [8, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 186, 218, 247, 248, 251, 252, 340, 341, 342, 343, 402, 403, 413], "loss_fn": [8, 403, 406, 407, 418], "zero_grad": [8, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218, 397, 400, 402, 403, 406, 409, 412, 413, 414], "backpropag": [8, 118, 119, 131, 132, 144, 306, 307, 308, 314, 315, 316, 317, 318, 319, 322, 323, 324, 326, 327, 328, 329, 332, 338, 406, 413, 414], "differenti": [8, 70, 118, 119, 186, 309, 331, 340, 341, 342, 343, 403, 405, 406, 412, 413, 414], "denomin": 8, "artifact": 8, "numer": [8, 56, 126, 216, 250, 278, 279, 283, 288, 289, 292, 293, 294, 295, 296, 375, 402, 416, 419], "misconcept": 8, "freed": 8, "appear": [8, 11, 28, 71, 80, 86, 99, 106, 107, 414, 416], "compuat": 8, "fix": [8, 33, 144, 206, 307, 309, 325, 329, 401, 409, 414, 419], "retain_graph": [8, 118, 119], "discuss": [8, 9, 407, 412, 413], "inplac": [8, 27, 38, 45, 50, 52, 54, 55, 57, 59, 64, 122, 126, 144, 145, 151, 152, 218, 400], "forward": [8, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 45, 51, 54, 55, 56, 59, 64, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 122, 126, 144, 145, 151, 152, 163, 165, 166, 168, 169, 170, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 188, 191, 192, 193, 194, 195, 197, 200, 201, 204, 205, 206, 207, 209, 212, 213, 215, 216, 218, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 247, 248, 249, 251, 252, 253, 254, 255, 259, 260, 261, 262, 264, 265, 266, 268, 269, 270, 271, 273, 274, 276, 280, 281, 287, 289, 291, 292, 294, 295, 296, 299, 300, 302, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 338, 340, 341, 342, 343, 344, 393, 396, 414, 418], "submodul": [8, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 158, 206, 218, 249, 253, 303, 324], "param": [8, 27, 38, 45, 54, 55, 58, 59, 64, 122, 126, 138, 144, 145, 151, 152, 166, 173, 175, 176, 180, 186, 194, 195, 201, 204, 209, 218, 240, 242, 259, 260, 261, 277, 287, 292, 295, 298, 324, 334, 337, 340, 341, 342, 343, 344, 400, 409, 412, 413, 414, 415, 418], "grad": [8, 27, 38, 45, 54, 55, 59, 64, 118, 119, 122, 126, 144, 145, 151, 152, 218, 400, 402], "whose": [8, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 54, 55, 58, 59, 60, 61, 64, 69, 71, 72, 73, 74, 75, 122, 126, 144, 145, 146, 147, 151, 152, 173, 192, 206, 209, 210, 212, 214, 218, 264, 271, 295], "factor": [8, 11, 24, 45, 197, 218, 227, 228, 229, 245, 246, 250, 263, 269, 270, 278, 279, 307, 313, 316, 317, 319, 330, 346, 400, 401, 405, 409, 412, 413, 416, 419], "fit": [8, 12, 55, 188, 206, 396, 397, 400], "bottlneck": 8, "brax": [8, 118, 119, 122, 126, 144, 145, 151, 152, 195, 404, 419], "jax": [8, 12, 118, 119, 131, 132], "improperli": 8, "underli": [8, 122, 126, 144, 145, 151, 152, 324, 404, 406, 408, 414], "tedeiou": 8, "priorit": [8, 51, 65, 98, 99, 309, 310, 311, 313, 314, 315, 322, 327, 329, 331, 332, 400, 401, 407], "amount": [8, 269, 270, 401, 416], "costli": [8, 414], "constitut": [8, 401, 413, 414], "profil": 8, "frequent": [8, 416], "program": [8, 314, 322, 419], "functorch": [8, 10], "incl": 8, "suit": [8, 121, 402, 404, 418, 419], "mujoco_instal": 8, "valueerror": [8, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "bad": 8, "fds_to_keep": 8, "new_shap": 8, "permut": [8, 105, 190, 418, 419], "idea": [9, 327, 397, 403, 405, 412, 413], "introductori": 9, "intro": [9, 402, 403], "dai": [9, 418], "2022": [9, 10, 414, 418], "spin": [9, 120, 121, 419], "deep": [9, 169, 235, 236, 237, 238, 241, 269, 270, 306, 309, 321, 329, 330, 400, 412], "hug": 9, "syllabu": 9, "lectur": 9, "awesom": 9, "curat": 9, "succinct": [9, 405], "summari": [9, 188, 216, 400, 401, 402, 403], "reddit": 9, "reagent": 9, "orient": [9, 88, 419], "baselines3": 9, "tf": 9, "bandit": [9, 141], "tensorflow": [9, 257, 258], "kera": 9, "acm": 9, "dopamin": 9, "prototyp": [9, 409], "salina": 9, "tianshou": 9, "eleg": 9, "rlpyt": 9, "rllib": 9, "industri": [9, 418], "grade": 9, "factori": [9, 67, 400], "cherri": 9, "jaxrl": 9, "mbrl": [9, 138, 395], "rlmeta": 9, "light": 9, "elegantrl": 9, "cloud": 9, "mtrl": 9, "baselin": 9, "689": [10, 414], "_torchrl": 10, "_zn8pybind116detail11type_casterin2at6tensoreve4loadens_6handleeb": 10, "colab": [10, 402, 403, 412, 413], "notebook": [10, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419], "24": [10, 87, 107, 125, 139, 140, 291, 400, 401, 403, 412, 414], "pip3": [10, 400, 402, 403, 412, 413], "url": [10, 128], "org": [10, 14, 15, 24, 51, 83, 84, 86, 88, 98, 99, 118, 119, 120, 121, 128, 131, 132, 136, 137, 139, 140, 141, 148, 155, 156, 169, 192, 212, 229, 234, 235, 236, 237, 238, 239, 242, 243, 244, 251, 256, 257, 258, 263, 265, 266, 269, 270, 271, 273, 274, 280, 289, 306, 307, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 325, 326, 328, 329, 330, 331, 340, 345, 353, 392, 410, 415], "whl": 10, "u": [10, 85, 247, 248, 251, 252, 414], "upgrad": 10, "relas": 10, "lib_version_her": 10, "pyav": 11, "conveni": [11, 402, 412, 413, 414, 416], "power": [11, 401], "knob": 11, "dispos": 11, "clarifi": 11, "behind": [11, 393], "ultim": [11, 250, 278, 279], "ffmpeg": 11, "whatev": [11, 396, 400], "fed": [11, 413, 416], "feed": [11, 192, 214, 324, 395, 400, 412, 413, 416], "suppos": [11, 144, 373, 397, 419], "snippet": [11, 192, 212, 400], "gave": 11, "extrem": [11, 144, 151, 306, 308, 323, 326, 328], "blurri": 11, "stitch": 11, "exp_nam": [11, 360, 361, 362, 365, 366, 367, 387, 401, 408, 409], "my_exp": [11, 408], "pixels_onli": [11, 120, 121, 125, 127, 128, 148, 400, 401, 408, 409, 418, 419], "my_video": [11, 408], "record_env": [11, 408, 409], "codec": 11, "h264": 11, "crf": 11, "preset": 11, "qualiti": [11, 286, 395], "module_nam": [12, 324], "str": [12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 93, 98, 99, 101, 112, 118, 120, 121, 122, 124, 125, 126, 127, 128, 131, 136, 137, 139, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 156, 157, 158, 165, 169, 179, 185, 186, 192, 196, 204, 205, 210, 212, 214, 215, 216, 218, 226, 230, 232, 233, 234, 235, 236, 237, 238, 241, 242, 244, 249, 253, 254, 255, 256, 259, 260, 261, 262, 263, 264, 268, 271, 272, 280, 283, 288, 289, 292, 293, 294, 295, 296, 299, 300, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 335, 338, 339, 340, 341, 342, 343, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 381, 385, 391, 401, 402], "from_vers": 12, "to_vers": 12, "class_method": 12, "intersect": 12, "vs": [12, 249, 253, 418], "longer": [12, 401, 409, 412, 413, 416], "x": [12, 23, 45, 54, 55, 56, 58, 59, 64, 86, 107, 186, 208, 229, 231, 233, 242, 244, 247, 248, 249, 251, 252, 253, 254, 256, 259, 260, 281, 288, 292, 293, 302, 305, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 377, 400, 412, 414, 416, 418], "23": [12, 87, 107, 400, 401, 412, 414], "import_modul": 12, "get_class_that_defined_method": 12, "f": [12, 87, 118, 119, 126, 131, 132, 252, 305, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 400, 401, 402, 403, 409, 412, 413, 414, 416, 419], "classmethod": [12, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 52, 57, 60, 61, 64, 69, 71, 72, 73, 74, 75, 122, 126, 144, 145, 151, 152, 212, 234, 268], "module_set": 12, "setters_dict": 12, "dict": [12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 45, 47, 48, 50, 52, 54, 55, 56, 57, 59, 60, 61, 64, 69, 71, 72, 73, 74, 75, 87, 91, 99, 106, 107, 122, 123, 124, 125, 126, 127, 136, 137, 139, 142, 143, 144, 145, 146, 147, 151, 152, 153, 154, 155, 156, 157, 186, 206, 210, 215, 216, 218, 232, 233, 234, 235, 236, 237, 238, 239, 244, 254, 268, 292, 296, 309, 329, 331, 364, 365, 373, 382, 383, 389, 390, 391, 400, 401, 402, 416, 419], "setter": 12, "setter_dict": 12, "policy_weight": [13, 14, 15, 16, 17, 19, 20], "udpdat": [13, 14, 15, 16, 17, 19, 20], "create_env_fn": [14, 15, 16, 17, 18, 19, 20, 21, 123, 144, 151, 400, 418], "env_devic": [14, 15, 16, 17, 18, 19, 20, 21, 401], "create_env_kwarg": [14, 15, 16, 17, 21, 123, 139, 144, 151, 400, 419], "postproc": [14, 15, 16, 17, 18, 19, 20, 21, 45, 197, 401, 416], "interactiontyp": [14, 16, 17, 18, 19, 20, 21, 221, 224, 292, 296, 373], "preemptive_threshold": [14, 15, 17], "num_thread": [14, 15, 17, 50, 52, 57, 144, 151], "num_sub_thread": [14, 15, 17, 144, 151], "set_trunc": [14, 15, 16, 17, 122, 126, 144, 145, 151, 152], "use_buff": [14, 15, 16, 144, 151], "replay_buffer_chunk": 14, "trust_polici": [14, 15, 16, 122, 126, 144, 145, 151, 152], "compile_polici": [14, 15, 16], "cudagraph_polici": [14, 15, 16], "datacollector": [14, 15, 16, 17, 45, 296, 326, 402, 407, 416], "recept": 14, "safe": [14, 15, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75, 99, 106, 228, 270, 278, 283, 288, 289, 292, 293, 294, 295, 296, 298, 395, 418], "sota": [14, 15, 138, 183, 328, 368, 382, 400, 401, 418], "guard": [14, 15], "doc": [14, 15, 67, 128, 131, 132, 141, 148, 367, 401, 412, 413, 416, 419], "env_mak": [14, 15, 16, 21, 387, 419], "2000": [14, 15, 16, 45, 70, 129, 360, 402, 416], "50": [14, 15, 16, 21, 53, 58, 80, 88, 106, 107, 136, 137, 218, 400, 401, 402, 403, 412, 413, 414, 415, 416], "shutdown": [14, 15, 16, 17, 21, 166, 400, 418], "del": [14, 15, 16, 400, 401, 402, 411, 412, 418, 419], "int64": [14, 15, 16, 23, 25, 26, 30, 34, 35, 41, 42, 43, 44, 49, 50, 52, 53, 54, 57, 58, 62, 65, 67, 70, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 98, 122, 126, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 162, 166, 179, 190, 197, 204, 242, 269, 270, 272, 288, 289, 292, 293, 294, 395, 402, 403, 404, 405, 407, 408, 414, 416, 418], "tensordictmodulebas": [14, 15, 16, 17, 18, 19, 20, 21, 54, 64, 168, 281, 288, 291, 293, 403], "undergon": [14, 15, 16, 17, 18, 19, 20, 21, 70], "env_obs_kei": [14, 15, 16, 17, 18, 19, 20, 21], "lifespan": [14, 15, 16, 17, 18, 19, 20, 401], "divis": [14, 15, 16, 17, 18, 19, 20, 27, 80, 86, 99, 106, 107, 229, 413], "endless": [14, 15, 16, 17, 18, 19, 20], "fill": [14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75, 80, 126, 165, 206, 215, 253, 403, 414, 415], "sit": [14, 15, 16, 17, 18, 19, 20, 21, 379, 401], "cast": [14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 52, 54, 55, 57, 59, 60, 61, 64, 69, 71, 72, 73, 74, 75, 89, 118, 119, 120, 121, 122, 125, 126, 127, 131, 132, 139, 140, 142, 143, 144, 145, 148, 151, 152, 153, 154, 173, 175, 178, 186, 192, 206, 209, 210, 212, 214, 216, 218, 295, 412, 419], "span": [14, 15, 16, 17, 18, 19, 20, 21, 86, 99, 106], "n_step": [14, 15, 16, 17, 18, 19, 20, 21, 45, 218, 291, 401, 402, 412, 413], "mainli": [14, 15, 16, 17, 18, 19, 20, 21, 58, 367, 395, 412, 413, 414], "round": [14, 15, 16, 17, 18, 19, 20, 21, 80], "closest": [14, 15, 16, 17, 18, 19, 20, 21], "post": [14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 45, 54, 55, 59, 64, 84, 122, 126, 144, 145, 151, 152, 218], "explorationtyp": [14, 15, 16, 17, 18, 19, 20, 21, 292, 324, 373, 395, 400, 401, 402, 403, 405, 412, 418], "boolm": [14, 15, 17], "update_policy_weight_": [14, 15, 17], "async": [14, 15, 17, 18, 19, 20, 21, 215, 418], "ratio": [14, 15, 17, 58, 400, 402], "finish": [14, 15, 17, 21, 126, 197, 419], "rest": [14, 15, 17, 395, 402, 403, 412, 414, 418], "earli": [14, 15, 17, 45, 126, 204, 418], "safeti": [14, 15, 17, 138, 144, 151], "harm": [14, 15, 17, 144, 151], "exclus": [14, 15, 76, 77, 80, 86, 99, 106, 107, 166, 180, 182, 247, 249, 251, 253, 257, 258, 288, 289, 293, 294, 330, 331, 332, 340, 341, 342, 343, 344, 367, 391, 395], "add_truncated_kei": [14, 15, 16, 17, 122, 126, 144, 145, 151, 152, 210], "trust": [14, 15, 16, 122, 126, 136, 137, 144, 145, 151, 152, 253], "cudagraphmodul": [14, 15, 16, 122, 126, 144, 145, 151, 152], "behaviour": [14, 15, 16, 54, 64], "kwarg": [14, 15, 16, 17, 21, 26, 27, 28, 29, 31, 32, 34, 38, 39, 40, 42, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 61, 63, 64, 65, 66, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 91, 93, 94, 95, 97, 98, 99, 101, 106, 107, 108, 110, 112, 114, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 160, 163, 164, 166, 173, 192, 194, 203, 206, 209, 210, 211, 213, 214, 217, 218, 227, 228, 230, 231, 232, 233, 235, 236, 237, 238, 241, 244, 245, 246, 249, 250, 253, 254, 255, 256, 259, 260, 261, 267, 269, 270, 278, 279, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 334, 338, 339, 340, 341, 342, 343, 344, 358, 360, 364, 365, 367, 370, 377, 382, 383, 388, 389, 390, 396, 402, 413], "ordereddict": [14, 15, 16, 17, 21, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 210, 216, 218, 309, 329, 401], "form": [14, 15, 17, 27, 38, 45, 51, 54, 55, 56, 59, 64, 65, 66, 80, 82, 83, 84, 85, 86, 87, 88, 90, 91, 97, 122, 126, 144, 145, 151, 152, 216, 218, 247, 249, 251, 253, 305, 306, 308, 323, 326, 377, 395, 405, 413], "worker0": [14, 15, 17], "state_dict0": [14, 15, 17], "worker1": [14, 15, 17], "state_dict1": [14, 15, 17], "reset_idx": [14, 15, 17], "static_se": [14, 15, 16, 17, 21, 122, 126, 144, 145, 151, 152, 210], "integ": [14, 15, 16, 17, 23, 38, 41, 43, 45, 54, 55, 58, 59, 99, 106, 107, 108, 122, 126, 144, 145, 151, 152, 162, 165, 179, 183, 188, 204, 232, 233, 254, 259, 260, 309, 314, 322, 329, 416], "increment": [14, 15, 16, 17, 122, 126, 144, 145, 151, 152, 188, 323], "env_fn": [14, 15, 16, 17, 123, 389, 390], "env_fn_parallel": [14, 15, 16, 17], "300": [14, 15, 16, 17, 106, 107, 237, 238, 414], "out_se": [14, 15, 16, 17, 419], "shut": [14, 15, 16, 17], "irrevers": [14, 15, 17], "return_same_td": 16, "interruptor": 16, "cautious": [16, 326], "whole": [16, 27, 31, 32, 38, 39, 45, 54, 55, 59, 61, 64, 70, 122, 126, 144, 145, 151, 152, 210, 218, 292, 309, 329, 368, 400, 402], "_interruptor": 16, "start_collect": 16, "stop_collect": 16, "preeptiv": 16, "chunk": [16, 405], "policy_state_dict": 16, "env_state_dict": 16, "mere": 17, "exporationtyp": [18, 19, 20], "collector_class": [18, 19, 20, 21], "collector_kwarg": [18, 19, 20, 21], "num_workers_per_collector": [18, 19, 20, 21], "slurm_kwarg": [18, 19, 20], "update_after_each_batch": [18, 19, 20, 21], "max_weight_update_interv": [18, 19, 20, 21], "tcp_port": [18, 19, 20, 22], "deriv": [18, 19, 20, 21, 68, 377], "respect": [18, 19, 20, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 167, 173, 175, 178, 192, 193, 202, 206, 209, 210, 212, 214, 218, 247, 251, 259, 274, 295, 300, 306, 308, 323, 326, 328, 340, 342, 343, 372, 402, 403, 412, 413], "subnod": [18, 19, 20, 21], "readi": [18, 20, 21, 394, 401, 402, 405, 408, 411, 416], "fashion": [18, 20, 21, 50, 52, 57, 107], "executor": [18, 19, 20], "distributed_back": [18, 19], "ucc": [18, 19], "overwritten": [18, 19, 20, 21, 80, 83, 84, 86, 87, 88, 122, 126, 144, 145, 151, 152, 182], "submitit_delai": [18, 22], "former": [18, 19, 20, 23, 27, 38, 51, 54, 55, 56, 59, 64, 65, 66, 82, 122, 126, 144, 145, 151, 152, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 243, 244, 245, 247, 248, 249, 251, 252, 253, 254, 261, 264, 265, 266, 268, 269, 270, 273, 274, 276, 281, 287, 289, 291, 294, 299, 302, 400], "whilst": [18, 19, 20], "homonym": [18, 19, 20, 414], "visit": [18, 19, 20], "facebookincub": [18, 19, 20], "tcp": [18, 19, 20, 22], "port": [18, 19, 20, 22, 153], "10003": [18, 19, 20, 22], "worker_rank": [18, 19, 21], "update_interv": 19, "frequenc": [19, 400], "visible_devic": 20, "tensorpipe_opt": 20, "experiment": [20, 23, 80, 292, 296], "tensorpiperpcbackendopt": 20, "_td": [21, 123], "ray_init_config": 21, "remote_config": 21, "num_collector": [21, 389, 390, 400, 401], "coordin": [21, 174], "init": [21, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 216, 218, 259, 260, 261, 367, 401, 402], "autodetect": 21, "num_cpu": 21, "num_gpu": 21, "1024": [21, 239, 401, 416], "equat": [21, 54, 86, 126, 216, 269, 270, 305, 308, 330, 402, 404, 414], "exce": [21, 416], "indefinit": [21, 79], "raydistributedcollector": 21, "distributed_collector": 21, "10000": [21, 229, 377, 400, 402, 403], "add_collector": 21, "local_polici": 21, "remote_collector": 21, "stop_remote_collector": 21, "num_job": 22, "tcpport": 22, "submitit_main_conf": 22, "slurm_cpus_per_task": 22, "slurm_gpus_per_nod": 22, "slurm_partit": 22, "timeout_min": 22, "submitit_collection_conf": 22, "delai": [22, 331, 406], "jump": [22, 404], "host": [22, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 173, 192, 206, 209, 210, 212, 214, 218, 295], "satellit": 22, "rendezv": 22, "hang": 22, "forev": 22, "default_config": [22, 234, 239, 268, 287], "default_slurm_conf_main": 22, "default_slurm_conf": 22, "rollout_tensordict": 23, "_nestedkei": [23, 99, 106, 107], "nestedkei": [23, 25, 26, 28, 29, 30, 34, 35, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 52, 54, 57, 60, 61, 62, 64, 69, 70, 71, 72, 73, 74, 75, 99, 106, 107, 122, 126, 144, 145, 151, 152, 159, 162, 163, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 182, 184, 185, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 211, 212, 216, 218, 219, 225, 226, 227, 228, 231, 242, 245, 246, 269, 270, 272, 287, 291, 296, 311, 338, 358, 360], "as_nest": 23, "durat": [23, 413], "meta": [23, 50, 52, 57, 69, 82, 124, 128, 306, 308, 323, 326, 328, 397, 402, 412, 413, 416], "aren": [23, 205, 403], "eventu": [23, 271, 403, 414], "supersed": 23, "recov": [23, 82, 84, 86, 87, 88, 106, 107, 228, 246, 270, 297, 314, 322, 411], "layout": 23, "to_padded_tensor": 23, "nested_tensor": [23, 125, 127], "stride": [23, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218, 232, 233, 235, 236, 244, 259, 401, 412, 418], "jag": 23, "focu": [23, 400, 401, 402, 405, 406, 407, 412], "team": [23, 412, 413, 418], "cat": [23, 300, 307, 309, 310, 322, 327, 329, 331, 332, 412, 416, 418], "arang": [23, 99, 162, 242, 258, 288, 368, 395, 416], "obs_": 23, "trajectory_id": 23, "int32": [23, 27, 28, 66, 71, 80, 86, 106, 131, 132, 142, 143, 152, 223, 291, 416], "data_split": 23, "got": [23, 407], "init_kl_coef": 24, "horizon": [24, 136, 137, 155, 156, 230, 256, 402], "kl": [24, 33, 58, 186, 318, 323], "describ": [24, 69, 170, 209, 219, 277, 278, 311, 363, 396, 400, 402, 412, 413, 414, 419], "ziegler": 24, "et": [24, 230], "relax": [24, 358], "penalti": [24, 58, 320, 323], "strai": [24, 58], "greater": [24, 80, 99, 106, 107, 249, 253, 309, 400, 401, 418], "increas": [24, 91, 207, 269, 270, 412, 413], "pull": [24, 416], "toward": [24, 214], "aggress": 24, "kl_coef": [24, 33, 58], "arxiv": [24, 51, 83, 86, 88, 98, 99, 118, 119, 120, 121, 131, 132, 136, 137, 139, 140, 148, 155, 156, 169, 192, 212, 229, 234, 235, 236, 237, 238, 239, 242, 243, 244, 251, 256, 263, 265, 266, 269, 270, 271, 273, 274, 280, 289, 306, 307, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 325, 326, 329, 330, 331, 340, 345, 353, 415], "pdf": [24, 169, 234, 235, 236, 237, 238, 242, 269, 270, 289, 309, 316, 320, 327, 330, 331, 340, 345, 353], "1909": 24, "08593": 24, "lm": 24, "blob": 24, "master": [24, 412, 413], "lm_human_prefer": 24, "train_polici": 24, "kl_valu": 24, "coef": [24, 186], "newest": 24, "int8": [25, 122, 135, 146, 147, 167], "encod": [25, 26, 27, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 51, 60, 61, 65, 66, 69, 71, 72, 73, 74, 75, 118, 119, 122, 125, 127, 128, 131, 132, 139, 140, 142, 143, 148, 153, 154, 162, 177, 266, 267, 273, 305, 395, 401, 402, 403, 405, 414, 416], "null": [25, 28, 29, 31, 32, 39, 40, 47, 48, 51, 60, 61, 65, 69, 71, 72, 73, 74, 75, 98, 99, 167], "denot": [25, 413], "nmber": 25, "clariti": 25, "rand": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 51, 56, 60, 61, 65, 66, 69, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 118, 119, 131, 132, 138, 142, 143, 153, 154, 163, 166, 175, 178, 194, 219, 230, 256, 292, 306, 307, 309, 310, 311, 313, 314, 315, 322, 324, 326, 327, 329, 331, 332, 414, 418, 419], "assert_is_in": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75], "clear_device_": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75], "is_in": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75, 419], "ndarrai": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75, 126, 269, 270, 299, 358, 412], "ignore_devic": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75], "arrai": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 51, 58, 60, 61, 69, 71, 72, 73, 74, 75, 98, 122, 126, 127, 144, 145, 151, 152, 179, 247, 248, 251, 252, 400, 412, 416], "np": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75, 126, 299, 358, 412, 414], "broadcast": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75], "compliant": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75], "singleton": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75, 232, 233, 254, 275, 276], "start_dim": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75], "end_dim": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75], "implements_for_spec": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75], "torch_funct": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75], "tensor_to_index": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75], "make_neg_dim": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75], "convert": [25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 54, 55, 57, 59, 60, 61, 63, 64, 69, 70, 71, 72, 73, 74, 75, 118, 119, 122, 125, 126, 127, 128, 131, 132, 139, 140, 142, 143, 144, 145, 148, 151, 152, 153, 154, 173, 175, 178, 192, 206, 209, 210, 212, 214, 216, 218, 295, 305, 324, 400, 401, 402, 414, 416], "shortcut": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75, 414, 419], "ndimens": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75, 400], "violat": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75, 395], "proxi": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 52, 57, 60, 61, 69, 71, 72, 73, 74, 75, 258, 267, 292, 396], "project": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 55, 60, 61, 69, 71, 72, 73, 74, 75, 177, 227, 228, 251, 269, 270, 283, 288, 289, 292, 293, 294, 295, 296, 367, 395, 418, 419], "uniformli": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75, 100, 324, 419], "normal": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75, 122, 126, 144, 145, 151, 152, 188, 216, 227, 228, 229, 232, 233, 250, 254, 257, 258, 264, 278, 279, 292, 296, 308, 309, 323, 326, 373, 375, 391, 395, 397, 403, 405, 413, 419], "drawn": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75, 206, 245, 292, 296, 402, 412, 413], "dest": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 64, 69, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 192, 212, 214, 295], "to_categor": [25, 26, 30, 34, 41, 42, 43, 44, 49], "to_categorical_spec": [25, 26, 30, 34, 41, 42, 43, 44, 49], "to_numpi": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75, 122, 126, 144, 145, 151, 152], "transformed_in": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75, 209, 210, 264, 277, 391], "check_spec_encod": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75], "to_one_hot": [25, 26, 30, 34, 41, 42, 43, 44, 49], "hot": [25, 26, 30, 34, 41, 42, 43, 44, 49, 118, 119, 125, 127, 128, 131, 132, 136, 137, 139, 140, 142, 143, 146, 147, 148, 153, 154, 155, 156, 162, 163, 177, 242, 267, 272, 288, 289, 293, 294, 306, 307, 309, 310, 311, 313, 314, 315, 316, 317, 322, 324, 326, 327, 328, 329, 331, 332, 338, 403], "categ": [25, 26, 30, 34, 43, 44, 292], "categ_sampl": [25, 26, 30, 34, 43, 44, 49], "onehot_sampl": [25, 26, 30, 34, 43, 44], "to_one_hot_spec": [25, 26, 30, 34, 41, 42, 43, 44, 49], "categoricalbox": [25, 26, 30, 34, 43, 44, 49, 145, 405, 412, 413, 419], "type_check": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75], "update_mask": [25, 26, 30, 34, 41, 42, 43, 44, 49], "outcom": [25, 26, 30, 34, 41, 42, 43, 44, 49, 240, 277, 324, 412], "disabl": [25, 26, 27, 30, 34, 38, 41, 42, 43, 44, 45, 49, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 210, 218, 250, 279, 358, 400, 412], "unmask": [25, 26, 30, 34, 41, 42, 43, 44, 49], "ts": [25, 26, 30, 34, 41, 42, 43, 44, 49], "num_bit": 27, "convert_to_binari": 27, "decim": 27, "1001": 27, "bit": [27, 402, 403, 404, 412, 413, 416], "heavysid": 27, "binary_to_decim": 27, "add_modul": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "child": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218, 401], "fn": [27, 38, 45, 53, 54, 55, 59, 64, 80, 81, 82, 83, 84, 85, 86, 87, 88, 122, 126, 144, 145, 151, 152, 218, 264, 389, 390], "recurs": [27, 31, 32, 38, 39, 45, 54, 55, 59, 61, 64, 76, 77, 122, 126, 144, 145, 151, 152, 218, 324], "children": [27, 31, 32, 38, 39, 45, 54, 55, 59, 61, 64, 122, 126, 144, 145, 151, 152, 218], "init_weight": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "m": [27, 38, 41, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 177, 218, 231, 296, 395, 401, 414], "fill_": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218, 401, 403, 419], "net": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218, 236, 238, 241, 244, 260, 306, 307, 309, 315, 322, 326, 327, 328, 329, 387, 401, 414, 415, 418], "in_featur": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 173, 192, 206, 209, 210, 212, 214, 218, 232, 233, 235, 236, 237, 238, 244, 254, 259, 260, 262, 263, 284, 295, 303, 311, 313, 405, 406, 418], "out_featur": [27, 38, 45, 54, 55, 59, 64, 122, 126, 138, 144, 145, 151, 152, 173, 192, 206, 209, 210, 212, 214, 218, 230, 232, 233, 235, 236, 237, 238, 243, 244, 249, 253, 254, 256, 259, 260, 262, 263, 284, 288, 295, 303, 311, 313, 395, 400, 403, 405, 406, 409, 418], "bia": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 173, 192, 206, 209, 210, 212, 214, 218, 229, 232, 233, 235, 236, 237, 238, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 260, 262, 263, 264, 269, 270, 295, 302, 304, 305, 309, 324, 329, 396, 400, 401, 402, 403, 413, 418], "requires_grad": [27, 38, 45, 54, 55, 59, 64, 118, 119, 122, 126, 144, 145, 151, 152, 186, 210, 218, 309, 329], "bfloat16": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "datatyp": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218, 416], "member": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218, 324, 360], "xdoctest": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 173, 192, 206, 209, 210, 212, 214, 218, 295, 309, 324, 329], "buf": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "20l": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218, 324], "1l": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218, 324], "5l": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218, 324], "__call__": [27, 38, 45, 53, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218, 296, 397], "doubl": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 173, 175, 176, 178, 192, 206, 209, 210, 212, 214, 218, 295, 311, 316, 321, 327, 330, 338, 400, 401, 402, 403, 419], "eval": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 210, 216, 218, 395, 400, 401, 402], "evalu": [27, 38, 45, 54, 55, 59, 64, 122, 126, 127, 136, 137, 144, 145, 151, 152, 210, 218, 240, 257, 258, 267, 279, 327, 382, 383, 401, 402, 409], "dropout": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 210, 218, 231, 247, 249, 251, 253, 254, 395, 403], "batchnorm": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 210, 218, 229], "comparison": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 210, 218, 324, 400, 401], "similar": [27, 38, 45, 50, 52, 54, 55, 56, 57, 59, 64, 86, 122, 126, 144, 145, 146, 147, 151, 152, 173, 192, 206, 209, 210, 212, 213, 214, 216, 218, 284, 286, 292, 295, 296, 396, 400, 401, 402, 403, 405, 406, 407, 408, 414, 416, 419], "extra_repr": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "recip": [27, 38, 53, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 243, 244, 245, 247, 248, 249, 251, 252, 253, 254, 261, 264, 265, 266, 268, 269, 270, 273, 274, 276, 281, 287, 289, 291, 294, 299, 302], "silent": [27, 38, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 243, 244, 245, 247, 248, 249, 251, 252, 253, 254, 261, 264, 265, 266, 268, 269, 270, 273, 274, 276, 281, 287, 289, 291, 294, 299, 302], "get_buff": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "get_submodul": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "qualifi": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "referenc": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "attributeerror": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "resolv": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "someth": [27, 38, 45, 54, 55, 59, 64, 122, 126, 135, 144, 145, 151, 152, 218, 394, 401, 402, 414, 419], "get_extra_st": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 216, 218], "set_extra_st": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 216, 218], "picklabl": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 216, 218], "pickl": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 216, 218], "get_paramet": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "net_b": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "net_c": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "conv": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218, 232, 233, 401], "conv2d": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218, 233, 235, 236, 244, 259, 418], "kernel_s": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218, 232, 233, 235, 236, 244, 259, 265, 401, 418], "diagram": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "degre": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "named_modul": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "o": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218, 252], "half": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 173, 192, 206, 209, 210, 212, 214, 218, 295, 400], "ipu": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "strict": [27, 38, 45, 50, 52, 54, 55, 57, 59, 64, 122, 126, 144, 145, 151, 152, 210, 218, 309, 329], "descend": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 210, 218, 309, 329], "get_swap_module_params_on_convers": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 210, 218, 309, 329], "persist": [27, 36, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 210, 218, 225, 309, 329], "enforc": [27, 38, 45, 54, 55, 59, 64, 105, 122, 126, 144, 145, 151, 152, 210, 218, 297, 309, 329, 414], "preserv": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 210, 218, 309, 329], "missing_kei": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 210, 218, 309, 329], "unexpected_kei": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 210, 218, 309, 329], "namedtupl": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 210, 218, 309, 329], "l": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218, 247, 251, 339, 402, 414], "idx": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "mtia": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "named_buff": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "remove_dupl": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218, 324], "prepend": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218, 324], "running_var": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "named_children": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "conv4": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "conv5": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "memo": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "named_paramet": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 186, 218, 324], "register_backward_hook": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "removablehandl": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "favor": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218, 402], "register_full_backward_hook": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "register_buff": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "running_mean": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "alongsid": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218, 408], "num_featur": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218, 229], "register_forward_hook": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218, 242, 272], "with_kwarg": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "always_cal": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "register_module_forward_hook": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "regardless": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218, 308, 323, 326], "register_forward_pre_hook": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "invok": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "And": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218, 406], "forward_pr": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "register_module_forward_pre_hook": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "grad_input": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "grad_output": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "subsequ": [27, 38, 45, 54, 55, 59, 64, 80, 81, 82, 83, 84, 85, 86, 87, 88, 122, 126, 144, 145, 151, 152, 165, 218, 403, 412], "technic": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218, 401, 403, 405], "caller": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "register_module_full_backward_hook": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "register_full_backward_pre_hook": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "backward_pr": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "register_module_full_backward_pre_hook": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "register_load_state_dict_post_hook": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "incompatible_kei": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "thrown": [27, 38, 45, 54, 55, 59, 60, 64, 122, 126, 144, 145, 151, 152, 218, 416], "register_load_state_dict_pre_hook": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "local_metadata": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "error_msg": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "noqa": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "b950": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "register_modul": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218, 397], "alia": [27, 38, 45, 51, 54, 55, 56, 59, 64, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 94, 95, 101, 108, 110, 114, 122, 126, 144, 145, 151, 152, 218], "register_paramet": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "register_state_dict_post_hook": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "register_state_dict_pre_hook": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "keep_var": [27, 38, 45, 50, 52, 54, 55, 57, 59, 64, 122, 126, 144, 145, 151, 152, 210, 218, 309, 329], "requires_grad_": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "autograd": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 210, 218, 309, 329], "freez": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 216, 218], "finetun": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "gan": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "set_submodul": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "overid": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "share_memori": [27, 38, 45, 54, 55, 59, 64, 122, 123, 126, 144, 145, 151, 152, 218, 400], "share_memory_": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218, 418], "destin": [27, 38, 45, 50, 52, 54, 55, 57, 59, 64, 122, 126, 144, 145, 151, 152, 168, 175, 176, 178, 210, 212, 216, 218, 225, 309, 329, 360], "averag": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 210, 216, 218, 269, 270, 309, 317, 318, 329, 375, 400, 402], "shallow": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 210, 218, 309, 329, 403], "pleas": [27, 38, 45, 54, 55, 59, 64, 68, 84, 122, 125, 126, 144, 145, 146, 147, 151, 152, 166, 169, 207, 210, 218, 259, 260, 261, 309, 329, 394], "detach": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 210, 218, 309, 320, 324, 329, 331, 340, 341, 342, 343, 400], "non_block": [27, 38, 45, 50, 52, 54, 55, 57, 59, 64, 122, 126, 144, 145, 151, 152, 173, 192, 206, 209, 210, 212, 214, 218, 295, 403], "memory_format": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 173, 192, 206, 209, 210, 212, 214, 218, 295], "channels_last": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 173, 192, 206, 209, 210, 212, 214, 218, 295], "unchang": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 173, 177, 192, 206, 209, 210, 212, 214, 218, 245, 295, 374, 400, 416], "tri": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 173, 192, 206, 209, 210, 212, 214, 218, 295, 408], "pin": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 173, 192, 206, 209, 210, 212, 214, 218, 295], "4d": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 173, 192, 206, 209, 210, 212, 214, 218, 295], "ignore_w": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 173, 192, 206, 209, 210, 212, 214, 218, 295], "1913": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 173, 192, 206, 209, 210, 212, 214, 218, 295], "3420": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 173, 192, 206, 209, 210, 212, 214, 218, 295], "5113": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 173, 192, 206, 209, 210, 212, 214, 218, 295], "2325": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 173, 192, 206, 209, 210, 212, 214, 218, 295], "torch_doctest_cuda1": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 173, 192, 206, 209, 210, 212, 214, 218, 295], "gpu1": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 173, 192, 206, 209, 210, 212, 214, 218, 295], "1914": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 173, 192, 206, 209, 210, 212, 214, 218, 295], "5112": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 173, 192, 206, 209, 210, 212, 214, 218, 295, 414], "2324": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 173, 192, 206, 209, 210, 212, 214, 218, 295], "float16": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 173, 192, 206, 209, 210, 212, 214, 218, 248, 252, 295], "cdoubl": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 173, 192, 206, 209, 210, 212, 214, 218, 295], "3741": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 173, 192, 206, 209, 210, 212, 214, 218, 295], "j": [27, 38, 45, 51, 54, 55, 59, 64, 98, 99, 122, 126, 144, 145, 151, 152, 173, 192, 206, 209, 210, 212, 214, 218, 295, 397, 406], "2382": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 173, 192, 206, 209, 210, 212, 214, 218, 295], "5593": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 173, 192, 206, 209, 210, 212, 214, 218, 295, 414], "4443": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 173, 192, 206, 209, 210, 212, 214, 218, 295], "complex128": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 173, 192, 206, 209, 210, 212, 214, 218, 295], "6122": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 173, 192, 206, 209, 210, 212, 214, 218, 295], "1150": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 173, 192, 206, 209, 210, 212, 214, 218, 295], "to_empti": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "dst_type": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "xpu": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "set_to_non": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "upper": [28, 104, 187], "continuousbox": [28, 31, 71, 122, 126, 144, 145, 151, 152, 223, 402, 403, 412, 413, 414, 418, 419], "inst": 30, "descript": [31, 155, 165, 401, 402], "akin": 31, "unnam": 31, "compositespec": [31, 393, 414, 419], "constraint": [31, 138, 278, 402, 413], "pixels_spec": 31, "observation_vector_spec": 31, "composite_spec": 31, "observation_vector": [31, 170, 400], "_nodefault": [31, 32, 39, 50, 52, 57, 61], "is_empti": [31, 32, 39, 61, 414], "include_nest": [31, 32, 39, 61], "leaves_onli": [31, 32, 39, 61], "is_leaf": [31, 32, 39, 61], "_compositespecitemsview": [31, 32, 39, 61], "_compositespeckeysview": [31, 32, 39, 61], "reflect": [31, 32, 39, 61, 127, 146, 147, 215, 225, 324, 380, 401, 402, 403, 413], "lock_": [31, 32, 39, 61], "succeed": [31, 32, 39, 61], "selected_kei": [31, 32, 39, 61, 201, 400], "unlock_": [31, 32, 39, 61], "unlock": [31, 32, 39, 50, 52, 57, 61], "_compositespecvaluesview": [31, 32, 39, 61], "multipli": [33, 247, 251, 306, 307, 308, 309, 315, 323, 325, 326, 327, 329, 375, 400, 412], "calcul": [33, 58, 197, 247, 306, 308, 313, 323, 326, 328, 331], "shift_kei": [35, 37, 46, 62], "is_full_kei": [35, 37, 46, 62], "is_ful": [35, 37, 46, 62], "tempfil": [35, 50, 51, 52, 56, 57, 62, 65, 66, 70, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 101, 387, 400, 401, 412, 416], "register_save_hook": [35, 51, 56, 62, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101], "temporarydirectori": [35, 50, 51, 52, 56, 57, 62, 65, 66, 70, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 400, 401, 412, 416], "tmpdir": [35, 51, 56, 62, 65, 66, 70, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 400, 401, 412], "rb_load": [35, 51, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101], "register_load_hook": [35, 51, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101], "filesystem": [36, 416], "ted2nest": [37, 393], "hash": [38, 54, 55, 59, 64], "stackedcomposit": [39, 393], "nvec": [41, 43], "remove_singleton": 41, "cardin": [41, 43, 242, 272, 288, 289, 294, 402], "ax": [41, 262, 263, 412], "Not": [41, 42, 56, 118, 119, 131, 249, 253], "neither": [41, 42, 43, 44, 86, 153, 414], "use_regist": 43, "mone_hot": [43, 44], "boxlist": [43, 44], "gamma": [45, 197, 218, 256, 306, 307, 309, 310, 311, 313, 315, 316, 317, 319, 322, 324, 326, 327, 328, 329, 331, 332, 333, 334, 338, 339, 340, 341, 342, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 387, 396, 400, 401, 402, 412, 413, 418], "sutton": [45, 396, 412, 413], "1988": 45, "tempor": [45, 249, 253, 256, 341, 342, 347, 348], "44": [45, 401, 403, 413, 414, 415], "discount": [45, 86, 123, 197, 218, 307, 313, 316, 317, 319, 339, 340, 341, 342, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 396, 401, 402, 412, 413], "ahead": [45, 218, 419], "bias": [45, 247, 248, 251, 252, 302, 396, 400], "mitig": 45, "multisteptransform": [45, 393], "99": [45, 197, 216, 256, 319, 334, 339, 346, 387, 400, 401, 402, 406, 409, 412, 413, 414, 415, 418], "nontermin": 45, "original_reward": 45, "newli": [45, 122, 126, 144, 145, 151, 152], "OR": 45, "row": [46, 63, 131, 132], "shae": 47, "nontensordata": [47, 80, 86, 142, 143, 358], "nontensor": [48, 393], "one_hot": [49, 242, 258, 272], "one_hot_sampl": 49, "chosen_data": [50, 89], "rewarddata": [50, 89, 393], "rejected_data": [50, 89], "from_dataset": [50, 52, 89], "dataset_nam": [50, 52, 58, 70, 89, 141], "max_length": [50, 52, 53, 67, 70, 89, 409], "550": [50, 52, 58, 70, 89, 106, 107, 414], "root_dir": [50, 52, 70, 89], "from_disk": [50, 52, 70, 89], "carperai": [50, 52, 58, 70], "openai_summarize_comparison": [50, 52, 70], "sequen": [50, 52], "load_from_disk": [50, 52, 70, 89], "load_dataset": [50, 52, 70, 89], "attention_mask": [50, 52, 53, 57, 58, 67, 70, 89], "92534": 50, "input_id": [50, 52, 53, 57, 58, 67, 70, 89], "end_scor": [50, 57, 58, 89], "sub_data": [50, 52], "from_tensordict": [50, 52, 57], "non_tensordict": [50, 52, 57], "getattr": [50, 52, 57], "tensorclass": [50, 52, 57, 89, 93, 94, 114], "pathlib": [50, 52, 57, 93], "load_memmap": [50, 52, 57], "load_": [50, 52, 57], "load_memmap_": [50, 52, 57], "fetch": [50, 52, 57, 118, 119, 120, 121, 186, 405, 415, 416, 419], "fromkei": [50, 52, 57], "memmap": [50, 52, 57, 93, 144, 151, 216, 360, 362, 374, 416], "saved_td": [50, 52, 57], "td_load": [50, 52, 57], "fake": [50, 52, 57, 122, 126, 144, 145, 151, 152, 400, 401], "_subclass": [50, 52, 57], "faketensormod": [50, 52, 57], "faketensor": [50, 52, 57], "from_flatten": [50, 52, 57], "attemptedli": [50, 52, 57], "copy_exist": [50, 52, 57], "return_earli": [50, 52, 57], "share_non_tensor": [50, 52, 57], "existsok": [50, 52, 57, 93], "mimic": [50, 52, 57, 122, 126, 144, 145, 151, 152], "cross": [50, 52, 57, 230], "anymor": [50, 52, 57, 210, 295], "tensordictfutur": [50, 52, 57], "serialis": [50, 52, 57], "deepli": [50, 52, 57], "insid": [50, 52, 57, 144, 419], "memmap_": [50, 52, 57, 216], "memmap_lik": [50, 52, 57], "contentless": [50, 52, 57], "1_000_000": [50, 51, 52, 56, 57, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 106, 400, 403, 412], "alloc": [50, 52, 57, 94, 257, 258, 400], "memmap_refresh_": [50, 52, 57], "refresh": [50, 52, 57, 409, 412, 413], "saved_path": [50, 52, 57], "setattr": [50, 52, 57], "tent": [50, 52, 57, 70], "to_tensordict": [50, 52, 57, 403], "alpha": [51, 65, 98, 99, 232, 233, 235, 236, 237, 238, 244, 259, 307, 309, 315, 325, 327, 329, 331, 400, 416, 418], "ep": [51, 65, 98, 99, 188, 216, 229, 269, 270, 308, 330, 375, 400, 401, 403, 406, 409], "1e": [51, 65, 98, 99, 188, 216, 229, 240, 243, 264, 277, 400, 401, 402, 413], "08": [51, 65, 98, 99, 399, 400, 401, 402, 412, 414, 417], "pin_memori": [51, 56, 65, 66, 80, 82, 83, 84, 85, 86, 87, 88, 191, 400, 418], "schaul": [51, 98, 99], "quan": [51, 98, 99], "antonogl": [51, 98, 99], "silver": [51, 98, 99], "2015": [51, 98, 99], "ab": [51, 83, 86, 88, 98, 99, 118, 119, 120, 121, 131, 132, 136, 137, 139, 140, 148, 155, 156, 168, 192, 212, 216, 229, 234, 239, 243, 244, 251, 256, 263, 265, 266, 271, 273, 274, 280, 306, 307, 311, 312, 313, 314, 317, 318, 319, 321, 322, 325, 326, 329, 415], "1511": [51, 98, 99, 244], "05952": [51, 98, 99], "expon": [51, 65, 98, 99], "\u03b1": [51, 65, 98, 99], "delta": [51, 65, 98, 99, 247, 251, 277, 292, 296, 393, 396, 412], "1_000": [51, 56, 65, 66, 412, 416], "merg": [51, 56, 65, 66, 80, 82, 83, 84, 85, 86, 87, 88, 414], "mini": [51, 56, 65, 66, 80, 82, 83, 84, 85, 86, 87, 88, 413], "decid": [51, 56, 65, 66, 412, 418], "meth": [51, 56, 65, 66, 249, 253, 324, 414], "incompat": [51, 56, 65, 66, 328, 416], "drop_last": [51, 56, 65, 66, 105, 107], "notion": [51, 56, 65, 66], "caution": [51, 56, 65, 66, 105, 220, 419], "codebas": [51, 56, 65, 66, 414], "approach": [51, 56, 65, 66, 188, 229, 259, 260, 331, 400, 402, 406, 407, 412, 419], "return_info": [51, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 98, 99, 101, 416], "tensordictprioritizedreplaybuff": [51, 393, 418], "simplifi": [51, 405, 414, 416], "_weight": [51, 65, 98, 99, 416, 418], "update_prior": [51, 98, 99, 374, 397, 401, 416, 418], "36278465": 51, "invert": [51, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 304, 402], "tqdm": [51, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 377, 400, 402, 403, 412, 413, 414], "randomsampl": [51, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 400, 412], "td_error": [51, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 309, 310, 311, 313, 314, 315, 316, 322, 324, 327, 329, 331, 332, 338, 400, 406, 416, 418], "update_tensordict_prior": [51, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 400, 416, 418], "insert_transform": [51, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 164, 210], "insert": [51, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 92, 101, 102, 112, 113, 116, 117, 164, 173, 210, 211], "set_sampl": [51, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101], "set_storag": [51, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101], "set_writ": [51, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101], "write_count": [51, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101], "prompt_rindex": [52, 53, 58], "promptdatatldr": 52, "116722": 52, "prompt": [53, 58], "return_tensordict": [53, 67], "text": [53, 58, 67, 84, 247, 248, 251, 252, 269, 270, 402], "tensodict": [53, 67], "orign": [53, 54, 64, 67], "valid_sampl": 53, "eough": 53, "toknen": 53, "meet": 53, "criterion": 53, "autotoken": [53, 67, 70], "from_pretrain": [53, 58, 67], "gpt2": [53, 58, 67, 70, 234, 239, 268], "pad_token": [53, 67], "eos_token": 53, "enough": [53, 416], "inde": [53, 177, 402, 414], "index_kei": [54, 64], "_index": [54, 64], "hash_kei": 54, "_hash": 54, "hash_modul": [54, 59, 64], "siphash": [54, 55, 64, 393], "hash_to_int": 54, "hashtoint": [54, 393], "query_modul": [54, 64], "key1": [54, 64, 170, 368, 376], "key2": [54, 64, 170, 368, 376], "write_hash": 54, "is_tdmodule_compat": [54, 64], "reset_out_kei": [54, 64], "mod": [54, 64, 186, 231, 249, 253, 291, 299, 403, 409], "select_out_kei": [54, 64, 306, 307, 309, 310, 314, 315, 322, 326, 327, 329, 331, 332], "reset_parameters_recurs": [54, 64], "relu": [54, 64, 138, 230, 239, 256, 264, 305], "old_param": [54, 64], "bork": [54, 64], "dork": [54, 64], "reset_paramet": [54, 64, 261], "from_modul": [54, 64, 242, 295, 298, 418], "rid": [54, 64], "out_keys_sourc": [54, 64], "rubric": [54, 64, 132, 188, 298], "revert": [54, 64, 220, 405, 416], "seq": [54, 64, 231, 247, 249, 251, 253, 291, 403, 409, 411], "z": [54, 64, 248], "n_compon": 55, "dtype_cast": 55, "as_tensor": [55, 59], "init_method": 55, "emb": [55, 403], "sklearn": [55, 85, 141], "byte": [55, 59], "builtin": [55, 59], "pythonhashse": [55, 59], "todo": [55, 122, 126, 144, 145, 151, 152], "storagecheckpointerbas": [56, 108], "roundrobinwrit": [56, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88], "depth": [56, 69, 122, 126, 138, 144, 145, 148, 151, 152, 230, 232, 233, 235, 236, 237, 238, 243, 244, 254, 256, 259, 260, 261, 265, 266, 288, 395, 401, 404, 406, 407, 411, 412, 413, 416], "_pytre": [56, 416], "tree_map": [56, 416], "did": [56, 215, 346, 401, 402, 407, 416, 419], "assert0": [56, 416], "ref_model": 58, "reward_model": [58, 301], "max_new_token": 58, "score_clip": 58, "kl_schedul": 58, "klcontrollerbas": 58, "num_step": 58, "causal": 58, "sentenc": 58, "frozen": [58, 186, 216], "gpt2rewardmodel": 58, "get_dataload": [58, 393], "promptdata": [58, 393], "gpt2lmheadmodel": 58, "dl": 58, "block_siz": [58, 89], "tensorclass_typ": [58, 89], "openai_summarize_tldr": 58, "config_class": 58, "model_path": 58, "rollout_from_model": 58, "rollout_from_data": 58, "600": [58, 408, 414, 416], "reward_kl": [58, 186], "reward_raw": 58, "sample_log_prob": [58, 284, 285, 286, 292, 296, 298, 326, 402, 405, 413, 418], "create_rollout_td": 58, "log_prob": [58, 240, 257, 258, 267, 279, 296, 309], "log_ratio": 58, "replic": [58, 396], "rindex": 58, "eo": 58, "term": [58, 186, 251, 252, 262, 263, 305, 306, 315, 379, 401, 402, 404, 405, 413], "generation_config": 58, "generationconfig": 58, "ti": [58, 349, 350, 351, 352, 354, 355, 356, 357, 401], "log_probs_gen": 58, "logprobs_of_label": 58, "hash_a": 59, "4669941682990263259": 59, "3778166555168484291": 59, "9122128731510687521": 59, "hash_b": 59, "heterogen": [60, 61, 135, 146, 147, 220, 259, 260, 400, 401], "220": [62, 414], "resembl": 64, "querymodul": [64, 393], "tensormap": [64, 393], "collat": [64, 101], "subtyp": 64, "embedding_storag": 64, "tensor_dict_storag": 64, "new_index": 64, "key3": 64, "retrieve_valu": 64, "from_tensordict_pair": 64, "storage_constructor": 64, "write_fn": 64, "tensordictstorag": 64, "thumb": [64, 144, 402], "lazydynamicstorag": 64, "fixedstorag": 64, "randomprojectionhash": [64, 393], "priority_kei": [65, 66, 81, 98, 309, 311, 314, 315, 316, 322, 324, 327, 329, 331, 332, 338, 416, 418], "reduct": [65, 98, 99, 112, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 320, 322, 323, 325, 326, 327, 328, 329, 331, 332], "prioritizedreplaybuff": [65, 393, 418], "min": [65, 98, 99, 112, 269, 270, 279, 307, 308, 309, 315, 325, 327, 329, 401, 402], "median": [65, 98, 99, 112, 131, 132, 162, 292, 296], "include_info": [65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88], "huggingfac": [67, 83, 88, 290], "co": [67, 179, 414], "pad_trunc": 67, "am": 67, "me": 67, "reassur": 67, "ok": 67, "tensor_spec": [69, 163, 219, 226, 314, 315, 326, 328], "primarili": [69, 193, 405], "dataclass": [69, 324], "educ": 69, "guess": 69, "knowledg": [69, 122, 126, 144, 145, 151, 152, 406, 408], "tokenizer_fn": 70, "tensordicttoken": [70, 393], "pre_tokenization_hook": 70, "valid_s": 70, "tokenizer_class": 70, "tokenizer_model_nam": 70, "tokein": 70, "elementwis": 70, "vocabulari": 70, "loader": [70, 402], "185068": 70, "dataset_to_tensordict": 70, "data_dir": 70, "batch_dim": [70, 391], "valid_mask_kei": 70, "conver": 70, "batch_dimens": 70, "filder": 70, "from_dict": 70, "data_memmap": 70, "recurse_through_entri": 77, "recurse_through_stack": 77, "consolid": 77, "dataset_id": [80, 82, 83, 84, 86, 87, 88], "num_proc": 80, "slice_len": [80, 86, 99, 106, 107, 360], "strict_len": 80, "arari": 80, "2600": 80, "million": [80, 403], "consequ": [80, 91, 251, 407], "50x10": 80, "available_dataset": [80, 81, 82, 83, 84, 85, 86, 87, 88, 106, 107], "ataridqn": 80, "immutabledatasetwrit": [80, 81, 82, 83, 84, 85, 86, 87, 88], "shorter": [80, 86, 99, 106, 107], "Be": [80, 86, 99, 106, 107], "game_nam": 80, "krull": 80, "1d": [80, 98, 99, 106, 107, 112], "cheapli": 80, "invalid_rang": 80, "999998": 80, "999999": 80, "add_count": 80, "84": [80, 196, 400, 401, 403, 414], "valueestim": [80, 306, 307, 309, 310, 311, 313, 315, 316, 317, 322, 324, 326, 327, 328, 329, 331, 332, 334, 338, 393, 396, 400, 412, 413], "convolut": [80, 232, 233, 235, 236, 259, 275, 405], "2657628": 80, "2657629": 80, "2657630": 80, "2657631": 80, "2657632": 80, "2657633": 80, "2657634": 80, "2657635": 80, "2657636": 80, "2657637": 80, "2657638": 80, "2657639": 80, "2657640": 80, "2657641": 80, "2657642": 80, "2657643": 80, "2657644": 80, "2657645": 80, "2657646": 80, "2657647": 80, "2657648": 80, "2657649": 80, "2657650": 80, "2657651": 80, "2657652": 80, "2657653": 80, "2657654": 80, "2657655": 80, "2657656": 80, "2657657": 80, "2657658": 80, "2657659": 80, "2657660": 80, "2657661": 80, "2657662": 80, "2657663": 80, "2657664": 80, "2657665": 80, "2657666": 80, "2657667": 80, "2657668": 80, "2657669": 80, "2657670": 80, "2657671": 80, "2657672": 80, "2657673": 80, "2657674": 80, "2657675": 80, "2657676": 80, "2657677": 80, "2657678": 80, "2657679": 80, "2657680": 80, "2657681": 80, "2657682": 80, "2657683": 80, "2657684": 80, "2657685": 80, "2657686": 80, "2657687": 80, "2657688": 80, "2657689": 80, "2657690": 80, "2657691": 80, "1995687": 80, "1995688": 80, "1995689": 80, "1995690": 80, "1995691": 80, "1995692": 80, "1995693": 80, "1995694": 80, "1995695": 80, "1995696": 80, "1995697": 80, "1995698": 80, "1995699": 80, "1995700": 80, "1995701": 80, "1995702": 80, "1995703": 80, "1995704": 80, "1995705": 80, "1995706": 80, "1995707": 80, "1995708": 80, "1995709": 80, "1995710": 80, "1995711": 80, "1995712": 80, "1995713": 80, "1995714": 80, "1995715": 80, "1995716": 80, "1995717": 80, "1995718": 80, "1995719": 80, "1995720": 80, "1995721": 80, "1995722": 80, "1995723": 80, "1995724": 80, "1995725": 80, "1995726": 80, "1995727": 80, "1995728": 80, "1995729": 80, "1995730": 80, "1995731": 80, "1995732": 80, "1995733": 80, "1995734": 80, "1995735": 80, "1995736": 80, "1995737": 80, "1995738": 80, "1995739": 80, "1995740": 80, "1995741": 80, "1995742": 80, "1995743": 80, "1995744": 80, "1995745": 80, "1995746": 80, "1995747": 80, "1995748": 80, "1995749": 80, "1995750": 80, "left": [80, 82, 86, 99, 106, 166, 173, 174, 175, 176, 180, 186, 192, 194, 195, 201, 204, 207, 209, 212, 214, 218, 245, 259, 401, 402, 407, 408], "untouch": [80, 86, 166, 173, 175, 176, 180, 186, 194, 195, 201, 204, 209, 218], "_max_run": 80, "dataset_asterix": 80, "asterix": 80, "dataset_pong": 80, "sample_from_al": [80, 101, 104], "buffer_id": [80, 104, 110], "hidden": [80, 144, 151, 168, 235, 243, 247, 248, 249, 251, 252, 253, 265, 266, 273, 274, 284, 285, 286, 287, 295, 298, 308, 323, 326, 395, 403, 411, 418], "data_path": [80, 81, 82, 83, 84, 85, 86, 87, 88], "data_path_root": [80, 81, 82, 83, 84, 85, 86, 87, 88], "delet": [80, 81, 82, 83, 84, 85, 86, 87, 88, 170, 367], "chunksiz": [80, 81, 82, 83, 84, 85, 86, 87, 88], "pool": [80, 81, 82, 83, 84, 85, 86, 87, 88, 207], "max_tasks_per_child": [80, 81, 82, 83, 84, 85, 86, 87, 88], "worker_thread": [80, 81, 82, 83, 84, 85, 86, 87, 88], "index_with_gener": [80, 81, 82, 83, 84, 85, 86, 87, 88], "pbar": [80, 81, 82, 83, 84, 85, 86, 87, 88, 400, 402, 403, 412, 413, 414], "num_fram": [80, 81, 82, 83, 84, 85, 86, 87, 88], "unitari": [80, 81, 82, 83, 84, 85, 86, 87, 88, 414], "minariexperiencereplai": [80, 81, 82, 83, 85, 86, 87, 88], "1000000": [80, 81, 82, 83, 84, 85, 86, 87, 88], "distance_from_origin": [80, 81, 82, 83, 84, 85, 86, 87, 88], "forward_reward": [80, 81, 82, 83, 84, 85, 86, 87, 88], "qpo": [80, 81, 82, 83, 84, 85, 86, 87, 88], "qvel": [80, 81, 82, 83, 84, 85, 86, 87, 88], "reward_ctrl": [80, 81, 82, 83, 84, 85, 86, 87, 88, 126, 144], "reward_forward": [80, 81, 82, 83, 84, 85, 86, 87, 88], "reward_surv": [80, 81, 82, 83, 84, 85, 86, 87, 88], "x_posit": [80, 81, 82, 83, 84, 85, 86, 87, 88, 126, 144], "x_veloc": [80, 81, 82, 83, 84, 85, 86, 87, 88, 126, 144], "y_posit": [80, 81, 82, 83, 84, 85, 86, 87, 88], "y_veloc": [80, 81, 82, 83, 84, 85, 86, 87, 88], "achieved_go": [80, 81, 82, 83, 84, 85, 86, 87, 88], "desired_go": [80, 81, 82, 83, 84, 85, 86, 87, 88], "27": [80, 81, 82, 83, 84, 85, 86, 87, 88, 118, 119, 144, 151, 399, 400, 401, 402, 412, 413, 414, 417, 419], "_collate_id": [80, 81, 82, 83, 84, 85, 86, 87, 88], "0x120e21dc0": [80, 81, 82, 83, 84, 85, 86, 87, 88], "cattensor": [80, 81, 82, 83, 84, 85, 86, 87, 88, 122, 126, 144, 145, 151, 152, 400, 411, 414, 419], "cat_tensor": [80, 81, 82, 83, 84, 85, 86, 87, 88], "cat_next_tensor": [80, 81, 82, 83, 84, 85, 86, 87, 88], "new_storag": [80, 81, 82, 83, 84, 85, 86, 87, 88], "31": [80, 81, 82, 83, 84, 85, 86, 87, 88, 131, 132, 399, 401, 403, 412, 414, 415, 417], "full_storag": [80, 81, 82, 83, 84, 85, 86, 87, 88], "0x168406fc0": [80, 81, 82, 83, 84, 85, 86, 87, 88], "from_env": 82, "use_truncated_as_don": 82, "direct_download": 82, "terminate_on_end": 82, "env_kwarg": [82, 87, 88, 166, 389, 390, 400], "reconstruct": [82, 106, 107, 318, 400, 419], "get_dataset": 82, "qlearning_dataset": 82, "fewer": [82, 99, 106], "unexpectedli": 82, "traj_split": 82, "observationnorm": [82, 216, 391, 400, 401, 402, 403, 418], "maze2d": 82, "umaz": 82, "loc": [82, 122, 126, 144, 145, 151, 152, 186, 188, 199, 216, 250, 264, 278, 279, 284, 285, 286, 292, 296, 298, 306, 307, 309, 322, 326, 327, 328, 329, 381, 391, 395, 400, 401, 402, 403, 405, 413, 418], "gen": 83, "dgrl": 83, "accompani": [83, 166, 204], "gap": 83, "2312": 83, "05742": 83, "gen_dgrl": 83, "procgen": 83, "bigfish": 83, "bossfight": 83, "1m_e": 83, "1m_": 83, "comma": 83, "npy": 83, "extract": [83, 165, 290, 400, 402, 418], "mmap": [83, 87, 88], "minut": [83, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 418, 419], "internet": [83, 88], "connect": [83, 88, 153], "minari": 84, "websit": [84, 86], "currenrtli": 84, "minari_data": 84, "door": 84, "torchrl_logg": [84, 409], "28": [84, 259, 401, 413, 414, 415], "door_body_po": 84, "dua": 85, "graff": 85, "2017": 85, "uci": 85, "archiv": 85, "ic": 85, "edu": 85, "ml": [85, 153, 154], "adult_num": [85, 141], "adult_onehot": [85, 141], "mushroom_num": [85, 141], "mushroom_onehot": [85, 141], "covertyp": [85, 141], "shuttl": [85, 141], "magic": [85, 141, 404], "shuffl": [86, 105, 107, 413], "embodi": [86, 415], "institut": 86, "demonstr": [86, 402, 407, 412, 413, 414, 416, 419], "527": [86, 414], "skill": 86, "160266": 86, "googl": [86, 87, 118, 119, 136, 137, 142, 143, 229, 402, 403, 412, 413], "open_x_embodi": 86, "2310": [86, 148], "08864": 86, "language_instruct": 86, "get_non_tensor": 86, "nor": [86, 153], "insuffici": 86, "chosen": [86, 155, 156, 205, 206, 271, 272, 280, 294, 360, 395, 408], "openx": 86, "__will": 86, "change__": 86, "randomli": [86, 105, 152, 187, 188, 206, 245, 292, 296, 405, 412, 413, 414, 416], "crop": [86, 171, 193, 360], "modal": [86, 400], "cmu_stretch": [86, 360], "is_init": [86, 88, 168, 185, 249, 253, 269, 270, 291, 303, 403], "language_embed": 86, "512": [86, 244, 400, 401, 414], "lift": 86, "green": [86, 412], "garbag": 86, "lid": 86, "roboset": 87, "h5": [87, 88, 91], "roboh": [87, 148], "concis": [87, 406], "75": [87, 401, 403, 414, 415], "totensor": 88, "image_s": 88, "v": [88, 216, 247, 248, 251, 252, 284, 314, 322, 329, 395, 400, 401], "npz": 88, "2206": [88, 139, 140], "04779": [88, 307, 313], "vd4rl": 88, "squar": [88, 171, 174, 250, 278, 279, 360], "rectangular": [88, 232, 233], "walker_walk": 88, "64px": 88, "height": [88, 171, 174, 196], "veloc": [88, 120, 121, 122, 126, 144, 145, 151, 152, 169, 412, 413, 414, 419], "infinit": [89, 136, 137, 155, 156, 407, 416], "block": [89, 92, 117, 395, 403, 412], "pairwisedataset": [89, 393], "256": [89, 136, 137, 239, 401, 402, 412, 413, 414], "checkpoint_fil": 91, "h5_kwarg": 91, "iff": 91, "suffix": [91, 373], "h5py": 91, "create_dataset": 91, "temporarili": [91, 220, 407, 416], "immut": [92, 122, 126, 144, 151, 195, 210], "piec": [92, 102, 113, 116, 117, 400, 401, 402, 408, 412, 413, 414, 416], "scratch_dir": [93, 400, 416], "sent": [93, 94, 114, 216], "mistak": [93, 94, 114], "overewritten": 93, "tensorstoragecheckpoint": 93, "main_ckpt_dir": 93, "rb_memmap": 93, "10_000_000": 93, "myclass": [93, 94, 114], "foo": [93, 94, 114, 287, 416, 419], "bar": [93, 94, 114, 287, 370, 371, 373, 377, 397, 401], "attach": [93, 94, 95, 108, 110, 114, 401], "entiti": [93, 94, 95, 108, 110, 114], "zero_": [94, 114, 223], "unlimit": 95, "liststoag": 96, "max_capac": [98, 99, 400, 416], "max_priority_within_buff": [98, 99], "data_0": 98, "data_1": 98, "smoothen": 98, "tdrb": 98, "pack": [98, 247, 251, 402, 404, 419], "nd": [98, 99], "sum_tre": [98, 99], "min_tre": [98, 99], "end_kei": [99, 106, 107], "cache_valu": [99, 106, 107], "closer": 99, "readili": [99, 106, 107], "conjunct": [99, 106, 107, 401], "Will": [99, 106, 139, 360], "buffer0": [99, 106], "immutablewrit": [99, 106], "buffer1": [99, 106], "other_sampl": [99, 106], "short": [99, 106, 107, 118, 119, 131, 132, 144, 220, 251, 252, 401, 402, 404, 405, 413, 416], "tolist": 99, "120110917137936e": 99, "06": [99, 240, 277, 400, 401, 402, 412, 414, 415], "storageensembl": [101, 104], "samplerensembl": 101, "writerensembl": [101, 110], "num_buffer_sampl": [101, 104], "ensembl": [101, 104, 110, 111, 117, 295, 327], "forbidden": 101, "0x13a2ef430": 101, "0x13a2f9310": 101, "interpol": [101, 196, 401, 403], "interpolationmod": [101, 403], "bilinear": [101, 196, 403], "0x13a2f9220": 101, "0x13a2f9f70": 101, "0x13a2d9b50": 101, "0x13a2f95b0": 101, "0x128648260": 101, "kw": [102, 113], "roundrobin": [102, 113], "incomplet": [105, 107], "fresh": 105, "haven": [105, 415], "remain": [105, 168, 176, 177, 186, 205, 263, 406], "draw": [105, 245], "slicesamplerwithoutreplac": [106, 416], "320": [106, 107, 120, 121, 399, 401, 402, 404, 405, 406, 414, 417, 419], "700": [106, 107], "uniqu": [106, 107, 136, 137, 169, 179, 205, 206, 207, 291, 367, 407, 416], "dataid": [106, 107], "__len__": 108, "rank_kei": 112, "rank": [112, 230], "samplerwithoutreplac": [112, 402, 413, 416], "get_insert_index": 112, "convers": [118, 119, 131, 132, 396], "2106": [118, 119, 312, 331], "13281": [118, 119], "categorical_action_encod": [118, 119, 122, 125, 126, 127, 128, 131, 132, 139, 140, 144, 145, 148, 151, 152], "frame_skip": [118, 119, 120, 121, 125, 126, 127, 128, 131, 132, 133, 134, 139, 140, 148, 183, 370, 373, 380, 397, 400, 401, 402, 418], "repeat": [118, 119, 120, 121, 125, 127, 128, 131, 132, 139, 140, 148, 230, 402, 412, 413, 414], "allow_done_after_reset": [118, 119, 120, 121, 122, 125, 127, 128, 131, 132, 139, 140, 142, 143, 148, 153, 154], "toler": [118, 119, 120, 121, 125, 127, 128, 131, 132, 139, 140, 142, 143, 148, 153, 154, 240, 277], "availalb": [118, 119, 131, 132], "is_avail": [118, 119, 400, 401, 402, 403, 412, 413, 415], "els": [118, 119, 166, 247, 248, 251, 252, 265, 395, 397, 400, 401, 402, 403, 412, 413, 414, 415], "ant": [118, 119, 122, 126, 129, 144, 145, 151, 152, 415], "87": [118, 119, 401, 414, 415], "acrobot": [118, 119, 120, 121, 419], "advant": [118, 119, 131, 132], "timer": [118, 119, 131, 132], "timeit": [118, 119, 131, 132], "310": [118, 119, 414], "ms": [118, 119, 131, 132], "268": [118, 119, 414], "433": [118, 119, 414], "80": [118, 119, 400, 401, 402, 412, 413, 414, 415], "213": [118, 119, 414], "8605": [118, 119], "pipelineenv": 119, "get_environ": 119, "dm_control": [120, 121, 400, 411, 419], "2006": [120, 121, 307, 313, 414], "12983": [120, 121], "task_nam": [120, 122, 126, 144, 145, 151, 152], "cheetah": [120, 121, 122, 126, 144, 145, 151, 152, 360, 400, 419], "240": [120, 121, 414, 418, 419], "swingup": [120, 121, 419], "swingup_spars": [120, 121, 419], "ball_in_cup": [120, 121, 419], "catch": [120, 121, 419], "balance_spars": [120, 121, 419], "three_pol": [120, 121, 419], "two_pol": [120, 121, 419], "finger": [120, 121, 419], "turn_easi": [120, 121, 419], "turn_hard": [120, 121, 419], "fish": [120, 121, 419], "upright": [120, 121, 401, 419], "swim": [120, 121, 419], "hopper": [120, 121, 419], "hop": [120, 121, 419], "humanoid": [120, 121, 144, 151, 411, 419], "walk": [120, 121, 144, 151, 401, 411, 419], "run_pure_st": [120, 121, 419], "bring_bal": [120, 121, 419], "bring_peg": [120, 121, 419], "insert_bal": [120, 121, 419], "insert_peg": [120, 121, 419], "point_mass": [120, 121, 419], "reacher": [120, 121, 419], "swimmer": [120, 121, 419], "swimmer6": [120, 121, 419], "swimmer15": [120, 121, 419], "walker": [120, 121, 419], "dog": [120, 121, 419], "trot": [120, 121, 419], "humanoid_cmu": [120, 121, 419], "lqr": [120, 121, 419], "lqr_2_1": [120, 121, 419], "lqr_6_2": [120, 121, 419], "quadrup": [120, 121, 419], "escap": [120, 121, 419], "stacker": [120, 121, 419], "stack_2": [120, 121, 419], "stack_4": [120, 121, 419], "deviceless": 122, "run_type_check": [122, 138], "counterenv": 122, "discretebox": [122, 126, 144, 145, 151, 152], "sort": [122, 126, 144, 145, 151, 152, 170, 269, 270], "another_act": [122, 126, 144, 145, 151, 152], "mutabl": [122, 126, 144, 145, 151, 152], "_callabletransform": [122, 126, 144, 145, 151, 152], "batch_lock": [122, 124, 126, 144, 151, 166, 206, 210, 414], "done_keys_group": [122, 126, 144, 145, 151, 152], "outer": [122, 126, 144, 145, 151, 152, 397, 400, 401, 419], "another_don": [122, 126, 144, 145, 151, 152], "empty_cach": [122, 126, 144, 145, 151, 152, 210], "fake_tensordict": [122, 126, 144, 145, 151, 152, 401], "braxenv": [122, 126, 144, 145, 151, 152, 195, 393, 404], "envnam": [122, 126, 144, 145, 151, 152], "pipeline_st": [122, 126, 144, 145, 151, 152], "attibut": [122, 126, 144, 145, 151, 152], "maybe_reset": [122, 126, 144, 145, 151, 152], "speak": [122, 126, 144, 145, 151, 152, 400], "rand_act": [122, 126, 135, 144, 145, 146, 147, 151, 152, 166, 404], "register_gym": [122, 126, 144, 145, 151, 152, 404], "entry_point": [122, 126, 144, 145, 151, 152], "info_kei": [122, 126, 144, 145, 151, 152], "reward_threshold": [122, 126, 144, 145, 151, 152], "nondeterminist": [122, 126, 144, 145, 151, 152], "max_episode_step": [122, 125, 126, 127, 144, 145, 151, 152], "order_enforc": [122, 126, 144, 145, 151, 152], "autoreset": [122, 126, 144, 145, 151, 152], "disable_env_check": [122, 125, 126, 139, 140, 144, 145, 151, 152], "apply_api_compat": [122, 126, 144, 145, 151, 152], "nasium": [122, 126, 144, 145, 151, 152], "scope": [122, 126, 144, 145, 151, 152, 419], "dmcontrolenv": [122, 126, 144, 145, 151, 152, 360, 393, 400, 404, 411, 419], "dmc": [122, 126, 144, 145, 151, 152], "removeemptyspec": [122, 126, 144, 145, 151, 152], "threshold": [122, 126, 144, 145, 151, 152, 245, 307, 308, 402], "learnt": [122, 126, 144, 145, 151, 152, 387], "checker": [122, 125, 126, 139, 140, 144, 145, 151, 152], "stepapicompat": [122, 126, 144, 145, 151, 152], "deem": [122, 126, 136, 137, 144, 145, 151, 152, 155, 156], "envgym": [122, 126, 144, 145, 151, 152], "0855": [122, 126, 144, 145, 151, 152], "0215": [122, 126, 144, 145, 151, 152], "0881": [122, 126, 144, 145, 151, 152], "0412": [122, 126, 144, 145, 151, 152], "1101": [122, 126, 144, 145, 151, 152], "0080": [122, 126, 144, 145, 151, 152], "0254": [122, 126, 144, 145, 151, 152], "0424": [122, 126, 144, 145, 151, 152], "9609e": [122, 126, 144, 145, 151, 152], "9776e": [122, 126, 144, 145, 151, 152], "04": [122, 126, 130, 144, 145, 151, 152, 400, 401, 402, 403, 414, 415], "6347e": [122, 126, 144, 145, 151, 152], "3842e": [122, 126, 144, 145, 151, 152], "5338e": [122, 126, 144, 145, 151, 152], "3064e": [122, 126, 144, 145, 151, 152], "0381e": [122, 126, 144, 145, 151, 152], "6656e": [122, 126, 144, 145, 151, 152], "05": [122, 126, 144, 145, 151, 152, 229, 400, 401, 412, 413, 414, 415], "0204e": [122, 126, 144, 145, 151, 152], "action_spac": [122, 126, 144, 145, 151, 152, 179, 242, 272, 288, 289, 293, 294, 306, 307, 309, 310, 311, 313, 314, 315, 316, 317, 322, 324, 326, 327, 328, 329, 331, 332, 338, 403, 405, 409], "0833": [122, 126, 144, 145, 151, 152], "0275": [122, 126, 144, 145, 151, 152], "0612": [122, 126, 144, 145, 151, 152], "0770": [122, 126, 144, 145, 151, 152, 414], "1256": [122, 126, 144, 145, 151, 152, 414], "0082": [122, 126, 144, 145, 151, 152], "0186": [122, 126, 144, 145, 151, 152], "0476": [122, 126, 144, 145, 151, 152], "2221": [122, 126, 144, 145, 151, 152], "2256": [122, 126, 144, 145, 151, 152], "5930": [122, 126, 144, 145, 151, 152], "6937": [122, 126, 144, 145, 151, 152], "5865": [122, 126, 144, 145, 151, 152], "5479": [122, 126, 144, 145, 151, 152], "0187": [122, 126, 144, 145, 151, 152], "6825": [122, 126, 144, 145, 151, 152, 414], "5224": [122, 126, 144, 145, 151, 152], "0018": [122, 126, 144, 145, 151, 152, 414], "1005": [122, 126, 144, 145, 151, 152], "0335": [122, 126, 144, 145, 151, 152], "0268": [122, 126, 144, 145, 151, 152, 414], "0133": [122, 126, 144, 145, 151, 152], "0627": [122, 126, 144, 145, 151, 152], "0074": [122, 126, 144, 145, 151, 152, 414], "0488": [122, 126, 144, 145, 151, 152, 414], "0353": [122, 126, 144, 145, 151, 152], "0075": [122, 126, 144, 145, 151, 152, 414], "0069": [122, 126, 144, 145, 151, 152, 414], "0098": [122, 126, 144, 145, 151, 152, 414], "0058": [122, 126, 144, 145, 151, 152, 414], "0033": [122, 126, 144, 145, 151, 152, 414], "0157": [122, 126, 144, 145, 151, 152], "0004": [122, 126, 144, 145, 151, 152, 403, 414], "0381": [122, 126, 144, 145, 151, 152], "0452": [122, 126, 144, 145, 151, 152], "11355747": [122, 126, 144, 145, 151, 152], "04257728": [122, 126, 144, 145, 151, 152], "00408397": [122, 126, 144, 145, 151, 152], "04155852": [122, 126, 144, 145, 151, 152], "0389733": [122, 126, 144, 145, 151, 152], "01409826": [122, 126, 144, 145, 151, 152], "0978704": [122, 126, 144, 145, 151, 152], "08808327": [122, 126, 144, 145, 151, 152], "03970837": [122, 126, 144, 145, 151, 152], "00535434": [122, 126, 144, 145, 151, 152], "02353762": [122, 126, 144, 145, 151, 152], "05116226": [122, 126, 144, 145, 151, 152], "02788907": [122, 126, 144, 145, 151, 152], "06848346": [122, 126, 144, 145, 151, 152], "05154399": [122, 126, 144, 145, 151, 152], "0371798": [122, 126, 144, 145, 151, 152], "05128025": [122, 126, 144, 145, 151, 152], "dydact": [122, 126, 144, 145, 151, 152], "gym_env": [122, 126, 144, 145, 151, 152, 418], "reset_kei": [122, 126, 144, 145, 151, 152, 169, 200, 205, 206, 207, 412], "multitask": [122, 126, 144, 145, 151, 152], "multiag": [122, 126, 135, 144, 145, 146, 147, 151, 152, 226, 260, 271, 280, 338], "another_reward": [122, 126, 144, 145, 151, 152], "auto_cast_to_devic": [122, 126, 144, 145, 151, 152, 413], "break_when_all_don": [122, 126, 144, 145, 151, 152], "soon": [122, 126, 144, 145, 146, 147, 151, 152], "__sort": [122, 126, 144, 145, 151, 152], "as__": [122, 126, 144, 145, 151, 152], "argmaxmodul": [122, 126, 144, 145, 151, 152], "argmax": [122, 126, 144, 145, 151, 152, 242, 272, 289, 294, 405], "n_ob": [122, 126, 144, 145, 151, 152, 186, 291, 306, 307, 309, 310, 311, 313, 314, 315, 322, 326, 327, 328, 329, 331, 332, 406], "n_act": [122, 126, 144, 145, 151, 152, 186, 306, 307, 309, 310, 311, 313, 314, 315, 322, 326, 327, 328, 329, 331, 332, 406], "ourselv": [122, 126, 144, 145, 151, 152, 402, 419], "emul": [122, 126, 144, 145, 151, 152], "epoch": [122, 126, 144, 145, 151, 152, 377, 402, 412, 413], "input_td": [122, 126, 144, 145, 151, 152], "rollout_td": [122, 126, 144, 145, 151, 152], "state_kei": [122, 126, 144, 145, 151, 152], "prevail": [122, 126, 144, 145, 151, 152, 170, 200, 226], "creator": [123, 382, 383, 389, 390, 391], "substitut": [123, 205, 216, 405], "vecnorm": [123, 391], "env_creat": [123, 400], "test_env1": 123, "observation_count": [123, 419], "test_env2": 123, "sleep": [123, 419], "ps": 123, "p1": 123, "p2": 123, "9934": 123, "env_str": 124, "device_map": 124, "accross": [125, 127], "registri": [125, 153], "asyncvectorenv": 125, "involv": [125, 127, 128, 136, 137, 148, 166, 249, 253, 404, 406], "pixel_observ": [125, 127, 128, 148], "pixelobservationwrapp": [125, 127, 128, 148], "adventur": [125, 127, 419], "airraid": [125, 127, 419], "alien": [125, 127, 419], "time_limit": 125, "timelimit": [125, 136, 137, 155, 156], "default_info_dict_read": [125, 126, 127, 144], "reader": [125, 126, 127, 144, 401], "set_info_dict_read": [125, 126, 127, 144, 404], "info_dict": [125, 126, 127, 144], "auto_register_info_dict": [125, 126, 127, 144], "multibinari": [125, 127], "multidiscret": [125, 127], "rag": [125, 127], "gym_conversion_exampl": [125, 127], "info_dict_read": [126, 144], "ignore_priv": 126, "baseinfodictread": 126, "tensordictprim": [126, 144, 231, 249, 253, 303, 403], "succe": [126, 144], "underscor": 126, "primer": [126, 206, 231, 249, 253, 303, 403], "halfcheetah": [126, 144, 162, 196, 400], "reward_run": [126, 144], "read_act": 126, "read_don": 126, "nonsens": 126, "fallback": 126, "broken": [126, 220], "read_ob": 126, "dictat": [126, 292, 296, 326, 400, 414], "read_reward": 126, "hoc": [126, 144, 405], "dict_read": 126, "my_info_kei": 126, "some_env": 126, "vecenv": 127, "vectorenv": 127, "convert_actions_to_numpi": 127, "isaaclab": 127, "secur": 128, "habitat3": 128, "ai": [128, 415], "habitatrenderpick": 128, "isaacgym": [129, 130], "isaacgymwrapp": [129, 393], "isaacgymenv": [130, 393], "webpag": 130, "isaac": 130, "essenc": [130, 404], "instadeepai": [131, 132], "2306": [131, 132], "09884": [131, 132], "snake": [131, 132], "grid": [131, 132, 360], "bodi": [131, 132], "body_st": [131, 132], "fruit_posit": [131, 132], "col": [131, 132], "head_posit": [131, 132], "tail": [131, 132], "game2048": [131, 132], "maze": [131, 132], "cleaner": [131, 132], "cvrp": [131, 132], "multicvrp": [131, 132], "minesweep": [131, 132], "rubikscub": [131, 132], "knapsack": [131, 132], "sudoku": [131, 132], "tsp": [131, 132], "connector": [131, 132], "v2": [131, 132, 149, 150, 335, 349, 350, 351, 352, 354, 355, 356, 357, 403], "mmst": [131, 132], "graphcolor": [131, 132], "partli": [131, 132], "scrambl": [131, 132], "robotwarehous": [131, 132], "tetri": [131, 132], "binpack": [131, 132], "jobshop": [131, 132], "0x1fca91910": 131, "122": [131, 132, 414, 419], "0x1ff9baee0": 131, "134": [131, 132, 414], "0x1ff9ba7c0": 131, "172": [131, 132, 400, 414], "drastic": [132, 144, 416], "mo": [133, 134], "minecart": [133, 134], "mo_gym": 134, "qualnam": 135, "leverag": [135, 146, 147, 400, 413, 419], "neural": [135, 146, 147, 232, 233, 275, 295, 395, 401, 402, 403, 405, 412, 413, 414, 419], "group_map": [135, 136, 137, 142, 143, 146, 147, 153, 154, 155, 156, 157, 412], "constructiuon": [135, 146, 147], "premad": [135, 136, 137, 146, 147, 155, 156, 338], "all_in_one_group": [135, 142, 143, 157], "agent_0": [135, 146, 147, 153, 157, 412], "agent_1": [135, 146, 147, 153, 157], "agent_2": [135, 146, 147, 153, 157], "agent_3": [135, 153], "one_group_per_ag": [135, 146, 147], "meltingpot": [136, 137], "2211": [136, 137], "13746": [136, 137], "melt": [136, 137], "pot": [136, 137], "novel": [136, 137, 406], "social": [136, 137], "familiar": [136, 137, 401, 413, 419], "unfamiliar": [136, 137], "broad": [136, 137], "cooper": [136, 137, 412, 413], "decept": [136, 137], "reciproc": [136, 137], "stubborn": [136, 137], "substrat": [136, 137], "ml_collect": 136, "config_dict": 136, "configdict": 136, "categorical_act": [136, 137, 142, 143, 146, 147, 149, 150, 153, 154, 155, 156], "marlgroupmaptyp": [136, 137, 142, 143, 146, 147, 153, 154, 155, 156, 157, 393, 412], "agent_nam": [136, 137, 155, 156, 157], "agent_names_to_indices_map": [136, 137, 155, 156], "env_torchrl": [136, 137], "commons_harvest__open": [136, 137], "rgb": [136, 137], "144": [136, 137, 414], "192": [136, 137, 401, 414], "collective_reward": [136, 137], "ready_to_shoot": [136, 137], "88": [136, 137, 149, 150, 400, 401, 414, 415], "substrate_config": 137, "get_config": 137, "mp_env": 137, "build_from_config": 137, "default_player_rol": 137, "environn": 138, "mymbenv": [138, 230, 256], "world_model": [138, 230, 256, 318], "hidden_observ": [138, 230, 256], "mlp": [138, 230, 232, 233, 235, 236, 237, 238, 244, 249, 253, 256, 260, 261, 284, 288, 303, 311, 313, 395, 401, 405, 406, 409, 411, 415, 418], "worldmodelwrapp": [138, 230, 256], "activation_class": [138, 230, 232, 233, 235, 236, 237, 238, 243, 244, 254, 256, 259, 260, 401, 405, 412, 413, 418], "activate_last_lay": [138, 230, 238, 254, 256], "sail": [139, 140], "sg": [139, 140], "10558": [139, 140], "readthedoc": [139, 142, 143], "en": [139, 142, 143], "python_interfac": 139, "envpoolmixin": 140, "env_bas": 140, "task_id": 140, "env_typ": 140, "gym_reset_return_info": 140, "envpool_env": 140, "www": [141, 257, 258], "fetch_openml": 141, "106": [141, 414], "openspiel": [142, 143], "open_spiel": [142, 143], "game_str": 142, "return_st": [142, 143, 146, 147], "4672": [142, 143, 401, 414], "current_play": [142, 143], "fen": [142, 143], "rnbqkbnr": [142, 143], "pppppppp": [142, 143], "kqkq": [142, 143], "674": [142, 414], "2048": [142, 143, 401, 415], "add_nois": [142, 143], "amazon": [142, 143], "backgammon": [142, 143], "restor": [142, 143], "td_restor": [142, 143], "pyspiel": 143, "load_gam": 143, "new_initial_st": 143, "3009": 143, "my_env_fun": [144, 151], "custom_attribute_list": [144, 151], "custom_attribut": [144, 151], "custom_method_list": [144, 151], "custom_method": [144, 151], "deploi": [144, 151, 166], "slight": [144, 151, 401], "share_individual_td": [144, 151], "shared_memori": [144, 151], "policy_proof": [144, 151], "ll": [144, 151, 247, 248, 251, 252, 400, 401, 402, 403, 404, 405, 406, 407, 409, 413, 419], "serial_for_singl": [144, 151, 401], "circular": [144, 151, 400], "list_of_kwarg": [144, 151], "com_veloc": [144, 151], "head_height": [144, 151], "joint_angl": [144, 151], "torso_vert": [144, 151], "stringent": [144, 402, 412, 413], "inter": 144, "penv": 144, "env_fix": 144, "influenc": 144, "myenv": [144, 166, 175, 178], "pipe": 144, "update_kwarg": [144, 151], "th": [145, 182, 211, 247, 251, 414], "thdot": [145, 414], "max_spe": [145, 414], "max_torqu": [145, 414], "gen_param": [145, 414], "gravit": [145, 414], "torqu": [145, 414], "pettingzoo": [146, 147, 412, 413], "pet": [146, 147], "zoo": [146, 147], "__": [146, 147], "aecenv": [146, 147], "use_mask": [146, 147], "dead": [146, 147], "done_on_ani": [146, 147, 412], "compulsori": [146, 147], "adversary_0": [146, 147, 412], "adversari": [146, 147, 320, 412], "sisl": 146, "multiwalker_v9": 146, "aec": [146, 147], "n_piston": [146, 147], "pistonball_v6": [146, 147], "piston": [146, 147], "piston_0": [146, 147], "piston_1": [146, 147], "piston_20": [146, 147], "tictactoe_v3": [146, 147], "player": [146, 147, 152], "player_1": [146, 147], "player_2": [146, 147], "butterfli": 147, "parallel_env": [147, 400, 418, 419], "vikashplu": 148, "wiki": 148, "06828": 148, "from_depth": 148, "smacv2": [149, 150], "starcraft": [149, 150], "challeng": [149, 150, 404, 414, 415], "10gen_terran": [149, 150], "10gen_zerg": [149, 150], "10gen_protoss": [149, 150], "3m": [149, 150], "8m": [149, 150, 415], "25m": [149, 150], "5m_vs_6m": [149, 150], "8m_vs_9m": [149, 150], "10m_vs_11m": [149, 150], "27m_vs_30m": [149, 150], "mmm": [149, 150], "mmm2": [149, 150], "2s3z": [149, 150], "3s5z": [149, 150], "3s5z_vs_3s6z": [149, 150], "3s_vs_3z": [149, 150], "3s_vs_4z": [149, 150], "3s_vs_5z": [149, 150], "1c3s5z": [149, 150], "2m_vs_1z": [149, 150], "corridor": [149, 150], "6h_vs_8z": [149, 150], "2s_vs_1sc": [149, 150], "so_many_banel": [149, 150], "bane_vs_ban": [149, 150], "2c_vs_64zg": [149, 150], "old": [149, 150, 323, 419], "smac": [149, 150], "map_nam": [149, 150], "176": [149, 150, 414], "battle_won": [149, 150], "dead_al": [149, 150], "dead_enemi": [149, 150], "episode_limit": [149, 150], "322": [149, 150, 411, 414], "Or": [149, 150, 259], "procedur": [149, 150], "distribution_config": [149, 150], "n_unit": [149, 150], "n_enemi": [149, 150], "team_gen": [149, 150], "dist_typ": [149, 150], "weighted_team": [149, 150], "unit_typ": [149, 150], "marin": [149, 150], "maraud": [149, 150], "medivac": [149, 150], "exception_unit_typ": [149, 150], "start_posit": [149, 150], "surrounded_and_reflect": [149, 150], "map_x": [149, 150], "map_i": [149, 150], "capability_config": [149, 150], "131": [149, 150, 400, 414], "starcraft2env": 150, "tic": 152, "tac": 152, "toe": 152, "single_play": 152, "player1": 152, "desired_batch_s": 152, "board": 152, "player0": 152, "uniti": [153, 154], "technolog": [153, 154], "llapi": [153, 154], "mlagents_env": [153, 154], "unityenviron": [153, 154], "file_nam": 153, "registered_nam": 153, "localhost": 153, "3dball": 153, "group_0": 153, "vectorsensor_size8": 153, "continuous_act": [153, 155, 156, 358, 412, 413], "agent_10": 153, "agent_11": 153, "agent_4": 153, "agent_5": 153, "agent_6": 153, "agent_7": 153, "agent_8": 153, "agent_9": 153, "group_reward": 153, "proroklab": [155, 156], "vectorizedmultiagentsimul": [155, 156], "2207": [155, 156], "03530": [155, 156], "basescenario": 155, "perfrom": [155, 156], "defaultt": 155, "repositiori": 155, "sparsiti": 155, "unbatched_action_spec": [155, 156, 413], "unbatched_observation_spec": [155, 156], "unbatched_reward_spec": [155, 156], "het_spec": [155, 156], "het_specs_map": [155, 156], "flock": [155, 156, 358], "agent_collision_rew": [155, 156], "agent_distance_rew": [155, 156], "ca": 157, "environment4": 157, "get_group_map": 157, "sumbodul": 158, "model_bas": [159, 160, 230, 256], "decod": [159, 265], "model_based_env": [159, 317], "dreamerenv": [159, 317, 393], "model_based_env_ev": 159, "num_interv": 162, "out_action_kei": 162, "samplingstrategi": 162, "optino": 162, "intenum": 162, "interv": [162, 359, 360, 369, 379, 401, 414], "action_disc": 162, "transform_input_spec": [162, 166, 173, 175, 176, 177, 188, 190, 194, 195, 200, 204, 205, 206, 209, 211, 213, 218], "masker": 163, "maskedenv": 163, "ones_lik": 163, "scatter": 163, "fill_float": 165, "fill_int": 165, "fill_bool": 165, "someenvclass": 165, "autoresetenv": 165, "argumet": 165, "fooenv": 165, "sign": [165, 202, 340, 412], "envtyp": 165, "reshape_fn": 166, "reset_func": 166, "environmt": 166, "request": [166, 193], "tensordict_batch_s": 166, "tensordict_reset": [166, 414], "transform_env_batch_s": [166, 173, 209, 218], "transform_output_spec": [166, 173, 175, 176, 180, 186, 194, 195, 201, 204, 209, 218], "transform_observation_spec": [166, 169, 170, 171, 172, 173, 174, 175, 176, 179, 180, 182, 184, 185, 186, 188, 190, 194, 195, 196, 200, 201, 202, 204, 205, 206, 207, 208, 209, 211, 212, 215, 216, 218, 414], "transform_reward_spec": [166, 167, 172, 173, 175, 176, 180, 186, 194, 195, 198, 199, 200, 201, 202, 204, 209, 211, 218], "transformfull_done_spec": [166, 173, 175, 176, 180, 186, 194, 195, 201, 204, 209, 218], "biner": 167, "burn_in": 168, "burn": 168, "date": [168, 363], "retur": 168, "burnt": 168, "gru_modul": [168, 249, 303], "input_s": [168, 247, 248, 249, 251, 252, 253, 303, 403], "hidden_s": [168, 247, 248, 249, 251, 252, 253, 303, 403], "set_recurrent_mod": [168, 249, 253, 403], "burn_in_transform": 168, "gru": [168, 206, 248, 249, 303], "num_lay": [168, 247, 249, 251, 253, 265, 266, 303], "86": [168, 401, 412, 414], "3008": [168, 401], "0344": 168, "padding_valu": [169, 257, 258], "as_invers": 169, "movement": 169, "1312": [169, 401], "5602": 169, "unsqueezetransform": [169, 414, 416], "consumpt": [169, 393], "followin": 169, "pictur": 169, "pixels_trsf": [169, 416], "grayscal": [169, 401, 403, 416, 419], "data_exclud": [169, 416], "del_kei": [170, 212, 411, 414], "unsqueeze_if_oor": 170, "observation_posit": 170, "observation_veloc": 170, "center": [171, 360], "width": [171, 174, 196], "scalar": [172, 198, 227, 228, 236, 238, 245, 246, 262, 263, 269, 270, 302, 306, 307, 308, 314, 315, 316, 317, 318, 319, 321, 322, 323, 324, 326, 327, 328, 329, 330, 332, 338, 340, 341, 342, 343, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 395, 401, 406, 414], "permit": [172, 182, 211, 306, 308, 323, 326, 328], "rewardsc": [173, 210, 400, 401, 403], "rewardclip": 173, "transformed_env": [173, 209, 210, 404], "transform_env_devic": [173, 176, 209, 218], "dtype_in": 175, "dtype_out": 175, "scan": [175, 178, 297, 298], "resp": [175, 178], "not_transform": [175, 178], "constructedw": [175, 178], "orig_devic": 176, "unspecifi": 176, "transform_done_spec": [176, 209, 218], "num_actions_effect": 177, "max_act": 177, "include_forward": 177, "num_act": [177, 315, 405], "action_out": 177, "_call": [177, 182, 414], "eol_kei": 179, "lives_kei": 179, "eol_attribut": 179, "unwrap": 179, "breakout": 179, "210": [179, 190, 414, 419], "160": [179, 190, 401, 414, 416, 419], "eol_transform": 179, "eol": 179, "dqnloss": [179, 306, 307, 309, 310, 313, 315, 316, 317, 321, 322, 324, 326, 327, 328, 329, 330, 331, 332, 333, 338, 384, 393, 396, 401, 403, 409], "register_kei": 179, "loss_or_advantag": 179, "lossmodul": [179, 377, 386, 387, 393, 396], "valueestimatorbas": [179, 324, 393], "excluded_kei": 180, "finit": [181, 405, 416], "first_dim": 182, "last_dim": 182, "allow_positive_dim": [182, 211], "frameskip": 182, "repeatedli": [183, 402, 413], "init_kei": [185, 291], "tracker": 185, "pi_curr": 186, "pi_0": 186, "overfit": 186, "probabilist": [186, 221, 292, 306, 326, 393, 402, 418], "get_dist": [186, 296, 297], "normalparamextractor": [186, 284, 285, 286, 292, 298, 306, 307, 309, 315, 322, 326, 327, 328, 329, 331, 332, 395, 402, 405, 413, 418], "probabilisticactor": [186, 284, 285, 286, 287, 306, 307, 309, 312, 314, 315, 322, 325, 326, 327, 328, 329, 331, 332, 395, 400, 402, 405, 412, 413], "tanhnorm": [186, 284, 285, 286, 292, 298, 306, 307, 309, 322, 326, 327, 328, 329, 331, 332, 393, 402, 413, 418], "return_log_prob": [186, 284, 285, 286, 292, 296, 298, 328, 395, 402, 405, 412, 413, 418], "apply_": 186, "copy_": [186, 400], "formulat": 186, "diverg": [186, 249, 253, 292, 296, 318, 323], "noop": [187, 418], "trial": 187, "standard_norm": [188, 199, 216, 400, 401, 403], "affin": [188, 199, 216], "layer": [188, 216, 229, 232, 233, 235, 236, 241, 243, 247, 248, 249, 251, 252, 253, 254, 259, 260, 262, 263, 265, 266, 275, 276, 282, 290, 299, 395, 401, 402, 403, 405, 412, 415], "epsilon": [188, 227, 228, 245, 246, 269, 270, 330, 375, 401, 402, 403, 405], "recover": 188, "set_default_tensor_typ": 188, "doubletensor": 188, "isclos": 188, "next_ob": [188, 340, 341, 342, 343, 418], "init_stat": [188, 400, 401, 402, 403], "3752e": 188, "5087e": 188, "9294e": 188, "9636": 188, "5608": 188, "6408": 188, "num_it": [188, 401, 402], "reduce_dim": [188, 400, 401, 402, 403], "cat_dim": [188, 400, 401, 402, 403], "keep_dim": [188, 401, 403], "statist": [188, 216, 229, 328, 391, 400, 401, 402, 419], "gaussian": [188, 206, 227, 228, 230, 256, 262, 263, 268, 402, 412], "empir": [188, 230, 256, 292, 296, 400, 402, 413], "3d": [188, 232], "reorder": 190, "in_keys_in": [190, 211], "channel": [190, 208, 259, 265, 266, 401], "r3m": [192, 415], "resnet": [192, 212, 214], "visual": [192, 212, 214, 360, 402, 412, 414], "embed": [192, 212, 213, 214, 235, 271, 283, 284, 285, 286, 295, 300, 415], "ego4d": [192, 212, 214], "univers": [192, 212, 214, 404], "suraj": [192, 212], "nair": [192, 212], "aravind": [192, 212], "rajeswaran": [192, 212], "vikash": [192, 212, 214], "kumar": [192, 212, 214], "chelsea": [192, 212], "finn": [192, 212], "abhinav": [192, 212], "gupta": [192, 212], "2203": [192, 212, 256, 415], "12601": [192, 212, 415], "_init": [192, 212, 400], "resnet50": [192, 214, 415], "model_nam": [192, 212, 214, 363], "resnet34": 192, "resnet18": 192, "r3m_vec": [192, 415], "stack_imag": [192, 214], "tread": [192, 214], "separet": [192, 214], "hub": [192, 214, 404, 415], "resnet50_weight": [192, 214], "imagenet1k_v1": [192, 214], "download_path": [192, 214], "tensor_pixels_kei": [192, 214], "sub_seq_len": 193, "sample_dim": [193, 400], "hesit": 193, "robust": [193, 229], "mix": [193, 271, 280, 338, 400, 412, 413], "improp": 193, "dummyenv": 194, "another_oth": 194, "other_reward": 194, "create_copi": 195, "stuff": [195, 407], "newnam": 195, "r2g": 197, "reward_to_go": 197, "bernoulli_": 197, "9010": 197, "9404": [197, 346], "9701": [197, 346], "9900": [197, 346], "0000": [197, 207, 245, 246, 299, 346, 402, 403, 414, 418], "crash": 197, "clamp_min": 198, "clamp_max": 198, "clip_min": 198, "clip_max": 198, "episode_": 200, "reward1": 200, "reward2": 200, "episode_reward": [200, 412, 413], "keep_reward": 201, "keep_don": 201, "logical_or": 202, "step_count_kei": 204, "update_don": 204, "disjunct": 204, "recognis": 204, "target_return": 205, "subtract": 205, "default_valu": [206, 303, 403], "unit": [206, 230, 243, 247, 248, 265, 266, 273, 274, 402], "transfomedenv": 206, "mykei": 206, "__unless": 206, "exists__": 206, "get_primers_from_modul": [206, 231, 249, 253, 393], "10th": 207, "0216": 207, "1149": 207, "1990": 207, "2749": 207, "3281": 207, "9290": 207, "3702": 207, "8978": 207, "from_int": 208, "shape_toler": 208, "permuat": 208, "ri": 208, "principl": 209, "cattransform": 209, "notabl": 209, "rewardsum": [209, 218, 225, 412, 413], "smoothli": [210, 229], "add_1": 210, "cache_spec": 210, "set_missing_toler": 210, "keyerror": [210, 419], "danger": 211, "vc1": 212, "vc1_vec": 212, "untrain": 212, "make_noload_model": 212, "vip": [213, 214, 415], "implicit": [214, 314, 322, 416], "jason": 214, "ma": 214, "shagun": 214, "sodhani": 214, "dinesh": 214, "jayaraman": 214, "osbert": 214, "bastani": 214, "ami": 214, "zhang": 214, "vip_vec": 214, "final_nam": 215, "sb3": 215, "terminal_obs_read": 215, "truli": [215, 418], "till": 215, "shared_td": 216, "decai": [216, 227, 228, 245, 330, 375, 400, 401, 403, 419], "9999": [216, 414], "0001": [216, 243, 264, 402, 414], "to_observation_norm": 216, "frozen_copi": 216, "race": 216, "underflow": [216, 375], "build_td_for_shared_vecnorm": 216, "memmori": 216, "queue": [216, 416], "td_share": 216, "unfreez": 216, "train_env": 216, "eval_env": 216, "state_dim": [217, 234, 239, 268, 273, 274, 287], "action_dim": [217, 234, 235, 237, 239, 268, 287, 400, 411], "gsde": [217, 327, 391], "gsdemodul": 217, "rb_transform": 218, "resist": 218, "insensit": 218, "sensit": [218, 401], "_orig": 218, "95": [218, 256, 334, 401, 402, 403, 414], "tdreset": [218, 411], "window": [218, 291, 412, 416, 418], "edit": [218, 407], "cube": 219, "check_dtyp": 220, "discrep": [220, 306, 308, 310, 311, 323, 326, 328, 338], "rng": [220, 414], "unsqueeze_null_shap": 223, "probabilistictdmodul": [224, 254, 292, 296, 339, 373], "next_tensordict": 225, "keep_oth": [225, 414], "exclude_reward": 225, "exclude_don": 225, "exclude_act": 225, "next_": 225, "funtion": 225, "_stepmdp": 225, "write_full_fals": 226, "_terminated_or_trunc": 226, "po": [227, 228, 246], "sigma_init": [227, 228, 412], "sigma_end": [227, 228, 412], "annealing_num_step": [227, 228, 245, 246, 269, 270, 400, 401, 403, 405, 409, 412], "sigma": [227, 228, 247, 248, 250, 251, 252, 269, 270, 278, 279, 402, 412], "captur": [227, 228, 245, 246, 269, 270], "omiss": [227, 228, 245, 246, 269, 270], "ommit": [227, 228, 245, 246, 269, 270], "momentum": 229, "max_r": 229, "max_d": 229, "warmup_step": 229, "batchrenorm": 229, "1702": 229, "03275": 229, "corenet": 229, "enhanc": 229, "warmup": 229, "phase": [229, 413, 416], "outlier": 229, "period": 229, "varianc": [229, 230, 250, 264, 278, 279, 396, 400, 402, 413], "warm": 229, "renorm": 229, "entropi": [230, 306, 307, 308, 309, 314, 315, 322, 323, 325, 326, 327, 329, 331, 332, 413], "botev": 230, "2013": [230, 402], "cem": 230, "plan": [230, 255, 256], "k": [230, 231, 247, 248, 251, 252], "maximis": [230, 235, 237, 256, 395, 401, 402, 413], "modelbasedenv": [230, 256], "planning_horizon": [230, 256], "optim_step": [230, 256, 401, 409], "mpc": [230, 255, 256], "num_candid": [230, 256], "candid": [230, 256], "top_k": [230, 256], "modelbasedenvbas": [230, 255, 256, 393], "safemodul": [230, 255, 284, 286, 296, 306, 307, 309, 314, 315, 322, 326, 327, 328, 329, 331, 332, 382, 383, 387, 393, 418], "consistentdropout": 231, "input_shap": 231, "batcht": 231, "make_tensordict_prim": [231, 249, 253, 403], "input_dtyp": 231, "pase": 231, "get_default_dtyp": [231, 375], "mask_6127171760": 231, "env0": [231, 419], "num_cel": [232, 233, 235, 236, 237, 238, 243, 244, 249, 253, 254, 259, 260, 284, 303, 401, 402, 403, 405, 406, 409, 412, 413, 418], "elu": [232, 233, 235, 236, 237, 238, 243, 244, 259, 401, 418], "activation_kwarg": [232, 233, 254], "norm_class": [232, 233, 235, 236, 254], "norm_kwarg": [232, 233, 254], "bias_last_lay": [232, 233, 235, 236, 237, 238, 244, 254], "aggregator_class": [232, 233, 235, 236, 401, 403, 418], "squashdim": [232, 233, 235, 244, 259, 418], "aggregator_kwarg": [232, 233, 235, 236, 401, 403], "squeeze_output": [232, 233, 235, 236, 401, 403], "cell": [232, 233, 247, 248, 249, 251, 252, 253, 254, 259, 260, 402, 404, 405, 406, 407, 408, 409], "kernel": [232, 233, 244, 259], "cnet": [232, 233], "conv3d": 232, "lazyconv2d": [233, 235, 236, 244, 259, 418], "transformer_config": [234, 268, 287], "dtconfig": [234, 239, 268], "2202": [234, 239, 325], "05607": [234, 239, 325], "decisiontransform": [234, 268], "return_to_go": [234, 239, 268, 287], "conv_net_kwarg": [235, 236], "mlp_net_kwarg": [235, 236, 237], "use_avg_pool": [235, 236], "WITH": [235, 236, 237, 238, 269, 270, 330], "1509": [235, 236, 237, 238, 256, 269, 270, 311, 321, 330, 414], "02971": [235, 236, 237, 238, 269, 270, 330], "reus": [235, 367], "convnet": [235, 236, 244, 259, 403, 405, 418], "ndims_in": 235, "avgpool": [235, 236], "lazylinear": [235, 236, 237, 238, 244, 254, 395, 402, 405, 414, 415, 418], "2304": [235, 401], "adaptiveavgpool2d": [236, 401, 403], "output_s": [236, 401, 403], "squeeze2dlay": 236, "400": [237, 238, 408, 413, 414, 416], "mlp_net_kwargs_net1": 238, "mlp_net_kwargs_net2": 238, "mlp1": 238, "mlp2": 238, "decion": 239, "desdescrib": 239, "n_embd": 239, "n_layer": [239, 247, 251], "n_head": 239, "n_inner": 239, "n_posit": 239, "resid_pdrop": 239, "attn_pdrop": 239, "gpt2config": 239, "atol": [240, 277], "rtol": [240, 277], "batch_shap": [240, 277], "event_shap": [240, 277], "absolut": [240, 277, 400], "densiti": [240, 257, 258, 267, 279], "mass": [240, 257, 258, 267, 279, 414], "rsampl": [240, 258, 267, 296], "sample_shap": [240, 257, 258, 267], "softmax": [241, 258, 267, 288, 289], "action_valu": [241, 242, 272, 288, 289, 293, 294, 315, 324, 338, 395, 403, 405, 409], "var_num": [242, 272, 288, 289, 294], "action_value_kei": [242, 272, 288, 289, 293, 294, 324, 338], "action_mask_kei": [242, 245, 246, 272, 288, 289, 293, 294], "perspect": [242, 289, 316, 402], "1707": [242, 289, 316, 326], "06887": [242, 289, 316], "mult": [242, 260, 272, 288, 289, 293, 294], "tensordict_modul": [242, 247, 248, 251, 252, 272, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 306, 307, 309, 310, 314, 315, 322, 326, 327, 328, 329, 331, 332, 395], "nbin": [242, 288, 395], "customdistributionalqv": 242, "log_softmax": [242, 288], "qvalue_actor": [242, 272, 288, 293, 395], "to_modul": [242, 295, 298, 400, 418], "std_bia": 243, "std_min_val": 243, "belief": [243, 265, 273, 274], "1912": [243, 317, 318, 319], "01603": [243, 317, 318, 319], "softplu": [243, 264, 302, 304, 305], "out_features_valu": 244, "cnn_kwarg": [244, 401], "mlp_kwarg": [244, 401], "duel": 244, "cnn": [244, 259, 401, 405, 418], "06581": 244, "greedi": [245, 246, 272, 289, 294, 401, 403, 405], "eps_init": [245, 246, 269, 270, 401, 403, 405, 409], "eps_end": [245, 246, 269, 270, 401], "explorative_polici": [245, 246, 269, 270], "9055": [245, 246, 414], "9277": [245, 246], "6295": [245, 246], "2532": [245, 246], "grad_fn": [245, 246, 283, 418], "addbackward0": [245, 246], "batch_first": [247, 249, 251, 253, 403], "bidirect": [247, 251, 403], "cudnn": [247, 248, 251, 252, 403], "rnn": [247, 248, 249, 251, 252, 253, 403, 405], "device_count": [247, 248, 251, 252, 419], "n_in": [247, 248, 251, 252], "n_out": [247, 248, 251, 252], "h0": [247, 248, 251, 252], "h1": [247, 248, 251, 252], "vectoris": [247, 248, 251, 252], "call_gru": [247, 248], "h_out": [247, 248, 251, 252], "batched_cal": [247, 248, 251, 252], "gate": [247, 248, 251], "r_t": 247, "w_": [247, 248, 251, 252], "ir": [247, 248], "x_t": [247, 251], "b_": [247, 248, 251, 252], "hr": [247, 248, 251], "h_": [247, 248, 251], "z_t": 247, "iz": [247, 248], "hz": [247, 248], "n_t": 247, "odot": [247, 248, 251, 252], "hn": [247, 248, 251], "h_t": [247, 251], "sigmoid": [247, 248, 251, 252], "hadamard": [247, 248, 251, 252], "multilay": [247, 251], "_t": [247, 251, 413, 414], "ge": [247, 251], "bernoulli": [247, 251], "b_ih": [247, 248, 251, 252, 253], "b_hh": [247, 248, 251, 252, 253], "h_0": [247, 251, 252], "unbatch": [247, 251], "pack_padded_sequ": [247, 251], "pack_sequ": [247, 251], "num": [247, 251, 409], "_layer": [247, 251], "_size": [247, 248, 251, 252], "h_n": [247, 251], "packedsequ": [247, 251], "weight_ih_l": [247, 251], "learnabl": [247, 248, 251, 252], "w_ir": 247, "w_iz": 247, "w_in": 247, "num_direct": [247, 251], "weight_hh_l": [247, 251], "w_hr": 247, "w_hz": 247, "w_hn": 247, "bias_ih_l": [247, 251], "b_ir": 247, "b_iz": 247, "b_in": 247, "bias_hh_l": [247, 251], "b_hr": 247, "b_hz": 247, "b_hn": 247, "mathcal": [247, 248, 251, 252], "sqrt": [247, 248, 251, 252, 269, 270], "frac": [247, 248, 251, 252, 402], "seq_len": [247, 251], "subtli": 247, "matrix": [247, 251, 262, 263], "contrast": [247, 321, 416], "hx": [247, 248, 251, 252], "lstmcell": [248, 253], "gru_cel": 248, "weight_ih": [248, 252], "weight_hh": [248, 252], "bias_ih": [248, 252], "bias_hh": [248, 252], "rocm": [248, 252], "embedd": [249, 253], "grucel": [249, 295], "python_bas": [249, 253], "recurrent_st": [249, 253, 303, 403], "custom_kei": [249, 253], "recurrent_mod": [249, 253], "rs": [249, 400], "gru_module_train": 249, "policy_train": [249, 253], "traj_td": [249, 253], "supplementari": [249, 253, 402, 419], "That": [249, 253, 402, 412], "dealt": [249, 253], "poorli": [249, 253], "data_collector": [249, 253, 401], "policy_infer": [249, 253], "td_inf": [249, 253], "assert_clos": [249, 253], "upscal": [250, 278, 279], "tanh_loc": [250, 278, 279], "event_dim": [250, 277, 278], "poor": [250, 278, 279], "explos": [250, 278, 279], "switch": [250, 279, 358], "formula": [250, 278, 279, 306, 308, 323, 326, 396, 402], "proj_siz": 251, "c0": [251, 252], "c1": [251, 252], "call_lstm": [251, 252], "c_out": [251, 252], "i_t": 251, "ii": [251, 252], "hi": [251, 252], "f_t": 251, "hf": [251, 252], "g_t": 251, "ig": [251, 252], "hg": [251, 252], "o_t": 251, "ho": [251, 252], "c_t": 251, "c_": 251, "forget": 251, "1402": 251, "1128": 251, "c_0": [251, 252], "proj": 251, "c_n": 251, "w_ii": 251, "w_if": 251, "w_ig": 251, "w_io": 251, "w_hi": 251, "w_hf": 251, "w_hg": 251, "w_ho": 251, "b_ii": 251, "b_if": 251, "b_ig": 251, "b_io": 251, "b_hi": 251, "b_hf": 251, "b_hg": 251, "b_ho": 251, "weight_hr_l": 251, "_revers": 251, "analog": [251, 405], "cn": 251, "lstm_cell": 252, "h_1": 252, "c_1": 252, "time_step": [252, 291], "cx": 252, "correspont": 253, "recurrent_state_h": [253, 403], "recurrent_state_c": [253, 403], "triplet": [253, 293, 294], "lstm_modul": 253, "rs_h": 253, "rs_c": 253, "hidden0": 253, "hidden1": 253, "single_bias_last_lay": 254, "layer_class": 254, "layer_kwarg": 254, "perceptron": [254, 405], "aslo": 254, "42": [254, 306, 307, 309, 310, 314, 322, 329, 399, 400, 401, 414, 417, 418], "noisylinear": [254, 262, 393, 401], "noisylazylinear": [254, 393], "mpcplanner": 255, "tensordict_out": [255, 419], "mppi": 256, "covari": 256, "william": [256, 328], "aldrich": 256, "theodor": 256, "01149": 256, "hansen": 256, "wang": 256, "su": 256, "04955": 256, "valueoper": [256, 284, 285, 286, 306, 307, 308, 309, 310, 315, 322, 323, 326, 327, 328, 329, 331, 332, 387, 395, 400, 402, 406], "tdlambdaestim": [256, 393, 400], "value_net": [256, 311, 313, 328, 340, 341, 342, 343, 402, 405, 406, 409], "adv": 256, "lmbda": [256, 334, 340, 343, 345, 351, 352, 353, 356, 357, 396, 400, 402, 413], "value_network": [256, 310, 311, 313, 314, 316, 322, 329, 340, 341, 342, 343, 396, 400, 402, 406, 409, 412], "temperatur": [256, 307, 314, 322], "neg_inf": [257, 258], "inf": [257, 258], "api_doc": [257, 258], "tf_agent": [257, 258], "event": [257, 258, 267, 349, 350, 351, 352, 354, 355, 356, 357, 416], "unnorm": [257, 258, 267], "sparse_mask": [257, 258], "dens": [257, 258], "0831": [257, 258], "1203": [257, 258], "0928": [257, 258], "1972": [257, 258], "grad_method": [258, 267], "reparamgradientstrategi": [258, 267], "passthrough": [258, 267], "relaxedonehot": [258, 267], "zeros_lik": [258, 414], "sample_non_valid": 258, "share_param": [259, 260, 261, 412, 413], "use_td_param": [259, 260, 261], "get_stateful_net": [259, 260, 261, 324, 395, 396], "from_stateful_net": [259, 260, 261, 324, 396], "homogen": [259, 260, 412, 413], "tensordictparam": [259, 260], "_empty_net": [259, 260], "roughli": [259, 260, 418], "agent_network": [259, 260], "modulelist": [259, 260, 418], "2592": [259, 401], "decentr": 259, "n_agent_input": [260, 261, 412, 413], "n_agent_output": [260, 261, 412, 413], "lazili": [260, 414], "toech": 260, "centalis": 260, "shown": [260, 395, 411, 412, 413, 416], "agent_dim": 261, "vmap_random": [261, 324, 396], "stateful_net": [261, 324], "Such": [261, 324], "multiagentmlp": [261, 412, 413], "snet": 261, "hasattr": [261, 400], "kaiming_normal_": 261, "std_init": [262, 263], "device_typ": [262, 263], "initialize_paramet": 262, "isol": [262, 324], "1706": [263, 280], "10295v3": 263, "induc": 263, "aid": 263, "scale_map": 264, "biased_softplus_1": 264, "scale_lb": [264, 273, 274], "module_norm": 264, "1803": [265, 266, 271], "10122": [265, 266], "rnn_hidden": 265, "latent": 266, "excacli": 267, "inres": 268, "mu": [268, 269, 270, 402], "ornstein": [269, 270, 400], "uhlenbeck": [269, 270, 400], "ou": [269, 270, 400], "correl": [269, 270], "noise_t": [269, 270], "noise_": [269, 270], "theta": [269, 270, 402, 414], "sigma_t": [269, 270], "sigma_": [269, 270], "anneal": [269, 270, 401, 405, 412], "ou_prev_nois": [269, 270], "ou_step": [269, 270], "x0": [269, 270], "sigma_min": [269, 270], "n_steps_ann": [269, 270], "is_init_kei": [269, 270], "_ou_prev_nois": [269, 270], "_ou_step": [269, 270], "state_shap": [271, 338], "mixing_embed_dim": [271, 338], "qmix": [271, 412, 413], "mixer": [271, 280, 338], "monoton": 271, "hyper": 271, "11485": 271, "qmixerloss": [271, 280], "qmix_vdn": [271, 280], "chosen_action_valu": [271, 272, 280, 293, 294, 338, 395, 403, 405], "vdn": [271, 280], "hidden_dim": [273, 274], "posterior": [273, 318], "rssm": [273, 274, 318], "1811": [273, 274], "04551": [273, 274], "obs_embed": 273, "rnn_hidden_dim": 274, "dream": 274, "safe_tanh": 278, "tanhtransform": 278, "overflow": [278, 283, 288, 289, 292, 293, 294, 295, 296], "get_mod": 278, "adam": [278, 400, 401, 402, 403, 406, 409, 412, 413, 414], "decomposit": 280, "05296": 280, "hide": [281, 402, 412, 413], "satisfi": [281, 395], "vmap_dim": 281, "lam": 281, "sample_in": 281, "sample_in_td": 281, "vm": 281, "translat": [283, 292], "character": [283, 288, 292, 293, 295, 416], "td_modul": [283, 284, 285, 286, 292, 295, 296, 298, 300, 405, 418], "3635": 283, "0340": 283, "1476": 283, "3911": [283, 414], "1664": [283, 401, 414], "5455": 283, "2247": 283, "4583": 283, "2916": 283, "2160": 283, "5337": 283, "5193": 283, "addmmbackward0": 283, "actorvalueoper": [284, 308, 323, 326, 395, 405], "get_policy_oper": [284, 285, 286, 308, 323, 326, 395], "standalon": [284, 285, 286, 405], "tdmodul": [284, 285, 286, 387], "get_critic_oper": 284, "common_oper": [284, 286], "policy_oper": [284, 285, 286], "value_oper": [284, 285, 286], "module_hidden": [284, 286], "td_module_hidden": [284, 286], "module_act": [284, 286], "td_module_act": [284, 285, 286], "module_valu": [284, 285, 286], "td_module_valu": [284, 285, 286], "state_action_valu": [284, 300, 307, 309, 314, 322, 329, 339, 387, 395, 400, 412, 418], "td_clone": [284, 285, 286], "tensordictmodulewrapp": [284, 382, 383, 387], "get_policy_head": [284, 285, 286], "safesequenti": [284, 285, 286, 338], "head": [284, 286, 303, 308, 323, 326], "get_value_head": [284, 285, 286], "get_value_oper": [284, 285, 286, 308, 323, 326], "action_modul": 285, "state_valu": [285, 286, 300, 308, 314, 322, 323, 326, 327, 329, 340, 341, 342, 343, 345, 347, 349, 351, 353, 354, 356, 395, 400, 402, 413], "actorcriticoper": [286, 395, 405], "embeddig": 286, "refet": 286, "actorcriticwrapp": [286, 395, 400], "inferec": 287, "set_tensor_kei": 287, "dt_inference_wrapp": 287, "baz": 287, "inference_context": 287, "obs_dim": 287, "tanhdelta": [287, 393, 400, 412], "dtactor": 287, "actor_modul": [287, 418], "dist_class": 287, "dist_kwarg": 287, "distribution_kwarg": [287, 292, 296, 402, 412, 413], "inference_actor": 287, "sequence_length": 287, "mask_context": 287, "out_act": 287, "qvaluemodul": [288, 293, 338, 403, 405, 409], "distributionaldqnnet": 288, "make_log_softmax": 288, "my_action_valu": [289, 294], "chanc": 289, "thid": 289, "lmheadmodel": 290, "actor_head": [290, 308, 323, 326], "base_model": 290, "lm_head": 290, "macro": 291, "lookahead": 291, "n_action": [291, 307, 309, 311, 313, 325, 329], "reshape_cat": 291, "actor_bas": 291, "obs_cat": 291, "obs_cat_reshap": 291, "action_orig": 291, "counter": [291, 370, 397], "default_interaction_typ": [292, 296, 405], "interaction_typ": [292, 296], "datacollectorbas": [292, 379, 382, 383, 387, 393], "set_interaction_typ": [292, 296], "compositedistribut": [292, 306, 326, 405], "distribution_map": 292, "name_map": 292, "cache_dist": [292, 296], "n_empirical_estim": [292, 296], "compound": [292, 405], "chose": 294, "functionalmodul": 295, "functionalmodulewithbuff": 295, "td_fmodul": 295, "td_function": 295, "td_state": 295, "params_repeat": 295, "td_vmap": [295, 298], "random_sampl": [295, 296], "suppli": 296, "fist": 296, "log_prob_kei": [296, 413], "probabilistictensordictsequenti": [297, 306, 308, 323, 326, 328, 382, 383, 418], "partial_toler": [297, 298, 411], "who": [297, 298], "AND": [297, 298, 309], "tensordictsequenci": 298, "tensordictsequ": 298, "safeprobabilisticmodul": [298, 395], "spec1": 298, "net1": 298, "module1": 298, "td_module1": 298, "spec2": 298, "module2": 298, "td_module2": 298, "clamp": [299, 318, 377, 412, 414], "boundari": [299, 402, 412, 413], "resolut": 299, "9944": 299, "9991": 299, "3020": 299, "2299": [299, 414], "5418": 299, "2989": 299, "6849": 299, "3169": 299, "2690": 299, "9649": [299, 414], "5686": 299, "8602": 299, "0315": 299, "8455": [299, 414], "6027": 299, "4746": 299, "7843": 299, "7782": 299, "2111": 299, "5115": 299, "4687": 299, "5760": 299, "custommodul": 300, "imaginari": 301, "imagin": 301, "transition_model": 301, "get_reward_oper": 301, "get_transition_model_oper": 301, "min_val": [302, 305], "_bia": 302, "surject": 305, "expln": 305, "biased_softplu": [305, 393], "beggin": 305, "biased_softplus_": 305, "syntax": [305, 400], "met": [305, 412, 414], "1602": 306, "01783v2": 306, "actor_network": [306, 307, 308, 309, 310, 312, 314, 315, 322, 323, 325, 326, 327, 328, 329, 331, 332, 396, 400, 402, 406, 412, 413], "critic_network": [306, 308, 323, 326, 328, 402, 413], "entropy_bonu": [306, 308, 323, 326, 402], "favour": [306, 308, 323, 326], "samples_mc_entropi": [306, 308, 323, 325, 326], "mont": [306, 308, 323, 326, 400], "carlo": [306, 308, 323, 326, 400], "entropy_coef": [306, 308, 323, 326, 402, 413], "critic_coef": [306, 308, 323, 326, 402], "loss_critic_typ": [306, 308, 323, 326, 328, 402], "l1": [306, 308, 310, 311, 315, 323, 326, 327, 328, 331, 332, 335, 338, 395, 400], "l2": [306, 308, 310, 311, 312, 313, 315, 318, 319, 323, 326, 327, 328, 331, 332, 335, 338, 400, 412], "smooth_l1": [306, 307, 308, 309, 310, 311, 314, 315, 322, 323, 326, 327, 328, 329, 331, 332, 335, 338, 402], "separate_loss": [306, 308, 309, 310, 314, 315, 322, 323, 326, 327, 328, 329, 331, 332], "propag": [306, 308, 309, 310, 314, 315, 322, 323, 326, 327, 328, 329, 331, 332, 340, 341, 342, 343, 402, 412, 413], "advantage_kei": [306, 308, 323, 326, 328, 340, 341, 342, 343], "value_target_kei": [306, 308, 323, 326, 328, 340, 341, 342, 343], "value_target": [306, 308, 323, 326, 328, 340, 341, 342, 343, 402, 413], "ddp": [306, 308, 323, 326, 328], "fsdp": [306, 308, 323, 326, 328], "divid": [306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 320, 322, 323, 325, 326, 327, 328, 329, 331, 332, 380, 395, 400, 412, 413, 414], "clip_valu": [306, 308, 323, 326, 328], "loss_crit": [306, 326, 402, 413], "loss_entropi": [306, 326, 402, 413], "loss_object": [306, 326, 402, 413], "recur": [306, 307, 309, 310, 311, 313, 314, 315, 322, 326, 327, 328, 329, 331, 332, 340, 341, 342, 343, 344, 405], "next_reward": [306, 307, 309, 310, 311, 313, 314, 315, 322, 326, 327, 328, 329, 331, 332, 340, 341, 342, 343], "next_don": [306, 307, 309, 310, 311, 313, 314, 315, 322, 326, 327, 328, 329, 331, 332, 340, 341, 342, 343], "next_termin": [306, 307, 309, 310, 311, 313, 314, 315, 322, 326, 327, 328, 329, 331, 332, 340, 341, 342, 343], "loss_obj": 306, "next_observ": [306, 307, 309, 310, 311, 313, 314, 315, 322, 326, 327, 328, 329, 331, 332, 411], "sacloss": [306, 321, 330, 393], "fraction": 306, "make_value_estim": [306, 307, 309, 310, 311, 313, 315, 316, 317, 322, 324, 326, 327, 328, 329, 331, 332, 333, 338, 396, 400, 401, 412, 413, 418], "value_typ": [306, 307, 309, 310, 311, 313, 315, 316, 317, 322, 324, 326, 327, 328, 329, 331, 332, 334, 338, 400], "hyperparam": [306, 307, 309, 310, 311, 313, 315, 316, 317, 322, 324, 326, 327, 328, 329, 331, 332, 338, 400], "enum": [306, 307, 309, 310, 311, 313, 315, 316, 317, 322, 324, 326, 327, 328, 329, 331, 332, 334, 338, 400], "default_value_estim": [306, 307, 309, 310, 311, 313, 315, 316, 317, 322, 324, 326, 327, 328, 329, 331, 332, 338, 400, 418], "default_value_kwarg": [306, 307, 309, 310, 311, 313, 315, 316, 317, 322, 324, 326, 327, 328, 329, 331, 332, 338, 393, 400], "dqn_loss": [306, 307, 309, 310, 311, 313, 315, 316, 317, 322, 324, 326, 327, 328, 329, 331, 332, 333, 338], "td1": [306, 307, 309, 310, 311, 313, 315, 316, 317, 322, 324, 326, 327, 328, 329, 331, 332, 338, 400], "conserv": [307, 313], "qvalue_network": [307, 309, 314, 315, 322, 327, 329, 331, 332], "unti": [307, 309, 322, 327, 329, 331, 332], "loss_funct": [307, 309, 310, 311, 312, 313, 314, 315, 322, 327, 329, 331, 332, 335, 338, 400, 412], "alpha_init": [307, 309, 315, 325, 327, 329], "min_alpha": [307, 309, 315, 325, 327, 329], "max_alpha": [307, 309, 315, 325, 327, 329], "fixed_alpha": [307, 309, 315, 325, 327, 329], "target_entropi": [307, 309, 315, 325, 327, 329], "prod": [307, 309, 325, 329], "delay_actor": [307, 310, 329, 331, 332], "delay_qvalu": [307, 315, 327, 329, 331, 332], "min_q_weight": 307, "max_q_backup": 307, "backup": 307, "deterministic_backup": 307, "num_random": 307, "with_lagrang": 307, "lagrang": 307, "lagrange_thresh": 307, "valueclass": [307, 309, 310, 315, 327, 329, 331, 332], "qvalu": [307, 309, 314, 315, 322, 327, 329, 331, 332], "loss_actor": [307, 309, 310, 314, 315, 322, 327, 328, 329, 331, 332, 372, 400, 406, 412, 418], "loss_actor_bc": 307, "loss_alpha": [307, 309, 315, 327, 329], "loss_cql": [307, 313], "loss_qvalu": [307, 309, 313, 314, 315, 322, 327, 329, 331, 332], "loss_alpha_prim": 307, "clip_epsilon": [308, 402, 413], "normalize_advantag": [308, 323, 326, 413], "value_kei": [308, 323, 326, 340, 341, 342, 343, 400], "somemodul": [308, 323, 326], "someactor": [308, 323, 326], "value_head": [308, 323, 326], "somevalu": [308, 323, 326], "loss_modul": [308, 321, 323, 324, 326, 330, 377, 386, 387, 396, 397, 400, 401, 402, 412, 413, 416], "IN": 309, "FOR": 309, "simplic": [309, 401, 402, 407, 415, 416, 418], "openreview": [309, 327], "pczqttstix": 309, "qvalue_loss": [309, 331], "actor_loss": [309, 331], "alpha_loss": 309, "num_qvalue_net": [309, 314, 315, 322, 327, 329, 331, 332], "target_entropy_buff": 309, "delay_valu": [310, 311, 313, 316, 328, 329, 338, 401, 403, 409, 412], "loss_valu": [310, 314, 322, 328, 329, 400, 402, 406, 412, 413, 418], "pred_valu": [310, 313, 331, 332, 400, 406, 418], "pred_value_max": [310, 400, 406, 418], "target_valu": [310, 313, 327, 331, 332, 339, 396, 400, 406, 418], "target_value_max": [310, 400, 406, 418], "qvalueactor": [311, 313, 338, 395, 401, 403], "double_dqn": 311, "06461": [311, 321], "mult_one_hot": [311, 314, 315, 338], "loss_val": [311, 313, 396, 400, 402, 403, 406, 407, 409, 412, 413, 416], "01345": 312, "distanc": [313, 323, 335, 339, 340, 413], "dcql_loss": 313, "2110": [314, 322], "06169": [314, 322], "expectil": [314, 322], "tau": [314, 322, 330, 400, 401, 412], "antmaz": [314, 322], "sticht": [314, 322], "onehotcategor": [314, 315, 393], "target_entropy_weight": 315, "disctount": 316, "distributionalqvalueactor": [316, 395], "input_tensordict": [316, 400], "actor_model": 317, "value_model": [317, 319], "imagination_horizon": 317, "unrol": [317, 345, 346, 349, 350, 351, 352, 353, 354, 355, 356, 357], "discount_loss": [317, 319], "lambda_kl": 318, "lambda_reco": 318, "lambda_reward": 318, "reco_loss": 318, "reward_loss": 318, "free_nat": 318, "nat": 318, "delayed_clamp": 318, "global_averag": 318, "value_loss": 319, "fake_data": 319, "1606": 320, "03476": 320, "discriminator_network": 320, "use_grad_penalti": 320, "gp_lambda": 320, "discrimin": 320, "ddpgloss": [321, 330, 387, 393, 400, 406, 412, 418], "td3loss": [321, 330, 393], "value_network_update_interv": 321, "qvalueclass": 322, "loss_value_diff": 322, "diff": 322, "old_polici": 323, "new_polici": 323, "apart": [323, 413], "dtarg": 323, "samples_mc_kl": 323, "analyt": 323, "decrement": 323, "loss_": [324, 372, 396, 400, 406], "equip": [324, 403, 405], "gh": 324, "_acceptedkei": 324, "_forward_value_estimator_kei": 324, "alter": [324, 395], "value_estim": [324, 340, 341, 342, 343, 344, 396, 400, 413], "myloss": 324, "action2": 324, "augment": [324, 407, 409, 416], "set_exploration_typ": [324, 373, 393, 395, 402, 403, 405, 412, 418], "deterministic_sampling_mod": 324, "convert_to_funct": [324, 400], "expand_dim": 324, "create_target_param": [324, 400], "compare_against": [324, 400], "_param": 324, "expans": 324, "resampl": 324, "_target_param": 324, "network_nam": 324, "blend": 324, "add_random_modul": [324, 396], "proxim": [326, 402, 413], "flavor": [326, 400, 412, 413, 418], "clipppoloss": [326, 393, 402, 413], "klpenppoloss": [326, 393], "06347": 326, "gae": [326, 393, 396, 400, 402, 413], "ppo_loss": 326, "tdlambda": [326, 334, 396, 400], "base_lay": 326, "randn_lik": 326, "samplelogprob": 326, "ay8zfzm0tdd": 327, "sub_sample_len": 327, "subsampl": [327, 368, 397], "action_log_prob_actor": 327, "state_action_value_actor": [327, 331, 332], "connectionist": 328, "1992": 328, "doi": 328, "1007": 328, "bf00992696": 328, "actor_net": [328, 400, 402], "1801": 329, "01290": 329, "applic": [329, 338, 404, 405, 414], "1812": 329, "05905": 329, "redqloss": [330, 393], "math": 330, "theta_t": [330, 414], "theta_": [330, 414], "polyak": 330, "minimalist": 331, "06860": 331, "policy_nois": [331, 332], "noise_clip": [331, 332], "td3_bc": 331, "bc_loss": 331, "lmbd": 331, "next_state_valu": [331, 332, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 393], "td0": [333, 400, 412], "strict_shap": 335, "view_a": 335, "qmixer": [338, 393], "local_valu": 338, "visibl": [338, 413], "dafault": 338, "acceptedkei": 338, "global_valu": 338, "penultim": 338, "local_value_network": 338, "mixer_network": 338, "value_modul": [338, 402, 418], "qnet": [338, 400], "next_val_kei": 339, "pred_next_v": 339, "usus": 339, "mse": 339, "q_valu": 339, "n_steps_to_next": 339, "value_next_st": 339, "1506": [340, 345, 353], "02438": [340, 345, 353], "exponenti": [340, 341, 342, 343, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 375], "average_ga": [340, 402], "skip_exist": [340, 341, 342, 343], "time_dim": [340, 342, 343, 345, 346, 349, 350, 351, 352, 353, 354, 355, 356, 357], "gradient_mod": 340, "value_error": [340, 341, 342, 343, 344], "target_param": [340, 341, 342, 343, 344, 400, 413], "98": [340, 341, 342, 343, 400, 401, 414], "94": [340, 343, 401, 414], "unpack": [340, 341, 342, 343], "tensor_kei": [340, 341, 342, 343, 344], "next_valu": [340, 341, 342, 343, 344], "aka": [341, 401, 412], "average_reward": [341, 342, 343], "tdestim": [341, 342, 344], "infti": 342, "valuefunctionbas": 344, "old_stat": [345, 347, 349, 351, 353, 354, 356], "new_stat": [345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357], "rolling_gamma": [349, 350, 351, 352, 354, 355, 356, 357], "g1": [349, 350, 351, 352, 354, 355, 356, 357], "g2": [349, 350, 351, 352, 354, 355, 356, 357], "g3": [349, 350, 351, 352, 354, 355, 356, 357], "g4": [349, 350, 351, 352, 354, 355, 356, 357], "v3": [349, 350, 351, 352, 354, 355, 356, 357], "preproc": [358, 412], "as_non_tensor": [358, 412], "render_method": 358, "pass_tensordict": 358, "syntat": 358, "sugar": 358, "out_file_bas": 359, "skip_reset": 359, "center_crop": 360, "make_grid": 360, "csv": [360, 362, 364, 401, 408, 409], "wandb": [360, 364, 367, 408, 418], "tensorboard": [360, 364, 366, 408, 418], "log_dir": [360, 361, 362, 364, 366, 367, 401, 409], "cheetah_video": 360, "run_video": 360, "openxexperiencereplai": 360, "run_video_0": 360, "templat": 361, "pt": [362, 397, 415], "video_fp": 362, "minim": [362, 416], "dependeci": 362, "cur_dir": 362, "csv_log": 362, "add_video": 362, "video_": 362, "experiment_nam": [363, 364], "uuid": [363, 401, 419], "logger_typ": 364, "logger_nam": 364, "mlflow": [364, 365], "wandb_kwarg": 364, "mlflow_kwarg": 364, "tracking_uri": 365, "uri": 365, "datastor": 365, "tb_log": 366, "tensoarboard": 366, "td_log": 366, "save_dir": 367, "resum": 367, "uncategor": 367, "sub_traj_len": 368, "min_sub_traj_len": 368, "register_op": [368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 397, 401], "process_optim_batch": [368, 374, 375, 397], "td_out": [368, 376], "_process_optim_batch_hook": [368, 397], "batch_subsampl": 368, "clear_cuda": 369, "pre_optim_step": [369, 397], "log_pbar": [370, 371, 373, 375, 397, 401], "progress": [370, 371, 373, 377, 397, 401, 403, 419], "count_fram": 370, "pre_steps_log": [370, 371, 397], "count_frames_log": 370, "lognam": 371, "r_train": [371, 401], "log_reward": [371, 401], "loss_compon": 372, "appl": 372, "optimizer_hook": 372, "record_interv": [373, 400, 401], "record_fram": [373, 380, 400, 401], "policy_explor": [373, 387, 400, 401, 405, 409], "log_kei": [373, 401], "underestim": 373, "r_evalu": [373, 400], "flatten_tensordict": [374, 401], "max_dim": 374, "rb_trainer": 374, "batch_process": [374, 375, 376, 397], "post_loss": [374, 397], "999": [375, 401], "jitter": 375, "finfo": 375, "default_dtyp": 375, "reward_norm": 375, "update_reward_stat": 375, "normalize_reward": 375, "make_train": [376, 393], "_process_batch_hook": [376, 397], "select_kei": [376, 397], "versatil": [377, 404], "optim_steps_per_batch": [377, 397, 401], "clip_grad_norm": 377, "clip_norm": 377, "progress_bar": 377, "save_trainer_interv": 377, "log_interv": [377, 401], "save_trainer_fil": [377, 397], "update_weights_interv": [379, 401], "update_weight": 379, "post_step": [379, 397, 401], "cfg": [380, 381, 382, 383, 384, 385, 386, 387, 388, 391], "dictconfig": [380, 381, 382, 383, 385, 386, 387, 388, 391], "unknowingli": 380, "annealing_fram": [380, 400], "init_env_step": [380, 381, 400], "proof_environ": [381, 400], "sta": 381, "ot": 381, "actor_model_explor": [382, 383, 400], "make_env_kwarg": [382, 383], "targetnetupdat": [384, 386, 387], "replayargsconfig": 385, "target_net_updat": [387, 400, 401], "constitu": 387, "egreedywrapp": 387, "env_proof": 387, "obs_spec": 387, "net_valu": 387, "dir": [387, 397, 401], "gettempdir": 387, "argpars": [388, 391], "namespac": [388, 391], "parser": [388, 391], "transformed_env_constructor": [388, 393], "num_env_per_collector": [389, 390], "video_tag": 391, "norm_obs_onli": 391, "use_env_cr": 391, "custom_env_mak": 391, "custom_env": 391, "return_transformed_env": 391, "action_dim_gsd": 391, "state_dim_gsd": 391, "obs_norm_state_dict": 391, "wheter": 391, "maker": [391, 401], "asyncdatacollector": 393, "distributedsyncdatacollector": 393, "submitit_delayed_launch": 393, "raycollector": 393, "rational": 393, "footnot": 393, "binarydiscretetensorspec": 393, "boundedtensorspec": 393, "discretetensorspec": 393, "lazystackedcompositespec": 393, "lazystackedtensorspec": 393, "multidiscretetensorspec": 393, "multionehotdiscretetensorspec": 393, "onehotdiscretetensorspec": 393, "unboundedcontinuoustensorspec": 393, "unboundeddiscretetensorspec": 393, "binarytodecim": 393, "tensordictmap": 393, "prompttensordicttoken": 393, "rolloutfrommodel": 393, "tokenizeddatasetload": 393, "create_infinite_iter": 393, "constantklcontrol": 393, "adaptiveklcontrol": 393, "consolidate_spec": 393, "check_no_exclusive_kei": 393, "contains_lazy_spec": 393, "nested2t": 393, "h5combin": 393, "h5split": 393, "tictactoeenv": 393, "check_marl_group": 393, "get_available_librari": 393, "terminated_or_trunc": 393, "dreamerdecod": 393, "braxwrapp": 393, "dmcontrolwrapp": 393, "jumanjienv": 393, "jumanjiwrapp": 393, "meltingpotenv": 393, "meltingpotwrapp": 393, "mogymenv": 393, "mogymwrapp": 393, "multithreadedenvwrapp": 393, "openmlenv": 393, "openspielwrapp": 393, "openspielenv": 393, "pettingzooenv": [393, 412], "robohiveenv": 393, "smacv2env": 393, "smacv2wrapp": 393, "unitymlagentsenv": 393, "unitymlagentswrapp": 393, "vmaswrapp": 393, "qvaluehook": 393, "distributionalqvaluehook": 393, "reset_nois": 393, "cemplann": 393, "mpcplannerbas": 393, "mppiplann": 393, "independentnorm": 393, "normalparamwrapp": 393, "truncatednorm": 393, "maskedonehotcategor": 393, "inv_softplu": 393, "vmapmodul": 393, "distributionaldqnloss": [393, 401], "discretesacloss": 393, "crossqloss": 393, "iqlloss": 393, "discreteiqlloss": 393, "cqlloss": 393, "discretecqlloss": 393, "gailloss": 393, "dtloss": 393, "onlinedtloss": 393, "td3bcloss": 393, "ppoloss": 393, "a2closs": 393, "reinforceloss": 393, "dreameractorloss": 393, "dreamermodelloss": 393, "dreamervalueloss": 393, "td0estim": [393, 400], "td1estim": [393, 400], "td0_return_estim": 393, "td0_advantage_estim": 393, "td1_return_estim": 393, "vec_td1_return_estim": 393, "td1_advantage_estim": 393, "vec_td1_advantage_estim": 393, "td_lambda_return_estim": 393, "vec_td_lambda_return_estim": 393, "td_lambda_advantage_estim": 393, "vec_td_lambda_advantage_estim": 393, "generalized_advantage_estim": 393, "vec_generalized_advantage_estim": 393, "reward2go": 393, "distance_loss": [393, 400], "hold_out_net": 393, "hold_out_param": [393, 400], "softupd": [393, 400, 401, 403, 406, 409, 412], "hardupd": [393, 400, 406], "batchsubsampl": [393, 397], "clearcudacach": 393, "countframeslog": 393, "logreward": [393, 397, 401], "optimizerhook": [393, 401], "replaybuffertrain": [393, 397, 401], "rewardnorm": 393, "selectkei": [393, 397], "trainerhookbas": [393, 397, 401], "updateweight": [393, 397, 401], "make_collector_offpolici": 393, "make_collector_onpolici": 393, "make_dqn_loss": 393, "make_replay_buff": [393, 400], "make_target_updat": 393, "parallel_env_constructor": [393, 400], "sync_async_collector": 393, "sync_sync_collector": 393, "correct_for_frame_skip": 393, "get_stats_random_rollout": 393, "mlflowlogg": 393, "get_logg": 393, "generate_exp_nam": 393, "journei": 394, "textbook": 394, "highlight": [394, 412], "ever": [394, 413], "bump": 394, "think": [394, 402, 412, 413, 419], "benefit": [394, 404, 412, 413, 416], "pr": 394, "ground": [395, 400, 414], "recycl": [395, 416], "impos": 395, "noisier": 395, "Their": [395, 412, 413], "consistentdropoutmodul": 395, "sd": 395, "prob_modul": 395, "pick": [395, 400, 401, 405], "hopefulli": [395, 401], "functional_modul": 395, "make_funct": 395, "mathbb": [395, 401], "rightarrow": [395, 401], "soften": 395, "backbon": [395, 403, 405, 411, 418], "make_actor": 395, "make_valu": 395, "shared_param": 395, "make_common": 395, "reusabl": [396, 400, 416], "swappabl": [396, 400], "characterist": [396, 400, 414], "trainabl": [396, 400, 406, 415], "smth": [396, 400], "metric": [396, 400], "plenti": 396, "amort": [396, 401, 402], "told": [396, 402], "pseudo": [396, 407, 414], "buri": 396, "str_valu": 396, "nutshel": [396, 400], "barto": [396, 412, 413], "chapter": [396, 408], "significantli": [396, 400, 401, 406, 413], "next_stat": 396, "value_net_loss": 396, "pow": [396, 400], "room": 396, "signifi": [396, 412, 413], "underperform": 396, "thin": 396, "intric": [396, 405], "believ": 397, "scheme": [397, 419], "substenti": 397, "_pre_steps_log_hook": 397, "_pre_optim_hook": 397, "sub_batch": 397, "_post_loss_hook": 397, "_post_optim_hook": 397, "post_optim": [397, 401], "_post_optim_log": 397, "post_optim_log": 397, "_post_steps_hook": 397, "_post_steps_log_hook": 397, "post_steps_log": 397, "reserv": 397, "logginghook": 397, "logging_hook": 397, "save_dict": 397, "some_valu": 397, "torchsnapshot": 397, "ckpt_backend": 397, "filepath": 397, "save_train": 397, "load_from_fil": 397, "407": [399, 414, 417], "galleri": [399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419], "mem": [399, 417], "mb": [399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419], "torchrl_demo": [399, 417, 418], "979": [399, 417, 418], "327": [399, 414, 417], "torchrl_env": [399, 417, 419], "917": [399, 417, 419], "2964": [399, 417], "dqn_with_rnn": [399, 403, 417], "564": [399, 403, 414, 417], "2232": [399, 417], "rb_tutori": [399, 416, 417], "55": [399, 401, 414, 415, 416, 417], "642": [399, 416, 417], "490": [399, 414, 417], "51": [399, 400, 401, 411, 413, 414, 417], "454": [399, 414, 417], "319": [399, 414, 417], "coding_dqn": [399, 401, 417], "957": [399, 401, 414, 417], "1266": [399, 417], "multiagent_ppo": [399, 413, 417], "52": [399, 400, 401, 402, 413, 414, 415, 417], "899": [399, 413, 414, 417], "357": [399, 413, 414, 417], "coding_ddpg": [399, 400, 417], "854": [399, 400, 414, 417], "330": [399, 400, 414, 417], "multiagent_competitive_ddpg": [399, 412, 417], "974": [399, 412, 417], "323": [399, 409, 412, 414, 417], "coding_ppo": [399, 402, 417], "279": [399, 402, 414, 417], "pretrained_model": [399, 415, 417], "393": [399, 414, 415, 417], "2353": [399, 417], "multi_task": [399, 411, 417], "107": [399, 411, 414, 417], "321": [399, 407, 414, 417], "408": [399, 404, 414, 417], "376": [399, 405, 414, 417], "921": [399, 406, 414, 417], "853": [399, 409, 417], "051": [399, 407, 417], "777": [399, 408, 417], "348": [399, 414, 417], "author": [400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 412, 413, 414, 416, 419], "vincent": [400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 414, 416, 419], "moen": [400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 414, 416, 419], "assembl": 400, "focus": [400, 406], "straightforward": [400, 401, 404, 405, 406, 407, 416], "maxim": [400, 406, 414], "transpar": [400, 403], "illustr": [400, 401, 405, 416], "bash": 400, "is_fork": [400, 401, 402, 403, 412, 413, 415], "get_start_method": [400, 401, 402, 403, 412, 413, 415], "collector_devic": 400, "loss_dict": 400, "oblivi": [400, 402, 416], "elementari": 400, "didact": 400, "dilut": 400, "pessimist": [400, 401, 402], "target_actor_network_param": 400, "actor_in_kei": 400, "actor_crit": 400, "noth": [400, 402], "compromis": 400, "hp": 400, "_value_estim": 400, "elif": [400, 401], "notimplementederror": 400, "unknown": 400, "_loss_actor": 400, "td_copi": 400, "actor_network_param": [400, 412], "value_network_param": [400, 412], "_loss_valu": 400, "pred_val": 400, "target_value_network_param": 400, "glue": 400, "_forward": 400, "remaind": 400, "env_librari": 400, "env_task": 400, "env_arg": [400, 401], "friendli": 400, "torchr": 400, "rescal": 400, "presum": 400, "make_transformed_env": 400, "reward_sc": 400, "marker": 400, "env_per_collector": 400, "transform_state_dict": 400, "make_t_env": 400, "cheat": 400, "10m": 400, "cautiou": 400, "magnitud": [400, 412], "thousand": [400, 403], "get_env_stat": 400, "proof_env": 400, "5000": [400, 401, 402, 409], "recal": [400, 402, 416], "ddpgmlpactor": 400, "ddpgmlpqnet": 400, "materi": 400, "ornsteinuhlenbeckprocessmodul": [400, 405], "make_ddpg_actor": 400, "q_net": 400, "tight": 400, "decoupl": [400, 406], "10_000": [400, 402], "traj_len": [400, 403], "make_record": 400, "recorder_obj": 400, "buffer_s": [400, 401], "random_crop_len": 400, "prb": 400, "buffer_scratch_dir": 400, "temporari": 400, "25": [400, 401, 402, 403, 412, 414], "dataflow": 400, "ceil_div": 400, "utd": [400, 403], "update_to_data": 400, "realiz": 400, "_must_": 400, "001": [400, 414], "outdat": 400, "trick": [400, 401], "despit": 400, "optimizer_actor": 400, "lr": [400, 401, 402, 403, 409, 412, 413, 414], "weight_decai": [400, 401], "optimizer_valu": 400, "total_collection_step": 400, "pretti": [400, 404, 408, 416], "rewards_ev": 400, "collected_fram": 400, "r0": 400, "numel": [400, 402, 403, 409, 412, 415, 416], "current_fram": [400, 412], "sampled_tensordict": 400, "gn1": 400, "clip_grad_norm_": [400, 402, 412, 413, 414], "gn2": 400, "gn": [400, 414], "td_record": 400, "rn": 400, "set_descript": [400, 402, 403, 412, 413, 414], "2f": 400, "800": [400, 401], "2880": [400, 401], "70it": 400, "1600": [400, 401], "09": [400, 401, 412, 414], "872": 400, "84it": [400, 401, 414], "2400": [400, 401], "1257": 400, "62it": [400, 401, 402, 414], "3200": [400, 401], "1587": [400, 414], "49it": [400, 414], "4000": [400, 401, 402], "1856": [400, 401], "09it": [400, 401], "48": [400, 401, 414, 415], "4800": [400, 401, 414], "2073": 400, "04it": [400, 401], "56": [400, 401, 413, 414], "5600": 400, "2237": 400, "00it": [400, 401], "62": [400, 401, 413, 414, 415, 416], "79": [400, 401, 414], "372": [400, 414], "92": [400, 401, 414, 415], "97": [400, 401, 414, 415], "6400": [400, 418], "864": [400, 401], "27it": 400, "58": [400, 401, 412, 414, 415], "154": [400, 414], "228": [400, 414], "72": [400, 401, 414, 415], "7200": 400, "07": [400, 401, 403, 412, 414], "612": [400, 414], "71it": [400, 401], "77": [400, 401, 414], "90": [400, 401, 402, 412, 413, 414], "344": [400, 414], "8000": [400, 402], "64it": [400, 403, 414], "54": [400, 401, 414, 415], "76": [400, 401, 414, 415], "215": [400, 414], "53": [400, 401, 414], "66": [400, 401, 414, 415, 416], "8800": 400, "461": [400, 414], "42it": [400, 401, 414], "96": [400, 401, 412, 414, 415], "9600": 400, "370": [400, 414], "60it": [400, 401, 414], "69": [400, 401, 412, 414], "74": [400, 401, 414, 415], "158": [400, 414], "10400it": 400, "340": [400, 414], "85it": [400, 401, 414], "227": [400, 414], "plot": [400, 402, 403, 412, 413, 414], "mention": [400, 403, 416, 419], "matplotlib": [400, 402, 403, 412, 413, 414, 416, 419], "pyplot": [400, 402, 403, 412, 413, 414, 416, 419], "plt": [400, 402, 403, 412, 413, 414, 416, 419], "zip": [400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419], "legend": [400, 412], "xlabel": [400, 403, 413, 414], "ylabel": [400, 413], "tight_layout": 400, "takeawai": [400, 401], "distpatch": 400, "jupyt": [400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419], "ipynb": [400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 418, 419], "sphinx": [400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419], "road": 401, "aspect": [401, 406], "highest": [401, 405], "prerequisit": [401, 403], "lookup": 401, "cart": 401, "pole": 401, "un": 401, "actuat": 401, "frictionless": 401, "duelingcnndqnet": 401, "egreedymodul": [401, 403, 405, 409], "is_notebook": 401, "shell": 401, "get_ipython": 401, "__class__": 401, "zmqinteractiveshel": 401, "qtconsol": 401, "terminalinteractiveshel": 401, "ipython": [401, 413, 414], "nameerror": [401, 412], "umbrella": 401, "misplac": 401, "misus": 401, "orchestr": [401, 406, 408], "five": 401, "64x64": 401, "motion": [401, 414], "obs_norm_sd": 401, "mp_context": 401, "simpler": [401, 404], "get_norm_stat": 401, "test_env": 401, "make_model": 401, "dummy_env": 401, "init_bia": 401, "exploration_modul": [401, 403, 405, 409], "eps_greedy_v": 401, "eps_greedy_val_env": 401, "actor_explor": 401, "get_replay_buff": 401, "n_optim": [401, 406, 407], "themselv": 401, "parametriz": 401, "get_collector": 401, "cl": 401, "bunch": 401, "ubiquit": [401, 404], "get_loss_modul": 401, "target_updat": [401, 412], "995": [401, 414], "variat": 401, "2e": [401, 414], "wd": 401, "upd": 401, "harder": [401, 418], "5_000": 401, "500000": 401, "100000": 401, "005": [401, 412], "mandatori": [401, 402, 413, 414], "fairer": 401, "budget": 401, "dqn_exp_": 401, "uuid1": [401, 419], "9895": 401, "0737": 401, "registr": 401, "cumbersom": 401, "buffer_hook": 401, "weight_updat": 401, "aliv": 401, "total_reward": 401, "01it": [401, 403], "3688": [401, 414], "9434": 401, "10it": 401, "40it": [401, 414], "3566": 401, "3323": 401, "38it": 401, "3445": 401, "57": [401, 414, 415], "89it": 401, "3991": 401, "224": [401, 414], "49": [401, 414, 415], "41it": [401, 414], "3778": 401, "17it": 401, "288": [401, 414], "65": [401, 413, 414, 415], "07it": [401, 414], "71": [401, 414, 415], "61it": [401, 414], "352": [401, 414], "03it": [401, 402], "3808": 401, "384": [401, 414], "3505": 401, "416": [401, 414], "82": [401, 414, 415], "448": [401, 414], "92it": 401, "480": [401, 414, 415], "57it": [401, 414], "28it": 401, "544": [401, 414], "63it": [401, 414], "3869": 401, "576": [401, 414], "608": [401, 414], "23it": [401, 414], "3596": 401, "640": 401, "3718": 401, "672": 401, "47": [401, 412, 414], "20it": [401, 414], "704": 401, "22it": [401, 414], "4173": 401, "736": 401, "05it": [401, 414], "3960": 401, "768": 401, "59it": [401, 414], "89": [401, 414], "47it": [401, 414], "832": 401, "51it": [401, 414], "45": [401, 413, 414, 415], "91": [401, 402, 414], "896": 401, "928": 401, "35it": 401, "960": 401, "13it": 401, "3292": 401, "992": [401, 414], "4021": 401, "1056": 401, "1088": 401, "3899": 401, "1120": 401, "93": [401, 414, 415], "4295": [401, 414], "1152": 401, "24it": 401, "1184": 401, "75it": 401, "1216": 401, "1248": 401, "78it": [401, 403, 414], "1280": 401, "94it": 401, "97it": 401, "1344": 401, "44it": [401, 414], "1376": 401, "1408": 401, "32it": 401, "1440": 401, "1472": 401, "02it": 401, "1504": 401, "1536": 401, "72it": [401, 402], "1568": 401, "37it": [401, 414], "43it": 401, "1632": 401, "66it": [401, 414], "1696": 401, "14it": 401, "1728": 401, "1760": 401, "73it": 401, "1792": 401, "36it": [401, 402], "1824": 401, "46it": [401, 414], "1888": 401, "08it": 401, "1920": 401, "1952": 401, "1984": 401, "2016": 401, "2080": 401, "2112": [401, 414], "79it": [401, 402, 414], "43": [401, 403, 414], "2144": 401, "76it": [401, 402], "2176": 401, "25it": 401, "2208": 401, "15it": 401, "2240": 401, "2272": 401, "99it": 401, "30it": 401, "2336": 401, "29it": 401, "2368": 401, "67it": 401, "16it": 401, "2432": 401, "2464": 401, "58it": [401, 414], "2496": 401, "2528": [401, 414], "95it": [401, 402], "2560": 401, "80it": 401, "2624": 401, "2656": [401, 414], "2688": 401, "12it": 401, "2720": [401, 414], "06it": [401, 414], "2752": 401, "2784": 401, "21it": [401, 414], "2816": 401, "2848": 401, "2912": 401, "59": [401, 413, 414, 415], "2944": [401, 414], "60": [401, 402, 412, 413, 414, 415, 418], "2976": [401, 414], "4082": [401, 414], "61": [401, 413, 414, 415, 416], "3040": 401, "81it": [401, 403], "3072": 401, "65it": [401, 402, 414], "3104": 401, "63": [401, 414, 415, 416], "3136": 401, "3168": 401, "90it": 401, "3232": [401, 414], "5556": 401, "3264": 401, "83it": 401, "3296": 401, "67": [401, 411, 414], "3328": 401, "87it": 401, "3360": 401, "68": [401, 413, 414, 415], "3392": 401, "3424": 401, "3456": [401, 414], "70": [401, 402, 412, 413, 414, 415], "3488": 401, "3520": 401, "3552": 401, "3584": 401, "3616": 401, "78": [401, 414, 415], "73": [401, 414], "3648": 401, "3680": 401, "3712": 401, "3744": 401, "83": [401, 414, 415], "3776": 401, "3840": 401, "85": [401, 414], "3872": 401, "48it": [401, 414], "3904": 401, "26it": 401, "3936": 401, "3968": 401, "77it": [401, 414], "4032": 401, "4064": 401, "4096": 401, "34it": [401, 414], "4128": [401, 414], "4160": 401, "4192": 401, "4224": 401, "19it": 401, "4256": [401, 414], "86it": 401, "4288": [401, 414], "4320": 401, "4352": 401, "4384": 401, "4416": 401, "4448": 401, "4480": 401, "4512": 401, "4544": 401, "4576": 401, "4608": 401, "4640": 401, "98it": 401, "4704": 401, "4736": 401, "4768": 401, "4832": 401, "4864": 401, "91it": 401, "4896": 401, "4928": 401, "4960": 401, "68it": 401, "4992": 401, "5024it": 401, "print_csv_files_in_fold": 401, "folder_path": 401, "csv_file": 401, "output_str": 401, "dirpath": 401, "endswith": 401, "strip": 401, "tmp": [401, 416], "tmp16y9hbib": 401, "dqn_exp_a0ee01f2": 401, "90c8": 401, "11ef": [401, 419], "a49b": [401, 419], "0242ac110002": [401, 419], "3566153347492218": 401, "39912936091423035": 401, "42945271730422974": 401, "40213119983673096": 401, "39912933111190796": 401, "47876793146133423": 401, "18667784333229065": 401, "1948033571243286": 401, "22345909476280212": 401, "2145865112543106": 401, "47586697340011597": 401, "28343674540519714": 401, "3203103542327881": 401, "3053428530693054": 401, "grad_norm_0": 401, "5816755294799805": 401, "9089717864990234": 401, "4687838554382324": 401, "8756051063537598": 401, "7815587520599365": 401, "685841083526611": 401, "793360948562622": 401, "469670295715332": 401, "317387104034424": 401, "10000000894069672": 401, "555555820465088": 401, "qvaluenetwork": 401, "worst": 401, "accuraci": 401, "fanci": [401, 407], "1267": 401, "talk": 402, "repetit": [402, 404, 407], "six": 402, "sophist": [402, 413], "invent": 402, "overview": [402, 406, 412, 413, 418], "theta_k": 402, "pi_": 402, "exceed": 402, "discourag": [402, 414], "indispens": 402, "analyz": 402, "lingua": 402, "franca": 402, "defaultdict": [402, 414], "3e": [402, 403, 412, 413], "max_grad_norm": [402, 412, 413], "sub_batch_s": 402, "num_epoch": [402, 413], "entropy_ep": [402, 413], "charact": 402, "inverteddoublependulum": 402, "transmit": 402, "stai": 402, "confid": [402, 412, 413], "ran": 402, "f_": 402, "mu_": 402, "difficulti": [402, 419], "d_ob": 402, "d_action": 402, "policy_modul": [402, 412, 413], "briefli": [402, 412, 413], "refil": [402, 413], "easiest": [402, 406, 412, 413], "mathemat": [402, 412, 413], "tradeoff": [402, 413], "advantage_modul": 402, "lr_schedul": [402, 414], "cosineannealinglr": [402, 414], "eval_str": 402, "tensordict_data": [402, 413], "data_view": [402, 413], "subdata": [402, 412, 413], "cum_reward_str": 402, "4f": [402, 403, 414], "stepcount_str": 402, "param_group": [402, 412], "lr_str": 402, "eval_rollout": 402, "nice": [402, 404, 407], "460": [402, 414], "8959": 402, "0871": [402, 414], "0003": [402, 403, 414], "458": [402, 414], "1306": 402, "3000": 402, "463": [402, 414], "69it": [402, 414], "1613": 402, "465": [402, 414], "1849": 402, "0002": [402, 414], "467": [402, 414], "6000": 402, "2178": 402, "7000": 402, "470": [402, 414], "2329": 402, "50it": [402, 414], "2473": 402, "9000": 402, "2477": 402, "2501": 402, "cap": [402, 416], "figsiz": [402, 414], "subplot": [402, 412, 414, 419], "titl": [402, 403, 413, 414], "84x84": 403, "accessori": 403, "stamp": 403, "assist": 403, "n_cell": 403, "customiz": 403, "wouldn": 403, "qval": 403, "stoch_polici": 403, "opportun": [403, 412], "uniniti": 403, "again": [403, 404, 405, 407, 413, 415, 416, 419], "redund": 403, "strongli": 403, "sake": [403, 415, 416], "20_000": [403, 414], "longest": 403, "npai": 403, "action_spread": 403, "0006": [403, 414], "150": [403, 414], "2233": 403, "topic": [404, 405, 406], "straight": 404, "backtrack": 404, "encapsul": [404, 405, 406], "reset_with_act": 404, "5947": 404, "tp": 404, "stepped_data": 404, "spatial": 404, "useless": 404, "policyless": 404, "appreci": 404, "monitor": 404, "examin": [404, 412], "tackl": 405, "delv": 405, "bypass": 405, "extractor": 405, "palliat": 405, "additivegaussianmodul": [405, 412], "had": [405, 407], "exploration_polici": [405, 412], "greedili": 405, "2d": [405, 412, 413], "innov": [405, 406], "rollout_explor": 405, "sole": 406, "tradit": [406, 412], "supervis": [406, 407, 416, 419], "n_collect": 406, "get_next_batch": 406, "ddpg_loss": 406, "total_loss": 406, "prove": 406, "reliev": 406, "concern": 406, "accustom": 407, "surprisingli": 407, "fundament": 407, "art": [407, 412, 413], "multirpocess": 407, "countless": 407, "yourself": [407, 412, 413], "lightweight": 408, "portabl": 408, "everywher": 408, "log_scalar": 408, "elaps": 408, "my_scalar": 408, "saw": [408, 414, 416], "excess": 408, "349": [408, 414], "lesson": 409, "voluntarili": 409, "value_mlp": 409, "100_000": 409, "init_rand_step": 409, "training_loop": 409, "video_record": 409, "arbitrarili": 409, "total_count": 409, "total_episod": 409, "t0": 409, "t1": 409, "conclud": [409, 415], "tutorials_python": 410, "tutorials_jupyt": 410, "env1_obs_kei": 411, "observation_stand": 411, "env2_obs_kei": 411, "observation_walk": 411, "tdreset1": 411, "tdreset2": 411, "lazy_stack": 411, "policy_common": 411, "policy_stand": 411, "policy_walk": 411, "But": 411, "env1_mak": 411, "env2_mak": 411, "_single_task": 411, "td_rollout": 411, "matteo": [412, 413], "bettini": [412, 413], "benchmarl": [412, 413], "simple_tag": 412, "maddpg": [412, 413], "multiagentparticleenviron": 412, "mpe": 412, "centralis": [412, 413], "tie": [412, 413], "iddpg": [412, 413], "optimis": [412, 413], "typical": 412, "richard": 412, "andrew": 412, "mit": 412, "press": 412, "2018": 412, "mathbf": [412, 413], "pi": [412, 413, 414], "decentralis": [412, 413], "literatur": [412, 413], "overcom": [412, 413], "stationari": [412, 413], "concurr": [412, 413], "establish": 412, "gui": [412, 413], "is_sphinx": 412, "__sphinx_build__": 412, "n_iter": [412, 413], "evad": 412, "iteration_when_stop_training_evad": 412, "memory_s": 412, "n_optimiser_step": 412, "train_batch_s": 412, "polyak_tau": 412, "chaser": 412, "red": 412, "circl": [412, 413], "touch": [412, 414], "penal": [412, 413], "acceler": [412, 413], "obstacl": 412, "drag": [412, 413], "elast": [412, 413], "collis": [412, 413], "imped": 412, "n_chaser": 412, "n_evad": 412, "n_obstacl": 412, "use_vma": 412, "simple_tag_v3": 412, "num_good": 412, "num_adversari": 412, "num_obstacl": 412, "max_cycl": 412, "num_vmas_env": [412, 413], "num_good_ag": 412, "num_landmark": 412, "adversary_1": 412, "four": [412, 413, 414], "n_agents_in_that_group": 412, "stress": [412, 413], "paramount": [412, 413], "n_rollout_step": [412, 413], "evolut": [412, 413], "group_nam": 412, "n_agents_in_group": 412, "minor": 412, "agents_exploration_polici": 412, "utilis": [412, 413], "withing": 412, "n_obs_per_ag": [412, 413], "n_actions_per_ag": [412, 413], "share_parameters_polici": [412, 413], "policy_net": [412, 413], "_agent": 412, "grant": [412, 413], "converg": [412, 413], "share_parameters_crit": [412, 413], "obs_act": 412, "cat_modul": 412, "critic_modul": 412, "fantast": [412, 413], "reset_td": 412, "interfer": 412, "flatten_kei": 412, "process_batch": 412, "group_shap": 412, "get_item_shap": [412, 413], "nested_done_kei": 412, "nested_terminated_kei": 412, "desc": [412, 413], "episode_reward_mean_": 412, "episode_reward_mean_map": 412, "train_group_map": 412, "group_batch": 412, "_group": 412, "loss_nam": 412, "episode_reward_mean": [412, 413], "episode_reward_mean_adversari": 412, "episode_reward_mean_ag": 412, "proce": 412, "screen": 412, "fig": 412, "set_ylabel": 412, "axvlin": 412, "color": 412, "orang": 412, "set_xlabel": 412, "video_logg": 412, "vmas_log": 412, "env_with_rend": 412, "vmas_rend": 412, "print_log_dir": 412, "profici": [412, 413], "lidar": 413, "sensor": 413, "mappo": 413, "ippo": 413, "analys": 413, "visualis": 413, "vmas_devic": 413, "6_000": 413, "minibatch_s": 413, "generalis": 413, "simd": 413, "warp": 413, "todai": 413, "surround": 413, "dot": [413, 414], "collid": 413, "scenario_nam": 413, "final_rew": 413, "agent_collis": 413, "critic_net": 413, "minibatch": 413, "episode_reward_mean_list": 413, "critic_network_param": 413, "target_critic_network_param": 413, "4579917788505554": 413, "23260341584682465": 413, "1713813543319702": 413, "386345624923706": 413, "8939578533172607": 413, "2214083671569824": 413, "1770293712615967": 413, "6274709701538086": 413, "73148250579834": 413, "737316608428955": 413, "xvfb": 413, "pyvirtualdisplai": 413, "1400": [413, 414], "900": 413, "pil": 413, "rendering_callback": 413, "fromarrai": 413, "gif": 413, "save_al": 413, "append_imag": 413, "freeli": 414, "undertaken": 414, "broader": 414, "wider": 414, "algebra": 414, "acquaint": 414, "avenu": 414, "_apply_to_composit": 414, "default_x": 414, "default_i": 414, "upward": 414, "angular": 414, "sin": 414, "rad": 414, "sec": 414, "angl": 414, "deleg": 414, "new_th": 414, "new_thdot": 414, "g_forc": 414, "angle_norm": 414, "albeit": 414, "high_th": 414, "high_thdot": 414, "low_th": 414, "low_thdot": 414, "trivial": 414, "irrelev": 414, "_make_spec": 414, "td_param": 414, "render_fp": 414, "random_": 414, "_make_step": 414, "staticmethod": 414, "showcas": 414, "skeleton": 414, "_apply_transform": [414, 419], "_inv_apply_transform": [414, 419], "subset": [414, 415], "sine": 414, "cosin": 414, "sintransform": 414, "costransform": 414, "t_sin": 414, "t_co": 414, "cat_transform": 414, "simple_rollout": 414, "unexplor": 414, "init_td": 414, "traj_return": 414, "last_reward": 414, "is_ipython": 414, "inlin": 414, "get_backend": 414, "ion": 414, "gcf": 414, "clear_output": 414, "625": 414, "0748": 414, "519": 414, "0499": 414, "4472": 414, "073": 414, "0685": 414, "0408": 414, "552": 414, "5154": 414, "9086": 414, "9385": 414, "155": 414, "2568": 414, "4981": 414, "223": 414, "8929": 414, "4491": 414, "581": 414, "3233": 414, "0664": 414, "596": 414, "56it": 414, "1021": 414, "5263": 414, "9579": 414, "53it": 414, "5807": 414, "8075": 414, "212": 414, "2009": 414, "5525": 414, "914": 414, "2894": 414, "0115": 414, "0977": 414, "1845": 414, "1830": 414, "4858": 414, "233": 414, "2863": 414, "0297": 414, "464": 414, "4617": 414, "5997": 414, "904": 414, "1647": 414, "0777": 414, "901": 414, "4709": 414, "6813": 414, "8317": 414, "3221": 414, "5554": 414, "276": 414, "3353": 414, "701": 414, "8570": 414, "6656": 414, "7779": 414, "6911": 414, "875": 414, "0796": 414, "7082": 414, "308": 414, "0421": 414, "1496": 414, "5037": 414, "1755": 414, "5029": 414, "9454": 414, "665": 414, "9330": 414, "2118": 414, "444": 414, "0995": 414, "6294": 414, "3146": 414, "2909": 414, "9720": 414, "1298": 414, "9923": 414, "0345": 414, "3438": 414, "424": 414, "6953": 414, "5233": 414, "411": 414, "8011": 414, "5329": 414, "2677": 414, "6969": 414, "7010": 414, "9352": 414, "7707": 414, "6178": 414, "5646": 414, "7304": 414, "9407": 414, "942": 414, "3882": 414, "7604": 414, "3507": 414, "8928": 414, "258": 414, "6978": 414, "4641": 414, "549": 414, "6047": 414, "5005": 414, "4136": 414, "2993": 414, "3222": 414, "4046": 414, "7314": 414, "275": 414, "6331": 414, "9318": 414, "961": 414, "8331": 414, "1604": 414, "4099": 414, "4761": 414, "125": 414, "4262": 414, "6363": 414, "382": 414, "3593": 414, "7377": 414, "2847": 414, "3443": 414, "867": 414, "3592": 414, "4760": 414, "441": 414, "9950": 414, "8021": 414, "3528": 414, "1214": 414, "708": 414, "4023": 414, "3583": 414, "041": 414, "3801": 414, "0310": 414, "120": 414, "4244": 414, "2039": 414, "4850": 414, "8748": 414, "706": 414, "4897": 414, "9210": 414, "8964": 414, "0832": 414, "3934": 414, "456": 414, "8971": 414, "2933": 414, "3377": 414, "6996": 414, "2274": 414, "8916": 414, "098": 414, "2660": 414, "9110": 414, "4503": 414, "6956": 414, "9172": 414, "4026": 414, "946": 414, "9229": 414, "5205": 414, "294": 414, "8872": 414, "6637": 414, "019": 414, "9281": 414, "2082": 414, "724": 414, "8561": 414, "6574": 414, "4138": 414, "5230": 414, "385": 414, "4065": 414, "5642": 414, "9786": 414, "4129": 414, "5831": 414, "266": 414, "7723": 414, "4152": 414, "0898": 414, "389": 414, "5155": 414, "5376": 414, "5616": 414, "4094": 414, "283": 414, "5333": 414, "4803": 414, "895": 414, "6566": 414, "2588": 414, "662": 414, "4732": 414, "7503": 414, "068": 414, "0714": 414, "3370": 414, "059": 414, "8612": 414, "1915": 414, "3855": 414, "0349": 414, "9644": 414, "4538": 414, "445": 414, "0392": 414, "4080": 414, "1648": 414, "9599": 414, "143": 414, "4284": 414, "5946": 414, "2590": 414, "9181": 414, "4621": 414, "9075": 414, "1772": 414, "9444": 414, "351": 414, "9391": 414, "5595": 414, "8673": 414, "6240": 414, "5919": 414, "1071": 414, "9127": 414, "251": 414, "9799": 414, "3131": 414, "9612": 414, "9705": 414, "8741": 414, "2230": 414, "0972": 414, "0337": 414, "0350": 414, "0654": 414, "2441": 414, "4596": 414, "362": 414, "103": [414, 416], "4362": 414, "171": 414, "104": 414, "4041": 414, "6907": 414, "105": 414, "4664": 414, "2760": 414, "0299": 414, "9712": 414, "3332": 414, "4479": 414, "772": 414, "108": 414, "4357": 414, "9591": 414, "543": 414, "109": 414, "6216": 414, "1353": 414, "692": 414, "110": 414, "6261": 414, "7086": 414, "496": 414, "111": [414, 416], "7758": 414, "9818": 414, "112": 414, "7772": 414, "5055": 414, "113": 414, "5840": 414, "3180": 414, "2083": 414, "115": 414, "5275": 414, "6873": 414, "116": 414, "4107": 414, "1624": 414, "117": 414, "6372": 414, "2571": 414, "118": [414, 416], "4039": 414, "4428": 414, "119": [414, 416], "4728": 414, "5628": 414, "6767": 414, "2466": 414, "522": 414, "121": [414, 419], "5873": 414, "5072": 414, "6548": 414, "3766": 414, "123": 414, "5134": 414, "1955": 414, "124": 414, "2481": 414, "0591": 414, "4500": 414, "3368": 414, "126": 414, "9708": 414, "7059": 414, "127": 414, "3031": 414, "2534": 414, "843": 414, "3327": 414, "6193": 414, "129": [414, 416], "4831": 414, "1172": 414, "2593": 414, "4219": 414, "962": 414, "8380": 414, "132": 414, "2721": 414, "9048": 414, "166": 414, "133": 414, "2419": 414, "5248": 414, "2139": 414, "4278": 414, "135": 414, "0690": 414, "5140": 414, "136": 414, "1140": 414, "7402": 414, "137": 414, "5356": 414, "1636": 414, "138": 414, "0671": 414, "8798": 414, "139": [414, 416], "8918": 414, "3298": 414, "307": 414, "140": 414, "1779": 414, "141": 414, "1771": 414, "3624": 414, "936": 414, "142": 414, "1683": 414, "4810": 414, "9373": 414, "4435": 414, "4396": 414, "8092": 414, "145": 414, "2572": 414, "146": 414, "4212": 414, "0260": 414, "147": 414, "0939": 414, "6478": 414, "605": 414, "148": [414, 416], "6606": 414, "7289": 414, "149": 414, "9300": 414, "7193": 414, "563": 414, "1166": 414, "8514": 414, "151": 414, "9108": 414, "0672": 414, "292": 414, "152": 414, "8591": 414, "3768": 414, "153": 414, "9976": 414, "0576": 414, "0067": 414, "935": 414, "4199": 414, "1722": 414, "156": 414, "8310": 414, "3466": 414, "157": 414, "8631": 414, "2492": 414, "8763": 414, "1277": 414, "159": 414, "5562": 414, "7446": 414, "1082": 414, "9830": 414, "161": 414, "0946": 414, "5229": 414, "162": 414, "4574": 414, "6900": 414, "163": [414, 415], "2229": 414, "0318": 414, "482": 414, "164": 414, "0543": 414, "0817": 414, "761": 414, "165": 414, "2809": 414, "5118": 414, "366": 414, "1142": 414, "5635": 414, "167": 414, "1949": 414, "2327": 414, "982": 414, "168": 414, "0967": 414, "0387": 414, "457": 414, "169": 414, "0782": 414, "2150": 414, "170": 414, "5222": 414, "3725": 414, "9288": 414, "9837": 414, "1416": 414, "1099": 414, "173": 414, "8620": 414, "8475": 414, "174": 414, "1807": 414, "4375": 414, "175": 414, "1148": 414, "0645": 414, "2751": 414, "8313": 414, "177": 414, "9286": 414, "9770": 414, "178": [414, 416], "5735": 414, "2837": 414, "179": 414, "2926": 414, "9489": 414, "180": 414, "1507": 414, "181": 414, "8724": 414, "3567": 414, "182": 414, "3574": 414, "6140": 414, "183": 414, "7895": 414, "2518": 414, "184": 414, "6146": 414, "185": 414, "8776": 414, "7358": 414, "186": 414, "3722": 414, "8428": 414, "187": 414, "7955": 414, "188": 414, "0092": 414, "7106": 414, "829": 414, "189": 414, "2264": 414, "6919": 414, "190": 414, "1438": 414, "1362": 414, "191": 414, "0618": 414, "8217": 414, "9420": 414, "6765": 414, "193": 414, "7745": 414, "0709": 414, "194": 414, "9478": 414, "6867": 414, "195": 414, "6507": 414, "6225": 414, "196": 414, "2244": 414, "2195": 414, "197": 414, "5385": 414, "9263": 414, "198": 414, "1878": 414, "2374": 414, "8054": 414, "3504": 414, "557": 414, "52it": 414, "0766": 414, "201": 414, "55it": 414, "2011": 414, "8393": 414, "202": 414, "0803": 414, "7815": 414, "203": 414, "8363": 414, "2460": 414, "204": 414, "8643": 414, "2191": 414, "593": 414, "205": 414, "0773": 414, "1343": 414, "206": 414, "8657": 414, "207": 414, "9304": 414, "7584": 414, "208": 414, "8752": 414, "2307": 414, "209": 414, "5250": 414, "4869": 414, "7837": 414, "5762": 414, "211": [414, 416], "6661": 414, "8600": 414, "2502": 414, "1752": 414, "3075": 414, "8871": 414, "214": 414, "9406": 414, "8090": 414, "54it": 414, "6291": 414, "8923": 414, "876": 414, "216": 414, "9504": 414, "21e": 414, "217": 414, "7431": 414, "7880": 414, "218": 414, "4463": 414, "5432": 414, "219": 414, "3793": 414, "3313": 414, "8843": 414, "0369": 414, "065": 414, "221": 414, "4828": 414, "8391": 414, "222": 414, "6265": 414, "2913": 414, "947": 414, "5541": 414, "1252": 414, "7342": 414, "2396": 414, "225": 414, "5936": 414, "1924": 414, "226": 414, "9975": 414, "2045": 414, "8367": 414, "9540": 414, "7259": 414, "6743": 414, "229": 414, "4827": 414, "7528": 414, "230": 414, "7361": 414, "8756": 414, "231": 414, "7646": 414, "1116": 414, "232": 414, "5426": 414, "8385": 414, "5662": 414, "8585": 414, "234": 414, "8234": 414, "7930": 414, "235": 414, "2648": 414, "9309": 414, "236": 414, "6817": 414, "237": 414, "0943": 414, "1533": 414, "238": 414, "3045": 414, "0483": 414, "239": 414, "6415": 414, "0201": 414, "241": 414, "4437": 414, "4365": 414, "242": 414, "0358": 414, "4943": 414, "243": 414, "1272": 414, "5003": 414, "1180": 414, "2637": 414, "245": 414, "7197": 414, "0873": 414, "246": 414, "2917": 414, "247": 414, "0160": 414, "0738": 414, "248": 414, "3689": 414, "0120": 414, "249": 414, "5570": 414, "0475": 414, "250": 414, "4423": 414, "2220": 414, "6803": 414, "252": 414, "1465": 414, "7214": 414, "253": 414, "8801": 414, "7034": 414, "254": 414, "9136": 414, "4076": 414, "7589": 414, "5013": 414, "8150": 414, "2241": 414, "257": 414, "0753": 414, "8081": 414, "1951": 414, "8314": 414, "259": 414, "0038": 414, "260": 414, "0889": 414, "4616": 414, "261": 414, "0655": 414, "262": 414, "8333": 414, "9476": 414, "263": 414, "7554": 414, "3798": 414, "264": 414, "3717": 414, "3947": 414, "529": 414, "265": 414, "3060": 414, "6495": 414, "7467": 414, "8889": 414, "267": 414, "8457": 414, "591": 414, "7137": 414, "0536": 414, "771": 414, "269": 414, "1651": 414, "388": 414, "270": 414, "8246": 414, "5709": 414, "281": 414, "271": 414, "7502": 414, "0521": 414, "032": 414, "272": 414, "5475": 414, "7253": 414, "273": 414, "2856": 414, "7130": 414, "274": 414, "2778": 414, "4122": 414, "8368": 414, "1841": 414, "9622": 414, "1603": 414, "003e": 414, "277": 414, "0247": 414, "346": 414, "278": 414, "2238": 414, "6418": 414, "0626": 414, "2538": 414, "280": 414, "0149": 414, "7380": 414, "2167": 414, "8911": 414, "282": 414, "8725": 414, "1983": 414, "8142": 414, "3709": 414, "284": 414, "4989": 414, "285": 414, "6464": 414, "6210": 414, "286": 414, "9726": 414, "0820": 414, "287": 414, "6975": 414, "9091": 414, "4926": 414, "4791": 414, "289": 414, "0905": 414, "3500": 414, "290": 414, "2287": 414, "291": 414, "9918": 414, "5543": 414, "9245": 414, "6444": 414, "631": 414, "293": 414, "0448": 414, "4769": 414, "8566": 414, "7208": 414, "295": 414, "0966": 414, "296": 414, "5303": 414, "1537": 414, "023": 414, "297": 414, "2682": 414, "298": 414, "4318": 414, "5063": 414, "299": 414, "7475": 414, "4190": 414, "8186": 414, "5077": 414, "301": 414, "1883": 414, "5291": 414, "472": 414, "302": 414, "3998": 414, "303": 414, "3622": 414, "0930": 414, "626": 414, "304": 414, "9500": 414, "5664": 414, "305": 414, "5697": 414, "3024": 414, "306": 414, "3117": 414, "0052": 414, "006": 414, "0981": 414, "9312": 414, "3873": 414, "309": 414, "0411": 414, "2650": 414, "1656": 414, "0228": 414, "004": 414, "311": 414, "1196": 414, "2478": 414, "312": 414, "7353": 414, "0812": 414, "313": 414, "3022": 414, "758": 414, "314": 414, "1406": 414, "4626": 414, "315": 414, "2156": 414, "851": 414, "316": 414, "1953": 414, "3774": 414, "317": 414, "6385": 414, "9917": 414, "318": 414, "2764": 414, "905": 414, "6391": 414, "9317": 414, "9748": 414, "2679": 414, "8495": 414, "5125": 414, "8177": 414, "6602": 414, "0704": 414, "5776": 414, "324": 414, "9833": [414, 418], "1339": 414, "402": 414, "325": 414, "1238": 414, "326": 414, "9299": 414, "0227": 414, "7727": 414, "1607": 414, "336": 414, "328": [414, 418], "3958": 414, "3223": 414, "763": 414, "329": 414, "4742": 414, "1797": 414, "0144": 414, "0085": 414, "791": 414, "331": 414, "8284": 414, "0428": 414, "332": 414, "7365": 414, "333": 414, "4566": 414, "0781": 414, "086": 414, "334": 414, "3355": 414, "0230": 414, "335": 414, "9346": 414, "0423": 414, "076": 414, "3711": 414, "1335": 414, "6855": 414, "337": 414, "0304": 414, "0023": 414, "8459": 414, "338": 414, "9998": 414, "4399": 414, "339": 414, "2303": 414, "1346": 414, "2915": 414, "7116": 414, "341": 414, "5560": 414, "0487": 414, "342": 414, "5119": 414, "061": 414, "343": 414, "3305": 414, "3705": 414, "6068": 414, "345": 414, "5731": 414, "3897": 414, "0376": 414, "347": 414, "0434": 414, "012": 414, "1300": 414, "1215": 414, "0968": 414, "0885": 414, "350": 414, "1348": 414, "0073": 414, "5052": 414, "4184": 414, "2817": 414, "8887": 414, "353": 414, "4779": 414, "1009": 414, "354": 414, "0604": 414, "599": 414, "355": 414, "4486": 414, "1176": 414, "656": 414, "356": 414, "2436": 414, "0668": 414, "8849": 414, "0012": 414, "358": 414, "7511": 414, "8804": 414, "359": 414, "8870": 414, "6728": 414, "360": 414, "8841": 414, "5508": 414, "361": 414, "5242": 414, "0013": 414, "6185": 414, "363": 414, "1378": 414, "0204": 414, "364": 414, "0355": 414, "685": 414, "365": 414, "4884": 414, "0231": 414, "0014": 414, "6793": 414, "367": 414, "9834": 414, "863": 414, "368": 414, "6709": 414, "462": 414, "369": 414, "5199": 414, "9790": 414, "9401": 414, "7802": 414, "371": 414, "6723": 414, "2678": 414, "6201": 414, "373": 414, "2184": 414, "7385": 414, "374": 414, "6344": 414, "617": 414, "375": 414, "9945": 414, "0772": 414, "567": 414, "7576": 414, "0398": 414, "377": 414, "3396": 414, "0022": 414, "094": 414, "378": 414, "3073": 414, "4018": 414, "379": 414, "1869": 414, "380": 414, "0481": 414, "1117": 414, "381": 414, "6823": 414, "981": 414, "8305": 414, "0210": 414, "383": 414, "4908": 414, "0272": 414, "538": 414, "3267": 414, "0111": 414, "7965": 414, "33it": 414, "1796": 414, "0039": 414, "5396": 414, "386": 414, "3757": 414, "0490": 414, "387": 414, "1394": 414, "4187": 414, "2986": 414, "7954": 414, "1274": 414, "0063": 414, "813": 414, "390": 414, "8706": 414, "0114": 414, "391": 414, "6922": 414, "2423": 414, "392": 414, "9115": 414, "2602": 414, "2449": 414, "0783": 414, "394": 414, "0631": 414, "0057": 414, "7444": 414, "395": 414, "3339": 414, "0167": 414, "396": 414, "4806": 414, "397": 414, "4171": 414, "067": 414, "398": 414, "2618": 414, "5809": 414, "399": 414, "0054": 414, "3364": 414, "8733": 414, "0184": 414, "401": 414, "9137": 414, "0113": 414, "025": 414, "0386": 414, "0625": 414, "403": 414, "1332": 414, "0582": 414, "7816": 414, "404": 414, "8341": 414, "0941": 414, "405": 414, "8615": 414, "588": 414, "406": 414, "3849": 414, "008": 414, "9395": 414, "0765": 414, "055": 414, "2685": 414, "2235": 414, "688": 414, "409": 414, "3052": 414, "4249": 414, "410": 414, "6806": 414, "6383": 414, "3721": 414, "9981": 414, "412": 414, "1862": 414, "822": 414, "413": 414, "9811": 414, "0171": 414, "013": 414, "414": 414, "0252": 414, "0049": 414, "6205": 414, "415": 414, "1108": 414, "4921": 414, "9142": 414, "8130": 414, "417": 414, "1725": 414, "0036": 414, "3196": 414, "418": 414, "7795": 414, "0242": 414, "799": 414, "419": 414, "7737": 414, "0138": 414, "420": 414, "1462": 414, "0053": 414, "421": 414, "9226": 414, "6139": 414, "422": 414, "9889": 414, "0403": 414, "423": 414, "6194": 414, "0032": 414, "3989": 414, "0104": 414, "425": 414, "9960": 414, "0009": 414, "6009": 414, "426": 414, "2697": 414, "0914": 414, "427": 414, "1114": 414, "428": 414, "9862": 414, "1932": 414, "429": 414, "0637": 414, "0623": 414, "082": 414, "430": 414, "9906": 414, "2031": 414, "431": 414, "9948": 414, "0895": 414, "432": 414, "1970": 414, "0256": 414, "4231": 414, "0449": 414, "644": 414, "434": 414, "1039": 414, "1973": 414, "435": 414, "4561": 414, "1225": 414, "436": 414, "0211": 414, "2125": 414, "437": 414, "3866": 414, "0050": 414, "7202": 414, "438": 414, "6388": 414, "0072": 414, "439": 414, "1187": 414, "0015": 414, "5116": 414, "440": 414, "0432": 414, "0025": 414, "7809": 414, "1925": 414, "0103": 414, "442": 414, "9570": 414, "443": 414, "5601": 414, "0165": 414, "0047": 414, "6061": 414, "2746": 414, "0027": 414, "7887": 414, "446": 414, "1835": 414, "0035": 414, "855": 414, "447": 414, "8420": 414, "548": 414, "2653": 414, "0126": 414, "9736": 414, "449": 414, "0594": 414, "0119": 414, "6196": 414, "450": 414, "4509": 414, "0373": 414, "451": 414, "0620": 414, "452": 414, "6898": 414, "3235": 414, "687": 414, "453": 414, "5879": 414, "8406": 414, "0694": 414, "455": 414, "8259": 414, "0235": 414, "8500": 414, "0024": 414, "4054": 414, "2027": 414, "0894": 414, "459": 414, "5966": 414, "6942": 414, "0016": 414, "4254": 414, "6703": 414, "0145": 414, "8124": 414, "0218": 414, "9196": 414, "0188": 414, "8986": 414, "0884": 414, "0084": 414, "5624": 414, "8862": 414, "5384": 414, "466": 414, "5837": 414, "8954": 414, "0101": 414, "6751": 414, "468": 414, "8063": 414, "0122": 414, "9635": 414, "469": 414, "0692": 414, "4216": 414, "1227": 414, "0586": 414, "162e": 414, "471": 414, "9690": 414, "4166": 414, "6324": 414, "473": 414, "0778": 414, "474": 414, "8548": 414, "0017": 414, "4408": 414, "475": 414, "8125": 414, "1515": 414, "476": 414, "2733": 414, "0044": 414, "2836": 414, "477": 414, "7497": 414, "7681": 414, "478": 414, "8547": 414, "0105": 414, "7212": 414, "479": 414, "9848": 414, "0019": 414, "6498": 414, "1987": 414, "0011": 414, "5473": 414, "481": 414, "8991": 414, "6091": 414, "9189": 414, "5771": 414, "483": 414, "6781": 414, "7542": 414, "484": 414, "5959": 414, "0064": 414, "485": 414, "2547": 414, "486": 414, "0636": 414, "547": 414, "487": 414, "0065": 414, "488": 414, "1694": 414, "0083": 414, "5759": 414, "489": 414, "0493": 414, "0021": 414, "7805": 414, "0950": 414, "497": 414, "491": [414, 416], "9717": 414, "3672": 414, "492": 414, "0207": 414, "493": 414, "8266": 414, "5365": 414, "494": 414, "2623": 414, "5078": 414, "495": 414, "4545": 414, "09636": 414, "8754": 414, "0010": 414, "498": 414, "0031": 414, "8269": 414, "499": 414, "6642": 414, "2284": 414, "501": 414, "9130": 414, "0008": 414, "502": 414, "503": 414, "7624": 414, "0056": 414, "3858": 414, "504": 414, "0890": 414, "0042": 414, "505": 414, "7505": 414, "2157": 414, "506": 414, "8394": 414, "3413": 414, "507": 414, "9609": 414, "0041": 414, "6905": 414, "508": 414, "8467": 414, "4409": 414, "509": 414, "510": 414, "8128": 414, "3559": 414, "511": 414, "1479": 414, "0264": 414, "1589": 414, "566": 414, "513": 414, "2756": 414, "0046": 414, "5266": 414, "514": 414, "9873": 414, "0112": 414, "9314": 414, "515": 414, "3791": 414, "0721": 414, "516": 414, "4580": 414, "0758": 414, "6114": 414, "517": 414, "2431": 414, "518": 414, "1958": 414, "5553": 414, "8924": 414, "0097": 414, "520": 414, "3737": 414, "0234": 414, "521": 414, "9125": 414, "4623": 414, "3230": 414, "0589": 414, "3784": 414, "523": 414, "9482": 414, "0051": 414, "524": 414, "1979": 414, "0045": 414, "6401": 414, "525": 414, "1588": 414, "0048": 414, "6255": 414, "526": 414, "6084": 414, "3477": 414, "1475": 414, "0209": 414, "528": 414, "7611": 414, "1040": 414, "0099": 414, "0173": 414, "643": 414, "530": 414, "8189": 414, "4358": 414, "531": 414, "9897": 414, "532": 414, "1548": 414, "9751": 414, "533": 414, "6362": 414, "7495": 414, "534": 414, "1749": 414, "9513": 414, "535": 414, "7708": 414, "0371": 414, "536": 414, "2649": 414, "0437": 414, "537": 414, "5491": 414, "0276": 414, "6426": 414, "7294": 414, "078e": 414, "539": 414, "9928": 414, "540": 414, "7937": 414, "0124": 414, "9664": 414, "541": 414, "3342": 414, "542": 414, "2046": 414, "5496": 414, "0956": 414, "0059": 414, "545": 414, "9028": 414, "5843": 414, "546": 414, "0674": 414, "0178": 414, "797": 414, "2815": 414, "0599": 414, "9276": 414, "8228": 414, "6164": 414, "551": 414, "6850": 414, "9167": 414, "3092": 414, "0670": 414, "9177": 414, "553": 414, "1599": 414, "0043": 414, "554": 414, "6367": 414, "555": 414, "3657": 414, "556": 414, "6694": 414, "2622": 414, "0372": 414, "4841": 414, "558": 414, "2707": 414, "757": 414, "559": 414, "2267": 414, "5415": 414, "560": 414, "4556": 414, "0163": 414, "561": 414, "1839": 414, "0809": 414, "6262": 414, "562": 414, "0278": 414, "1112": 414, "6155": 414, "565": 414, "1427": 414, "3582": 414, "624": 414, "7870": 414, "9490": 414, "0439": 414, "8796": 414, "568": 414, "8026": 414, "569": 414, "3147": 414, "8486": 414, "570": 414, "7917": 414, "0129": 414, "571": 414, "9553": 414, "0020": 414, "6871": 414, "572": 414, "3132": 414, "0159": 414, "8646": 414, "573": 414, "5320": 414, "0269": 414, "574": 414, "2955": 414, "0245": 414, "575": 414, "3347": 414, "0179": 414, "9718": 414, "1629": 414, "804": 414, "577": 414, "4164": 414, "0070": 414, "4335": 414, "578": 414, "579": 414, "3049": 414, "9063": 414, "580": 414, "8785": 414, "3295": 414, "5184": 414, "0546": 414, "582": 414, "4589": 414, "583": 414, "4697": 414, "2476": 414, "584": 414, "2397": 414, "585": 414, "4953": 414, "1775": 414, "586": 414, "2258": 414, "0110": 414, "7671": 414, "587": 414, "3981": 414, "8590": 414, "0007": 414, "589": 414, "9820": 414, "4221": 414, "590": 414, "1293": 414, "0116": 414, "868": 414, "1675": 414, "5931": 414, "592": 414, "2910": 414, "5219": 414, "2124": 414, "1730": 414, "737": 414, "594": 414, "2914": 414, "0206": 414, "595": 414, "0172": 414, "3982": 414, "0945": 414, "0121": 414, "4789": 414, "597": 414, "3805": 414, "4074": 414, "598": 414, "3310": 414, "5065": 414, "6028": 414, "6316": 414, "6724": 414, "6523": 414, "601": 414, "0136": 414, "4298": 414, "602": 414, "3524": 414, "2629": 414, "603": 414, "2635": 414, "7839": 414, "604": 414, "6041": 414, "8027": 414, "4170": 414, "4675": 414, "606": 414, "3153": 414, "9316": 414, "607": 414, "0649": 414, "9722": 414, "7989": 414, "0329": 414, "609": 414, "1976": 414, "6852": 414, "610": 414, "4793": 414, "1255": 414, "611": 414, "4581": 414, "0394": 414, "2047": 414, "0326": 414, "613": 414, "8967": 414, "8619": 414, "614": 414, "5906": 414, "6491": 414, "615": 414, "6634": 414, "4394": 414, "616": 414, "0624": 414, "0061": 414, "5676": 414, "3259": 414, "0131": 414, "7733": 414, "618": 414, "7515": 414, "0189": 414, "5575": 414, "619": 414, "9313": 414, "6286": 414, "620": 414, "4325": 414, "7832": 414, "621": 414, "1134": 414, "622": 414, "4572": 414, "0500": 414, "5838": 414, "623": 414, "3818": 414, "8623": 414, "1253": 414, "6622": 414, "subject": 414, "explain": 415, "semat": 415, "r3mtransform": 415, "env_transform": [415, 419], "s3": 415, "amazonaw": 415, "r3m_50": 415, "374m": 415, "5m": 415, "6mb": 415, "2m": 415, "2mb": 415, "9m": 415, "8mb": 415, "0mb": 415, "0m": 415, "6m": 415, "4mb": 415, "1mb": 415, "106m": 415, "115m": 415, "5mb": 415, "130m": 415, "138m": 415, "144m": 415, "150m": 415, "164m": 415, "179m": 415, "186m": 415, "195m": 415, "203m": 415, "212m": 415, "219m": 415, "229m": 415, "246m": 415, "262m": 415, "269m": 415, "277m": 415, "282m": 415, "293m": 415, "299m": 415, "311m": 415, "326m": 415, "331m": 415, "344m": 415, "360m": 415, "373m": 415, "wiser": 415, "2354": 415, "batteri": 416, "buffer_list": 416, "lowest": 416, "medium": 416, "buffer_lazytensor": 416, "buffer_lazymemmap": 416, "tempdir": 416, "tmpzxmvjdim": 416, "fullest": 416, "mydata": 416, "background": 416, "question": [416, 418], "_i": 416, "artifici": 416, "0893e": 416, "hamper": 416, "she": 416, "pars": 416, "proport": 416, "hist": 416, "barcontain": 416, "artist": 416, "reappear": 416, "unfold": 416, "problemat": 416, "4th": 416, "prioritizedslicesampl": 416, "tensordictmaxvaluewrit": 416, "demo": 418, "icml": 418, "vmoen": 418, "fb": 418, "invest": 418, "platform": 418, "media": 418, "predominantli": 418, "tensordict1": 418, "tensordict2": 418, "tensordict_sampl": 418, "_sampler": 418, "_sum_tre": 418, "modulenotfounderror": 418, "28791671991348267": 418, "06984967738389969": 418, "noopresetenv": [418, 419], "backbone_modul": 418, "params_expand": 418, "exec_sequ": 418, "tensordict_exp": 418, "base_modul": 418, "0137": 418, "1524": 418, "0641": 418, "viewbackward0": 418, "asstridedbackward0": 418, "8728": 418, "1334": 418, "3494": 418, "6887": 418, "6402": 418, "_safetanhnoepsbackward": 418, "1132": 418, "1762": 418, "3430": 418, "2668": 418, "2918": 418, "6239": 418, "tensordicts_prealloc": 418, "tensordicts_stack": 418, "tensordict_rollout": [418, 419], "disclaim": 418, "concatmodul": 418, "loss_td": 418, "year": 418, "roadmap": 418, "compris": 418, "contributor": 418, "curiou": 418, "nascent": 418, "unsupervis": 419, "unifi": 419, "_build_env": 419, "amidar": 419, "assault": 419, "3541": 419, "deserv": 419, "__episode__": 419, "__trajectory__": 419, "void": 419, "reproduct": 419, "reset_data": 419, "tensordict_tprim": 419, "imshow": 419, "axesimag": 419, "0x7fb1c4b85e10": 419, "wrapper1": 419, "wrapper2": 419, "obviou": 419, "truth": 419, "env_transformed_bi": 419, "stanc": 419, "transformeddistribut": 419, "base_dist": 419, "concat": 419, "mofidi": 419, "transformedenviron": 419, "moderet": 419, "computation": 419, "legitim": 419, "incom": 419, "amongst": 419, "has_cuda": 419, "wor": 419, "convention": 419, "markovian": 419, "3288080526": 419, "constain": 419, "bar_": 419, "get_someth": 419, "bar_c6313b92": 419, "90c7": 419, "aargh": 419, "is_clos": 419, "foo_list": 419, "batched_env": 419, "_dispatch_caller_parallel": 419, "0x7fb1c4b87a30": 419, "bar_caa4671c": 419, "a4ef": 419, "bar_ca9e607": 419, "bf1d": 419, "bar_caa59c2c": 419, "95b4": 419, "particularili": 419, "evolv": 419, "steadi": 419, "approx": 419, "1122": 419, "2134": 419, "1901": 419, "1596": 419, "1628": 419, "0870": 419, "_extra_st": 419, "observation_ssq": 419, "observation_sum": 419, "traceback": 419, "697": 419, "dispach": 419, "absor": 419, "2965": 419}, "objects": {"torchrl._utils": [[12, 0, 1, "", "implement_for"]], "torchrl._utils.implement_for": [[12, 1, 1, "", "get_class_that_defined_method"], [12, 1, 1, "", "import_module"], [12, 1, 1, "", "module_set"], [12, 1, 1, "", "reset"]], "torchrl.collectors": [[13, 0, 1, "", "DataCollectorBase"], [14, 0, 1, "", "MultiSyncDataCollector"], [15, 0, 1, "", "MultiaSyncDataCollector"], [16, 0, 1, "", "SyncDataCollector"], [17, 0, 1, "", "aSyncDataCollector"]], "torchrl.collectors.DataCollectorBase": [[13, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.MultiSyncDataCollector": [[14, 1, 1, "", "load_state_dict"], [14, 1, 1, "", "reset"], [14, 1, 1, "", "set_seed"], [14, 1, 1, "", "shutdown"], [14, 1, 1, "", "state_dict"], [14, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.MultiaSyncDataCollector": [[15, 1, 1, "", "load_state_dict"], [15, 1, 1, "", "reset"], [15, 1, 1, "", "set_seed"], [15, 1, 1, "", "shutdown"], [15, 1, 1, "", "state_dict"], [15, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.SyncDataCollector": [[16, 1, 1, "", "iterator"], [16, 1, 1, "", "load_state_dict"], [16, 1, 1, "", "reset"], [16, 1, 1, "", "rollout"], [16, 1, 1, "", "set_seed"], [16, 1, 1, "", "shutdown"], [16, 1, 1, "", "state_dict"], [16, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.aSyncDataCollector": [[17, 1, 1, "", "load_state_dict"], [17, 1, 1, "", "reset"], [17, 1, 1, "", "set_seed"], [17, 1, 1, "", "shutdown"], [17, 1, 1, "", "state_dict"], [17, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed": [[18, 0, 1, "", "DistributedDataCollector"], [19, 0, 1, "", "DistributedSyncDataCollector"], [20, 0, 1, "", "RPCDataCollector"], [21, 0, 1, "", "RayCollector"], [22, 0, 1, "", "submitit_delayed_launcher"]], "torchrl.collectors.distributed.DistributedDataCollector": [[18, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.DistributedSyncDataCollector": [[19, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RPCDataCollector": [[20, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RayCollector": [[21, 1, 1, "", "add_collectors"], [21, 1, 1, "", "load_state_dict"], [21, 1, 1, "", "local_policy"], [21, 1, 1, "", "remote_collectors"], [21, 1, 1, "", "set_seed"], [21, 1, 1, "", "shutdown"], [21, 1, 1, "", "state_dict"], [21, 1, 1, "", "stop_remote_collectors"], [21, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.utils": [[23, 2, 1, "", "split_trajectories"]], "torchrl.data": [[24, 0, 1, "", "AdaptiveKLController"], [25, 0, 1, "", "Binary"], [26, 0, 1, "", "BinaryDiscreteTensorSpec"], [27, 0, 1, "", "BinaryToDecimal"], [28, 0, 1, "", "Bounded"], [29, 0, 1, "", "BoundedTensorSpec"], [30, 0, 1, "", "Categorical"], [31, 0, 1, "", "Composite"], [32, 0, 1, "", "CompositeSpec"], [33, 0, 1, "", "ConstantKLController"], [34, 0, 1, "", "DiscreteTensorSpec"], [35, 0, 1, "", "Flat2TED"], [36, 0, 1, "", "H5Combine"], [37, 0, 1, "", "H5Split"], [38, 0, 1, "", "HashToInt"], [39, 0, 1, "", "LazyStackedCompositeSpec"], [40, 0, 1, "", "LazyStackedTensorSpec"], [41, 0, 1, "", "MultiCategorical"], [42, 0, 1, "", "MultiDiscreteTensorSpec"], [43, 0, 1, "", "MultiOneHot"], [44, 0, 1, "", "MultiOneHotDiscreteTensorSpec"], [45, 0, 1, "", "MultiStep"], [46, 0, 1, "", "Nested2TED"], [47, 0, 1, "", "NonTensor"], [48, 0, 1, "", "NonTensorSpec"], [49, 0, 1, "", "OneHotDiscreteTensorSpec"], [50, 0, 1, "", "PairwiseDataset"], [51, 0, 1, "", "PrioritizedReplayBuffer"], [52, 0, 1, "", "PromptData"], [53, 0, 1, "", "PromptTensorDictTokenizer"], [54, 0, 1, "", "QueryModule"], [55, 0, 1, "", "RandomProjectionHash"], [56, 0, 1, "", "ReplayBuffer"], [57, 0, 1, "", "RewardData"], [58, 0, 1, "", "RolloutFromModel"], [59, 0, 1, "", "SipHash"], [60, 0, 1, "", "Stacked"], [61, 0, 1, "", "StackedComposite"], [62, 0, 1, "", "TED2Flat"], [63, 0, 1, "", "TED2Nested"], [64, 0, 1, "", "TensorDictMap"], [65, 0, 1, "", "TensorDictPrioritizedReplayBuffer"], [66, 0, 1, "", "TensorDictReplayBuffer"], [67, 0, 1, "", "TensorDictTokenizer"], [68, 0, 1, "", "TensorMap"], [69, 0, 1, "", "TensorSpec"], [70, 0, 1, "", "TokenizedDatasetLoader"], [71, 0, 1, "", "Unbounded"], [72, 0, 1, "", "UnboundedContinuous"], [73, 0, 1, "", "UnboundedContinuousTensorSpec"], [74, 0, 1, "", "UnboundedDiscrete"], [75, 0, 1, "", "UnboundedDiscreteTensorSpec"], [76, 0, 1, "", "check_no_exclusive_keys"], [77, 0, 1, "", "consolidate_spec"], [78, 0, 1, "", "contains_lazy_spec"], [79, 0, 1, "", "create_infinite_iterator"], [89, 0, 1, "", "get_dataloader"]], "torchrl.data.AdaptiveKLController": [[24, 1, 1, "", "update"]], "torchrl.data.Binary": [[25, 1, 1, "", "assert_is_in"], [25, 1, 1, "", "clear_device_"], [25, 1, 1, "", "clone"], [25, 1, 1, "", "contains"], [25, 1, 1, "", "cpu"], [25, 1, 1, "", "cuda"], [25, 3, 1, "", "device"], [25, 1, 1, "", "encode"], [25, 1, 1, "", "expand"], [25, 1, 1, "", "flatten"], [25, 1, 1, "", "implements_for_spec"], [25, 1, 1, "", "index"], [25, 1, 1, "", "is_in"], [25, 1, 1, "", "make_neg_dim"], [25, 4, 1, "", "ndim"], [25, 1, 1, "", "ndimension"], [25, 1, 1, "", "one"], [25, 1, 1, "", "ones"], [25, 1, 1, "", "project"], [25, 1, 1, "", "rand"], [25, 1, 1, "", "reshape"], [25, 1, 1, "", "sample"], [25, 1, 1, "", "squeeze"], [25, 1, 1, "", "to"], [25, 1, 1, "", "to_categorical"], [25, 1, 1, "", "to_categorical_spec"], [25, 1, 1, "", "to_numpy"], [25, 1, 1, "", "to_one_hot"], [25, 1, 1, "", "to_one_hot_spec"], [25, 1, 1, "", "type_check"], [25, 1, 1, "", "unflatten"], [25, 1, 1, "", "unsqueeze"], [25, 1, 1, "", "update_mask"], [25, 1, 1, "", "view"], [25, 1, 1, "", "zero"], [25, 1, 1, "", "zeros"]], "torchrl.data.BinaryDiscreteTensorSpec": [[26, 1, 1, "", "assert_is_in"], [26, 1, 1, "", "clear_device_"], [26, 1, 1, "", "clone"], [26, 1, 1, "", "contains"], [26, 1, 1, "", "cpu"], [26, 1, 1, "", "cuda"], [26, 3, 1, "", "device"], [26, 1, 1, "", "encode"], [26, 1, 1, "", "expand"], [26, 1, 1, "", "flatten"], [26, 1, 1, "", "implements_for_spec"], [26, 1, 1, "", "index"], [26, 1, 1, "", "is_in"], [26, 1, 1, "", "make_neg_dim"], [26, 4, 1, "", "ndim"], [26, 1, 1, "", "ndimension"], [26, 1, 1, "", "one"], [26, 1, 1, "", "ones"], [26, 1, 1, "", "project"], [26, 1, 1, "", "rand"], [26, 1, 1, "", "reshape"], [26, 1, 1, "", "sample"], [26, 1, 1, "", "squeeze"], [26, 1, 1, "", "to"], [26, 1, 1, "", "to_categorical"], [26, 1, 1, "", "to_categorical_spec"], [26, 1, 1, "", "to_numpy"], [26, 1, 1, "", "to_one_hot"], [26, 1, 1, "", "to_one_hot_spec"], [26, 1, 1, "", "type_check"], [26, 1, 1, "", "unflatten"], [26, 1, 1, "", "unsqueeze"], [26, 1, 1, "", "update_mask"], [26, 1, 1, "", "view"], [26, 1, 1, "", "zero"], [26, 1, 1, "", "zeros"]], "torchrl.data.BinaryToDecimal": [[27, 1, 1, "", "add_module"], [27, 1, 1, "", "apply"], [27, 1, 1, "", "bfloat16"], [27, 1, 1, "", "buffers"], [27, 1, 1, "", "children"], [27, 1, 1, "", "compile"], [27, 1, 1, "", "cpu"], [27, 1, 1, "", "cuda"], [27, 1, 1, "", "double"], [27, 1, 1, "", "eval"], [27, 1, 1, "", "extra_repr"], [27, 1, 1, "", "float"], [27, 1, 1, "", "forward"], [27, 1, 1, "", "get_buffer"], [27, 1, 1, "", "get_extra_state"], [27, 1, 1, "", "get_parameter"], [27, 1, 1, "", "get_submodule"], [27, 1, 1, "", "half"], [27, 1, 1, "", "ipu"], [27, 1, 1, "", "load_state_dict"], [27, 1, 1, "", "modules"], [27, 1, 1, "", "mtia"], [27, 1, 1, "", "named_buffers"], [27, 1, 1, "", "named_children"], [27, 1, 1, "", "named_modules"], [27, 1, 1, "", "named_parameters"], [27, 1, 1, "", "parameters"], [27, 1, 1, "", "register_backward_hook"], [27, 1, 1, "", "register_buffer"], [27, 1, 1, "", "register_forward_hook"], [27, 1, 1, "", "register_forward_pre_hook"], [27, 1, 1, "", "register_full_backward_hook"], [27, 1, 1, "", "register_full_backward_pre_hook"], [27, 1, 1, "", "register_load_state_dict_post_hook"], [27, 1, 1, "", "register_load_state_dict_pre_hook"], [27, 1, 1, "", "register_module"], [27, 1, 1, "", "register_parameter"], [27, 1, 1, "", "register_state_dict_post_hook"], [27, 1, 1, "", "register_state_dict_pre_hook"], [27, 1, 1, "", "requires_grad_"], [27, 1, 1, "", "set_extra_state"], [27, 1, 1, "", "set_submodule"], [27, 1, 1, "", "share_memory"], [27, 1, 1, "", "state_dict"], [27, 1, 1, "", "to"], [27, 1, 1, "", "to_empty"], [27, 1, 1, "", "train"], [27, 1, 1, "", "type"], [27, 1, 1, "", "xpu"], [27, 1, 1, "", "zero_grad"]], "torchrl.data.Bounded": [[28, 1, 1, "", "assert_is_in"], [28, 1, 1, "", "clear_device_"], [28, 1, 1, "", "clone"], [28, 1, 1, "", "contains"], [28, 1, 1, "", "cpu"], [28, 1, 1, "", "cuda"], [28, 4, 1, "", "device"], [28, 1, 1, "", "encode"], [28, 1, 1, "", "expand"], [28, 1, 1, "", "flatten"], [28, 1, 1, "", "implements_for_spec"], [28, 1, 1, "", "index"], [28, 1, 1, "", "is_in"], [28, 1, 1, "", "make_neg_dim"], [28, 4, 1, "", "ndim"], [28, 1, 1, "", "ndimension"], [28, 1, 1, "", "one"], [28, 1, 1, "", "ones"], [28, 1, 1, "", "project"], [28, 1, 1, "", "rand"], [28, 1, 1, "", "reshape"], [28, 1, 1, "", "sample"], [28, 1, 1, "", "squeeze"], [28, 1, 1, "", "to"], [28, 1, 1, "", "to_numpy"], [28, 1, 1, "", "type_check"], [28, 1, 1, "", "unflatten"], [28, 1, 1, "", "unsqueeze"], [28, 1, 1, "", "view"], [28, 1, 1, "", "zero"], [28, 1, 1, "", "zeros"]], "torchrl.data.BoundedTensorSpec": [[29, 1, 1, "", "assert_is_in"], [29, 1, 1, "", "clear_device_"], [29, 1, 1, "", "clone"], [29, 1, 1, "", "contains"], [29, 1, 1, "", "cpu"], [29, 1, 1, "", "cuda"], [29, 4, 1, "", "device"], [29, 1, 1, "", "encode"], [29, 1, 1, "", "expand"], [29, 1, 1, "", "flatten"], [29, 1, 1, "", "implements_for_spec"], [29, 1, 1, "", "index"], [29, 1, 1, "", "is_in"], [29, 1, 1, "", "make_neg_dim"], [29, 4, 1, "", "ndim"], [29, 1, 1, "", "ndimension"], [29, 1, 1, "", "one"], [29, 1, 1, "", "ones"], [29, 1, 1, "", "project"], [29, 1, 1, "", "rand"], [29, 1, 1, "", "reshape"], [29, 1, 1, "", "sample"], [29, 1, 1, "", "squeeze"], [29, 1, 1, "", "to"], [29, 1, 1, "", "to_numpy"], [29, 1, 1, "", "type_check"], [29, 1, 1, "", "unflatten"], [29, 1, 1, "", "unsqueeze"], [29, 1, 1, "", "view"], [29, 1, 1, "", "zero"], [29, 1, 1, "", "zeros"]], "torchrl.data.Categorical": [[30, 1, 1, "", "assert_is_in"], [30, 1, 1, "", "clear_device_"], [30, 1, 1, "", "clone"], [30, 1, 1, "", "contains"], [30, 1, 1, "", "cpu"], [30, 1, 1, "", "cuda"], [30, 3, 1, "", "device"], [30, 1, 1, "", "encode"], [30, 1, 1, "", "expand"], [30, 1, 1, "", "flatten"], [30, 1, 1, "", "implements_for_spec"], [30, 1, 1, "", "index"], [30, 1, 1, "", "is_in"], [30, 1, 1, "", "make_neg_dim"], [30, 4, 1, "", "ndim"], [30, 1, 1, "", "ndimension"], [30, 1, 1, "", "one"], [30, 1, 1, "", "ones"], [30, 1, 1, "", "project"], [30, 1, 1, "", "rand"], [30, 1, 1, "", "reshape"], [30, 1, 1, "", "sample"], [30, 1, 1, "", "squeeze"], [30, 1, 1, "", "to"], [30, 1, 1, "", "to_categorical"], [30, 1, 1, "", "to_categorical_spec"], [30, 1, 1, "", "to_numpy"], [30, 1, 1, "", "to_one_hot"], [30, 1, 1, "", "to_one_hot_spec"], [30, 1, 1, "", "type_check"], [30, 1, 1, "", "unflatten"], [30, 1, 1, "", "unsqueeze"], [30, 1, 1, "", "update_mask"], [30, 1, 1, "", "view"], [30, 1, 1, "", "zero"], [30, 1, 1, "", "zeros"]], "torchrl.data.Composite": [[31, 1, 1, "", "assert_is_in"], [31, 1, 1, "", "clear_device_"], [31, 1, 1, "", "clone"], [31, 1, 1, "", "contains"], [31, 1, 1, "", "cpu"], [31, 1, 1, "", "cuda"], [31, 4, 1, "", "device"], [31, 1, 1, "", "empty"], [31, 1, 1, "", "encode"], [31, 1, 1, "", "expand"], [31, 1, 1, "", "flatten"], [31, 1, 1, "", "get"], [31, 1, 1, "", "implements_for_spec"], [31, 1, 1, "", "index"], [31, 1, 1, "", "is_empty"], [31, 1, 1, "", "is_in"], [31, 1, 1, "", "items"], [31, 1, 1, "", "keys"], [31, 1, 1, "", "lock_"], [31, 1, 1, "", "make_neg_dim"], [31, 4, 1, "", "ndim"], [31, 1, 1, "", "ndimension"], [31, 1, 1, "", "one"], [31, 1, 1, "", "ones"], [31, 1, 1, "", "project"], [31, 1, 1, "", "rand"], [31, 1, 1, "", "reshape"], [31, 1, 1, "", "sample"], [31, 1, 1, "", "squeeze"], [31, 1, 1, "", "to"], [31, 1, 1, "", "to_numpy"], [31, 1, 1, "", "type_check"], [31, 1, 1, "", "unflatten"], [31, 1, 1, "", "unlock_"], [31, 1, 1, "", "unsqueeze"], [31, 1, 1, "", "values"], [31, 1, 1, "", "view"], [31, 1, 1, "", "zero"], [31, 1, 1, "", "zeros"]], "torchrl.data.CompositeSpec": [[32, 1, 1, "", "assert_is_in"], [32, 1, 1, "", "clear_device_"], [32, 1, 1, "", "clone"], [32, 1, 1, "", "contains"], [32, 1, 1, "", "cpu"], [32, 1, 1, "", "cuda"], [32, 4, 1, "", "device"], [32, 1, 1, "", "empty"], [32, 1, 1, "", "encode"], [32, 1, 1, "", "expand"], [32, 1, 1, "", "flatten"], [32, 1, 1, "", "get"], [32, 1, 1, "", "implements_for_spec"], [32, 1, 1, "", "index"], [32, 1, 1, "", "is_empty"], [32, 1, 1, "", "is_in"], [32, 1, 1, "", "items"], [32, 1, 1, "", "keys"], [32, 1, 1, "", "lock_"], [32, 1, 1, "", "make_neg_dim"], [32, 4, 1, "", "ndim"], [32, 1, 1, "", "ndimension"], [32, 1, 1, "", "one"], [32, 1, 1, "", "ones"], [32, 1, 1, "", "project"], [32, 1, 1, "", "rand"], [32, 1, 1, "", "reshape"], [32, 1, 1, "", "sample"], [32, 1, 1, "", "squeeze"], [32, 1, 1, "", "to"], [32, 1, 1, "", "to_numpy"], [32, 1, 1, "", "type_check"], [32, 1, 1, "", "unflatten"], [32, 1, 1, "", "unlock_"], [32, 1, 1, "", "unsqueeze"], [32, 1, 1, "", "values"], [32, 1, 1, "", "view"], [32, 1, 1, "", "zero"], [32, 1, 1, "", "zeros"]], "torchrl.data.DiscreteTensorSpec": [[34, 1, 1, "", "assert_is_in"], [34, 1, 1, "", "clear_device_"], [34, 1, 1, "", "clone"], [34, 1, 1, "", "contains"], [34, 1, 1, "", "cpu"], [34, 1, 1, "", "cuda"], [34, 3, 1, "", "device"], [34, 1, 1, "", "encode"], [34, 1, 1, "", "expand"], [34, 1, 1, "", "flatten"], [34, 1, 1, "", "implements_for_spec"], [34, 1, 1, "", "index"], [34, 1, 1, "", "is_in"], [34, 1, 1, "", "make_neg_dim"], [34, 4, 1, "", "ndim"], [34, 1, 1, "", "ndimension"], [34, 1, 1, "", "one"], [34, 1, 1, "", "ones"], [34, 1, 1, "", "project"], [34, 1, 1, "", "rand"], [34, 1, 1, "", "reshape"], [34, 1, 1, "", "sample"], [34, 1, 1, "", "squeeze"], [34, 1, 1, "", "to"], [34, 1, 1, "", "to_categorical"], [34, 1, 1, "", "to_categorical_spec"], [34, 1, 1, "", "to_numpy"], [34, 1, 1, "", "to_one_hot"], [34, 1, 1, "", "to_one_hot_spec"], [34, 1, 1, "", "type_check"], [34, 1, 1, "", "unflatten"], [34, 1, 1, "", "unsqueeze"], [34, 1, 1, "", "update_mask"], [34, 1, 1, "", "view"], [34, 1, 1, "", "zero"], [34, 1, 1, "", "zeros"]], "torchrl.data.HashToInt": [[38, 1, 1, "", "add_module"], [38, 1, 1, "", "apply"], [38, 1, 1, "", "bfloat16"], [38, 1, 1, "", "buffers"], [38, 1, 1, "", "children"], [38, 1, 1, "", "compile"], [38, 1, 1, "", "cpu"], [38, 1, 1, "", "cuda"], [38, 1, 1, "", "double"], [38, 1, 1, "", "eval"], [38, 1, 1, "", "extra_repr"], [38, 1, 1, "", "float"], [38, 1, 1, "", "forward"], [38, 1, 1, "", "get_buffer"], [38, 1, 1, "", "get_extra_state"], [38, 1, 1, "", "get_parameter"], [38, 1, 1, "", "get_submodule"], [38, 1, 1, "", "half"], [38, 1, 1, "", "ipu"], [38, 1, 1, "", "load_state_dict"], [38, 1, 1, "", "modules"], [38, 1, 1, "", "mtia"], [38, 1, 1, "", "named_buffers"], [38, 1, 1, "", "named_children"], [38, 1, 1, "", "named_modules"], [38, 1, 1, "", "named_parameters"], [38, 1, 1, "", "parameters"], [38, 1, 1, "", "register_backward_hook"], [38, 1, 1, "", "register_buffer"], [38, 1, 1, "", "register_forward_hook"], [38, 1, 1, "", "register_forward_pre_hook"], [38, 1, 1, "", "register_full_backward_hook"], [38, 1, 1, "", "register_full_backward_pre_hook"], [38, 1, 1, "", "register_load_state_dict_post_hook"], [38, 1, 1, "", "register_load_state_dict_pre_hook"], [38, 1, 1, "", "register_module"], [38, 1, 1, "", "register_parameter"], [38, 1, 1, "", "register_state_dict_post_hook"], [38, 1, 1, "", "register_state_dict_pre_hook"], [38, 1, 1, "", "requires_grad_"], [38, 1, 1, "", "set_extra_state"], [38, 1, 1, "", "set_submodule"], [38, 1, 1, "", "share_memory"], [38, 1, 1, "", "state_dict"], [38, 1, 1, "", "to"], [38, 1, 1, "", "to_empty"], [38, 1, 1, "", "train"], [38, 1, 1, "", "type"], [38, 1, 1, "", "xpu"], [38, 1, 1, "", "zero_grad"]], "torchrl.data.LazyStackedCompositeSpec": [[39, 1, 1, "", "assert_is_in"], [39, 1, 1, "", "clear_device_"], [39, 1, 1, "", "clone"], [39, 1, 1, "", "contains"], [39, 1, 1, "", "cpu"], [39, 1, 1, "", "cuda"], [39, 4, 1, "", "device"], [39, 1, 1, "", "empty"], [39, 1, 1, "", "encode"], [39, 1, 1, "", "expand"], [39, 1, 1, "", "flatten"], [39, 1, 1, "", "get"], [39, 1, 1, "", "implements_for_spec"], [39, 1, 1, "", "index"], [39, 1, 1, "", "is_empty"], [39, 1, 1, "", "is_in"], [39, 1, 1, "", "items"], [39, 1, 1, "", "keys"], [39, 1, 1, "", "lock_"], [39, 1, 1, "", "make_neg_dim"], [39, 4, 1, "", "ndim"], [39, 1, 1, "", "ndimension"], [39, 1, 1, "", "one"], [39, 1, 1, "", "ones"], [39, 1, 1, "", "project"], [39, 1, 1, "", "rand"], [39, 1, 1, "", "reshape"], [39, 1, 1, "", "sample"], [39, 1, 1, "", "squeeze"], [39, 1, 1, "", "to"], [39, 1, 1, "", "to_numpy"], [39, 1, 1, "", "type_check"], [39, 1, 1, "", "unflatten"], [39, 1, 1, "", "unlock_"], [39, 1, 1, "", "unsqueeze"], [39, 1, 1, "", "values"], [39, 1, 1, "", "view"], [39, 1, 1, "", "zero"], [39, 1, 1, "", "zeros"]], "torchrl.data.LazyStackedTensorSpec": [[40, 1, 1, "", "assert_is_in"], [40, 1, 1, "", "clear_device_"], [40, 1, 1, "", "clone"], [40, 1, 1, "", "contains"], [40, 1, 1, "", "cpu"], [40, 1, 1, "", "cuda"], [40, 4, 1, "", "device"], [40, 1, 1, "", "encode"], [40, 1, 1, "", "expand"], [40, 1, 1, "", "flatten"], [40, 1, 1, "", "implements_for_spec"], [40, 1, 1, "", "index"], [40, 1, 1, "", "is_in"], [40, 1, 1, "", "make_neg_dim"], [40, 4, 1, "", "ndim"], [40, 1, 1, "", "ndimension"], [40, 1, 1, "", "one"], [40, 1, 1, "", "ones"], [40, 1, 1, "", "project"], [40, 1, 1, "", "rand"], [40, 1, 1, "", "reshape"], [40, 1, 1, "", "sample"], [40, 1, 1, "", "squeeze"], [40, 1, 1, "", "to"], [40, 1, 1, "", "to_numpy"], [40, 1, 1, "", "type_check"], [40, 1, 1, "", "unflatten"], [40, 1, 1, "", "unsqueeze"], [40, 1, 1, "", "view"], [40, 1, 1, "", "zero"], [40, 1, 1, "", "zeros"]], "torchrl.data.MultiCategorical": [[41, 1, 1, "", "assert_is_in"], [41, 1, 1, "", "clear_device_"], [41, 1, 1, "", "clone"], [41, 1, 1, "", "contains"], [41, 1, 1, "", "cpu"], [41, 1, 1, "", "cuda"], [41, 3, 1, "", "device"], [41, 1, 1, "", "encode"], [41, 1, 1, "", "expand"], [41, 1, 1, "", "flatten"], [41, 1, 1, "", "implements_for_spec"], [41, 1, 1, "", "index"], [41, 1, 1, "", "is_in"], [41, 1, 1, "", "make_neg_dim"], [41, 4, 1, "", "ndim"], [41, 1, 1, "", "ndimension"], [41, 1, 1, "", "one"], [41, 1, 1, "", "ones"], [41, 1, 1, "", "project"], [41, 1, 1, "", "rand"], [41, 1, 1, "", "reshape"], [41, 1, 1, "", "sample"], [41, 1, 1, "", "squeeze"], [41, 1, 1, "", "to"], [41, 1, 1, "", "to_categorical"], [41, 1, 1, "", "to_categorical_spec"], [41, 1, 1, "", "to_numpy"], [41, 1, 1, "", "to_one_hot"], [41, 1, 1, "", "to_one_hot_spec"], [41, 1, 1, "", "type_check"], [41, 1, 1, "", "unflatten"], [41, 1, 1, "", "unsqueeze"], [41, 1, 1, "", "update_mask"], [41, 1, 1, "", "view"], [41, 1, 1, "", "zero"], [41, 1, 1, "", "zeros"]], "torchrl.data.MultiDiscreteTensorSpec": [[42, 1, 1, "", "assert_is_in"], [42, 1, 1, "", "clear_device_"], [42, 1, 1, "", "clone"], [42, 1, 1, "", "contains"], [42, 1, 1, "", "cpu"], [42, 1, 1, "", "cuda"], [42, 3, 1, "", "device"], [42, 1, 1, "", "encode"], [42, 1, 1, "", "expand"], [42, 1, 1, "", "flatten"], [42, 1, 1, "", "implements_for_spec"], [42, 1, 1, "", "index"], [42, 1, 1, "", "is_in"], [42, 1, 1, "", "make_neg_dim"], [42, 4, 1, "", "ndim"], [42, 1, 1, "", "ndimension"], [42, 1, 1, "", "one"], [42, 1, 1, "", "ones"], [42, 1, 1, "", "project"], [42, 1, 1, "", "rand"], [42, 1, 1, "", "reshape"], [42, 1, 1, "", "sample"], [42, 1, 1, "", "squeeze"], [42, 1, 1, "", "to"], [42, 1, 1, "", "to_categorical"], [42, 1, 1, "", "to_categorical_spec"], [42, 1, 1, "", "to_numpy"], [42, 1, 1, "", "to_one_hot"], [42, 1, 1, "", "to_one_hot_spec"], [42, 1, 1, "", "type_check"], [42, 1, 1, "", "unflatten"], [42, 1, 1, "", "unsqueeze"], [42, 1, 1, "", "update_mask"], [42, 1, 1, "", "view"], [42, 1, 1, "", "zero"], [42, 1, 1, "", "zeros"]], "torchrl.data.MultiOneHot": [[43, 1, 1, "", "assert_is_in"], [43, 1, 1, "", "clear_device_"], [43, 1, 1, "", "clone"], [43, 1, 1, "", "contains"], [43, 1, 1, "", "cpu"], [43, 1, 1, "", "cuda"], [43, 3, 1, "", "device"], [43, 1, 1, "", "encode"], [43, 1, 1, "", "expand"], [43, 1, 1, "", "flatten"], [43, 1, 1, "", "implements_for_spec"], [43, 1, 1, "", "index"], [43, 1, 1, "", "is_in"], [43, 1, 1, "", "make_neg_dim"], [43, 4, 1, "", "ndim"], [43, 1, 1, "", "ndimension"], [43, 1, 1, "", "one"], [43, 1, 1, "", "ones"], [43, 1, 1, "", "project"], [43, 1, 1, "", "rand"], [43, 1, 1, "", "reshape"], [43, 1, 1, "", "sample"], [43, 1, 1, "", "squeeze"], [43, 1, 1, "", "to"], [43, 1, 1, "", "to_categorical"], [43, 1, 1, "", "to_categorical_spec"], [43, 1, 1, "", "to_numpy"], [43, 1, 1, "", "to_one_hot"], [43, 1, 1, "", "to_one_hot_spec"], [43, 1, 1, "", "type_check"], [43, 1, 1, "", "unflatten"], [43, 1, 1, "", "unsqueeze"], [43, 1, 1, "", "update_mask"], [43, 1, 1, "", "view"], [43, 1, 1, "", "zero"], [43, 1, 1, "", "zeros"]], "torchrl.data.MultiOneHotDiscreteTensorSpec": [[44, 1, 1, "", "assert_is_in"], [44, 1, 1, "", "clear_device_"], [44, 1, 1, "", "clone"], [44, 1, 1, "", "contains"], [44, 1, 1, "", "cpu"], [44, 1, 1, "", "cuda"], [44, 3, 1, "", "device"], [44, 1, 1, "", "encode"], [44, 1, 1, "", "expand"], [44, 1, 1, "", "flatten"], [44, 1, 1, "", "implements_for_spec"], [44, 1, 1, "", "index"], [44, 1, 1, "", "is_in"], [44, 1, 1, "", "make_neg_dim"], [44, 4, 1, "", "ndim"], [44, 1, 1, "", "ndimension"], [44, 1, 1, "", "one"], [44, 1, 1, "", "ones"], [44, 1, 1, "", "project"], [44, 1, 1, "", "rand"], [44, 1, 1, "", "reshape"], [44, 1, 1, "", "sample"], [44, 1, 1, "", "squeeze"], [44, 1, 1, "", "to"], [44, 1, 1, "", "to_categorical"], [44, 1, 1, "", "to_categorical_spec"], [44, 1, 1, "", "to_numpy"], [44, 1, 1, "", "to_one_hot"], [44, 1, 1, "", "to_one_hot_spec"], [44, 1, 1, "", "type_check"], [44, 1, 1, "", "unflatten"], [44, 1, 1, "", "unsqueeze"], [44, 1, 1, "", "update_mask"], [44, 1, 1, "", "view"], [44, 1, 1, "", "zero"], [44, 1, 1, "", "zeros"]], "torchrl.data.MultiStep": [[45, 1, 1, "", "add_module"], [45, 1, 1, "", "apply"], [45, 1, 1, "", "bfloat16"], [45, 1, 1, "", "buffers"], [45, 1, 1, "", "children"], [45, 1, 1, "", "compile"], [45, 1, 1, "", "cpu"], [45, 1, 1, "", "cuda"], [45, 1, 1, "", "double"], [45, 1, 1, "", "eval"], [45, 1, 1, "", "extra_repr"], [45, 1, 1, "", "float"], [45, 1, 1, "", "forward"], [45, 1, 1, "", "get_buffer"], [45, 1, 1, "", "get_extra_state"], [45, 1, 1, "", "get_parameter"], [45, 1, 1, "", "get_submodule"], [45, 1, 1, "", "half"], [45, 1, 1, "", "ipu"], [45, 1, 1, "", "load_state_dict"], [45, 1, 1, "", "modules"], [45, 1, 1, "", "mtia"], [45, 1, 1, "", "named_buffers"], [45, 1, 1, "", "named_children"], [45, 1, 1, "", "named_modules"], [45, 1, 1, "", "named_parameters"], [45, 1, 1, "", "parameters"], [45, 1, 1, "", "register_backward_hook"], [45, 1, 1, "", "register_buffer"], [45, 1, 1, "", "register_forward_hook"], [45, 1, 1, "", "register_forward_pre_hook"], [45, 1, 1, "", "register_full_backward_hook"], [45, 1, 1, "", "register_full_backward_pre_hook"], [45, 1, 1, "", "register_load_state_dict_post_hook"], [45, 1, 1, "", "register_load_state_dict_pre_hook"], [45, 1, 1, "", "register_module"], [45, 1, 1, "", "register_parameter"], [45, 1, 1, "", "register_state_dict_post_hook"], [45, 1, 1, "", "register_state_dict_pre_hook"], [45, 1, 1, "", "requires_grad_"], [45, 1, 1, "", "set_extra_state"], [45, 1, 1, "", "set_submodule"], [45, 1, 1, "", "share_memory"], [45, 1, 1, "", "state_dict"], [45, 1, 1, "", "to"], [45, 1, 1, "", "to_empty"], [45, 1, 1, "", "train"], [45, 1, 1, "", "type"], [45, 1, 1, "", "xpu"], [45, 1, 1, "", "zero_grad"]], "torchrl.data.NonTensor": [[47, 1, 1, "", "assert_is_in"], [47, 1, 1, "", "clear_device_"], [47, 1, 1, "", "clone"], [47, 1, 1, "", "contains"], [47, 1, 1, "", "cpu"], [47, 1, 1, "", "cuda"], [47, 4, 1, "", "device"], [47, 1, 1, "", "encode"], [47, 1, 1, "", "expand"], [47, 1, 1, "", "flatten"], [47, 1, 1, "", "implements_for_spec"], [47, 1, 1, "", "index"], [47, 1, 1, "", "is_in"], [47, 1, 1, "", "make_neg_dim"], [47, 4, 1, "", "ndim"], [47, 1, 1, "", "ndimension"], [47, 1, 1, "", "one"], [47, 1, 1, "", "ones"], [47, 1, 1, "", "project"], [47, 1, 1, "", "rand"], [47, 1, 1, "", "reshape"], [47, 1, 1, "", "sample"], [47, 1, 1, "", "squeeze"], [47, 1, 1, "", "to"], [47, 1, 1, "", "to_numpy"], [47, 1, 1, "", "type_check"], [47, 1, 1, "", "unflatten"], [47, 1, 1, "", "unsqueeze"], [47, 1, 1, "", "view"], [47, 1, 1, "", "zero"], [47, 1, 1, "", "zeros"]], "torchrl.data.NonTensorSpec": [[48, 1, 1, "", "assert_is_in"], [48, 1, 1, "", "clear_device_"], [48, 1, 1, "", "clone"], [48, 1, 1, "", "contains"], [48, 1, 1, "", "cpu"], [48, 1, 1, "", "cuda"], [48, 4, 1, "", "device"], [48, 1, 1, "", "encode"], [48, 1, 1, "", "expand"], [48, 1, 1, "", "flatten"], [48, 1, 1, "", "implements_for_spec"], [48, 1, 1, "", "index"], [48, 1, 1, "", "is_in"], [48, 1, 1, "", "make_neg_dim"], [48, 4, 1, "", "ndim"], [48, 1, 1, "", "ndimension"], [48, 1, 1, "", "one"], [48, 1, 1, "", "ones"], [48, 1, 1, "", "project"], [48, 1, 1, "", "rand"], [48, 1, 1, "", "reshape"], [48, 1, 1, "", "sample"], [48, 1, 1, "", "squeeze"], [48, 1, 1, "", "to"], [48, 1, 1, "", "to_numpy"], [48, 1, 1, "", "type_check"], [48, 1, 1, "", "unflatten"], [48, 1, 1, "", "unsqueeze"], [48, 1, 1, "", "view"], [48, 1, 1, "", "zero"], [48, 1, 1, "", "zeros"]], "torchrl.data.OneHotDiscreteTensorSpec": [[49, 1, 1, "", "assert_is_in"], [49, 1, 1, "", "clear_device_"], [49, 1, 1, "", "clone"], [49, 1, 1, "", "contains"], [49, 1, 1, "", "cpu"], [49, 1, 1, "", "cuda"], [49, 3, 1, "", "device"], [49, 1, 1, "", "encode"], [49, 1, 1, "", "expand"], [49, 1, 1, "", "flatten"], [49, 1, 1, "", "implements_for_spec"], [49, 1, 1, "", "index"], [49, 1, 1, "", "is_in"], [49, 1, 1, "", "make_neg_dim"], [49, 4, 1, "", "ndim"], [49, 1, 1, "", "ndimension"], [49, 1, 1, "", "one"], [49, 1, 1, "", "ones"], [49, 1, 1, "", "project"], [49, 1, 1, "", "rand"], [49, 1, 1, "", "reshape"], [49, 1, 1, "", "sample"], [49, 1, 1, "", "squeeze"], [49, 1, 1, "", "to"], [49, 1, 1, "", "to_categorical"], [49, 1, 1, "", "to_categorical_spec"], [49, 1, 1, "", "to_numpy"], [49, 1, 1, "", "to_one_hot"], [49, 1, 1, "", "to_one_hot_spec"], [49, 1, 1, "", "type_check"], [49, 1, 1, "", "unflatten"], [49, 1, 1, "", "unsqueeze"], [49, 1, 1, "", "update_mask"], [49, 1, 1, "", "view"], [49, 1, 1, "", "zero"], [49, 1, 1, "", "zeros"]], "torchrl.data.PairwiseDataset": [[50, 4, 1, "", "batch_size"], [50, 4, 1, "", "device"], [50, 1, 1, "", "from_dataset"], [50, 1, 1, "", "from_tensordict"], [50, 1, 1, "", "get"], [50, 1, 1, "", "load"], [50, 1, 1, "", "load_"], [50, 1, 1, "", "load_memmap"], [50, 1, 1, "", "load_state_dict"], [50, 1, 1, "", "memmap"], [50, 1, 1, "", "memmap_"], [50, 1, 1, "", "memmap_like"], [50, 1, 1, "", "memmap_refresh_"], [50, 4, 1, "", "names"], [50, 1, 1, "", "save"], [50, 1, 1, "", "set"], [50, 1, 1, "", "state_dict"], [50, 1, 1, "", "to_tensordict"], [50, 1, 1, "", "unbind"]], "torchrl.data.PrioritizedReplayBuffer": [[51, 1, 1, "", "add"], [51, 1, 1, "", "append_transform"], [51, 1, 1, "", "dump"], [51, 1, 1, "", "dumps"], [51, 1, 1, "", "empty"], [51, 1, 1, "", "extend"], [51, 1, 1, "", "insert_transform"], [51, 1, 1, "", "load"], [51, 1, 1, "", "loads"], [51, 1, 1, "", "register_load_hook"], [51, 1, 1, "", "register_save_hook"], [51, 1, 1, "", "sample"], [51, 4, 1, "", "sampler"], [51, 1, 1, "", "save"], [51, 1, 1, "", "set_sampler"], [51, 1, 1, "", "set_storage"], [51, 1, 1, "", "set_writer"], [51, 4, 1, "", "storage"], [51, 4, 1, "", "write_count"], [51, 4, 1, "", "writer"]], "torchrl.data.PromptData": [[52, 4, 1, "", "batch_size"], [52, 4, 1, "", "device"], [52, 1, 1, "", "from_dataset"], [52, 1, 1, "", "from_tensordict"], [52, 1, 1, "", "get"], [52, 1, 1, "", "load"], [52, 1, 1, "", "load_"], [52, 1, 1, "", "load_memmap"], [52, 1, 1, "", "load_state_dict"], [52, 1, 1, "", "memmap"], [52, 1, 1, "", "memmap_"], [52, 1, 1, "", "memmap_like"], [52, 1, 1, "", "memmap_refresh_"], [52, 4, 1, "", "names"], [52, 1, 1, "", "save"], [52, 1, 1, "", "set"], [52, 1, 1, "", "state_dict"], [52, 1, 1, "", "to_tensordict"], [52, 1, 1, "", "unbind"]], "torchrl.data.QueryModule": [[54, 1, 1, "", "add_module"], [54, 1, 1, "", "apply"], [54, 1, 1, "", "bfloat16"], [54, 1, 1, "", "buffers"], [54, 1, 1, "", "children"], [54, 1, 1, "", "compile"], [54, 1, 1, "", "cpu"], [54, 1, 1, "", "cuda"], [54, 1, 1, "", "double"], [54, 1, 1, "", "eval"], [54, 1, 1, "", "extra_repr"], [54, 1, 1, "", "float"], [54, 1, 1, "", "forward"], [54, 1, 1, "", "get_buffer"], [54, 1, 1, "", "get_extra_state"], [54, 1, 1, "", "get_parameter"], [54, 1, 1, "", "get_submodule"], [54, 1, 1, "", "half"], [54, 1, 1, "", "ipu"], [54, 1, 1, "", "is_tdmodule_compatible"], [54, 1, 1, "", "load_state_dict"], [54, 1, 1, "", "modules"], [54, 1, 1, "", "mtia"], [54, 1, 1, "", "named_buffers"], [54, 1, 1, "", "named_children"], [54, 1, 1, "", "named_modules"], [54, 1, 1, "", "named_parameters"], [54, 1, 1, "", "parameters"], [54, 1, 1, "", "register_backward_hook"], [54, 1, 1, "", "register_buffer"], [54, 1, 1, "", "register_forward_hook"], [54, 1, 1, "", "register_forward_pre_hook"], [54, 1, 1, "", "register_full_backward_hook"], [54, 1, 1, "", "register_full_backward_pre_hook"], [54, 1, 1, "", "register_load_state_dict_post_hook"], [54, 1, 1, "", "register_load_state_dict_pre_hook"], [54, 1, 1, "", "register_module"], [54, 1, 1, "", "register_parameter"], [54, 1, 1, "", "register_state_dict_post_hook"], [54, 1, 1, "", "register_state_dict_pre_hook"], [54, 1, 1, "", "requires_grad_"], [54, 1, 1, "", "reset_out_keys"], [54, 1, 1, "", "reset_parameters_recursive"], [54, 1, 1, "", "select_out_keys"], [54, 1, 1, "", "set_extra_state"], [54, 1, 1, "", "set_submodule"], [54, 1, 1, "", "share_memory"], [54, 1, 1, "", "state_dict"], [54, 1, 1, "", "to"], [54, 1, 1, "", "to_empty"], [54, 1, 1, "", "train"], [54, 1, 1, "", "type"], [54, 1, 1, "", "xpu"], [54, 1, 1, "", "zero_grad"]], "torchrl.data.RandomProjectionHash": [[55, 1, 1, "", "add_module"], [55, 1, 1, "", "apply"], [55, 1, 1, "", "bfloat16"], [55, 1, 1, "", "buffers"], [55, 1, 1, "", "children"], [55, 1, 1, "", "compile"], [55, 1, 1, "", "cpu"], [55, 1, 1, "", "cuda"], [55, 1, 1, "", "double"], [55, 1, 1, "", "eval"], [55, 1, 1, "", "extra_repr"], [55, 1, 1, "", "fit"], [55, 1, 1, "", "float"], [55, 1, 1, "", "forward"], [55, 1, 1, "", "get_buffer"], [55, 1, 1, "", "get_extra_state"], [55, 1, 1, "", "get_parameter"], [55, 1, 1, "", "get_submodule"], [55, 1, 1, "", "half"], [55, 1, 1, "", "ipu"], [55, 1, 1, "", "load_state_dict"], [55, 1, 1, "", "modules"], [55, 1, 1, "", "mtia"], [55, 1, 1, "", "named_buffers"], [55, 1, 1, "", "named_children"], [55, 1, 1, "", "named_modules"], [55, 1, 1, "", "named_parameters"], [55, 1, 1, "", "parameters"], [55, 1, 1, "", "register_backward_hook"], [55, 1, 1, "", "register_buffer"], [55, 1, 1, "", "register_forward_hook"], [55, 1, 1, "", "register_forward_pre_hook"], [55, 1, 1, "", "register_full_backward_hook"], [55, 1, 1, "", "register_full_backward_pre_hook"], [55, 1, 1, "", "register_load_state_dict_post_hook"], [55, 1, 1, "", "register_load_state_dict_pre_hook"], [55, 1, 1, "", "register_module"], [55, 1, 1, "", "register_parameter"], [55, 1, 1, "", "register_state_dict_post_hook"], [55, 1, 1, "", "register_state_dict_pre_hook"], [55, 1, 1, "", "requires_grad_"], [55, 1, 1, "", "set_extra_state"], [55, 1, 1, "", "set_submodule"], [55, 1, 1, "", "share_memory"], [55, 1, 1, "", "state_dict"], [55, 1, 1, "", "to"], [55, 1, 1, "", "to_empty"], [55, 1, 1, "", "train"], [55, 1, 1, "", "type"], [55, 1, 1, "", "xpu"], [55, 1, 1, "", "zero_grad"]], "torchrl.data.ReplayBuffer": [[56, 1, 1, "", "add"], [56, 1, 1, "", "append_transform"], [56, 1, 1, "", "dump"], [56, 1, 1, "", "dumps"], [56, 1, 1, "", "empty"], [56, 1, 1, "", "extend"], [56, 1, 1, "", "insert_transform"], [56, 1, 1, "", "load"], [56, 1, 1, "", "loads"], [56, 1, 1, "", "register_load_hook"], [56, 1, 1, "", "register_save_hook"], [56, 1, 1, "", "sample"], [56, 4, 1, "", "sampler"], [56, 1, 1, "", "save"], [56, 1, 1, "", "set_sampler"], [56, 1, 1, "", "set_storage"], [56, 1, 1, "", "set_writer"], [56, 4, 1, "", "storage"], [56, 4, 1, "", "write_count"], [56, 4, 1, "", "writer"]], "torchrl.data.RewardData": [[57, 4, 1, "", "batch_size"], [57, 4, 1, "", "device"], [57, 1, 1, "", "from_tensordict"], [57, 1, 1, "", "get"], [57, 1, 1, "", "load"], [57, 1, 1, "", "load_"], [57, 1, 1, "", "load_memmap"], [57, 1, 1, "", "load_state_dict"], [57, 1, 1, "", "memmap"], [57, 1, 1, "", "memmap_"], [57, 1, 1, "", "memmap_like"], [57, 1, 1, "", "memmap_refresh_"], [57, 4, 1, "", "names"], [57, 1, 1, "", "save"], [57, 1, 1, "", "set"], [57, 1, 1, "", "state_dict"], [57, 1, 1, "", "to_tensordict"], [57, 1, 1, "", "unbind"]], "torchrl.data.RolloutFromModel": [[58, 1, 1, "", "create_rollout_td"], [58, 1, 1, "", "generate"], [58, 1, 1, "", "logprobs_of_labels"]], "torchrl.data.SipHash": [[59, 1, 1, "", "add_module"], [59, 1, 1, "", "apply"], [59, 1, 1, "", "bfloat16"], [59, 1, 1, "", "buffers"], [59, 1, 1, "", "children"], [59, 1, 1, "", "compile"], [59, 1, 1, "", "cpu"], [59, 1, 1, "", "cuda"], [59, 1, 1, "", "double"], [59, 1, 1, "", "eval"], [59, 1, 1, "", "extra_repr"], [59, 1, 1, "", "float"], [59, 1, 1, "", "forward"], [59, 1, 1, "", "get_buffer"], [59, 1, 1, "", "get_extra_state"], [59, 1, 1, "", "get_parameter"], [59, 1, 1, "", "get_submodule"], [59, 1, 1, "", "half"], [59, 1, 1, "", "ipu"], [59, 1, 1, "", "load_state_dict"], [59, 1, 1, "", "modules"], [59, 1, 1, "", "mtia"], [59, 1, 1, "", "named_buffers"], [59, 1, 1, "", "named_children"], [59, 1, 1, "", "named_modules"], [59, 1, 1, "", "named_parameters"], [59, 1, 1, "", "parameters"], [59, 1, 1, "", "register_backward_hook"], [59, 1, 1, "", "register_buffer"], [59, 1, 1, "", "register_forward_hook"], [59, 1, 1, "", "register_forward_pre_hook"], [59, 1, 1, "", "register_full_backward_hook"], [59, 1, 1, "", "register_full_backward_pre_hook"], [59, 1, 1, "", "register_load_state_dict_post_hook"], [59, 1, 1, "", "register_load_state_dict_pre_hook"], [59, 1, 1, "", "register_module"], [59, 1, 1, "", "register_parameter"], [59, 1, 1, "", "register_state_dict_post_hook"], [59, 1, 1, "", "register_state_dict_pre_hook"], [59, 1, 1, "", "requires_grad_"], [59, 1, 1, "", "set_extra_state"], [59, 1, 1, "", "set_submodule"], [59, 1, 1, "", "share_memory"], [59, 1, 1, "", "state_dict"], [59, 1, 1, "", "to"], [59, 1, 1, "", "to_empty"], [59, 1, 1, "", "train"], [59, 1, 1, "", "type"], [59, 1, 1, "", "xpu"], [59, 1, 1, "", "zero_grad"]], "torchrl.data.Stacked": [[60, 1, 1, "", "assert_is_in"], [60, 1, 1, "", "clear_device_"], [60, 1, 1, "", "clone"], [60, 1, 1, "", "contains"], [60, 1, 1, "", "cpu"], [60, 1, 1, "", "cuda"], [60, 4, 1, "", "device"], [60, 1, 1, "", "encode"], [60, 1, 1, "", "expand"], [60, 1, 1, "", "flatten"], [60, 1, 1, "", "implements_for_spec"], [60, 1, 1, "", "index"], [60, 1, 1, "", "is_in"], [60, 1, 1, "", "make_neg_dim"], [60, 4, 1, "", "ndim"], [60, 1, 1, "", "ndimension"], [60, 1, 1, "", "one"], [60, 1, 1, "", "ones"], [60, 1, 1, "", "project"], [60, 1, 1, "", "rand"], [60, 1, 1, "", "reshape"], [60, 1, 1, "", "sample"], [60, 1, 1, "", "squeeze"], [60, 1, 1, "", "to"], [60, 1, 1, "", "to_numpy"], [60, 1, 1, "", "type_check"], [60, 1, 1, "", "unflatten"], [60, 1, 1, "", "unsqueeze"], [60, 1, 1, "", "view"], [60, 1, 1, "", "zero"], [60, 1, 1, "", "zeros"]], "torchrl.data.StackedComposite": [[61, 1, 1, "", "assert_is_in"], [61, 1, 1, "", "clear_device_"], [61, 1, 1, "", "clone"], [61, 1, 1, "", "contains"], [61, 1, 1, "", "cpu"], [61, 1, 1, "", "cuda"], [61, 4, 1, "", "device"], [61, 1, 1, "", "empty"], [61, 1, 1, "", "encode"], [61, 1, 1, "", "expand"], [61, 1, 1, "", "flatten"], [61, 1, 1, "", "get"], [61, 1, 1, "", "implements_for_spec"], [61, 1, 1, "", "index"], [61, 1, 1, "", "is_empty"], [61, 1, 1, "", "is_in"], [61, 1, 1, "", "items"], [61, 1, 1, "", "keys"], [61, 1, 1, "", "lock_"], [61, 1, 1, "", "make_neg_dim"], [61, 4, 1, "", "ndim"], [61, 1, 1, "", "ndimension"], [61, 1, 1, "", "one"], [61, 1, 1, "", "ones"], [61, 1, 1, "", "project"], [61, 1, 1, "", "rand"], [61, 1, 1, "", "reshape"], [61, 1, 1, "", "sample"], [61, 1, 1, "", "squeeze"], [61, 1, 1, "", "to"], [61, 1, 1, "", "to_numpy"], [61, 1, 1, "", "type_check"], [61, 1, 1, "", "unflatten"], [61, 1, 1, "", "unlock_"], [61, 1, 1, "", "unsqueeze"], [61, 1, 1, "", "values"], [61, 1, 1, "", "view"], [61, 1, 1, "", "zero"], [61, 1, 1, "", "zeros"]], "torchrl.data.TensorDictMap": [[64, 1, 1, "", "add_module"], [64, 1, 1, "", "apply"], [64, 1, 1, "", "bfloat16"], [64, 1, 1, "", "buffers"], [64, 1, 1, "", "children"], [64, 1, 1, "", "compile"], [64, 1, 1, "", "cpu"], [64, 1, 1, "", "cuda"], [64, 1, 1, "", "double"], [64, 1, 1, "", "eval"], [64, 1, 1, "", "extra_repr"], [64, 1, 1, "", "float"], [64, 1, 1, "", "forward"], [64, 1, 1, "", "from_tensordict_pair"], [64, 1, 1, "", "get_buffer"], [64, 1, 1, "", "get_extra_state"], [64, 1, 1, "", "get_parameter"], [64, 1, 1, "", "get_submodule"], [64, 1, 1, "", "half"], [64, 1, 1, "", "ipu"], [64, 1, 1, "", "is_tdmodule_compatible"], [64, 1, 1, "", "load_state_dict"], [64, 1, 1, "", "modules"], [64, 1, 1, "", "mtia"], [64, 1, 1, "", "named_buffers"], [64, 1, 1, "", "named_children"], [64, 1, 1, "", "named_modules"], [64, 1, 1, "", "named_parameters"], [64, 1, 1, "", "parameters"], [64, 1, 1, "", "register_backward_hook"], [64, 1, 1, "", "register_buffer"], [64, 1, 1, "", "register_forward_hook"], [64, 1, 1, "", "register_forward_pre_hook"], [64, 1, 1, "", "register_full_backward_hook"], [64, 1, 1, "", "register_full_backward_pre_hook"], [64, 1, 1, "", "register_load_state_dict_post_hook"], [64, 1, 1, "", "register_load_state_dict_pre_hook"], [64, 1, 1, "", "register_module"], [64, 1, 1, "", "register_parameter"], [64, 1, 1, "", "register_state_dict_post_hook"], [64, 1, 1, "", "register_state_dict_pre_hook"], [64, 1, 1, "", "requires_grad_"], [64, 1, 1, "", "reset_out_keys"], [64, 1, 1, "", "reset_parameters_recursive"], [64, 1, 1, "", "select_out_keys"], [64, 1, 1, "", "set_extra_state"], [64, 1, 1, "", "set_submodule"], [64, 1, 1, "", "share_memory"], [64, 1, 1, "", "state_dict"], [64, 1, 1, "", "to"], [64, 1, 1, "", "to_empty"], [64, 1, 1, "", "train"], [64, 1, 1, "", "type"], [64, 1, 1, "", "xpu"], [64, 1, 1, "", "zero_grad"]], "torchrl.data.TensorDictPrioritizedReplayBuffer": [[65, 1, 1, "", "add"], [65, 1, 1, "", "append_transform"], [65, 1, 1, "", "dump"], [65, 1, 1, "", "dumps"], [65, 1, 1, "", "empty"], [65, 1, 1, "", "extend"], [65, 1, 1, "", "insert_transform"], [65, 1, 1, "", "load"], [65, 1, 1, "", "loads"], [65, 1, 1, "", "register_load_hook"], [65, 1, 1, "", "register_save_hook"], [65, 1, 1, "", "sample"], [65, 4, 1, "", "sampler"], [65, 1, 1, "", "save"], [65, 1, 1, "", "set_sampler"], [65, 1, 1, "", "set_storage"], [65, 1, 1, "", "set_writer"], [65, 4, 1, "", "storage"], [65, 4, 1, "", "write_count"], [65, 4, 1, "", "writer"]], "torchrl.data.TensorDictReplayBuffer": [[66, 1, 1, "", "add"], [66, 1, 1, "", "append_transform"], [66, 1, 1, "", "dump"], [66, 1, 1, "", "dumps"], [66, 1, 1, "", "empty"], [66, 1, 1, "", "extend"], [66, 1, 1, "", "insert_transform"], [66, 1, 1, "", "load"], [66, 1, 1, "", "loads"], [66, 1, 1, "", "register_load_hook"], [66, 1, 1, "", "register_save_hook"], [66, 1, 1, "", "sample"], [66, 4, 1, "", "sampler"], [66, 1, 1, "", "save"], [66, 1, 1, "", "set_sampler"], [66, 1, 1, "", "set_storage"], [66, 1, 1, "", "set_writer"], [66, 4, 1, "", "storage"], [66, 4, 1, "", "write_count"], [66, 4, 1, "", "writer"]], "torchrl.data.TensorSpec": [[69, 1, 1, "", "assert_is_in"], [69, 1, 1, "", "clear_device_"], [69, 1, 1, "", "clone"], [69, 1, 1, "", "contains"], [69, 1, 1, "", "cpu"], [69, 1, 1, "", "cuda"], [69, 4, 1, "", "device"], [69, 1, 1, "", "encode"], [69, 1, 1, "", "expand"], [69, 1, 1, "", "flatten"], [69, 1, 1, "", "implements_for_spec"], [69, 1, 1, "", "index"], [69, 1, 1, "", "is_in"], [69, 1, 1, "", "make_neg_dim"], [69, 4, 1, "", "ndim"], [69, 1, 1, "", "ndimension"], [69, 1, 1, "", "one"], [69, 1, 1, "", "ones"], [69, 1, 1, "", "project"], [69, 1, 1, "", "rand"], [69, 1, 1, "", "reshape"], [69, 1, 1, "", "sample"], [69, 1, 1, "", "squeeze"], [69, 1, 1, "", "to"], [69, 1, 1, "", "to_numpy"], [69, 1, 1, "", "type_check"], [69, 1, 1, "", "unflatten"], [69, 1, 1, "", "unsqueeze"], [69, 1, 1, "", "view"], [69, 1, 1, "", "zero"], [69, 1, 1, "", "zeros"]], "torchrl.data.TokenizedDatasetLoader": [[70, 1, 1, "", "dataset_to_tensordict"], [70, 1, 1, "", "load"]], "torchrl.data.Unbounded": [[71, 1, 1, "", "assert_is_in"], [71, 1, 1, "", "clear_device_"], [71, 1, 1, "", "clone"], [71, 1, 1, "", "contains"], [71, 1, 1, "", "cpu"], [71, 1, 1, "", "cuda"], [71, 4, 1, "", "device"], [71, 1, 1, "", "encode"], [71, 1, 1, "", "expand"], [71, 1, 1, "", "flatten"], [71, 1, 1, "", "implements_for_spec"], [71, 1, 1, "", "index"], [71, 1, 1, "", "is_in"], [71, 1, 1, "", "make_neg_dim"], [71, 4, 1, "", "ndim"], [71, 1, 1, "", "ndimension"], [71, 1, 1, "", "one"], [71, 1, 1, "", "ones"], [71, 1, 1, "", "project"], [71, 1, 1, "", "rand"], [71, 1, 1, "", "reshape"], [71, 1, 1, "", "sample"], [71, 1, 1, "", "squeeze"], [71, 1, 1, "", "to"], [71, 1, 1, "", "to_numpy"], [71, 1, 1, "", "type_check"], [71, 1, 1, "", "unflatten"], [71, 1, 1, "", "unsqueeze"], [71, 1, 1, "", "view"], [71, 1, 1, "", "zero"], [71, 1, 1, "", "zeros"]], "torchrl.data.UnboundedContinuous": [[72, 1, 1, "", "assert_is_in"], [72, 1, 1, "", "clear_device_"], [72, 1, 1, "", "clone"], [72, 1, 1, "", "contains"], [72, 1, 1, "", "cpu"], [72, 1, 1, "", "cuda"], [72, 4, 1, "", "device"], [72, 1, 1, "", "encode"], [72, 1, 1, "", "expand"], [72, 1, 1, "", "flatten"], [72, 1, 1, "", "implements_for_spec"], [72, 1, 1, "", "index"], [72, 1, 1, "", "is_in"], [72, 1, 1, "", "make_neg_dim"], [72, 4, 1, "", "ndim"], [72, 1, 1, "", "ndimension"], [72, 1, 1, "", "one"], [72, 1, 1, "", "ones"], [72, 1, 1, "", "project"], [72, 1, 1, "", "rand"], [72, 1, 1, "", "reshape"], [72, 1, 1, "", "sample"], [72, 1, 1, "", "squeeze"], [72, 1, 1, "", "to"], [72, 1, 1, "", "to_numpy"], [72, 1, 1, "", "type_check"], [72, 1, 1, "", "unflatten"], [72, 1, 1, "", "unsqueeze"], [72, 1, 1, "", "view"], [72, 1, 1, "", "zero"], [72, 1, 1, "", "zeros"]], "torchrl.data.UnboundedContinuousTensorSpec": [[73, 1, 1, "", "assert_is_in"], [73, 1, 1, "", "clear_device_"], [73, 1, 1, "", "clone"], [73, 1, 1, "", "contains"], [73, 1, 1, "", "cpu"], [73, 1, 1, "", "cuda"], [73, 4, 1, "", "device"], [73, 1, 1, "", "encode"], [73, 1, 1, "", "expand"], [73, 1, 1, "", "flatten"], [73, 1, 1, "", "implements_for_spec"], [73, 1, 1, "", "index"], [73, 1, 1, "", "is_in"], [73, 1, 1, "", "make_neg_dim"], [73, 4, 1, "", "ndim"], [73, 1, 1, "", "ndimension"], [73, 1, 1, "", "one"], [73, 1, 1, "", "ones"], [73, 1, 1, "", "project"], [73, 1, 1, "", "rand"], [73, 1, 1, "", "reshape"], [73, 1, 1, "", "sample"], [73, 1, 1, "", "squeeze"], [73, 1, 1, "", "to"], [73, 1, 1, "", "to_numpy"], [73, 1, 1, "", "type_check"], [73, 1, 1, "", "unflatten"], [73, 1, 1, "", "unsqueeze"], [73, 1, 1, "", "view"], [73, 1, 1, "", "zero"], [73, 1, 1, "", "zeros"]], "torchrl.data.UnboundedDiscrete": [[74, 1, 1, "", "assert_is_in"], [74, 1, 1, "", "clear_device_"], [74, 1, 1, "", "clone"], [74, 1, 1, "", "contains"], [74, 1, 1, "", "cpu"], [74, 1, 1, "", "cuda"], [74, 4, 1, "", "device"], [74, 1, 1, "", "encode"], [74, 1, 1, "", "expand"], [74, 1, 1, "", "flatten"], [74, 1, 1, "", "implements_for_spec"], [74, 1, 1, "", "index"], [74, 1, 1, "", "is_in"], [74, 1, 1, "", "make_neg_dim"], [74, 4, 1, "", "ndim"], [74, 1, 1, "", "ndimension"], [74, 1, 1, "", "one"], [74, 1, 1, "", "ones"], [74, 1, 1, "", "project"], [74, 1, 1, "", "rand"], [74, 1, 1, "", "reshape"], [74, 1, 1, "", "sample"], [74, 1, 1, "", "squeeze"], [74, 1, 1, "", "to"], [74, 1, 1, "", "to_numpy"], [74, 1, 1, "", "type_check"], [74, 1, 1, "", "unflatten"], [74, 1, 1, "", "unsqueeze"], [74, 1, 1, "", "view"], [74, 1, 1, "", "zero"], [74, 1, 1, "", "zeros"]], "torchrl.data.UnboundedDiscreteTensorSpec": [[75, 1, 1, "", "assert_is_in"], [75, 1, 1, "", "clear_device_"], [75, 1, 1, "", "clone"], [75, 1, 1, "", "contains"], [75, 1, 1, "", "cpu"], [75, 1, 1, "", "cuda"], [75, 4, 1, "", "device"], [75, 1, 1, "", "encode"], [75, 1, 1, "", "expand"], [75, 1, 1, "", "flatten"], [75, 1, 1, "", "implements_for_spec"], [75, 1, 1, "", "index"], [75, 1, 1, "", "is_in"], [75, 1, 1, "", "make_neg_dim"], [75, 4, 1, "", "ndim"], [75, 1, 1, "", "ndimension"], [75, 1, 1, "", "one"], [75, 1, 1, "", "ones"], [75, 1, 1, "", "project"], [75, 1, 1, "", "rand"], [75, 1, 1, "", "reshape"], [75, 1, 1, "", "sample"], [75, 1, 1, "", "squeeze"], [75, 1, 1, "", "to"], [75, 1, 1, "", "to_numpy"], [75, 1, 1, "", "type_check"], [75, 1, 1, "", "unflatten"], [75, 1, 1, "", "unsqueeze"], [75, 1, 1, "", "view"], [75, 1, 1, "", "zero"], [75, 1, 1, "", "zeros"]], "torchrl.data.datasets": [[80, 0, 1, "", "AtariDQNExperienceReplay"], [81, 0, 1, "", "BaseDatasetExperienceReplay"], [82, 0, 1, "", "D4RLExperienceReplay"], [83, 0, 1, "", "GenDGRLExperienceReplay"], [84, 0, 1, "", "MinariExperienceReplay"], [85, 0, 1, "", "OpenMLExperienceReplay"], [86, 0, 1, "", "OpenXExperienceReplay"], [87, 0, 1, "", "RobosetExperienceReplay"], [88, 0, 1, "", "VD4RLExperienceReplay"]], "torchrl.data.datasets.AtariDQNExperienceReplay": [[80, 1, 1, "", "add"], [80, 1, 1, "", "append_transform"], [80, 4, 1, "", "data_path"], [80, 4, 1, "", "data_path_root"], [80, 1, 1, "", "delete"], [80, 1, 1, "", "dump"], [80, 1, 1, "", "dumps"], [80, 1, 1, "", "empty"], [80, 1, 1, "", "extend"], [80, 1, 1, "", "insert_transform"], [80, 1, 1, "", "load"], [80, 1, 1, "", "loads"], [80, 1, 1, "", "preprocess"], [80, 1, 1, "", "register_load_hook"], [80, 1, 1, "", "register_save_hook"], [80, 1, 1, "", "sample"], [80, 4, 1, "", "sampler"], [80, 1, 1, "", "save"], [80, 1, 1, "", "set_sampler"], [80, 1, 1, "", "set_storage"], [80, 1, 1, "", "set_writer"], [80, 4, 1, "", "storage"], [80, 4, 1, "", "write_count"], [80, 4, 1, "", "writer"]], "torchrl.data.datasets.BaseDatasetExperienceReplay": [[81, 1, 1, "", "add"], [81, 1, 1, "", "append_transform"], [81, 4, 1, "", "data_path"], [81, 4, 1, "", "data_path_root"], [81, 1, 1, "", "delete"], [81, 1, 1, "", "dump"], [81, 1, 1, "", "dumps"], [81, 1, 1, "", "empty"], [81, 1, 1, "", "extend"], [81, 1, 1, "", "insert_transform"], [81, 1, 1, "", "load"], [81, 1, 1, "", "loads"], [81, 1, 1, "", "preprocess"], [81, 1, 1, "", "register_load_hook"], [81, 1, 1, "", "register_save_hook"], [81, 1, 1, "", "sample"], [81, 4, 1, "", "sampler"], [81, 1, 1, "", "save"], [81, 1, 1, "", "set_sampler"], [81, 1, 1, "", "set_storage"], [81, 1, 1, "", "set_writer"], [81, 4, 1, "", "storage"], [81, 4, 1, "", "write_count"], [81, 4, 1, "", "writer"]], "torchrl.data.datasets.D4RLExperienceReplay": [[82, 1, 1, "", "add"], [82, 1, 1, "", "append_transform"], [82, 4, 1, "", "data_path"], [82, 4, 1, "", "data_path_root"], [82, 1, 1, "", "delete"], [82, 1, 1, "", "dump"], [82, 1, 1, "", "dumps"], [82, 1, 1, "", "empty"], [82, 1, 1, "", "extend"], [82, 1, 1, "", "insert_transform"], [82, 1, 1, "", "load"], [82, 1, 1, "", "loads"], [82, 1, 1, "", "preprocess"], [82, 1, 1, "", "register_load_hook"], [82, 1, 1, "", "register_save_hook"], [82, 1, 1, "", "sample"], [82, 4, 1, "", "sampler"], [82, 1, 1, "", "save"], [82, 1, 1, "", "set_sampler"], [82, 1, 1, "", "set_storage"], [82, 1, 1, "", "set_writer"], [82, 4, 1, "", "storage"], [82, 4, 1, "", "write_count"], [82, 4, 1, "", "writer"]], "torchrl.data.datasets.GenDGRLExperienceReplay": [[83, 1, 1, "", "add"], [83, 1, 1, "", "append_transform"], [83, 4, 1, "", "data_path"], [83, 4, 1, "", "data_path_root"], [83, 1, 1, "", "delete"], [83, 1, 1, "", "dump"], [83, 1, 1, "", "dumps"], [83, 1, 1, "", "empty"], [83, 1, 1, "", "extend"], [83, 1, 1, "", "insert_transform"], [83, 1, 1, "", "load"], [83, 1, 1, "", "loads"], [83, 1, 1, "", "preprocess"], [83, 1, 1, "", "register_load_hook"], [83, 1, 1, "", "register_save_hook"], [83, 1, 1, "", "sample"], [83, 4, 1, "", "sampler"], [83, 1, 1, "", "save"], [83, 1, 1, "", "set_sampler"], [83, 1, 1, "", "set_storage"], [83, 1, 1, "", "set_writer"], [83, 4, 1, "", "storage"], [83, 4, 1, "", "write_count"], [83, 4, 1, "", "writer"]], "torchrl.data.datasets.MinariExperienceReplay": [[84, 1, 1, "", "add"], [84, 1, 1, "", "append_transform"], [84, 4, 1, "", "data_path"], [84, 4, 1, "", "data_path_root"], [84, 1, 1, "", "delete"], [84, 1, 1, "", "dump"], [84, 1, 1, "", "dumps"], [84, 1, 1, "", "empty"], [84, 1, 1, "", "extend"], [84, 1, 1, "", "insert_transform"], [84, 1, 1, "", "load"], [84, 1, 1, "", "loads"], [84, 1, 1, "", "preprocess"], [84, 1, 1, "", "register_load_hook"], [84, 1, 1, "", "register_save_hook"], [84, 1, 1, "", "sample"], [84, 4, 1, "", "sampler"], [84, 1, 1, "", "save"], [84, 1, 1, "", "set_sampler"], [84, 1, 1, "", "set_storage"], [84, 1, 1, "", "set_writer"], [84, 4, 1, "", "storage"], [84, 4, 1, "", "write_count"], [84, 4, 1, "", "writer"]], "torchrl.data.datasets.OpenMLExperienceReplay": [[85, 1, 1, "", "add"], [85, 1, 1, "", "append_transform"], [85, 4, 1, "", "data_path"], [85, 4, 1, "", "data_path_root"], [85, 1, 1, "", "delete"], [85, 1, 1, "", "dump"], [85, 1, 1, "", "dumps"], [85, 1, 1, "", "empty"], [85, 1, 1, "", "extend"], [85, 1, 1, "", "insert_transform"], [85, 1, 1, "", "load"], [85, 1, 1, "", "loads"], [85, 1, 1, "", "preprocess"], [85, 1, 1, "", "register_load_hook"], [85, 1, 1, "", "register_save_hook"], [85, 1, 1, "", "sample"], [85, 4, 1, "", "sampler"], [85, 1, 1, "", "save"], [85, 1, 1, "", "set_sampler"], [85, 1, 1, "", "set_storage"], [85, 1, 1, "", "set_writer"], [85, 4, 1, "", "storage"], [85, 4, 1, "", "write_count"], [85, 4, 1, "", "writer"]], "torchrl.data.datasets.OpenXExperienceReplay": [[86, 1, 1, "", "add"], [86, 1, 1, "", "append_transform"], [86, 4, 1, "", "data_path"], [86, 4, 1, "", "data_path_root"], [86, 1, 1, "", "delete"], [86, 1, 1, "", "dump"], [86, 1, 1, "", "dumps"], [86, 1, 1, "", "empty"], [86, 1, 1, "", "extend"], [86, 1, 1, "", "insert_transform"], [86, 1, 1, "", "load"], [86, 1, 1, "", "loads"], [86, 1, 1, "", "preprocess"], [86, 1, 1, "", "register_load_hook"], [86, 1, 1, "", "register_save_hook"], [86, 1, 1, "", "sample"], [86, 4, 1, "", "sampler"], [86, 1, 1, "", "save"], [86, 1, 1, "", "set_sampler"], [86, 1, 1, "", "set_storage"], [86, 1, 1, "", "set_writer"], [86, 4, 1, "", "storage"], [86, 4, 1, "", "write_count"], [86, 4, 1, "", "writer"]], "torchrl.data.datasets.RobosetExperienceReplay": [[87, 1, 1, "", "add"], [87, 1, 1, "", "append_transform"], [87, 4, 1, "", "data_path"], [87, 4, 1, "", "data_path_root"], [87, 1, 1, "", "delete"], [87, 1, 1, "", "dump"], [87, 1, 1, "", "dumps"], [87, 1, 1, "", "empty"], [87, 1, 1, "", "extend"], [87, 1, 1, "", "insert_transform"], [87, 1, 1, "", "load"], [87, 1, 1, "", "loads"], [87, 1, 1, "", "preprocess"], [87, 1, 1, "", "register_load_hook"], [87, 1, 1, "", "register_save_hook"], [87, 1, 1, "", "sample"], [87, 4, 1, "", "sampler"], [87, 1, 1, "", "save"], [87, 1, 1, "", "set_sampler"], [87, 1, 1, "", "set_storage"], [87, 1, 1, "", "set_writer"], [87, 4, 1, "", "storage"], [87, 4, 1, "", "write_count"], [87, 4, 1, "", "writer"]], "torchrl.data.datasets.VD4RLExperienceReplay": [[88, 1, 1, "", "add"], [88, 1, 1, "", "append_transform"], [88, 4, 1, "", "data_path"], [88, 4, 1, "", "data_path_root"], [88, 1, 1, "", "delete"], [88, 1, 1, "", "dump"], [88, 1, 1, "", "dumps"], [88, 1, 1, "", "empty"], [88, 1, 1, "", "extend"], [88, 1, 1, "", "insert_transform"], [88, 1, 1, "", "load"], [88, 1, 1, "", "loads"], [88, 1, 1, "", "preprocess"], [88, 1, 1, "", "register_load_hook"], [88, 1, 1, "", "register_save_hook"], [88, 1, 1, "", "sample"], [88, 4, 1, "", "sampler"], [88, 1, 1, "", "save"], [88, 1, 1, "", "set_sampler"], [88, 1, 1, "", "set_storage"], [88, 1, 1, "", "set_writer"], [88, 4, 1, "", "storage"], [88, 4, 1, "", "write_count"], [88, 4, 1, "", "writer"]], "torchrl.data.replay_buffers": [[90, 0, 1, "", "FlatStorageCheckpointer"], [91, 0, 1, "", "H5StorageCheckpointer"], [92, 0, 1, "", "ImmutableDatasetWriter"], [93, 0, 1, "", "LazyMemmapStorage"], [94, 0, 1, "", "LazyTensorStorage"], [95, 0, 1, "", "ListStorage"], [96, 0, 1, "", "ListStorageCheckpointer"], [97, 0, 1, "", "NestedStorageCheckpointer"], [98, 0, 1, "", "PrioritizedSampler"], [99, 0, 1, "", "PrioritizedSliceSampler"], [100, 0, 1, "", "RandomSampler"], [101, 0, 1, "", "ReplayBufferEnsemble"], [102, 0, 1, "", "RoundRobinWriter"], [103, 0, 1, "", "Sampler"], [104, 0, 1, "", "SamplerEnsemble"], [105, 0, 1, "", "SamplerWithoutReplacement"], [106, 0, 1, "", "SliceSampler"], [107, 0, 1, "", "SliceSamplerWithoutReplacement"], [108, 0, 1, "", "Storage"], [109, 0, 1, "", "StorageCheckpointerBase"], [110, 0, 1, "", "StorageEnsemble"], [111, 0, 1, "", "StorageEnsembleCheckpointer"], [112, 0, 1, "", "TensorDictMaxValueWriter"], [113, 0, 1, "", "TensorDictRoundRobinWriter"], [114, 0, 1, "", "TensorStorage"], [115, 0, 1, "", "TensorStorageCheckpointer"], [116, 0, 1, "", "Writer"], [117, 0, 1, "", "WriterEnsemble"]], "torchrl.data.replay_buffers.ImmutableDatasetWriter": [[92, 1, 1, "", "add"], [92, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.LazyMemmapStorage": [[93, 1, 1, "", "attach"], [93, 1, 1, "", "dump"], [93, 1, 1, "", "load"], [93, 1, 1, "", "save"]], "torchrl.data.replay_buffers.LazyTensorStorage": [[94, 1, 1, "", "attach"], [94, 1, 1, "", "dump"], [94, 1, 1, "", "load"], [94, 1, 1, "", "save"]], "torchrl.data.replay_buffers.ListStorage": [[95, 1, 1, "", "attach"], [95, 1, 1, "", "dump"], [95, 1, 1, "", "load"], [95, 1, 1, "", "save"]], "torchrl.data.replay_buffers.PrioritizedSampler": [[98, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.PrioritizedSliceSampler": [[99, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.ReplayBufferEnsemble": [[101, 1, 1, "", "add"], [101, 1, 1, "", "append_transform"], [101, 1, 1, "", "dump"], [101, 1, 1, "", "dumps"], [101, 1, 1, "", "empty"], [101, 1, 1, "", "extend"], [101, 1, 1, "", "insert_transform"], [101, 1, 1, "", "load"], [101, 1, 1, "", "loads"], [101, 1, 1, "", "register_load_hook"], [101, 1, 1, "", "register_save_hook"], [101, 1, 1, "", "sample"], [101, 4, 1, "", "sampler"], [101, 1, 1, "", "save"], [101, 1, 1, "", "set_sampler"], [101, 1, 1, "", "set_storage"], [101, 1, 1, "", "set_writer"], [101, 4, 1, "", "storage"], [101, 4, 1, "", "write_count"], [101, 4, 1, "", "writer"]], "torchrl.data.replay_buffers.RoundRobinWriter": [[102, 1, 1, "", "add"], [102, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.Storage": [[108, 1, 1, "", "attach"], [108, 1, 1, "", "dump"], [108, 1, 1, "", "load"], [108, 1, 1, "", "save"]], "torchrl.data.replay_buffers.StorageEnsemble": [[110, 1, 1, "", "attach"], [110, 1, 1, "", "dump"], [110, 1, 1, "", "load"], [110, 1, 1, "", "save"]], "torchrl.data.replay_buffers.TensorDictMaxValueWriter": [[112, 1, 1, "", "add"], [112, 1, 1, "", "extend"], [112, 1, 1, "", "get_insert_index"]], "torchrl.data.replay_buffers.TensorDictRoundRobinWriter": [[113, 1, 1, "", "add"], [113, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.TensorStorage": [[114, 1, 1, "", "attach"], [114, 1, 1, "", "dump"], [114, 1, 1, "", "load"], [114, 1, 1, "", "save"]], "torchrl.data.replay_buffers.Writer": [[116, 1, 1, "", "add"], [116, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.WriterEnsemble": [[117, 1, 1, "", "add"], [117, 1, 1, "", "extend"]], "torchrl.envs": [[118, 2, 1, "", "BraxEnv"], [119, 2, 1, "", "BraxWrapper"], [120, 2, 1, "", "DMControlEnv"], [121, 2, 1, "", "DMControlWrapper"], [122, 0, 1, "", "EnvBase"], [123, 0, 1, "", "EnvCreator"], [124, 0, 1, "", "EnvMetaData"], [125, 2, 1, "", "GymEnv"], [126, 0, 1, "", "GymLikeEnv"], [127, 2, 1, "", "GymWrapper"], [128, 2, 1, "", "HabitatEnv"], [129, 2, 1, "", "IsaacGymEnv"], [130, 2, 1, "", "IsaacGymWrapper"], [131, 2, 1, "", "JumanjiEnv"], [132, 2, 1, "", "JumanjiWrapper"], [133, 2, 1, "", "MOGymEnv"], [134, 2, 1, "", "MOGymWrapper"], [135, 2, 1, "", "MarlGroupMapType"], [136, 2, 1, "", "MeltingpotEnv"], [137, 2, 1, "", "MeltingpotWrapper"], [138, 2, 1, "", "ModelBasedEnvBase"], [139, 2, 1, "", "MultiThreadedEnv"], [140, 2, 1, "", "MultiThreadedEnvWrapper"], [141, 2, 1, "", "OpenMLEnv"], [142, 2, 1, "", "OpenSpielEnv"], [143, 2, 1, "", "OpenSpielWrapper"], [144, 0, 1, "", "ParallelEnv"], [145, 0, 1, "", "PendulumEnv"], [146, 2, 1, "", "PettingZooEnv"], [147, 2, 1, "", "PettingZooWrapper"], [148, 2, 1, "", "RoboHiveEnv"], [149, 2, 1, "", "SMACv2Env"], [150, 2, 1, "", "SMACv2Wrapper"], [151, 0, 1, "", "SerialEnv"], [152, 0, 1, "", "TicTacToeEnv"], [153, 2, 1, "", "UnityMLAgentsEnv"], [154, 2, 1, "", "UnityMLAgentsWrapper"], [155, 2, 1, "", "VmasEnv"], [156, 2, 1, "", "VmasWrapper"], [157, 2, 1, "", "check_marl_grouping"], [158, 2, 1, "", "gym_backend"], [138, 1, 1, "", "rand_step"], [138, 1, 1, "", "reset"], [138, 1, 1, "", "rollout"], [161, 2, 1, "", "set_gym_backend"], [138, 1, 1, "", "set_seed"], [138, 1, 1, "", "step"]], "torchrl.envs.EnvBase": [[122, 4, 1, "", "action_key"], [122, 4, 1, "", "action_keys"], [122, 4, 1, "", "action_spec"], [122, 1, 1, "", "add_module"], [122, 1, 1, "", "add_truncated_keys"], [122, 1, 1, "", "append_transform"], [122, 1, 1, "", "apply"], [122, 4, 1, "", "batch_locked"], [122, 4, 1, "", "batch_size"], [122, 1, 1, "", "bfloat16"], [122, 1, 1, "", "buffers"], [122, 1, 1, "", "children"], [122, 1, 1, "", "compile"], [122, 1, 1, "", "cpu"], [122, 1, 1, "", "cuda"], [122, 4, 1, "", "done_key"], [122, 4, 1, "", "done_keys"], [122, 4, 1, "", "done_keys_groups"], [122, 4, 1, "", "done_spec"], [122, 1, 1, "", "double"], [122, 1, 1, "", "empty_cache"], [122, 1, 1, "", "eval"], [122, 1, 1, "", "extra_repr"], [122, 1, 1, "", "fake_tensordict"], [122, 1, 1, "", "float"], [122, 1, 1, "", "forward"], [122, 4, 1, "", "full_action_spec"], [122, 4, 1, "", "full_done_spec"], [122, 4, 1, "", "full_reward_spec"], [122, 4, 1, "", "full_state_spec"], [122, 1, 1, "", "get_buffer"], [122, 1, 1, "", "get_extra_state"], [122, 1, 1, "", "get_parameter"], [122, 1, 1, "", "get_submodule"], [122, 1, 1, "", "half"], [122, 4, 1, "", "input_spec"], [122, 1, 1, "", "ipu"], [122, 1, 1, "", "load_state_dict"], [122, 1, 1, "", "maybe_reset"], [122, 1, 1, "", "modules"], [122, 1, 1, "", "mtia"], [122, 1, 1, "", "named_buffers"], [122, 1, 1, "", "named_children"], [122, 1, 1, "", "named_modules"], [122, 1, 1, "", "named_parameters"], [122, 4, 1, "", "observation_spec"], [122, 4, 1, "", "output_spec"], [122, 1, 1, "", "parameters"], [122, 1, 1, "", "rand_action"], [122, 1, 1, "id0", "rand_step"], [122, 1, 1, "", "register_backward_hook"], [122, 1, 1, "", "register_buffer"], [122, 1, 1, "", "register_forward_hook"], [122, 1, 1, "", "register_forward_pre_hook"], [122, 1, 1, "", "register_full_backward_hook"], [122, 1, 1, "", "register_full_backward_pre_hook"], [122, 1, 1, "", "register_gym"], [122, 1, 1, "", "register_load_state_dict_post_hook"], [122, 1, 1, "", "register_load_state_dict_pre_hook"], [122, 1, 1, "", "register_module"], [122, 1, 1, "", "register_parameter"], [122, 1, 1, "", "register_state_dict_post_hook"], [122, 1, 1, "", "register_state_dict_pre_hook"], [122, 1, 1, "", "requires_grad_"], [122, 1, 1, "id1", "reset"], [122, 4, 1, "", "reset_keys"], [122, 4, 1, "", "reward_key"], [122, 4, 1, "", "reward_keys"], [122, 4, 1, "", "reward_spec"], [122, 1, 1, "id2", "rollout"], [122, 1, 1, "", "set_extra_state"], [122, 1, 1, "id3", "set_seed"], [122, 1, 1, "", "set_submodule"], [122, 4, 1, "", "shape"], [122, 1, 1, "", "share_memory"], [122, 4, 1, "", "specs"], [122, 1, 1, "", "state_dict"], [122, 4, 1, "", "state_keys"], [122, 4, 1, "", "state_spec"], [122, 1, 1, "id4", "step"], [122, 1, 1, "", "step_and_maybe_reset"], [122, 1, 1, "", "to"], [122, 1, 1, "", "to_empty"], [122, 1, 1, "", "train"], [122, 1, 1, "", "type"], [122, 1, 1, "", "xpu"], [122, 1, 1, "", "zero_grad"]], "torchrl.envs.GymLikeEnv": [[126, 4, 1, "", "action_key"], [126, 4, 1, "", "action_keys"], [126, 4, 1, "", "action_spec"], [126, 1, 1, "", "add_module"], [126, 1, 1, "", "add_truncated_keys"], [126, 1, 1, "", "append_transform"], [126, 1, 1, "", "apply"], [126, 1, 1, "", "auto_register_info_dict"], [126, 4, 1, "", "batch_locked"], [126, 4, 1, "", "batch_size"], [126, 1, 1, "", "bfloat16"], [126, 1, 1, "", "buffers"], [126, 1, 1, "", "children"], [126, 1, 1, "", "close"], [126, 1, 1, "", "compile"], [126, 1, 1, "", "cpu"], [126, 1, 1, "", "cuda"], [126, 4, 1, "", "done_key"], [126, 4, 1, "", "done_keys"], [126, 4, 1, "", "done_keys_groups"], [126, 4, 1, "", "done_spec"], [126, 1, 1, "", "double"], [126, 1, 1, "", "empty_cache"], [126, 1, 1, "", "eval"], [126, 1, 1, "", "extra_repr"], [126, 1, 1, "", "fake_tensordict"], [126, 1, 1, "", "float"], [126, 1, 1, "", "forward"], [126, 4, 1, "", "full_action_spec"], [126, 4, 1, "", "full_done_spec"], [126, 4, 1, "", "full_reward_spec"], [126, 4, 1, "", "full_state_spec"], [126, 1, 1, "", "get_buffer"], [126, 1, 1, "", "get_extra_state"], [126, 1, 1, "", "get_parameter"], [126, 1, 1, "", "get_submodule"], [126, 1, 1, "", "half"], [126, 4, 1, "", "input_spec"], [126, 1, 1, "", "ipu"], [126, 1, 1, "", "load_state_dict"], [126, 1, 1, "", "maybe_reset"], [126, 1, 1, "", "modules"], [126, 1, 1, "", "mtia"], [126, 1, 1, "", "named_buffers"], [126, 1, 1, "", "named_children"], [126, 1, 1, "", "named_modules"], [126, 1, 1, "", "named_parameters"], [126, 4, 1, "", "observation_spec"], [126, 4, 1, "", "output_spec"], [126, 1, 1, "", "parameters"], [126, 1, 1, "", "rand_action"], [126, 1, 1, "", "rand_step"], [126, 1, 1, "", "read_action"], [126, 1, 1, "", "read_done"], [126, 1, 1, "", "read_obs"], [126, 1, 1, "", "read_reward"], [126, 1, 1, "", "register_backward_hook"], [126, 1, 1, "", "register_buffer"], [126, 1, 1, "", "register_forward_hook"], [126, 1, 1, "", "register_forward_pre_hook"], [126, 1, 1, "", "register_full_backward_hook"], [126, 1, 1, "", "register_full_backward_pre_hook"], [126, 1, 1, "", "register_gym"], [126, 1, 1, "", "register_load_state_dict_post_hook"], [126, 1, 1, "", "register_load_state_dict_pre_hook"], [126, 1, 1, "", "register_module"], [126, 1, 1, "", "register_parameter"], [126, 1, 1, "", "register_state_dict_post_hook"], [126, 1, 1, "", "register_state_dict_pre_hook"], [126, 1, 1, "", "requires_grad_"], [126, 1, 1, "", "reset"], [126, 4, 1, "", "reset_keys"], [126, 4, 1, "", "reward_key"], [126, 4, 1, "", "reward_keys"], [126, 4, 1, "", "reward_spec"], [126, 1, 1, "", "rollout"], [126, 1, 1, "", "set_extra_state"], [126, 1, 1, "", "set_info_dict_reader"], [126, 1, 1, "", "set_seed"], [126, 1, 1, "", "set_submodule"], [126, 4, 1, "", "shape"], [126, 1, 1, "", "share_memory"], [126, 4, 1, "", "specs"], [126, 1, 1, "", "state_dict"], [126, 4, 1, "", "state_keys"], [126, 4, 1, "", "state_spec"], [126, 1, 1, "", "step"], [126, 1, 1, "", "step_and_maybe_reset"], [126, 1, 1, "", "to"], [126, 1, 1, "", "to_empty"], [126, 1, 1, "", "train"], [126, 1, 1, "", "type"], [126, 1, 1, "", "xpu"], [126, 1, 1, "", "zero_grad"]], "torchrl.envs.ParallelEnv": [[144, 4, 1, "", "action_key"], [144, 4, 1, "", "action_keys"], [144, 4, 1, "", "action_spec"], [144, 1, 1, "", "add_module"], [144, 1, 1, "", "add_truncated_keys"], [144, 1, 1, "", "append_transform"], [144, 1, 1, "", "apply"], [144, 4, 1, "", "batch_locked"], [144, 4, 1, "", "batch_size"], [144, 1, 1, "", "bfloat16"], [144, 1, 1, "", "buffers"], [144, 1, 1, "", "children"], [144, 1, 1, "", "compile"], [144, 1, 1, "", "cpu"], [144, 1, 1, "", "cuda"], [144, 4, 1, "", "done_key"], [144, 4, 1, "", "done_keys"], [144, 4, 1, "", "done_keys_groups"], [144, 4, 1, "", "done_spec"], [144, 1, 1, "", "double"], [144, 1, 1, "", "empty_cache"], [144, 1, 1, "", "eval"], [144, 1, 1, "", "extra_repr"], [144, 1, 1, "", "fake_tensordict"], [144, 1, 1, "", "float"], [144, 1, 1, "", "forward"], [144, 4, 1, "", "full_action_spec"], [144, 4, 1, "", "full_done_spec"], [144, 4, 1, "", "full_reward_spec"], [144, 4, 1, "", "full_state_spec"], [144, 1, 1, "", "get_buffer"], [144, 1, 1, "", "get_extra_state"], [144, 1, 1, "", "get_parameter"], [144, 1, 1, "", "get_submodule"], [144, 1, 1, "", "half"], [144, 4, 1, "", "input_spec"], [144, 1, 1, "", "ipu"], [144, 1, 1, "", "load_state_dict"], [144, 1, 1, "", "maybe_reset"], [144, 1, 1, "", "modules"], [144, 1, 1, "", "mtia"], [144, 1, 1, "", "named_buffers"], [144, 1, 1, "", "named_children"], [144, 1, 1, "", "named_modules"], [144, 1, 1, "", "named_parameters"], [144, 4, 1, "", "observation_spec"], [144, 4, 1, "", "output_spec"], [144, 1, 1, "", "parameters"], [144, 1, 1, "", "rand_action"], [144, 1, 1, "", "rand_step"], [144, 1, 1, "", "register_backward_hook"], [144, 1, 1, "", "register_buffer"], [144, 1, 1, "", "register_forward_hook"], [144, 1, 1, "", "register_forward_pre_hook"], [144, 1, 1, "", "register_full_backward_hook"], [144, 1, 1, "", "register_full_backward_pre_hook"], [144, 1, 1, "", "register_gym"], [144, 1, 1, "", "register_load_state_dict_post_hook"], [144, 1, 1, "", "register_load_state_dict_pre_hook"], [144, 1, 1, "", "register_module"], [144, 1, 1, "", "register_parameter"], [144, 1, 1, "", "register_state_dict_post_hook"], [144, 1, 1, "", "register_state_dict_pre_hook"], [144, 1, 1, "", "requires_grad_"], [144, 1, 1, "", "reset"], [144, 4, 1, "", "reset_keys"], [144, 4, 1, "", "reward_key"], [144, 4, 1, "", "reward_keys"], [144, 4, 1, "", "reward_spec"], [144, 1, 1, "", "rollout"], [144, 1, 1, "", "set_extra_state"], [144, 1, 1, "", "set_seed"], [144, 1, 1, "", "set_submodule"], [144, 4, 1, "", "shape"], [144, 1, 1, "", "share_memory"], [144, 4, 1, "", "specs"], [144, 1, 1, "", "state_dict"], [144, 4, 1, "", "state_keys"], [144, 4, 1, "", "state_spec"], [144, 1, 1, "", "step"], [144, 1, 1, "", "step_and_maybe_reset"], [144, 1, 1, "", "to"], [144, 1, 1, "", "to_empty"], [144, 1, 1, "", "train"], [144, 1, 1, "", "type"], [144, 1, 1, "", "update_kwargs"], [144, 1, 1, "", "xpu"], [144, 1, 1, "", "zero_grad"]], "torchrl.envs.PendulumEnv": [[145, 4, 1, "", "action_key"], [145, 4, 1, "", "action_keys"], [145, 4, 1, "", "action_spec"], [145, 1, 1, "", "add_module"], [145, 1, 1, "", "add_truncated_keys"], [145, 1, 1, "", "append_transform"], [145, 1, 1, "", "apply"], [145, 4, 1, "", "batch_size"], [145, 1, 1, "", "bfloat16"], [145, 1, 1, "", "buffers"], [145, 1, 1, "", "children"], [145, 1, 1, "", "compile"], [145, 1, 1, "", "cpu"], [145, 1, 1, "", "cuda"], [145, 4, 1, "", "done_key"], [145, 4, 1, "", "done_keys"], [145, 4, 1, "", "done_keys_groups"], [145, 4, 1, "", "done_spec"], [145, 1, 1, "", "double"], [145, 1, 1, "", "empty_cache"], [145, 1, 1, "", "eval"], [145, 1, 1, "", "extra_repr"], [145, 1, 1, "", "fake_tensordict"], [145, 1, 1, "", "float"], [145, 1, 1, "", "forward"], [145, 4, 1, "", "full_action_spec"], [145, 4, 1, "", "full_done_spec"], [145, 4, 1, "", "full_reward_spec"], [145, 4, 1, "", "full_state_spec"], [145, 1, 1, "", "gen_params"], [145, 1, 1, "", "get_buffer"], [145, 1, 1, "", "get_extra_state"], [145, 1, 1, "", "get_parameter"], [145, 1, 1, "", "get_submodule"], [145, 1, 1, "", "half"], [145, 4, 1, "", "input_spec"], [145, 1, 1, "", "ipu"], [145, 1, 1, "", "load_state_dict"], [145, 1, 1, "", "maybe_reset"], [145, 1, 1, "", "modules"], [145, 1, 1, "", "mtia"], [145, 1, 1, "", "named_buffers"], [145, 1, 1, "", "named_children"], [145, 1, 1, "", "named_modules"], [145, 1, 1, "", "named_parameters"], [145, 4, 1, "", "observation_spec"], [145, 4, 1, "", "output_spec"], [145, 1, 1, "", "parameters"], [145, 1, 1, "", "rand_action"], [145, 1, 1, "", "rand_step"], [145, 1, 1, "", "register_backward_hook"], [145, 1, 1, "", "register_buffer"], [145, 1, 1, "", "register_forward_hook"], [145, 1, 1, "", "register_forward_pre_hook"], [145, 1, 1, "", "register_full_backward_hook"], [145, 1, 1, "", "register_full_backward_pre_hook"], [145, 1, 1, "", "register_gym"], [145, 1, 1, "", "register_load_state_dict_post_hook"], [145, 1, 1, "", "register_load_state_dict_pre_hook"], [145, 1, 1, "", "register_module"], [145, 1, 1, "", "register_parameter"], [145, 1, 1, "", "register_state_dict_post_hook"], [145, 1, 1, "", "register_state_dict_pre_hook"], [145, 1, 1, "", "requires_grad_"], [145, 1, 1, "", "reset"], [145, 4, 1, "", "reset_keys"], [145, 4, 1, "", "reward_key"], [145, 4, 1, "", "reward_keys"], [145, 4, 1, "", "reward_spec"], [145, 1, 1, "", "rollout"], [145, 1, 1, "", "set_extra_state"], [145, 1, 1, "", "set_seed"], [145, 1, 1, "", "set_submodule"], [145, 4, 1, "", "shape"], [145, 1, 1, "", "share_memory"], [145, 4, 1, "", "specs"], [145, 1, 1, "", "state_dict"], [145, 4, 1, "", "state_keys"], [145, 4, 1, "", "state_spec"], [145, 1, 1, "", "step"], [145, 1, 1, "", "step_and_maybe_reset"], [145, 1, 1, "", "to"], [145, 1, 1, "", "to_empty"], [145, 1, 1, "", "train"], [145, 1, 1, "", "type"], [145, 1, 1, "", "xpu"], [145, 1, 1, "", "zero_grad"]], "torchrl.envs.SerialEnv": [[151, 4, 1, "", "action_key"], [151, 4, 1, "", "action_keys"], [151, 4, 1, "", "action_spec"], [151, 1, 1, "", "add_module"], [151, 1, 1, "", "add_truncated_keys"], [151, 1, 1, "", "append_transform"], [151, 1, 1, "", "apply"], [151, 4, 1, "", "batch_locked"], [151, 4, 1, "", "batch_size"], [151, 1, 1, "", "bfloat16"], [151, 1, 1, "", "buffers"], [151, 1, 1, "", "children"], [151, 1, 1, "", "compile"], [151, 1, 1, "", "cpu"], [151, 1, 1, "", "cuda"], [151, 4, 1, "", "done_key"], [151, 4, 1, "", "done_keys"], [151, 4, 1, "", "done_keys_groups"], [151, 4, 1, "", "done_spec"], [151, 1, 1, "", "double"], [151, 1, 1, "", "empty_cache"], [151, 1, 1, "", "eval"], [151, 1, 1, "", "extra_repr"], [151, 1, 1, "", "fake_tensordict"], [151, 1, 1, "", "float"], [151, 1, 1, "", "forward"], [151, 4, 1, "", "full_action_spec"], [151, 4, 1, "", "full_done_spec"], [151, 4, 1, "", "full_reward_spec"], [151, 4, 1, "", "full_state_spec"], [151, 1, 1, "", "get_buffer"], [151, 1, 1, "", "get_extra_state"], [151, 1, 1, "", "get_parameter"], [151, 1, 1, "", "get_submodule"], [151, 1, 1, "", "half"], [151, 4, 1, "", "input_spec"], [151, 1, 1, "", "ipu"], [151, 1, 1, "", "load_state_dict"], [151, 1, 1, "", "maybe_reset"], [151, 1, 1, "", "modules"], [151, 1, 1, "", "mtia"], [151, 1, 1, "", "named_buffers"], [151, 1, 1, "", "named_children"], [151, 1, 1, "", "named_modules"], [151, 1, 1, "", "named_parameters"], [151, 4, 1, "", "observation_spec"], [151, 4, 1, "", "output_spec"], [151, 1, 1, "", "parameters"], [151, 1, 1, "", "rand_action"], [151, 1, 1, "", "rand_step"], [151, 1, 1, "", "register_backward_hook"], [151, 1, 1, "", "register_buffer"], [151, 1, 1, "", "register_forward_hook"], [151, 1, 1, "", "register_forward_pre_hook"], [151, 1, 1, "", "register_full_backward_hook"], [151, 1, 1, "", "register_full_backward_pre_hook"], [151, 1, 1, "", "register_gym"], [151, 1, 1, "", "register_load_state_dict_post_hook"], [151, 1, 1, "", "register_load_state_dict_pre_hook"], [151, 1, 1, "", "register_module"], [151, 1, 1, "", "register_parameter"], [151, 1, 1, "", "register_state_dict_post_hook"], [151, 1, 1, "", "register_state_dict_pre_hook"], [151, 1, 1, "", "requires_grad_"], [151, 1, 1, "", "reset"], [151, 4, 1, "", "reset_keys"], [151, 4, 1, "", "reward_key"], [151, 4, 1, "", "reward_keys"], [151, 4, 1, "", "reward_spec"], [151, 1, 1, "", "rollout"], [151, 1, 1, "", "set_extra_state"], [151, 1, 1, "", "set_seed"], [151, 1, 1, "", "set_submodule"], [151, 4, 1, "", "shape"], [151, 1, 1, "", "share_memory"], [151, 4, 1, "", "specs"], [151, 1, 1, "", "state_dict"], [151, 4, 1, "", "state_keys"], [151, 4, 1, "", "state_spec"], [151, 1, 1, "", "step"], [151, 1, 1, "", "step_and_maybe_reset"], [151, 1, 1, "", "to"], [151, 1, 1, "", "to_empty"], [151, 1, 1, "", "train"], [151, 1, 1, "", "type"], [151, 1, 1, "", "update_kwargs"], [151, 1, 1, "", "xpu"], [151, 1, 1, "", "zero_grad"]], "torchrl.envs.TicTacToeEnv": [[152, 4, 1, "", "action_key"], [152, 4, 1, "", "action_keys"], [152, 4, 1, "", "action_spec"], [152, 1, 1, "", "add_module"], [152, 1, 1, "", "add_truncated_keys"], [152, 1, 1, "", "append_transform"], [152, 1, 1, "", "apply"], [152, 4, 1, "", "batch_size"], [152, 1, 1, "", "bfloat16"], [152, 1, 1, "", "buffers"], [152, 1, 1, "", "children"], [152, 1, 1, "", "compile"], [152, 1, 1, "", "cpu"], [152, 1, 1, "", "cuda"], [152, 4, 1, "", "done_key"], [152, 4, 1, "", "done_keys"], [152, 4, 1, "", "done_keys_groups"], [152, 4, 1, "", "done_spec"], [152, 1, 1, "", "double"], [152, 1, 1, "", "empty_cache"], [152, 1, 1, "", "eval"], [152, 1, 1, "", "extra_repr"], [152, 1, 1, "", "fake_tensordict"], [152, 1, 1, "", "float"], [152, 1, 1, "", "forward"], [152, 4, 1, "", "full_action_spec"], [152, 4, 1, "", "full_done_spec"], [152, 4, 1, "", "full_reward_spec"], [152, 4, 1, "", "full_state_spec"], [152, 1, 1, "", "get_buffer"], [152, 1, 1, "", "get_extra_state"], [152, 1, 1, "", "get_parameter"], [152, 1, 1, "", "get_submodule"], [152, 1, 1, "", "half"], [152, 4, 1, "", "input_spec"], [152, 1, 1, "", "ipu"], [152, 1, 1, "", "load_state_dict"], [152, 1, 1, "", "maybe_reset"], [152, 1, 1, "", "modules"], [152, 1, 1, "", "mtia"], [152, 1, 1, "", "named_buffers"], [152, 1, 1, "", "named_children"], [152, 1, 1, "", "named_modules"], [152, 1, 1, "", "named_parameters"], [152, 4, 1, "", "observation_spec"], [152, 4, 1, "", "output_spec"], [152, 1, 1, "", "parameters"], [152, 1, 1, "", "rand_action"], [152, 1, 1, "", "rand_step"], [152, 1, 1, "", "register_backward_hook"], [152, 1, 1, "", "register_buffer"], [152, 1, 1, "", "register_forward_hook"], [152, 1, 1, "", "register_forward_pre_hook"], [152, 1, 1, "", "register_full_backward_hook"], [152, 1, 1, "", "register_full_backward_pre_hook"], [152, 1, 1, "", "register_gym"], [152, 1, 1, "", "register_load_state_dict_post_hook"], [152, 1, 1, "", "register_load_state_dict_pre_hook"], [152, 1, 1, "", "register_module"], [152, 1, 1, "", "register_parameter"], [152, 1, 1, "", "register_state_dict_post_hook"], [152, 1, 1, "", "register_state_dict_pre_hook"], [152, 1, 1, "", "requires_grad_"], [152, 1, 1, "", "reset"], [152, 4, 1, "", "reset_keys"], [152, 4, 1, "", "reward_key"], [152, 4, 1, "", "reward_keys"], [152, 4, 1, "", "reward_spec"], [152, 1, 1, "", "rollout"], [152, 1, 1, "", "set_extra_state"], [152, 1, 1, "", "set_seed"], [152, 1, 1, "", "set_submodule"], [152, 4, 1, "", "shape"], [152, 1, 1, "", "share_memory"], [152, 4, 1, "", "specs"], [152, 1, 1, "", "state_dict"], [152, 4, 1, "", "state_keys"], [152, 4, 1, "", "state_spec"], [152, 1, 1, "", "step"], [152, 1, 1, "", "step_and_maybe_reset"], [152, 1, 1, "", "to"], [152, 1, 1, "", "to_empty"], [152, 1, 1, "", "train"], [152, 1, 1, "", "type"], [152, 1, 1, "", "xpu"], [152, 1, 1, "", "zero_grad"]], "torchrl.envs.model_based.dreamer": [[159, 2, 1, "", "DreamerDecoder"], [160, 2, 1, "", "DreamerEnv"]], "torchrl.envs.transforms": [[162, 0, 1, "", "ActionDiscretizer"], [163, 0, 1, "", "ActionMask"], [164, 0, 1, "", "AutoResetEnv"], [165, 0, 1, "", "AutoResetTransform"], [166, 0, 1, "", "BatchSizeTransform"], [167, 0, 1, "", "BinarizeReward"], [168, 0, 1, "", "BurnInTransform"], [169, 0, 1, "", "CatFrames"], [170, 0, 1, "", "CatTensors"], [171, 0, 1, "", "CenterCrop"], [172, 0, 1, "", "ClipTransform"], [173, 0, 1, "", "Compose"], [174, 0, 1, "", "Crop"], [175, 0, 1, "", "DTypeCastTransform"], [176, 0, 1, "", "DeviceCastTransform"], [177, 0, 1, "", "DiscreteActionProjection"], [178, 0, 1, "", "DoubleToFloat"], [179, 0, 1, "", "EndOfLifeTransform"], [180, 0, 1, "", "ExcludeTransform"], [181, 0, 1, "", "FiniteTensorDictCheck"], [182, 0, 1, "", "FlattenObservation"], [183, 0, 1, "", "FrameSkipTransform"], [184, 0, 1, "", "GrayScale"], [185, 0, 1, "", "InitTracker"], [186, 0, 1, "", "KLRewardTransform"], [187, 0, 1, "", "NoopResetEnv"], [188, 0, 1, "", "ObservationNorm"], [189, 0, 1, "", "ObservationTransform"], [190, 0, 1, "", "PermuteTransform"], [191, 0, 1, "", "PinMemoryTransform"], [192, 0, 1, "", "R3MTransform"], [193, 0, 1, "", "RandomCropTensorDict"], [194, 0, 1, "", "RemoveEmptySpecs"], [195, 0, 1, "", "RenameTransform"], [196, 0, 1, "", "Resize"], [197, 0, 1, "", "Reward2GoTransform"], [198, 0, 1, "", "RewardClipping"], [199, 0, 1, "", "RewardScaling"], [200, 0, 1, "", "RewardSum"], [201, 0, 1, "", "SelectTransform"], [202, 0, 1, "", "SignTransform"], [203, 0, 1, "", "SqueezeTransform"], [204, 0, 1, "", "StepCounter"], [205, 0, 1, "", "TargetReturn"], [206, 0, 1, "", "TensorDictPrimer"], [207, 0, 1, "", "TimeMaxPool"], [208, 0, 1, "", "ToTensorImage"], [209, 0, 1, "", "Transform"], [210, 0, 1, "", "TransformedEnv"], [211, 0, 1, "", "UnsqueezeTransform"], [212, 0, 1, "", "VC1Transform"], [213, 0, 1, "", "VIPRewardTransform"], [214, 0, 1, "", "VIPTransform"], [215, 0, 1, "", "VecGymEnvTransform"], [216, 0, 1, "", "VecNorm"], [217, 0, 1, "", "gSDENoise"]], "torchrl.envs.transforms.ActionDiscretizer": [[162, 0, 1, "", "SamplingStrategy"], [162, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.ActionMask": [[163, 1, 1, "", "forward"]], "torchrl.envs.transforms.AutoResetEnv": [[164, 1, 1, "", "insert_transform"]], "torchrl.envs.transforms.AutoResetTransform": [[165, 1, 1, "", "forward"]], "torchrl.envs.transforms.BatchSizeTransform": [[166, 1, 1, "", "forward"], [166, 1, 1, "", "transform_env_batch_size"], [166, 1, 1, "", "transform_input_spec"], [166, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.BinarizeReward": [[167, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.BurnInTransform": [[168, 1, 1, "", "forward"]], "torchrl.envs.transforms.CatFrames": [[169, 1, 1, "", "forward"], [169, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CatTensors": [[170, 1, 1, "", "forward"], [170, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CenterCrop": [[171, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ClipTransform": [[172, 1, 1, "", "transform_observation_spec"], [172, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.Compose": [[173, 1, 1, "", "append"], [173, 1, 1, "", "forward"], [173, 1, 1, "", "insert"], [173, 1, 1, "", "to"], [173, 1, 1, "", "transform_env_batch_size"], [173, 1, 1, "", "transform_env_device"], [173, 1, 1, "", "transform_input_spec"], [173, 1, 1, "", "transform_observation_spec"], [173, 1, 1, "", "transform_output_spec"], [173, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.Crop": [[174, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.DTypeCastTransform": [[175, 1, 1, "", "forward"], [175, 1, 1, "", "transform_input_spec"], [175, 1, 1, "", "transform_observation_spec"], [175, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.DeviceCastTransform": [[176, 1, 1, "", "forward"], [176, 1, 1, "", "transform_done_spec"], [176, 1, 1, "", "transform_env_device"], [176, 1, 1, "", "transform_input_spec"], [176, 1, 1, "", "transform_observation_spec"], [176, 1, 1, "", "transform_output_spec"], [176, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DiscreteActionProjection": [[177, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.EndOfLifeTransform": [[179, 1, 1, "", "forward"], [179, 1, 1, "", "register_keys"], [179, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ExcludeTransform": [[180, 1, 1, "", "forward"], [180, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.FiniteTensorDictCheck": [[181, 1, 1, "", "forward"]], "torchrl.envs.transforms.FlattenObservation": [[182, 1, 1, "", "forward"], [182, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.FrameSkipTransform": [[183, 1, 1, "", "forward"]], "torchrl.envs.transforms.GrayScale": [[184, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.InitTracker": [[185, 1, 1, "", "forward"], [185, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.KLRewardTransform": [[186, 1, 1, "", "forward"], [186, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.ObservationNorm": [[188, 1, 1, "", "init_stats"], [188, 1, 1, "", "transform_input_spec"], [188, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PermuteTransform": [[190, 1, 1, "", "transform_input_spec"], [190, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PinMemoryTransform": [[191, 1, 1, "", "forward"]], "torchrl.envs.transforms.R3MTransform": [[192, 1, 1, "", "to"]], "torchrl.envs.transforms.RandomCropTensorDict": [[193, 1, 1, "", "forward"]], "torchrl.envs.transforms.RemoveEmptySpecs": [[194, 1, 1, "", "forward"], [194, 1, 1, "", "transform_input_spec"], [194, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.RenameTransform": [[195, 1, 1, "", "forward"], [195, 1, 1, "", "transform_input_spec"], [195, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.Resize": [[196, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Reward2GoTransform": [[197, 1, 1, "", "forward"]], "torchrl.envs.transforms.RewardClipping": [[198, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardScaling": [[199, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardSum": [[200, 1, 1, "", "forward"], [200, 1, 1, "", "transform_input_spec"], [200, 1, 1, "", "transform_observation_spec"], [200, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.SelectTransform": [[201, 1, 1, "", "forward"], [201, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.SignTransform": [[202, 1, 1, "", "transform_observation_spec"], [202, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.StepCounter": [[204, 1, 1, "", "forward"], [204, 1, 1, "", "transform_input_spec"], [204, 1, 1, "", "transform_observation_spec"], [204, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.TargetReturn": [[205, 1, 1, "", "forward"], [205, 1, 1, "", "transform_input_spec"], [205, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TensorDictPrimer": [[206, 1, 1, "", "forward"], [206, 1, 1, "", "to"], [206, 1, 1, "", "transform_input_spec"], [206, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TimeMaxPool": [[207, 1, 1, "", "forward"], [207, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ToTensorImage": [[208, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Transform": [[209, 4, 1, "", "container"], [209, 1, 1, "", "forward"], [209, 4, 1, "", "parent"], [209, 1, 1, "", "to"], [209, 1, 1, "", "transform_done_spec"], [209, 1, 1, "", "transform_env_batch_size"], [209, 1, 1, "", "transform_env_device"], [209, 1, 1, "", "transform_input_spec"], [209, 1, 1, "", "transform_observation_spec"], [209, 1, 1, "", "transform_output_spec"], [209, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.TransformedEnv": [[210, 1, 1, "", "add_truncated_keys"], [210, 1, 1, "", "append_transform"], [210, 4, 1, "", "batch_locked"], [210, 4, 1, "", "batch_size"], [210, 1, 1, "", "empty_cache"], [210, 1, 1, "", "eval"], [210, 4, 1, "", "input_spec"], [210, 1, 1, "", "insert_transform"], [210, 1, 1, "", "load_state_dict"], [210, 4, 1, "", "output_spec"], [210, 1, 1, "", "set_missing_tolerance"], [210, 1, 1, "", "set_seed"], [210, 1, 1, "", "state_dict"], [210, 1, 1, "", "to"], [210, 1, 1, "", "train"]], "torchrl.envs.transforms.UnsqueezeTransform": [[211, 1, 1, "", "transform_input_spec"], [211, 1, 1, "", "transform_observation_spec"], [211, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.VC1Transform": [[212, 1, 1, "", "forward"], [212, 1, 1, "", "make_noload_model"], [212, 1, 1, "", "to"], [212, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VIPRewardTransform": [[213, 1, 1, "", "forward"], [213, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.VIPTransform": [[214, 1, 1, "", "to"]], "torchrl.envs.transforms.VecGymEnvTransform": [[215, 1, 1, "", "forward"], [215, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VecNorm": [[216, 1, 1, "", "build_td_for_shared_vecnorm"], [216, 1, 1, "", "forward"], [216, 1, 1, "", "freeze"], [216, 1, 1, "", "frozen_copy"], [216, 1, 1, "", "get_extra_state"], [216, 4, 1, "", "loc"], [216, 4, 1, "", "scale"], [216, 1, 1, "", "set_extra_state"], [216, 4, 1, "", "standard_normal"], [216, 1, 1, "", "to_observation_norm"], [216, 1, 1, "", "transform_observation_spec"], [216, 1, 1, "", "unfreeze"]], "torchrl.envs.transforms.rb_transforms": [[218, 0, 1, "", "MultiStepTransform"]], "torchrl.envs.transforms.rb_transforms.MultiStepTransform": [[218, 1, 1, "", "add_module"], [218, 1, 1, "", "apply"], [218, 1, 1, "", "bfloat16"], [218, 1, 1, "", "buffers"], [218, 1, 1, "", "children"], [218, 1, 1, "", "compile"], [218, 4, 1, "", "container"], [218, 1, 1, "", "cpu"], [218, 1, 1, "", "cuda"], [218, 1, 1, "", "double"], [218, 1, 1, "", "eval"], [218, 1, 1, "", "extra_repr"], [218, 1, 1, "", "float"], [218, 1, 1, "", "forward"], [218, 1, 1, "", "get_buffer"], [218, 1, 1, "", "get_extra_state"], [218, 1, 1, "", "get_parameter"], [218, 1, 1, "", "get_submodule"], [218, 1, 1, "", "half"], [218, 1, 1, "", "ipu"], [218, 1, 1, "", "load_state_dict"], [218, 1, 1, "", "modules"], [218, 1, 1, "", "mtia"], [218, 4, 1, "", "n_steps"], [218, 1, 1, "", "named_buffers"], [218, 1, 1, "", "named_children"], [218, 1, 1, "", "named_modules"], [218, 1, 1, "", "named_parameters"], [218, 1, 1, "", "parameters"], [218, 4, 1, "", "parent"], [218, 1, 1, "", "register_backward_hook"], [218, 1, 1, "", "register_buffer"], [218, 1, 1, "", "register_forward_hook"], [218, 1, 1, "", "register_forward_pre_hook"], [218, 1, 1, "", "register_full_backward_hook"], [218, 1, 1, "", "register_full_backward_pre_hook"], [218, 1, 1, "", "register_load_state_dict_post_hook"], [218, 1, 1, "", "register_load_state_dict_pre_hook"], [218, 1, 1, "", "register_module"], [218, 1, 1, "", "register_parameter"], [218, 1, 1, "", "register_state_dict_post_hook"], [218, 1, 1, "", "register_state_dict_pre_hook"], [218, 1, 1, "", "requires_grad_"], [218, 1, 1, "", "set_extra_state"], [218, 1, 1, "", "set_submodule"], [218, 1, 1, "", "share_memory"], [218, 1, 1, "", "state_dict"], [218, 1, 1, "", "to"], [218, 1, 1, "", "to_empty"], [218, 1, 1, "", "train"], [218, 1, 1, "", "transform_done_spec"], [218, 1, 1, "", "transform_env_batch_size"], [218, 1, 1, "", "transform_env_device"], [218, 1, 1, "", "transform_input_spec"], [218, 1, 1, "", "transform_observation_spec"], [218, 1, 1, "", "transform_output_spec"], [218, 1, 1, "", "transform_reward_spec"], [218, 1, 1, "", "type"], [218, 1, 1, "", "xpu"], [218, 1, 1, "", "zero_grad"]], "torchrl.envs.utils": [[219, 2, 1, "", "RandomPolicy"], [220, 2, 1, "", "check_env_specs"], [221, 2, 1, "", "exploration_type"], [222, 2, 1, "", "get_available_libraries"], [223, 2, 1, "", "make_composite_from_td"], [224, 2, 1, "", "set_exploration_type"], [225, 2, 1, "", "step_mdp"], [226, 2, 1, "", "terminated_or_truncated"]], "torchrl.modules": [[227, 0, 1, "", "AdditiveGaussianModule"], [228, 0, 1, "", "AdditiveGaussianWrapper"], [229, 0, 1, "", "BatchRenorm1d"], [230, 0, 1, "", "CEMPlanner"], [231, 0, 1, "", "ConsistentDropoutModule"], [232, 0, 1, "", "Conv3dNet"], [233, 0, 1, "", "ConvNet"], [234, 0, 1, "", "DTActor"], [235, 0, 1, "", "DdpgCnnActor"], [236, 0, 1, "", "DdpgCnnQNet"], [237, 0, 1, "", "DdpgMlpActor"], [238, 0, 1, "", "DdpgMlpQNet"], [239, 0, 1, "", "DecisionTransformer"], [240, 0, 1, "", "Delta"], [241, 0, 1, "", "DistributionalDQNnet"], [242, 0, 1, "", "DistributionalQValueHook"], [243, 0, 1, "", "DreamerActor"], [244, 0, 1, "", "DuelingCnnDQNet"], [245, 0, 1, "", "EGreedyModule"], [246, 0, 1, "", "EGreedyWrapper"], [247, 0, 1, "", "GRU"], [248, 0, 1, "", "GRUCell"], [249, 0, 1, "", "GRUModule"], [250, 0, 1, "", "IndependentNormal"], [251, 0, 1, "", "LSTM"], [252, 0, 1, "", "LSTMCell"], [253, 0, 1, "", "LSTMModule"], [254, 0, 1, "", "MLP"], [255, 0, 1, "", "MPCPlannerBase"], [256, 0, 1, "", "MPPIPlanner"], [257, 0, 1, "", "MaskedCategorical"], [258, 0, 1, "", "MaskedOneHotCategorical"], [259, 0, 1, "", "MultiAgentConvNet"], [260, 0, 1, "", "MultiAgentMLP"], [261, 0, 1, "", "MultiAgentNetBase"], [262, 0, 1, "", "NoisyLazyLinear"], [263, 0, 1, "", "NoisyLinear"], [264, 0, 1, "", "NormalParamWrapper"], [265, 0, 1, "", "ObsDecoder"], [266, 0, 1, "", "ObsEncoder"], [267, 0, 1, "", "OneHotCategorical"], [268, 0, 1, "", "OnlineDTActor"], [269, 0, 1, "", "OrnsteinUhlenbeckProcessModule"], [270, 0, 1, "", "OrnsteinUhlenbeckProcessWrapper"], [271, 0, 1, "", "QMixer"], [272, 0, 1, "", "QValueHook"], [273, 0, 1, "", "RSSMPosterior"], [274, 0, 1, "", "RSSMPrior"], [275, 0, 1, "", "Squeeze2dLayer"], [276, 0, 1, "", "SqueezeLayer"], [277, 0, 1, "", "TanhDelta"], [278, 0, 1, "", "TanhNormal"], [279, 0, 1, "", "TruncatedNormal"], [280, 0, 1, "", "VDNMixer"], [281, 0, 1, "", "VmapModule"], [282, 0, 1, "", "reset_noise"]], "torchrl.modules.AdditiveGaussianModule": [[227, 1, 1, "", "forward"], [227, 1, 1, "", "step"]], "torchrl.modules.AdditiveGaussianWrapper": [[228, 1, 1, "", "forward"], [228, 1, 1, "", "step"]], "torchrl.modules.BatchRenorm1d": [[229, 1, 1, "", "forward"]], "torchrl.modules.CEMPlanner": [[230, 1, 1, "", "planning"]], "torchrl.modules.ConsistentDropoutModule": [[231, 1, 1, "", "forward"], [231, 1, 1, "", "make_tensordict_primer"]], "torchrl.modules.Conv3dNet": [[232, 1, 1, "", "forward"]], "torchrl.modules.ConvNet": [[233, 1, 1, "", "forward"]], "torchrl.modules.DTActor": [[234, 1, 1, "", "default_config"], [234, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnActor": [[235, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnQNet": [[236, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpActor": [[237, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpQNet": [[238, 1, 1, "", "forward"]], "torchrl.modules.DecisionTransformer": [[239, 0, 1, "", "DTConfig"], [239, 1, 1, "", "forward"]], "torchrl.modules.Delta": [[240, 1, 1, "", "log_prob"], [240, 4, 1, "", "mean"], [240, 4, 1, "", "mode"], [240, 1, 1, "", "rsample"], [240, 1, 1, "", "sample"]], "torchrl.modules.DistributionalDQNnet": [[241, 1, 1, "", "forward"]], "torchrl.modules.DreamerActor": [[243, 1, 1, "", "forward"]], "torchrl.modules.DuelingCnnDQNet": [[244, 1, 1, "", "forward"]], "torchrl.modules.EGreedyModule": [[245, 1, 1, "", "forward"], [245, 1, 1, "", "step"]], "torchrl.modules.GRU": [[247, 1, 1, "", "forward"]], "torchrl.modules.GRUCell": [[248, 1, 1, "", "forward"]], "torchrl.modules.GRUModule": [[249, 1, 1, "", "forward"], [249, 1, 1, "id0", "make_tensordict_primer"], [249, 1, 1, "id1", "set_recurrent_mode"]], "torchrl.modules.IndependentNormal": [[250, 4, 1, "", "mode"]], "torchrl.modules.LSTM": [[251, 1, 1, "", "forward"]], "torchrl.modules.LSTMCell": [[252, 1, 1, "", "forward"]], "torchrl.modules.LSTMModule": [[253, 1, 1, "", "forward"], [253, 1, 1, "id0", "make_tensordict_primer"], [253, 1, 1, "id1", "set_recurrent_mode"]], "torchrl.modules.MLP": [[254, 1, 1, "", "forward"]], "torchrl.modules.MPCPlannerBase": [[255, 1, 1, "", "forward"], [255, 1, 1, "", "planning"]], "torchrl.modules.MPPIPlanner": [[256, 1, 1, "", "planning"]], "torchrl.modules.MaskedCategorical": [[257, 1, 1, "", "log_prob"], [257, 1, 1, "", "sample"]], "torchrl.modules.MaskedOneHotCategorical": [[258, 1, 1, "", "log_prob"], [258, 4, 1, "", "mode"], [258, 1, 1, "", "rsample"], [258, 1, 1, "", "sample"]], "torchrl.modules.MultiAgentNetBase": [[261, 1, 1, "", "forward"], [261, 1, 1, "", "from_stateful_net"], [261, 1, 1, "", "get_stateful_net"], [261, 1, 1, "", "reset_parameters"]], "torchrl.modules.NoisyLazyLinear": [[262, 1, 1, "", "initialize_parameters"]], "torchrl.modules.NormalParamWrapper": [[264, 1, 1, "", "forward"]], "torchrl.modules.ObsDecoder": [[265, 1, 1, "", "forward"]], "torchrl.modules.ObsEncoder": [[266, 1, 1, "", "forward"]], "torchrl.modules.OneHotCategorical": [[267, 1, 1, "", "log_prob"], [267, 4, 1, "", "mode"], [267, 1, 1, "", "rsample"], [267, 1, 1, "", "sample"]], "torchrl.modules.OnlineDTActor": [[268, 1, 1, "", "default_config"], [268, 1, 1, "", "forward"]], "torchrl.modules.OrnsteinUhlenbeckProcessModule": [[269, 1, 1, "", "forward"], [269, 1, 1, "", "step"]], "torchrl.modules.OrnsteinUhlenbeckProcessWrapper": [[270, 1, 1, "", "forward"], [270, 1, 1, "", "step"]], "torchrl.modules.QMixer": [[271, 1, 1, "", "mix"]], "torchrl.modules.RSSMPosterior": [[273, 1, 1, "", "forward"]], "torchrl.modules.RSSMPrior": [[274, 1, 1, "", "forward"]], "torchrl.modules.SqueezeLayer": [[276, 1, 1, "", "forward"]], "torchrl.modules.TanhDelta": [[277, 4, 1, "", "mean"], [277, 4, 1, "", "mode"]], "torchrl.modules.TanhNormal": [[278, 1, 1, "", "get_mode"], [278, 4, 1, "", "mean"], [278, 4, 1, "", "mode"], [278, 4, 1, "", "support"]], "torchrl.modules.TruncatedNormal": [[279, 1, 1, "", "log_prob"], [279, 4, 1, "", "mode"]], "torchrl.modules.VDNMixer": [[280, 1, 1, "", "mix"]], "torchrl.modules.VmapModule": [[281, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module": [[283, 0, 1, "", "Actor"], [284, 0, 1, "", "ActorCriticOperator"], [285, 0, 1, "", "ActorCriticWrapper"], [286, 0, 1, "", "ActorValueOperator"], [287, 0, 1, "", "DecisionTransformerInferenceWrapper"], [288, 0, 1, "", "DistributionalQValueActor"], [289, 0, 1, "", "DistributionalQValueModule"], [290, 0, 1, "", "LMHeadActorValueOperator"], [291, 0, 1, "", "MultiStepActorWrapper"], [292, 0, 1, "", "ProbabilisticActor"], [293, 0, 1, "", "QValueActor"], [294, 0, 1, "", "QValueModule"], [295, 0, 1, "", "SafeModule"], [296, 0, 1, "", "SafeProbabilisticModule"], [297, 0, 1, "", "SafeProbabilisticTensorDictSequential"], [298, 0, 1, "", "SafeSequential"], [299, 0, 1, "", "TanhModule"], [300, 0, 1, "", "ValueOperator"], [301, 0, 1, "", "WorldModelWrapper"]], "torchrl.modules.tensordict_module.ActorCriticOperator": [[284, 1, 1, "", "get_critic_operator"], [284, 1, 1, "", "get_policy_head"], [284, 1, 1, "", "get_value_head"], [284, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorCriticWrapper": [[285, 1, 1, "", "get_policy_head"], [285, 1, 1, "", "get_policy_operator"], [285, 1, 1, "", "get_value_head"], [285, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorValueOperator": [[286, 1, 1, "", "get_policy_head"], [286, 1, 1, "", "get_policy_operator"], [286, 1, 1, "", "get_value_head"], [286, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper": [[287, 1, 1, "", "forward"], [287, 1, 1, "", "mask_context"], [287, 1, 1, "", "set_tensor_keys"]], "torchrl.modules.tensordict_module.DistributionalQValueModule": [[289, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.MultiStepActorWrapper": [[291, 1, 1, "", "forward"], [291, 4, 1, "", "init_key"]], "torchrl.modules.tensordict_module.QValueModule": [[294, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.SafeModule": [[295, 1, 1, "", "random"], [295, 1, 1, "", "random_sample"], [295, 1, 1, "", "to"]], "torchrl.modules.tensordict_module.SafeProbabilisticModule": [[296, 1, 1, "", "random"], [296, 1, 1, "", "random_sample"]], "torchrl.modules.tensordict_module.TanhModule": [[299, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.WorldModelWrapper": [[301, 1, 1, "", "get_reward_operator"], [301, 1, 1, "", "get_transition_model_operator"]], "torchrl.modules.utils": [[302, 0, 1, "", "biased_softplus"], [303, 0, 1, "", "get_primers_from_module"], [304, 0, 1, "", "inv_softplus"], [305, 0, 1, "", "mappings"]], "torchrl.modules.utils.biased_softplus": [[302, 1, 1, "", "forward"]], "torchrl.objectives": [[306, 0, 1, "", "A2CLoss"], [307, 0, 1, "", "CQLLoss"], [308, 0, 1, "", "ClipPPOLoss"], [309, 0, 1, "", "CrossQLoss"], [310, 0, 1, "", "DDPGLoss"], [311, 0, 1, "", "DQNLoss"], [312, 0, 1, "", "DTLoss"], [313, 0, 1, "", "DiscreteCQLLoss"], [314, 0, 1, "", "DiscreteIQLLoss"], [315, 0, 1, "", "DiscreteSACLoss"], [316, 0, 1, "", "DistributionalDQNLoss"], [317, 0, 1, "", "DreamerActorLoss"], [318, 0, 1, "", "DreamerModelLoss"], [319, 0, 1, "", "DreamerValueLoss"], [320, 0, 1, "", "GAILLoss"], [321, 0, 1, "", "HardUpdate"], [322, 0, 1, "", "IQLLoss"], [323, 0, 1, "", "KLPENPPOLoss"], [324, 0, 1, "", "LossModule"], [325, 0, 1, "", "OnlineDTLoss"], [326, 0, 1, "", "PPOLoss"], [327, 0, 1, "", "REDQLoss"], [328, 0, 1, "", "ReinforceLoss"], [329, 0, 1, "", "SACLoss"], [330, 0, 1, "", "SoftUpdate"], [331, 0, 1, "", "TD3BCLoss"], [332, 0, 1, "", "TD3Loss"], [333, 0, 1, "", "ValueEstimators"], [334, 0, 1, "", "default_value_kwargs"], [335, 0, 1, "", "distance_loss"], [336, 0, 1, "", "hold_out_net"], [337, 0, 1, "", "hold_out_params"], [339, 0, 1, "", "next_state_value"]], "torchrl.objectives.A2CLoss": [[306, 1, 1, "", "forward"], [306, 4, 1, "", "functional"], [306, 1, 1, "", "loss_critic"], [306, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.CQLLoss": [[307, 1, 1, "", "forward"], [307, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ClipPPOLoss": [[308, 1, 1, "", "forward"]], "torchrl.objectives.CrossQLoss": [[309, 1, 1, "", "actor_loss"], [309, 1, 1, "", "alpha_loss"], [309, 1, 1, "", "forward"], [309, 1, 1, "", "load_state_dict"], [309, 1, 1, "", "make_value_estimator"], [309, 1, 1, "", "qvalue_loss"], [309, 1, 1, "", "state_dict"], [309, 4, 1, "", "target_entropy_buffer"]], "torchrl.objectives.DDPGLoss": [[310, 1, 1, "", "forward"], [310, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DQNLoss": [[311, 1, 1, "", "forward"], [311, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DTLoss": [[312, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteCQLLoss": [[313, 1, 1, "", "forward"], [313, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DiscreteIQLLoss": [[314, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteSACLoss": [[315, 1, 1, "", "forward"], [315, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DistributionalDQNLoss": [[316, 1, 1, "", "forward"], [316, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerActorLoss": [[317, 1, 1, "", "forward"], [317, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerModelLoss": [[318, 1, 1, "", "forward"]], "torchrl.objectives.DreamerValueLoss": [[319, 1, 1, "", "forward"]], "torchrl.objectives.GAILLoss": [[320, 1, 1, "", "forward"]], "torchrl.objectives.IQLLoss": [[322, 1, 1, "", "forward"], [322, 1, 1, "", "loss_value_diff"], [322, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.KLPENPPOLoss": [[323, 1, 1, "", "forward"]], "torchrl.objectives.LossModule": [[324, 1, 1, "", "convert_to_functional"], [324, 1, 1, "", "forward"], [324, 1, 1, "", "from_stateful_net"], [324, 4, 1, "", "functional"], [324, 1, 1, "", "get_stateful_net"], [324, 1, 1, "", "make_value_estimator"], [324, 1, 1, "", "named_parameters"], [324, 1, 1, "", "parameters"], [324, 1, 1, "", "set_keys"], [324, 4, 1, "", "value_estimator"], [324, 4, 1, "", "vmap_randomness"]], "torchrl.objectives.OnlineDTLoss": [[325, 1, 1, "", "forward"]], "torchrl.objectives.PPOLoss": [[326, 1, 1, "", "forward"], [326, 4, 1, "", "functional"], [326, 1, 1, "", "loss_critic"], [326, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.REDQLoss": [[327, 1, 1, "", "forward"], [327, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ReinforceLoss": [[328, 1, 1, "", "forward"], [328, 4, 1, "", "functional"], [328, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.SACLoss": [[329, 1, 1, "", "forward"], [329, 1, 1, "", "load_state_dict"], [329, 1, 1, "", "make_value_estimator"], [329, 1, 1, "", "state_dict"]], "torchrl.objectives.TD3BCLoss": [[331, 1, 1, "", "actor_loss"], [331, 1, 1, "", "forward"], [331, 1, 1, "", "make_value_estimator"], [331, 1, 1, "", "qvalue_loss"]], "torchrl.objectives.TD3Loss": [[332, 1, 1, "", "forward"], [332, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.multiagent": [[338, 0, 1, "", "QMixerLoss"]], "torchrl.objectives.multiagent.QMixerLoss": [[338, 1, 1, "", "forward"], [338, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.value": [[340, 0, 1, "", "GAE"], [341, 0, 1, "", "TD0Estimator"], [342, 0, 1, "", "TD1Estimator"], [343, 0, 1, "", "TDLambdaEstimator"], [344, 0, 1, "", "ValueEstimatorBase"]], "torchrl.objectives.value.GAE": [[340, 1, 1, "", "forward"], [340, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD0Estimator": [[341, 1, 1, "", "forward"], [341, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD1Estimator": [[342, 1, 1, "", "forward"], [342, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TDLambdaEstimator": [[343, 1, 1, "", "forward"], [343, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.ValueEstimatorBase": [[344, 1, 1, "", "forward"], [344, 1, 1, "", "set_keys"], [344, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.functional": [[345, 0, 1, "", "generalized_advantage_estimate"], [346, 0, 1, "", "reward2go"], [347, 0, 1, "", "td0_advantage_estimate"], [348, 0, 1, "", "td0_return_estimate"], [349, 0, 1, "", "td1_advantage_estimate"], [350, 0, 1, "", "td1_return_estimate"], [351, 0, 1, "", "td_lambda_advantage_estimate"], [352, 0, 1, "", "td_lambda_return_estimate"], [353, 0, 1, "", "vec_generalized_advantage_estimate"], [354, 0, 1, "", "vec_td1_advantage_estimate"], [355, 0, 1, "", "vec_td1_return_estimate"], [356, 0, 1, "", "vec_td_lambda_advantage_estimate"], [357, 0, 1, "", "vec_td_lambda_return_estimate"]], "torchrl.record": [[358, 2, 1, "", "PixelRenderTransform"], [359, 2, 1, "", "TensorDictRecorder"], [360, 2, 1, "", "VideoRecorder"]], "torchrl.record.loggers": [[361, 2, 1, "", "Logger"], [363, 2, 1, "", "generate_exp_name"], [364, 2, 1, "", "get_logger"]], "torchrl.record.loggers.csv": [[362, 2, 1, "", "CSVLogger"]], "torchrl.record.loggers.mlflow": [[365, 2, 1, "", "MLFlowLogger"]], "torchrl.record.loggers.tensorboard": [[366, 2, 1, "", "TensorboardLogger"]], "torchrl.record.loggers.wandb": [[367, 2, 1, "", "WandbLogger"]], "torchrl.trainers": [[368, 0, 1, "", "BatchSubSampler"], [369, 0, 1, "", "ClearCudaCache"], [370, 0, 1, "", "CountFramesLog"], [371, 0, 1, "", "LogReward"], [372, 0, 1, "", "OptimizerHook"], [373, 0, 1, "", "Recorder"], [374, 0, 1, "", "ReplayBufferTrainer"], [375, 0, 1, "", "RewardNormalizer"], [376, 0, 1, "", "SelectKeys"], [377, 0, 1, "", "Trainer"], [378, 0, 1, "", "TrainerHookBase"], [379, 0, 1, "", "UpdateWeights"]], "torchrl.trainers.BatchSubSampler": [[368, 1, 1, "", "register"]], "torchrl.trainers.ClearCudaCache": [[369, 1, 1, "", "register"]], "torchrl.trainers.CountFramesLog": [[370, 1, 1, "", "register"]], "torchrl.trainers.LogReward": [[371, 1, 1, "", "register"]], "torchrl.trainers.OptimizerHook": [[372, 1, 1, "", "register"]], "torchrl.trainers.Recorder": [[373, 1, 1, "", "register"]], "torchrl.trainers.ReplayBufferTrainer": [[374, 1, 1, "", "register"]], "torchrl.trainers.RewardNormalizer": [[375, 1, 1, "", "register"]], "torchrl.trainers.SelectKeys": [[376, 1, 1, "", "register"]], "torchrl.trainers.TrainerHookBase": [[378, 1, 1, "", "register"]], "torchrl.trainers.UpdateWeights": [[379, 1, 1, "", "register"]], "torchrl.trainers.helpers": [[380, 2, 1, "", "correct_for_frame_skip"], [381, 2, 1, "", "get_stats_random_rollout"], [382, 2, 1, "", "make_collector_offpolicy"], [383, 2, 1, "", "make_collector_onpolicy"], [384, 2, 1, "", "make_dqn_loss"], [385, 2, 1, "", "make_replay_buffer"], [386, 2, 1, "", "make_target_updater"], [387, 2, 1, "", "make_trainer"], [388, 2, 1, "", "parallel_env_constructor"], [389, 2, 1, "", "sync_async_collector"], [390, 2, 1, "", "sync_sync_collector"], [391, 2, 1, "", "transformed_env_constructor"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:attribute", "4": "py:property"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "property", "Python property"]}, "titleterms": {"torchrl": [0, 1, 2, 3, 6, 9, 395, 396, 397, 398, 400, 401, 402, 405, 412, 413, 414, 418, 419], "instal": [0, 6, 7, 418], "get": [0, 404, 405, 406, 407, 408, 409], "start": [0, 404, 405, 406, 407, 408, 409], "tutori": [0, 402, 412, 413], "basic": [0, 416], "intermedi": [0, 8], "advanc": 0, "refer": [0, 393], "knowledg": [0, 394], "base": [0, 2, 7, 394], "indic": 0, "tabl": 0, "collector": [1, 400, 401, 402, 403, 407, 409, 412, 413, 418], "packag": [1, 2, 3, 395, 396, 397, 398], "batch": [1, 400, 414, 416], "size": [1, 400, 416], "polici": [1, 2, 4, 400, 402, 403, 405, 409, 411, 412, 413, 414], "copi": 1, "replai": [1, 2, 400, 401, 402, 403, 407, 409, 412, 413, 416, 418], "buffer": [1, 2, 400, 401, 402, 403, 407, 409, 412, 413, 416, 418], "interoper": 1, "singl": [1, 4], "node": 1, "data": [1, 2, 4, 400, 401, 402, 407, 409, 412, 413, 418], "distribut": [1, 395], "helper": [1, 3], "function": [1, 4, 396, 401, 402, 406, 412, 413, 418], "compos": [2, 173], "support": 2, "type": 2, "choos": 2, "storag": [2, 108, 400, 407, 416], "sampl": [2, 416], "index": 2, "share": 2, "across": 2, "process": 2, "store": [2, 401, 416], "trajectori": [2, 416], "checkpoint": [2, 397], "episod": [2, 4], "format": 2, "ted": [2, 404], "The": [2, 400], "rational": 2, "behind": 2, "structur": [2, 416], "flatten": 2, "reduc": 2, "memori": 2, "consumpt": 2, "dimension": [2, 4], "tensordict": [2, 395, 416, 418], "special": [2, 405, 418], "case": 2, "footnot": 2, "multi": [2, 3, 395, 396, 411, 412, 413], "agent": [2, 3, 4, 395, 396, 412, 413], "present": 2, "rnn": 2, "transform": [2, 3, 209, 400, 402, 404, 412, 413, 414, 416, 418, 419], "step": [2, 400, 402, 404, 407, 412, 413, 416, 419], "what": [2, 5], "about": 2, "requir": 2, "dataset": 2, "tensorspec": [2, 69], "numer": 2, "subclass": 2, "categor": [2, 30], "tree": 2, "forest": 2, "reinforc": [2, 396, 402, 412, 413], "learn": [2, 4, 402, 412, 413], "from": [2, 6, 7], "human": 2, "feedback": 2, "rlhf": 2, "util": [2, 395, 396, 397, 412], "env": [3, 414, 418, 419], "vector": [3, 418], "custom": [3, 11, 414, 416], "nativ": 3, "environ": [3, 4, 6, 7, 400, 401, 402, 403, 404, 409, 411, 412, 413, 414, 418, 419], "auto": 3, "reset": [3, 414, 419], "dynam": [3, 4, 416], "spec": [3, 414, 419], "forward": [3, 4, 400], "invers": 3, "clone": [3, 7], "mask": 3, "action": [3, 4, 403, 414], "record": [3, 373, 397, 400, 408], "video": [3, 11, 408], "domain": [3, 395], "specif": [3, 395, 411], "librari": [3, 418], "thing": [4, 400, 414], "consid": 4, "when": [4, 7], "debug": 4, "rl": [4, 9, 404, 406, 418], "gener": [4, 11, 395], "have": 4, "you": 4, "valid": 4, "your": [4, 6, 400, 409, 414], "algorithm": [4, 395], "implement": 4, "few": 4, "small": 4, "toi": 4, "problem": 4, "known": 4, "optim": [4, 400, 401, 406, 409], "return": [4, 396], "e": 4, "g": 4, "gridworld": 4, "mountaincar": 4, "visual": 4, "Be": 4, "veri": 4, "care": 4, "ani": 4, "augment": 4, "doe": 4, "entropi": 4, "converg": 4, "too": [4, 8], "quickli": 4, "slowli": 4, "chang": [4, 418], "drastic": 4, "reward": 4, "beyond": 4, "go": 4, "up": [4, 6], "Is": 4, "favor": 4, "compon": 4, "i": 4, "veloc": 4, "vs": 4, "l2": 4, "magnitud": 4, "task": [4, 411], "horizon": 4, "extrem": 4, "long": 4, "ar": 4, "normal": [4, 400, 401, 402], "standard": 4, "explor": [4, 395, 400, 401, 405], "valu": [4, 395, 396, 400, 402, 403, 405], "loss": [4, 400, 401, 402, 403, 409, 412, 413], "earli": 4, "train": [4, 8, 396, 400, 402, 403, 406, 409, 412, 413, 414], "roughli": 4, "uniformli": 4, "random": [4, 396, 412, 413], "intrins": 4, "decai": 4, "progress": 4, "singleton": 4, "remain": 4, "constant": [4, 401], "increas": 4, "an": [4, 402, 403, 404, 414], "can": 4, "low": 4, "model": [4, 395, 400, 401, 403, 406, 415, 418], "also": 4, "us": [4, 6, 9, 403, 415, 416, 418], "offlin": 4, "observ": [4, 400], "space": 4, "effect": [4, 414], "dramat": 4, "dure": [4, 7], "high": 4, "work": [5, 6, 7], "gym": [5, 419], "openai": 5, "version": [5, 7, 10], "habitat": 6, "lab": 6, "set": [6, 11], "pip": [6, 7], "common": [6, 7, 8], "issu": [6, 7, 10], "mujoco": 7, "prerequisit": [7, 400], "render": [7, 11, 409, 412, 413, 419], "all": 7, "new": 7, "bindindg": 7, "2": 7, "1": 7, "old": 7, "bind": 7, "py": 7, "option": 7, "repo": [7, 9], "import": [7, 400], "pytorch": [8, 9, 10], "error": 8, "solut": 8, "gradient": 8, "relat": 8, "newcom": 8, "my": 8, "slow": 8, "bug": 8, "resourc": 9, "paper": 9, "document": 9, "functorch": 9, "blog": 9, "websit": 9, "educ": 9, "forum": 9, "how": 10, "reproduc": [10, 414], "workaround": 10, "customis": 11, "tweak": 11, "principl": 11, "exampl": [11, 401, 416], "implement_for": 12, "datacollectorbas": 13, "multisyncdatacollector": 14, "multiasyncdatacollector": 15, "syncdatacollector": 16, "asyncdatacollector": 17, "distributeddatacollector": 18, "distributedsyncdatacollector": 19, "rpcdatacollector": 20, "raycollector": 21, "submitit_delayed_launch": 22, "split_trajectori": 23, "adaptiveklcontrol": 24, "binari": 25, "binarydiscretetensorspec": 26, "binarytodecim": 27, "bound": 28, "boundedtensorspec": 29, "composit": 31, "compositespec": 32, "constantklcontrol": 33, "discretetensorspec": 34, "flat2t": 35, "h5combin": 36, "h5split": 37, "hashtoint": 38, "lazystackedcompositespec": 39, "lazystackedtensorspec": 40, "multicategor": 41, "multidiscretetensorspec": 42, "multionehot": 43, "multionehotdiscretetensorspec": 44, "multistep": 45, "nested2t": 46, "nontensor": 47, "nontensorspec": 48, "onehotdiscretetensorspec": 49, "pairwisedataset": 50, "prioritizedreplaybuff": 51, "promptdata": 52, "prompttensordicttoken": 53, "querymodul": 54, "randomprojectionhash": 55, "replaybuff": 56, "rewarddata": 57, "rolloutfrommodel": 58, "siphash": 59, "stack": 60, "stackedcomposit": 61, "ted2flat": 62, "ted2nest": 63, "tensordictmap": 64, "tensordictprioritizedreplaybuff": 65, "tensordictreplaybuff": 66, "tensordicttoken": 67, "tensormap": 68, "tokenizeddatasetload": 70, "unbound": 71, "unboundedcontinu": 72, "unboundedcontinuoustensorspec": 73, "unboundeddiscret": 74, "unboundeddiscretetensorspec": 75, "check_no_exclusive_kei": 76, "consolidate_spec": 77, "contains_lazy_spec": 78, "create_infinite_iter": 79, "ataridqnexperiencereplai": 80, "basedatasetexperiencereplai": 81, "d4rlexperiencereplai": 82, "gendgrlexperiencereplai": 83, "minariexperiencereplai": 84, "openmlexperiencereplai": 85, "openxexperiencereplai": 86, "robosetexperiencereplai": 87, "vd4rlexperiencereplai": 88, "get_dataload": 89, "flatstoragecheckpoint": 90, "h5storagecheckpoint": 91, "immutabledatasetwrit": 92, "lazymemmapstorag": 93, "lazytensorstorag": 94, "liststorag": 95, "liststoragecheckpoint": 96, "nestedstoragecheckpoint": 97, "prioritizedsampl": 98, "prioritizedslicesampl": 99, "randomsampl": 100, "replaybufferensembl": 101, "roundrobinwrit": 102, "sampler": 103, "samplerensembl": 104, "samplerwithoutreplac": 105, "slicesampl": 106, "slicesamplerwithoutreplac": 107, "storagecheckpointerbas": 109, "storageensembl": 110, "storageensemblecheckpoint": 111, "tensordictmaxvaluewrit": 112, "tensordictroundrobinwrit": 113, "tensorstorag": 114, "tensorstoragecheckpoint": 115, "writer": 116, "writerensembl": 117, "braxenv": 118, "braxwrapp": 119, "dmcontrolenv": 120, "dmcontrolwrapp": 121, "envbas": [122, 414], "envcreat": 123, "envmetadata": 124, "gymenv": 125, "gymlikeenv": 126, "gymwrapp": 127, "habitatenv": 128, "isaacgymenv": 129, "isaacgymwrapp": 130, "jumanjienv": 131, "jumanjiwrapp": 132, "mogymenv": 133, "mogymwrapp": 134, "marlgroupmaptyp": 135, "meltingpotenv": 136, "meltingpotwrapp": 137, "modelbasedenvbas": 138, "multithreadedenv": 139, "multithreadedenvwrapp": 140, "openmlenv": 141, "openspielenv": 142, "openspielwrapp": 143, "parallelenv": 144, "pendulumenv": 145, "pettingzooenv": 146, "pettingzoowrapp": 147, "robohiveenv": 148, "smacv2env": 149, "smacv2wrapp": 150, "serialenv": 151, "tictactoeenv": 152, "unitymlagentsenv": 153, "unitymlagentswrapp": 154, "vmasenv": 155, "vmaswrapp": 156, "check_marl_group": 157, "gym_backend": 158, "dreamerdecod": 159, "dreamerenv": 160, "set_gym_backend": 161, "actiondiscret": 162, "actionmask": 163, "autoresetenv": 164, "autoresettransform": 165, "batchsizetransform": 166, "binarizereward": 167, "burnintransform": 168, "catfram": [169, 416], "cattensor": 170, "centercrop": 171, "cliptransform": 172, "crop": 174, "dtypecasttransform": 175, "devicecasttransform": 176, "discreteactionproject": 177, "doubletofloat": 178, "endoflifetransform": 179, "excludetransform": 180, "finitetensordictcheck": 181, "flattenobserv": 182, "frameskiptransform": 183, "grayscal": 184, "inittrack": 185, "klrewardtransform": 186, "noopresetenv": 187, "observationnorm": 188, "observationtransform": 189, "permutetransform": 190, "pinmemorytransform": 191, "r3mtransform": 192, "randomcroptensordict": 193, "removeemptyspec": 194, "renametransform": 195, "resiz": 196, "reward2gotransform": 197, "rewardclip": 198, "rewardsc": 199, "rewardsum": 200, "selecttransform": 201, "signtransform": 202, "squeezetransform": 203, "stepcount": 204, "targetreturn": 205, "tensordictprim": 206, "timemaxpool": 207, "totensorimag": 208, "transformedenv": 210, "unsqueezetransform": 211, "vc1transform": 212, "viprewardtransform": 213, "viptransform": 214, "vecgymenvtransform": 215, "vecnorm": [216, 419], "gsdenois": 217, "multisteptransform": 218, "randompolici": 219, "check_env_spec": 220, "exploration_typ": 221, "get_available_librari": 222, "make_composite_from_td": 223, "set_exploration_typ": 224, "step_mdp": 225, "terminated_or_trunc": 226, "additivegaussianmodul": 227, "additivegaussianwrapp": 228, "batchrenorm1d": 229, "cemplann": 230, "consistentdropoutmodul": 231, "conv3dnet": 232, "convnet": 233, "dtactor": 234, "ddpgcnnactor": 235, "ddpgcnnqnet": 236, "ddpgmlpactor": 237, "ddpgmlpqnet": 238, "decisiontransform": 239, "delta": 240, "distributionaldqnnet": 241, "distributionalqvaluehook": 242, "dreameractor": 243, "duelingcnndqnet": 244, "egreedymodul": 245, "egreedywrapp": 246, "gru": 247, "grucel": 248, "grumodul": 249, "independentnorm": 250, "lstm": [251, 403], "lstmcell": 252, "lstmmodul": 253, "mlp": [254, 403], "mpcplannerbas": 255, "mppiplann": 256, "maskedcategor": 257, "maskedonehotcategor": 258, "multiagentconvnet": 259, "multiagentmlp": 260, "multiagentnetbas": 261, "noisylazylinear": 262, "noisylinear": 263, "normalparamwrapp": 264, "obsdecod": 265, "obsencod": 266, "onehotcategor": 267, "onlinedtactor": 268, "ornsteinuhlenbeckprocessmodul": 269, "ornsteinuhlenbeckprocesswrapp": 270, "qmixer": [271, 396], "qvaluehook": 272, "rssmposterior": 273, "rssmprior": 274, "squeeze2dlay": 275, "squeezelay": 276, "tanhdelta": 277, "tanhnorm": 278, "truncatednorm": 279, "vdnmixer": 280, "vmapmodul": 281, "reset_nois": 282, "actor": [283, 395, 400, 405], "actorcriticoper": 284, "actorcriticwrapp": 285, "actorvalueoper": 286, "decisiontransformerinferencewrapp": 287, "distributionalqvalueactor": 288, "distributionalqvaluemodul": 289, "lmheadactorvalueoper": 290, "multistepactorwrapp": 291, "probabilisticactor": 292, "qvalueactor": 293, "qvaluemodul": 294, "safemodul": [295, 395], "safeprobabilisticmodul": 296, "safeprobabilistictensordictsequenti": 297, "safesequenti": 298, "tanhmodul": 299, "valueoper": 300, "worldmodelwrapp": 301, "biased_softplu": 302, "get_primers_from_modul": 303, "inv_softplu": 304, "map": [305, 412], "a2closs": 306, "cqlloss": 307, "clipppoloss": 308, "crossqloss": 309, "ddpgloss": 310, "dqnloss": 311, "dtloss": 312, "discretecqlloss": 313, "discreteiqlloss": 314, "discretesacloss": 315, "distributionaldqnloss": 316, "dreameractorloss": 317, "dreamermodelloss": 318, "dreamervalueloss": 319, "gailloss": 320, "hardupd": 321, "iqlloss": 322, "klpenppoloss": 323, "lossmodul": [324, 400, 406], "onlinedtloss": 325, "ppoloss": 326, "redqloss": 327, "reinforceloss": 328, "sacloss": 329, "softupd": 330, "td3bcloss": 331, "td3loss": 332, "valueestim": 333, "default_value_kwarg": 334, "distance_loss": 335, "hold_out_net": 336, "hold_out_param": 337, "qmixerloss": 338, "next_state_valu": 339, "gae": 340, "td0estim": 341, "td1estim": 342, "tdlambdaestim": 343, "valueestimatorbas": 344, "generalized_advantage_estim": 345, "reward2go": 346, "td0_advantage_estim": 347, "td0_return_estim": 348, "td1_advantage_estim": 349, "td1_return_estim": 350, "td_lambda_advantage_estim": 351, "td_lambda_return_estim": 352, "vec_generalized_advantage_estim": 353, "vec_td1_advantage_estim": 354, "vec_td1_return_estim": 355, "vec_td_lambda_advantage_estim": 356, "vec_td_lambda_return_estim": 357, "pixelrendertransform": 358, "tensordictrecord": 359, "videorecord": 360, "logger": [361, 397, 408, 409], "csvlogger": 362, "generate_exp_nam": 363, "get_logg": 364, "mlflowlogg": 365, "tensorboardlogg": 366, "wandblogg": 367, "batchsubsampl": 368, "clearcudacach": 369, "countframeslog": 370, "logreward": 371, "optimizerhook": 372, "replaybuffertrain": 374, "rewardnorm": 375, "selectkei": 376, "trainer": [377, 397, 401], "trainerhookbas": 378, "updateweight": 379, "correct_for_frame_skip": 380, "get_stats_random_rollout": 381, "make_collector_offpolici": 382, "make_collector_onpolici": 383, "make_dqn_loss": 384, "make_replay_buff": 385, "make_target_updat": 386, "make_train": 387, "parallel_env_constructor": 388, "sync_async_collector": 389, "sync_sync_collector": 390, "transformed_env_constructor": 391, "readm": [392, 410], "tuto": [392, 410], "api": 393, "contribut": [394, 418], "content": 394, "modul": [395, 400, 403, 405, 409, 418], "tensordictmodul": [395, 405, 418], "wrapper": [395, 405], "probabilist": [395, 405], "q": [395, 401, 403, 405], "oper": 395, "join": 395, "hook": [395, 397, 401], "regular": 395, "planner": 395, "object": [396, 400, 406, 418], "torch": 396, "vmap": 396, "dqn": [396, 401, 403], "ddpg": [396, 400, 412], "sac": 396, "redq": 396, "crossq": 396, "iql": 396, "cql": 396, "gail": 396, "dt": 396, "td3": 396, "bc": 396, "ppo": [396, 402, 413], "a2c": 396, "dreamer": 396, "builder": 397, "_util": 398, "comput": [399, 401, 414, 417], "time": [399, 400, 417], "code": [400, 414], "overview": [400, 403], "setup": [400, 403], "__init__": 400, "method": 400, "estim": 400, "put": 400, "togeth": [400, 414], "call": 400, "parallel": [400, 411, 419], "execut": [400, 411, 414], "stat": 400, "build": [400, 401, 409, 416], "evalu": 400, "construct": 400, "target": [400, 401, 406], "network": [400, 401, 402, 403, 405, 412, 413], "updat": 400, "experi": [400, 414], "result": [400, 402, 412, 413], "conclus": [400, 401, 402, 403, 412, 413, 414, 416], "next": [400, 402, 404, 407, 412, 413, 416], "A": [401, 416], "deep": 401, "collect": [401, 402, 407], "paramet": [401, 402, 406], "hyperparamet": [401, 402, 412, 413], "regist": 401, "possibl": 401, "improv": 401, "defin": [402, 412, 413], "loop": [402, 403, 409, 412, 413, 414], "recurr": 403, "convolut": 403, "select": 403, "further": [403, 406], "read": 403, "creat": 404, "run": [404, 419], "rollout": [404, 411, 412, 413, 414, 419], "s": [405, 406], "output": 406, "consider": 406, "log": 408, "own": 409, "first": 409, "design": 409, "divers": 411, "competit": 412, "group": 412, "critic": [412, 413], "pendulum": 414, "write": 414, "_step": 414, "simul": 414, "_reset": 414, "metadata": 414, "_spec": 414, "shape": 414, "seed": [414, 419], "wrap": 414, "class": [414, 418], "test": 414, "our": 414, "simpl": 414, "pretrain": 415, "vanilla": 416, "integr": 416, "tensorclass": 416, "other": 416, "tensor": 416, "pytre": 416, "iter": 416, "over": 416, "fix": 416, "priorit": 416, "save": 416, "raw": 416, "imag": 416, "more": 416, "complex": 416, "introduct": 418, "config": 418, "sequenc": 418, "program": 418, "ensembl": 418, "meta": 418, "state": 418, "frame_skip": 419, "deepmind": 419, "control": 419, "devic": 419, "close": 419, "access": 419, "attribut": 419, "kwarg": 419}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 56}})